ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB783:
  61              	.LBI783:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE783:
  66              	.LBB784:
  67              	.LBI784:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE784:
  72              	.LBB785:
  73              	.LBI785:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE785:
  78              	.LBB786:
  79              	.LBI786:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE786:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         bool tapflag_;
  37:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  38:taptempo.h    **** 
  39:taptempo.h    ****     public:
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 14


  41:taptempo.h    ****     Taptempo()  //default constructor
  42:taptempo.h    ****     {
  43:taptempo.h    ****         tapflag_ = false;
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
  45:taptempo.h    ****         maxtap_ = 2000;
  46:taptempo.h    ****         mintap_ = 80;
  47:taptempo.h    ****         lastTapLength_ = 0;
  48:taptempo.h    ****         tempo_ = 500.0f;
  49:taptempo.h    ****         lastTime_ = 0;
  50:taptempo.h    ****         currentTime_ = 0;
  51:taptempo.h    ****         tapRatio_ = 1.0f;
  52:taptempo.h    **** 
  53:taptempo.h    ****     }
  54:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 54 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 54 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3953:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 15


  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** 
  29:LEDs.h        **** using namespace daisysp;
  30:LEDs.h        **** using namespace daisy;
  31:LEDs.h        **** 
  32:LEDs.h        **** class TempoLED
  33:LEDs.h        **** {
  34:LEDs.h        **** 
  35:LEDs.h        **** Led led;
  36:LEDs.h        **** Oscillator blink;
  37:LEDs.h        **** 
  38:LEDs.h        **** public:
  39:LEDs.h        **** 
  40:LEDs.h        **** TempoLED(){}
  41:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 41 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB787:
 285              	.LBI787:
 286              		.loc 8 16 5 view .LVU27
 287              		.loc 8 16 5 is_stmt 0 view .LVU28
 288              	.LBE787:
 289              	.LBB788:
 290              	.LBI788:
 291              		.file 15 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 16


  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 292              		.loc 15 25 5 is_stmt 1 view .LVU29
 293              		.loc 15 25 5 is_stmt 0 view .LVU30
 294              	.LBE788:
 295              		.loc 14 41 13 view .LVU31
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE3953:
 300              		.weak	_ZN8TempoLEDD1Ev
 301              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 302 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 303              		.align	1
 304              		.p2align 2,,3
 305              		.weak	_ZN9ButtonLEDD2Ev
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	_ZN9ButtonLEDD2Ev:
 312              	.LVL10:
 313              	.LFB3959:
  42:LEDs.h        **** 
  43:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  44:LEDs.h        **** 
  45:LEDs.h        **** void setTempo(float tempo);
  46:LEDs.h        **** 
  47:LEDs.h        **** void resetPhase();
  48:LEDs.h        **** 
  49:LEDs.h        **** void update();
  50:LEDs.h        **** 
  51:LEDs.h        **** void LED_set(float brightness);
  52:LEDs.h        **** 
  53:LEDs.h        **** bool isEOC();
  54:LEDs.h        **** 
  55:LEDs.h        **** };
  56:LEDs.h        **** 
  57:LEDs.h        **** class ButtonLED    //button with status LED
  58:LEDs.h        **** {
  59:LEDs.h        ****     public:
  60:LEDs.h        ****     ButtonLED() {}
  61:LEDs.h        ****     ~ButtonLED() {}
 314              		.loc 14 61 5 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LBB789:
 320              	.LBI789:
 321              		.loc 15 25 5 view .LVU33
 322              		.loc 15 25 5 is_stmt 0 view .LVU34
 323              	.LBE789:
 324              	.LBB790:
 325              	.LBI790:
 326              		.loc 1 41 5 is_stmt 1 view .LVU35
 327              		.loc 1 41 5 is_stmt 0 view .LVU36
 328              	.LBE790:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 17


 329              		.loc 14 61 19 view .LVU37
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE3959:
 334              		.weak	_ZN9ButtonLEDD1Ev
 335              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 336 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN10DelayMultiD2Ev
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	_ZN10DelayMultiD2Ev:
 346              	.LVL11:
 347              	.LFB3965:
 348              		.file 16 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 18


  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 349              		.loc 16 50 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LBB791:
 355              	.LBI791:
  41:LEDs.h        **** 
 356              		.loc 14 41 1 view .LVU39
 357              	.LBB792:
 358              	.LBI792:
 359              		.loc 8 16 5 view .LVU40
 360              		.loc 8 16 5 is_stmt 0 view .LVU41
 361              	.LBE792:
 362              	.LBB793:
 363              	.LBI793:
 364              		.loc 15 25 5 is_stmt 1 view .LVU42
 365              		.loc 15 25 5 is_stmt 0 view .LVU43
 366              	.LBE793:
 367              	.LBE791:
 368              		.loc 16 50 16 view .LVU44
 369 0000 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE3965:
 373              		.weak	_ZN10DelayMultiD1Ev
 374              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 375 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 376              		.align	1
 377              		.p2align 2,,3
 378              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 385              	.LVL12:
 386              	.LFB4891:
 387              		.file 17 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 19


   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 388              		.loc 17 52 5 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              		.loc 17 52 27 is_stmt 0 view .LVU46
 394 0000 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE4891:
 398              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 399              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 400 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 401              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 20


 402              		.p2align 2,,3
 403              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv5-d16
 409              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 410              	.LVL13:
 411              	.LFB4894:
 412              		.file 18 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 413              		.loc 18 39 5 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              		.loc 18 39 26 is_stmt 0 view .LVU48
 419 0000 7047     		bx	lr
 420              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 21


 421              	.LFE4894:
 423              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 424              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 425 0002 00BF     		.section	.text._Z16checkPickupStateff11pickupStateb.part.0,"ax",%progbits
 426              		.align	1
 427              		.p2align 2,,3
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv5-d16
 433              	_Z16checkPickupStateff11pickupStateb.part.0:
 434              	.LVL14:
 435              	.LFB4910:
 436              		.file 19 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 22


  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 23


 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV;
 107:Veno-Echo.cpp **** float delayTimeR_CV;
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** bool delayL_flag{true};
 143:Veno-Echo.cpp **** bool delayR_flag{true};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
 157:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 24


 158:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 163:Veno-Echo.cpp **** 
 164:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 169:Veno-Echo.cpp **** 
 170:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** //Gate inputs
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Switch TapButton;
 182:Veno-Echo.cpp **** Switch Sync;
 183:Veno-Echo.cpp **** Switch ClockIn;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Tap tempo
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f
 203:Veno-Echo.cpp **** };
 204:Veno-Echo.cpp **** 
 205:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 206:Veno-Echo.cpp **** void Update_DelayTimeL();
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeR();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_feedbackL_CV();
 212:Veno-Echo.cpp **** void Update_feedbackL();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_feedbackR_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 25


 215:Veno-Echo.cpp **** void Update_feedbackR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_drywet_CV();
 218:Veno-Echo.cpp **** void Update_drywet();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_width_CV();
 221:Veno-Echo.cpp **** void Update_width();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_crossfeedback();
 224:Veno-Echo.cpp **** void Update_filterXfade();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_Buttons();
 227:Veno-Echo.cpp **** void Update_BaseTempoLED();
 228:Veno-Echo.cpp **** void Update_Mod();
 229:Veno-Echo.cpp **** void GetModCV();
 230:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 231:Veno-Echo.cpp **** void UpdateClock();
 232:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 233:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 234:Veno-Echo.cpp **** void TurnOnAllLEDs();
 235:Veno-Echo.cpp **** void ResetAllLEDs();
 236:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 237:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 238:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 239:Veno-Echo.cpp **** 
 240:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 241:Veno-Echo.cpp **** {
 242:Veno-Echo.cpp **** 
 243:Veno-Echo.cpp **** /*
 244:Veno-Echo.cpp **** static uint32_t funcLength{};
 245:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 246:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 247:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 248:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** */
 251:Veno-Echo.cpp **** 
 252:Veno-Echo.cpp **** static int Counter{};
 253:Veno-Echo.cpp **** 
 254:Veno-Echo.cpp **** /*
 255:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 256:Veno-Echo.cpp **** 
 257:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 258:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 259:Veno-Echo.cpp ****     {
 260:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 261:Veno-Echo.cpp ****     }
 262:Veno-Echo.cpp **** 
 263:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 264:Veno-Echo.cpp ****     {
 265:Veno-Echo.cpp ****         minFuncLength = funcLength;
 266:Veno-Echo.cpp ****     }
 267:Veno-Echo.cpp **** 
 268:Veno-Echo.cpp **** */
 269:Veno-Echo.cpp **** 
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 271:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 26


 272:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 273:Veno-Echo.cpp **** {
 274:Veno-Echo.cpp ****     /*
 275:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 276:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 277:Veno-Echo.cpp ****         //init timeofCall as current time
 278:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 279:Veno-Echo.cpp **** 
 280:Veno-Echo.cpp ****         //wait for random Dither time
 281:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 282:Veno-Echo.cpp ****         {}
 283:Veno-Echo.cpp ****     */
 284:Veno-Echo.cpp **** 
 285:Veno-Echo.cpp ****         switch (Counter)
 286:Veno-Echo.cpp ****         {
 287:Veno-Echo.cpp ****             case 0:
 288:Veno-Echo.cpp ****                 Update_Buttons();
 289:Veno-Echo.cpp ****                 GetModCV();
 290:Veno-Echo.cpp ****             break;
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****             case 1:
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 294:Veno-Echo.cpp ****             break;
 295:Veno-Echo.cpp **** 
 296:Veno-Echo.cpp ****             case 2:
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 298:Veno-Echo.cpp ****             break;
 299:Veno-Echo.cpp **** 
 300:Veno-Echo.cpp ****             case 3:
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 302:Veno-Echo.cpp ****             break;
 303:Veno-Echo.cpp **** 
 304:Veno-Echo.cpp ****             case 4:
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 306:Veno-Echo.cpp ****             break;
 307:Veno-Echo.cpp **** 
 308:Veno-Echo.cpp ****             case 5:
 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 6:
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 314:Veno-Echo.cpp ****             break;
 315:Veno-Echo.cpp **** 
 316:Veno-Echo.cpp ****             case 7:
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 318:Veno-Echo.cpp ****             break;
 319:Veno-Echo.cpp **** 
 320:Veno-Echo.cpp ****             case 8:
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 322:Veno-Echo.cpp ****             break;
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 9:
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 326:Veno-Echo.cpp ****             break;
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****             case 10:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 27


 329:Veno-Echo.cpp ****                 Update_drywet();
 330:Veno-Echo.cpp ****             break;
 331:Veno-Echo.cpp **** 
 332:Veno-Echo.cpp ****             case 11:
 333:Veno-Echo.cpp ****                 Update_width_CV();
 334:Veno-Echo.cpp ****             break;
 335:Veno-Echo.cpp **** 
 336:Veno-Echo.cpp ****             case 12:
 337:Veno-Echo.cpp ****                 Update_width();
 338:Veno-Echo.cpp ****             break;
 339:Veno-Echo.cpp **** 
 340:Veno-Echo.cpp ****             case 13:
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 342:Veno-Echo.cpp ****             break;
 343:Veno-Echo.cpp **** 
 344:Veno-Echo.cpp ****             case 14:
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 346:Veno-Echo.cpp ****             break;
 347:Veno-Echo.cpp ****         }
 348:Veno-Echo.cpp **** }
 349:Veno-Echo.cpp **** 
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 351:Veno-Echo.cpp ****     {   
 352:Veno-Echo.cpp ****         UpdateClock(); 
 353:Veno-Echo.cpp ****         Update_Mod();
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 357:Veno-Echo.cpp ****         
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 360:Veno-Echo.cpp **** 
 361:Veno-Echo.cpp ****         //set xfade positions      
 362:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 364:Veno-Echo.cpp ****         
 365:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 369:Veno-Echo.cpp **** 
 370:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 374:Veno-Echo.cpp **** 
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 377:Veno-Echo.cpp **** 
 378:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 380:Veno-Echo.cpp **** 
 381:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 384:Veno-Echo.cpp **** 
 385:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 28


 386:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 389:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 390:Veno-Echo.cpp **** 
 391:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 394:Veno-Echo.cpp **** 
 395:Veno-Echo.cpp ****         //Get combined output from all delay heads
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 399:Veno-Echo.cpp ****         Update_BaseTempoLED();
 400:Veno-Echo.cpp **** 
 401:Veno-Echo.cpp ****         //hard limit
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 404:Veno-Echo.cpp **** 
 405:Veno-Echo.cpp **** if(!PostFilters)
 406:Veno-Echo.cpp **** {
 407:Veno-Echo.cpp **** //****************************************************************************************
 408:Veno-Echo.cpp ****         //pre filters
 409:Veno-Echo.cpp ****         //process LPF
 410:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 413:Veno-Echo.cpp **** 
 414:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 417:Veno-Echo.cpp ****         
 418:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 421:Veno-Echo.cpp **** 
 422:Veno-Echo.cpp ****         //hard limit
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 425:Veno-Echo.cpp **** 
 426:Veno-Echo.cpp ****         //process HPF
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 429:Veno-Echo.cpp **** 
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 432:Veno-Echo.cpp **** 
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 437:Veno-Echo.cpp **** 
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 440:Veno-Echo.cpp **** 
 441:Veno-Echo.cpp **** //****************************************************************************************
 442:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 29


 443:Veno-Echo.cpp **** 
 444:Veno-Echo.cpp **** else
 445:Veno-Echo.cpp **** {
 446:Veno-Echo.cpp ****     /* code */
 447:Veno-Echo.cpp **** }
 448:Veno-Echo.cpp **** 
 449:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 450:Veno-Echo.cpp ****         static float RNegFB{};
 451:Veno-Echo.cpp **** 
 452:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 455:Veno-Echo.cpp ****         
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 458:Veno-Echo.cpp **** 
 459:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 461:Veno-Echo.cpp **** 
 462:Veno-Echo.cpp ****         //crossfeedback:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 465:Veno-Echo.cpp **** 
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         //get envelopes for feedback signals
 468:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 475:Veno-Echo.cpp ****             else LNegFB = 0.0;
 476:Veno-Echo.cpp ****             
 477:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 480:Veno-Echo.cpp **** 
 481:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 482:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 484:Veno-Echo.cpp ****  
 485:Veno-Echo.cpp ****         //hard limit
 486:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 488:Veno-Echo.cpp **** 
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 491:Veno-Echo.cpp **** 
 492:Veno-Echo.cpp ****         // floats for wet dry mix
 493:Veno-Echo.cpp ****         float mixL;
 494:Veno-Echo.cpp ****         float mixR;
 495:Veno-Echo.cpp **** 
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 498:Veno-Echo.cpp **** 
 499:Veno-Echo.cpp ****         //hard limit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 30


 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 502:Veno-Echo.cpp **** 
 503:Veno-Echo.cpp **** if(PostFilters)
 504:Veno-Echo.cpp **** {
 505:Veno-Echo.cpp ****     //****************************************************************************************
 506:Veno-Echo.cpp ****         //post filters
 507:Veno-Echo.cpp ****         //process LPF
 508:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 511:Veno-Echo.cpp **** 
 512:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 515:Veno-Echo.cpp ****         
 516:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 519:Veno-Echo.cpp **** 
 520:Veno-Echo.cpp ****         //hard limit
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 523:Veno-Echo.cpp **** 
 524:Veno-Echo.cpp ****         //process HPF
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 527:Veno-Echo.cpp **** 
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 530:Veno-Echo.cpp **** 
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 537:Veno-Echo.cpp **** 
 538:Veno-Echo.cpp ****     //****************************************************************************************
 539:Veno-Echo.cpp **** }
 540:Veno-Echo.cpp **** else
 541:Veno-Echo.cpp **** {
 542:Veno-Echo.cpp ****     /* code */
 543:Veno-Echo.cpp **** }
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 545:Veno-Echo.cpp ****         {
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 548:Veno-Echo.cpp ****         }
 549:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 550:Veno-Echo.cpp ****         {
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 553:Veno-Echo.cpp ****         }
 554:Veno-Echo.cpp ****         else
 555:Veno-Echo.cpp ****         {
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 31


 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 558:Veno-Echo.cpp ****         }
 559:Veno-Echo.cpp **** 
 560:Veno-Echo.cpp ****         //send mixes to outputs
 561:Veno-Echo.cpp ****         if(mute)
 562:Veno-Echo.cpp ****         {
 563:Veno-Echo.cpp ****             out[i] = 0.0f;
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 565:Veno-Echo.cpp ****         }
 566:Veno-Echo.cpp ****         else
 567:Veno-Echo.cpp ****         {
 568:Veno-Echo.cpp ****             out[i] = mixL;
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 570:Veno-Echo.cpp ****         }
 571:Veno-Echo.cpp **** 
 572:Veno-Echo.cpp ****         //write to DAC for debug
 573:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 574:Veno-Echo.cpp **** 
 575:Veno-Echo.cpp ****     }
 576:Veno-Echo.cpp **** 
 577:Veno-Echo.cpp **** }
 578:Veno-Echo.cpp **** 
 579:Veno-Echo.cpp **** void InitDelays(float samplerate)
 580:Veno-Echo.cpp **** {
 581:Veno-Echo.cpp **** 
 582:Veno-Echo.cpp ****     //Init fwd delays
 583:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 584:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 585:Veno-Echo.cpp **** 
 586:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 587:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 589:Veno-Echo.cpp **** 
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 592:Veno-Echo.cpp **** 
 593:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 595:Veno-Echo.cpp **** 
 596:Veno-Echo.cpp ****     //Init rev delays
 597:Veno-Echo.cpp ****     delMemsL_REV.Init();
 598:Veno-Echo.cpp ****     delMemsR_REV.Init();
 599:Veno-Echo.cpp **** 
 600:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 603:Veno-Echo.cpp **** 
 604:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 605:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 606:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 607:Veno-Echo.cpp **** 
 608:Veno-Echo.cpp **** }
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp **** int main(void)
 611:Veno-Echo.cpp **** {
 612:Veno-Echo.cpp ****     // initialize hardware.
 613:Veno-Echo.cpp ****     hw.Configure();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 32


 614:Veno-Echo.cpp ****     hw.Init();
 615:Veno-Echo.cpp ****     
 616:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 617:Veno-Echo.cpp **** 
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 623:Veno-Echo.cpp **** 
 624:Veno-Echo.cpp ****     //Gates
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 627:Veno-Echo.cpp **** 
 628:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 631:Veno-Echo.cpp ****     
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 637:Veno-Echo.cpp **** 
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 643:Veno-Echo.cpp **** 
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 649:Veno-Echo.cpp **** 
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 655:Veno-Echo.cpp **** 
 656:Veno-Echo.cpp ****     // set params for CrossFade objects
 657:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 661:Veno-Echo.cpp **** 
 662:Veno-Echo.cpp ****     WidthXfade.Init();
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 664:Veno-Echo.cpp **** 
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 666:Veno-Echo.cpp **** 
 667:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 668:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 33


 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 672:Veno-Echo.cpp **** 
 673:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 677:Veno-Echo.cpp **** 
 678:Veno-Echo.cpp ****     //setup L and R High Pass filters
 679:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 683:Veno-Echo.cpp **** 
 684:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 688:Veno-Echo.cpp **** 
 689:Veno-Echo.cpp ****     //post filters
 690:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 694:Veno-Echo.cpp **** 
 695:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 699:Veno-Echo.cpp **** 
 700:Veno-Echo.cpp ****     //setup L and R High Pass filters
 701:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 705:Veno-Echo.cpp **** 
 706:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 710:Veno-Echo.cpp **** 
 711:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 713:Veno-Echo.cpp **** 
 714:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 715:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp **** 
 721:Veno-Echo.cpp ****     //timers: used to limit time between updates to delay time parameters
 722:Veno-Echo.cpp ****     //dsy_tim_init(); //start timer
 723:Veno-Echo.cpp ****     //dsy_tim_start();
 724:Veno-Echo.cpp **** 
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 726:Veno-Echo.cpp **** 
 727:Veno-Echo.cpp ****     //setup tempo indicators
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 34


 728:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 732:Veno-Echo.cpp **** 
 733:Veno-Echo.cpp ****     //load settings from flash
 734:Veno-Echo.cpp **** 
 735:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 736:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 738:Veno-Echo.cpp **** 
 739:Veno-Echo.cpp ****     //initialize DAC
 740:Veno-Echo.cpp ****     //dsy_dac_init(&hw.dac_handle, DSY_DAC_CHN_BOTH);
 741:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN1, 0);
 742:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN2, 0);
 743:Veno-Echo.cpp **** 
 744:Veno-Echo.cpp ****     //ADC
 745:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 746:Veno-Echo.cpp **** 
 747:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 754:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 756:Veno-Echo.cpp **** 
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 759:Veno-Echo.cpp ****     hw.adc.Start();
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 762:Veno-Echo.cpp ****     // start audio callback
 763:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****     
 766:Veno-Echo.cpp **** 
 767:Veno-Echo.cpp ****      for(;;)
 768:Veno-Echo.cpp ****      {
 769:Veno-Echo.cpp **** 
 770:Veno-Echo.cpp **** /*
 771:Veno-Echo.cpp ****         if(save_flag)
 772:Veno-Echo.cpp ****         {
 773:Veno-Echo.cpp **** 
 774:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 775:Veno-Echo.cpp ****             {
 776:Veno-Echo.cpp ****                 //reset flag
 777:Veno-Echo.cpp ****                 //System::Delay(1000);
 778:Veno-Echo.cpp ****                 save_flag = false;
 779:Veno-Echo.cpp ****             }
 780:Veno-Echo.cpp ****         }
 781:Veno-Echo.cpp **** 
 782:Veno-Echo.cpp **** */
 783:Veno-Echo.cpp ****      }
 784:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 35


 785:Veno-Echo.cpp **** }
 786:Veno-Echo.cpp **** 
 787:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 788:Veno-Echo.cpp **** {
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 790:Veno-Echo.cpp **** }
 791:Veno-Echo.cpp **** 
 792:Veno-Echo.cpp **** //samples ADC's and updates parameters. 
 793:Veno-Echo.cpp **** //Delay time controls only update if thresholds for delta and time since last change are exceeded.
 794:Veno-Echo.cpp **** void Update_DelayTimeL()
 795:Veno-Echo.cpp **** {
 796:Veno-Echo.cpp ****     static bool lastShift{};
 797:Veno-Echo.cpp ****     static pickupState delayTimeL_pickup{};
 798:Veno-Echo.cpp ****     static pickupState Rev_DelayTime_pickup{};
 799:Veno-Echo.cpp ****     
 800:Veno-Echo.cpp ****     static float delayTimeL_Pot_Last{};
 801:Veno-Echo.cpp ****     static float Rev_DelayTime_last{};
 802:Veno-Echo.cpp **** 
 803:Veno-Echo.cpp ****     //update pot values
 804:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 805:Veno-Echo.cpp **** 
 806:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 807:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 808:Veno-Echo.cpp ****     static int counterL{};
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 810:Veno-Echo.cpp **** 
 811:Veno-Echo.cpp ****     if (!shift) //default control
 812:Veno-Echo.cpp ****     {
 813:Veno-Echo.cpp ****         //udpate pickup
 814:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 815:Veno-Echo.cpp ****         {
 816:Veno-Echo.cpp ****             lastShift = shift;
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 818:Veno-Echo.cpp ****         } 
 819:Veno-Echo.cpp ****         else    //not a default shift change
 820:Veno-Echo.cpp ****         {
 821:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 822:Veno-Echo.cpp ****         }
 823:Veno-Echo.cpp **** 
 824:Veno-Echo.cpp ****         float delayTimeL{};
 825:Veno-Echo.cpp **** 
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup == PICKEDUP)
 827:Veno-Echo.cpp ****     {
 828:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 829:Veno-Echo.cpp ****         delayTimeL_Pot_Last = delayTimeL_Pot; //update last value
 830:Veno-Echo.cpp ****     }
 831:Veno-Echo.cpp **** 
 832:Veno-Echo.cpp ****     else
 833:Veno-Echo.cpp ****     {
 834:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot_Last,delayTimeL_CV); //combine last pot value and CV
 835:Veno-Echo.cpp ****     }
 836:Veno-Echo.cpp **** 
 837:Veno-Echo.cpp ****     if (!syncMode)
 838:Veno-Echo.cpp ****     {
 839:Veno-Echo.cpp ****         if (counterL == 0)
 840:Veno-Echo.cpp ****         {
 841:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 36


 842:Veno-Echo.cpp ****         }
 843:Veno-Echo.cpp ****     }
 844:Veno-Echo.cpp ****     else    //syncmode
 845:Veno-Echo.cpp ****     {
 846:Veno-Echo.cpp **** 
 847:Veno-Echo.cpp ****         if (counterL == 0)
 848:Veno-Echo.cpp ****         {
 849:Veno-Echo.cpp ****             //float div_L_Input{DelayTimeL};
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 851:Veno-Echo.cpp ****             {
 852:Veno-Echo.cpp ****                 delayL_flag = true;
 853:Veno-Echo.cpp ****             }
 854:Veno-Echo.cpp ****         }
 855:Veno-Echo.cpp ****     }
 856:Veno-Echo.cpp **** }   //not shift mode
 857:Veno-Echo.cpp **** 
 858:Veno-Echo.cpp **** else    //shift mode
 859:Veno-Echo.cpp **** {
 860:Veno-Echo.cpp ****         
 861:Veno-Echo.cpp ****     if (shift != lastShift) //recent shift change
 862:Veno-Echo.cpp ****     {
 863:Veno-Echo.cpp ****         lastShift = shift;
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 865:Veno-Echo.cpp ****     }
 866:Veno-Echo.cpp **** 
 867:Veno-Echo.cpp ****     else    //not a recent shift change
 868:Veno-Echo.cpp ****     {
 869:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 870:Veno-Echo.cpp ****     }
 871:Veno-Echo.cpp **** 
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 873:Veno-Echo.cpp ****     {
 874:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 875:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 876:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 877:Veno-Echo.cpp ****         //save setting:
 878:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 879:Veno-Echo.cpp ****         Rev_DelayTime_last = delayTimeL_Pot; //update last value
 880:Veno-Echo.cpp ****     }
 881:Veno-Echo.cpp **** }
 882:Veno-Echo.cpp ****     
 883:Veno-Echo.cpp **** }
 884:Veno-Echo.cpp **** 
 885:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 886:Veno-Echo.cpp **** {
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 888:Veno-Echo.cpp **** }
 889:Veno-Echo.cpp **** 
 890:Veno-Echo.cpp **** void Update_DelayTimeR()
 891:Veno-Echo.cpp **** {
 892:Veno-Echo.cpp ****     static bool lastShift{};
 893:Veno-Echo.cpp ****     static pickupState delayTimeR_pickup{};
 894:Veno-Echo.cpp ****     static pickupState tapRatio_pickup{};
 895:Veno-Echo.cpp ****     
 896:Veno-Echo.cpp ****     static float delayTimeR_Pot_Last{};
 897:Veno-Echo.cpp ****     static float tapRatio_last{};
 898:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 37


 899:Veno-Echo.cpp ****     //update pot values
 900:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 901:Veno-Echo.cpp **** 
 902:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 903:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 904:Veno-Echo.cpp ****     static int counterR{};
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 906:Veno-Echo.cpp **** 
 907:Veno-Echo.cpp ****     if (!shift) //default control
 908:Veno-Echo.cpp ****     {
 909:Veno-Echo.cpp ****         //udpate pickup
 910:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 911:Veno-Echo.cpp ****         {
 912:Veno-Echo.cpp ****             lastShift = shift;
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 914:Veno-Echo.cpp ****         } 
 915:Veno-Echo.cpp ****         else    //not a default shift change
 916:Veno-Echo.cpp ****         {
 917:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 918:Veno-Echo.cpp ****         }
 919:Veno-Echo.cpp **** 
 920:Veno-Echo.cpp ****         float delayTimeR{};
 921:Veno-Echo.cpp **** 
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup == PICKEDUP)
 923:Veno-Echo.cpp ****         {
 924:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 925:Veno-Echo.cpp ****             delayTimeR_Pot_Last = delayTimeR_Pot;
 926:Veno-Echo.cpp ****         }
 927:Veno-Echo.cpp **** 
 928:Veno-Echo.cpp ****         else
 929:Veno-Echo.cpp ****         {
 930:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot_Last,delayTimeR_CV);
 931:Veno-Echo.cpp ****         }
 932:Veno-Echo.cpp **** 
 933:Veno-Echo.cpp ****         if (!syncMode)
 934:Veno-Echo.cpp ****         {
 935:Veno-Echo.cpp ****             if (counterR == 0)
 936:Veno-Echo.cpp ****             {
 937:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 938:Veno-Echo.cpp ****             }
 939:Veno-Echo.cpp **** 
 940:Veno-Echo.cpp ****         }
 941:Veno-Echo.cpp ****         else    //syncmode
 942:Veno-Echo.cpp ****         {
 943:Veno-Echo.cpp ****             if (counterR == 0)
 944:Veno-Echo.cpp ****             {
 945:Veno-Echo.cpp ****                 //float div_R_Input{1.0f - delayTimeR}; //invert pot range
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 947:Veno-Echo.cpp ****                 {
 948:Veno-Echo.cpp ****                     delayR_flag = true;
 949:Veno-Echo.cpp ****                 }
 950:Veno-Echo.cpp ****             }
 951:Veno-Echo.cpp ****         }
 952:Veno-Echo.cpp ****     }   //not shift mode
 953:Veno-Echo.cpp **** 
 954:Veno-Echo.cpp ****     else    //shift mode
 955:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 38


 956:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 957:Veno-Echo.cpp ****         {
 958:Veno-Echo.cpp ****             lastShift = shift;
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
 960:Veno-Echo.cpp ****         }
 961:Veno-Echo.cpp **** 
 962:Veno-Echo.cpp ****         else    //not a recent shift change
 963:Veno-Echo.cpp ****         {
 964:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,false);
 965:Veno-Echo.cpp ****         }
 966:Veno-Echo.cpp **** 
 967:Veno-Echo.cpp ****         if(tapRatio_pickup == PICKEDUP)
 968:Veno-Echo.cpp ****         {
 969:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 972:Veno-Echo.cpp ****             //save setting:
 973:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 974:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 975:Veno-Echo.cpp ****         }
 976:Veno-Echo.cpp ****     }
 977:Veno-Echo.cpp ****     
 978:Veno-Echo.cpp **** }
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 980:Veno-Echo.cpp **** {
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 982:Veno-Echo.cpp **** }
 983:Veno-Echo.cpp **** void Update_feedbackL()
 984:Veno-Echo.cpp **** {
 985:Veno-Echo.cpp ****     static bool lastShift{};
 986:Veno-Echo.cpp ****     static pickupState feedbackL_pickup{};
 987:Veno-Echo.cpp ****     static pickupState HPCutoff_pickup{};
 988:Veno-Echo.cpp **** 
 989:Veno-Echo.cpp ****     static float feedbackL_Last{};
 990:Veno-Echo.cpp ****     static float HPCutoff_Last{};
 991:Veno-Echo.cpp **** 
 992:Veno-Echo.cpp ****     //get pot values:
 993:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 994:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 995:Veno-Echo.cpp **** 
 996:Veno-Echo.cpp ****     if (!shift) //default controls
 997:Veno-Echo.cpp ****     {   
 998:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 999:Veno-Echo.cpp ****         {
1000:Veno-Echo.cpp ****             lastShift = shift;
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
1002:Veno-Echo.cpp ****         } 
1003:Veno-Echo.cpp ****         else    //not a default shift change
1004:Veno-Echo.cpp ****         {
1005:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,false
1006:Veno-Echo.cpp ****         }
1007:Veno-Echo.cpp **** 
1008:Veno-Echo.cpp ****         float feedbackL_combo{};
1009:Veno-Echo.cpp **** 
1010:Veno-Echo.cpp ****         if(feedbackL_pickup == PICKEDUP)
1011:Veno-Echo.cpp ****         {
1012:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 39


1013:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot;
1014:Veno-Echo.cpp ****         }
1015:Veno-Echo.cpp **** 
1016:Veno-Echo.cpp ****         else
1017:Veno-Echo.cpp ****         {
1018:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1019:Veno-Echo.cpp ****         }
1020:Veno-Echo.cpp ****   
1021:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1022:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1023:Veno-Echo.cpp ****     }
1024:Veno-Echo.cpp ****     else    //alternate controls
1025:Veno-Echo.cpp ****     {
1026:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1027:Veno-Echo.cpp ****         {
1028:Veno-Echo.cpp ****             lastShift = shift;
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
1030:Veno-Echo.cpp ****         }
1031:Veno-Echo.cpp **** 
1032:Veno-Echo.cpp ****         else    //not a recent shift change
1033:Veno-Echo.cpp ****         {
1034:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,false);
1035:Veno-Echo.cpp ****         }
1036:Veno-Echo.cpp **** 
1037:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
1038:Veno-Echo.cpp ****         {
1039:Veno-Echo.cpp ****             float HPCutoff{};
1040:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1041:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1042:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1043:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1044:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1045:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1046:Veno-Echo.cpp ****             HPCutoff_Last = feedbackL_Pot;  //update last value
1047:Veno-Echo.cpp ****         }
1048:Veno-Echo.cpp ****     }
1049:Veno-Echo.cpp **** }
1050:Veno-Echo.cpp **** 
1051:Veno-Echo.cpp **** void Update_feedbackR_CV()
1052:Veno-Echo.cpp **** {
1053:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1054:Veno-Echo.cpp **** }
1055:Veno-Echo.cpp **** 
1056:Veno-Echo.cpp **** void Update_feedbackR()
1057:Veno-Echo.cpp **** {
1058:Veno-Echo.cpp ****     static bool lastShift{};
1059:Veno-Echo.cpp ****     static pickupState feedbackR_pickup{};
1060:Veno-Echo.cpp ****     static pickupState LPCutoff_pickup{};
1061:Veno-Echo.cpp **** 
1062:Veno-Echo.cpp ****     static float feedbackR_Last{};
1063:Veno-Echo.cpp ****     static float LPCutoff_Last{};
1064:Veno-Echo.cpp **** 
1065:Veno-Echo.cpp ****     //get pot values:
1066:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1067:Veno-Echo.cpp **** 
1068:Veno-Echo.cpp ****     if (!shift) //default controls
1069:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 40


1070:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1071:Veno-Echo.cpp ****         {
1072:Veno-Echo.cpp ****             lastShift = shift;
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
1074:Veno-Echo.cpp ****         } 
1075:Veno-Echo.cpp ****         else    //not a default shift change
1076:Veno-Echo.cpp ****         {
1077:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,false
1078:Veno-Echo.cpp ****         }
1079:Veno-Echo.cpp **** 
1080:Veno-Echo.cpp ****         float feedbackR_combo{};
1081:Veno-Echo.cpp ****         
1082:Veno-Echo.cpp ****         if(feedbackR_pickup == PICKEDUP)
1083:Veno-Echo.cpp ****         {
1084:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1085:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;
1086:Veno-Echo.cpp ****         }
1087:Veno-Echo.cpp **** 
1088:Veno-Echo.cpp ****         else
1089:Veno-Echo.cpp ****         {
1090:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1091:Veno-Echo.cpp ****         }
1092:Veno-Echo.cpp **** 
1093:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1094:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1095:Veno-Echo.cpp ****     }
1096:Veno-Echo.cpp ****     else    //alternate controls
1097:Veno-Echo.cpp ****     {
1098:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1099:Veno-Echo.cpp ****         {
1100:Veno-Echo.cpp ****             lastShift = shift;
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
1102:Veno-Echo.cpp ****         }
1103:Veno-Echo.cpp **** 
1104:Veno-Echo.cpp ****         else    //not a recent shift change
1105:Veno-Echo.cpp ****         {
1106:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,false);
1107:Veno-Echo.cpp ****         }
1108:Veno-Echo.cpp **** 
1109:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
1110:Veno-Echo.cpp ****         {
1111:Veno-Echo.cpp ****             float LPCutoff{};
1112:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1113:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1114:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1115:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1116:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1117:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1118:Veno-Echo.cpp ****             LPCutoff_Last = feedbackR_Pot;  //update last value
1119:Veno-Echo.cpp ****         }
1120:Veno-Echo.cpp ****     }
1121:Veno-Echo.cpp **** }
1122:Veno-Echo.cpp **** 
1123:Veno-Echo.cpp **** void Update_drywet_CV()
1124:Veno-Echo.cpp **** {
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1126:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 41


1127:Veno-Echo.cpp **** 
1128:Veno-Echo.cpp **** void Update_drywet()
1129:Veno-Echo.cpp **** {
1130:Veno-Echo.cpp ****     static bool lastShift{};
1131:Veno-Echo.cpp ****     static pickupState drywet_pickup{};
1132:Veno-Echo.cpp ****     static pickupState Res_pickup{};
1133:Veno-Echo.cpp **** 
1134:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1135:Veno-Echo.cpp ****     static float Res_Last{}; //last res value (unscaled)
1136:Veno-Echo.cpp **** 
1137:Veno-Echo.cpp ****     //get pot values:
1138:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1139:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp ****     if (!shift) //default controls
1142:Veno-Echo.cpp ****     {   
1143:Veno-Echo.cpp **** 
1144:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1145:Veno-Echo.cpp ****         {
1146:Veno-Echo.cpp ****             lastShift = shift;
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1148:Veno-Echo.cpp ****         } 
1149:Veno-Echo.cpp ****         else    //not a default shift change
1150:Veno-Echo.cpp ****         {
1151:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1152:Veno-Echo.cpp ****         }
1153:Veno-Echo.cpp ****         
1154:Veno-Echo.cpp ****         float drywetcombo{};
1155:Veno-Echo.cpp **** 
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
1157:Veno-Echo.cpp ****         {
1158:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1159:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1160:Veno-Echo.cpp ****         }
1161:Veno-Echo.cpp **** 
1162:Veno-Echo.cpp ****         else
1163:Veno-Echo.cpp ****         {
1164:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1165:Veno-Echo.cpp ****         }
1166:Veno-Echo.cpp **** 
1167:Veno-Echo.cpp ****         float drywetTarget{};
1168:Veno-Echo.cpp **** 
1169:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1170:Veno-Echo.cpp ****         {
1171:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1172:Veno-Echo.cpp ****         }
1173:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1174:Veno-Echo.cpp ****         {
1175:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1176:Veno-Echo.cpp ****         }
1177:Veno-Echo.cpp ****         else
1178:Veno-Echo.cpp ****         {
1179:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
1180:Veno-Echo.cpp ****         }
1181:Veno-Echo.cpp **** 
1182:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1183:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 42


1184:Veno-Echo.cpp ****     }
1185:Veno-Echo.cpp ****     else    //alternate controls
1186:Veno-Echo.cpp ****     {
1187:Veno-Echo.cpp **** 
1188:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1189:Veno-Echo.cpp ****         {
1190:Veno-Echo.cpp ****             lastShift = shift;
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
1192:Veno-Echo.cpp ****         }
1193:Veno-Echo.cpp **** 
1194:Veno-Echo.cpp ****         else    //not a recent shift change
1195:Veno-Echo.cpp ****         {
1196:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
1197:Veno-Echo.cpp ****         }
1198:Veno-Echo.cpp **** 
1199:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
1200:Veno-Echo.cpp ****         {
1201:Veno-Echo.cpp ****             float Res{};
1202:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1203:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1204:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1205:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1206:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1207:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1208:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1209:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1210:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1211:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1212:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
1213:Veno-Echo.cpp ****         }
1214:Veno-Echo.cpp ****     }
1215:Veno-Echo.cpp **** }
1216:Veno-Echo.cpp **** 
1217:Veno-Echo.cpp **** void Update_width_CV()
1218:Veno-Echo.cpp **** {
1219:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1220:Veno-Echo.cpp **** }
1221:Veno-Echo.cpp **** 
1222:Veno-Echo.cpp **** void Update_width()
1223:Veno-Echo.cpp **** {
1224:Veno-Echo.cpp ****     //get pot values:
1225:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1226:Veno-Echo.cpp **** 
1227:Veno-Echo.cpp ****     static float width_Pot_Last{};
1228:Veno-Echo.cpp **** 
1229:Veno-Echo.cpp ****     if (!shift) //default controls
1230:Veno-Echo.cpp ****     {   
1231:Veno-Echo.cpp ****         //update last values if shift off
1232:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
1233:Veno-Echo.cpp **** 
1234:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
1235:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
1236:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
1237:Veno-Echo.cpp ****     }
1238:Veno-Echo.cpp ****     else    //alternate controls
1239:Veno-Echo.cpp ****     {
1240:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 43


1241:Veno-Echo.cpp ****         {
1242:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1243:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1244:Veno-Echo.cpp ****         }
1245:Veno-Echo.cpp **** 
1246:Veno-Echo.cpp ****     }
1247:Veno-Echo.cpp **** }
1248:Veno-Echo.cpp **** 
1249:Veno-Echo.cpp **** void Update_crossfeedback()
1250:Veno-Echo.cpp **** {
1251:Veno-Echo.cpp ****     //get pot values:
1252:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1253:Veno-Echo.cpp **** 
1254:Veno-Echo.cpp ****     static float crossfeedback_Pot_Last{};
1255:Veno-Echo.cpp **** 
1256:Veno-Echo.cpp ****     if (!shift) //default controls
1257:Veno-Echo.cpp ****     {   
1258:Veno-Echo.cpp ****         //update last values if shift off
1259:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
1260:Veno-Echo.cpp **** 
1261:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
1262:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1263:Veno-Echo.cpp **** 
1264:Veno-Echo.cpp ****     }
1265:Veno-Echo.cpp ****     else    //alternate controls
1266:Veno-Echo.cpp ****     {
1267:Veno-Echo.cpp ****         static float modRate{};
1268:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
1269:Veno-Echo.cpp ****         {
1270:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
1271:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1272:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1273:Veno-Echo.cpp ****         }
1274:Veno-Echo.cpp ****     }
1275:Veno-Echo.cpp **** }
1276:Veno-Echo.cpp **** 
1277:Veno-Echo.cpp **** void Update_filterXfade()
1278:Veno-Echo.cpp **** {
1279:Veno-Echo.cpp ****     //get pot values:
1280:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1281:Veno-Echo.cpp **** 
1282:Veno-Echo.cpp ****     static float filterXfade_Pot_Last{};
1283:Veno-Echo.cpp **** 
1284:Veno-Echo.cpp ****     if (!shift) //default controls
1285:Veno-Echo.cpp ****     {   
1286:Veno-Echo.cpp ****         //update last values if shift off
1287:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
1288:Veno-Echo.cpp **** 
1289:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
1290:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1291:Veno-Echo.cpp **** 
1292:Veno-Echo.cpp ****     }
1293:Veno-Echo.cpp ****     else    //alternate controls
1294:Veno-Echo.cpp ****     {
1295:Veno-Echo.cpp ****         //static float modRate{};
1296:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
1297:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 44


1298:Veno-Echo.cpp **** 
1299:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1300:Veno-Echo.cpp ****             {
1301:Veno-Echo.cpp ****                 PostFilters = false;
1302:Veno-Echo.cpp ****             }
1303:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1304:Veno-Echo.cpp ****             {
1305:Veno-Echo.cpp ****                 
1306:Veno-Echo.cpp ****                 PostFilters = true;
1307:Veno-Echo.cpp ****             }
1308:Veno-Echo.cpp ****             else
1309:Veno-Echo.cpp ****             {
1310:Veno-Echo.cpp ****               //do nothing
1311:Veno-Echo.cpp ****             }
1312:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1313:Veno-Echo.cpp ****         }
1314:Veno-Echo.cpp ****     }
1315:Veno-Echo.cpp **** }
1316:Veno-Echo.cpp **** 
1317:Veno-Echo.cpp **** void GetModCV()
1318:Veno-Echo.cpp **** {
1319:Veno-Echo.cpp ****     //get modulation CV input
1320:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1321:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1322:Veno-Echo.cpp **** }
1323:Veno-Echo.cpp **** 
1324:Veno-Echo.cpp **** void Update_Mod()
1325:Veno-Echo.cpp **** {    
1326:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1327:Veno-Echo.cpp ****     static float modulation_CV{};
1328:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1329:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1330:Veno-Echo.cpp ****     //calculate InternalMod
1331:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1332:Veno-Echo.cpp ****     //apply modulation to delay lines
1333:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1334:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1335:Veno-Echo.cpp **** }
1336:Veno-Echo.cpp **** 
1337:Veno-Echo.cpp **** void UpdateClock()
1338:Veno-Echo.cpp **** {
1339:Veno-Echo.cpp ****     static int divCounter{};
1340:Veno-Echo.cpp ****     ClockIn.Debounce();
1341:Veno-Echo.cpp **** 
1342:Veno-Echo.cpp ****     //if clock in pulse received
1343:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1344:Veno-Echo.cpp ****     {   
1345:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1346:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1347:Veno-Echo.cpp ****         if(divCounter == 0)
1348:Veno-Echo.cpp ****         {
1349:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
1350:Veno-Echo.cpp ****             {
1351:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1352:Veno-Echo.cpp ****                 if(syncMode)
1353:Veno-Echo.cpp ****                 {
1354:Veno-Echo.cpp ****                     if(div_L <= UNITY)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 45


1355:Veno-Echo.cpp ****                     {
1356:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
1357:Veno-Echo.cpp ****                     }
1358:Veno-Echo.cpp **** 
1359:Veno-Echo.cpp ****                     if(div_R <= UNITY)
1360:Veno-Echo.cpp ****                     {
1361:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
1362:Veno-Echo.cpp ****                     }
1363:Veno-Echo.cpp ****                 }
1364:Veno-Echo.cpp ****             }
1365:Veno-Echo.cpp ****         }
1366:Veno-Echo.cpp ****     }
1367:Veno-Echo.cpp ****     
1368:Veno-Echo.cpp **** }
1369:Veno-Echo.cpp **** 
1370:Veno-Echo.cpp **** void Update_Buttons()
1371:Veno-Echo.cpp **** {  
1372:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1373:Veno-Echo.cpp ****     static uint32_t resetTime{};
1374:Veno-Echo.cpp ****     static int buttonstate{};
1375:Veno-Echo.cpp **** 
1376:Veno-Echo.cpp ****     Rev_L_sw.update();
1377:Veno-Echo.cpp ****     Rev_R_sw.update();
1378:Veno-Echo.cpp ****     LPF_sw.update();
1379:Veno-Echo.cpp ****     HPF_sw.update();
1380:Veno-Echo.cpp ****     Tap_Button.update();
1381:Veno-Echo.cpp **** 
1382:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1383:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1384:Veno-Echo.cpp ****     //TapButton.Debounce();
1385:Veno-Echo.cpp ****     Sync.Debounce();
1386:Veno-Echo.cpp ****     ClockIn.Debounce();
1387:Veno-Echo.cpp ****     //gate inputs
1388:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1389:Veno-Echo.cpp ****     {
1390:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1391:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1392:Veno-Echo.cpp ****     }
1393:Veno-Echo.cpp **** 
1394:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1395:Veno-Echo.cpp ****     {
1396:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1397:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1398:Veno-Echo.cpp ****     }
1399:Veno-Echo.cpp **** 
1400:Veno-Echo.cpp ****     //buttons
1401:Veno-Echo.cpp **** 
1402:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1403:Veno-Echo.cpp ****     {
1404:Veno-Echo.cpp ****         buttonstate += 1;
1405:Veno-Echo.cpp ****         if (buttonstate == 3)
1406:Veno-Echo.cpp ****         {
1407:Veno-Echo.cpp ****             resetTime = System::GetNow();
1408:Veno-Echo.cpp ****         }
1409:Veno-Echo.cpp ****     }
1410:Veno-Echo.cpp **** 
1411:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 46


1412:Veno-Echo.cpp ****     {
1413:Veno-Echo.cpp ****         buttonstate -= 1;
1414:Veno-Echo.cpp ****     }
1415:Veno-Echo.cpp **** 
1416:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1417:Veno-Echo.cpp ****     {
1418:Veno-Echo.cpp ****         buttonstate += 1;
1419:Veno-Echo.cpp ****         if (buttonstate == 3)
1420:Veno-Echo.cpp ****         {
1421:Veno-Echo.cpp ****             resetTime = System::GetNow();
1422:Veno-Echo.cpp ****         }
1423:Veno-Echo.cpp ****     }
1424:Veno-Echo.cpp **** 
1425:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1426:Veno-Echo.cpp ****     {
1427:Veno-Echo.cpp ****         buttonstate -= 1;
1428:Veno-Echo.cpp ****     }
1429:Veno-Echo.cpp **** 
1430:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1431:Veno-Echo.cpp ****     {
1432:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1433:Veno-Echo.cpp ****         {
1434:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1435:Veno-Echo.cpp ****         }
1436:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1437:Veno-Echo.cpp ****         
1438:Veno-Echo.cpp ****         if(syncMode)
1439:Veno-Echo.cpp ****         {
1440:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1441:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1442:Veno-Echo.cpp ****         }
1443:Veno-Echo.cpp **** 
1444:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1445:Veno-Echo.cpp ****         buttonstate += 1;
1446:Veno-Echo.cpp ****         
1447:Veno-Echo.cpp ****         if (buttonstate == 3)
1448:Veno-Echo.cpp ****         {
1449:Veno-Echo.cpp ****             resetTime = System::GetNow();
1450:Veno-Echo.cpp ****         }
1451:Veno-Echo.cpp **** 
1452:Veno-Echo.cpp ****     }
1453:Veno-Echo.cpp **** 
1454:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1455:Veno-Echo.cpp ****     {
1456:Veno-Echo.cpp ****         shift = false;
1457:Veno-Echo.cpp ****         buttonstate -= 1;
1458:Veno-Echo.cpp ****         mute = false;
1459:Veno-Echo.cpp ****     }
1460:Veno-Echo.cpp **** 
1461:Veno-Echo.cpp ****     if (Tap_Button.getState())
1462:Veno-Echo.cpp ****     {
1463:Veno-Echo.cpp ****         //if ( (System::GetNow() - shiftTime) > shiftWait)
1464:Veno-Echo.cpp ****         //{
1465:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1466:Veno-Echo.cpp ****         //} 
1467:Veno-Echo.cpp ****     }
1468:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 47


1469:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1470:Veno-Echo.cpp ****     {
1471:Veno-Echo.cpp ****         /*
1472:Veno-Echo.cpp ****             if(!save_flag)
1473:Veno-Echo.cpp ****             {
1474:Veno-Echo.cpp ****                 save_flag = true; 
1475:Veno-Echo.cpp ****             }
1476:Veno-Echo.cpp ****         */
1477:Veno-Echo.cpp **** 
1478:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1479:Veno-Echo.cpp ****             {
1480:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1481:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1482:Veno-Echo.cpp ****                 ResetAllLEDs();
1483:Veno-Echo.cpp ****                 //don't let reset or shift update
1484:Veno-Echo.cpp ****                 shift = false;
1485:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1486:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1487:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1488:Veno-Echo.cpp ****             }
1489:Veno-Echo.cpp ****     } 
1490:Veno-Echo.cpp **** 
1491:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1492:Veno-Echo.cpp **** 
1493:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
1494:Veno-Echo.cpp ****     {
1495:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1496:Veno-Echo.cpp ****         //delayL.tempoled.resetPhase();
1497:Veno-Echo.cpp ****         //delayR.tempoled.resetPhase();
1498:Veno-Echo.cpp ****         delayL_flag = true;
1499:Veno-Echo.cpp ****         delayR_flag = true;
1500:Veno-Echo.cpp ****     }
1501:Veno-Echo.cpp **** 
1502:Veno-Echo.cpp **** }
1503:Veno-Echo.cpp **** 
1504:Veno-Echo.cpp **** void Update_BaseTempoLED()
1505:Veno-Echo.cpp **** {
1506:Veno-Echo.cpp ****     tempoLED_BASE.update();
1507:Veno-Echo.cpp **** 
1508:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
1509:Veno-Echo.cpp ****     {
1510:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
1511:Veno-Echo.cpp ****         {
1512:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1513:Veno-Echo.cpp ****             delayL_flag = false;
1514:Veno-Echo.cpp ****         }
1515:Veno-Echo.cpp **** 
1516:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
1517:Veno-Echo.cpp ****         {
1518:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1519:Veno-Echo.cpp ****             delayR_flag = false;
1520:Veno-Echo.cpp ****         }
1521:Veno-Echo.cpp **** 
1522:Veno-Echo.cpp ****     }
1523:Veno-Echo.cpp **** }
1524:Veno-Echo.cpp **** 
1525:Veno-Echo.cpp **** //input a float (range 0 to 1) and address of TempoDivs to update
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 48


1526:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
1527:Veno-Echo.cpp **** {
1528:Veno-Echo.cpp **** 
1529:Veno-Echo.cpp ****     float retVal{};
1530:Veno-Echo.cpp **** 
1531:Veno-Echo.cpp ****     if (input < 0.0909f)
1532:Veno-Echo.cpp ****     {
1533:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
1534:Veno-Echo.cpp ****         *div = DIV6;
1535:Veno-Echo.cpp ****     }
1536:Veno-Echo.cpp **** 
1537:Veno-Echo.cpp ****     else if (input < 0.1818f)
1538:Veno-Echo.cpp ****     {
1539:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
1540:Veno-Echo.cpp ****        *div = DIV5;
1541:Veno-Echo.cpp ****     }
1542:Veno-Echo.cpp **** 
1543:Veno-Echo.cpp ****     else if (input < 0.2727f)
1544:Veno-Echo.cpp ****     {
1545:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
1546:Veno-Echo.cpp ****         *div = DIV4;
1547:Veno-Echo.cpp ****     }
1548:Veno-Echo.cpp **** 
1549:Veno-Echo.cpp ****     else if (input < 0.3636f)
1550:Veno-Echo.cpp ****     {
1551:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
1552:Veno-Echo.cpp ****         *div = DIV3;
1553:Veno-Echo.cpp ****     }
1554:Veno-Echo.cpp **** 
1555:Veno-Echo.cpp ****     else if (input < 0.4545f)
1556:Veno-Echo.cpp ****     {
1557:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
1558:Veno-Echo.cpp ****         *div = DIV2;
1559:Veno-Echo.cpp ****     }
1560:Veno-Echo.cpp **** 
1561:Veno-Echo.cpp ****     else if (input <  0.5455f)
1562:Veno-Echo.cpp ****     {
1563:Veno-Echo.cpp ****         retVal = (1.0f);
1564:Veno-Echo.cpp ****         *div = UNITY;
1565:Veno-Echo.cpp ****     }
1566:Veno-Echo.cpp **** 
1567:Veno-Echo.cpp ****     else if (input < 0.6364f)
1568:Veno-Echo.cpp ****     {
1569:Veno-Echo.cpp ****         retVal = 2.0f;
1570:Veno-Echo.cpp ****         *div = MULT2;
1571:Veno-Echo.cpp ****     }
1572:Veno-Echo.cpp **** 
1573:Veno-Echo.cpp ****     else if (input < 0.7273f)
1574:Veno-Echo.cpp ****     {
1575:Veno-Echo.cpp ****         retVal = 3.0f;
1576:Veno-Echo.cpp ****         *div = MULT3;
1577:Veno-Echo.cpp ****     }
1578:Veno-Echo.cpp **** 
1579:Veno-Echo.cpp ****     else if (input < 0.8182f)
1580:Veno-Echo.cpp ****     {
1581:Veno-Echo.cpp ****         retVal = 4.0f;
1582:Veno-Echo.cpp ****         *div = MULT4;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 49


1583:Veno-Echo.cpp ****     }
1584:Veno-Echo.cpp ****     
1585:Veno-Echo.cpp ****     else if (input < 0.9091f)
1586:Veno-Echo.cpp ****     {
1587:Veno-Echo.cpp ****         retVal = 5.0f;
1588:Veno-Echo.cpp ****         *div = MULT5;
1589:Veno-Echo.cpp ****     }
1590:Veno-Echo.cpp **** 
1591:Veno-Echo.cpp ****     else if (input <= 1.0f)
1592:Veno-Echo.cpp ****     {
1593:Veno-Echo.cpp ****        retVal = 6.0f; 
1594:Veno-Echo.cpp ****        *div = MULT6;
1595:Veno-Echo.cpp ****     }
1596:Veno-Echo.cpp ****     else
1597:Veno-Echo.cpp ****     {
1598:Veno-Echo.cpp ****         retVal = 1.0f; 
1599:Veno-Echo.cpp ****        *div = UNITY;
1600:Veno-Echo.cpp ****     }
1601:Veno-Echo.cpp ****     
1602:Veno-Echo.cpp **** return retVal;
1603:Veno-Echo.cpp **** 
1604:Veno-Echo.cpp **** }
1605:Veno-Echo.cpp **** 
1606:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
1607:Veno-Echo.cpp **** {
1608:Veno-Echo.cpp ****     float retVal{};
1609:Veno-Echo.cpp ****     switch(ratio)
1610:Veno-Echo.cpp ****     {
1611:Veno-Echo.cpp ****         case QUARTER:
1612:Veno-Echo.cpp ****         retVal = 1.0f;
1613:Veno-Echo.cpp ****         break;
1614:Veno-Echo.cpp **** 
1615:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1616:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1617:Veno-Echo.cpp ****         break;
1618:Veno-Echo.cpp **** 
1619:Veno-Echo.cpp ****         case EIGHT:
1620:Veno-Echo.cpp ****         retVal = 2.0f;
1621:Veno-Echo.cpp ****         break;
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp ****         case TWELVE:
1624:Veno-Echo.cpp ****         retVal = 3.0f;
1625:Veno-Echo.cpp ****         break;
1626:Veno-Echo.cpp **** 
1627:Veno-Echo.cpp ****         default:
1628:Veno-Echo.cpp ****         retVal = 1.0f;
1629:Veno-Echo.cpp ****         break;
1630:Veno-Echo.cpp ****     }
1631:Veno-Echo.cpp **** 
1632:Veno-Echo.cpp **** return retVal;
1633:Veno-Echo.cpp **** }
1634:Veno-Echo.cpp **** 
1635:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1636:Veno-Echo.cpp **** {
1637:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1638:Veno-Echo.cpp ****     {
1639:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 50


1640:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1641:Veno-Echo.cpp ****     }
1642:Veno-Echo.cpp ****     else
1643:Veno-Echo.cpp ****     {
1644:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1645:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1646:Veno-Echo.cpp ****     }
1647:Veno-Echo.cpp **** 
1648:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1649:Veno-Echo.cpp ****     {
1650:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1651:Veno-Echo.cpp ****     }
1652:Veno-Echo.cpp ****     else
1653:Veno-Echo.cpp ****     {
1654:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1655:Veno-Echo.cpp ****     }
1656:Veno-Echo.cpp **** 
1657:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1658:Veno-Echo.cpp ****     {
1659:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1660:Veno-Echo.cpp ****     }
1661:Veno-Echo.cpp ****     else
1662:Veno-Echo.cpp ****     {
1663:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1664:Veno-Echo.cpp ****     }
1665:Veno-Echo.cpp **** 
1666:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1667:Veno-Echo.cpp ****     {
1668:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1669:Veno-Echo.cpp ****     }
1670:Veno-Echo.cpp ****     else
1671:Veno-Echo.cpp ****     {
1672:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1673:Veno-Echo.cpp ****     }
1674:Veno-Echo.cpp **** 
1675:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1676:Veno-Echo.cpp ****     {
1677:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1678:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1679:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1680:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1681:Veno-Echo.cpp ****     }
1682:Veno-Echo.cpp ****     else
1683:Veno-Echo.cpp ****     {
1684:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1685:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1686:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1687:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1688:Veno-Echo.cpp ****     }
1689:Veno-Echo.cpp ****     
1690:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1691:Veno-Echo.cpp ****     {
1692:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1693:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1694:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1695:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1696:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 51


1697:Veno-Echo.cpp ****     else
1698:Veno-Echo.cpp ****     {
1699:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1700:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1701:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1702:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1703:Veno-Echo.cpp **** 
1704:Veno-Echo.cpp ****     }
1705:Veno-Echo.cpp **** 
1706:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1707:Veno-Echo.cpp ****     {
1708:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1709:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1710:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1711:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1712:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1713:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1714:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1715:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1716:Veno-Echo.cpp ****     }
1717:Veno-Echo.cpp **** 
1718:Veno-Echo.cpp ****     else
1719:Veno-Echo.cpp ****     {
1720:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1721:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1722:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1723:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1724:Veno-Echo.cpp ****     }
1725:Veno-Echo.cpp **** 
1726:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1727:Veno-Echo.cpp ****     {
1728:Veno-Echo.cpp ****         PostFilters = false;
1729:Veno-Echo.cpp ****     }
1730:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         PostFilters = true;
1733:Veno-Echo.cpp ****     }
1734:Veno-Echo.cpp ****     else
1735:Veno-Echo.cpp ****     {
1736:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1737:Veno-Echo.cpp ****     }
1738:Veno-Echo.cpp **** 
1739:Veno-Echo.cpp **** }
1740:Veno-Echo.cpp **** 
1741:Veno-Echo.cpp **** void TurnOnAllLEDs()
1742:Veno-Echo.cpp **** {
1743:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1744:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1745:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1746:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1747:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1748:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1749:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1750:Veno-Echo.cpp **** }
1751:Veno-Echo.cpp **** 
1752:Veno-Echo.cpp **** void ResetAllLEDs()
1753:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 52


1754:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1755:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1756:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1757:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1758:Veno-Echo.cpp ****     {
1759:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1760:Veno-Echo.cpp ****     }
1761:Veno-Echo.cpp ****     else
1762:Veno-Echo.cpp ****     {
1763:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1764:Veno-Echo.cpp ****     }
1765:Veno-Echo.cpp **** 
1766:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1767:Veno-Echo.cpp ****     {
1768:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1769:Veno-Echo.cpp ****     }
1770:Veno-Echo.cpp ****     else
1771:Veno-Echo.cpp ****     {
1772:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1773:Veno-Echo.cpp ****     }
1774:Veno-Echo.cpp ****     
1775:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1776:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1777:Veno-Echo.cpp **** }
1778:Veno-Echo.cpp **** 
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1780:Veno-Echo.cpp **** {
1781:Veno-Echo.cpp ****     float returnval{};
1782:Veno-Echo.cpp ****     if (input > limit)
1783:Veno-Echo.cpp ****         returnval = limit;
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1786:Veno-Echo.cpp ****     else
1787:Veno-Echo.cpp ****         returnval = input;
1788:Veno-Echo.cpp **** 
1789:Veno-Echo.cpp ****     return returnval;   
1790:Veno-Echo.cpp **** }
1791:Veno-Echo.cpp **** 
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
1793:Veno-Echo.cpp **** {
1794:Veno-Echo.cpp ****     float output{};
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
1796:Veno-Echo.cpp **** 
1797:Veno-Echo.cpp ****     if(output < 0.0f)
1798:Veno-Echo.cpp ****     {
1799:Veno-Echo.cpp ****         output = 0.0f;
1800:Veno-Echo.cpp ****     }
1801:Veno-Echo.cpp **** 
1802:Veno-Echo.cpp ****     if(output > 1.0f)
1803:Veno-Echo.cpp ****     {
1804:Veno-Echo.cpp ****         output = 1.0f;
1805:Veno-Echo.cpp ****     }
1806:Veno-Echo.cpp **** 
1807:Veno-Echo.cpp ****     return output;
1808:Veno-Echo.cpp **** }
1809:Veno-Echo.cpp **** 
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 53


 437              		.loc 19 1810 13 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
1811:Veno-Echo.cpp **** {
1812:Veno-Echo.cpp ****     pickupState retval{};
1813:Veno-Echo.cpp **** 
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1815:Veno-Echo.cpp ****     {
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1817:Veno-Echo.cpp ****         {
1818:Veno-Echo.cpp ****             retval = BELOW;
1819:Veno-Echo.cpp ****         }
1820:Veno-Echo.cpp ****         
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1822:Veno-Echo.cpp ****         {
1823:Veno-Echo.cpp ****             retval = ABOVE;
1824:Veno-Echo.cpp ****         }
1825:Veno-Echo.cpp **** 
1826:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1827:Veno-Echo.cpp ****         {
1828:Veno-Echo.cpp ****             retval = PICKEDUP;
1829:Veno-Echo.cpp ****         }
1830:Veno-Echo.cpp ****     }
1831:Veno-Echo.cpp **** 
1832:Veno-Echo.cpp ****     else    //not a recent shift change
1833:Veno-Echo.cpp ****     {
1834:Veno-Echo.cpp ****         switch(lastState)
 442              		.loc 19 1834 9 view .LVU50
 443 0000 0128     		cmp	r0, #1
 444 0002 04D0     		beq	.L17
 445 0004 0228     		cmp	r0, #2
 446 0006 01D0     		beq	.L18
 447 0008 68B1     		cbz	r0, .L23
 448 000a 0020     		movs	r0, #0
 449              	.LVL15:
 450              	.L18:
1835:Veno-Echo.cpp ****         {
1836:Veno-Echo.cpp ****             case BELOW:
1837:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1838:Veno-Echo.cpp ****                 retval = PICKEDUP;
1839:Veno-Echo.cpp ****             else
1840:Veno-Echo.cpp ****                 retval = lastState;
1841:Veno-Echo.cpp ****             break;
1842:Veno-Echo.cpp **** 
1843:Veno-Echo.cpp ****             case ABOVE:
1844:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1845:Veno-Echo.cpp ****                 retval = PICKEDUP;
1846:Veno-Echo.cpp ****             else
1847:Veno-Echo.cpp ****                 retval = lastState;
1848:Veno-Echo.cpp ****             break;
1849:Veno-Echo.cpp ****             case PICKEDUP:
1850:Veno-Echo.cpp ****                 retval = lastState;
1851:Veno-Echo.cpp ****             break;
1852:Veno-Echo.cpp ****         }
1853:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 54


1854:Veno-Echo.cpp ****     
1855:Veno-Echo.cpp ****     return retval;
 451              		.loc 19 1855 5 view .LVU51
1856:Veno-Echo.cpp **** }...
 452              		.loc 19 1856 1 is_stmt 0 view .LVU52
 453 000c 7047     		bx	lr
 454              	.LVL16:
 455              	.L17:
1843:Veno-Echo.cpp ****             case ABOVE:
 456              		.loc 19 1843 13 is_stmt 1 view .LVU53
1844:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 457              		.loc 19 1844 13 view .LVU54
1844:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 458              		.loc 19 1844 35 is_stmt 0 view .LVU55
 459 000e DFED0C7A 		vldr.32	s15, .L24
 460 0012 70EEA70A 		vadd.f32	s1, s1, s15
 461              	.LVL17:
1844:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 462              		.loc 19 1844 13 view .LVU56
 463 0016 B4EEE00A 		vcmpe.f32	s0, s1
 464 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 465 001e 4CBF     		ite	mi
 466 0020 0220     		movmi	r0, #2
 467              	.LVL18:
1844:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 468              		.loc 19 1844 13 view .LVU57
 469 0022 0120     		movpl	r0, #1
 470 0024 7047     		bx	lr
 471              	.LVL19:
 472              	.L23:
1836:Veno-Echo.cpp ****             case BELOW:
 473              		.loc 19 1836 13 is_stmt 1 view .LVU58
1837:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 474              		.loc 19 1837 13 view .LVU59
1837:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 475              		.loc 19 1837 35 is_stmt 0 view .LVU60
 476 0026 DFED067A 		vldr.32	s15, .L24
 477 002a 70EEE70A 		vsub.f32	s1, s1, s15
 478              	.LVL20:
1837:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 479              		.loc 19 1837 13 view .LVU61
 480 002e F4EEC00A 		vcmpe.f32	s1, s0
 481 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 482 0036 4CBF     		ite	mi
 483 0038 0220     		movmi	r0, #2
 484              	.LVL21:
1837:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 485              		.loc 19 1837 13 view .LVU62
 486 003a 0020     		movpl	r0, #0
 487 003c 7047     		bx	lr
 488              	.L25:
 489 003e 00BF     		.align	2
 490              	.L24:
 491 0040 0AD7A33B 		.word	1000593162
 492              		.cfi_endproc
 493              	.LFE4910:
 495              		.section	.text._Z10InitDelaysf,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 55


 496              		.align	1
 497              		.p2align 2,,3
 498              		.global	_Z10InitDelaysf
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	_Z10InitDelaysf:
 505              	.LVL22:
 506              	.LFB4289:
 580:Veno-Echo.cpp **** {
 507              		.loc 19 580 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 16
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 583:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 511              		.loc 19 583 5 view .LVU64
 512              	.LBB794:
 513              	.LBI794:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 514              		.loc 17 56 10 view .LVU65
 515              	.LBB795:
 516              	.LBB796:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 517              		.loc 17 58 29 view .LVU66
 518 0000 624B     		ldr	r3, .L46
 519 0002 6349     		ldr	r1, .L46+4
 520              	.LBE796:
 521              	.LBE795:
 522              	.LBE794:
 580:Veno-Echo.cpp **** {
 523              		.loc 19 580 1 is_stmt 0 view .LVU67
 524 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 525              		.cfi_def_cfa_offset 20
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0006 A3F18405 		sub	r5, r3, #132
 532 000a 85B0     		sub	sp, sp, #20
 533              		.cfi_def_cfa_offset 40
 534 000c 2846     		mov	r0, r5
 535              	.LVL23:
 536              	.L27:
 537              	.LBB801:
 538              	.LBB800:
 539              	.LBB797:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 540              		.loc 17 60 13 view .LVU68
 541 000e 0022     		movs	r2, #0
 542 0010 43F8042B 		str	r2, [r3], #4	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 56


  58:delayline_multitap.h ****         {
 543              		.loc 17 58 9 is_stmt 1 view .LVU69
  58:delayline_multitap.h ****         {
 544              		.loc 17 58 29 view .LVU70
 545 0014 8B42     		cmp	r3, r1
 546 0016 FAD1     		bne	.L27
 547              	.LBE797:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 548              		.loc 17 63 9 is_stmt 0 view .LVU71
 549 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 550              		.loc 17 64 9 view .LVU72
 551 001a 5E4C     		ldr	r4, .L46+8
 552 001c 0226     		movs	r6, #2
 553              	.LBB798:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 554              		.loc 17 66 21 view .LVU73
 555 001e 1346     		mov	r3, r2
 556              	.LBE798:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 557              		.loc 17 63 9 view .LVU74
 558 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 559              		.loc 17 64 9 view .LVU75
 560 0022 2E51     		str	r6, [r5, r4]
 561              	.LVL24:
 562              	.LBB799:
 563              		.loc 17 66 31 is_stmt 1 view .LVU76
 564              	.L28:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 565              		.loc 17 68 13 is_stmt 0 view .LVU77
 566 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 567              		.loc 17 66 9 view .LVU78
 568 0026 0133     		adds	r3, r3, #1
 569              	.LVL25:
  69:delayline_multitap.h ****             frac_[i] = 0;
 570              		.loc 17 69 13 view .LVU79
 571 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 572              		.loc 17 68 13 view .LVU80
 573 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 574              		.loc 17 66 31 view .LVU81
 575 002e 0A68     		ldr	r2, [r1]
 576              		.loc 17 69 13 view .LVU82
 577 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 578              		.loc 17 66 9 is_stmt 1 view .LVU83
 579              	.LVL26:
  66:delayline_multitap.h ****         {
 580              		.loc 17 66 31 view .LVU84
 581 0032 9A42     		cmp	r2, r3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 57


 582 0034 F6D8     		bhi	.L28
 583 0036 584B     		ldr	r3, .L46+12
 584              	.LVL27:
  66:delayline_multitap.h ****         {
 585              		.loc 17 66 31 is_stmt 0 view .LVU85
 586 0038 5849     		ldr	r1, .L46+16
 587 003a A3F18406 		sub	r6, r3, #132
 588 003e 3046     		mov	r0, r6
 589              	.LVL28:
 590              	.L29:
  66:delayline_multitap.h ****         {
 591              		.loc 17 66 31 view .LVU86
 592              	.LBE799:
 593              	.LBE800:
 594              	.LBE801:
 595              	.LBB802:
 596              	.LBB803:
 597              	.LBB804:
  60:delayline_multitap.h ****         }
 598              		.loc 17 60 13 view .LVU87
 599 0040 0022     		movs	r2, #0
 600 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 601              		.loc 17 58 9 is_stmt 1 view .LVU88
  58:delayline_multitap.h ****         {
 602              		.loc 17 58 29 view .LVU89
 603 0046 8B42     		cmp	r3, r1
 604 0048 FAD1     		bne	.L29
 605              	.LBE804:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 606              		.loc 17 63 9 is_stmt 0 view .LVU90
 607 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 608              		.loc 17 64 9 view .LVU91
 609 004c 514C     		ldr	r4, .L46+8
 610 004e 0227     		movs	r7, #2
 611              	.LBB805:
  66:delayline_multitap.h ****         {
 612              		.loc 17 66 21 view .LVU92
 613 0050 1346     		mov	r3, r2
 614              	.LBE805:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 615              		.loc 17 63 9 view .LVU93
 616 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 617              		.loc 17 64 9 view .LVU94
 618 0054 3751     		str	r7, [r6, r4]
 619              	.LVL29:
 620              	.LBB806:
  66:delayline_multitap.h ****         {
 621              		.loc 17 66 31 is_stmt 1 view .LVU95
 622              	.L30:
  68:delayline_multitap.h ****             frac_[i] = 0;
 623              		.loc 17 68 13 is_stmt 0 view .LVU96
 624 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 625              		.loc 17 66 9 view .LVU97
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 58


 626 0058 0133     		adds	r3, r3, #1
 627              	.LVL30:
 628              		.loc 17 69 13 view .LVU98
 629 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 630              		.loc 17 68 13 view .LVU99
 631 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 632              		.loc 17 66 31 view .LVU100
 633 0060 0A68     		ldr	r2, [r1]
 634              		.loc 17 69 13 view .LVU101
 635 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 636              		.loc 17 66 9 is_stmt 1 view .LVU102
 637              	.LVL31:
  66:delayline_multitap.h ****         {
 638              		.loc 17 66 31 view .LVU103
 639 0064 9A42     		cmp	r2, r3
 640 0066 F6D8     		bhi	.L30
 641              	.LVL32:
  66:delayline_multitap.h ****         {
 642              		.loc 17 66 31 is_stmt 0 view .LVU104
 643              	.LBE806:
 644              	.LBE803:
 645              	.LBE802:
 587:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 646              		.loc 19 587 5 is_stmt 1 view .LVU105
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 647              		.loc 19 588 16 is_stmt 0 view .LVU106
 648 0068 4D4C     		ldr	r4, .L46+20
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 649              		.loc 19 590 16 view .LVU107
 650 006a 0820     		movs	r0, #8
 587:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 651              		.loc 19 587 16 view .LVU108
 652 006c 4D4F     		ldr	r7, .L46+24
 653 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 654 0072 3D60     		str	r5, [r7]
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 655              		.loc 19 588 5 is_stmt 1 view .LVU109
 656              	.LBB807:
 657              	.LBB808:
 658              	.LBB809:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 659              		.loc 18 51 9 is_stmt 0 view .LVU110
 660 0074 46F2A815 		movw	r5, #25000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 59


 661              	.LBE809:
 662              	.LBE808:
 663              	.LBE807:
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 664              		.loc 19 588 16 view .LVU111
 665 0078 2660     		str	r6, [r4]
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 666              		.loc 19 590 5 is_stmt 1 view .LVU112
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 667              		.loc 19 590 16 is_stmt 0 view .LVU113
 668 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 669              	.LVL33:
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 670              		.loc 19 590 16 view .LVU114
 671 007e 0346     		mov	r3, r0	@ movhi
 672 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 673 0084 3846     		mov	r0, r7
 674 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 675 008a 0299     		ldr	r1, [sp, #8]
 676 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 677              	.LVL34:
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 678              		.loc 19 591 5 is_stmt 1 view .LVU115
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 679              		.loc 19 591 16 is_stmt 0 view .LVU116
 680 0090 0920     		movs	r0, #9
 681 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 682              	.LVL35:
 683 0096 0346     		mov	r3, r0	@ movhi
 684 0098 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 685 009c 2046     		mov	r0, r4
 686 009e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 687 00a2 0399     		ldr	r1, [sp, #12]
 688 00a4 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 689              	.LVL36:
 593:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 690              		.loc 19 593 5 is_stmt 1 view .LVU117
 593:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 691              		.loc 19 593 24 is_stmt 0 view .LVU118
 692 00a8 9FED3F0A 		vldr.32	s0, .L46+28
 693 00ac 3846     		mov	r0, r7
 694 00ae FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 695              	.LVL37:
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 696              		.loc 19 594 5 is_stmt 1 view .LVU119
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 697              		.loc 19 594 24 is_stmt 0 view .LVU120
 698 00b2 2046     		mov	r0, r4
 699              	.LBB821:
 700              	.LBB816:
 701              	.LBB811:
 702              		.loc 18 51 9 view .LVU121
 703 00b4 3D4C     		ldr	r4, .L46+32
 704              	.LBE811:
 705              	.LBE816:
 706              	.LBE821:
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 60


 707              		.loc 19 594 24 view .LVU122
 708 00b6 9FED3C0A 		vldr.32	s0, .L46+28
 709 00ba FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 710              	.LVL38:
 597:Veno-Echo.cpp ****     delMemsL_REV.Init();
 711              		.loc 19 597 5 is_stmt 1 view .LVU123
 712              	.LBB822:
 713              	.LBI807:
  42:delayline_reverse.h ****     { 
 714              		.loc 18 42 10 view .LVU124
 715              	.LBB817:
 716              	.LBI808:
  48:delayline_reverse.h ****     {
 717              		.loc 18 48 10 view .LVU125
 718              	.LBB812:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 719              		.loc 18 52 9 is_stmt 0 view .LVU126
 720 00be 3C4A     		ldr	r2, .L46+36
 721 00c0 45F6C050 		movw	r0, #24000
 722 00c4 04F11803 		add	r3, r4, #24
 723 00c8 3A49     		ldr	r1, .L46+40
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 724              		.loc 18 51 9 view .LVU127
 725 00ca 2561     		str	r5, [r4, #16]
 726              		.loc 18 52 9 view .LVU128
 727 00cc A050     		str	r0, [r4, r2]
 728              	.LVL39:
 729              	.LBB810:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 730              		.loc 18 54 29 is_stmt 1 view .LVU129
 731              	.L31:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 732              		.loc 18 56 13 is_stmt 0 view .LVU130
 733 00ce 0022     		movs	r2, #0
 734 00d0 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 735              		.loc 18 54 9 is_stmt 1 view .LVU131
  54:delayline_reverse.h ****         {
 736              		.loc 18 54 29 view .LVU132
 737 00d4 8B42     		cmp	r3, r1
 738 00d6 FAD1     		bne	.L31
 739              	.LBE810:
 740              	.LBE812:
 741              	.LBE817:
 742              	.LBE822:
 743              	.LBB823:
 744              	.LBB824:
 745              	.LBB825:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 746              		.loc 18 51 9 is_stmt 0 view .LVU133
 747 00d8 3748     		ldr	r0, .L46+44
 748 00da 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 749              		.loc 18 52 9 view .LVU134
 750 00de 344D     		ldr	r5, .L46+36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 61


 751 00e0 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 752              		.loc 18 51 9 view .LVU135
 753 00e4 0161     		str	r1, [r0, #16]
 754              	.LBE825:
 755              	.LBE824:
 756              	.LBE823:
 757              	.LBB848:
 758              	.LBB818:
 759              	.LBB813:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 760              		.loc 18 58 9 view .LVU136
 761 00e6 0021     		movs	r1, #0
 762              	.LBE813:
 763              	.LBE818:
 764              	.LBE848:
 765              	.LBB849:
 766              	.LBB838:
 767              	.LBB828:
  52:delayline_reverse.h ****         
 768              		.loc 18 52 9 view .LVU137
 769 00e8 4651     		str	r6, [r0, r5]
 770              	.LBE828:
 771              	.LBE838:
 772              	.LBE849:
 773              	.LBB850:
 774              	.LBB819:
 775              	.LBB814:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 776              		.loc 18 62 9 view .LVU138
 777 00ea 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 778              		.loc 18 64 9 view .LVU139
 779 00ec 334E     		ldr	r6, .L46+48
 780 00ee 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 781              		.loc 18 62 9 view .LVU140
 782 00f2 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 783              		.loc 18 60 9 view .LVU141
 784 00f4 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 785              		.loc 18 63 9 view .LVU142
 786 00f6 324D     		ldr	r5, .L46+52
  61:delayline_reverse.h ****         playinghead_ = false;
 787              		.loc 18 61 9 view .LVU143
 788 00f8 6161     		str	r1, [r4, #20]
 789              		.loc 18 64 9 view .LVU144
 790 00fa A155     		strb	r1, [r4, r6]
 791              	.LVL40:
 792              		.loc 18 64 9 view .LVU145
 793              	.LBE814:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 62


 794              	.LBE819:
 795              	.LBE850:
 598:Veno-Echo.cpp ****     delMemsR_REV.Init();
 796              		.loc 19 598 5 is_stmt 1 view .LVU146
 797              	.LBB851:
 798              	.LBI823:
  42:delayline_reverse.h ****     { 
 799              		.loc 18 42 10 view .LVU147
 800              	.LBB839:
 801              	.LBI824:
  48:delayline_reverse.h ****     {
 802              		.loc 18 48 10 view .LVU148
 803              	.LBB829:
 804              	.LBB826:
  54:delayline_reverse.h ****         {
 805              		.loc 18 54 29 view .LVU149
 806              	.LBE826:
 807              	.LBE829:
 808              	.LBE839:
 809              	.LBE851:
 810              	.LBB852:
 811              	.LBB820:
 812              	.LBB815:
  63:delayline_reverse.h ****         fading_ = false;
 813              		.loc 18 63 9 is_stmt 0 view .LVU150
 814 00fc 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 815              		.loc 18 59 9 view .LVU151
 816 00fe C4E90111 		strd	r1, r1, [r4, #4]
 817 0102 3049     		ldr	r1, .L46+56
 818              	.LVL41:
 819              	.L32:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 820              		.loc 18 59 9 view .LVU152
 821              	.LBE815:
 822              	.LBE820:
 823              	.LBE852:
 824              	.LBB853:
 825              	.LBB840:
 826              	.LBB830:
 827              	.LBB827:
  56:delayline_reverse.h ****         }
 828              		.loc 18 56 13 view .LVU153
 829 0104 0022     		movs	r2, #0
 830 0106 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 831              		.loc 18 54 9 is_stmt 1 view .LVU154
  54:delayline_reverse.h ****         {
 832              		.loc 18 54 29 view .LVU155
 833 010a 8B42     		cmp	r3, r1
 834 010c FAD1     		bne	.L32
 835              	.LBE827:
 836              	.LBE830:
 837              	.LBE840:
 838              	.LBE853:
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 839              		.loc 19 601 21 is_stmt 0 view .LVU156
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 63


 840 010e 2E49     		ldr	r1, .L46+60
 841              	.LBB854:
 842              	.LBB841:
 843              	.LBB831:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 844              		.loc 18 58 9 view .LVU157
 845 0110 0023     		movs	r3, #0
 846              	.LBE831:
 847              	.LBE841:
 848              	.LBE854:
 849              	.LBB855:
 850              	.LBB856:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 851              		.loc 19 70 15 view .LVU158
 852 0112 DFED2E6A 		vldr.32	s13, .L46+64
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 853              		.loc 19 70 28 view .LVU159
 854 0116 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 855              		.loc 19 70 53 view .LVU160
 856 011a 9FED2D6A 		vldr.32	s12, .L46+68
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 857              		.loc 19 70 15 view .LVU161
 858 011e 36EEE77A 		vsub.f32	s14, s13, s15
 859              	.LBE856:
 860              	.LBE855:
 861              	.LBB870:
 862              	.LBB842:
 863              	.LBB832:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 864              		.loc 18 62 9 view .LVU162
 865 0122 2C4D     		ldr	r5, .L46+72
 866              	.LBE832:
 867              	.LBE842:
 868              	.LBE870:
 869              	.LBB871:
 870              	.LBB865:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 871              		.loc 19 70 53 view .LVU163
 872 0124 67EE867A 		vmul.f32	s15, s15, s12
 873              	.LBE865:
 874              	.LBE871:
 875              	.LBB872:
 876              	.LBB843:
 877              	.LBB833:
 878              		.loc 18 64 9 view .LVU164
 879 0128 244E     		ldr	r6, .L46+48
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 880              		.loc 18 62 9 view .LVU165
 881 012a 4355     		strb	r3, [r0, r5]
 882              	.LBE833:
 883              	.LBE843:
 884              	.LBE872:
 885              	.LBB873:
 886              	.LBB866:
 887              	.LBB857:
 888              	.LBB858:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 64


 889              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 65


  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 890              		.loc 20 76 31 view .LVU166
 891 012c B0EEC77A 		vabs.f32	s14, s14
 892              	.LBE858:
 893              	.LBE857:
 894              	.LBE866:
 895              	.LBE873:
 896              	.LBB874:
 897              	.LBB844:
 898              	.LBB834:
  63:delayline_reverse.h ****         fading_ = false;
 899              		.loc 18 63 9 view .LVU167
 900 0130 294D     		ldr	r5, .L46+76
  60:delayline_reverse.h ****         headDiff_ = 0;
 901              		.loc 18 60 9 view .LVU168
 902 0132 C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 903              		.loc 18 61 9 view .LVU169
 904 0134 4361     		str	r3, [r0, #20]
 905              	.LBE834:
 906              	.LBE844:
 907              	.LBE874:
 908              	.LBB875:
 909              	.LBB867:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 910              		.loc 19 70 9 view .LVU170
 911 0136 B4EEE77A 		vcmpe.f32	s14, s15
 912              	.LBE867:
 913              	.LBE875:
 914              	.LBB876:
 915              	.LBB845:
 916              	.LBB835:
 917              		.loc 18 64 9 view .LVU171
 918 013a 8355     		strb	r3, [r0, r6]
 919              	.LVL42:
 920              		.loc 18 64 9 view .LVU172
 921              	.LBE835:
 922              	.LBE845:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 66


 923              	.LBE876:
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 924              		.loc 19 601 5 is_stmt 1 view .LVU173
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 925              		.loc 19 602 5 view .LVU174
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 926              		.loc 19 601 21 is_stmt 0 view .LVU175
 927 013c 0C60     		str	r4, [r1]
 928              	.LBB877:
 929              	.LBB846:
 930              	.LBB836:
  63:delayline_reverse.h ****         fading_ = false;
 931              		.loc 18 63 9 view .LVU176
 932 013e 2A60     		str	r2, [r5]	@ float
 933              	.LBE836:
 934              	.LBE846:
 935              	.LBE877:
 936              	.LBB878:
 937              	.LBB868:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 938              		.loc 19 70 9 view .LVU177
 939 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 940              	.LBE868:
 941              	.LBE878:
 942              	.LBB879:
 943              	.LBB847:
 944              	.LBB837:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 945              		.loc 18 59 9 view .LVU178
 946 0144 C0E90133 		strd	r3, r3, [r0, #4]
 947              	.LBE837:
 948              	.LBE847:
 949              	.LBE879:
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 950              		.loc 19 602 21 view .LVU179
 951 0148 244B     		ldr	r3, .L46+80
 952 014a 1860     		str	r0, [r3]
 605:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 953              		.loc 19 605 5 is_stmt 1 view .LVU180
 954              	.LVL43:
 955              	.LBB880:
 956              	.LBI855:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 957              		.loc 19 68 10 view .LVU181
 958              	.LBB869:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 959              		.loc 19 70 9 view .LVU182
 960              	.LBB860:
 961              	.LBI857:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 962              		.loc 20 75 3 view .LVU183
 963              	.LBB859:
 964              		.loc 20 76 5 view .LVU184
 965              		.loc 20 76 5 is_stmt 0 view .LVU185
 966              	.LBE859:
 967              	.LBE860:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 67


 968              		.loc 19 70 9 view .LVU186
 969 014c 04DD     		ble	.L33
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 970              		.loc 19 73 13 is_stmt 1 view .LVU187
 971              	.LBB861:
 972              	.LBB862:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 973              		.loc 18 72 9 is_stmt 0 view .LVU188
 974 014e 244D     		ldr	r5, .L46+84
 975              	.LBE862:
 976              	.LBE861:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 977              		.loc 19 73 27 view .LVU189
 978 0150 C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 979              		.loc 19 74 13 is_stmt 1 view .LVU190
 980              	.LVL44:
 981              	.LBB864:
 982              	.LBI861:
  69:delayline_reverse.h ****     {
 983              		.loc 18 69 17 view .LVU191
 984              	.LBB863:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 985              		.loc 18 71 9 is_stmt 0 view .LVU192
 986 0154 2260     		str	r2, [r4]	@ float
 987              		.loc 18 72 9 view .LVU193
 988 0156 2561     		str	r5, [r4, #16]
 989              	.LVL45:
 990              	.L33:
 991              		.loc 18 72 9 view .LVU194
 992              	.LBE863:
 993              	.LBE864:
 994              	.LBE869:
 995              	.LBE880:
 606:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 996              		.loc 19 606 5 is_stmt 1 view .LVU195
 997              	.LBB881:
 998              	.LBI881:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 999              		.loc 19 68 10 view .LVU196
 1000              	.LBB882:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1001              		.loc 19 70 9 view .LVU197
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1002              		.loc 19 70 28 is_stmt 0 view .LVU198
 1003 0158 D3ED017A 		vldr.32	s15, [r3, #4]
 1004              	.LVL46:
 1005              	.LBB883:
 1006              	.LBI883:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 68


 1007              		.loc 20 75 3 is_stmt 1 view .LVU199
 1008              	.LBB884:
 1009              		.loc 20 76 5 view .LVU200
 1010              		.loc 20 76 5 is_stmt 0 view .LVU201
 1011              	.LBE884:
 1012              	.LBE883:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1013              		.loc 19 70 15 view .LVU202
 1014 015c DFED1B6A 		vldr.32	s13, .L46+64
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1015              		.loc 19 70 53 view .LVU203
 1016 0160 9FED1B6A 		vldr.32	s12, .L46+68
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1017              		.loc 19 70 15 view .LVU204
 1018 0164 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1019              		.loc 19 70 53 view .LVU205
 1020 0168 67EE867A 		vmul.f32	s15, s15, s12
 1021              	.LBB886:
 1022              	.LBB885:
 1023              		.loc 20 76 31 view .LVU206
 1024 016c B0EEC77A 		vabs.f32	s14, s14
 1025              	.LBE885:
 1026              	.LBE886:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 1027              		.loc 19 70 9 view .LVU207
 1028 0170 B4EEE77A 		vcmpe.f32	s14, s15
 1029 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1030 0178 05DD     		ble	.L26
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 1031              		.loc 19 73 13 is_stmt 1 view .LVU208
 1032              	.LBB887:
 1033              	.LBB888:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1034              		.loc 18 71 9 is_stmt 0 view .LVU209
 1035 017a 0021     		movs	r1, #0
 1036              		.loc 18 72 9 view .LVU210
 1037 017c 184A     		ldr	r2, .L46+84
 1038              	.LBE888:
 1039              	.LBE887:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 1040              		.loc 19 73 27 view .LVU211
 1041 017e C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1042              		.loc 19 74 13 is_stmt 1 view .LVU212
 1043              	.LVL47:
 1044              	.LBB890:
 1045              	.LBI887:
  69:delayline_reverse.h ****     {
 1046              		.loc 18 69 17 view .LVU213
 1047              	.LBB889:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1048              		.loc 18 71 9 is_stmt 0 view .LVU214
 1049 0182 0160     		str	r1, [r0]	@ float
 1050              		.loc 18 72 9 view .LVU215
 1051 0184 0261     		str	r2, [r0, #16]
 1052              	.LVL48:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 69


 1053              	.L26:
 1054              		.loc 18 72 9 view .LVU216
 1055              	.LBE889:
 1056              	.LBE890:
 1057              	.LBE882:
 1058              	.LBE881:
 608:Veno-Echo.cpp **** }
 1059              		.loc 19 608 1 view .LVU217
 1060 0186 05B0     		add	sp, sp, #20
 1061              		.cfi_def_cfa_offset 20
 1062              		@ sp needed
 1063 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 1064              	.L47:
 1065 018a 00BF     		.align	2
 1066              	.L46:
 1067 018c 84000000 		.word	delMemsL+132
 1068 0190 84786900 		.word	delMemsL+6912132
 1069 0194 84786900 		.word	6912132
 1070 0198 84000000 		.word	delMemsR+132
 1071 019c 84786900 		.word	delMemsR+6912132
 1072 01a0 00000000 		.word	.LANCHOR1
 1073 01a4 00000000 		.word	.LANCHOR0
 1074 01a8 0000FA43 		.word	1140457472
 1075 01ac 00000000 		.word	delMemsL_REV
 1076 01b0 189F2400 		.word	2400024
 1077 01b4 189F2400 		.word	delMemsL_REV+2400024
 1078 01b8 00000000 		.word	delMemsR_REV
 1079 01bc 249F2400 		.word	2400036
 1080 01c0 209F2400 		.word	delMemsL_REV+2400032
 1081 01c4 189F2400 		.word	delMemsR_REV+2400024
 1082 01c8 00000000 		.word	.LANCHOR2
 1083 01cc 00409C47 		.word	1201422336
 1084 01d0 0AD7A33B 		.word	1000593162
 1085 01d4 1C9F2400 		.word	2400028
 1086 01d8 209F2400 		.word	delMemsR_REV+2400032
 1087 01dc 00000000 		.word	.LANCHOR3
 1088 01e0 80380100 		.word	80000
 1089              		.cfi_endproc
 1090              	.LFE4289:
 1092              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1093              		.align	1
 1094              		.p2align 2,,3
 1095              		.global	_Z20Update_DelayTimeL_CVv
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv5-d16
 1101              	_Z20Update_DelayTimeL_CVv:
 1102              	.LFB4291:
 788:Veno-Echo.cpp **** {
 1103              		.loc 19 788 1 is_stmt 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1107              		.loc 19 789 5 view .LVU219
 788:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 70


 1108              		.loc 19 788 1 is_stmt 0 view .LVU220
 1109 0000 08B5     		push	{r3, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 3, -8
 1112              		.cfi_offset 14, -4
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1113              		.loc 19 789 36 view .LVU221
 1114 0002 0021     		movs	r1, #0
 1115 0004 0348     		ldr	r0, .L50
 1116 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1117              	.LVL49:
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1118              		.loc 19 789 19 view .LVU222
 1119 000a 034B     		ldr	r3, .L50+4
 1120 000c 83ED000A 		vstr.32	s0, [r3]
 790:Veno-Echo.cpp **** }
 1121              		.loc 19 790 1 view .LVU223
 1122 0010 08BD     		pop	{r3, pc}
 1123              	.L51:
 1124 0012 00BF     		.align	2
 1125              	.L50:
 1126 0014 18000000 		.word	.LANCHOR4+24
 1127 0018 00000000 		.word	.LANCHOR5
 1128              		.cfi_endproc
 1129              	.LFE4291:
 1131              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1132              		.align	1
 1133              		.p2align 2,,3
 1134              		.global	_Z20Update_DelayTimeR_CVv
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv5-d16
 1140              	_Z20Update_DelayTimeR_CVv:
 1141              	.LFB4293:
 886:Veno-Echo.cpp **** {
 1142              		.loc 19 886 1 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1146              		.loc 19 887 5 view .LVU225
 886:Veno-Echo.cpp **** {
 1147              		.loc 19 886 1 is_stmt 0 view .LVU226
 1148 0000 08B5     		push	{r3, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 3, -8
 1151              		.cfi_offset 14, -4
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1152              		.loc 19 887 36 view .LVU227
 1153 0002 0121     		movs	r1, #1
 1154 0004 0348     		ldr	r0, .L54
 1155 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1156              	.LVL50:
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1157              		.loc 19 887 19 view .LVU228
 1158 000a 034B     		ldr	r3, .L54+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 71


 1159 000c 83ED000A 		vstr.32	s0, [r3]
 888:Veno-Echo.cpp **** }
 1160              		.loc 19 888 1 view .LVU229
 1161 0010 08BD     		pop	{r3, pc}
 1162              	.L55:
 1163 0012 00BF     		.align	2
 1164              	.L54:
 1165 0014 18000000 		.word	.LANCHOR4+24
 1166 0018 00000000 		.word	.LANCHOR6
 1167              		.cfi_endproc
 1168              	.LFE4293:
 1170              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.global	_Z19Update_feedbackL_CVv
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1177              		.fpu fpv5-d16
 1179              	_Z19Update_feedbackL_CVv:
 1180              	.LFB4295:
 980:Veno-Echo.cpp **** {
 1181              		.loc 19 980 1 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1185              		.loc 19 981 5 view .LVU231
 980:Veno-Echo.cpp **** {
 1186              		.loc 19 980 1 is_stmt 0 view .LVU232
 1187 0000 08B5     		push	{r3, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 3, -8
 1190              		.cfi_offset 14, -4
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1191              		.loc 19 981 35 view .LVU233
 1192 0002 0221     		movs	r1, #2
 1193 0004 0348     		ldr	r0, .L58
 1194 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1195              	.LVL51:
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1196              		.loc 19 981 18 view .LVU234
 1197 000a 034B     		ldr	r3, .L58+4
 1198 000c 83ED000A 		vstr.32	s0, [r3]
 982:Veno-Echo.cpp **** }
 1199              		.loc 19 982 1 view .LVU235
 1200 0010 08BD     		pop	{r3, pc}
 1201              	.L59:
 1202 0012 00BF     		.align	2
 1203              	.L58:
 1204 0014 18000000 		.word	.LANCHOR4+24
 1205 0018 00000000 		.word	.LANCHOR7
 1206              		.cfi_endproc
 1207              	.LFE4295:
 1209              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 1210              		.align	1
 1211              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 72


 1212              		.global	_Z16Update_feedbackLv
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu fpv5-d16
 1218              	_Z16Update_feedbackLv:
 1219              	.LFB4296:
 984:Veno-Echo.cpp **** {
 1220              		.loc 19 984 1 is_stmt 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 985:Veno-Echo.cpp ****     static bool lastShift{};
 1224              		.loc 19 985 5 view .LVU237
 986:Veno-Echo.cpp ****     static pickupState feedbackL_pickup{};
 1225              		.loc 19 986 5 view .LVU238
 987:Veno-Echo.cpp ****     static pickupState HPCutoff_pickup{};
 1226              		.loc 19 987 5 view .LVU239
 989:Veno-Echo.cpp ****     static float feedbackL_Last{};
 1227              		.loc 19 989 5 view .LVU240
 990:Veno-Echo.cpp ****     static float HPCutoff_Last{};
 1228              		.loc 19 990 5 view .LVU241
 994:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1229              		.loc 19 994 5 view .LVU242
 984:Veno-Echo.cpp **** {
 1230              		.loc 19 984 1 is_stmt 0 view .LVU243
 1231 0000 10B5     		push	{r4, lr}
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 4, -8
 1234              		.cfi_offset 14, -4
 994:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1235              		.loc 19 994 43 view .LVU244
 1236 0002 0122     		movs	r2, #1
 1237 0004 0721     		movs	r1, #7
 1238 0006 7148     		ldr	r0, .L85
 984:Veno-Echo.cpp **** {
 1239              		.loc 19 984 1 view .LVU245
 1240 0008 2DED028B 		vpush.64	{d8}
 1241              		.cfi_def_cfa_offset 16
 1242              		.cfi_offset 80, -16
 1243              		.cfi_offset 81, -12
 994:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1244              		.loc 19 994 43 view .LVU246
 1245 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1246              	.LVL52:
 1247              	.LBB891:
 996:Veno-Echo.cpp ****     if (!shift) //default controls
 1248              		.loc 19 996 9 view .LVU247
 1249 0010 6F4B     		ldr	r3, .L85+4
 1250              	.LBE891:
 994:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1251              		.loc 19 994 43 view .LVU248
 1252 0012 B0EE408A 		vmov.f32	s16, s0
 1253              	.LVL53:
 996:Veno-Echo.cpp ****     if (!shift) //default controls
 1254              		.loc 19 996 5 is_stmt 1 view .LVU249
 1255              	.LBB947:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 73


 1256 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 0018 002B     		cmp	r3, #0
 1258 001a 76D1     		bne	.L61
 1259              	.LBB892:
 998:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1260              		.loc 19 998 9 view .LVU250
 998:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1261              		.loc 19 998 19 is_stmt 0 view .LVU251
 1262 001c 6D49     		ldr	r1, .L85+8
 998:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1263              		.loc 19 998 9 view .LVU252
 1264 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1265 0020 002A     		cmp	r2, #0
 1266 0022 49D0     		beq	.L62
1000:Veno-Echo.cpp ****             lastShift = shift;
 1267              		.loc 19 1000 13 is_stmt 1 view .LVU253
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1268              		.loc 19 1001 48 is_stmt 0 view .LVU254
 1269 0024 6C4A     		ldr	r2, .L85+12
 1270              	.LBB893:
 1271              	.LBB894:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1272              		.loc 19 1816 31 view .LVU255
 1273 0026 9FED6D7A 		vldr.32	s14, .L85+16
 1274              	.LBE894:
 1275              	.LBE893:
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1276              		.loc 19 1001 48 view .LVU256
 1277 002a D2ED007A 		vldr.32	s15, [r2]
1000:Veno-Echo.cpp ****             lastShift = shift;
 1278              		.loc 19 1000 23 view .LVU257
 1279 002e 0B70     		strb	r3, [r1]
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1280              		.loc 19 1001 13 is_stmt 1 view .LVU258
 1281              	.LVL54:
 1282              	.LBB899:
 1283              	.LBI893:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 1284              		.loc 19 1810 13 view .LVU259
 1285              	.LBB895:
1812:Veno-Echo.cpp ****     pickupState retval{};
 1286              		.loc 19 1812 5 view .LVU260
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 1287              		.loc 19 1814 5 view .LVU261
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1288              		.loc 19 1816 9 view .LVU262
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1289              		.loc 19 1816 31 is_stmt 0 view .LVU263
 1290 0030 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1291              		.loc 19 1816 9 view .LVU264
 1292 0034 B4EEE60A 		vcmpe.f32	s0, s13
 1293 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1294 003c 00F18A80 		bmi	.L63
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1295              		.loc 19 1821 14 is_stmt 1 view .LVU265
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 74


 1296              		.loc 19 1821 36 is_stmt 0 view .LVU266
 1297 0040 77EE877A 		vadd.f32	s15, s15, s14
 1298              	.LVL55:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1299              		.loc 19 1821 36 view .LVU267
 1300              	.LBE895:
 1301              	.LBE899:
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1302              		.loc 19 1001 30 view .LVU268
 1303 0044 664B     		ldr	r3, .L85+20
 1304              	.LBB900:
 1305              	.LBB896:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1306              		.loc 19 1821 14 view .LVU269
 1307 0046 B4EEE70A 		vcmpe.f32	s0, s15
 1308 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1309 004e 40F3B980 		ble	.L84
 1310              	.LVL56:
1855:Veno-Echo.cpp ****     return retval;
 1311              		.loc 19 1855 5 is_stmt 1 view .LVU270
1855:Veno-Echo.cpp ****     return retval;
 1312              		.loc 19 1855 5 is_stmt 0 view .LVU271
 1313              	.LBE896:
 1314              	.LBE900:
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1315              		.loc 19 1001 30 view .LVU272
 1316 0052 0121     		movs	r1, #1
 1317 0054 1970     		strb	r1, [r3]
1008:Veno-Echo.cpp ****         float feedbackL_combo{};
 1318              		.loc 19 1008 9 is_stmt 1 view .LVU273
 1319              	.LVL57:
1010:Veno-Echo.cpp ****         if(feedbackL_pickup == PICKEDUP)
 1320              		.loc 19 1010 9 view .LVU274
 1321              	.L66:
1018:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
 1322              		.loc 19 1018 13 view .LVU275
 1323              	.LBB901:
 1324              	.LBI901:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1325              		.loc 19 1792 7 view .LVU276
 1326              	.LBB902:
1794:Veno-Echo.cpp ****     float output{};
 1327              		.loc 19 1794 5 view .LVU277
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1328              		.loc 19 1795 5 view .LVU278
 1329              	.LBE902:
 1330              	.LBE901:
1018:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
 1331              		.loc 19 1018 41 is_stmt 0 view .LVU279
 1332 0056 634B     		ldr	r3, .L85+24
 1333              	.LBB905:
 1334              	.LBB903:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1335              		.loc 19 1795 39 view .LVU280
 1336 0058 B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1337              		.loc 19 1795 49 view .LVU281
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 75


 1338 005c B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1339              		.loc 19 1795 12 view .LVU282
 1340 0060 92ED000A 		vldr.32	s0, [r2]
 1341              	.LVL58:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1342              		.loc 19 1795 39 view .LVU283
 1343 0064 D3ED007A 		vldr.32	s15, [r3]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1344              		.loc 19 1795 12 view .LVU284
 1345 0068 F0EE006A 		vmov.f32	s13, #2.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1346              		.loc 19 1795 39 view .LVU285
 1347 006c 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1348              		.loc 19 1795 49 view .LVU286
 1349 0070 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1350              		.loc 19 1795 12 view .LVU287
 1351 0074 A7EEA60A 		vfma.f32	s0, s15, s13
 1352              	.LVL59:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 1353              		.loc 19 1797 5 is_stmt 1 view .LVU288
 1354 0078 B5EEC00A 		vcmpe.f32	s0, #0
 1355 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1356 0080 65D4     		bmi	.L78
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 1357              		.loc 19 1802 5 view .LVU289
1804:Veno-Echo.cpp ****         output = 1.0f;
 1358              		.loc 19 1804 16 is_stmt 0 view .LVU290
 1359 0082 B4EE470A 		vcmp.f32	s0, s14
 1360 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1361 008a 37FE000A 		vselgt.f32	s0, s14, s0
 1362              	.LVL60:
 1363              	.L69:
1804:Veno-Echo.cpp ****         output = 1.0f;
 1364              		.loc 19 1804 16 view .LVU291
 1365              	.LBE903:
 1366              	.LBE905:
1021:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
 1367              		.loc 19 1021 9 is_stmt 1 view .LVU292
1021:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
 1368              		.loc 19 1021 37 is_stmt 0 view .LVU293
 1369 008e B7EE041A 		vmov.f32	s2, #1.25e+0
 1370 0092 0020     		movs	r0, #0
 1371 0094 DFED540A 		vldr.32	s1, .L85+28
 1372 0098 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1373              	.LVL61:
1022:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1374              		.loc 19 1022 9 is_stmt 1 view .LVU294
 1375              	.LBB906:
 1376              	.LBI906:
 1377              		.file 21 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 76


   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 77


  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 78


 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1378              		.loc 21 135 13 view .LVU295
 1379              	.LBB907:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 1380              		.loc 21 137 5 view .LVU296
 1381              		.loc 21 137 9 is_stmt 0 view .LVU297
 1382 009c 534B     		ldr	r3, .L85+32
 1383 009e 9FED547A 		vldr.32	s14, .L85+36
 1384 00a2 D3ED007A 		vldr.32	s15, [r3]
 1385              		.loc 21 137 24 view .LVU298
 1386 00a6 30EE670A 		vsub.f32	s0, s0, s15
 1387              	.LVL62:
 1388              		.loc 21 137 9 view .LVU299
 1389 00aa E0EE077A 		vfma.f32	s15, s0, s14
 1390 00ae C3ED007A 		vstr.32	s15, [r3]
 1391              	.LVL63:
 1392              	.L60:
 1393              		.loc 21 137 9 view .LVU300
 1394              	.LBE907:
 1395              	.LBE906:
 1396              	.LBE892:
 1397              	.LBE947:
1049:Veno-Echo.cpp **** }
 1398              		.loc 19 1049 1 view .LVU301
 1399 00b2 BDEC028B 		vldm	sp!, {d8}
 1400              		.cfi_remember_state
 1401              		.cfi_restore 80
 1402              		.cfi_restore 81
 1403              		.cfi_def_cfa_offset 8
 1404              	.LVL64:
1049:Veno-Echo.cpp **** }
 1405              		.loc 19 1049 1 view .LVU302
 1406 00b6 10BD     		pop	{r4, pc}
 1407              	.LVL65:
 1408              	.L62:
 1409              		.cfi_restore_state
 1410              	.LBB948:
 1411              	.LBB921:
1005:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,false
 1412              		.loc 19 1005 13 is_stmt 1 view .LVU303
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 79


 1413              	.LBB908:
 1414              	.LBI908:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 1415              		.loc 19 1810 13 view .LVU304
 1416              	.LBB909:
1812:Veno-Echo.cpp ****     pickupState retval{};
 1417              		.loc 19 1812 5 view .LVU305
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 1418              		.loc 19 1814 5 view .LVU306
 1419              	.LBE909:
 1420              	.LBE908:
1005:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,false
 1421              		.loc 19 1005 48 is_stmt 0 view .LVU307
 1422 00b8 494B     		ldr	r3, .L85+20
 1423 00ba 474A     		ldr	r2, .L85+12
 1424              	.LBB911:
 1425              	.LBB910:
 1426 00bc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1427 00be D2ED000A 		vldr.32	s1, [r2]
 1428 00c2 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 1429              	.LVL66:
1855:Veno-Echo.cpp ****     return retval;
 1430              		.loc 19 1855 5 is_stmt 1 view .LVU308
1855:Veno-Echo.cpp ****     return retval;
 1431              		.loc 19 1855 5 is_stmt 0 view .LVU309
 1432              	.LBE910:
 1433              	.LBE911:
1010:Veno-Echo.cpp ****         if(feedbackL_pickup == PICKEDUP)
 1434              		.loc 19 1010 9 view .LVU310
 1435 00c6 0228     		cmp	r0, #2
1005:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,false
 1436              		.loc 19 1005 30 view .LVU311
 1437 00c8 1870     		strb	r0, [r3]
1008:Veno-Echo.cpp ****         float feedbackL_combo{};
 1438              		.loc 19 1008 9 is_stmt 1 view .LVU312
 1439              	.LVL67:
1010:Veno-Echo.cpp ****         if(feedbackL_pickup == PICKEDUP)
 1440              		.loc 19 1010 9 view .LVU313
 1441 00ca C4D1     		bne	.L66
 1442              	.L65:
1012:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
 1443              		.loc 19 1012 13 view .LVU314
 1444              	.LVL68:
 1445              	.LBB912:
 1446              	.LBI912:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1447              		.loc 19 1792 7 view .LVU315
 1448              	.LBB913:
1794:Veno-Echo.cpp ****     float output{};
 1449              		.loc 19 1794 5 view .LVU316
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1450              		.loc 19 1795 5 view .LVU317
 1451              	.LBE913:
 1452              	.LBE912:
1012:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
 1453              		.loc 19 1012 41 is_stmt 0 view .LVU318
 1454 00cc 454B     		ldr	r3, .L85+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 80


 1455              	.LBB916:
 1456              	.LBB914:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1457              		.loc 19 1795 39 view .LVU319
 1458 00ce B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1459              		.loc 19 1795 49 view .LVU320
 1460 00d2 B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1461              		.loc 19 1795 39 view .LVU321
 1462 00d6 D3ED007A 		vldr.32	s15, [r3]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1463              		.loc 19 1795 12 view .LVU322
 1464 00da F0EE006A 		vmov.f32	s13, #2.0e+0
 1465 00de B0EE480A 		vmov.f32	s0, s16
 1466              	.LVL69:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1467              		.loc 19 1795 39 view .LVU323
 1468 00e2 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1469              		.loc 19 1795 49 view .LVU324
 1470 00e6 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1471              		.loc 19 1795 12 view .LVU325
 1472 00ea A7EEA60A 		vfma.f32	s0, s15, s13
 1473              	.LVL70:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 1474              		.loc 19 1797 5 is_stmt 1 view .LVU326
 1475 00ee B5EEC00A 		vcmpe.f32	s0, #0
 1476 00f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1477 00f6 5FD4     		bmi	.L77
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 1478              		.loc 19 1802 5 view .LVU327
1804:Veno-Echo.cpp ****         output = 1.0f;
 1479              		.loc 19 1804 16 is_stmt 0 view .LVU328
 1480 00f8 B4EE470A 		vcmp.f32	s0, s14
 1481 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1482 0100 37FE000A 		vselgt.f32	s0, s14, s0
 1483              	.LVL71:
 1484              	.L67:
1807:Veno-Echo.cpp ****     return output;
 1485              		.loc 19 1807 5 is_stmt 1 view .LVU329
1807:Veno-Echo.cpp ****     return output;
 1486              		.loc 19 1807 5 is_stmt 0 view .LVU330
 1487              	.LBE914:
 1488              	.LBE916:
1013:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot;
 1489              		.loc 19 1013 13 is_stmt 1 view .LVU331
1013:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot;
 1490              		.loc 19 1013 28 is_stmt 0 view .LVU332
 1491 0104 82ED008A 		vstr.32	s16, [r2]
 1492 0108 C1E7     		b	.L69
 1493              	.LVL72:
 1494              	.L61:
1013:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot;
 1495              		.loc 19 1013 28 view .LVU333
 1496              	.LBE921:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 81


 1497              	.LBB922:
1026:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1498              		.loc 19 1026 9 is_stmt 1 view .LVU334
1026:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1499              		.loc 19 1026 19 is_stmt 0 view .LVU335
 1500 010a 324B     		ldr	r3, .L85+8
1026:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1501              		.loc 19 1026 9 view .LVU336
 1502 010c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1503 010e 22BB     		cbnz	r2, .L72
1028:Veno-Echo.cpp ****             lastShift = shift;
 1504              		.loc 19 1028 13 is_stmt 1 view .LVU337
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1505              		.loc 19 1029 47 is_stmt 0 view .LVU338
 1506 0110 384C     		ldr	r4, .L85+40
1028:Veno-Echo.cpp ****             lastShift = shift;
 1507              		.loc 19 1028 23 view .LVU339
 1508 0112 0121     		movs	r1, #1
 1509              	.LBB923:
 1510              	.LBB924:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1511              		.loc 19 1816 31 view .LVU340
 1512 0114 9FED317A 		vldr.32	s14, .L85+16
 1513              	.LBE924:
 1514              	.LBE923:
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1515              		.loc 19 1029 47 view .LVU341
 1516 0118 D4ED007A 		vldr.32	s15, [r4]
1028:Veno-Echo.cpp ****             lastShift = shift;
 1517              		.loc 19 1028 23 view .LVU342
 1518 011c 1970     		strb	r1, [r3]
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1519              		.loc 19 1029 13 is_stmt 1 view .LVU343
 1520              	.LVL73:
 1521              	.LBB929:
 1522              	.LBI923:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 1523              		.loc 19 1810 13 view .LVU344
 1524              	.LBB925:
1812:Veno-Echo.cpp ****     pickupState retval{};
 1525              		.loc 19 1812 5 view .LVU345
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 1526              		.loc 19 1814 5 view .LVU346
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1527              		.loc 19 1816 9 view .LVU347
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1528              		.loc 19 1816 31 is_stmt 0 view .LVU348
 1529 011e 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1530              		.loc 19 1816 9 view .LVU349
 1531 0122 B4EEE60A 		vcmpe.f32	s0, s13
 1532 0126 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1533 012a 0BD4     		bmi	.L73
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1534              		.loc 19 1821 14 is_stmt 1 view .LVU350
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1535              		.loc 19 1821 36 is_stmt 0 view .LVU351
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 82


 1536 012c 77EE877A 		vadd.f32	s15, s15, s14
 1537              	.LVL74:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1538              		.loc 19 1821 36 view .LVU352
 1539              	.LBE925:
 1540              	.LBE929:
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1541              		.loc 19 1029 29 view .LVU353
 1542 0130 314B     		ldr	r3, .L85+44
 1543              	.LBB930:
 1544              	.LBB926:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1545              		.loc 19 1821 14 view .LVU354
 1546 0132 B4EEE70A 		vcmpe.f32	s0, s15
 1547 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1548 013a 40DD     		ble	.L82
 1549              	.LVL75:
1855:Veno-Echo.cpp ****     return retval;
 1550              		.loc 19 1855 5 is_stmt 1 view .LVU355
1855:Veno-Echo.cpp ****     return retval;
 1551              		.loc 19 1855 5 is_stmt 0 view .LVU356
 1552              	.LBE926:
 1553              	.LBE930:
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1554              		.loc 19 1029 29 view .LVU357
 1555 013c 1970     		strb	r1, [r3]
1037:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
 1556              		.loc 19 1037 9 is_stmt 1 view .LVU358
 1557              	.LBE922:
 1558              	.LBE948:
1049:Veno-Echo.cpp **** }
 1559              		.loc 19 1049 1 is_stmt 0 view .LVU359
 1560 013e BDEC028B 		vldm	sp!, {d8}
 1561              		.cfi_remember_state
 1562              		.cfi_restore 80
 1563              		.cfi_restore 81
 1564              		.cfi_def_cfa_offset 8
 1565 0142 10BD     		pop	{r4, pc}
 1566              	.LVL76:
 1567              	.L73:
 1568              		.cfi_restore_state
 1569              	.LBB949:
 1570              	.LBB940:
 1571              	.LBB931:
 1572              	.LBB927:
1855:Veno-Echo.cpp ****     return retval;
 1573              		.loc 19 1855 5 is_stmt 1 view .LVU360
1855:Veno-Echo.cpp ****     return retval;
 1574              		.loc 19 1855 5 is_stmt 0 view .LVU361
 1575              	.LBE927:
 1576              	.LBE931:
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1577              		.loc 19 1029 29 view .LVU362
 1578 0144 2C4B     		ldr	r3, .L85+44
 1579              	.LBE940:
 1580              	.LBE949:
1049:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 83


 1581              		.loc 19 1049 1 view .LVU363
 1582 0146 BDEC028B 		vldm	sp!, {d8}
 1583              		.cfi_remember_state
 1584              		.cfi_restore 80
 1585              		.cfi_restore 81
 1586              		.cfi_def_cfa_offset 8
 1587              	.LBB950:
 1588              	.LBB941:
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1589              		.loc 19 1029 29 view .LVU364
 1590 014a 1A70     		strb	r2, [r3]
1037:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
 1591              		.loc 19 1037 9 is_stmt 1 view .LVU365
 1592              	.LBE941:
 1593              	.LBE950:
1049:Veno-Echo.cpp **** }
 1594              		.loc 19 1049 1 is_stmt 0 view .LVU366
 1595 014c 10BD     		pop	{r4, pc}
 1596              	.LVL77:
 1597              	.L78:
 1598              		.cfi_restore_state
 1599              	.LBB951:
 1600              	.LBB942:
 1601              	.LBB917:
 1602              	.LBB904:
1799:Veno-Echo.cpp ****         output = 0.0f;
 1603              		.loc 19 1799 16 view .LVU367
 1604 014e 9FED260A 		vldr.32	s0, .L85+28
 1605              	.LVL78:
1799:Veno-Echo.cpp ****         output = 0.0f;
 1606              		.loc 19 1799 16 view .LVU368
 1607 0152 9CE7     		b	.L69
 1608              	.LVL79:
 1609              	.L63:
1799:Veno-Echo.cpp ****         output = 0.0f;
 1610              		.loc 19 1799 16 view .LVU369
 1611              	.LBE904:
 1612              	.LBE917:
 1613              	.LBB918:
 1614              	.LBB897:
1855:Veno-Echo.cpp ****     return retval;
 1615              		.loc 19 1855 5 is_stmt 1 view .LVU370
1855:Veno-Echo.cpp ****     return retval;
 1616              		.loc 19 1855 5 is_stmt 0 view .LVU371
 1617              	.LBE897:
 1618              	.LBE918:
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1619              		.loc 19 1001 30 view .LVU372
 1620 0154 2249     		ldr	r1, .L85+20
 1621 0156 0B70     		strb	r3, [r1]
1008:Veno-Echo.cpp ****         float feedbackL_combo{};
 1622              		.loc 19 1008 9 is_stmt 1 view .LVU373
 1623              	.LVL80:
1010:Veno-Echo.cpp ****         if(feedbackL_pickup == PICKEDUP)
 1624              		.loc 19 1010 9 view .LVU374
 1625 0158 7DE7     		b	.L66
 1626              	.LVL81:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 84


 1627              	.L72:
1010:Veno-Echo.cpp ****         if(feedbackL_pickup == PICKEDUP)
 1628              		.loc 19 1010 9 is_stmt 0 view .LVU375
 1629              	.LBE942:
 1630              	.LBB943:
1034:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,false);
 1631              		.loc 19 1034 13 is_stmt 1 view .LVU376
 1632              	.LBB932:
 1633              	.LBI932:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 1634              		.loc 19 1810 13 view .LVU377
 1635              	.LBB933:
1812:Veno-Echo.cpp ****     pickupState retval{};
 1636              		.loc 19 1812 5 view .LVU378
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 1637              		.loc 19 1814 5 view .LVU379
 1638              	.LBE933:
 1639              	.LBE932:
1034:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,false);
 1640              		.loc 19 1034 47 is_stmt 0 view .LVU380
 1641 015a 274B     		ldr	r3, .L85+44
 1642 015c 254C     		ldr	r4, .L85+40
 1643              	.LBB935:
 1644              	.LBB934:
 1645 015e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1646 0160 D4ED000A 		vldr.32	s1, [r4]
 1647 0164 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 1648              	.LVL82:
1855:Veno-Echo.cpp ****     return retval;
 1649              		.loc 19 1855 5 is_stmt 1 view .LVU381
1855:Veno-Echo.cpp ****     return retval;
 1650              		.loc 19 1855 5 is_stmt 0 view .LVU382
 1651              	.LBE934:
 1652              	.LBE935:
 1653              	.LBB936:
1037:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
 1654              		.loc 19 1037 9 view .LVU383
 1655 0168 0228     		cmp	r0, #2
 1656              	.LBE936:
1034:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,false);
 1657              		.loc 19 1034 29 view .LVU384
 1658 016a 1870     		strb	r0, [r3]
1037:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
 1659              		.loc 19 1037 9 is_stmt 1 view .LVU385
 1660              	.LBB938:
 1661 016c A1D1     		bne	.L60
 1662              	.L76:
 1663              	.LBB937:
1039:Veno-Echo.cpp ****             float HPCutoff{};
 1664              		.loc 19 1039 13 view .LVU386
 1665              	.LVL83:
1040:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1666              		.loc 19 1040 13 view .LVU387
1040:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1667              		.loc 19 1040 29 is_stmt 0 view .LVU388
 1668 016e 9FED231A 		vldr.32	s2, .L85+48
 1669 0172 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 85


 1670              	.LVL84:
1040:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1671              		.loc 19 1040 29 view .LVU389
 1672 0176 DFED220A 		vldr.32	s1, .L85+52
 1673 017a 0120     		movs	r0, #1
 1674 017c FFF7FEFF 		bl	_Z5scalefff9CurveType
 1675              	.LVL85:
 1676 0180 F0EE408A 		vmov.f32	s17, s0
 1677              	.LVL86:
1041:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1678              		.loc 19 1041 13 is_stmt 1 view .LVU390
1041:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1679              		.loc 19 1041 26 is_stmt 0 view .LVU391
 1680 0184 1F48     		ldr	r0, .L85+56
 1681 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1682              	.LVL87:
1042:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1683              		.loc 19 1042 13 is_stmt 1 view .LVU392
1042:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1684              		.loc 19 1042 26 is_stmt 0 view .LVU393
 1685 018a 1F48     		ldr	r0, .L85+60
 1686 018c B0EE680A 		vmov.f32	s0, s17
 1687 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1688              	.LVL88:
1043:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1689              		.loc 19 1043 13 is_stmt 1 view .LVU394
1043:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1690              		.loc 19 1043 31 is_stmt 0 view .LVU395
 1691 0194 B0EE680A 		vmov.f32	s0, s17
 1692 0198 1C48     		ldr	r0, .L85+64
 1693 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1694              	.LVL89:
1044:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1695              		.loc 19 1044 13 is_stmt 1 view .LVU396
1044:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1696              		.loc 19 1044 31 is_stmt 0 view .LVU397
 1697 019e B0EE680A 		vmov.f32	s0, s17
 1698 01a2 1B48     		ldr	r0, .L85+68
 1699 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1700              	.LVL90:
1045:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1701              		.loc 19 1045 13 is_stmt 1 view .LVU398
1045:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1702              		.loc 19 1045 35 is_stmt 0 view .LVU399
 1703 01a8 1A4B     		ldr	r3, .L85+72
1046:Veno-Echo.cpp ****             HPCutoff_Last = feedbackL_Pot;  //update last value
 1704              		.loc 19 1046 27 view .LVU400
 1705 01aa 84ED008A 		vstr.32	s16, [r4]
1045:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1706              		.loc 19 1045 35 view .LVU401
 1707 01ae C3ED048A 		vstr.32	s17, [r3, #16]
1046:Veno-Echo.cpp ****             HPCutoff_Last = feedbackL_Pot;  //update last value
 1708              		.loc 19 1046 13 is_stmt 1 view .LVU402
 1709              	.LBE937:
 1710              	.LBE938:
 1711              	.LBE943:
 1712              	.LBE951:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 86


1049:Veno-Echo.cpp **** }
 1713              		.loc 19 1049 1 is_stmt 0 view .LVU403
 1714 01b2 BDEC028B 		vldm	sp!, {d8}
 1715              		.cfi_remember_state
 1716              		.cfi_restore 80
 1717              		.cfi_restore 81
 1718              		.cfi_def_cfa_offset 8
 1719              	.LVL91:
1049:Veno-Echo.cpp **** }
 1720              		.loc 19 1049 1 view .LVU404
 1721 01b6 10BD     		pop	{r4, pc}
 1722              	.LVL92:
 1723              	.L77:
 1724              		.cfi_restore_state
 1725              	.LBB952:
 1726              	.LBB944:
 1727              	.LBB919:
 1728              	.LBB915:
1799:Veno-Echo.cpp ****         output = 0.0f;
 1729              		.loc 19 1799 16 view .LVU405
 1730 01b8 9FED0B0A 		vldr.32	s0, .L85+28
 1731              	.LVL93:
1799:Veno-Echo.cpp ****         output = 0.0f;
 1732              		.loc 19 1799 16 view .LVU406
 1733 01bc A2E7     		b	.L67
 1734              	.LVL94:
 1735              	.L82:
1799:Veno-Echo.cpp ****         output = 0.0f;
 1736              		.loc 19 1799 16 view .LVU407
 1737              	.LBE915:
 1738              	.LBE919:
 1739              	.LBE944:
 1740              	.LBB945:
 1741              	.LBB939:
 1742              	.LBB928:
1855:Veno-Echo.cpp ****     return retval;
 1743              		.loc 19 1855 5 is_stmt 1 view .LVU408
1855:Veno-Echo.cpp ****     return retval;
 1744              		.loc 19 1855 5 is_stmt 0 view .LVU409
 1745              	.LBE928:
 1746              	.LBE939:
1029:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true);
 1747              		.loc 19 1029 29 view .LVU410
 1748 01be 0222     		movs	r2, #2
 1749 01c0 1A70     		strb	r2, [r3]
1037:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
 1750              		.loc 19 1037 9 is_stmt 1 view .LVU411
 1751 01c2 D4E7     		b	.L76
 1752              	.LVL95:
 1753              	.L84:
1037:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
 1754              		.loc 19 1037 9 is_stmt 0 view .LVU412
 1755              	.LBE945:
 1756              	.LBB946:
 1757              	.LBB920:
 1758              	.LBB898:
1855:Veno-Echo.cpp ****     return retval;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 87


 1759              		.loc 19 1855 5 is_stmt 1 view .LVU413
1855:Veno-Echo.cpp ****     return retval;
 1760              		.loc 19 1855 5 is_stmt 0 view .LVU414
 1761              	.LBE898:
 1762              	.LBE920:
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1763              		.loc 19 1001 30 view .LVU415
 1764 01c4 0221     		movs	r1, #2
 1765 01c6 1970     		strb	r1, [r3]
1008:Veno-Echo.cpp ****         float feedbackL_combo{};
 1766              		.loc 19 1008 9 is_stmt 1 view .LVU416
 1767              	.LVL96:
1010:Veno-Echo.cpp ****         if(feedbackL_pickup == PICKEDUP)
 1768              		.loc 19 1010 9 view .LVU417
 1769 01c8 80E7     		b	.L65
 1770              	.L86:
 1771 01ca 00BF     		.align	2
 1772              	.L85:
 1773 01cc 18000000 		.word	.LANCHOR4+24
 1774 01d0 00000000 		.word	.LANCHOR8
 1775 01d4 00000000 		.word	.LANCHOR9
 1776 01d8 00000000 		.word	.LANCHOR10
 1777 01dc 0AD7A33B 		.word	1000593162
 1778 01e0 00000000 		.word	.LANCHOR11
 1779 01e4 00000000 		.word	.LANCHOR7
 1780 01e8 00000000 		.word	0
 1781 01ec 00000000 		.word	.LANCHOR12
 1782 01f0 6F12033D 		.word	1023611503
 1783 01f4 00000000 		.word	.LANCHOR13
 1784 01f8 00000000 		.word	.LANCHOR14
 1785 01fc 00004844 		.word	1145569280
 1786 0200 0000C842 		.word	1120403456
 1787 0204 00000000 		.word	.LANCHOR15
 1788 0208 00000000 		.word	.LANCHOR16
 1789 020c 00000000 		.word	.LANCHOR17
 1790 0210 00000000 		.word	.LANCHOR18
 1791 0214 00000000 		.word	.LANCHOR19
 1792              	.LBE946:
 1793              	.LBE952:
 1794              		.cfi_endproc
 1795              	.LFE4296:
 1797              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 1798              		.align	1
 1799              		.p2align 2,,3
 1800              		.global	_Z19Update_feedbackR_CVv
 1801              		.syntax unified
 1802              		.thumb
 1803              		.thumb_func
 1804              		.fpu fpv5-d16
 1806              	_Z19Update_feedbackR_CVv:
 1807              	.LFB4297:
1052:Veno-Echo.cpp **** {
 1808              		.loc 19 1052 1 view -0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
1053:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 88


 1812              		.loc 19 1053 5 view .LVU419
1052:Veno-Echo.cpp **** {
 1813              		.loc 19 1052 1 is_stmt 0 view .LVU420
 1814 0000 08B5     		push	{r3, lr}
 1815              		.cfi_def_cfa_offset 8
 1816              		.cfi_offset 3, -8
 1817              		.cfi_offset 14, -4
1053:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1818              		.loc 19 1053 35 view .LVU421
 1819 0002 0321     		movs	r1, #3
 1820 0004 0348     		ldr	r0, .L89
 1821 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1822              	.LVL97:
1053:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1823              		.loc 19 1053 18 view .LVU422
 1824 000a 034B     		ldr	r3, .L89+4
 1825 000c 83ED000A 		vstr.32	s0, [r3]
1054:Veno-Echo.cpp **** }
 1826              		.loc 19 1054 1 view .LVU423
 1827 0010 08BD     		pop	{r3, pc}
 1828              	.L90:
 1829 0012 00BF     		.align	2
 1830              	.L89:
 1831 0014 18000000 		.word	.LANCHOR4+24
 1832 0018 00000000 		.word	.LANCHOR20
 1833              		.cfi_endproc
 1834              	.LFE4297:
 1836              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 1837              		.align	1
 1838              		.p2align 2,,3
 1839              		.global	_Z16Update_feedbackRv
 1840              		.syntax unified
 1841              		.thumb
 1842              		.thumb_func
 1843              		.fpu fpv5-d16
 1845              	_Z16Update_feedbackRv:
 1846              	.LFB4298:
1057:Veno-Echo.cpp **** {
 1847              		.loc 19 1057 1 is_stmt 1 view -0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
1058:Veno-Echo.cpp ****     static bool lastShift{};
 1851              		.loc 19 1058 5 view .LVU425
1059:Veno-Echo.cpp ****     static pickupState feedbackR_pickup{};
 1852              		.loc 19 1059 5 view .LVU426
1060:Veno-Echo.cpp ****     static pickupState LPCutoff_pickup{};
 1853              		.loc 19 1060 5 view .LVU427
1062:Veno-Echo.cpp ****     static float feedbackR_Last{};
 1854              		.loc 19 1062 5 view .LVU428
1063:Veno-Echo.cpp ****     static float LPCutoff_Last{};
 1855              		.loc 19 1063 5 view .LVU429
1066:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1856              		.loc 19 1066 5 view .LVU430
1057:Veno-Echo.cpp **** {
 1857              		.loc 19 1057 1 is_stmt 0 view .LVU431
 1858 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 89


 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 4, -8
 1861              		.cfi_offset 14, -4
1066:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1862              		.loc 19 1066 43 view .LVU432
 1863 0002 0422     		movs	r2, #4
 1864 0004 0721     		movs	r1, #7
 1865 0006 7148     		ldr	r0, .L116
1057:Veno-Echo.cpp **** {
 1866              		.loc 19 1057 1 view .LVU433
 1867 0008 2DED028B 		vpush.64	{d8}
 1868              		.cfi_def_cfa_offset 16
 1869              		.cfi_offset 80, -16
 1870              		.cfi_offset 81, -12
1066:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1871              		.loc 19 1066 43 view .LVU434
 1872 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1873              	.LVL98:
 1874              	.LBB953:
1068:Veno-Echo.cpp ****     if (!shift) //default controls
 1875              		.loc 19 1068 9 view .LVU435
 1876 0010 6F4B     		ldr	r3, .L116+4
 1877              	.LBE953:
1066:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1878              		.loc 19 1066 43 view .LVU436
 1879 0012 B0EE408A 		vmov.f32	s16, s0
 1880              	.LVL99:
1068:Veno-Echo.cpp ****     if (!shift) //default controls
 1881              		.loc 19 1068 5 is_stmt 1 view .LVU437
 1882              	.LBB1009:
 1883 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 0018 002B     		cmp	r3, #0
 1885 001a 76D1     		bne	.L92
 1886              	.LBB954:
1070:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1887              		.loc 19 1070 9 view .LVU438
1070:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1888              		.loc 19 1070 19 is_stmt 0 view .LVU439
 1889 001c 6D49     		ldr	r1, .L116+8
1070:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1890              		.loc 19 1070 9 view .LVU440
 1891 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1892 0020 002A     		cmp	r2, #0
 1893 0022 49D0     		beq	.L93
1072:Veno-Echo.cpp ****             lastShift = shift;
 1894              		.loc 19 1072 13 is_stmt 1 view .LVU441
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 1895              		.loc 19 1073 48 is_stmt 0 view .LVU442
 1896 0024 6C4A     		ldr	r2, .L116+12
 1897              	.LBB955:
 1898              	.LBB956:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1899              		.loc 19 1816 31 view .LVU443
 1900 0026 9FED6D7A 		vldr.32	s14, .L116+16
 1901              	.LBE956:
 1902              	.LBE955:
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 90


 1903              		.loc 19 1073 48 view .LVU444
 1904 002a D2ED007A 		vldr.32	s15, [r2]
1072:Veno-Echo.cpp ****             lastShift = shift;
 1905              		.loc 19 1072 23 view .LVU445
 1906 002e 0B70     		strb	r3, [r1]
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 1907              		.loc 19 1073 13 is_stmt 1 view .LVU446
 1908              	.LVL100:
 1909              	.LBB961:
 1910              	.LBI955:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 1911              		.loc 19 1810 13 view .LVU447
 1912              	.LBB957:
1812:Veno-Echo.cpp ****     pickupState retval{};
 1913              		.loc 19 1812 5 view .LVU448
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 1914              		.loc 19 1814 5 view .LVU449
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1915              		.loc 19 1816 9 view .LVU450
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1916              		.loc 19 1816 31 is_stmt 0 view .LVU451
 1917 0030 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 1918              		.loc 19 1816 9 view .LVU452
 1919 0034 B4EEE60A 		vcmpe.f32	s0, s13
 1920 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1921 003c 00F18A80 		bmi	.L94
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1922              		.loc 19 1821 14 is_stmt 1 view .LVU453
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1923              		.loc 19 1821 36 is_stmt 0 view .LVU454
 1924 0040 77EE877A 		vadd.f32	s15, s15, s14
 1925              	.LVL101:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1926              		.loc 19 1821 36 view .LVU455
 1927              	.LBE957:
 1928              	.LBE961:
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 1929              		.loc 19 1073 30 view .LVU456
 1930 0044 664B     		ldr	r3, .L116+20
 1931              	.LBB962:
 1932              	.LBB958:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 1933              		.loc 19 1821 14 view .LVU457
 1934 0046 B4EEE70A 		vcmpe.f32	s0, s15
 1935 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1936 004e 40F3B980 		ble	.L115
 1937              	.LVL102:
1855:Veno-Echo.cpp ****     return retval;
 1938              		.loc 19 1855 5 is_stmt 1 view .LVU458
1855:Veno-Echo.cpp ****     return retval;
 1939              		.loc 19 1855 5 is_stmt 0 view .LVU459
 1940              	.LBE958:
 1941              	.LBE962:
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 1942              		.loc 19 1073 30 view .LVU460
 1943 0052 0121     		movs	r1, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 91


 1944 0054 1970     		strb	r1, [r3]
1080:Veno-Echo.cpp ****         float feedbackR_combo{};
 1945              		.loc 19 1080 9 is_stmt 1 view .LVU461
 1946              	.LVL103:
1082:Veno-Echo.cpp ****         if(feedbackR_pickup == PICKEDUP)
 1947              		.loc 19 1082 9 view .LVU462
 1948              	.L97:
1090:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
 1949              		.loc 19 1090 13 view .LVU463
 1950              	.LBB963:
 1951              	.LBI963:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1952              		.loc 19 1792 7 view .LVU464
 1953              	.LBB964:
1794:Veno-Echo.cpp ****     float output{};
 1954              		.loc 19 1794 5 view .LVU465
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1955              		.loc 19 1795 5 view .LVU466
 1956              	.LBE964:
 1957              	.LBE963:
1090:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
 1958              		.loc 19 1090 41 is_stmt 0 view .LVU467
 1959 0056 634B     		ldr	r3, .L116+24
 1960              	.LBB967:
 1961              	.LBB965:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 19 1795 39 view .LVU468
 1963 0058 B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1964              		.loc 19 1795 49 view .LVU469
 1965 005c B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1966              		.loc 19 1795 12 view .LVU470
 1967 0060 92ED000A 		vldr.32	s0, [r2]
 1968              	.LVL104:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1969              		.loc 19 1795 39 view .LVU471
 1970 0064 D3ED007A 		vldr.32	s15, [r3]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1971              		.loc 19 1795 12 view .LVU472
 1972 0068 F0EE006A 		vmov.f32	s13, #2.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1973              		.loc 19 1795 39 view .LVU473
 1974 006c 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1975              		.loc 19 1795 49 view .LVU474
 1976 0070 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1977              		.loc 19 1795 12 view .LVU475
 1978 0074 A7EEA60A 		vfma.f32	s0, s15, s13
 1979              	.LVL105:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 1980              		.loc 19 1797 5 is_stmt 1 view .LVU476
 1981 0078 B5EEC00A 		vcmpe.f32	s0, #0
 1982 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1983 0080 65D4     		bmi	.L109
1802:Veno-Echo.cpp ****     if(output > 1.0f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 92


 1984              		.loc 19 1802 5 view .LVU477
1804:Veno-Echo.cpp ****         output = 1.0f;
 1985              		.loc 19 1804 16 is_stmt 0 view .LVU478
 1986 0082 B4EE470A 		vcmp.f32	s0, s14
 1987 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1988 008a 37FE000A 		vselgt.f32	s0, s14, s0
 1989              	.LVL106:
 1990              	.L100:
1804:Veno-Echo.cpp ****         output = 1.0f;
 1991              		.loc 19 1804 16 view .LVU479
 1992              	.LBE965:
 1993              	.LBE967:
1093:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
 1994              		.loc 19 1093 9 is_stmt 1 view .LVU480
1093:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
 1995              		.loc 19 1093 37 is_stmt 0 view .LVU481
 1996 008e B7EE041A 		vmov.f32	s2, #1.25e+0
 1997 0092 0020     		movs	r0, #0
 1998 0094 DFED540A 		vldr.32	s1, .L116+28
 1999 0098 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2000              	.LVL107:
1094:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2001              		.loc 19 1094 9 is_stmt 1 view .LVU482
 2002              	.LBB968:
 2003              	.LBI968:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2004              		.loc 21 135 13 view .LVU483
 2005              	.LBB969:
 2006              		.loc 21 137 5 view .LVU484
 2007              		.loc 21 137 9 is_stmt 0 view .LVU485
 2008 009c 534B     		ldr	r3, .L116+32
 2009 009e 9FED547A 		vldr.32	s14, .L116+36
 2010 00a2 D3ED007A 		vldr.32	s15, [r3]
 2011              		.loc 21 137 24 view .LVU486
 2012 00a6 30EE670A 		vsub.f32	s0, s0, s15
 2013              	.LVL108:
 2014              		.loc 21 137 9 view .LVU487
 2015 00aa E0EE077A 		vfma.f32	s15, s0, s14
 2016 00ae C3ED007A 		vstr.32	s15, [r3]
 2017              	.LVL109:
 2018              	.L91:
 2019              		.loc 21 137 9 view .LVU488
 2020              	.LBE969:
 2021              	.LBE968:
 2022              	.LBE954:
 2023              	.LBE1009:
1121:Veno-Echo.cpp **** }
 2024              		.loc 19 1121 1 view .LVU489
 2025 00b2 BDEC028B 		vldm	sp!, {d8}
 2026              		.cfi_remember_state
 2027              		.cfi_restore 80
 2028              		.cfi_restore 81
 2029              		.cfi_def_cfa_offset 8
 2030              	.LVL110:
1121:Veno-Echo.cpp **** }
 2031              		.loc 19 1121 1 view .LVU490
 2032 00b6 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 93


 2033              	.LVL111:
 2034              	.L93:
 2035              		.cfi_restore_state
 2036              	.LBB1010:
 2037              	.LBB983:
1077:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,false
 2038              		.loc 19 1077 13 is_stmt 1 view .LVU491
 2039              	.LBB970:
 2040              	.LBI970:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2041              		.loc 19 1810 13 view .LVU492
 2042              	.LBB971:
1812:Veno-Echo.cpp ****     pickupState retval{};
 2043              		.loc 19 1812 5 view .LVU493
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2044              		.loc 19 1814 5 view .LVU494
 2045              	.LBE971:
 2046              	.LBE970:
1077:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,false
 2047              		.loc 19 1077 48 is_stmt 0 view .LVU495
 2048 00b8 494B     		ldr	r3, .L116+20
 2049 00ba 474A     		ldr	r2, .L116+12
 2050              	.LBB973:
 2051              	.LBB972:
 2052 00bc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2053 00be D2ED000A 		vldr.32	s1, [r2]
 2054 00c2 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 2055              	.LVL112:
1855:Veno-Echo.cpp ****     return retval;
 2056              		.loc 19 1855 5 is_stmt 1 view .LVU496
1855:Veno-Echo.cpp ****     return retval;
 2057              		.loc 19 1855 5 is_stmt 0 view .LVU497
 2058              	.LBE972:
 2059              	.LBE973:
1082:Veno-Echo.cpp ****         if(feedbackR_pickup == PICKEDUP)
 2060              		.loc 19 1082 9 view .LVU498
 2061 00c6 0228     		cmp	r0, #2
1077:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,false
 2062              		.loc 19 1077 30 view .LVU499
 2063 00c8 1870     		strb	r0, [r3]
1080:Veno-Echo.cpp ****         float feedbackR_combo{};
 2064              		.loc 19 1080 9 is_stmt 1 view .LVU500
 2065              	.LVL113:
1082:Veno-Echo.cpp ****         if(feedbackR_pickup == PICKEDUP)
 2066              		.loc 19 1082 9 view .LVU501
 2067 00ca C4D1     		bne	.L97
 2068              	.L96:
1084:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
 2069              		.loc 19 1084 13 view .LVU502
 2070              	.LVL114:
 2071              	.LBB974:
 2072              	.LBI974:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 2073              		.loc 19 1792 7 view .LVU503
 2074              	.LBB975:
1794:Veno-Echo.cpp ****     float output{};
 2075              		.loc 19 1794 5 view .LVU504
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 94


1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2076              		.loc 19 1795 5 view .LVU505
 2077              	.LBE975:
 2078              	.LBE974:
1084:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
 2079              		.loc 19 1084 41 is_stmt 0 view .LVU506
 2080 00cc 454B     		ldr	r3, .L116+24
 2081              	.LBB978:
 2082              	.LBB976:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2083              		.loc 19 1795 39 view .LVU507
 2084 00ce B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2085              		.loc 19 1795 49 view .LVU508
 2086 00d2 B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2087              		.loc 19 1795 39 view .LVU509
 2088 00d6 D3ED007A 		vldr.32	s15, [r3]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2089              		.loc 19 1795 12 view .LVU510
 2090 00da F0EE006A 		vmov.f32	s13, #2.0e+0
 2091 00de B0EE480A 		vmov.f32	s0, s16
 2092              	.LVL115:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2093              		.loc 19 1795 39 view .LVU511
 2094 00e2 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2095              		.loc 19 1795 49 view .LVU512
 2096 00e6 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2097              		.loc 19 1795 12 view .LVU513
 2098 00ea A7EEA60A 		vfma.f32	s0, s15, s13
 2099              	.LVL116:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 2100              		.loc 19 1797 5 is_stmt 1 view .LVU514
 2101 00ee B5EEC00A 		vcmpe.f32	s0, #0
 2102 00f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2103 00f6 5FD4     		bmi	.L108
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 2104              		.loc 19 1802 5 view .LVU515
1804:Veno-Echo.cpp ****         output = 1.0f;
 2105              		.loc 19 1804 16 is_stmt 0 view .LVU516
 2106 00f8 B4EE470A 		vcmp.f32	s0, s14
 2107 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2108 0100 37FE000A 		vselgt.f32	s0, s14, s0
 2109              	.LVL117:
 2110              	.L98:
1807:Veno-Echo.cpp ****     return output;
 2111              		.loc 19 1807 5 is_stmt 1 view .LVU517
1807:Veno-Echo.cpp ****     return output;
 2112              		.loc 19 1807 5 is_stmt 0 view .LVU518
 2113              	.LBE976:
 2114              	.LBE978:
1085:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;
 2115              		.loc 19 1085 13 is_stmt 1 view .LVU519
1085:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;
 2116              		.loc 19 1085 28 is_stmt 0 view .LVU520
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 95


 2117 0104 82ED008A 		vstr.32	s16, [r2]
 2118 0108 C1E7     		b	.L100
 2119              	.LVL118:
 2120              	.L92:
1085:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;
 2121              		.loc 19 1085 28 view .LVU521
 2122              	.LBE983:
 2123              	.LBB984:
1098:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
 2124              		.loc 19 1098 10 is_stmt 1 view .LVU522
1098:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
 2125              		.loc 19 1098 20 is_stmt 0 view .LVU523
 2126 010a 324B     		ldr	r3, .L116+8
1098:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
 2127              		.loc 19 1098 10 view .LVU524
 2128 010c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2129 010e 22BB     		cbnz	r2, .L103
1100:Veno-Echo.cpp ****             lastShift = shift;
 2130              		.loc 19 1100 13 is_stmt 1 view .LVU525
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2131              		.loc 19 1101 47 is_stmt 0 view .LVU526
 2132 0110 384C     		ldr	r4, .L116+40
1100:Veno-Echo.cpp ****             lastShift = shift;
 2133              		.loc 19 1100 23 view .LVU527
 2134 0112 0121     		movs	r1, #1
 2135              	.LBB985:
 2136              	.LBB986:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2137              		.loc 19 1816 31 view .LVU528
 2138 0114 9FED317A 		vldr.32	s14, .L116+16
 2139              	.LBE986:
 2140              	.LBE985:
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2141              		.loc 19 1101 47 view .LVU529
 2142 0118 D4ED007A 		vldr.32	s15, [r4]
1100:Veno-Echo.cpp ****             lastShift = shift;
 2143              		.loc 19 1100 23 view .LVU530
 2144 011c 1970     		strb	r1, [r3]
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2145              		.loc 19 1101 13 is_stmt 1 view .LVU531
 2146              	.LVL119:
 2147              	.LBB991:
 2148              	.LBI985:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2149              		.loc 19 1810 13 view .LVU532
 2150              	.LBB987:
1812:Veno-Echo.cpp ****     pickupState retval{};
 2151              		.loc 19 1812 5 view .LVU533
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2152              		.loc 19 1814 5 view .LVU534
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2153              		.loc 19 1816 9 view .LVU535
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2154              		.loc 19 1816 31 is_stmt 0 view .LVU536
 2155 011e 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2156              		.loc 19 1816 9 view .LVU537
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 96


 2157 0122 B4EEE60A 		vcmpe.f32	s0, s13
 2158 0126 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2159 012a 0BD4     		bmi	.L104
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2160              		.loc 19 1821 14 is_stmt 1 view .LVU538
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2161              		.loc 19 1821 36 is_stmt 0 view .LVU539
 2162 012c 77EE877A 		vadd.f32	s15, s15, s14
 2163              	.LVL120:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2164              		.loc 19 1821 36 view .LVU540
 2165              	.LBE987:
 2166              	.LBE991:
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2167              		.loc 19 1101 29 view .LVU541
 2168 0130 314B     		ldr	r3, .L116+44
 2169              	.LBB992:
 2170              	.LBB988:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2171              		.loc 19 1821 14 view .LVU542
 2172 0132 B4EEE70A 		vcmpe.f32	s0, s15
 2173 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2174 013a 40DD     		ble	.L113
 2175              	.LVL121:
1855:Veno-Echo.cpp ****     return retval;
 2176              		.loc 19 1855 5 is_stmt 1 view .LVU543
1855:Veno-Echo.cpp ****     return retval;
 2177              		.loc 19 1855 5 is_stmt 0 view .LVU544
 2178              	.LBE988:
 2179              	.LBE992:
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2180              		.loc 19 1101 29 view .LVU545
 2181 013c 1970     		strb	r1, [r3]
1109:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
 2182              		.loc 19 1109 9 is_stmt 1 view .LVU546
 2183              	.LBE984:
 2184              	.LBE1010:
1121:Veno-Echo.cpp **** }
 2185              		.loc 19 1121 1 is_stmt 0 view .LVU547
 2186 013e BDEC028B 		vldm	sp!, {d8}
 2187              		.cfi_remember_state
 2188              		.cfi_restore 80
 2189              		.cfi_restore 81
 2190              		.cfi_def_cfa_offset 8
 2191 0142 10BD     		pop	{r4, pc}
 2192              	.LVL122:
 2193              	.L104:
 2194              		.cfi_restore_state
 2195              	.LBB1011:
 2196              	.LBB1002:
 2197              	.LBB993:
 2198              	.LBB989:
1855:Veno-Echo.cpp ****     return retval;
 2199              		.loc 19 1855 5 is_stmt 1 view .LVU548
1855:Veno-Echo.cpp ****     return retval;
 2200              		.loc 19 1855 5 is_stmt 0 view .LVU549
 2201              	.LBE989:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 97


 2202              	.LBE993:
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2203              		.loc 19 1101 29 view .LVU550
 2204 0144 2C4B     		ldr	r3, .L116+44
 2205              	.LBE1002:
 2206              	.LBE1011:
1121:Veno-Echo.cpp **** }
 2207              		.loc 19 1121 1 view .LVU551
 2208 0146 BDEC028B 		vldm	sp!, {d8}
 2209              		.cfi_remember_state
 2210              		.cfi_restore 80
 2211              		.cfi_restore 81
 2212              		.cfi_def_cfa_offset 8
 2213              	.LBB1012:
 2214              	.LBB1003:
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2215              		.loc 19 1101 29 view .LVU552
 2216 014a 1A70     		strb	r2, [r3]
1109:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
 2217              		.loc 19 1109 9 is_stmt 1 view .LVU553
 2218              	.LBE1003:
 2219              	.LBE1012:
1121:Veno-Echo.cpp **** }
 2220              		.loc 19 1121 1 is_stmt 0 view .LVU554
 2221 014c 10BD     		pop	{r4, pc}
 2222              	.LVL123:
 2223              	.L109:
 2224              		.cfi_restore_state
 2225              	.LBB1013:
 2226              	.LBB1004:
 2227              	.LBB979:
 2228              	.LBB966:
1799:Veno-Echo.cpp ****         output = 0.0f;
 2229              		.loc 19 1799 16 view .LVU555
 2230 014e 9FED260A 		vldr.32	s0, .L116+28
 2231              	.LVL124:
1799:Veno-Echo.cpp ****         output = 0.0f;
 2232              		.loc 19 1799 16 view .LVU556
 2233 0152 9CE7     		b	.L100
 2234              	.LVL125:
 2235              	.L94:
1799:Veno-Echo.cpp ****         output = 0.0f;
 2236              		.loc 19 1799 16 view .LVU557
 2237              	.LBE966:
 2238              	.LBE979:
 2239              	.LBB980:
 2240              	.LBB959:
1855:Veno-Echo.cpp ****     return retval;
 2241              		.loc 19 1855 5 is_stmt 1 view .LVU558
1855:Veno-Echo.cpp ****     return retval;
 2242              		.loc 19 1855 5 is_stmt 0 view .LVU559
 2243              	.LBE959:
 2244              	.LBE980:
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 2245              		.loc 19 1073 30 view .LVU560
 2246 0154 2249     		ldr	r1, .L116+20
 2247 0156 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 98


1080:Veno-Echo.cpp ****         float feedbackR_combo{};
 2248              		.loc 19 1080 9 is_stmt 1 view .LVU561
 2249              	.LVL126:
1082:Veno-Echo.cpp ****         if(feedbackR_pickup == PICKEDUP)
 2250              		.loc 19 1082 9 view .LVU562
 2251 0158 7DE7     		b	.L97
 2252              	.LVL127:
 2253              	.L103:
1082:Veno-Echo.cpp ****         if(feedbackR_pickup == PICKEDUP)
 2254              		.loc 19 1082 9 is_stmt 0 view .LVU563
 2255              	.LBE1004:
 2256              	.LBB1005:
1106:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,false);
 2257              		.loc 19 1106 13 is_stmt 1 view .LVU564
 2258              	.LBB994:
 2259              	.LBI994:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2260              		.loc 19 1810 13 view .LVU565
 2261              	.LBB995:
1812:Veno-Echo.cpp ****     pickupState retval{};
 2262              		.loc 19 1812 5 view .LVU566
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2263              		.loc 19 1814 5 view .LVU567
 2264              	.LBE995:
 2265              	.LBE994:
1106:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,false);
 2266              		.loc 19 1106 47 is_stmt 0 view .LVU568
 2267 015a 274B     		ldr	r3, .L116+44
 2268 015c 254C     		ldr	r4, .L116+40
 2269              	.LBB997:
 2270              	.LBB996:
 2271 015e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2272 0160 D4ED000A 		vldr.32	s1, [r4]
 2273 0164 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 2274              	.LVL128:
1855:Veno-Echo.cpp ****     return retval;
 2275              		.loc 19 1855 5 is_stmt 1 view .LVU569
1855:Veno-Echo.cpp ****     return retval;
 2276              		.loc 19 1855 5 is_stmt 0 view .LVU570
 2277              	.LBE996:
 2278              	.LBE997:
 2279              	.LBB998:
1109:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
 2280              		.loc 19 1109 9 view .LVU571
 2281 0168 0228     		cmp	r0, #2
 2282              	.LBE998:
1106:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,false);
 2283              		.loc 19 1106 29 view .LVU572
 2284 016a 1870     		strb	r0, [r3]
1109:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
 2285              		.loc 19 1109 9 is_stmt 1 view .LVU573
 2286              	.LBB1000:
 2287 016c A1D1     		bne	.L91
 2288              	.L107:
 2289              	.LBB999:
1111:Veno-Echo.cpp ****             float LPCutoff{};
 2290              		.loc 19 1111 13 view .LVU574
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 99


 2291              	.LVL129:
1112:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 2292              		.loc 19 1112 13 view .LVU575
1112:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 2293              		.loc 19 1112 29 is_stmt 0 view .LVU576
 2294 016e 9FED231A 		vldr.32	s2, .L116+48
 2295 0172 B0EE480A 		vmov.f32	s0, s16
 2296              	.LVL130:
1112:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 2297              		.loc 19 1112 29 view .LVU577
 2298 0176 DFED220A 		vldr.32	s1, .L116+52
 2299 017a 0120     		movs	r0, #1
 2300 017c FFF7FEFF 		bl	_Z5scalefff9CurveType
 2301              	.LVL131:
 2302 0180 F0EE408A 		vmov.f32	s17, s0
 2303              	.LVL132:
1113:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2304              		.loc 19 1113 13 is_stmt 1 view .LVU578
1113:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2305              		.loc 19 1113 26 is_stmt 0 view .LVU579
 2306 0184 1F48     		ldr	r0, .L116+56
 2307 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2308              	.LVL133:
1114:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2309              		.loc 19 1114 13 is_stmt 1 view .LVU580
1114:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2310              		.loc 19 1114 26 is_stmt 0 view .LVU581
 2311 018a 1F48     		ldr	r0, .L116+60
 2312 018c B0EE680A 		vmov.f32	s0, s17
 2313 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2314              	.LVL134:
1115:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2315              		.loc 19 1115 13 is_stmt 1 view .LVU582
1115:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2316              		.loc 19 1115 31 is_stmt 0 view .LVU583
 2317 0194 B0EE680A 		vmov.f32	s0, s17
 2318 0198 1C48     		ldr	r0, .L116+64
 2319 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2320              	.LVL135:
1116:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2321              		.loc 19 1116 13 is_stmt 1 view .LVU584
1116:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2322              		.loc 19 1116 31 is_stmt 0 view .LVU585
 2323 019e B0EE680A 		vmov.f32	s0, s17
 2324 01a2 1B48     		ldr	r0, .L116+68
 2325 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2326              	.LVL136:
1117:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2327              		.loc 19 1117 13 is_stmt 1 view .LVU586
1117:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2328              		.loc 19 1117 35 is_stmt 0 view .LVU587
 2329 01a8 1A4B     		ldr	r3, .L116+72
1118:Veno-Echo.cpp ****             LPCutoff_Last = feedbackR_Pot;  //update last value
 2330              		.loc 19 1118 27 view .LVU588
 2331 01aa 84ED008A 		vstr.32	s16, [r4]
1117:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2332              		.loc 19 1117 35 view .LVU589
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 100


 2333 01ae C3ED058A 		vstr.32	s17, [r3, #20]
1118:Veno-Echo.cpp ****             LPCutoff_Last = feedbackR_Pot;  //update last value
 2334              		.loc 19 1118 13 is_stmt 1 view .LVU590
 2335              	.LBE999:
 2336              	.LBE1000:
 2337              	.LBE1005:
 2338              	.LBE1013:
1121:Veno-Echo.cpp **** }
 2339              		.loc 19 1121 1 is_stmt 0 view .LVU591
 2340 01b2 BDEC028B 		vldm	sp!, {d8}
 2341              		.cfi_remember_state
 2342              		.cfi_restore 80
 2343              		.cfi_restore 81
 2344              		.cfi_def_cfa_offset 8
 2345              	.LVL137:
1121:Veno-Echo.cpp **** }
 2346              		.loc 19 1121 1 view .LVU592
 2347 01b6 10BD     		pop	{r4, pc}
 2348              	.LVL138:
 2349              	.L108:
 2350              		.cfi_restore_state
 2351              	.LBB1014:
 2352              	.LBB1006:
 2353              	.LBB981:
 2354              	.LBB977:
1799:Veno-Echo.cpp ****         output = 0.0f;
 2355              		.loc 19 1799 16 view .LVU593
 2356 01b8 9FED0B0A 		vldr.32	s0, .L116+28
 2357              	.LVL139:
1799:Veno-Echo.cpp ****         output = 0.0f;
 2358              		.loc 19 1799 16 view .LVU594
 2359 01bc A2E7     		b	.L98
 2360              	.LVL140:
 2361              	.L113:
1799:Veno-Echo.cpp ****         output = 0.0f;
 2362              		.loc 19 1799 16 view .LVU595
 2363              	.LBE977:
 2364              	.LBE981:
 2365              	.LBE1006:
 2366              	.LBB1007:
 2367              	.LBB1001:
 2368              	.LBB990:
1855:Veno-Echo.cpp ****     return retval;
 2369              		.loc 19 1855 5 is_stmt 1 view .LVU596
1855:Veno-Echo.cpp ****     return retval;
 2370              		.loc 19 1855 5 is_stmt 0 view .LVU597
 2371              	.LBE990:
 2372              	.LBE1001:
1101:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true);
 2373              		.loc 19 1101 29 view .LVU598
 2374 01be 0222     		movs	r2, #2
 2375 01c0 1A70     		strb	r2, [r3]
1109:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
 2376              		.loc 19 1109 9 is_stmt 1 view .LVU599
 2377 01c2 D4E7     		b	.L107
 2378              	.LVL141:
 2379              	.L115:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 101


1109:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
 2380              		.loc 19 1109 9 is_stmt 0 view .LVU600
 2381              	.LBE1007:
 2382              	.LBB1008:
 2383              	.LBB982:
 2384              	.LBB960:
1855:Veno-Echo.cpp ****     return retval;
 2385              		.loc 19 1855 5 is_stmt 1 view .LVU601
1855:Veno-Echo.cpp ****     return retval;
 2386              		.loc 19 1855 5 is_stmt 0 view .LVU602
 2387              	.LBE960:
 2388              	.LBE982:
1073:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 2389              		.loc 19 1073 30 view .LVU603
 2390 01c4 0221     		movs	r1, #2
 2391 01c6 1970     		strb	r1, [r3]
1080:Veno-Echo.cpp ****         float feedbackR_combo{};
 2392              		.loc 19 1080 9 is_stmt 1 view .LVU604
 2393              	.LVL142:
1082:Veno-Echo.cpp ****         if(feedbackR_pickup == PICKEDUP)
 2394              		.loc 19 1082 9 view .LVU605
 2395 01c8 80E7     		b	.L96
 2396              	.L117:
 2397 01ca 00BF     		.align	2
 2398              	.L116:
 2399 01cc 18000000 		.word	.LANCHOR4+24
 2400 01d0 00000000 		.word	.LANCHOR8
 2401 01d4 00000000 		.word	.LANCHOR21
 2402 01d8 00000000 		.word	.LANCHOR22
 2403 01dc 0AD7A33B 		.word	1000593162
 2404 01e0 00000000 		.word	.LANCHOR23
 2405 01e4 00000000 		.word	.LANCHOR20
 2406 01e8 00000000 		.word	0
 2407 01ec 00000000 		.word	.LANCHOR24
 2408 01f0 6F12033D 		.word	1023611503
 2409 01f4 00000000 		.word	.LANCHOR25
 2410 01f8 00000000 		.word	.LANCHOR26
 2411 01fc 00803B46 		.word	1178304512
 2412 0200 0080BB44 		.word	1153138688
 2413 0204 00000000 		.word	.LANCHOR27
 2414 0208 00000000 		.word	.LANCHOR28
 2415 020c 00000000 		.word	.LANCHOR29
 2416 0210 00000000 		.word	.LANCHOR30
 2417 0214 00000000 		.word	.LANCHOR19
 2418              	.LBE1008:
 2419              	.LBE1014:
 2420              		.cfi_endproc
 2421              	.LFE4298:
 2423              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 2424              		.align	1
 2425              		.p2align 2,,3
 2426              		.global	_Z16Update_drywet_CVv
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2430              		.fpu fpv5-d16
 2432              	_Z16Update_drywet_CVv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 102


 2433              	.LFB4299:
1124:Veno-Echo.cpp **** {
 2434              		.loc 19 1124 1 view -0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 0
 2437              		@ frame_needed = 0, uses_anonymous_args = 0
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2438              		.loc 19 1125 5 view .LVU607
1124:Veno-Echo.cpp **** {
 2439              		.loc 19 1124 1 is_stmt 0 view .LVU608
 2440 0000 08B5     		push	{r3, lr}
 2441              		.cfi_def_cfa_offset 8
 2442              		.cfi_offset 3, -8
 2443              		.cfi_offset 14, -4
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2444              		.loc 19 1125 32 view .LVU609
 2445 0002 0421     		movs	r1, #4
 2446 0004 0348     		ldr	r0, .L120
 2447 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2448              	.LVL143:
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2449              		.loc 19 1125 15 view .LVU610
 2450 000a 034B     		ldr	r3, .L120+4
 2451 000c 83ED000A 		vstr.32	s0, [r3]
1126:Veno-Echo.cpp **** }
 2452              		.loc 19 1126 1 view .LVU611
 2453 0010 08BD     		pop	{r3, pc}
 2454              	.L121:
 2455 0012 00BF     		.align	2
 2456              	.L120:
 2457 0014 18000000 		.word	.LANCHOR4+24
 2458 0018 00000000 		.word	.LANCHOR31
 2459              		.cfi_endproc
 2460              	.LFE4299:
 2462              		.section	.text._Z13Update_drywetv,"ax",%progbits
 2463              		.align	1
 2464              		.p2align 2,,3
 2465              		.global	_Z13Update_drywetv
 2466              		.syntax unified
 2467              		.thumb
 2468              		.thumb_func
 2469              		.fpu fpv5-d16
 2471              	_Z13Update_drywetv:
 2472              	.LFB4300:
1129:Veno-Echo.cpp **** {
 2473              		.loc 19 1129 1 is_stmt 1 view -0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 0
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
1130:Veno-Echo.cpp ****     static bool lastShift{};
 2477              		.loc 19 1130 5 view .LVU613
1131:Veno-Echo.cpp ****     static pickupState drywet_pickup{};
 2478              		.loc 19 1131 5 view .LVU614
1132:Veno-Echo.cpp ****     static pickupState Res_pickup{};
 2479              		.loc 19 1132 5 view .LVU615
1134:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
 2480              		.loc 19 1134 5 view .LVU616
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 103


1135:Veno-Echo.cpp ****     static float Res_Last{}; //last res value (unscaled)
 2481              		.loc 19 1135 5 view .LVU617
1139:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 2482              		.loc 19 1139 5 view .LVU618
1129:Veno-Echo.cpp **** {
 2483              		.loc 19 1129 1 is_stmt 0 view .LVU619
 2484 0000 10B5     		push	{r4, lr}
 2485              		.cfi_def_cfa_offset 8
 2486              		.cfi_offset 4, -8
 2487              		.cfi_offset 14, -4
1139:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 2488              		.loc 19 1139 40 view .LVU620
 2489 0002 0522     		movs	r2, #5
 2490 0004 0721     		movs	r1, #7
 2491 0006 9048     		ldr	r0, .L153+24
1129:Veno-Echo.cpp **** {
 2492              		.loc 19 1129 1 view .LVU621
 2493 0008 2DED028B 		vpush.64	{d8}
 2494              		.cfi_def_cfa_offset 16
 2495              		.cfi_offset 80, -16
 2496              		.cfi_offset 81, -12
1139:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 2497              		.loc 19 1139 40 view .LVU622
 2498 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2499              	.LVL144:
 2500              	.LBB1015:
1141:Veno-Echo.cpp ****     if (!shift) //default controls
 2501              		.loc 19 1141 9 view .LVU623
 2502 0010 8E4B     		ldr	r3, .L153+28
 2503              	.LBE1015:
1139:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
 2504              		.loc 19 1139 40 view .LVU624
 2505 0012 B0EE408A 		vmov.f32	s16, s0
 2506              	.LVL145:
1141:Veno-Echo.cpp ****     if (!shift) //default controls
 2507              		.loc 19 1141 5 is_stmt 1 view .LVU625
 2508              	.LBB1069:
 2509 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2510 0018 002B     		cmp	r3, #0
 2511 001a 40F08C80 		bne	.L123
 2512              	.LBB1016:
1144:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2513              		.loc 19 1144 9 view .LVU626
1144:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2514              		.loc 19 1144 19 is_stmt 0 view .LVU627
 2515 001e 8C49     		ldr	r1, .L153+32
1144:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2516              		.loc 19 1144 9 view .LVU628
 2517 0020 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2518 0022 002A     		cmp	r2, #0
 2519 0024 44D0     		beq	.L124
1146:Veno-Echo.cpp ****             lastShift = shift;
 2520              		.loc 19 1146 13 is_stmt 1 view .LVU629
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2521              		.loc 19 1147 45 is_stmt 0 view .LVU630
 2522 0026 8B4A     		ldr	r2, .L153+36
 2523              	.LBB1017:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 104


 2524              	.LBB1018:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2525              		.loc 19 1816 31 view .LVU631
 2526 0028 9FED8B7A 		vldr.32	s14, .L153+40
 2527              	.LBE1018:
 2528              	.LBE1017:
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2529              		.loc 19 1147 45 view .LVU632
 2530 002c D2ED007A 		vldr.32	s15, [r2]
1146:Veno-Echo.cpp ****             lastShift = shift;
 2531              		.loc 19 1146 23 view .LVU633
 2532 0030 0B70     		strb	r3, [r1]
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2533              		.loc 19 1147 13 is_stmt 1 view .LVU634
 2534              	.LVL146:
 2535              	.LBB1023:
 2536              	.LBI1017:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2537              		.loc 19 1810 13 view .LVU635
 2538              	.LBB1019:
1812:Veno-Echo.cpp ****     pickupState retval{};
 2539              		.loc 19 1812 5 view .LVU636
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2540              		.loc 19 1814 5 view .LVU637
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2541              		.loc 19 1816 9 view .LVU638
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2542              		.loc 19 1816 31 is_stmt 0 view .LVU639
 2543 0032 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2544              		.loc 19 1816 9 view .LVU640
 2545 0036 B4EEE60A 		vcmpe.f32	s0, s13
 2546 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2547 003e 00F19F80 		bmi	.L125
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2548              		.loc 19 1821 14 is_stmt 1 view .LVU641
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2549              		.loc 19 1821 36 is_stmt 0 view .LVU642
 2550 0042 77EE877A 		vadd.f32	s15, s15, s14
 2551              	.LVL147:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2552              		.loc 19 1821 36 view .LVU643
 2553              	.LBE1019:
 2554              	.LBE1023:
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2555              		.loc 19 1147 27 view .LVU644
 2556 0046 854B     		ldr	r3, .L153+44
 2557              	.LBB1024:
 2558              	.LBB1020:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2559              		.loc 19 1821 14 view .LVU645
 2560 0048 B4EEE70A 		vcmpe.f32	s0, s15
 2561 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2562 0050 40F3E480 		ble	.L151
 2563              	.LVL148:
1855:Veno-Echo.cpp ****     return retval;
 2564              		.loc 19 1855 5 is_stmt 1 view .LVU646
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 105


1855:Veno-Echo.cpp ****     return retval;
 2565              		.loc 19 1855 5 is_stmt 0 view .LVU647
 2566              	.LBE1020:
 2567              	.LBE1024:
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2568              		.loc 19 1147 27 view .LVU648
 2569 0054 0121     		movs	r1, #1
 2570 0056 1970     		strb	r1, [r3]
1154:Veno-Echo.cpp ****         float drywetcombo{};
 2571              		.loc 19 1154 9 is_stmt 1 view .LVU649
 2572              	.LVL149:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2573              		.loc 19 1156 9 view .LVU650
 2574              	.L128:
1164:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
 2575              		.loc 19 1164 13 view .LVU651
 2576              	.LBB1025:
 2577              	.LBI1025:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 2578              		.loc 19 1792 7 view .LVU652
 2579              	.LBB1026:
1794:Veno-Echo.cpp ****     float output{};
 2580              		.loc 19 1794 5 view .LVU653
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2581              		.loc 19 1795 5 view .LVU654
 2582              	.LBE1026:
 2583              	.LBE1025:
1164:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
 2584              		.loc 19 1164 37 is_stmt 0 view .LVU655
 2585 0058 814B     		ldr	r3, .L153+48
 2586              	.LBB1028:
 2587              	.LBB1027:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2588              		.loc 19 1795 39 view .LVU656
 2589 005a B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2590              		.loc 19 1795 49 view .LVU657
 2591 005e B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2592              		.loc 19 1795 12 view .LVU658
 2593 0062 92ED000A 		vldr.32	s0, [r2]
 2594              	.LVL150:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2595              		.loc 19 1795 39 view .LVU659
 2596 0066 D3ED007A 		vldr.32	s15, [r3]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2597              		.loc 19 1795 12 view .LVU660
 2598 006a F0EE006A 		vmov.f32	s13, #2.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2599              		.loc 19 1795 39 view .LVU661
 2600 006e 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2601              		.loc 19 1795 49 view .LVU662
 2602 0072 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2603              		.loc 19 1795 12 view .LVU663
 2604 0076 A7EEA60A 		vfma.f32	s0, s15, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 106


 2605              	.LVL151:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 2606              		.loc 19 1797 5 is_stmt 1 view .LVU664
 2607 007a B5EEC00A 		vcmpe.f32	s0, #0
 2608 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 0082 7AD4     		bmi	.L137
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 2610              		.loc 19 1802 5 view .LVU665
 2611 0084 B4EEC70A 		vcmpe.f32	s0, s14
 2612 0088 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2613 008c 40F3CC80 		ble	.L148
 2614              	.LVL152:
 2615              	.L136:
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 2616              		.loc 19 1802 5 is_stmt 0 view .LVU666
 2617              	.LBE1027:
 2618              	.LBE1028:
1171:Veno-Echo.cpp ****             drywetTarget = 1.0f;
 2619              		.loc 19 1171 26 view .LVU667
 2620 0090 B7EE000A 		vmov.f32	s0, #1.0e+0
 2621              	.L133:
 2622              	.LVL153:
1183:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
 2623              		.loc 19 1183 9 is_stmt 1 view .LVU668
 2624              	.LBB1029:
 2625              	.LBI1029:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2626              		.loc 21 135 13 view .LVU669
 2627              	.LBB1030:
 2628              		.loc 21 137 5 view .LVU670
 2629              		.loc 21 137 9 is_stmt 0 view .LVU671
 2630 0094 734B     		ldr	r3, .L153+52
 2631 0096 9FED747A 		vldr.32	s14, .L153+56
 2632 009a D3ED007A 		vldr.32	s15, [r3]
 2633              		.loc 21 137 24 view .LVU672
 2634 009e 30EE670A 		vsub.f32	s0, s0, s15
 2635              	.LVL154:
 2636              		.loc 21 137 9 view .LVU673
 2637 00a2 E0EE077A 		vfma.f32	s15, s0, s14
 2638 00a6 C3ED007A 		vstr.32	s15, [r3]
 2639              	.LVL155:
 2640              	.L122:
 2641              		.loc 21 137 9 view .LVU674
 2642              	.LBE1030:
 2643              	.LBE1029:
 2644              	.LBE1016:
 2645              	.LBE1069:
1215:Veno-Echo.cpp **** }
 2646              		.loc 19 1215 1 view .LVU675
 2647 00aa BDEC028B 		vldm	sp!, {d8}
 2648              		.cfi_remember_state
 2649              		.cfi_restore 80
 2650              		.cfi_restore 81
 2651              		.cfi_def_cfa_offset 8
 2652              	.LVL156:
1215:Veno-Echo.cpp **** }
 2653              		.loc 19 1215 1 view .LVU676
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 107


 2654 00ae 10BD     		pop	{r4, pc}
 2655              	.LVL157:
 2656              	.L124:
 2657              		.cfi_restore_state
 2658              	.LBB1070:
 2659              	.LBB1043:
1151:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
 2660              		.loc 19 1151 13 is_stmt 1 view .LVU677
 2661              	.LBB1031:
 2662              	.LBI1031:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2663              		.loc 19 1810 13 view .LVU678
 2664              	.LBB1032:
1812:Veno-Echo.cpp ****     pickupState retval{};
 2665              		.loc 19 1812 5 view .LVU679
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2666              		.loc 19 1814 5 view .LVU680
 2667              	.LBE1032:
 2668              	.LBE1031:
1151:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
 2669              		.loc 19 1151 45 is_stmt 0 view .LVU681
 2670 00b0 6A4B     		ldr	r3, .L153+44
 2671 00b2 684A     		ldr	r2, .L153+36
 2672              	.LBB1034:
 2673              	.LBB1033:
 2674 00b4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2675 00b6 D2ED000A 		vldr.32	s1, [r2]
 2676 00ba FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 2677              	.LVL158:
1855:Veno-Echo.cpp ****     return retval;
 2678              		.loc 19 1855 5 is_stmt 1 view .LVU682
1855:Veno-Echo.cpp ****     return retval;
 2679              		.loc 19 1855 5 is_stmt 0 view .LVU683
 2680              	.LBE1033:
 2681              	.LBE1034:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2682              		.loc 19 1156 9 view .LVU684
 2683 00be 0228     		cmp	r0, #2
1151:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
 2684              		.loc 19 1151 27 view .LVU685
 2685 00c0 1870     		strb	r0, [r3]
1154:Veno-Echo.cpp ****         float drywetcombo{};
 2686              		.loc 19 1154 9 is_stmt 1 view .LVU686
 2687              	.LVL159:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2688              		.loc 19 1156 9 view .LVU687
 2689 00c2 C9D1     		bne	.L128
 2690              	.L127:
1158:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
 2691              		.loc 19 1158 13 view .LVU688
 2692              	.LVL160:
 2693              	.LBB1035:
 2694              	.LBI1035:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 2695              		.loc 19 1792 7 view .LVU689
 2696              	.LBB1036:
1794:Veno-Echo.cpp ****     float output{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 108


 2697              		.loc 19 1794 5 view .LVU690
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2698              		.loc 19 1795 5 view .LVU691
 2699              	.LBE1036:
 2700              	.LBE1035:
1158:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
 2701              		.loc 19 1158 37 is_stmt 0 view .LVU692
 2702 00c4 664B     		ldr	r3, .L153+48
 2703              	.LBB1039:
 2704              	.LBB1037:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2705              		.loc 19 1795 39 view .LVU693
 2706 00c6 B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2707              		.loc 19 1795 49 view .LVU694
 2708 00ca B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2709              		.loc 19 1795 39 view .LVU695
 2710 00ce D3ED007A 		vldr.32	s15, [r3]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2711              		.loc 19 1795 12 view .LVU696
 2712 00d2 F0EE006A 		vmov.f32	s13, #2.0e+0
 2713 00d6 B0EE480A 		vmov.f32	s0, s16
 2714              	.LVL161:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2715              		.loc 19 1795 39 view .LVU697
 2716 00da 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2717              		.loc 19 1795 49 view .LVU698
 2718 00de 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2719              		.loc 19 1795 12 view .LVU699
 2720 00e2 A7EEA60A 		vfma.f32	s0, s15, s13
 2721              	.LVL162:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 2722              		.loc 19 1797 5 is_stmt 1 view .LVU700
 2723 00e6 B5EEC00A 		vcmpe.f32	s0, #0
 2724 00ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2725 00ee 00F18D80 		bmi	.L144
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 2726              		.loc 19 1802 5 view .LVU701
 2727 00f2 B4EEC70A 		vcmpe.f32	s0, s14
 2728 00f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2729 00fa 40F39280 		ble	.L152
 2730 00fe B7EE006B 		vmov.f64	d6, #1.0e+0
1804:Veno-Echo.cpp ****         output = 1.0f;
 2731              		.loc 19 1804 16 is_stmt 0 view .LVU702
 2732 0102 B0EE470A 		vmov.f32	s0, s14
 2733              	.LVL163:
 2734              	.L129:
1807:Veno-Echo.cpp ****     return output;
 2735              		.loc 19 1807 5 is_stmt 1 view .LVU703
1807:Veno-Echo.cpp ****     return output;
 2736              		.loc 19 1807 5 is_stmt 0 view .LVU704
 2737              	.LBE1037:
 2738              	.LBE1039:
1159:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 109


 2739              		.loc 19 1159 13 is_stmt 1 view .LVU705
1159:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2740              		.loc 19 1159 25 is_stmt 0 view .LVU706
 2741 0106 82ED008A 		vstr.32	s16, [r2]
 2742              	.LVL164:
 2743              	.L130:
1167:Veno-Echo.cpp ****         float drywetTarget{};
 2744              		.loc 19 1167 9 is_stmt 1 view .LVU707
1169:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
 2745              		.loc 19 1169 9 view .LVU708
 2746 010a 9FED497B 		vldr.64	d7, .L153
 2747 010e B4EEC76B 		vcmpe.f64	d6, d7
 2748 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2749 0116 BBDA     		bge	.L136
1173:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
 2750              		.loc 19 1173 14 view .LVU709
 2751 0118 9FED477B 		vldr.64	d7, .L153+8
 2752 011c B4EEC76B 		vcmpe.f64	d6, d7
 2753 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2754 0124 29D9     		bls	.L137
1179:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2755              		.loc 19 1179 13 view .LVU710
1179:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2756              		.loc 19 1179 33 is_stmt 0 view .LVU711
 2757 0126 B7EE001A 		vmov.f32	s2, #1.0e+0
 2758 012a 0120     		movs	r0, #1
 2759 012c DFED4F0A 		vldr.32	s1, .L153+60
 2760 0130 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2761              	.LVL165:
1179:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2762              		.loc 19 1179 33 view .LVU712
 2763 0134 AEE7     		b	.L133
 2764              	.LVL166:
 2765              	.L123:
1179:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
 2766              		.loc 19 1179 33 view .LVU713
 2767              	.LBE1043:
 2768              	.LBB1044:
1188:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2769              		.loc 19 1188 9 is_stmt 1 view .LVU714
1188:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2770              		.loc 19 1188 19 is_stmt 0 view .LVU715
 2771 0136 464B     		ldr	r3, .L153+32
1188:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 2772              		.loc 19 1188 9 view .LVU716
 2773 0138 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2774 013a 22BB     		cbnz	r2, .L139
1190:Veno-Echo.cpp ****             lastShift = shift;
 2775              		.loc 19 1190 13 is_stmt 1 view .LVU717
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2776              		.loc 19 1191 42 is_stmt 0 view .LVU718
 2777 013c 4C4C     		ldr	r4, .L153+64
1190:Veno-Echo.cpp ****             lastShift = shift;
 2778              		.loc 19 1190 23 view .LVU719
 2779 013e 0121     		movs	r1, #1
 2780              	.LBB1045:
 2781              	.LBB1046:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 110


1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2782              		.loc 19 1816 31 view .LVU720
 2783 0140 9FED457A 		vldr.32	s14, .L153+40
 2784              	.LBE1046:
 2785              	.LBE1045:
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2786              		.loc 19 1191 42 view .LVU721
 2787 0144 D4ED007A 		vldr.32	s15, [r4]
1190:Veno-Echo.cpp ****             lastShift = shift;
 2788              		.loc 19 1190 23 view .LVU722
 2789 0148 1970     		strb	r1, [r3]
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2790              		.loc 19 1191 13 is_stmt 1 view .LVU723
 2791              	.LVL167:
 2792              	.LBB1051:
 2793              	.LBI1045:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2794              		.loc 19 1810 13 view .LVU724
 2795              	.LBB1047:
1812:Veno-Echo.cpp ****     pickupState retval{};
 2796              		.loc 19 1812 5 view .LVU725
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2797              		.loc 19 1814 5 view .LVU726
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2798              		.loc 19 1816 9 view .LVU727
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2799              		.loc 19 1816 31 is_stmt 0 view .LVU728
 2800 014a 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 2801              		.loc 19 1816 9 view .LVU729
 2802 014e B4EEE60A 		vcmpe.f32	s0, s13
 2803 0152 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2804 0156 0BD4     		bmi	.L140
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2805              		.loc 19 1821 14 is_stmt 1 view .LVU730
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2806              		.loc 19 1821 36 is_stmt 0 view .LVU731
 2807 0158 77EE877A 		vadd.f32	s15, s15, s14
 2808              	.LVL168:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2809              		.loc 19 1821 36 view .LVU732
 2810              	.LBE1047:
 2811              	.LBE1051:
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2812              		.loc 19 1191 24 view .LVU733
 2813 015c 454B     		ldr	r3, .L153+68
 2814              	.LBB1052:
 2815              	.LBB1048:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 2816              		.loc 19 1821 14 view .LVU734
 2817 015e B4EEE70A 		vcmpe.f32	s0, s15
 2818 0162 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2819 0166 56DD     		ble	.L149
 2820              	.LVL169:
1855:Veno-Echo.cpp ****     return retval;
 2821              		.loc 19 1855 5 is_stmt 1 view .LVU735
1855:Veno-Echo.cpp ****     return retval;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 111


 2822              		.loc 19 1855 5 is_stmt 0 view .LVU736
 2823              	.LBE1048:
 2824              	.LBE1052:
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2825              		.loc 19 1191 24 view .LVU737
 2826 0168 1970     		strb	r1, [r3]
1199:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2827              		.loc 19 1199 9 is_stmt 1 view .LVU738
 2828              	.LBE1044:
 2829              	.LBE1070:
1215:Veno-Echo.cpp **** }
 2830              		.loc 19 1215 1 is_stmt 0 view .LVU739
 2831 016a BDEC028B 		vldm	sp!, {d8}
 2832              		.cfi_remember_state
 2833              		.cfi_restore 80
 2834              		.cfi_restore 81
 2835              		.cfi_def_cfa_offset 8
 2836 016e 10BD     		pop	{r4, pc}
 2837              	.LVL170:
 2838              	.L140:
 2839              		.cfi_restore_state
 2840              	.LBB1071:
 2841              	.LBB1062:
 2842              	.LBB1053:
 2843              	.LBB1049:
1855:Veno-Echo.cpp ****     return retval;
 2844              		.loc 19 1855 5 is_stmt 1 view .LVU740
1855:Veno-Echo.cpp ****     return retval;
 2845              		.loc 19 1855 5 is_stmt 0 view .LVU741
 2846              	.LBE1049:
 2847              	.LBE1053:
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2848              		.loc 19 1191 24 view .LVU742
 2849 0170 404B     		ldr	r3, .L153+68
 2850              	.LBE1062:
 2851              	.LBE1071:
1215:Veno-Echo.cpp **** }
 2852              		.loc 19 1215 1 view .LVU743
 2853 0172 BDEC028B 		vldm	sp!, {d8}
 2854              		.cfi_remember_state
 2855              		.cfi_restore 80
 2856              		.cfi_restore 81
 2857              		.cfi_def_cfa_offset 8
 2858              	.LBB1072:
 2859              	.LBB1063:
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 2860              		.loc 19 1191 24 view .LVU744
 2861 0176 1A70     		strb	r2, [r3]
1199:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2862              		.loc 19 1199 9 is_stmt 1 view .LVU745
 2863              	.LBE1063:
 2864              	.LBE1072:
1215:Veno-Echo.cpp **** }
 2865              		.loc 19 1215 1 is_stmt 0 view .LVU746
 2866 0178 10BD     		pop	{r4, pc}
 2867              	.LVL171:
 2868              	.L137:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 112


 2869              		.cfi_restore_state
 2870              	.LBB1073:
 2871              	.LBB1064:
1175:Veno-Echo.cpp ****             drywetTarget = 0.0f;
 2872              		.loc 19 1175 26 view .LVU747
 2873 017a 9FED3C0A 		vldr.32	s0, .L153+60
 2874 017e 89E7     		b	.L133
 2875              	.LVL172:
 2876              	.L125:
 2877              	.LBB1040:
 2878              	.LBB1021:
1855:Veno-Echo.cpp ****     return retval;
 2879              		.loc 19 1855 5 is_stmt 1 view .LVU748
1855:Veno-Echo.cpp ****     return retval;
 2880              		.loc 19 1855 5 is_stmt 0 view .LVU749
 2881              	.LBE1021:
 2882              	.LBE1040:
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2883              		.loc 19 1147 27 view .LVU750
 2884 0180 3649     		ldr	r1, .L153+44
 2885 0182 0B70     		strb	r3, [r1]
1154:Veno-Echo.cpp ****         float drywetcombo{};
 2886              		.loc 19 1154 9 is_stmt 1 view .LVU751
 2887              	.LVL173:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2888              		.loc 19 1156 9 view .LVU752
 2889 0184 68E7     		b	.L128
 2890              	.LVL174:
 2891              	.L139:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 2892              		.loc 19 1156 9 is_stmt 0 view .LVU753
 2893              	.LBE1064:
 2894              	.LBB1065:
1196:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
 2895              		.loc 19 1196 13 is_stmt 1 view .LVU754
 2896              	.LBB1054:
 2897              	.LBI1054:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 2898              		.loc 19 1810 13 view .LVU755
 2899              	.LBB1055:
1812:Veno-Echo.cpp ****     pickupState retval{};
 2900              		.loc 19 1812 5 view .LVU756
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 2901              		.loc 19 1814 5 view .LVU757
 2902              	.LBE1055:
 2903              	.LBE1054:
1196:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
 2904              		.loc 19 1196 42 is_stmt 0 view .LVU758
 2905 0186 3B4B     		ldr	r3, .L153+68
 2906 0188 394C     		ldr	r4, .L153+64
 2907              	.LBB1057:
 2908              	.LBB1056:
 2909 018a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2910 018c D4ED000A 		vldr.32	s1, [r4]
 2911 0190 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 2912              	.LVL175:
1855:Veno-Echo.cpp ****     return retval;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 113


 2913              		.loc 19 1855 5 is_stmt 1 view .LVU759
1855:Veno-Echo.cpp ****     return retval;
 2914              		.loc 19 1855 5 is_stmt 0 view .LVU760
 2915              	.LBE1056:
 2916              	.LBE1057:
 2917              	.LBB1058:
1199:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2918              		.loc 19 1199 9 view .LVU761
 2919 0194 0228     		cmp	r0, #2
 2920              	.LBE1058:
1196:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,false);
 2921              		.loc 19 1196 24 view .LVU762
 2922 0196 1870     		strb	r0, [r3]
1199:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 2923              		.loc 19 1199 9 is_stmt 1 view .LVU763
 2924              	.LBB1060:
 2925 0198 87D1     		bne	.L122
 2926              	.L143:
 2927              	.LBB1059:
1201:Veno-Echo.cpp ****             float Res{};
 2928              		.loc 19 1201 13 view .LVU764
 2929              	.LVL176:
1202:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2930              		.loc 19 1202 13 view .LVU765
1202:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2931              		.loc 19 1202 24 is_stmt 0 view .LVU766
 2932 019a B6EE001A 		vmov.f32	s2, #5.0e-1
 2933 019e DFED330A 		vldr.32	s1, .L153+60
 2934 01a2 B0EE480A 		vmov.f32	s0, s16
 2935              	.LVL177:
1202:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2936              		.loc 19 1202 24 view .LVU767
 2937 01a6 0020     		movs	r0, #0
 2938 01a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2939              	.LVL178:
 2940 01ac F0EE408A 		vmov.f32	s17, s0
 2941              	.LVL179:
1203:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2942              		.loc 19 1203 13 is_stmt 1 view .LVU768
1203:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2943              		.loc 19 1203 25 is_stmt 0 view .LVU769
 2944 01b0 3148     		ldr	r0, .L153+72
 2945 01b2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2946              	.LVL180:
1204:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2947              		.loc 19 1204 13 is_stmt 1 view .LVU770
1204:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2948              		.loc 19 1204 25 is_stmt 0 view .LVU771
 2949 01b6 3148     		ldr	r0, .L153+76
 2950 01b8 B0EE680A 		vmov.f32	s0, s17
 2951 01bc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2952              	.LVL181:
1205:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2953              		.loc 19 1205 13 is_stmt 1 view .LVU772
1205:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2954              		.loc 19 1205 25 is_stmt 0 view .LVU773
 2955 01c0 B0EE680A 		vmov.f32	s0, s17
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 114


 2956 01c4 2E48     		ldr	r0, .L153+80
 2957 01c6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2958              	.LVL182:
1206:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2959              		.loc 19 1206 13 is_stmt 1 view .LVU774
1206:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2960              		.loc 19 1206 25 is_stmt 0 view .LVU775
 2961 01ca B0EE680A 		vmov.f32	s0, s17
 2962 01ce 2D48     		ldr	r0, .L153+84
 2963 01d0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2964              	.LVL183:
1207:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2965              		.loc 19 1207 13 is_stmt 1 view .LVU776
1207:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2966              		.loc 19 1207 30 is_stmt 0 view .LVU777
 2967 01d4 B0EE680A 		vmov.f32	s0, s17
 2968 01d8 2B48     		ldr	r0, .L153+88
 2969 01da FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2970              	.LVL184:
1208:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2971              		.loc 19 1208 13 is_stmt 1 view .LVU778
1208:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2972              		.loc 19 1208 30 is_stmt 0 view .LVU779
 2973 01de B0EE680A 		vmov.f32	s0, s17
 2974 01e2 2A48     		ldr	r0, .L153+92
 2975 01e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2976              	.LVL185:
1209:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2977              		.loc 19 1209 13 is_stmt 1 view .LVU780
1209:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2978              		.loc 19 1209 30 is_stmt 0 view .LVU781
 2979 01e8 B0EE680A 		vmov.f32	s0, s17
 2980 01ec 2848     		ldr	r0, .L153+96
 2981 01ee FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2982              	.LVL186:
1210:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2983              		.loc 19 1210 13 is_stmt 1 view .LVU782
1210:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2984              		.loc 19 1210 30 is_stmt 0 view .LVU783
 2985 01f2 B0EE680A 		vmov.f32	s0, s17
 2986 01f6 2748     		ldr	r0, .L153+100
 2987 01f8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2988              	.LVL187:
1211:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2989              		.loc 19 1211 13 is_stmt 1 view .LVU784
1211:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2990              		.loc 19 1211 35 is_stmt 0 view .LVU785
 2991 01fc 264B     		ldr	r3, .L153+104
1212:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
 2992              		.loc 19 1212 22 view .LVU786
 2993 01fe 84ED008A 		vstr.32	s16, [r4]
1211:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2994              		.loc 19 1211 35 view .LVU787
 2995 0202 C3ED068A 		vstr.32	s17, [r3, #24]
1212:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
 2996              		.loc 19 1212 13 is_stmt 1 view .LVU788
 2997              	.LBE1059:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 115


 2998              	.LBE1060:
 2999              	.LBE1065:
 3000              	.LBE1073:
1215:Veno-Echo.cpp **** }
 3001              		.loc 19 1215 1 is_stmt 0 view .LVU789
 3002 0206 BDEC028B 		vldm	sp!, {d8}
 3003              		.cfi_remember_state
 3004              		.cfi_restore 80
 3005              		.cfi_restore 81
 3006              		.cfi_def_cfa_offset 8
 3007              	.LVL188:
1215:Veno-Echo.cpp **** }
 3008              		.loc 19 1215 1 view .LVU790
 3009 020a 10BD     		pop	{r4, pc}
 3010              	.LVL189:
 3011              	.L144:
 3012              		.cfi_restore_state
 3013              	.LBB1074:
 3014              	.LBB1066:
 3015              	.LBB1041:
 3016              	.LBB1038:
1215:Veno-Echo.cpp **** }
 3017              		.loc 19 1215 1 view .LVU791
 3018 020c 9FED0C6B 		vldr.64	d6, .L153+16
1799:Veno-Echo.cpp ****         output = 0.0f;
 3019              		.loc 19 1799 16 view .LVU792
 3020 0210 9FED160A 		vldr.32	s0, .L153+60
 3021              	.LVL190:
1799:Veno-Echo.cpp ****         output = 0.0f;
 3022              		.loc 19 1799 16 view .LVU793
 3023 0214 77E7     		b	.L129
 3024              	.LVL191:
 3025              	.L149:
1799:Veno-Echo.cpp ****         output = 0.0f;
 3026              		.loc 19 1799 16 view .LVU794
 3027              	.LBE1038:
 3028              	.LBE1041:
 3029              	.LBE1066:
 3030              	.LBB1067:
 3031              	.LBB1061:
 3032              	.LBB1050:
1855:Veno-Echo.cpp ****     return retval;
 3033              		.loc 19 1855 5 is_stmt 1 view .LVU795
1855:Veno-Echo.cpp ****     return retval;
 3034              		.loc 19 1855 5 is_stmt 0 view .LVU796
 3035              	.LBE1050:
 3036              	.LBE1061:
1191:Veno-Echo.cpp ****             Res_pickup = checkPickupState(drywet_Pot,Res_Last,Res_pickup,true);
 3037              		.loc 19 1191 24 view .LVU797
 3038 0216 0222     		movs	r2, #2
 3039 0218 1A70     		strb	r2, [r3]
1199:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
 3040              		.loc 19 1199 9 is_stmt 1 view .LVU798
 3041 021a BEE7     		b	.L143
 3042              	.LVL192:
 3043              	.L151:
1199:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 116


 3044              		.loc 19 1199 9 is_stmt 0 view .LVU799
 3045              	.LBE1067:
 3046              	.LBB1068:
 3047              	.LBB1042:
 3048              	.LBB1022:
1855:Veno-Echo.cpp ****     return retval;
 3049              		.loc 19 1855 5 is_stmt 1 view .LVU800
1855:Veno-Echo.cpp ****     return retval;
 3050              		.loc 19 1855 5 is_stmt 0 view .LVU801
 3051              	.LBE1022:
 3052              	.LBE1042:
1147:Veno-Echo.cpp ****             drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3053              		.loc 19 1147 27 view .LVU802
 3054 021c 0221     		movs	r1, #2
 3055 021e 1970     		strb	r1, [r3]
1154:Veno-Echo.cpp ****         float drywetcombo{};
 3056              		.loc 19 1154 9 is_stmt 1 view .LVU803
 3057              	.LVL193:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 3058              		.loc 19 1156 9 view .LVU804
 3059 0220 50E7     		b	.L127
 3060              	.LVL194:
 3061              	.L152:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 3062              		.loc 19 1156 9 is_stmt 0 view .LVU805
 3063 0222 B7EEC06A 		vcvt.f64.f32	d6, s0
 3064 0226 6EE7     		b	.L129
 3065              	.LVL195:
 3066              	.L148:
1156:Veno-Echo.cpp ****         if (drywet_pickup == PICKEDUP)
 3067              		.loc 19 1156 9 view .LVU806
 3068 0228 B7EEC06A 		vcvt.f64.f32	d6, s0
 3069 022c 6DE7     		b	.L130
 3070              	.L154:
 3071 022e 00BF     		.align	3
 3072              	.L153:
 3073 0230 5C8FC2F5 		.word	4123168604
 3074 0234 285CEF3F 		.word	1072651304
 3075 0238 7B14AE47 		.word	1202590843
 3076 023c E17A943F 		.word	1066695393
 3077 0240 00000000 		.word	0
 3078 0244 00000000 		.word	0
 3079 0248 18000000 		.word	.LANCHOR4+24
 3080 024c 00000000 		.word	.LANCHOR8
 3081 0250 00000000 		.word	.LANCHOR32
 3082 0254 00000000 		.word	.LANCHOR33
 3083 0258 0AD7A33B 		.word	1000593162
 3084 025c 00000000 		.word	.LANCHOR34
 3085 0260 00000000 		.word	.LANCHOR31
 3086 0264 00000000 		.word	.LANCHOR35
 3087 0268 6F12833C 		.word	1015222895
 3088 026c 00000000 		.word	0
 3089 0270 00000000 		.word	.LANCHOR36
 3090 0274 00000000 		.word	.LANCHOR37
 3091 0278 00000000 		.word	.LANCHOR27
 3092 027c 00000000 		.word	.LANCHOR28
 3093 0280 00000000 		.word	.LANCHOR15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 117


 3094 0284 00000000 		.word	.LANCHOR16
 3095 0288 00000000 		.word	.LANCHOR29
 3096 028c 00000000 		.word	.LANCHOR30
 3097 0290 00000000 		.word	.LANCHOR17
 3098 0294 00000000 		.word	.LANCHOR18
 3099 0298 00000000 		.word	.LANCHOR19
 3100              	.LBE1068:
 3101              	.LBE1074:
 3102              		.cfi_endproc
 3103              	.LFE4300:
 3105              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3106              		.align	1
 3107              		.p2align 2,,3
 3108              		.global	_Z15Update_width_CVv
 3109              		.syntax unified
 3110              		.thumb
 3111              		.thumb_func
 3112              		.fpu fpv5-d16
 3114              	_Z15Update_width_CVv:
 3115              	.LFB4301:
1218:Veno-Echo.cpp **** {
 3116              		.loc 19 1218 1 is_stmt 1 view -0
 3117              		.cfi_startproc
 3118              		@ args = 0, pretend = 0, frame = 0
 3119              		@ frame_needed = 0, uses_anonymous_args = 0
1219:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3120              		.loc 19 1219 5 view .LVU808
1218:Veno-Echo.cpp **** {
 3121              		.loc 19 1218 1 is_stmt 0 view .LVU809
 3122 0000 08B5     		push	{r3, lr}
 3123              		.cfi_def_cfa_offset 8
 3124              		.cfi_offset 3, -8
 3125              		.cfi_offset 14, -4
1219:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3126              		.loc 19 1219 30 view .LVU810
 3127 0002 0521     		movs	r1, #5
 3128 0004 0348     		ldr	r0, .L157
 3129 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3130              	.LVL196:
1219:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3131              		.loc 19 1219 13 view .LVU811
 3132 000a 034B     		ldr	r3, .L157+4
 3133 000c 83ED000A 		vstr.32	s0, [r3]
1220:Veno-Echo.cpp **** }
 3134              		.loc 19 1220 1 view .LVU812
 3135 0010 08BD     		pop	{r3, pc}
 3136              	.L158:
 3137 0012 00BF     		.align	2
 3138              	.L157:
 3139 0014 18000000 		.word	.LANCHOR4+24
 3140 0018 00000000 		.word	.LANCHOR38
 3141              		.cfi_endproc
 3142              	.LFE4301:
 3144              		.section	.text._Z12Update_widthv,"ax",%progbits
 3145              		.align	1
 3146              		.p2align 2,,3
 3147              		.global	_Z12Update_widthv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 118


 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3151              		.fpu fpv5-d16
 3153              	_Z12Update_widthv:
 3154              	.LFB4302:
1223:Veno-Echo.cpp **** {
 3155              		.loc 19 1223 1 is_stmt 1 view -0
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 0
 3158              		@ frame_needed = 0, uses_anonymous_args = 0
1225:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 3159              		.loc 19 1225 5 view .LVU814
1225:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 3160              		.loc 19 1225 39 is_stmt 0 view .LVU815
 3161 0000 0722     		movs	r2, #7
 3162 0002 2E48     		ldr	r0, .L169
1223:Veno-Echo.cpp **** {
 3163              		.loc 19 1223 1 view .LVU816
 3164 0004 08B5     		push	{r3, lr}
 3165              		.cfi_def_cfa_offset 8
 3166              		.cfi_offset 3, -8
 3167              		.cfi_offset 14, -4
1225:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 3168              		.loc 19 1225 39 view .LVU817
 3169 0006 1146     		mov	r1, r2
 3170 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3171              	.LVL197:
 3172              	.LBB1075:
1229:Veno-Echo.cpp ****     if (!shift) //default controls
 3173              		.loc 19 1229 9 view .LVU818
 3174 000c 2C4B     		ldr	r3, .L169+4
 3175              	.LBE1075:
1225:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
 3176              		.loc 19 1225 39 view .LVU819
 3177 000e F0EE407A 		vmov.f32	s15, s0
 3178              	.LVL198:
1227:Veno-Echo.cpp ****     static float width_Pot_Last{};
 3179              		.loc 19 1227 5 is_stmt 1 view .LVU820
1229:Veno-Echo.cpp ****     if (!shift) //default controls
 3180              		.loc 19 1229 5 view .LVU821
 3181              	.LBB1098:
 3182 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3183 0014 93BB     		cbnz	r3, .L160
 3184              	.LBB1076:
1232:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
 3185              		.loc 19 1232 9 view .LVU822
1234:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
 3186              		.loc 19 1234 32 is_stmt 0 view .LVU823
 3187 0016 2B4A     		ldr	r2, .L169+8
 3188              	.LBB1077:
 3189              	.LBB1078:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3190              		.loc 19 1795 39 view .LVU824
 3191 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3192              		.loc 19 1795 49 view .LVU825
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 119


 3193 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 3194              	.LBE1078:
 3195              	.LBE1077:
1232:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
 3196              		.loc 19 1232 24 view .LVU826
 3197 0020 294B     		ldr	r3, .L169+12
 3198              	.LBB1082:
 3199              	.LBB1079:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3200              		.loc 19 1795 39 view .LVU827
 3201 0022 92ED007A 		vldr.32	s14, [r2]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3202              		.loc 19 1795 12 view .LVU828
 3203 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 3204              	.LBE1079:
 3205              	.LBE1082:
1232:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
 3206              		.loc 19 1232 24 view .LVU829
 3207 002a 83ED000A 		vstr.32	s0, [r3]
1234:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
 3208              		.loc 19 1234 9 is_stmt 1 view .LVU830
 3209              	.LVL199:
 3210              	.LBB1083:
 3211              	.LBI1077:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 3212              		.loc 19 1792 7 view .LVU831
 3213              	.LBB1080:
1794:Veno-Echo.cpp ****     float output{};
 3214              		.loc 19 1794 5 view .LVU832
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3215              		.loc 19 1795 5 view .LVU833
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3216              		.loc 19 1795 39 is_stmt 0 view .LVU834
 3217 002e 36EEC77A 		vsub.f32	s14, s13, s14
 3218              	.LVL200:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3219              		.loc 19 1795 49 view .LVU835
 3220 0032 37EE657A 		vsub.f32	s14, s14, s11
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3221              		.loc 19 1795 12 view .LVU836
 3222 0036 E7EE067A 		vfma.f32	s15, s14, s12
 3223              	.LVL201:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 3224              		.loc 19 1797 5 is_stmt 1 view .LVU837
 3225 003a F5EEC07A 		vcmpe.f32	s15, #0
 3226 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3227 0042 37D4     		bmi	.L165
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 3228              		.loc 19 1802 5 view .LVU838
1804:Veno-Echo.cpp ****         output = 1.0f;
 3229              		.loc 19 1804 16 is_stmt 0 view .LVU839
 3230 0044 F4EE667A 		vcmp.f32	s15, s13
 3231 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3232 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 3233              	.LVL202:
 3234              	.L161:
1807:Veno-Echo.cpp ****     return output;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 120


 3235              		.loc 19 1807 5 is_stmt 1 view .LVU840
1807:Veno-Echo.cpp ****     return output;
 3236              		.loc 19 1807 5 is_stmt 0 view .LVU841
 3237              	.LBE1080:
 3238              	.LBE1083:
1234:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
 3239              		.loc 19 1234 32 view .LVU842
 3240 0050 F6EE000A 		vmov.f32	s1, #5.0e-1
 3241 0054 0020     		movs	r0, #0
 3242 0056 9FED1D1A 		vldr.32	s2, .L169+16
 3243 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3244              	.LVL203:
1235:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 3245              		.loc 19 1235 9 is_stmt 1 view .LVU843
 3246              	.LBB1084:
 3247              	.LBI1084:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3248              		.loc 21 135 13 view .LVU844
 3249              	.LBB1085:
 3250              		.loc 21 137 5 view .LVU845
 3251              		.loc 21 137 9 is_stmt 0 view .LVU846
 3252 005e 1C4B     		ldr	r3, .L169+20
 3253 0060 9FED1C7A 		vldr.32	s14, .L169+24
 3254 0064 D3ED007A 		vldr.32	s15, [r3]
 3255              	.LBE1085:
 3256              	.LBE1084:
 3257              	.LBB1087:
 3258              	.LBB1088:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3259              		.loc 10 60 42 view .LVU847
 3260 0068 1B4A     		ldr	r2, .L169+28
 3261              	.LBE1088:
 3262              	.LBE1087:
 3263              	.LBB1090:
 3264              	.LBB1086:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 121


 3265              		.loc 21 137 24 view .LVU848
 3266 006a 30EE670A 		vsub.f32	s0, s0, s15
 3267              	.LVL204:
 3268              		.loc 21 137 9 view .LVU849
 3269 006e E0EE077A 		vfma.f32	s15, s0, s14
 3270 0072 C3ED007A 		vstr.32	s15, [r3]
 3271              	.LVL205:
 3272              		.loc 21 137 9 view .LVU850
 3273              	.LBE1086:
 3274              	.LBE1090:
1236:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
 3275              		.loc 19 1236 9 is_stmt 1 view .LVU851
 3276              	.LBB1091:
 3277              	.LBI1087:
 3278              		.loc 10 60 17 view .LVU852
 3279              	.LBB1089:
 3280              		.loc 10 60 37 view .LVU853
 3281              		.loc 10 60 42 is_stmt 0 view .LVU854
 3282 0076 C2ED007A 		vstr.32	s15, [r2]
 3283              	.LVL206:
 3284              	.L159:
 3285              		.loc 10 60 42 view .LVU855
 3286              	.LBE1089:
 3287              	.LBE1091:
 3288              	.LBE1076:
 3289              	.LBE1098:
1247:Veno-Echo.cpp **** }
 3290              		.loc 19 1247 1 view .LVU856
 3291 007a 08BD     		pop	{r3, pc}
 3292              	.LVL207:
 3293              	.L160:
 3294              	.LBB1099:
1240:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 3295              		.loc 19 1240 9 is_stmt 1 view .LVU857
 3296              	.LBB1093:
 3297              	.LBI1093:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3298              		.loc 20 75 3 view .LVU858
 3299              	.LBB1094:
 3300              		.loc 20 76 5 view .LVU859
 3301              		.loc 20 76 5 is_stmt 0 view .LVU860
 3302              	.LBE1094:
 3303              	.LBE1093:
1240:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 3304              		.loc 19 1240 16 view .LVU861
 3305 007c 124B     		ldr	r3, .L169+12
1240:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 3306              		.loc 19 1240 9 view .LVU862
 3307 007e 9FED177A 		vldr.32	s14, .L169+32
1240:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 3308              		.loc 19 1240 16 view .LVU863
 3309 0082 D3ED006A 		vldr.32	s13, [r3]
 3310 0086 70EE667A 		vsub.f32	s15, s0, s13
 3311              	.LBB1096:
 3312              	.LBB1095:
 3313              		.loc 20 76 31 view .LVU864
 3314 008a F0EEE77A 		vabs.f32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 122


 3315              	.LBE1095:
 3316              	.LBE1096:
1240:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
 3317              		.loc 19 1240 9 view .LVU865
 3318 008e F4EEC77A 		vcmpe.f32	s15, s14
 3319 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3320 0096 F0DD     		ble	.L159
1242:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 3321              		.loc 19 1242 13 is_stmt 1 view .LVU866
1242:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 3322              		.loc 19 1242 29 is_stmt 0 view .LVU867
 3323 0098 0020     		movs	r0, #0
 3324 009a 9FED111A 		vldr.32	s2, .L169+36
 3325 009e DFED0B0A 		vldr.32	s1, .L169+16
 3326 00a2 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3327              	.LVL208:
1242:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 3328              		.loc 19 1242 22 view .LVU868
 3329 00a6 0F4A     		ldr	r2, .L169+40
1243:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3330              		.loc 19 1243 34 view .LVU869
 3331 00a8 0F4B     		ldr	r3, .L169+44
1242:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
 3332              		.loc 19 1242 22 view .LVU870
 3333 00aa 82ED000A 		vstr.32	s0, [r2]
1243:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3334              		.loc 19 1243 13 is_stmt 1 view .LVU871
1243:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3335              		.loc 19 1243 34 is_stmt 0 view .LVU872
 3336 00ae 83ED020A 		vstr.32	s0, [r3, #8]
 3337              	.LBE1099:
1247:Veno-Echo.cpp **** }
 3338              		.loc 19 1247 1 view .LVU873
 3339 00b2 08BD     		pop	{r3, pc}
 3340              	.LVL209:
 3341              	.L165:
 3342              	.LBB1100:
 3343              	.LBB1097:
 3344              	.LBB1092:
 3345              	.LBB1081:
1799:Veno-Echo.cpp ****         output = 0.0f;
 3346              		.loc 19 1799 16 view .LVU874
 3347 00b4 9FED050A 		vldr.32	s0, .L169+16
 3348              	.LVL210:
1799:Veno-Echo.cpp ****         output = 0.0f;
 3349              		.loc 19 1799 16 view .LVU875
 3350 00b8 CAE7     		b	.L161
 3351              	.L170:
 3352 00ba 00BF     		.align	2
 3353              	.L169:
 3354 00bc 18000000 		.word	.LANCHOR4+24
 3355 00c0 00000000 		.word	.LANCHOR8
 3356 00c4 00000000 		.word	.LANCHOR38
 3357 00c8 00000000 		.word	.LANCHOR39
 3358 00cc 00000000 		.word	0
 3359 00d0 00000000 		.word	.LANCHOR40
 3360 00d4 6F12033D 		.word	1023611503
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 123


 3361 00d8 00000000 		.word	.LANCHOR41
 3362 00dc 0AD7A33B 		.word	1000593162
 3363 00e0 0000FA43 		.word	1140457472
 3364 00e4 00000000 		.word	.LANCHOR42
 3365 00e8 00000000 		.word	.LANCHOR19
 3366              	.LBE1081:
 3367              	.LBE1092:
 3368              	.LBE1097:
 3369              	.LBE1100:
 3370              		.cfi_endproc
 3371              	.LFE4302:
 3373              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 3374              		.align	1
 3375              		.p2align 2,,3
 3376              		.global	_Z20Update_crossfeedbackv
 3377              		.syntax unified
 3378              		.thumb
 3379              		.thumb_func
 3380              		.fpu fpv5-d16
 3382              	_Z20Update_crossfeedbackv:
 3383              	.LFB4303:
1250:Veno-Echo.cpp **** {
 3384              		.loc 19 1250 1 is_stmt 1 view -0
 3385              		.cfi_startproc
 3386              		@ args = 0, pretend = 0, frame = 0
 3387              		@ frame_needed = 0, uses_anonymous_args = 0
1252:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
 3388              		.loc 19 1252 5 view .LVU877
1252:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
 3389              		.loc 19 1252 47 is_stmt 0 view .LVU878
 3390 0000 2048     		ldr	r0, .L179
 3391 0002 0022     		movs	r2, #0
 3392 0004 0721     		movs	r1, #7
1250:Veno-Echo.cpp **** {
 3393              		.loc 19 1250 1 view .LVU879
 3394 0006 38B5     		push	{r3, r4, r5, lr}
 3395              		.cfi_def_cfa_offset 16
 3396              		.cfi_offset 3, -16
 3397              		.cfi_offset 4, -12
 3398              		.cfi_offset 5, -8
 3399              		.cfi_offset 14, -4
1252:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
 3400              		.loc 19 1252 47 view .LVU880
 3401 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3402              	.LVL211:
 3403              	.LBB1101:
1256:Veno-Echo.cpp ****     if (!shift) //default controls
 3404              		.loc 19 1256 9 view .LVU881
 3405 000c 1E4B     		ldr	r3, .L179+4
 3406              	.LVL212:
1256:Veno-Echo.cpp ****     if (!shift) //default controls
 3407              		.loc 19 1256 9 view .LVU882
 3408              	.LBE1101:
1254:Veno-Echo.cpp ****     static float crossfeedback_Pot_Last{};
 3409              		.loc 19 1254 5 is_stmt 1 view .LVU883
1256:Veno-Echo.cpp ****     if (!shift) //default controls
 3410              		.loc 19 1256 5 view .LVU884
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 124


 3411              	.LBB1120:
 3412 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3413              	.LBB1102:
1259:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
 3414              		.loc 19 1259 32 is_stmt 0 view .LVU885
 3415 0010 1E4B     		ldr	r3, .L179+8
 3416              	.LBE1102:
1256:Veno-Echo.cpp ****     if (!shift) //default controls
 3417              		.loc 19 1256 5 view .LVU886
 3418 0012 18B3     		cbz	r0, .L177
 3419              	.LBB1105:
1267:Veno-Echo.cpp ****         static float modRate{};
 3420              		.loc 19 1267 9 is_stmt 1 view .LVU887
1268:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 3421              		.loc 19 1268 9 view .LVU888
 3422              	.LVL213:
 3423              	.LBB1106:
 3424              	.LBI1106:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3425              		.loc 20 75 3 view .LVU889
 3426              	.LBB1107:
 3427              		.loc 20 76 5 view .LVU890
 3428              		.loc 20 76 5 is_stmt 0 view .LVU891
 3429              	.LBE1107:
 3430              	.LBE1106:
1268:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 3431              		.loc 19 1268 16 view .LVU892
 3432 0014 93ED007A 		vldr.32	s14, [r3]
1268:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 3433              		.loc 19 1268 9 view .LVU893
 3434 0018 DFED1D6A 		vldr.32	s13, .L179+12
1268:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 3435              		.loc 19 1268 16 view .LVU894
 3436 001c 77EE407A 		vsub.f32	s15, s14, s0
 3437              	.LBB1109:
 3438              	.LBB1108:
 3439              		.loc 20 76 31 view .LVU895
 3440 0020 F0EEE77A 		vabs.f32	s15, s15
 3441              	.LBE1108:
 3442              	.LBE1109:
1268:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 3443              		.loc 19 1268 9 view .LVU896
 3444 0024 F4EEE67A 		vcmpe.f32	s15, s13
 3445 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3446 002c 00DC     		bgt	.L178
 3447              	.LBE1105:
 3448              	.LBE1120:
1275:Veno-Echo.cpp **** }
 3449              		.loc 19 1275 1 view .LVU897
 3450 002e 38BD     		pop	{r3, r4, r5, pc}
 3451              	.L178:
 3452              	.LBB1121:
 3453              	.LBB1118:
1270:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 3454              		.loc 19 1270 13 is_stmt 1 view .LVU898
 3455              	.LBB1110:
 3456              	.LBB1111:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 125


  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 3457              		.loc 8 60 20 is_stmt 0 view .LVU899
 3458 0030 184C     		ldr	r4, .L179+16
 3459              	.LBE1111:
 3460              	.LBE1110:
1270:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 3461              		.loc 19 1270 28 view .LVU900
 3462 0032 B2EE041A 		vmov.f32	s2, #1.0e+1
 3463 0036 0020     		movs	r0, #0
 3464 0038 DFED170A 		vldr.32	s1, .L179+20
1270:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 3465              		.loc 19 1270 21 view .LVU901
 3466 003c 174D     		ldr	r5, .L179+24
1270:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 126


 3467              		.loc 19 1270 28 view .LVU902
 3468 003e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3469              	.LVL214:
 3470              	.LBB1115:
 3471              	.LBB1112:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3472              		.loc 8 61 34 view .LVU903
 3473 0042 2046     		mov	r0, r4
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3474              		.loc 8 60 20 view .LVU904
 3475 0044 84ED020A 		vstr.32	s0, [r4, #8]
 3476              	.LBE1112:
 3477              	.LBE1115:
1270:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
 3478              		.loc 19 1270 21 view .LVU905
 3479 0048 85ED000A 		vstr.32	s0, [r5]
1271:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3480              		.loc 19 1271 13 is_stmt 1 view .LVU906
 3481              	.LVL215:
 3482              	.LBB1116:
 3483              	.LBI1110:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 3484              		.loc 8 58 17 view .LVU907
 3485              	.LBB1113:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3486              		.loc 8 60 9 view .LVU908
 3487              		.loc 8 61 9 view .LVU909
 3488              		.loc 8 61 34 is_stmt 0 view .LVU910
 3489 004c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 3490              	.LVL216:
 3491              		.loc 8 61 34 view .LVU911
 3492              	.LBE1113:
 3493              	.LBE1116:
1272:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 3494              		.loc 19 1272 33 view .LVU912
 3495 0050 2A68     		ldr	r2, [r5]	@ float
 3496 0052 134B     		ldr	r3, .L179+28
 3497              	.LBB1117:
 3498              	.LBB1114:
 3499              		.loc 8 61 20 view .LVU913
 3500 0054 84ED060A 		vstr.32	s0, [r4, #24]
 3501              	.LVL217:
 3502              		.loc 8 61 20 view .LVU914
 3503              	.LBE1114:
 3504              	.LBE1117:
1272:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 3505              		.loc 19 1272 13 is_stmt 1 view .LVU915
1272:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 3506              		.loc 19 1272 33 is_stmt 0 view .LVU916
 3507 0058 DA60     		str	r2, [r3, #12]	@ float
 3508              	.LBE1118:
 3509              	.LBE1121:
1275:Veno-Echo.cpp **** }
 3510              		.loc 19 1275 1 view .LVU917
 3511 005a 38BD     		pop	{r3, r4, r5, pc}
 3512              	.LVL218:
 3513              	.L177:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 127


 3514              	.LBB1122:
 3515              	.LBB1119:
1259:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
 3516              		.loc 19 1259 9 is_stmt 1 view .LVU918
1261:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
 3517              		.loc 19 1261 40 is_stmt 0 view .LVU919
 3518 005c B7EE001A 		vmov.f32	s2, #1.0e+0
 3519 0060 DFED100A 		vldr.32	s1, .L179+32
1259:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
 3520              		.loc 19 1259 32 view .LVU920
 3521 0064 83ED000A 		vstr.32	s0, [r3]
1261:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
 3522              		.loc 19 1261 9 is_stmt 1 view .LVU921
1261:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
 3523              		.loc 19 1261 40 is_stmt 0 view .LVU922
 3524 0068 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3525              	.LVL219:
1262:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 3526              		.loc 19 1262 9 is_stmt 1 view .LVU923
 3527              	.LBB1103:
 3528              	.LBI1103:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3529              		.loc 21 135 13 view .LVU924
 3530              	.LBB1104:
 3531              		.loc 21 137 5 view .LVU925
 3532              		.loc 21 137 9 is_stmt 0 view .LVU926
 3533 006c 0E4B     		ldr	r3, .L179+36
 3534 006e 9FED0F7A 		vldr.32	s14, .L179+40
 3535 0072 D3ED007A 		vldr.32	s15, [r3]
 3536              		.loc 21 137 24 view .LVU927
 3537 0076 30EE670A 		vsub.f32	s0, s0, s15
 3538              	.LVL220:
 3539              		.loc 21 137 9 view .LVU928
 3540 007a E0EE077A 		vfma.f32	s15, s0, s14
 3541 007e C3ED007A 		vstr.32	s15, [r3]
 3542              	.LBE1104:
 3543              	.LBE1103:
 3544              	.LBE1119:
 3545              	.LBE1122:
1275:Veno-Echo.cpp **** }
 3546              		.loc 19 1275 1 view .LVU929
 3547 0082 38BD     		pop	{r3, r4, r5, pc}
 3548              	.L180:
 3549              		.align	2
 3550              	.L179:
 3551 0084 18000000 		.word	.LANCHOR4+24
 3552 0088 00000000 		.word	.LANCHOR8
 3553 008c 00000000 		.word	.LANCHOR43
 3554 0090 0AD7A33B 		.word	1000593162
 3555 0094 00000000 		.word	.LANCHOR46
 3556 0098 CDCCCC3D 		.word	1036831949
 3557 009c 00000000 		.word	.LANCHOR45
 3558 00a0 00000000 		.word	.LANCHOR19
 3559 00a4 00000000 		.word	0
 3560 00a8 00000000 		.word	.LANCHOR44
 3561 00ac 6F12033D 		.word	1023611503
 3562              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 128


 3563              	.LFE4303:
 3565              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 3566              		.align	1
 3567              		.p2align 2,,3
 3568              		.global	_Z18Update_filterXfadev
 3569              		.syntax unified
 3570              		.thumb
 3571              		.thumb_func
 3572              		.fpu fpv5-d16
 3574              	_Z18Update_filterXfadev:
 3575              	.LFB4304:
1278:Veno-Echo.cpp **** {
 3576              		.loc 19 1278 1 is_stmt 1 view -0
 3577              		.cfi_startproc
 3578              		@ args = 0, pretend = 0, frame = 0
 3579              		@ frame_needed = 0, uses_anonymous_args = 0
1280:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
 3580              		.loc 19 1280 5 view .LVU931
1278:Veno-Echo.cpp **** {
 3581              		.loc 19 1278 1 is_stmt 0 view .LVU932
 3582 0000 08B5     		push	{r3, lr}
 3583              		.cfi_def_cfa_offset 8
 3584              		.cfi_offset 3, -8
 3585              		.cfi_offset 14, -4
1280:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
 3586              		.loc 19 1280 45 view .LVU933
 3587 0002 0322     		movs	r2, #3
 3588 0004 0721     		movs	r1, #7
 3589 0006 2248     		ldr	r0, .L196
 3590 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3591              	.LVL221:
 3592              	.LBB1123:
1284:Veno-Echo.cpp ****     if (!shift) //default controls
 3593              		.loc 19 1284 9 view .LVU934
 3594 000c 214B     		ldr	r3, .L196+4
 3595              	.LBE1123:
1280:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
 3596              		.loc 19 1280 45 view .LVU935
 3597 000e F0EE407A 		vmov.f32	s15, s0
 3598              	.LVL222:
1282:Veno-Echo.cpp ****     static float filterXfade_Pot_Last{};
 3599              		.loc 19 1282 5 is_stmt 1 view .LVU936
1284:Veno-Echo.cpp ****     if (!shift) //default controls
 3600              		.loc 19 1284 5 view .LVU937
 3601              	.LBB1131:
 3602 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3603 0014 13B3     		cbz	r3, .L194
1296:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 3604              		.loc 19 1296 9 view .LVU938
 3605              	.LVL223:
 3606              	.LBB1124:
 3607              	.LBI1124:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3608              		.loc 20 75 3 view .LVU939
 3609              	.LBB1125:
 3610              		.loc 20 76 5 view .LVU940
 3611              		.loc 20 76 5 is_stmt 0 view .LVU941
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 129


 3612              	.LBE1125:
 3613              	.LBE1124:
1296:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 3614              		.loc 19 1296 16 view .LVU942
 3615 0016 204B     		ldr	r3, .L196+8
1296:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 3616              		.loc 19 1296 9 view .LVU943
 3617 0018 DFED206A 		vldr.32	s13, .L196+12
1296:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 3618              		.loc 19 1296 16 view .LVU944
 3619 001c 93ED007A 		vldr.32	s14, [r3]
 3620 0020 37EE407A 		vsub.f32	s14, s14, s0
 3621              	.LBB1127:
 3622              	.LBB1126:
 3623              		.loc 20 76 31 view .LVU945
 3624 0024 B0EEC77A 		vabs.f32	s14, s14
 3625              	.LBE1126:
 3626              	.LBE1127:
1296:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
 3627              		.loc 19 1296 9 view .LVU946
 3628 0028 B4EEE67A 		vcmpe.f32	s14, s13
 3629 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3630 0030 13DD     		ble	.L181
1299:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
 3631              		.loc 19 1299 13 is_stmt 1 view .LVU947
 3632 0032 9FED1B7A 		vldr.32	s14, .L196+16
 3633 0036 B4EEC70A 		vcmpe.f32	s0, s14
 3634 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3635 003e 23D4     		bmi	.L195
1303:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
 3636              		.loc 19 1303 18 view .LVU948
 3637 0040 9FED187A 		vldr.32	s14, .L196+20
 3638 0044 B4EEC70A 		vcmpe.f32	s0, s14
 3639 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3640 004c 02DD     		ble	.L187
1306:Veno-Echo.cpp ****                 PostFilters = true;
 3641              		.loc 19 1306 17 view .LVU949
1306:Veno-Echo.cpp ****                 PostFilters = true;
 3642              		.loc 19 1306 29 is_stmt 0 view .LVU950
 3643 004e 164B     		ldr	r3, .L196+24
 3644 0050 0122     		movs	r2, #1
 3645 0052 1A70     		strb	r2, [r3]
 3646              	.L187:
1312:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
 3647              		.loc 19 1312 13 is_stmt 1 view .LVU951
1312:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
 3648              		.loc 19 1312 39 is_stmt 0 view .LVU952
 3649 0054 154B     		ldr	r3, .L196+28
 3650 0056 C3ED077A 		vstr.32	s15, [r3, #28]
 3651              	.L181:
1312:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
 3652              		.loc 19 1312 39 view .LVU953
 3653              	.LBE1131:
1315:Veno-Echo.cpp **** }
 3654              		.loc 19 1315 1 view .LVU954
 3655 005a 08BD     		pop	{r3, pc}
 3656              	.L194:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 130


 3657              	.LBB1132:
 3658              	.LBB1128:
1287:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
 3659              		.loc 19 1287 9 is_stmt 1 view .LVU955
1287:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
 3660              		.loc 19 1287 30 is_stmt 0 view .LVU956
 3661 005c 0E4B     		ldr	r3, .L196+8
1289:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
 3662              		.loc 19 1289 38 view .LVU957
 3663 005e B7EE001A 		vmov.f32	s2, #1.0e+0
 3664 0062 0120     		movs	r0, #1
 3665 0064 DFED120A 		vldr.32	s1, .L196+32
1287:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
 3666              		.loc 19 1287 30 view .LVU958
 3667 0068 83ED000A 		vstr.32	s0, [r3]
1289:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
 3668              		.loc 19 1289 9 is_stmt 1 view .LVU959
1289:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
 3669              		.loc 19 1289 38 is_stmt 0 view .LVU960
 3670 006c FFF7FEFF 		bl	_Z5scalefff9CurveType
 3671              	.LVL224:
1290:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 3672              		.loc 19 1290 9 is_stmt 1 view .LVU961
 3673              	.LBB1129:
 3674              	.LBI1129:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3675              		.loc 21 135 13 view .LVU962
 3676              	.LBB1130:
 3677              		.loc 21 137 5 view .LVU963
 3678              		.loc 21 137 9 is_stmt 0 view .LVU964
 3679 0070 104B     		ldr	r3, .L196+36
 3680 0072 9FED117A 		vldr.32	s14, .L196+40
 3681 0076 D3ED007A 		vldr.32	s15, [r3]
 3682              		.loc 21 137 24 view .LVU965
 3683 007a 30EE670A 		vsub.f32	s0, s0, s15
 3684              	.LVL225:
 3685              		.loc 21 137 9 view .LVU966
 3686 007e E0EE077A 		vfma.f32	s15, s0, s14
 3687 0082 C3ED007A 		vstr.32	s15, [r3]
 3688              	.LBE1130:
 3689              	.LBE1129:
 3690              	.LBE1128:
 3691              	.LBE1132:
1315:Veno-Echo.cpp **** }
 3692              		.loc 19 1315 1 view .LVU967
 3693 0086 08BD     		pop	{r3, pc}
 3694              	.LVL226:
 3695              	.L195:
 3696              	.LBB1133:
1301:Veno-Echo.cpp ****                 PostFilters = false;
 3697              		.loc 19 1301 17 is_stmt 1 view .LVU968
1301:Veno-Echo.cpp ****                 PostFilters = false;
 3698              		.loc 19 1301 29 is_stmt 0 view .LVU969
 3699 0088 074B     		ldr	r3, .L196+24
 3700 008a 0022     		movs	r2, #0
 3701 008c 1A70     		strb	r2, [r3]
 3702 008e E1E7     		b	.L187
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 131


 3703              	.L197:
 3704              		.align	2
 3705              	.L196:
 3706 0090 18000000 		.word	.LANCHOR4+24
 3707 0094 00000000 		.word	.LANCHOR8
 3708 0098 00000000 		.word	.LANCHOR47
 3709 009c 0AD7A33B 		.word	1000593162
 3710 00a0 6666E63E 		.word	1055286886
 3711 00a4 CDCC0C3F 		.word	1057803469
 3712 00a8 00000000 		.word	.LANCHOR49
 3713 00ac 00000000 		.word	.LANCHOR19
 3714 00b0 00000000 		.word	0
 3715 00b4 00000000 		.word	.LANCHOR48
 3716 00b8 6F12033D 		.word	1023611503
 3717              	.LBE1133:
 3718              		.cfi_endproc
 3719              	.LFE4304:
 3721              		.section	.text._Z8GetModCVv,"ax",%progbits
 3722              		.align	1
 3723              		.p2align 2,,3
 3724              		.global	_Z8GetModCVv
 3725              		.syntax unified
 3726              		.thumb
 3727              		.thumb_func
 3728              		.fpu fpv5-d16
 3730              	_Z8GetModCVv:
 3731              	.LFB4305:
1318:Veno-Echo.cpp **** {
 3732              		.loc 19 1318 1 is_stmt 1 view -0
 3733              		.cfi_startproc
 3734              		@ args = 0, pretend = 0, frame = 0
 3735              		@ frame_needed = 0, uses_anonymous_args = 0
1320:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
 3736              		.loc 19 1320 5 view .LVU971
1318:Veno-Echo.cpp **** {
 3737              		.loc 19 1318 1 is_stmt 0 view .LVU972
 3738 0000 08B5     		push	{r3, lr}
 3739              		.cfi_def_cfa_offset 8
 3740              		.cfi_offset 3, -8
 3741              		.cfi_offset 14, -4
1320:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
 3742              		.loc 19 1320 30 view .LVU973
 3743 0002 0621     		movs	r1, #6
 3744 0004 0648     		ldr	r0, .L200
 3745 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3746              	.LVL227:
 3747 000a 0020     		movs	r0, #0
 3748 000c 9FED051A 		vldr.32	s2, .L200+4
 3749 0010 DFED050A 		vldr.32	s1, .L200+8
 3750 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3751              	.LVL228:
1320:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
 3752              		.loc 19 1320 23 view .LVU974
 3753 0018 044B     		ldr	r3, .L200+12
 3754 001a 83ED000A 		vstr.32	s0, [r3]
1322:Veno-Echo.cpp **** }
 3755              		.loc 19 1322 1 view .LVU975
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 132


 3756 001e 08BD     		pop	{r3, pc}
 3757              	.L201:
 3758              		.align	2
 3759              	.L200:
 3760 0020 18000000 		.word	.LANCHOR4+24
 3761 0024 00004843 		.word	1128792064
 3762 0028 000048C3 		.word	3276275712
 3763 002c 00000000 		.word	.LANCHOR50
 3764              		.cfi_endproc
 3765              	.LFE4305:
 3767              		.section	.text._Z10Update_Modv,"ax",%progbits
 3768              		.align	1
 3769              		.p2align 2,,3
 3770              		.global	_Z10Update_Modv
 3771              		.syntax unified
 3772              		.thumb
 3773              		.thumb_func
 3774              		.fpu fpv5-d16
 3776              	_Z10Update_Modv:
 3777              	.LFB4306:
1325:Veno-Echo.cpp **** {    
 3778              		.loc 19 1325 1 is_stmt 1 view -0
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 8
 3781              		@ frame_needed = 0, uses_anonymous_args = 0
1326:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3782              		.loc 19 1326 5 view .LVU977
1327:Veno-Echo.cpp ****     static float modulation_CV{};
 3783              		.loc 19 1327 5 view .LVU978
1328:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 3784              		.loc 19 1328 5 view .LVU979
 3785              	.LVL229:
 3786              	.LBB1134:
 3787              	.LBI1134:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3788              		.loc 21 135 13 view .LVU980
 3789              	.LBB1135:
 3790              		.loc 21 137 5 view .LVU981
 3791              	.LBE1135:
 3792              	.LBE1134:
1325:Veno-Echo.cpp **** {    
 3793              		.loc 19 1325 1 is_stmt 0 view .LVU982
 3794 0000 30B5     		push	{r4, r5, lr}
 3795              		.cfi_def_cfa_offset 12
 3796              		.cfi_offset 4, -12
 3797              		.cfi_offset 5, -8
 3798              		.cfi_offset 14, -4
1328:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 3799              		.loc 19 1328 13 view .LVU983
 3800 0002 1E4A     		ldr	r2, .L204
 3801              	.LBB1141:
 3802              	.LBB1136:
 3803              		.loc 21 137 9 view .LVU984
 3804 0004 1E4C     		ldr	r4, .L204+4
 3805              	.LBE1136:
 3806              	.LBE1141:
1329:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 133


 3807              		.loc 19 1329 13 view .LVU985
 3808 0006 1F4B     		ldr	r3, .L204+8
 3809              	.LBB1142:
 3810              	.LBB1143:
 3811              		.loc 21 137 9 view .LVU986
 3812 0008 1F4D     		ldr	r5, .L204+12
 3813              	.LBE1143:
 3814              	.LBE1142:
 3815              	.LBB1148:
 3816              	.LBB1137:
 3817 000a 94ED007A 		vldr.32	s14, [r4]
 3818              		.loc 21 137 24 view .LVU987
 3819 000e 92ED006A 		vldr.32	s12, [r2]
 3820              	.LBE1137:
 3821              	.LBE1148:
 3822              	.LBB1149:
 3823              	.LBB1144:
 3824              		.loc 21 137 9 view .LVU988
 3825 0012 D5ED007A 		vldr.32	s15, [r5]
 3826              		.loc 21 137 24 view .LVU989
 3827 0016 D3ED006A 		vldr.32	s13, [r3]
 3828              	.LBE1144:
 3829              	.LBE1149:
 3830              	.LBB1150:
 3831              	.LBB1138:
 3832 001a 36EE476A 		vsub.f32	s12, s12, s14
 3833              		.loc 21 137 9 view .LVU990
 3834 001e DFED1B5A 		vldr.32	s11, .L204+16
 3835              	.LBE1138:
 3836              	.LBE1150:
 3837              	.LBB1151:
 3838              	.LBB1145:
 3839              		.loc 21 137 24 view .LVU991
 3840 0022 76EEE76A 		vsub.f32	s13, s13, s15
 3841              	.LBE1145:
 3842              	.LBE1151:
1331:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3843              		.loc 19 1331 34 view .LVU992
 3844 0026 1A48     		ldr	r0, .L204+20
 3845              	.LBB1152:
 3846              	.LBB1139:
 3847              		.loc 21 137 9 view .LVU993
 3848 0028 A6EE257A 		vfma.f32	s14, s12, s11
 3849              	.LBE1139:
 3850              	.LBE1152:
 3851              	.LBB1153:
 3852              	.LBB1146:
 3853 002c E6EEA57A 		vfma.f32	s15, s13, s11
 3854              	.LBE1146:
 3855              	.LBE1153:
1325:Veno-Echo.cpp **** {    
 3856              		.loc 19 1325 1 view .LVU994
 3857 0030 2DED028B 		vpush.64	{d8}
 3858              		.cfi_def_cfa_offset 20
 3859              		.cfi_offset 80, -20
 3860              		.cfi_offset 81, -16
 3861 0034 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 134


 3862              		.cfi_def_cfa_offset 32
 3863              	.LBB1154:
 3864              	.LBB1140:
 3865              		.loc 21 137 9 view .LVU995
 3866 0036 84ED007A 		vstr.32	s14, [r4]
 3867              	.LVL230:
 3868              		.loc 21 137 9 view .LVU996
 3869              	.LBE1140:
 3870              	.LBE1154:
1329:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3871              		.loc 19 1329 5 is_stmt 1 view .LVU997
 3872              	.LBB1155:
 3873              	.LBI1142:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3874              		.loc 21 135 13 view .LVU998
 3875              	.LBB1147:
 3876              		.loc 21 137 5 view .LVU999
 3877              		.loc 21 137 9 is_stmt 0 view .LVU1000
 3878 003a C5ED007A 		vstr.32	s15, [r5]
 3879              	.LVL231:
 3880              		.loc 21 137 9 view .LVU1001
 3881              	.LBE1147:
 3882              	.LBE1155:
1331:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3883              		.loc 19 1331 5 is_stmt 1 view .LVU1002
1331:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3884              		.loc 19 1331 34 is_stmt 0 view .LVU1003
 3885 003e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 3886              	.LVL232:
1331:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3887              		.loc 19 1331 37 view .LVU1004
 3888 0042 D5ED008A 		vldr.32	s17, [r5]
1331:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
 3889              		.loc 19 1331 34 view .LVU1005
 3890 0046 B0EE408A 		vmov.f32	s16, s0
 3891              	.LVL233:
1333:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3892              		.loc 19 1333 5 is_stmt 1 view .LVU1006
1333:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3893              		.loc 19 1333 40 is_stmt 0 view .LVU1007
 3894 004a D4ED007A 		vldr.32	s15, [r4]
1333:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3895              		.loc 19 1333 25 view .LVU1008
 3896 004e 01A9     		add	r1, sp, #4
 3897 0050 1048     		ldr	r0, .L204+24
1333:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3898              		.loc 19 1333 40 view .LVU1009
 3899 0052 E0EE287A 		vfma.f32	s15, s0, s17
 3900 0056 CDED017A 		vstr.32	s15, [sp, #4]
1333:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
 3901              		.loc 19 1333 25 view .LVU1010
 3902 005a FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 3903              	.LVL234:
1334:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3904              		.loc 19 1334 5 is_stmt 1 view .LVU1011
1334:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3905              		.loc 19 1334 40 is_stmt 0 view .LVU1012
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 135


 3906 005e D4ED007A 		vldr.32	s15, [r4]
1334:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3907              		.loc 19 1334 25 view .LVU1013
 3908 0062 01A9     		add	r1, sp, #4
 3909 0064 0C48     		ldr	r0, .L204+28
1334:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3910              		.loc 19 1334 40 view .LVU1014
 3911 0066 E8EE287A 		vfma.f32	s15, s16, s17
 3912 006a CDED017A 		vstr.32	s15, [sp, #4]
1334:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3913              		.loc 19 1334 25 view .LVU1015
 3914 006e FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 3915              	.LVL235:
1335:Veno-Echo.cpp **** }
 3916              		.loc 19 1335 1 view .LVU1016
 3917 0072 03B0     		add	sp, sp, #12
 3918              		.cfi_def_cfa_offset 20
 3919              		@ sp needed
 3920 0074 BDEC028B 		vldm	sp!, {d8}
 3921              		.cfi_restore 80
 3922              		.cfi_restore 81
 3923              		.cfi_def_cfa_offset 12
 3924              	.LVL236:
1335:Veno-Echo.cpp **** }
 3925              		.loc 19 1335 1 view .LVU1017
 3926 0078 30BD     		pop	{r4, r5, pc}
 3927              	.L205:
 3928 007a 00BF     		.align	2
 3929              	.L204:
 3930 007c 00000000 		.word	.LANCHOR50
 3931 0080 00000000 		.word	.LANCHOR51
 3932 0084 00000000 		.word	.LANCHOR42
 3933 0088 00000000 		.word	.LANCHOR52
 3934 008c 0AD7233C 		.word	1008981770
 3935 0090 00000000 		.word	.LANCHOR46
 3936 0094 00000000 		.word	.LANCHOR0
 3937 0098 00000000 		.word	.LANCHOR1
 3938              		.cfi_endproc
 3939              	.LFE4306:
 3941              		.section	.text._Z11UpdateClockv,"ax",%progbits
 3942              		.align	1
 3943              		.p2align 2,,3
 3944              		.global	_Z11UpdateClockv
 3945              		.syntax unified
 3946              		.thumb
 3947              		.thumb_func
 3948              		.fpu fpv5-d16
 3950              	_Z11UpdateClockv:
 3951              	.LFB4307:
1338:Veno-Echo.cpp **** {
 3952              		.loc 19 1338 1 is_stmt 1 view -0
 3953              		.cfi_startproc
 3954              		@ args = 0, pretend = 0, frame = 0
 3955              		@ frame_needed = 0, uses_anonymous_args = 0
1339:Veno-Echo.cpp ****     static int divCounter{};
 3956              		.loc 19 1339 5 view .LVU1019
1340:Veno-Echo.cpp ****     ClockIn.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 136


 3957              		.loc 19 1340 5 view .LVU1020
1338:Veno-Echo.cpp **** {
 3958              		.loc 19 1338 1 is_stmt 0 view .LVU1021
 3959 0000 10B5     		push	{r4, lr}
 3960              		.cfi_def_cfa_offset 8
 3961              		.cfi_offset 4, -8
 3962              		.cfi_offset 14, -4
1340:Veno-Echo.cpp ****     ClockIn.Debounce();
 3963              		.loc 19 1340 21 view .LVU1022
 3964 0002 184C     		ldr	r4, .L220
 3965 0004 2046     		mov	r0, r4
 3966 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 3967              	.LVL237:
1343:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
 3968              		.loc 19 1343 5 is_stmt 1 view .LVU1023
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 3969              		.loc 1 69 38 view .LVU1024
1343:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
 3970              		.loc 19 1343 5 is_stmt 0 view .LVU1025
 3971 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3972 000c 7F2B     		cmp	r3, #127
 3973 000e 00D0     		beq	.L218
 3974              	.L206:
1368:Veno-Echo.cpp **** }
 3975              		.loc 19 1368 1 view .LVU1026
 3976 0010 10BD     		pop	{r4, pc}
 3977              	.L218:
1345:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
 3978              		.loc 19 1345 9 is_stmt 1 view .LVU1027
1345:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 137


 3979              		.loc 19 1345 20 is_stmt 0 view .LVU1028
 3980 0012 0023     		movs	r3, #0
 3981 0014 144C     		ldr	r4, .L220+4
1346:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3982              		.loc 19 1346 33 view .LVU1029
 3983 0016 1548     		ldr	r0, .L220+8
1345:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
 3984              		.loc 19 1345 20 view .LVU1030
 3985 0018 2360     		str	r3, [r4]
1346:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3986              		.loc 19 1346 9 is_stmt 1 view .LVU1031
1346:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3987              		.loc 19 1346 33 is_stmt 0 view .LVU1032
 3988 001a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3989              	.LVL238:
1347:Veno-Echo.cpp ****         if(divCounter == 0)
 3990              		.loc 19 1347 9 is_stmt 1 view .LVU1033
 3991 001e 2368     		ldr	r3, [r4]
 3992 0020 002B     		cmp	r3, #0
 3993 0022 F5D1     		bne	.L206
1349:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
 3994              		.loc 19 1349 13 view .LVU1034
1349:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
 3995              		.loc 19 1349 29 is_stmt 0 view .LVU1035
 3996 0024 1248     		ldr	r0, .L220+12
 3997 0026 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 3998              	.LVL239:
1349:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
 3999              		.loc 19 1349 13 view .LVU1036
 4000 002a 0028     		cmp	r0, #0
 4001 002c F0D0     		beq	.L206
1351:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 4002              		.loc 19 1351 17 is_stmt 1 view .LVU1037
1351:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 4003              		.loc 19 1351 39 is_stmt 0 view .LVU1038
 4004 002e 1048     		ldr	r0, .L220+12
 4005 0030 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 4006              	.LVL240:
 4007 0034 0D48     		ldr	r0, .L220+8
 4008 0036 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 4009              	.LVL241:
1352:Veno-Echo.cpp ****                 if(syncMode)
 4010              		.loc 19 1352 17 is_stmt 1 view .LVU1039
 4011 003a 0E4B     		ldr	r3, .L220+16
 4012 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4013 003e 002B     		cmp	r3, #0
 4014 0040 E6D0     		beq	.L206
 4015              	.LBB1160:
 4016              	.LBI1160:
1337:Veno-Echo.cpp **** void UpdateClock()
 4017              		.loc 19 1337 6 view .LVU1040
 4018              	.LBB1161:
1354:Veno-Echo.cpp ****                     if(div_L <= UNITY)
 4019              		.loc 19 1354 21 view .LVU1041
1354:Veno-Echo.cpp ****                     if(div_L <= UNITY)
 4020              		.loc 19 1354 30 is_stmt 0 view .LVU1042
 4021 0042 0D4B     		ldr	r3, .L220+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 138


1354:Veno-Echo.cpp ****                     if(div_L <= UNITY)
 4022              		.loc 19 1354 21 view .LVU1043
 4023 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4024 0046 052B     		cmp	r3, #5
 4025 0048 08D9     		bls	.L219
 4026              	.L210:
1359:Veno-Echo.cpp ****                     if(div_R <= UNITY)
 4027              		.loc 19 1359 21 is_stmt 1 view .LVU1044
1359:Veno-Echo.cpp ****                     if(div_R <= UNITY)
 4028              		.loc 19 1359 30 is_stmt 0 view .LVU1045
 4029 004a 0C4B     		ldr	r3, .L220+24
1359:Veno-Echo.cpp ****                     if(div_R <= UNITY)
 4030              		.loc 19 1359 21 view .LVU1046
 4031 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4032 004e 052B     		cmp	r3, #5
 4033 0050 DED8     		bhi	.L206
1361:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
 4034              		.loc 19 1361 25 is_stmt 1 view .LVU1047
1361:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
 4035              		.loc 19 1361 51 is_stmt 0 view .LVU1048
 4036 0052 0B48     		ldr	r0, .L220+28
 4037              	.LBE1161:
 4038              	.LBE1160:
1368:Veno-Echo.cpp **** }
 4039              		.loc 19 1368 1 view .LVU1049
 4040 0054 BDE81040 		pop	{r4, lr}
 4041              		.cfi_remember_state
 4042              		.cfi_restore 14
 4043              		.cfi_restore 4
 4044              		.cfi_def_cfa_offset 0
 4045              	.LBB1163:
 4046              	.LBB1162:
1361:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
 4047              		.loc 19 1361 51 view .LVU1050
 4048 0058 FFF7FEBF 		b	_ZN8TempoLED10resetPhaseEv
 4049              	.LVL242:
 4050              	.L219:
 4051              		.cfi_restore_state
1356:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
 4052              		.loc 19 1356 25 is_stmt 1 view .LVU1051
1356:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
 4053              		.loc 19 1356 51 is_stmt 0 view .LVU1052
 4054 005c 0948     		ldr	r0, .L220+32
 4055 005e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4056              	.LVL243:
 4057 0062 F2E7     		b	.L210
 4058              	.L221:
 4059              		.align	2
 4060              	.L220:
 4061 0064 00000000 		.word	.LANCHOR53
 4062 0068 00000000 		.word	.LANCHOR54
 4063 006c 00000000 		.word	.LANCHOR55
 4064 0070 00000000 		.word	.LANCHOR56
 4065 0074 00000000 		.word	.LANCHOR57
 4066 0078 00000000 		.word	.LANCHOR58
 4067 007c 00000000 		.word	.LANCHOR59
 4068 0080 04000000 		.word	.LANCHOR1+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 139


 4069 0084 04000000 		.word	.LANCHOR0+4
 4070              	.LBE1162:
 4071              	.LBE1163:
 4072              		.cfi_endproc
 4073              	.LFE4307:
 4075              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 4076              		.align	1
 4077              		.p2align 2,,3
 4078              		.global	_Z19Update_BaseTempoLEDv
 4079              		.syntax unified
 4080              		.thumb
 4081              		.thumb_func
 4082              		.fpu fpv5-d16
 4084              	_Z19Update_BaseTempoLEDv:
 4085              	.LFB4309:
1505:Veno-Echo.cpp **** {
 4086              		.loc 19 1505 1 is_stmt 1 view -0
 4087              		.cfi_startproc
 4088              		@ args = 0, pretend = 0, frame = 0
 4089              		@ frame_needed = 0, uses_anonymous_args = 0
1506:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4090              		.loc 19 1506 5 view .LVU1054
1506:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4091              		.loc 19 1506 25 is_stmt 0 view .LVU1055
 4092 0000 0F48     		ldr	r0, .L236
1505:Veno-Echo.cpp **** {
 4093              		.loc 19 1505 1 view .LVU1056
 4094 0002 10B5     		push	{r4, lr}
 4095              		.cfi_def_cfa_offset 8
 4096              		.cfi_offset 4, -8
 4097              		.cfi_offset 14, -4
1506:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4098              		.loc 19 1506 25 view .LVU1057
 4099 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 4100              	.LVL244:
1508:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
 4101              		.loc 19 1508 5 is_stmt 1 view .LVU1058
1508:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
 4102              		.loc 19 1508 27 is_stmt 0 view .LVU1059
 4103 0008 0D48     		ldr	r0, .L236
 4104 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 4105              	.LVL245:
1508:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
 4106              		.loc 19 1508 5 view .LVU1060
 4107 000e 28B1     		cbz	r0, .L222
1510:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
 4108              		.loc 19 1510 9 is_stmt 1 view .LVU1061
 4109 0010 0C4C     		ldr	r4, .L236+4
 4110 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4111 0014 4BB9     		cbnz	r3, .L234
1516:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
 4112              		.loc 19 1516 9 view .LVU1062
 4113 0016 0C4C     		ldr	r4, .L236+8
 4114 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4115 001a 03B9     		cbnz	r3, .L235
 4116              	.L222:
1523:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 140


 4117              		.loc 19 1523 1 is_stmt 0 view .LVU1063
 4118 001c 10BD     		pop	{r4, pc}
 4119              	.L235:
 4120              	.LBB1166:
 4121              	.LBI1166:
1504:Veno-Echo.cpp **** void Update_BaseTempoLED()
 4122              		.loc 19 1504 6 is_stmt 1 view .LVU1064
 4123              	.LBB1167:
1518:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 4124              		.loc 19 1518 13 view .LVU1065
1518:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 4125              		.loc 19 1518 39 is_stmt 0 view .LVU1066
 4126 001e 0B48     		ldr	r0, .L236+12
 4127 0020 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4128              	.LVL246:
1519:Veno-Echo.cpp ****             delayR_flag = false;
 4129              		.loc 19 1519 13 is_stmt 1 view .LVU1067
1519:Veno-Echo.cpp ****             delayR_flag = false;
 4130              		.loc 19 1519 25 is_stmt 0 view .LVU1068
 4131 0024 0023     		movs	r3, #0
 4132 0026 2370     		strb	r3, [r4]
 4133              	.LBE1167:
 4134              	.LBE1166:
1523:Veno-Echo.cpp **** }
 4135              		.loc 19 1523 1 view .LVU1069
 4136 0028 10BD     		pop	{r4, pc}
 4137              	.L234:
1512:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 4138              		.loc 19 1512 13 is_stmt 1 view .LVU1070
1512:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 4139              		.loc 19 1512 39 is_stmt 0 view .LVU1071
 4140 002a 0948     		ldr	r0, .L236+16
 4141 002c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4142              	.LVL247:
1513:Veno-Echo.cpp ****             delayL_flag = false;
 4143              		.loc 19 1513 13 is_stmt 1 view .LVU1072
1513:Veno-Echo.cpp ****             delayL_flag = false;
 4144              		.loc 19 1513 25 is_stmt 0 view .LVU1073
 4145 0030 0023     		movs	r3, #0
 4146 0032 2370     		strb	r3, [r4]
1516:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
 4147              		.loc 19 1516 9 is_stmt 1 view .LVU1074
 4148 0034 044C     		ldr	r4, .L236+8
 4149 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4150 0038 002B     		cmp	r3, #0
 4151 003a EFD0     		beq	.L222
 4152 003c EFE7     		b	.L235
 4153              	.L237:
 4154 003e 00BF     		.align	2
 4155              	.L236:
 4156 0040 00000000 		.word	.LANCHOR55
 4157 0044 00000000 		.word	.LANCHOR60
 4158 0048 00000000 		.word	.LANCHOR61
 4159 004c 04000000 		.word	.LANCHOR1+4
 4160 0050 04000000 		.word	.LANCHOR0+4
 4161              		.cfi_endproc
 4162              	.LFE4309:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 141


 4164              		.section	.text._Z11SetTempoDivfP9TempoDivs,"ax",%progbits
 4165              		.align	1
 4166              		.p2align 2,,3
 4167              		.global	_Z11SetTempoDivfP9TempoDivs
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4171              		.fpu fpv5-d16
 4173              	_Z11SetTempoDivfP9TempoDivs:
 4174              	.LVL248:
 4175              	.LFB4310:
1527:Veno-Echo.cpp **** {
 4176              		.loc 19 1527 1 view -0
 4177              		.cfi_startproc
 4178              		@ args = 0, pretend = 0, frame = 0
 4179              		@ frame_needed = 0, uses_anonymous_args = 0
 4180              		@ link register save eliminated.
1529:Veno-Echo.cpp ****     float retVal{};
 4181              		.loc 19 1529 5 view .LVU1076
1531:Veno-Echo.cpp ****     if (input < 0.0909f)
 4182              		.loc 19 1531 5 view .LVU1077
 4183 0000 DFED417A 		vldr.32	s15, .L284
 4184 0004 B4EEE70A 		vcmpe.f32	s0, s15
 4185 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4186 000c 04D5     		bpl	.L272
1533:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
 4187              		.loc 19 1533 9 view .LVU1078
 4188              	.LVL249:
1534:Veno-Echo.cpp ****         *div = DIV6;
 4189              		.loc 19 1534 9 view .LVU1079
1534:Veno-Echo.cpp ****         *div = DIV6;
 4190              		.loc 19 1534 14 is_stmt 0 view .LVU1080
 4191 000e 0023     		movs	r3, #0
1533:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
 4192              		.loc 19 1533 16 view .LVU1081
 4193 0010 9FED3E0A 		vldr.32	s0, .L284+4
 4194              	.LVL250:
1534:Veno-Echo.cpp ****         *div = DIV6;
 4195              		.loc 19 1534 14 view .LVU1082
 4196 0014 0370     		strb	r3, [r0]
 4197 0016 7047     		bx	lr
 4198              	.LVL251:
 4199              	.L272:
1537:Veno-Echo.cpp ****     else if (input < 0.1818f)
 4200              		.loc 19 1537 10 is_stmt 1 view .LVU1083
 4201 0018 DFED3D7A 		vldr.32	s15, .L284+8
 4202 001c B4EEE70A 		vcmpe.f32	s0, s15
 4203 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4204 0024 04D5     		bpl	.L273
1539:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
 4205              		.loc 19 1539 8 view .LVU1084
 4206              	.LVL252:
1540:Veno-Echo.cpp ****        *div = DIV5;
 4207              		.loc 19 1540 8 view .LVU1085
1540:Veno-Echo.cpp ****        *div = DIV5;
 4208              		.loc 19 1540 13 is_stmt 0 view .LVU1086
 4209 0026 0123     		movs	r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 142


1539:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
 4210              		.loc 19 1539 15 view .LVU1087
 4211 0028 9FED3A0A 		vldr.32	s0, .L284+12
 4212              	.LVL253:
1540:Veno-Echo.cpp ****        *div = DIV5;
 4213              		.loc 19 1540 13 view .LVU1088
 4214 002c 0370     		strb	r3, [r0]
 4215 002e 7047     		bx	lr
 4216              	.LVL254:
 4217              	.L273:
1543:Veno-Echo.cpp ****     else if (input < 0.2727f)
 4218              		.loc 19 1543 10 is_stmt 1 view .LVU1089
 4219 0030 DFED397A 		vldr.32	s15, .L284+16
 4220 0034 B4EEE70A 		vcmpe.f32	s0, s15
 4221 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4222 003c 0BD4     		bmi	.L282
1549:Veno-Echo.cpp ****     else if (input < 0.3636f)
 4223              		.loc 19 1549 10 view .LVU1090
 4224 003e DFED377A 		vldr.32	s15, .L284+20
 4225 0042 B4EEE70A 		vcmpe.f32	s0, s15
 4226 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4227 004a 09D5     		bpl	.L275
1551:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
 4228              		.loc 19 1551 9 view .LVU1091
 4229              	.LVL255:
1552:Veno-Echo.cpp ****         *div = DIV3;
 4230              		.loc 19 1552 9 view .LVU1092
1552:Veno-Echo.cpp ****         *div = DIV3;
 4231              		.loc 19 1552 14 is_stmt 0 view .LVU1093
 4232 004c 0323     		movs	r3, #3
1551:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
 4233              		.loc 19 1551 16 view .LVU1094
 4234 004e 9FED340A 		vldr.32	s0, .L284+24
 4235              	.LVL256:
1552:Veno-Echo.cpp ****         *div = DIV3;
 4236              		.loc 19 1552 14 view .LVU1095
 4237 0052 0370     		strb	r3, [r0]
 4238 0054 7047     		bx	lr
 4239              	.LVL257:
 4240              	.L282:
1545:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
 4241              		.loc 19 1545 9 is_stmt 1 view .LVU1096
1546:Veno-Echo.cpp ****         *div = DIV4;
 4242              		.loc 19 1546 9 view .LVU1097
1546:Veno-Echo.cpp ****         *div = DIV4;
 4243              		.loc 19 1546 14 is_stmt 0 view .LVU1098
 4244 0056 0223     		movs	r3, #2
1545:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
 4245              		.loc 19 1545 16 view .LVU1099
 4246 0058 B5EE000A 		vmov.f32	s0, #2.5e-1
 4247              	.LVL258:
1546:Veno-Echo.cpp ****         *div = DIV4;
 4248              		.loc 19 1546 14 view .LVU1100
 4249 005c 0370     		strb	r3, [r0]
 4250 005e 7047     		bx	lr
 4251              	.LVL259:
 4252              	.L275:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 143


1555:Veno-Echo.cpp ****     else if (input < 0.4545f)
 4253              		.loc 19 1555 10 is_stmt 1 view .LVU1101
 4254 0060 DFED307A 		vldr.32	s15, .L284+28
 4255 0064 B4EEE70A 		vcmpe.f32	s0, s15
 4256 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4257 006c 0BD4     		bmi	.L283
1561:Veno-Echo.cpp ****     else if (input <  0.5455f)
 4258              		.loc 19 1561 10 view .LVU1102
 4259 006e DFED2E7A 		vldr.32	s15, .L284+32
 4260 0072 B4EEE70A 		vcmpe.f32	s0, s15
 4261 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4262 007a 09D5     		bpl	.L277
 4263              	.L260:
1563:Veno-Echo.cpp ****         retVal = (1.0f);
 4264              		.loc 19 1563 9 view .LVU1103
 4265              	.LVL260:
1564:Veno-Echo.cpp ****         *div = UNITY;
 4266              		.loc 19 1564 9 view .LVU1104
1564:Veno-Echo.cpp ****         *div = UNITY;
 4267              		.loc 19 1564 14 is_stmt 0 view .LVU1105
 4268 007c 0523     		movs	r3, #5
1563:Veno-Echo.cpp ****         retVal = (1.0f);
 4269              		.loc 19 1563 16 view .LVU1106
 4270 007e B7EE000A 		vmov.f32	s0, #1.0e+0
 4271              	.LVL261:
1564:Veno-Echo.cpp ****         *div = UNITY;
 4272              		.loc 19 1564 14 view .LVU1107
 4273 0082 0370     		strb	r3, [r0]
 4274 0084 7047     		bx	lr
 4275              	.LVL262:
 4276              	.L283:
1557:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
 4277              		.loc 19 1557 9 is_stmt 1 view .LVU1108
1558:Veno-Echo.cpp ****         *div = DIV2;
 4278              		.loc 19 1558 9 view .LVU1109
1558:Veno-Echo.cpp ****         *div = DIV2;
 4279              		.loc 19 1558 14 is_stmt 0 view .LVU1110
 4280 0086 0423     		movs	r3, #4
1557:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
 4281              		.loc 19 1557 16 view .LVU1111
 4282 0088 B6EE000A 		vmov.f32	s0, #5.0e-1
 4283              	.LVL263:
1558:Veno-Echo.cpp ****         *div = DIV2;
 4284              		.loc 19 1558 14 view .LVU1112
 4285 008c 0370     		strb	r3, [r0]
 4286 008e 7047     		bx	lr
 4287              	.LVL264:
 4288              	.L277:
1567:Veno-Echo.cpp ****     else if (input < 0.6364f)
 4289              		.loc 19 1567 10 is_stmt 1 view .LVU1113
 4290 0090 DFED267A 		vldr.32	s15, .L284+36
 4291 0094 B4EEE70A 		vcmpe.f32	s0, s15
 4292 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4293 009c 04D5     		bpl	.L278
1569:Veno-Echo.cpp ****         retVal = 2.0f;
 4294              		.loc 19 1569 9 view .LVU1114
 4295              	.LVL265:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 144


1570:Veno-Echo.cpp ****         *div = MULT2;
 4296              		.loc 19 1570 9 view .LVU1115
1570:Veno-Echo.cpp ****         *div = MULT2;
 4297              		.loc 19 1570 14 is_stmt 0 view .LVU1116
 4298 009e 0623     		movs	r3, #6
1569:Veno-Echo.cpp ****         retVal = 2.0f;
 4299              		.loc 19 1569 16 view .LVU1117
 4300 00a0 B0EE000A 		vmov.f32	s0, #2.0e+0
 4301              	.LVL266:
1570:Veno-Echo.cpp ****         *div = MULT2;
 4302              		.loc 19 1570 14 view .LVU1118
 4303 00a4 0370     		strb	r3, [r0]
 4304 00a6 7047     		bx	lr
 4305              	.LVL267:
 4306              	.L278:
1573:Veno-Echo.cpp ****     else if (input < 0.7273f)
 4307              		.loc 19 1573 10 is_stmt 1 view .LVU1119
 4308 00a8 DFED217A 		vldr.32	s15, .L284+40
 4309 00ac B4EEE70A 		vcmpe.f32	s0, s15
 4310 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4311 00b4 04D5     		bpl	.L279
1575:Veno-Echo.cpp ****         retVal = 3.0f;
 4312              		.loc 19 1575 9 view .LVU1120
 4313              	.LVL268:
1576:Veno-Echo.cpp ****         *div = MULT3;
 4314              		.loc 19 1576 9 view .LVU1121
1576:Veno-Echo.cpp ****         *div = MULT3;
 4315              		.loc 19 1576 14 is_stmt 0 view .LVU1122
 4316 00b6 0723     		movs	r3, #7
1575:Veno-Echo.cpp ****         retVal = 3.0f;
 4317              		.loc 19 1575 16 view .LVU1123
 4318 00b8 B0EE080A 		vmov.f32	s0, #3.0e+0
 4319              	.LVL269:
1576:Veno-Echo.cpp ****         *div = MULT3;
 4320              		.loc 19 1576 14 view .LVU1124
 4321 00bc 0370     		strb	r3, [r0]
 4322 00be 7047     		bx	lr
 4323              	.LVL270:
 4324              	.L279:
1579:Veno-Echo.cpp ****     else if (input < 0.8182f)
 4325              		.loc 19 1579 10 is_stmt 1 view .LVU1125
 4326 00c0 DFED1C7A 		vldr.32	s15, .L284+44
 4327 00c4 B4EEE70A 		vcmpe.f32	s0, s15
 4328 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4329 00cc 04D5     		bpl	.L280
1581:Veno-Echo.cpp ****         retVal = 4.0f;
 4330              		.loc 19 1581 9 view .LVU1126
 4331              	.LVL271:
1582:Veno-Echo.cpp ****         *div = MULT4;
 4332              		.loc 19 1582 9 view .LVU1127
1582:Veno-Echo.cpp ****         *div = MULT4;
 4333              		.loc 19 1582 14 is_stmt 0 view .LVU1128
 4334 00ce 0823     		movs	r3, #8
1581:Veno-Echo.cpp ****         retVal = 4.0f;
 4335              		.loc 19 1581 16 view .LVU1129
 4336 00d0 B1EE000A 		vmov.f32	s0, #4.0e+0
 4337              	.LVL272:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 145


1582:Veno-Echo.cpp ****         *div = MULT4;
 4338              		.loc 19 1582 14 view .LVU1130
 4339 00d4 0370     		strb	r3, [r0]
 4340 00d6 7047     		bx	lr
 4341              	.LVL273:
 4342              	.L280:
 4343              	.LBB1170:
 4344              	.LBI1170:
1526:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
 4345              		.loc 19 1526 7 is_stmt 1 view .LVU1131
 4346              	.LBB1171:
1585:Veno-Echo.cpp ****     else if (input < 0.9091f)
 4347              		.loc 19 1585 10 view .LVU1132
 4348 00d8 DFED177A 		vldr.32	s15, .L284+48
 4349 00dc B4EEE70A 		vcmpe.f32	s0, s15
 4350 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4351 00e4 04D5     		bpl	.L281
1587:Veno-Echo.cpp ****         retVal = 5.0f;
 4352              		.loc 19 1587 9 view .LVU1133
 4353              	.LVL274:
1588:Veno-Echo.cpp ****         *div = MULT5;
 4354              		.loc 19 1588 9 view .LVU1134
1588:Veno-Echo.cpp ****         *div = MULT5;
 4355              		.loc 19 1588 14 is_stmt 0 view .LVU1135
 4356 00e6 0923     		movs	r3, #9
1587:Veno-Echo.cpp ****         retVal = 5.0f;
 4357              		.loc 19 1587 16 view .LVU1136
 4358 00e8 B1EE040A 		vmov.f32	s0, #5.0e+0
 4359              	.LVL275:
1588:Veno-Echo.cpp ****         *div = MULT5;
 4360              		.loc 19 1588 14 view .LVU1137
 4361 00ec 0370     		strb	r3, [r0]
 4362 00ee 7047     		bx	lr
 4363              	.LVL276:
 4364              	.L281:
1591:Veno-Echo.cpp ****     else if (input <= 1.0f)
 4365              		.loc 19 1591 10 is_stmt 1 view .LVU1138
 4366 00f0 F7EE007A 		vmov.f32	s15, #1.0e+0
 4367 00f4 B4EEE70A 		vcmpe.f32	s0, s15
 4368 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4369 00fc BED8     		bhi	.L260
1593:Veno-Echo.cpp ****        retVal = 6.0f; 
 4370              		.loc 19 1593 8 view .LVU1139
 4371              	.LVL277:
1594:Veno-Echo.cpp ****        *div = MULT6;
 4372              		.loc 19 1594 8 view .LVU1140
1594:Veno-Echo.cpp ****        *div = MULT6;
 4373              		.loc 19 1594 13 is_stmt 0 view .LVU1141
 4374 00fe 0A23     		movs	r3, #10
1593:Veno-Echo.cpp ****        retVal = 6.0f; 
 4375              		.loc 19 1593 15 view .LVU1142
 4376 0100 B1EE080A 		vmov.f32	s0, #6.0e+0
 4377              	.LVL278:
1593:Veno-Echo.cpp ****        retVal = 6.0f; 
 4378              		.loc 19 1593 15 view .LVU1143
 4379              	.LBE1171:
 4380              	.LBE1170:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 146


1602:Veno-Echo.cpp **** return retVal;
 4381              		.loc 19 1602 1 is_stmt 1 view .LVU1144
 4382              	.LBB1173:
 4383              	.LBB1172:
1594:Veno-Echo.cpp ****        *div = MULT6;
 4384              		.loc 19 1594 13 is_stmt 0 view .LVU1145
 4385 0104 0370     		strb	r3, [r0]
 4386              	.LBE1172:
 4387              	.LBE1173:
1604:Veno-Echo.cpp **** }
 4388              		.loc 19 1604 1 view .LVU1146
 4389 0106 7047     		bx	lr
 4390              	.L285:
 4391              		.align	2
 4392              	.L284:
 4393 0108 C729BA3D 		.word	1035610567
 4394 010c ABAA2A3E 		.word	1042983595
 4395 0110 C7293A3E 		.word	1043999175
 4396 0114 CDCC4C3E 		.word	1045220557
 4397 0118 569F8B3E 		.word	1049337686
 4398 011c C729BA3E 		.word	1052387783
 4399 0120 ABAAAA3E 		.word	1051372203
 4400 0124 39B4E83E 		.word	1055437881
 4401 0128 E3A50B3F 		.word	1057727971
 4402 012c 1CEB223F 		.word	1059253020
 4403 0130 55303A3F 		.word	1060778069
 4404 0134 8E75513F 		.word	1062303118
 4405 0138 C7BA683F 		.word	1063828167
 4406              		.cfi_endproc
 4407              	.LFE4310:
 4409              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 4410              		.align	1
 4411              		.p2align 2,,3
 4412              		.global	_Z17Update_DelayTimeRv
 4413              		.syntax unified
 4414              		.thumb
 4415              		.thumb_func
 4416              		.fpu fpv5-d16
 4418              	_Z17Update_DelayTimeRv:
 4419              	.LFB4294:
 891:Veno-Echo.cpp **** {
 4420              		.loc 19 891 1 is_stmt 1 view -0
 4421              		.cfi_startproc
 4422              		@ args = 0, pretend = 0, frame = 0
 4423              		@ frame_needed = 0, uses_anonymous_args = 0
 892:Veno-Echo.cpp ****     static bool lastShift{};
 4424              		.loc 19 892 5 view .LVU1148
 893:Veno-Echo.cpp ****     static pickupState delayTimeR_pickup{};
 4425              		.loc 19 893 5 view .LVU1149
 894:Veno-Echo.cpp ****     static pickupState tapRatio_pickup{};
 4426              		.loc 19 894 5 view .LVU1150
 896:Veno-Echo.cpp ****     static float delayTimeR_Pot_Last{};
 4427              		.loc 19 896 5 view .LVU1151
 897:Veno-Echo.cpp ****     static float tapRatio_last{};
 4428              		.loc 19 897 5 view .LVU1152
 900:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 4429              		.loc 19 900 5 view .LVU1153
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 147


 891:Veno-Echo.cpp **** {
 4430              		.loc 19 891 1 is_stmt 0 view .LVU1154
 4431 0000 10B5     		push	{r4, lr}
 4432              		.cfi_def_cfa_offset 8
 4433              		.cfi_offset 4, -8
 4434              		.cfi_offset 14, -4
 900:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 4435              		.loc 19 900 44 view .LVU1155
 4436 0002 0622     		movs	r2, #6
 4437 0004 0721     		movs	r1, #7
 4438 0006 8948     		ldr	r0, .L321
 891:Veno-Echo.cpp **** {
 4439              		.loc 19 891 1 view .LVU1156
 4440 0008 2DED028B 		vpush.64	{d8}
 4441              		.cfi_def_cfa_offset 16
 4442              		.cfi_offset 80, -16
 4443              		.cfi_offset 81, -12
 900:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 4444              		.loc 19 900 44 view .LVU1157
 4445 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4446              	.LVL279:
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4447              		.loc 19 905 26 view .LVU1158
 4448 0010 8749     		ldr	r1, .L321+4
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4449              		.loc 19 905 31 view .LVU1159
 4450 0012 884B     		ldr	r3, .L321+8
 900:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 4451              		.loc 19 900 44 view .LVU1160
 4452 0014 B0EE408A 		vmov.f32	s16, s0
 4453              	.LVL280:
 904:Veno-Echo.cpp ****     static int counterR{};
 4454              		.loc 19 904 5 is_stmt 1 view .LVU1161
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4455              		.loc 19 905 5 view .LVU1162
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4456              		.loc 19 905 26 is_stmt 0 view .LVU1163
 4457 0018 0A68     		ldr	r2, [r1]
 4458              	.LBB1174:
 907:Veno-Echo.cpp ****     if (!shift) //default control
 4459              		.loc 19 907 9 view .LVU1164
 4460 001a 8748     		ldr	r0, .L321+12
 4461              	.LBE1174:
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4462              		.loc 19 905 26 view .LVU1165
 4463 001c 0132     		adds	r2, r2, #1
 4464              	.LBB1239:
 907:Veno-Echo.cpp ****     if (!shift) //default control
 4465              		.loc 19 907 5 view .LVU1166
 4466 001e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4467              	.LBE1239:
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4468              		.loc 19 905 31 view .LVU1167
 4469 0020 83FB0243 		smull	r4, r3, r3, r2
 4470 0024 D417     		asrs	r4, r2, #31
 4471 0026 C4EB6313 		rsb	r3, r4, r3, asr #5
 4472 002a 03EB4303 		add	r3, r3, r3, lsl #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 148


 4473 002e A2EB8313 		sub	r3, r2, r3, lsl #6
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4474              		.loc 19 905 14 view .LVU1168
 4475 0032 0B60     		str	r3, [r1]
 907:Veno-Echo.cpp ****     if (!shift) //default control
 4476              		.loc 19 907 5 is_stmt 1 view .LVU1169
 4477              	.LBB1240:
 4478 0034 0028     		cmp	r0, #0
 4479 0036 40F08A80 		bne	.L287
 4480              	.LBB1175:
 910:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 4481              		.loc 19 910 9 view .LVU1170
 910:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 4482              		.loc 19 910 19 is_stmt 0 view .LVU1171
 4483 003a 8049     		ldr	r1, .L321+16
 910:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 4484              		.loc 19 910 9 view .LVU1172
 4485 003c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 4486 003e 002A     		cmp	r2, #0
 4487 0040 3DD0     		beq	.L288
 912:Veno-Echo.cpp ****             lastShift = shift;
 4488              		.loc 19 912 13 is_stmt 1 view .LVU1173
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4489              		.loc 19 913 49 is_stmt 0 view .LVU1174
 4490 0042 7F4A     		ldr	r2, .L321+20
 4491              	.LBB1176:
 4492              	.LBB1177:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4493              		.loc 19 1816 31 view .LVU1175
 4494 0044 9FED7F7A 		vldr.32	s14, .L321+24
 4495              	.LBE1177:
 4496              	.LBE1176:
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4497              		.loc 19 913 49 view .LVU1176
 4498 0048 D2ED007A 		vldr.32	s15, [r2]
 912:Veno-Echo.cpp ****             lastShift = shift;
 4499              		.loc 19 912 23 view .LVU1177
 4500 004c 0870     		strb	r0, [r1]
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4501              		.loc 19 913 13 is_stmt 1 view .LVU1178
 4502              	.LVL281:
 4503              	.LBB1182:
 4504              	.LBI1176:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 4505              		.loc 19 1810 13 view .LVU1179
 4506              	.LBB1178:
1812:Veno-Echo.cpp ****     pickupState retval{};
 4507              		.loc 19 1812 5 view .LVU1180
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 4508              		.loc 19 1814 5 view .LVU1181
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4509              		.loc 19 1816 9 view .LVU1182
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4510              		.loc 19 1816 31 is_stmt 0 view .LVU1183
 4511 004e 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4512              		.loc 19 1816 9 view .LVU1184
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 149


 4513 0052 B4EEE60A 		vcmpe.f32	s0, s13
 4514 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4515 005a 00F19D80 		bmi	.L289
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4516              		.loc 19 1821 14 is_stmt 1 view .LVU1185
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4517              		.loc 19 1821 36 is_stmt 0 view .LVU1186
 4518 005e 77EE877A 		vadd.f32	s15, s15, s14
 4519              	.LVL282:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4520              		.loc 19 1821 36 view .LVU1187
 4521              	.LBE1178:
 4522              	.LBE1182:
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4523              		.loc 19 913 31 view .LVU1188
 4524 0062 7949     		ldr	r1, .L321+28
 4525              	.LBB1183:
 4526              	.LBB1179:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4527              		.loc 19 1821 14 view .LVU1189
 4528 0064 B4EEE70A 		vcmpe.f32	s0, s15
 4529 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4530 006c 40F3DB80 		ble	.L318
 4531              	.LVL283:
1855:Veno-Echo.cpp ****     return retval;
 4532              		.loc 19 1855 5 is_stmt 1 view .LVU1190
1855:Veno-Echo.cpp ****     return retval;
 4533              		.loc 19 1855 5 is_stmt 0 view .LVU1191
 4534              	.LBE1179:
 4535              	.LBE1183:
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4536              		.loc 19 913 31 view .LVU1192
 4537 0070 0120     		movs	r0, #1
 4538 0072 0870     		strb	r0, [r1]
 920:Veno-Echo.cpp ****         float delayTimeR{};
 4539              		.loc 19 920 9 is_stmt 1 view .LVU1193
 4540              	.LVL284:
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup == PICKEDUP)
 4541              		.loc 19 922 9 view .LVU1194
 4542              	.L292:
 930:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot_Last,delayTimeR_CV);
 4543              		.loc 19 930 13 view .LVU1195
 4544              	.LBB1184:
 4545              	.LBI1184:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 4546              		.loc 19 1792 7 view .LVU1196
 4547              	.LBB1185:
1794:Veno-Echo.cpp ****     float output{};
 4548              		.loc 19 1794 5 view .LVU1197
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4549              		.loc 19 1795 5 view .LVU1198
 4550              	.LBE1185:
 4551              	.LBE1184:
 930:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot_Last,delayTimeR_CV);
 4552              		.loc 19 930 36 is_stmt 0 view .LVU1199
 4553 0074 7549     		ldr	r1, .L321+32
 4554              	.LBB1188:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 150


 4555              	.LBB1186:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4556              		.loc 19 1795 39 view .LVU1200
 4557 0076 B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4558              		.loc 19 1795 49 view .LVU1201
 4559 007a B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4560              		.loc 19 1795 12 view .LVU1202
 4561 007e D2ED008A 		vldr.32	s17, [r2]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4562              		.loc 19 1795 39 view .LVU1203
 4563 0082 D1ED007A 		vldr.32	s15, [r1]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4564              		.loc 19 1795 12 view .LVU1204
 4565 0086 F0EE006A 		vmov.f32	s13, #2.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4566              		.loc 19 1795 39 view .LVU1205
 4567 008a 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4568              		.loc 19 1795 49 view .LVU1206
 4569 008e 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4570              		.loc 19 1795 12 view .LVU1207
 4571 0092 E7EEA68A 		vfma.f32	s17, s15, s13
 4572              	.LVL285:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 4573              		.loc 19 1797 5 is_stmt 1 view .LVU1208
 4574 0096 F5EEC08A 		vcmpe.f32	s17, #0
 4575 009a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4576 009e 78D4     		bmi	.L308
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 4577              		.loc 19 1802 5 view .LVU1209
1804:Veno-Echo.cpp ****         output = 1.0f;
 4578              		.loc 19 1804 16 is_stmt 0 view .LVU1210
 4579 00a0 F4EE478A 		vcmp.f32	s17, s14
 4580 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4581 00a8 77FE288A 		vselgt.f32	s17, s14, s17
 4582              	.LVL286:
 4583              	.L295:
1804:Veno-Echo.cpp ****         output = 1.0f;
 4584              		.loc 19 1804 16 view .LVU1211
 4585              	.LBE1186:
 4586              	.LBE1188:
 933:Veno-Echo.cpp ****         if (!syncMode)
 4587              		.loc 19 933 9 is_stmt 1 view .LVU1212
 933:Veno-Echo.cpp ****         if (!syncMode)
 4588              		.loc 19 933 13 is_stmt 0 view .LVU1213
 4589 00ac 684A     		ldr	r2, .L321+36
 933:Veno-Echo.cpp ****         if (!syncMode)
 4590              		.loc 19 933 9 view .LVU1214
 4591 00ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4592 00b0 92BB     		cbnz	r2, .L297
 4593              	.L320:
 935:Veno-Echo.cpp ****             if (counterR == 0)
 4594              		.loc 19 935 13 is_stmt 1 view .LVU1215
 4595 00b2 002B     		cmp	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 151


 4596 00b4 00F0A280 		beq	.L319
 4597              	.LVL287:
 4598              	.L286:
 935:Veno-Echo.cpp ****             if (counterR == 0)
 4599              		.loc 19 935 13 is_stmt 0 view .LVU1216
 4600              	.LBE1175:
 4601              	.LBE1240:
 978:Veno-Echo.cpp **** }
 4602              		.loc 19 978 1 view .LVU1217
 4603 00b8 BDEC028B 		vldm	sp!, {d8}
 4604              		.cfi_remember_state
 4605              		.cfi_restore 80
 4606              		.cfi_restore 81
 4607              		.cfi_def_cfa_offset 8
 4608              	.LVL288:
 978:Veno-Echo.cpp **** }
 4609              		.loc 19 978 1 view .LVU1218
 4610 00bc 10BD     		pop	{r4, pc}
 4611              	.LVL289:
 4612              	.L288:
 4613              		.cfi_restore_state
 4614              	.LBB1241:
 4615              	.LBB1202:
 917:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4616              		.loc 19 917 13 is_stmt 1 view .LVU1219
 4617              	.LBB1189:
 4618              	.LBI1189:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 4619              		.loc 19 1810 13 view .LVU1220
 4620              	.LBB1190:
1812:Veno-Echo.cpp ****     pickupState retval{};
 4621              		.loc 19 1812 5 view .LVU1221
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 4622              		.loc 19 1814 5 view .LVU1222
 4623              	.LBE1190:
 4624              	.LBE1189:
 917:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4625              		.loc 19 917 49 is_stmt 0 view .LVU1223
 4626 00be 6249     		ldr	r1, .L321+28
 4627 00c0 5F4A     		ldr	r2, .L321+20
 4628              	.LBB1192:
 4629              	.LBB1191:
 4630 00c2 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 4631 00c4 D2ED000A 		vldr.32	s1, [r2]
 4632 00c8 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 4633              	.LVL290:
1855:Veno-Echo.cpp ****     return retval;
 4634              		.loc 19 1855 5 is_stmt 1 view .LVU1224
1855:Veno-Echo.cpp ****     return retval;
 4635              		.loc 19 1855 5 is_stmt 0 view .LVU1225
 4636              	.LBE1191:
 4637              	.LBE1192:
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup == PICKEDUP)
 4638              		.loc 19 922 9 view .LVU1226
 4639 00cc 0228     		cmp	r0, #2
 917:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4640              		.loc 19 917 31 view .LVU1227
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 152


 4641 00ce 0870     		strb	r0, [r1]
 920:Veno-Echo.cpp ****         float delayTimeR{};
 4642              		.loc 19 920 9 is_stmt 1 view .LVU1228
 4643              	.LVL291:
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup == PICKEDUP)
 4644              		.loc 19 922 9 view .LVU1229
 4645 00d0 D0D1     		bne	.L292
 4646              	.L291:
 924:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 4647              		.loc 19 924 13 view .LVU1230
 4648              	.LVL292:
 4649              	.LBB1193:
 4650              	.LBI1193:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 4651              		.loc 19 1792 7 view .LVU1231
 4652              	.LBB1194:
1794:Veno-Echo.cpp ****     float output{};
 4653              		.loc 19 1794 5 view .LVU1232
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4654              		.loc 19 1795 5 view .LVU1233
 4655              	.LBE1194:
 4656              	.LBE1193:
 924:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 4657              		.loc 19 924 36 is_stmt 0 view .LVU1234
 4658 00d2 5E49     		ldr	r1, .L321+32
 4659              	.LBB1197:
 4660              	.LBB1195:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4661              		.loc 19 1795 39 view .LVU1235
 4662 00d4 B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4663              		.loc 19 1795 49 view .LVU1236
 4664 00d8 B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4665              		.loc 19 1795 39 view .LVU1237
 4666 00dc D1ED007A 		vldr.32	s15, [r1]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4667              		.loc 19 1795 12 view .LVU1238
 4668 00e0 F0EE006A 		vmov.f32	s13, #2.0e+0
 4669 00e4 F0EE488A 		vmov.f32	s17, s16
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4670              		.loc 19 1795 39 view .LVU1239
 4671 00e8 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4672              		.loc 19 1795 49 view .LVU1240
 4673 00ec 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4674              		.loc 19 1795 12 view .LVU1241
 4675 00f0 E7EEA68A 		vfma.f32	s17, s15, s13
 4676              	.LVL293:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 4677              		.loc 19 1797 5 is_stmt 1 view .LVU1242
 4678 00f4 F5EEC08A 		vcmpe.f32	s17, #0
 4679 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4680 00fc 00F18A80 		bmi	.L307
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 4681              		.loc 19 1802 5 view .LVU1243
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 153


1804:Veno-Echo.cpp ****         output = 1.0f;
 4682              		.loc 19 1804 16 is_stmt 0 view .LVU1244
 4683 0100 F4EE478A 		vcmp.f32	s17, s14
 4684 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4685 0108 77FE288A 		vselgt.f32	s17, s14, s17
 4686              	.LVL294:
 4687              	.L293:
1807:Veno-Echo.cpp ****     return output;
 4688              		.loc 19 1807 5 is_stmt 1 view .LVU1245
1807:Veno-Echo.cpp ****     return output;
 4689              		.loc 19 1807 5 is_stmt 0 view .LVU1246
 4690              	.LBE1195:
 4691              	.LBE1197:
 925:Veno-Echo.cpp ****             delayTimeR_Pot_Last = delayTimeR_Pot;
 4692              		.loc 19 925 13 is_stmt 1 view .LVU1247
 925:Veno-Echo.cpp ****             delayTimeR_Pot_Last = delayTimeR_Pot;
 4693              		.loc 19 925 33 is_stmt 0 view .LVU1248
 4694 010c 82ED008A 		vstr.32	s16, [r2]
 933:Veno-Echo.cpp ****         if (!syncMode)
 4695              		.loc 19 933 9 is_stmt 1 view .LVU1249
 933:Veno-Echo.cpp ****         if (!syncMode)
 4696              		.loc 19 933 13 is_stmt 0 view .LVU1250
 4697 0110 4F4A     		ldr	r2, .L321+36
 933:Veno-Echo.cpp ****         if (!syncMode)
 4698              		.loc 19 933 9 view .LVU1251
 4699 0112 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4700 0114 002A     		cmp	r2, #0
 4701 0116 CCD0     		beq	.L320
 4702              	.L297:
 943:Veno-Echo.cpp ****             if (counterR == 0)
 4703              		.loc 19 943 13 is_stmt 1 view .LVU1252
 4704 0118 002B     		cmp	r3, #0
 4705 011a CDD1     		bne	.L286
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4706              		.loc 19 946 17 view .LVU1253
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4707              		.loc 19 946 62 is_stmt 0 view .LVU1254
 4708 011c 4D48     		ldr	r0, .L321+40
 4709 011e FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 4710              	.LVL295:
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4711              		.loc 19 946 86 view .LVU1255
 4712 0122 4D48     		ldr	r0, .L321+44
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4713              		.loc 19 946 62 view .LVU1256
 4714 0124 B0EE407A 		vmov.f32	s14, s0
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4715              		.loc 19 946 86 view .LVU1257
 4716 0128 B0EE680A 		vmov.f32	s0, s17
 4717 012c FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 4718              	.LVL296:
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4719              		.loc 19 946 65 view .LVU1258
 4720 0130 DFED4A7A 		vldr.32	s15, .L321+48
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4721              		.loc 19 946 39 view .LVU1259
 4722 0134 4A48     		ldr	r0, .L321+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 154


 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4723              		.loc 19 946 65 view .LVU1260
 4724 0136 27EE277A 		vmul.f32	s14, s14, s15
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4725              		.loc 19 946 39 view .LVU1261
 4726 013a 27EE000A 		vmul.f32	s0, s14, s0
 4727 013e FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 4728              	.LVL297:
 946:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 4729              		.loc 19 946 17 view .LVU1262
 4730 0142 0028     		cmp	r0, #0
 4731 0144 B8D0     		beq	.L286
 948:Veno-Echo.cpp ****                     delayR_flag = true;
 4732              		.loc 19 948 21 is_stmt 1 view .LVU1263
 948:Veno-Echo.cpp ****                     delayR_flag = true;
 4733              		.loc 19 948 33 is_stmt 0 view .LVU1264
 4734 0146 474B     		ldr	r3, .L321+56
 4735 0148 0122     		movs	r2, #1
 4736 014a 1A70     		strb	r2, [r3]
 4737 014c B4E7     		b	.L286
 4738              	.LVL298:
 4739              	.L287:
 948:Veno-Echo.cpp ****                     delayR_flag = true;
 4740              		.loc 19 948 33 view .LVU1265
 4741              	.LBE1202:
 4742              	.LBB1203:
 956:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 4743              		.loc 19 956 9 is_stmt 1 view .LVU1266
 956:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 4744              		.loc 19 956 19 is_stmt 0 view .LVU1267
 4745 014e 3B4B     		ldr	r3, .L321+16
 956:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 4746              		.loc 19 956 9 view .LVU1268
 4747 0150 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4748 0152 22BB     		cbnz	r2, .L301
 958:Veno-Echo.cpp ****             lastShift = shift;
 4749              		.loc 19 958 13 is_stmt 1 view .LVU1269
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
 4750              		.loc 19 959 47 is_stmt 0 view .LVU1270
 4751 0154 444C     		ldr	r4, .L321+60
 958:Veno-Echo.cpp ****             lastShift = shift;
 4752              		.loc 19 958 23 view .LVU1271
 4753 0156 0121     		movs	r1, #1
 4754              	.LBB1204:
 4755              	.LBB1205:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4756              		.loc 19 1816 31 view .LVU1272
 4757 0158 9FED3A7A 		vldr.32	s14, .L321+24
 4758              	.LBE1205:
 4759              	.LBE1204:
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
 4760              		.loc 19 959 47 view .LVU1273
 4761 015c D4ED007A 		vldr.32	s15, [r4]
 958:Veno-Echo.cpp ****             lastShift = shift;
 4762              		.loc 19 958 23 view .LVU1274
 4763 0160 1970     		strb	r1, [r3]
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 155


 4764              		.loc 19 959 13 is_stmt 1 view .LVU1275
 4765              	.LVL299:
 4766              	.LBB1210:
 4767              	.LBI1204:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 4768              		.loc 19 1810 13 view .LVU1276
 4769              	.LBB1206:
1812:Veno-Echo.cpp ****     pickupState retval{};
 4770              		.loc 19 1812 5 view .LVU1277
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 4771              		.loc 19 1814 5 view .LVU1278
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4772              		.loc 19 1816 9 view .LVU1279
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4773              		.loc 19 1816 31 is_stmt 0 view .LVU1280
 4774 0162 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 4775              		.loc 19 1816 9 view .LVU1281
 4776 0166 B4EEE60A 		vcmpe.f32	s0, s13
 4777 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4778 016e 0BD4     		bmi	.L302
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4779              		.loc 19 1821 14 is_stmt 1 view .LVU1282
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4780              		.loc 19 1821 36 is_stmt 0 view .LVU1283
 4781 0170 77EE877A 		vadd.f32	s15, s15, s14
 4782              	.LVL300:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4783              		.loc 19 1821 36 view .LVU1284
 4784              	.LBE1206:
 4785              	.LBE1210:
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
 4786              		.loc 19 959 29 view .LVU1285
 4787 0174 3D4B     		ldr	r3, .L321+64
 4788              	.LBB1211:
 4789              	.LBB1207:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 4790              		.loc 19 1821 14 view .LVU1286
 4791 0176 B4EEE70A 		vcmpe.f32	s0, s15
 4792 017a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4793 017e 4CDD     		ble	.L316
 4794              	.LVL301:
1855:Veno-Echo.cpp ****     return retval;
 4795              		.loc 19 1855 5 is_stmt 1 view .LVU1287
1855:Veno-Echo.cpp ****     return retval;
 4796              		.loc 19 1855 5 is_stmt 0 view .LVU1288
 4797              	.LBE1207:
 4798              	.LBE1211:
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
 4799              		.loc 19 959 29 view .LVU1289
 4800 0180 1970     		strb	r1, [r3]
 967:Veno-Echo.cpp ****         if(tapRatio_pickup == PICKEDUP)
 4801              		.loc 19 967 9 is_stmt 1 view .LVU1290
 4802              	.LBE1203:
 4803              	.LBE1241:
 978:Veno-Echo.cpp **** }
 4804              		.loc 19 978 1 is_stmt 0 view .LVU1291
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 156


 4805 0182 BDEC028B 		vldm	sp!, {d8}
 4806              		.cfi_remember_state
 4807              		.cfi_restore 80
 4808              		.cfi_restore 81
 4809              		.cfi_def_cfa_offset 8
 4810 0186 10BD     		pop	{r4, pc}
 4811              	.LVL302:
 4812              	.L302:
 4813              		.cfi_restore_state
 4814              	.LBB1242:
 4815              	.LBB1231:
 4816              	.LBB1212:
 4817              	.LBB1208:
1855:Veno-Echo.cpp ****     return retval;
 4818              		.loc 19 1855 5 is_stmt 1 view .LVU1292
1855:Veno-Echo.cpp ****     return retval;
 4819              		.loc 19 1855 5 is_stmt 0 view .LVU1293
 4820              	.LBE1208:
 4821              	.LBE1212:
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
 4822              		.loc 19 959 29 view .LVU1294
 4823 0188 384B     		ldr	r3, .L321+64
 4824 018a 1A70     		strb	r2, [r3]
 967:Veno-Echo.cpp ****         if(tapRatio_pickup == PICKEDUP)
 4825              		.loc 19 967 9 is_stmt 1 view .LVU1295
 4826              	.LBE1231:
 4827              	.LBE1242:
 978:Veno-Echo.cpp **** }
 4828              		.loc 19 978 1 is_stmt 0 view .LVU1296
 4829 018c BDEC028B 		vldm	sp!, {d8}
 4830              		.cfi_remember_state
 4831              		.cfi_restore 80
 4832              		.cfi_restore 81
 4833              		.cfi_def_cfa_offset 8
 4834 0190 10BD     		pop	{r4, pc}
 4835              	.LVL303:
 4836              	.L308:
 4837              		.cfi_restore_state
 4838              	.LBB1243:
 4839              	.LBB1232:
 4840              	.LBB1198:
 4841              	.LBB1187:
1799:Veno-Echo.cpp ****         output = 0.0f;
 4842              		.loc 19 1799 16 view .LVU1297
 4843 0192 DFED378A 		vldr.32	s17, .L321+68
 4844              	.LVL304:
1799:Veno-Echo.cpp ****         output = 0.0f;
 4845              		.loc 19 1799 16 view .LVU1298
 4846 0196 89E7     		b	.L295
 4847              	.LVL305:
 4848              	.L289:
1799:Veno-Echo.cpp ****         output = 0.0f;
 4849              		.loc 19 1799 16 view .LVU1299
 4850              	.LBE1187:
 4851              	.LBE1198:
 4852              	.LBB1199:
 4853              	.LBB1180:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 157


1855:Veno-Echo.cpp ****     return retval;
 4854              		.loc 19 1855 5 is_stmt 1 view .LVU1300
1855:Veno-Echo.cpp ****     return retval;
 4855              		.loc 19 1855 5 is_stmt 0 view .LVU1301
 4856              	.LBE1180:
 4857              	.LBE1199:
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 4858              		.loc 19 913 31 view .LVU1302
 4859 0198 2B49     		ldr	r1, .L321+28
 4860 019a 0870     		strb	r0, [r1]
 920:Veno-Echo.cpp ****         float delayTimeR{};
 4861              		.loc 19 920 9 is_stmt 1 view .LVU1303
 4862              	.LVL306:
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup == PICKEDUP)
 4863              		.loc 19 922 9 view .LVU1304
 4864 019c 6AE7     		b	.L292
 4865              	.LVL307:
 4866              	.L301:
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup == PICKEDUP)
 4867              		.loc 19 922 9 is_stmt 0 view .LVU1305
 4868              	.LBE1232:
 4869              	.LBB1233:
 964:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,false);
 4870              		.loc 19 964 13 is_stmt 1 view .LVU1306
 4871              	.LBB1213:
 4872              	.LBI1213:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 4873              		.loc 19 1810 13 view .LVU1307
 4874              	.LBB1214:
1812:Veno-Echo.cpp ****     pickupState retval{};
 4875              		.loc 19 1812 5 view .LVU1308
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 4876              		.loc 19 1814 5 view .LVU1309
 4877              	.LBE1214:
 4878              	.LBE1213:
 964:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,false);
 4879              		.loc 19 964 47 is_stmt 0 view .LVU1310
 4880 019e 334B     		ldr	r3, .L321+64
 4881 01a0 314C     		ldr	r4, .L321+60
 4882              	.LBB1216:
 4883              	.LBB1215:
 4884 01a2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4885 01a4 D4ED000A 		vldr.32	s1, [r4]
 4886 01a8 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 4887              	.LVL308:
1855:Veno-Echo.cpp ****     return retval;
 4888              		.loc 19 1855 5 is_stmt 1 view .LVU1311
1855:Veno-Echo.cpp ****     return retval;
 4889              		.loc 19 1855 5 is_stmt 0 view .LVU1312
 4890              	.LBE1215:
 4891              	.LBE1216:
 4892              	.LBB1217:
 967:Veno-Echo.cpp ****         if(tapRatio_pickup == PICKEDUP)
 4893              		.loc 19 967 9 view .LVU1313
 4894 01ac 0228     		cmp	r0, #2
 4895              	.LBE1217:
 964:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,false);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 158


 4896              		.loc 19 964 29 view .LVU1314
 4897 01ae 1870     		strb	r0, [r3]
 967:Veno-Echo.cpp ****         if(tapRatio_pickup == PICKEDUP)
 4898              		.loc 19 967 9 is_stmt 1 view .LVU1315
 4899              	.LBB1227:
 4900 01b0 82D1     		bne	.L286
 4901              	.L305:
 4902              	.LBB1218:
 969:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 4903              		.loc 19 969 13 view .LVU1316
 4904              	.LVL309:
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 4905              		.loc 19 970 13 view .LVU1317
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 4906              		.loc 19 970 61 is_stmt 0 view .LVU1318
 4907 01b2 F0EE080A 		vmov.f32	s1, #3.0e+0
 4908 01b6 0020     		movs	r0, #0
 4909 01b8 B0EE480A 		vmov.f32	s0, s16
 4910              	.LVL310:
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 4911              		.loc 19 970 61 view .LVU1319
 4912 01bc 9FED2C1A 		vldr.32	s2, .L321+68
 4913 01c0 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4914              	.LVL311:
 4915              	.LBB1219:
 4916              	.LBI1219:
 4917              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 159


  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 160


  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 161


 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 162


 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 163


 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 164


 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 165


 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 166


 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 167


 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 168


 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 169


 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 170


 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 171


 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 172


 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 173


 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 174


 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 175


 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 176


1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 177


1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 178


1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 179


1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 180


1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 181


1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 182


1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 183


1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 184


1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 185


1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 186


1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 187


1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 188


1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 189


1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 4918              		.loc 22 1756 3 is_stmt 1 view .LVU1320
 4919              	.LBB1220:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 4920              		.loc 22 1757 5 view .LVU1321
 4921              		.loc 22 1757 28 is_stmt 0 view .LVU1322
 4922 01c4 B8FE400A 		vrinta.f32	s0, s0
 4923              	.LVL312:
 4924              		.loc 22 1757 28 view .LVU1323
 4925              	.LBE1220:
 4926              	.LBE1219:
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4927              		.loc 19 971 13 is_stmt 1 view .LVU1324
 4928              	.LBB1221:
 4929              	.LBI1221:
1606:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
 4930              		.loc 19 1606 7 view .LVU1325
 4931              	.LBB1222:
1608:Veno-Echo.cpp ****     float retVal{};
 4932              		.loc 19 1608 5 view .LVU1326
1609:Veno-Echo.cpp ****     switch(ratio)
 4933              		.loc 19 1609 5 view .LVU1327
 4934              	.LBE1222:
 4935              	.LBE1221:
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 4936              		.loc 19 970 130 is_stmt 0 view .LVU1328
 4937 01c8 FCEEC07A 		vcvt.u32.f32	s15, s0
 4938 01cc 17EE903A 		vmov	r3, s15	@ int
 4939 01d0 013B     		subs	r3, r3, #1
 4940 01d2 DBB2     		uxtb	r3, r3
 4941 01d4 022B     		cmp	r3, #2
 4942 01d6 23D8     		bhi	.L309
 4943 01d8 264A     		ldr	r2, .L321+72
 4944 01da 02EB8303 		add	r3, r2, r3, lsl #2
 4945 01de D3ED008A 		vldr.32	s17, [r3]
 4946              	.L306:
 4947              	.LVL313:
 4948              	.LBB1224:
 4949              	.LBB1223:
1632:Veno-Echo.cpp **** return retVal;
 4950              		.loc 19 1632 1 is_stmt 1 view .LVU1329
1632:Veno-Echo.cpp **** return retVal;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 190


 4951              		.loc 19 1632 1 is_stmt 0 view .LVU1330
 4952              	.LBE1223:
 4953              	.LBE1224:
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4954              		.loc 19 971 34 view .LVU1331
 4955 01e2 B0EE680A 		vmov.f32	s0, s17
 4956              	.LVL314:
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4957              		.loc 19 971 34 view .LVU1332
 4958 01e6 1B48     		ldr	r0, .L321+40
 4959 01e8 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 4960              	.LVL315:
 973:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 4961              		.loc 19 973 13 is_stmt 1 view .LVU1333
 973:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 4962              		.loc 19 973 13 is_stmt 0 view .LVU1334
 4963              	.LBE1218:
 4964              	.LBE1227:
 4965              	.LBE1233:
 4966              	.LBE1243:
1608:Veno-Echo.cpp ****     float retVal{};
 4967              		.loc 19 1608 5 is_stmt 1 view .LVU1335
1609:Veno-Echo.cpp ****     switch(ratio)
 4968              		.loc 19 1609 5 view .LVU1336
1632:Veno-Echo.cpp **** return retVal;
 4969              		.loc 19 1632 1 view .LVU1337
 4970              	.LBB1244:
 4971              	.LBB1234:
 4972              	.LBB1228:
 4973              	.LBB1225:
 973:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 4974              		.loc 19 973 34 is_stmt 0 view .LVU1338
 4975 01ec 224B     		ldr	r3, .L321+76
 974:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 4976              		.loc 19 974 27 view .LVU1339
 4977 01ee 84ED008A 		vstr.32	s16, [r4]
 973:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 4978              		.loc 19 973 34 view .LVU1340
 4979 01f2 C3ED018A 		vstr.32	s17, [r3, #4]
 974:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 4980              		.loc 19 974 13 is_stmt 1 view .LVU1341
 4981              	.LBE1225:
 4982              	.LBE1228:
 4983              	.LBE1234:
 4984              	.LBE1244:
 978:Veno-Echo.cpp **** }
 4985              		.loc 19 978 1 is_stmt 0 view .LVU1342
 4986 01f6 BDEC028B 		vldm	sp!, {d8}
 4987              		.cfi_remember_state
 4988              		.cfi_restore 80
 4989              		.cfi_restore 81
 4990              		.cfi_def_cfa_offset 8
 4991              	.LVL316:
 978:Veno-Echo.cpp **** }
 4992              		.loc 19 978 1 view .LVU1343
 4993 01fa 10BD     		pop	{r4, pc}
 4994              	.LVL317:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 191


 4995              	.L319:
 4996              		.cfi_restore_state
 4997              	.LBB1245:
 4998              	.LBB1235:
 937:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 4999              		.loc 19 937 17 is_stmt 1 view .LVU1344
 937:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 5000              		.loc 19 937 40 is_stmt 0 view .LVU1345
 5001 01fc B7EE000A 		vmov.f32	s0, #1.0e+0
 5002              	.LVL318:
 937:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 5003              		.loc 19 937 40 view .LVU1346
 5004 0200 0121     		movs	r1, #1
 5005 0202 1748     		ldr	r0, .L321+52
 5006 0204 30EE680A 		vsub.f32	s0, s0, s17
 5007              	.LBE1235:
 5008              	.LBE1245:
 978:Veno-Echo.cpp **** }
 5009              		.loc 19 978 1 view .LVU1347
 5010 0208 BDEC028B 		vldm	sp!, {d8}
 5011              		.cfi_remember_state
 5012              		.cfi_restore 80
 5013              		.cfi_restore 81
 5014              		.cfi_def_cfa_offset 8
 5015              	.LVL319:
 978:Veno-Echo.cpp **** }
 5016              		.loc 19 978 1 view .LVU1348
 5017 020c BDE81040 		pop	{r4, lr}
 5018              		.cfi_restore 14
 5019              		.cfi_restore 4
 5020              		.cfi_def_cfa_offset 0
 5021              	.LBB1246:
 5022              	.LBB1236:
 937:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 5023              		.loc 19 937 40 view .LVU1349
 5024 0210 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 5025              	.LVL320:
 5026              	.L307:
 5027              		.cfi_restore_state
 5028              	.LBB1200:
 5029              	.LBB1196:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5030              		.loc 19 1799 16 view .LVU1350
 5031 0214 DFED168A 		vldr.32	s17, .L321+68
 5032              	.LVL321:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5033              		.loc 19 1799 16 view .LVU1351
 5034 0218 78E7     		b	.L293
 5035              	.LVL322:
 5036              	.L316:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5037              		.loc 19 1799 16 view .LVU1352
 5038              	.LBE1196:
 5039              	.LBE1200:
 5040              	.LBE1236:
 5041              	.LBB1237:
 5042              	.LBB1229:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 192


 5043              	.LBB1209:
1855:Veno-Echo.cpp ****     return retval;
 5044              		.loc 19 1855 5 is_stmt 1 view .LVU1353
1855:Veno-Echo.cpp ****     return retval;
 5045              		.loc 19 1855 5 is_stmt 0 view .LVU1354
 5046              	.LBE1209:
 5047              	.LBE1229:
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,true);
 5048              		.loc 19 959 29 view .LVU1355
 5049 021a 0222     		movs	r2, #2
 5050 021c 1A70     		strb	r2, [r3]
 967:Veno-Echo.cpp ****         if(tapRatio_pickup == PICKEDUP)
 5051              		.loc 19 967 9 is_stmt 1 view .LVU1356
 5052 021e C8E7     		b	.L305
 5053              	.LVL323:
 5054              	.L309:
 5055              	.LBB1230:
 5056              	.LBB1226:
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 5057              		.loc 19 970 130 is_stmt 0 view .LVU1357
 5058 0220 F7EE008A 		vmov.f32	s17, #1.0e+0
 5059 0224 DDE7     		b	.L306
 5060              	.LVL324:
 5061              	.L318:
 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 5062              		.loc 19 970 130 view .LVU1358
 5063              	.LBE1226:
 5064              	.LBE1230:
 5065              	.LBE1237:
 5066              	.LBB1238:
 5067              	.LBB1201:
 5068              	.LBB1181:
1855:Veno-Echo.cpp ****     return retval;
 5069              		.loc 19 1855 5 is_stmt 1 view .LVU1359
1855:Veno-Echo.cpp ****     return retval;
 5070              		.loc 19 1855 5 is_stmt 0 view .LVU1360
 5071              	.LBE1181:
 5072              	.LBE1201:
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Pot_Last,delayTimeR_pick
 5073              		.loc 19 913 31 view .LVU1361
 5074 0226 0220     		movs	r0, #2
 5075 0228 0870     		strb	r0, [r1]
 920:Veno-Echo.cpp ****         float delayTimeR{};
 5076              		.loc 19 920 9 is_stmt 1 view .LVU1362
 5077              	.LVL325:
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup == PICKEDUP)
 5078              		.loc 19 922 9 view .LVU1363
 5079 022a 52E7     		b	.L291
 5080              	.L322:
 5081              		.align	2
 5082              	.L321:
 5083 022c 18000000 		.word	.LANCHOR4+24
 5084 0230 00000000 		.word	.LANCHOR62
 5085 0234 ABAAAA2A 		.word	715827883
 5086 0238 00000000 		.word	.LANCHOR8
 5087 023c 00000000 		.word	.LANCHOR63
 5088 0240 00000000 		.word	.LANCHOR64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 193


 5089 0244 0AD7A33B 		.word	1000593162
 5090 0248 00000000 		.word	.LANCHOR65
 5091 024c 00000000 		.word	.LANCHOR6
 5092 0250 00000000 		.word	.LANCHOR57
 5093 0254 00000000 		.word	.LANCHOR56
 5094 0258 00000000 		.word	.LANCHOR59
 5095 025c 00004042 		.word	1111490560
 5096 0260 00000000 		.word	.LANCHOR1
 5097 0264 00000000 		.word	.LANCHOR61
 5098 0268 00000000 		.word	.LANCHOR66
 5099 026c 00000000 		.word	.LANCHOR67
 5100 0270 00000000 		.word	0
 5101 0274 00000000 		.word	.LANCHOR68
 5102 0278 00000000 		.word	.LANCHOR19
 5103              	.LBE1238:
 5104              	.LBE1246:
 5105              		.cfi_endproc
 5106              	.LFE4294:
 5108              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 5109              		.align	1
 5110              		.p2align 2,,3
 5111              		.global	_Z17Update_DelayTimeLv
 5112              		.syntax unified
 5113              		.thumb
 5114              		.thumb_func
 5115              		.fpu fpv5-d16
 5117              	_Z17Update_DelayTimeLv:
 5118              	.LFB4292:
 795:Veno-Echo.cpp **** {
 5119              		.loc 19 795 1 view -0
 5120              		.cfi_startproc
 5121              		@ args = 0, pretend = 0, frame = 0
 5122              		@ frame_needed = 0, uses_anonymous_args = 0
 796:Veno-Echo.cpp ****     static bool lastShift{};
 5123              		.loc 19 796 5 view .LVU1365
 797:Veno-Echo.cpp ****     static pickupState delayTimeL_pickup{};
 5124              		.loc 19 797 5 view .LVU1366
 798:Veno-Echo.cpp ****     static pickupState Rev_DelayTime_pickup{};
 5125              		.loc 19 798 5 view .LVU1367
 800:Veno-Echo.cpp ****     static float delayTimeL_Pot_Last{};
 5126              		.loc 19 800 5 view .LVU1368
 801:Veno-Echo.cpp ****     static float Rev_DelayTime_last{};
 5127              		.loc 19 801 5 view .LVU1369
 804:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 5128              		.loc 19 804 5 view .LVU1370
 795:Veno-Echo.cpp **** {
 5129              		.loc 19 795 1 is_stmt 0 view .LVU1371
 5130 0000 38B5     		push	{r3, r4, r5, lr}
 5131              		.cfi_def_cfa_offset 16
 5132              		.cfi_offset 3, -16
 5133              		.cfi_offset 4, -12
 5134              		.cfi_offset 5, -8
 5135              		.cfi_offset 14, -4
 804:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 5136              		.loc 19 804 44 view .LVU1372
 5137 0002 0222     		movs	r2, #2
 5138 0004 0721     		movs	r1, #7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 194


 5139 0006 9C48     		ldr	r0, .L362
 795:Veno-Echo.cpp **** {
 5140              		.loc 19 795 1 view .LVU1373
 5141 0008 2DED028B 		vpush.64	{d8}
 5142              		.cfi_def_cfa_offset 24
 5143              		.cfi_offset 80, -24
 5144              		.cfi_offset 81, -20
 804:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 5145              		.loc 19 804 44 view .LVU1374
 5146 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5147              	.LVL326:
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5148              		.loc 19 809 26 view .LVU1375
 5149 0010 9A49     		ldr	r1, .L362+4
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5150              		.loc 19 809 31 view .LVU1376
 5151 0012 9B4B     		ldr	r3, .L362+8
 804:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 5152              		.loc 19 804 44 view .LVU1377
 5153 0014 B0EE408A 		vmov.f32	s16, s0
 5154              	.LVL327:
 808:Veno-Echo.cpp ****     static int counterL{};
 5155              		.loc 19 808 5 is_stmt 1 view .LVU1378
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5156              		.loc 19 809 5 view .LVU1379
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5157              		.loc 19 809 26 is_stmt 0 view .LVU1380
 5158 0018 0A68     		ldr	r2, [r1]
 5159              	.LBB1247:
 811:Veno-Echo.cpp ****     if (!shift) //default control
 5160              		.loc 19 811 9 view .LVU1381
 5161 001a 9A48     		ldr	r0, .L362+12
 5162              	.LBE1247:
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5163              		.loc 19 809 26 view .LVU1382
 5164 001c 0132     		adds	r2, r2, #1
 5165              	.LBB1333:
 811:Veno-Echo.cpp ****     if (!shift) //default control
 5166              		.loc 19 811 5 view .LVU1383
 5167 001e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5168              	.LBE1333:
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5169              		.loc 19 809 31 view .LVU1384
 5170 0020 83FB0243 		smull	r4, r3, r3, r2
 5171 0024 D417     		asrs	r4, r2, #31
 5172 0026 C4EB6313 		rsb	r3, r4, r3, asr #5
 5173 002a 03EB4303 		add	r3, r3, r3, lsl #1
 5174 002e A2EB8313 		sub	r3, r2, r3, lsl #6
 809:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5175              		.loc 19 809 14 view .LVU1385
 5176 0032 0B60     		str	r3, [r1]
 811:Veno-Echo.cpp ****     if (!shift) //default control
 5177              		.loc 19 811 5 is_stmt 1 view .LVU1386
 5178              	.LBB1334:
 5179 0034 0028     		cmp	r0, #0
 5180 0036 40F08A80 		bne	.L324
 5181              	.LBB1248:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 195


 814:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 5182              		.loc 19 814 9 view .LVU1387
 814:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 5183              		.loc 19 814 19 is_stmt 0 view .LVU1388
 5184 003a 9349     		ldr	r1, .L362+16
 814:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 5185              		.loc 19 814 9 view .LVU1389
 5186 003c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 5187 003e 002A     		cmp	r2, #0
 5188 0040 3DD0     		beq	.L325
 816:Veno-Echo.cpp ****             lastShift = shift;
 5189              		.loc 19 816 13 is_stmt 1 view .LVU1390
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5190              		.loc 19 817 49 is_stmt 0 view .LVU1391
 5191 0042 924A     		ldr	r2, .L362+20
 5192              	.LBB1249:
 5193              	.LBB1250:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5194              		.loc 19 1816 31 view .LVU1392
 5195 0044 9FED927A 		vldr.32	s14, .L362+24
 5196              	.LBE1250:
 5197              	.LBE1249:
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5198              		.loc 19 817 49 view .LVU1393
 5199 0048 D2ED007A 		vldr.32	s15, [r2]
 816:Veno-Echo.cpp ****             lastShift = shift;
 5200              		.loc 19 816 23 view .LVU1394
 5201 004c 0870     		strb	r0, [r1]
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5202              		.loc 19 817 13 is_stmt 1 view .LVU1395
 5203              	.LVL328:
 5204              	.LBB1255:
 5205              	.LBI1249:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 5206              		.loc 19 1810 13 view .LVU1396
 5207              	.LBB1251:
1812:Veno-Echo.cpp ****     pickupState retval{};
 5208              		.loc 19 1812 5 view .LVU1397
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 5209              		.loc 19 1814 5 view .LVU1398
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5210              		.loc 19 1816 9 view .LVU1399
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5211              		.loc 19 1816 31 is_stmt 0 view .LVU1400
 5212 004e 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5213              		.loc 19 1816 9 view .LVU1401
 5214 0052 B4EEE60A 		vcmpe.f32	s0, s13
 5215 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5216 005a 00F19D80 		bmi	.L326
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 5217              		.loc 19 1821 14 is_stmt 1 view .LVU1402
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 5218              		.loc 19 1821 36 is_stmt 0 view .LVU1403
 5219 005e 77EE877A 		vadd.f32	s15, s15, s14
 5220              	.LVL329:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 196


 5221              		.loc 19 1821 36 view .LVU1404
 5222              	.LBE1251:
 5223              	.LBE1255:
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5224              		.loc 19 817 31 view .LVU1405
 5225 0062 8C49     		ldr	r1, .L362+28
 5226              	.LBB1256:
 5227              	.LBB1252:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 5228              		.loc 19 1821 14 view .LVU1406
 5229 0064 B4EEE70A 		vcmpe.f32	s0, s15
 5230 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5231 006c 40F30081 		ble	.L359
 5232              	.LVL330:
1855:Veno-Echo.cpp ****     return retval;
 5233              		.loc 19 1855 5 is_stmt 1 view .LVU1407
1855:Veno-Echo.cpp ****     return retval;
 5234              		.loc 19 1855 5 is_stmt 0 view .LVU1408
 5235              	.LBE1252:
 5236              	.LBE1256:
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5237              		.loc 19 817 31 view .LVU1409
 5238 0070 0120     		movs	r0, #1
 5239 0072 0870     		strb	r0, [r1]
 824:Veno-Echo.cpp ****         float delayTimeL{};
 5240              		.loc 19 824 9 is_stmt 1 view .LVU1410
 5241              	.LVL331:
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup == PICKEDUP)
 5242              		.loc 19 826 5 view .LVU1411
 5243              	.L329:
 834:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot_Last,delayTimeL_CV); //combine last pot value and CV
 5244              		.loc 19 834 9 view .LVU1412
 5245              	.LBB1257:
 5246              	.LBI1257:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 5247              		.loc 19 1792 7 view .LVU1413
 5248              	.LBB1258:
1794:Veno-Echo.cpp ****     float output{};
 5249              		.loc 19 1794 5 view .LVU1414
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5250              		.loc 19 1795 5 view .LVU1415
 5251              	.LBE1258:
 5252              	.LBE1257:
 834:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot_Last,delayTimeL_CV); //combine last pot value and CV
 5253              		.loc 19 834 32 is_stmt 0 view .LVU1416
 5254 0074 8849     		ldr	r1, .L362+32
 5255              	.LBB1261:
 5256              	.LBB1259:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5257              		.loc 19 1795 39 view .LVU1417
 5258 0076 B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5259              		.loc 19 1795 49 view .LVU1418
 5260 007a B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5261              		.loc 19 1795 12 view .LVU1419
 5262 007e D2ED008A 		vldr.32	s17, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 197


1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5263              		.loc 19 1795 39 view .LVU1420
 5264 0082 D1ED007A 		vldr.32	s15, [r1]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5265              		.loc 19 1795 12 view .LVU1421
 5266 0086 F0EE006A 		vmov.f32	s13, #2.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5267              		.loc 19 1795 39 view .LVU1422
 5268 008a 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5269              		.loc 19 1795 49 view .LVU1423
 5270 008e 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5271              		.loc 19 1795 12 view .LVU1424
 5272 0092 E7EEA68A 		vfma.f32	s17, s15, s13
 5273              	.LVL332:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 5274              		.loc 19 1797 5 is_stmt 1 view .LVU1425
 5275 0096 F5EEC08A 		vcmpe.f32	s17, #0
 5276 009a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5277 009e 78D4     		bmi	.L348
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 5278              		.loc 19 1802 5 view .LVU1426
1804:Veno-Echo.cpp ****         output = 1.0f;
 5279              		.loc 19 1804 16 is_stmt 0 view .LVU1427
 5280 00a0 F4EE478A 		vcmp.f32	s17, s14
 5281 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5282 00a8 77FE288A 		vselgt.f32	s17, s14, s17
 5283              	.LVL333:
 5284              	.L332:
1804:Veno-Echo.cpp ****         output = 1.0f;
 5285              		.loc 19 1804 16 view .LVU1428
 5286              	.LBE1259:
 5287              	.LBE1261:
 837:Veno-Echo.cpp ****     if (!syncMode)
 5288              		.loc 19 837 5 is_stmt 1 view .LVU1429
 837:Veno-Echo.cpp ****     if (!syncMode)
 5289              		.loc 19 837 9 is_stmt 0 view .LVU1430
 5290 00ac 7B4A     		ldr	r2, .L362+36
 837:Veno-Echo.cpp ****     if (!syncMode)
 5291              		.loc 19 837 5 view .LVU1431
 5292 00ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5293 00b0 92BB     		cbnz	r2, .L334
 5294              	.L361:
 839:Veno-Echo.cpp ****         if (counterL == 0)
 5295              		.loc 19 839 9 is_stmt 1 view .LVU1432
 5296 00b2 002B     		cmp	r3, #0
 5297 00b4 00F0CA80 		beq	.L360
 5298              	.LVL334:
 5299              	.L323:
 839:Veno-Echo.cpp ****         if (counterL == 0)
 5300              		.loc 19 839 9 is_stmt 0 view .LVU1433
 5301              	.LBE1248:
 5302              	.LBE1334:
 883:Veno-Echo.cpp **** }
 5303              		.loc 19 883 1 view .LVU1434
 5304 00b8 BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 198


 5305              		.cfi_remember_state
 5306              		.cfi_restore 80
 5307              		.cfi_restore 81
 5308              		.cfi_def_cfa_offset 16
 5309              	.LVL335:
 883:Veno-Echo.cpp **** }
 5310              		.loc 19 883 1 view .LVU1435
 5311 00bc 38BD     		pop	{r3, r4, r5, pc}
 5312              	.LVL336:
 5313              	.L325:
 5314              		.cfi_restore_state
 5315              	.LBB1335:
 5316              	.LBB1275:
 821:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5317              		.loc 19 821 13 is_stmt 1 view .LVU1436
 5318              	.LBB1262:
 5319              	.LBI1262:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 5320              		.loc 19 1810 13 view .LVU1437
 5321              	.LBB1263:
1812:Veno-Echo.cpp ****     pickupState retval{};
 5322              		.loc 19 1812 5 view .LVU1438
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 5323              		.loc 19 1814 5 view .LVU1439
 5324              	.LBE1263:
 5325              	.LBE1262:
 821:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5326              		.loc 19 821 49 is_stmt 0 view .LVU1440
 5327 00be 7549     		ldr	r1, .L362+28
 5328 00c0 724A     		ldr	r2, .L362+20
 5329              	.LBB1265:
 5330              	.LBB1264:
 5331 00c2 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5332 00c4 D2ED000A 		vldr.32	s1, [r2]
 5333 00c8 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 5334              	.LVL337:
1855:Veno-Echo.cpp ****     return retval;
 5335              		.loc 19 1855 5 is_stmt 1 view .LVU1441
1855:Veno-Echo.cpp ****     return retval;
 5336              		.loc 19 1855 5 is_stmt 0 view .LVU1442
 5337              	.LBE1264:
 5338              	.LBE1265:
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup == PICKEDUP)
 5339              		.loc 19 826 5 view .LVU1443
 5340 00cc 0228     		cmp	r0, #2
 821:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5341              		.loc 19 821 31 view .LVU1444
 5342 00ce 0870     		strb	r0, [r1]
 824:Veno-Echo.cpp ****         float delayTimeL{};
 5343              		.loc 19 824 9 is_stmt 1 view .LVU1445
 5344              	.LVL338:
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup == PICKEDUP)
 5345              		.loc 19 826 5 view .LVU1446
 5346 00d0 D0D1     		bne	.L329
 5347              	.L328:
 828:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 5348              		.loc 19 828 9 view .LVU1447
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 199


 5349              	.LVL339:
 5350              	.LBB1266:
 5351              	.LBI1266:
1792:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 5352              		.loc 19 1792 7 view .LVU1448
 5353              	.LBB1267:
1794:Veno-Echo.cpp ****     float output{};
 5354              		.loc 19 1794 5 view .LVU1449
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5355              		.loc 19 1795 5 view .LVU1450
 5356              	.LBE1267:
 5357              	.LBE1266:
 828:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 5358              		.loc 19 828 32 is_stmt 0 view .LVU1451
 5359 00d2 7149     		ldr	r1, .L362+32
 5360              	.LBB1270:
 5361              	.LBB1268:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5362              		.loc 19 1795 39 view .LVU1452
 5363 00d4 B7EE007A 		vmov.f32	s14, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5364              		.loc 19 1795 49 view .LVU1453
 5365 00d8 B6EE006A 		vmov.f32	s12, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5366              		.loc 19 1795 39 view .LVU1454
 5367 00dc D1ED007A 		vldr.32	s15, [r1]
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5368              		.loc 19 1795 12 view .LVU1455
 5369 00e0 F0EE006A 		vmov.f32	s13, #2.0e+0
 5370 00e4 F0EE488A 		vmov.f32	s17, s16
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5371              		.loc 19 1795 39 view .LVU1456
 5372 00e8 77EE677A 		vsub.f32	s15, s14, s15
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5373              		.loc 19 1795 49 view .LVU1457
 5374 00ec 77EEC67A 		vsub.f32	s15, s15, s12
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5375              		.loc 19 1795 12 view .LVU1458
 5376 00f0 E7EEA68A 		vfma.f32	s17, s15, s13
 5377              	.LVL340:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 5378              		.loc 19 1797 5 is_stmt 1 view .LVU1459
 5379 00f4 F5EEC08A 		vcmpe.f32	s17, #0
 5380 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5381 00fc 00F1B280 		bmi	.L347
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 5382              		.loc 19 1802 5 view .LVU1460
1804:Veno-Echo.cpp ****         output = 1.0f;
 5383              		.loc 19 1804 16 is_stmt 0 view .LVU1461
 5384 0100 F4EE478A 		vcmp.f32	s17, s14
 5385 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5386 0108 77FE288A 		vselgt.f32	s17, s14, s17
 5387              	.LVL341:
 5388              	.L330:
1807:Veno-Echo.cpp ****     return output;
 5389              		.loc 19 1807 5 is_stmt 1 view .LVU1462
1807:Veno-Echo.cpp ****     return output;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 200


 5390              		.loc 19 1807 5 is_stmt 0 view .LVU1463
 5391              	.LBE1268:
 5392              	.LBE1270:
 829:Veno-Echo.cpp ****         delayTimeL_Pot_Last = delayTimeL_Pot; //update last value
 5393              		.loc 19 829 9 is_stmt 1 view .LVU1464
 829:Veno-Echo.cpp ****         delayTimeL_Pot_Last = delayTimeL_Pot; //update last value
 5394              		.loc 19 829 29 is_stmt 0 view .LVU1465
 5395 010c 82ED008A 		vstr.32	s16, [r2]
 837:Veno-Echo.cpp ****     if (!syncMode)
 5396              		.loc 19 837 5 is_stmt 1 view .LVU1466
 837:Veno-Echo.cpp ****     if (!syncMode)
 5397              		.loc 19 837 9 is_stmt 0 view .LVU1467
 5398 0110 624A     		ldr	r2, .L362+36
 837:Veno-Echo.cpp ****     if (!syncMode)
 5399              		.loc 19 837 5 view .LVU1468
 5400 0112 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5401 0114 002A     		cmp	r2, #0
 5402 0116 CCD0     		beq	.L361
 5403              	.L334:
 847:Veno-Echo.cpp ****         if (counterL == 0)
 5404              		.loc 19 847 9 is_stmt 1 view .LVU1469
 5405 0118 002B     		cmp	r3, #0
 5406 011a CDD1     		bne	.L323
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5407              		.loc 19 850 13 view .LVU1470
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5408              		.loc 19 850 58 is_stmt 0 view .LVU1471
 5409 011c 6048     		ldr	r0, .L362+40
 5410 011e FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5411              	.LVL342:
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5412              		.loc 19 850 82 view .LVU1472
 5413 0122 6048     		ldr	r0, .L362+44
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5414              		.loc 19 850 58 view .LVU1473
 5415 0124 B0EE407A 		vmov.f32	s14, s0
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5416              		.loc 19 850 82 view .LVU1474
 5417 0128 B0EE680A 		vmov.f32	s0, s17
 5418 012c FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 5419              	.LVL343:
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5420              		.loc 19 850 61 view .LVU1475
 5421 0130 DFED5D7A 		vldr.32	s15, .L362+48
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5422              		.loc 19 850 35 view .LVU1476
 5423 0134 5D48     		ldr	r0, .L362+52
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5424              		.loc 19 850 61 view .LVU1477
 5425 0136 27EE277A 		vmul.f32	s14, s14, s15
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5426              		.loc 19 850 35 view .LVU1478
 5427 013a 27EE000A 		vmul.f32	s0, s14, s0
 5428 013e FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 5429              	.LVL344:
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 5430              		.loc 19 850 13 view .LVU1479
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 201


 5431 0142 0028     		cmp	r0, #0
 5432 0144 B8D0     		beq	.L323
 852:Veno-Echo.cpp ****                 delayL_flag = true;
 5433              		.loc 19 852 17 is_stmt 1 view .LVU1480
 852:Veno-Echo.cpp ****                 delayL_flag = true;
 5434              		.loc 19 852 29 is_stmt 0 view .LVU1481
 5435 0146 5A4B     		ldr	r3, .L362+56
 5436 0148 0122     		movs	r2, #1
 5437 014a 1A70     		strb	r2, [r3]
 5438 014c B4E7     		b	.L323
 5439              	.LVL345:
 5440              	.L324:
 852:Veno-Echo.cpp ****                 delayL_flag = true;
 5441              		.loc 19 852 29 view .LVU1482
 5442              	.LBE1275:
 5443              	.LBB1276:
 861:Veno-Echo.cpp ****     if (shift != lastShift) //recent shift change
 5444              		.loc 19 861 5 is_stmt 1 view .LVU1483
 861:Veno-Echo.cpp ****     if (shift != lastShift) //recent shift change
 5445              		.loc 19 861 15 is_stmt 0 view .LVU1484
 5446 014e 4E4B     		ldr	r3, .L362+16
 861:Veno-Echo.cpp ****     if (shift != lastShift) //recent shift change
 5447              		.loc 19 861 5 view .LVU1485
 5448 0150 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5449 0152 22BB     		cbnz	r2, .L338
 863:Veno-Echo.cpp ****         lastShift = shift;
 5450              		.loc 19 863 9 is_stmt 1 view .LVU1486
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5451              		.loc 19 864 48 is_stmt 0 view .LVU1487
 5452 0154 574C     		ldr	r4, .L362+60
 863:Veno-Echo.cpp ****         lastShift = shift;
 5453              		.loc 19 863 19 view .LVU1488
 5454 0156 0121     		movs	r1, #1
 5455              	.LBB1277:
 5456              	.LBB1278:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5457              		.loc 19 1816 31 view .LVU1489
 5458 0158 9FED4D7A 		vldr.32	s14, .L362+24
 5459              	.LBE1278:
 5460              	.LBE1277:
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5461              		.loc 19 864 48 view .LVU1490
 5462 015c D4ED007A 		vldr.32	s15, [r4]
 863:Veno-Echo.cpp ****         lastShift = shift;
 5463              		.loc 19 863 19 view .LVU1491
 5464 0160 1970     		strb	r1, [r3]
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5465              		.loc 19 864 9 is_stmt 1 view .LVU1492
 5466              	.LVL346:
 5467              	.LBB1283:
 5468              	.LBI1277:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 5469              		.loc 19 1810 13 view .LVU1493
 5470              	.LBB1279:
1812:Veno-Echo.cpp ****     pickupState retval{};
 5471              		.loc 19 1812 5 view .LVU1494
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 202


 5472              		.loc 19 1814 5 view .LVU1495
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5473              		.loc 19 1816 9 view .LVU1496
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5474              		.loc 19 1816 31 is_stmt 0 view .LVU1497
 5475 0162 77EEC76A 		vsub.f32	s13, s15, s14
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 5476              		.loc 19 1816 9 view .LVU1498
 5477 0166 B4EEE60A 		vcmpe.f32	s0, s13
 5478 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5479 016e 0BD4     		bmi	.L339
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 5480              		.loc 19 1821 14 is_stmt 1 view .LVU1499
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 5481              		.loc 19 1821 36 is_stmt 0 view .LVU1500
 5482 0170 77EE877A 		vadd.f32	s15, s15, s14
 5483              	.LVL347:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 5484              		.loc 19 1821 36 view .LVU1501
 5485              	.LBE1279:
 5486              	.LBE1283:
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5487              		.loc 19 864 30 view .LVU1502
 5488 0174 504B     		ldr	r3, .L362+64
 5489              	.LBB1284:
 5490              	.LBB1280:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 5491              		.loc 19 1821 14 view .LVU1503
 5492 0176 B4EEE70A 		vcmpe.f32	s0, s15
 5493 017a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5494 017e 74DD     		ble	.L357
 5495              	.LVL348:
1855:Veno-Echo.cpp ****     return retval;
 5496              		.loc 19 1855 5 is_stmt 1 view .LVU1504
1855:Veno-Echo.cpp ****     return retval;
 5497              		.loc 19 1855 5 is_stmt 0 view .LVU1505
 5498              	.LBE1280:
 5499              	.LBE1284:
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5500              		.loc 19 864 30 view .LVU1506
 5501 0180 1970     		strb	r1, [r3]
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 5502              		.loc 19 872 5 is_stmt 1 view .LVU1507
 5503              	.LBE1276:
 5504              	.LBE1335:
 883:Veno-Echo.cpp **** }
 5505              		.loc 19 883 1 is_stmt 0 view .LVU1508
 5506 0182 BDEC028B 		vldm	sp!, {d8}
 5507              		.cfi_remember_state
 5508              		.cfi_restore 80
 5509              		.cfi_restore 81
 5510              		.cfi_def_cfa_offset 16
 5511 0186 38BD     		pop	{r3, r4, r5, pc}
 5512              	.LVL349:
 5513              	.L339:
 5514              		.cfi_restore_state
 5515              	.LBB1336:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 203


 5516              	.LBB1326:
 5517              	.LBB1285:
 5518              	.LBB1281:
1855:Veno-Echo.cpp ****     return retval;
 5519              		.loc 19 1855 5 is_stmt 1 view .LVU1509
1855:Veno-Echo.cpp ****     return retval;
 5520              		.loc 19 1855 5 is_stmt 0 view .LVU1510
 5521              	.LBE1281:
 5522              	.LBE1285:
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5523              		.loc 19 864 30 view .LVU1511
 5524 0188 4B4B     		ldr	r3, .L362+64
 5525 018a 1A70     		strb	r2, [r3]
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 5526              		.loc 19 872 5 is_stmt 1 view .LVU1512
 5527              	.LBE1326:
 5528              	.LBE1336:
 883:Veno-Echo.cpp **** }
 5529              		.loc 19 883 1 is_stmt 0 view .LVU1513
 5530 018c BDEC028B 		vldm	sp!, {d8}
 5531              		.cfi_remember_state
 5532              		.cfi_restore 80
 5533              		.cfi_restore 81
 5534              		.cfi_def_cfa_offset 16
 5535 0190 38BD     		pop	{r3, r4, r5, pc}
 5536              	.LVL350:
 5537              	.L348:
 5538              		.cfi_restore_state
 5539              	.LBB1337:
 5540              	.LBB1327:
 5541              	.LBB1271:
 5542              	.LBB1260:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5543              		.loc 19 1799 16 view .LVU1514
 5544 0192 DFED4A8A 		vldr.32	s17, .L362+68
 5545              	.LVL351:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5546              		.loc 19 1799 16 view .LVU1515
 5547 0196 89E7     		b	.L332
 5548              	.LVL352:
 5549              	.L326:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5550              		.loc 19 1799 16 view .LVU1516
 5551              	.LBE1260:
 5552              	.LBE1271:
 5553              	.LBB1272:
 5554              	.LBB1253:
1855:Veno-Echo.cpp ****     return retval;
 5555              		.loc 19 1855 5 is_stmt 1 view .LVU1517
1855:Veno-Echo.cpp ****     return retval;
 5556              		.loc 19 1855 5 is_stmt 0 view .LVU1518
 5557              	.LBE1253:
 5558              	.LBE1272:
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5559              		.loc 19 817 31 view .LVU1519
 5560 0198 3E49     		ldr	r1, .L362+28
 5561 019a 0870     		strb	r0, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 204


 824:Veno-Echo.cpp ****         float delayTimeL{};
 5562              		.loc 19 824 9 is_stmt 1 view .LVU1520
 5563              	.LVL353:
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup == PICKEDUP)
 5564              		.loc 19 826 5 view .LVU1521
 5565 019c 6AE7     		b	.L329
 5566              	.LVL354:
 5567              	.L338:
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup == PICKEDUP)
 5568              		.loc 19 826 5 is_stmt 0 view .LVU1522
 5569              	.LBE1327:
 5570              	.LBB1328:
 869:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5571              		.loc 19 869 9 is_stmt 1 view .LVU1523
 5572              	.LBB1286:
 5573              	.LBI1286:
1810:Veno-Echo.cpp **** pickupState checkPickupState(float value, float lastValue, pickupState lastState, bool ShiftChange)
 5574              		.loc 19 1810 13 view .LVU1524
 5575              	.LBB1287:
1812:Veno-Echo.cpp ****     pickupState retval{};
 5576              		.loc 19 1812 5 view .LVU1525
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 5577              		.loc 19 1814 5 view .LVU1526
 5578              	.LBE1287:
 5579              	.LBE1286:
 869:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5580              		.loc 19 869 48 is_stmt 0 view .LVU1527
 5581 019e 464B     		ldr	r3, .L362+64
 5582 01a0 444C     		ldr	r4, .L362+60
 5583              	.LBB1289:
 5584              	.LBB1288:
 5585 01a2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5586 01a4 D4ED000A 		vldr.32	s1, [r4]
 5587 01a8 FFF7FEFF 		bl	_Z16checkPickupStateff11pickupStateb.part.0
 5588              	.LVL355:
1855:Veno-Echo.cpp ****     return retval;
 5589              		.loc 19 1855 5 is_stmt 1 view .LVU1528
1855:Veno-Echo.cpp ****     return retval;
 5590              		.loc 19 1855 5 is_stmt 0 view .LVU1529
 5591              	.LBE1288:
 5592              	.LBE1289:
 5593              	.LBB1290:
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 5594              		.loc 19 872 5 view .LVU1530
 5595 01ac 0228     		cmp	r0, #2
 5596              	.LBE1290:
 869:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5597              		.loc 19 869 30 view .LVU1531
 5598 01ae 1870     		strb	r0, [r3]
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 5599              		.loc 19 872 5 is_stmt 1 view .LVU1532
 5600              	.LBB1324:
 5601 01b0 82D1     		bne	.L323
 5602              	.L342:
 5603              	.LBB1291:
 874:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 5604              		.loc 19 874 9 view .LVU1533
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 205


 874:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 5605              		.loc 19 874 34 is_stmt 0 view .LVU1534
 5606 01b2 B0EE480A 		vmov.f32	s0, s16
 5607              	.LVL356:
 874:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 5608              		.loc 19 874 34 view .LVU1535
 5609 01b6 0120     		movs	r0, #1
 5610 01b8 9FED411A 		vldr.32	s2, .L362+72
 5611 01bc DFED410A 		vldr.32	s1, .L362+76
 5612 01c0 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5613              	.LVL357:
 5614              	.LBB1292:
 5615              	.LBB1293:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5616              		.loc 19 70 28 view .LVU1536
 5617 01c4 404B     		ldr	r3, .L362+80
 5618              	.LVL358:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5619              		.loc 19 70 28 view .LVU1537
 5620              	.LBE1293:
 5621              	.LBE1292:
 875:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5622              		.loc 19 875 9 is_stmt 1 view .LVU1538
 5623              	.LBB1307:
 5624              	.LBI1292:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 5625              		.loc 19 68 10 view .LVU1539
 5626              	.LBB1305:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5627              		.loc 19 70 9 view .LVU1540
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5628              		.loc 19 70 53 is_stmt 0 view .LVU1541
 5629 01c6 DFED326A 		vldr.32	s13, .L362+24
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5630              		.loc 19 70 28 view .LVU1542
 5631 01ca D3ED017A 		vldr.32	s15, [r3, #4]
 5632              	.LVL359:
 5633              	.LBB1294:
 5634              	.LBI1294:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5635              		.loc 20 75 3 is_stmt 1 view .LVU1543
 5636              	.LBB1295:
 5637              		.loc 20 76 5 view .LVU1544
 5638              		.loc 20 76 5 is_stmt 0 view .LVU1545
 5639              	.LBE1295:
 5640              	.LBE1294:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5641              		.loc 19 70 15 view .LVU1546
 5642 01ce 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5643              		.loc 19 70 53 view .LVU1547
 5644 01d2 67EEA67A 		vmul.f32	s15, s15, s13
 5645              	.LBB1297:
 5646              	.LBB1296:
 5647              		.loc 20 76 31 view .LVU1548
 5648 01d6 B0EEC77A 		vabs.f32	s14, s14
 5649              	.LBE1296:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 206


 5650              	.LBE1297:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5651              		.loc 19 70 9 view .LVU1549
 5652 01da B4EEE77A 		vcmpe.f32	s14, s15
 5653 01de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5654 01e2 0DDD     		ble	.L343
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5655              		.loc 19 74 29 view .LVU1550
 5656 01e4 FCEEC07A 		vcvt.u32.f32	s15, s0
 5657              	.LBB1298:
 5658              	.LBB1299:
 5659              		.loc 18 72 9 view .LVU1551
 5660 01e8 384D     		ldr	r5, .L362+84
 5661              	.LBE1299:
 5662              	.LBE1298:
 5663              	.LBE1305:
 5664              	.LBE1307:
 875:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5665              		.loc 19 875 33 view .LVU1552
 5666 01ea 1968     		ldr	r1, [r3]
 5667              	.LBB1308:
 5668              	.LBB1306:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5669              		.loc 19 73 13 is_stmt 1 view .LVU1553
 5670              	.LBB1302:
 5671              	.LBB1300:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5672              		.loc 18 71 9 is_stmt 0 view .LVU1554
 5673 01ec 0020     		movs	r0, #0
 5674              	.LBE1300:
 5675              	.LBE1302:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5676              		.loc 19 73 27 view .LVU1555
 5677 01ee 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5678              		.loc 19 74 13 is_stmt 1 view .LVU1556
 5679              	.LVL360:
 5680              	.LBB1303:
 5681              	.LBI1298:
  69:delayline_reverse.h ****     {
 5682              		.loc 18 69 17 view .LVU1557
  69:delayline_reverse.h ****     {
 5683              		.loc 18 69 17 is_stmt 0 view .LVU1558
 5684              	.LBE1303:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5685              		.loc 19 74 29 view .LVU1559
 5686 01f2 17EE902A 		vmov	r2, s15	@ int
 5687              	.LBB1304:
 5688              	.LBB1301:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5689              		.loc 18 71 9 view .LVU1560
 5690 01f6 0860     		str	r0, [r1]	@ float
 5691              		.loc 18 72 9 view .LVU1561
 5692 01f8 AA42     		cmp	r2, r5
 5693 01fa 28BF     		it	cs
 5694 01fc 2A46     		movcs	r2, r5
 5695 01fe 0A61     		str	r2, [r1, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 207


 5696              	.LVL361:
 5697              	.L343:
 5698              		.loc 18 72 9 view .LVU1562
 5699              	.LBE1301:
 5700              	.LBE1304:
 5701              	.LBE1306:
 5702              	.LBE1308:
 876:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5703              		.loc 19 876 9 is_stmt 1 view .LVU1563
 5704              	.LBB1309:
 5705              	.LBI1309:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 5706              		.loc 19 68 10 view .LVU1564
 5707              	.LBB1310:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5708              		.loc 19 70 9 view .LVU1565
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5709              		.loc 19 70 28 is_stmt 0 view .LVU1566
 5710 0200 334B     		ldr	r3, .L362+88
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5711              		.loc 19 70 53 view .LVU1567
 5712 0202 DFED236A 		vldr.32	s13, .L362+24
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5713              		.loc 19 70 28 view .LVU1568
 5714 0206 D3ED017A 		vldr.32	s15, [r3, #4]
 5715              	.LVL362:
 5716              	.LBB1311:
 5717              	.LBI1311:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5718              		.loc 20 75 3 is_stmt 1 view .LVU1569
 5719              	.LBB1312:
 5720              		.loc 20 76 5 view .LVU1570
 5721              		.loc 20 76 5 is_stmt 0 view .LVU1571
 5722              	.LBE1312:
 5723              	.LBE1311:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5724              		.loc 19 70 15 view .LVU1572
 5725 020a 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5726              		.loc 19 70 53 view .LVU1573
 5727 020e 67EEA67A 		vmul.f32	s15, s15, s13
 5728              	.LBB1314:
 5729              	.LBB1313:
 5730              		.loc 20 76 31 view .LVU1574
 5731 0212 B0EEC77A 		vabs.f32	s14, s14
 5732              	.LBE1313:
 5733              	.LBE1314:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5734              		.loc 19 70 9 view .LVU1575
 5735 0216 B4EEE77A 		vcmpe.f32	s14, s15
 5736 021a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5737 021e 0DDD     		ble	.L345
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5738              		.loc 19 74 29 view .LVU1576
 5739 0220 FCEEC07A 		vcvt.u32.f32	s15, s0
 5740              	.LBB1315:
 5741              	.LBB1316:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 208


 5742              		.loc 18 72 9 view .LVU1577
 5743 0224 294D     		ldr	r5, .L362+84
 5744              	.LBE1316:
 5745              	.LBE1315:
 5746              	.LBE1310:
 5747              	.LBE1309:
 876:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5748              		.loc 19 876 33 view .LVU1578
 5749 0226 1968     		ldr	r1, [r3]
 5750              	.LBB1323:
 5751              	.LBB1322:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5752              		.loc 19 73 13 is_stmt 1 view .LVU1579
 5753              	.LBB1319:
 5754              	.LBB1317:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5755              		.loc 18 71 9 is_stmt 0 view .LVU1580
 5756 0228 0020     		movs	r0, #0
 5757              	.LBE1317:
 5758              	.LBE1319:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 5759              		.loc 19 73 27 view .LVU1581
 5760 022a 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5761              		.loc 19 74 13 is_stmt 1 view .LVU1582
 5762              	.LVL363:
 5763              	.LBB1320:
 5764              	.LBI1315:
  69:delayline_reverse.h ****     {
 5765              		.loc 18 69 17 view .LVU1583
  69:delayline_reverse.h ****     {
 5766              		.loc 18 69 17 is_stmt 0 view .LVU1584
 5767              	.LBE1320:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5768              		.loc 19 74 29 view .LVU1585
 5769 022e 17EE902A 		vmov	r2, s15	@ int
 5770              	.LBB1321:
 5771              	.LBB1318:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5772              		.loc 18 71 9 view .LVU1586
 5773 0232 0860     		str	r0, [r1]	@ float
 5774              		.loc 18 72 9 view .LVU1587
 5775 0234 AA42     		cmp	r2, r5
 5776 0236 28BF     		it	cs
 5777 0238 2A46     		movcs	r2, r5
 5778 023a 0A61     		str	r2, [r1, #16]
 5779              	.LVL364:
 5780              	.L345:
 5781              		.loc 18 72 9 view .LVU1588
 5782              	.LBE1318:
 5783              	.LBE1321:
 5784              	.LBE1322:
 5785              	.LBE1323:
 878:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 5786              		.loc 19 878 9 is_stmt 1 view .LVU1589
 878:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 5787              		.loc 19 878 31 is_stmt 0 view .LVU1590
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 209


 5788 023c 254B     		ldr	r3, .L362+92
 879:Veno-Echo.cpp ****         Rev_DelayTime_last = delayTimeL_Pot; //update last value
 5789              		.loc 19 879 28 view .LVU1591
 5790 023e 84ED008A 		vstr.32	s16, [r4]
 878:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 5791              		.loc 19 878 31 view .LVU1592
 5792 0242 83ED000A 		vstr.32	s0, [r3]
 879:Veno-Echo.cpp ****         Rev_DelayTime_last = delayTimeL_Pot; //update last value
 5793              		.loc 19 879 9 is_stmt 1 view .LVU1593
 5794              	.LBE1291:
 5795              	.LBE1324:
 5796              	.LBE1328:
 5797              	.LBE1337:
 883:Veno-Echo.cpp **** }
 5798              		.loc 19 883 1 is_stmt 0 view .LVU1594
 5799 0246 BDEC028B 		vldm	sp!, {d8}
 5800              		.cfi_remember_state
 5801              		.cfi_restore 80
 5802              		.cfi_restore 81
 5803              		.cfi_def_cfa_offset 16
 5804              	.LVL365:
 883:Veno-Echo.cpp **** }
 5805              		.loc 19 883 1 view .LVU1595
 5806 024a 38BD     		pop	{r3, r4, r5, pc}
 5807              	.LVL366:
 5808              	.L360:
 5809              		.cfi_restore_state
 5810              	.LBB1338:
 5811              	.LBB1329:
 841:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
 5812              		.loc 19 841 13 is_stmt 1 view .LVU1596
 841:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
 5813              		.loc 19 841 36 is_stmt 0 view .LVU1597
 5814 024c B7EE000A 		vmov.f32	s0, #1.0e+0
 5815              	.LVL367:
 841:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
 5816              		.loc 19 841 36 view .LVU1598
 5817 0250 0121     		movs	r1, #1
 5818 0252 1648     		ldr	r0, .L362+52
 5819 0254 30EE680A 		vsub.f32	s0, s0, s17
 5820              	.LBE1329:
 5821              	.LBE1338:
 883:Veno-Echo.cpp **** }
 5822              		.loc 19 883 1 view .LVU1599
 5823 0258 BDEC028B 		vldm	sp!, {d8}
 5824              		.cfi_remember_state
 5825              		.cfi_restore 80
 5826              		.cfi_restore 81
 5827              		.cfi_def_cfa_offset 16
 5828              	.LVL368:
 883:Veno-Echo.cpp **** }
 5829              		.loc 19 883 1 view .LVU1600
 5830 025c BDE83840 		pop	{r3, r4, r5, lr}
 5831              		.cfi_restore 14
 5832              		.cfi_restore 5
 5833              		.cfi_restore 4
 5834              		.cfi_restore 3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 210


 5835              		.cfi_def_cfa_offset 0
 5836              	.LBB1339:
 5837              	.LBB1330:
 841:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
 5838              		.loc 19 841 36 view .LVU1601
 5839 0260 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 5840              	.LVL369:
 5841              	.L347:
 5842              		.cfi_restore_state
 5843              	.LBB1273:
 5844              	.LBB1269:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5845              		.loc 19 1799 16 view .LVU1602
 5846 0264 DFED158A 		vldr.32	s17, .L362+68
 5847              	.LVL370:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5848              		.loc 19 1799 16 view .LVU1603
 5849 0268 50E7     		b	.L330
 5850              	.LVL371:
 5851              	.L357:
1799:Veno-Echo.cpp ****         output = 0.0f;
 5852              		.loc 19 1799 16 view .LVU1604
 5853              	.LBE1269:
 5854              	.LBE1273:
 5855              	.LBE1330:
 5856              	.LBB1331:
 5857              	.LBB1325:
 5858              	.LBB1282:
1855:Veno-Echo.cpp ****     return retval;
 5859              		.loc 19 1855 5 is_stmt 1 view .LVU1605
1855:Veno-Echo.cpp ****     return retval;
 5860              		.loc 19 1855 5 is_stmt 0 view .LVU1606
 5861              	.LBE1282:
 5862              	.LBE1325:
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime_pic
 5863              		.loc 19 864 30 view .LVU1607
 5864 026a 0222     		movs	r2, #2
 5865 026c 1A70     		strb	r2, [r3]
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 5866              		.loc 19 872 5 is_stmt 1 view .LVU1608
 5867 026e A0E7     		b	.L342
 5868              	.LVL372:
 5869              	.L359:
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 5870              		.loc 19 872 5 is_stmt 0 view .LVU1609
 5871              	.LBE1331:
 5872              	.LBB1332:
 5873              	.LBB1274:
 5874              	.LBB1254:
1855:Veno-Echo.cpp ****     return retval;
 5875              		.loc 19 1855 5 is_stmt 1 view .LVU1610
1855:Veno-Echo.cpp ****     return retval;
 5876              		.loc 19 1855 5 is_stmt 0 view .LVU1611
 5877              	.LBE1254:
 5878              	.LBE1274:
 817:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Pot_Last,delayTimeL_pick
 5879              		.loc 19 817 31 view .LVU1612
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 211


 5880 0270 0220     		movs	r0, #2
 5881 0272 0870     		strb	r0, [r1]
 824:Veno-Echo.cpp ****         float delayTimeL{};
 5882              		.loc 19 824 9 is_stmt 1 view .LVU1613
 5883              	.LVL373:
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup == PICKEDUP)
 5884              		.loc 19 826 5 view .LVU1614
 5885 0274 2DE7     		b	.L328
 5886              	.L363:
 5887 0276 00BF     		.align	2
 5888              	.L362:
 5889 0278 18000000 		.word	.LANCHOR4+24
 5890 027c 00000000 		.word	.LANCHOR69
 5891 0280 ABAAAA2A 		.word	715827883
 5892 0284 00000000 		.word	.LANCHOR8
 5893 0288 00000000 		.word	.LANCHOR70
 5894 028c 00000000 		.word	.LANCHOR71
 5895 0290 0AD7A33B 		.word	1000593162
 5896 0294 00000000 		.word	.LANCHOR72
 5897 0298 00000000 		.word	.LANCHOR5
 5898 029c 00000000 		.word	.LANCHOR57
 5899 02a0 00000000 		.word	.LANCHOR56
 5900 02a4 00000000 		.word	.LANCHOR58
 5901 02a8 00004042 		.word	1111490560
 5902 02ac 00000000 		.word	.LANCHOR0
 5903 02b0 00000000 		.word	.LANCHOR60
 5904 02b4 00000000 		.word	.LANCHOR73
 5905 02b8 00000000 		.word	.LANCHOR74
 5906 02bc 00000000 		.word	0
 5907 02c0 0050C346 		.word	1187205120
 5908 02c4 00606A48 		.word	1214930944
 5909 02c8 00000000 		.word	.LANCHOR2
 5910 02cc BF270900 		.word	599999
 5911 02d0 00000000 		.word	.LANCHOR3
 5912 02d4 00000000 		.word	.LANCHOR19
 5913              	.LBE1332:
 5914              	.LBE1339:
 5915              		.cfi_endproc
 5916              	.LFE4292:
 5918              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 5919              		.align	1
 5920              		.p2align 2,,3
 5921              		.global	_Z11GetTapRatio9TapRatios
 5922              		.syntax unified
 5923              		.thumb
 5924              		.thumb_func
 5925              		.fpu fpv5-d16
 5927              	_Z11GetTapRatio9TapRatios:
 5928              	.LVL374:
 5929              	.LFB4311:
1607:Veno-Echo.cpp **** {
 5930              		.loc 19 1607 1 view -0
 5931              		.cfi_startproc
 5932              		@ args = 0, pretend = 0, frame = 0
 5933              		@ frame_needed = 0, uses_anonymous_args = 0
 5934              		@ link register save eliminated.
1608:Veno-Echo.cpp ****     float retVal{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 212


 5935              		.loc 19 1608 5 view .LVU1616
1609:Veno-Echo.cpp ****     switch(ratio)
 5936              		.loc 19 1609 5 view .LVU1617
 5937 0000 0138     		subs	r0, r0, #1
 5938              	.LVL375:
1609:Veno-Echo.cpp ****     switch(ratio)
 5939              		.loc 19 1609 5 is_stmt 0 view .LVU1618
 5940 0002 C0B2     		uxtb	r0, r0
 5941 0004 0228     		cmp	r0, #2
 5942 0006 05D8     		bhi	.L366
 5943 0008 044B     		ldr	r3, .L367
 5944 000a 03EB8000 		add	r0, r3, r0, lsl #2
 5945 000e 90ED000A 		vldr.32	s0, [r0]
 5946 0012 7047     		bx	lr
 5947              	.L366:
1607:Veno-Echo.cpp **** {
 5948              		.loc 19 1607 1 view .LVU1619
 5949 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 5950              	.LVL376:
1632:Veno-Echo.cpp **** return retVal;
 5951              		.loc 19 1632 1 is_stmt 1 view .LVU1620
1633:Veno-Echo.cpp **** }
 5952              		.loc 19 1633 1 is_stmt 0 view .LVU1621
 5953 0018 7047     		bx	lr
 5954              	.L368:
 5955 001a 00BF     		.align	2
 5956              	.L367:
 5957 001c 00000000 		.word	.LANCHOR68
 5958              		.cfi_endproc
 5959              	.LFE4311:
 5961              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5962              		.align	1
 5963              		.p2align 2,,3
 5964              		.global	_Z13ApplySettingsRK8Settings
 5965              		.syntax unified
 5966              		.thumb
 5967              		.thumb_func
 5968              		.fpu fpv5-d16
 5970              	_Z13ApplySettingsRK8Settings:
 5971              	.LVL377:
 5972              	.LFB4312:
1636:Veno-Echo.cpp **** {
 5973              		.loc 19 1636 1 is_stmt 1 view -0
 5974              		.cfi_startproc
 5975              		@ args = 0, pretend = 0, frame = 0
 5976              		@ frame_needed = 0, uses_anonymous_args = 0
1637:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5977              		.loc 19 1637 5 view .LVU1623
 5978 0000 9FEDCF7A 		vldr.32	s14, .L437
1637:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5979              		.loc 19 1637 17 is_stmt 0 view .LVU1624
 5980 0004 D0ED007A 		vldr.32	s15, [r0]
1637:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5981              		.loc 19 1637 5 view .LVU1625
 5982 0008 F4EEC77A 		vcmpe.f32	s15, s14
1636:Veno-Echo.cpp **** {
 5983              		.loc 19 1636 1 view .LVU1626
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 213


 5984 000c 38B5     		push	{r3, r4, r5, lr}
 5985              		.cfi_def_cfa_offset 16
 5986              		.cfi_offset 3, -16
 5987              		.cfi_offset 4, -12
 5988              		.cfi_offset 5, -8
 5989              		.cfi_offset 14, -4
1637:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5990              		.loc 19 1637 5 view .LVU1627
 5991 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1636:Veno-Echo.cpp **** {
 5992              		.loc 19 1636 1 view .LVU1628
 5993 0012 0446     		mov	r4, r0
 5994              	.LBB1340:
 5995              	.LBB1341:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 5996              		.loc 19 70 28 view .LVU1629
 5997 0014 CB4B     		ldr	r3, .L437+4
 5998              	.LBE1341:
 5999              	.LBE1340:
1637:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 6000              		.loc 19 1637 5 view .LVU1630
 6001 0016 C0F2FD80 		blt	.L370
1637:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 6002              		.loc 19 1637 43 discriminator 1 view .LVU1631
 6003 001a 9FEDCB7A 		vldr.32	s14, .L437+8
 6004 001e F4EEC77A 		vcmpe.f32	s15, s14
 6005 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6006 0026 00F2F580 		bhi	.L370
1639:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
 6007              		.loc 19 1639 9 is_stmt 1 view .LVU1632
 6008              	.LVL378:
 6009              	.LBB1355:
 6010              	.LBI1340:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 6011              		.loc 19 68 10 view .LVU1633
 6012              	.LBB1353:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6013              		.loc 19 70 9 view .LVU1634
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6014              		.loc 19 70 28 is_stmt 0 view .LVU1635
 6015 002a 93ED017A 		vldr.32	s14, [r3, #4]
 6016              	.LVL379:
 6017              	.LBB1342:
 6018              	.LBI1342:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6019              		.loc 20 75 3 is_stmt 1 view .LVU1636
 6020              	.LBB1343:
 6021              		.loc 20 76 5 view .LVU1637
 6022              		.loc 20 76 5 is_stmt 0 view .LVU1638
 6023              	.LBE1343:
 6024              	.LBE1342:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6025              		.loc 19 70 53 view .LVU1639
 6026 002e 9FEDC76A 		vldr.32	s12, .L437+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6027              		.loc 19 70 15 view .LVU1640
 6028 0032 77EEC76A 		vsub.f32	s13, s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 214


  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6029              		.loc 19 70 53 view .LVU1641
 6030 0036 27EE067A 		vmul.f32	s14, s14, s12
 6031              	.LBB1345:
 6032              	.LBB1344:
 6033              		.loc 20 76 31 view .LVU1642
 6034 003a F0EEE66A 		vabs.f32	s13, s13
 6035              	.LBE1344:
 6036              	.LBE1345:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6037              		.loc 19 70 9 view .LVU1643
 6038 003e F4EEC76A 		vcmpe.f32	s13, s14
 6039 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6040 0046 0FDD     		ble	.L373
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6041              		.loc 19 74 29 view .LVU1644
 6042 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 6043              	.LBB1346:
 6044              	.LBB1347:
 6045              		.loc 18 72 9 view .LVU1645
 6046 004c C04D     		ldr	r5, .L437+16
 6047              	.LBE1347:
 6048              	.LBE1346:
 6049              	.LBE1353:
 6050              	.LBE1355:
1639:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
 6051              		.loc 19 1639 33 view .LVU1646
 6052 004e 1968     		ldr	r1, [r3]
 6053              	.LBB1356:
 6054              	.LBB1354:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6055              		.loc 19 73 13 is_stmt 1 view .LVU1647
 6056              	.LBB1350:
 6057              	.LBB1348:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6058              		.loc 18 71 9 is_stmt 0 view .LVU1648
 6059 0050 0020     		movs	r0, #0
 6060              	.LVL380:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6061              		.loc 18 71 9 view .LVU1649
 6062              	.LBE1348:
 6063              	.LBE1350:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6064              		.loc 19 73 27 view .LVU1650
 6065 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6066              		.loc 19 74 13 is_stmt 1 view .LVU1651
 6067              	.LVL381:
 6068              	.LBB1351:
 6069              	.LBI1346:
  69:delayline_reverse.h ****     {
 6070              		.loc 18 69 17 view .LVU1652
  69:delayline_reverse.h ****     {
 6071              		.loc 18 69 17 is_stmt 0 view .LVU1653
 6072              	.LBE1351:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6073              		.loc 19 74 29 view .LVU1654
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 215


 6074 0056 17EE102A 		vmov	r2, s14	@ int
 6075              	.LBB1352:
 6076              	.LBB1349:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6077              		.loc 18 71 9 view .LVU1655
 6078 005a 0860     		str	r0, [r1]	@ float
 6079 005c D4ED007A 		vldr.32	s15, [r4]
 6080              	.LVL382:
 6081              		.loc 18 72 9 view .LVU1656
 6082 0060 AA42     		cmp	r2, r5
 6083 0062 28BF     		it	cs
 6084 0064 2A46     		movcs	r2, r5
 6085 0066 0A61     		str	r2, [r1, #16]
 6086              	.LVL383:
 6087              	.L373:
 6088              		.loc 18 72 9 view .LVU1657
 6089              	.LBE1349:
 6090              	.LBE1352:
 6091              	.LBE1354:
 6092              	.LBE1356:
1640:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 6093              		.loc 19 1640 9 is_stmt 1 view .LVU1658
 6094              	.LBB1357:
 6095              	.LBI1357:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 6096              		.loc 19 68 10 view .LVU1659
 6097              	.LBB1358:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6098              		.loc 19 70 9 view .LVU1660
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6099              		.loc 19 70 28 is_stmt 0 view .LVU1661
 6100 0068 BA4B     		ldr	r3, .L437+20
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6101              		.loc 19 70 53 view .LVU1662
 6102 006a 9FEDB86A 		vldr.32	s12, .L437+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6103              		.loc 19 70 28 view .LVU1663
 6104 006e 93ED017A 		vldr.32	s14, [r3, #4]
 6105              	.LVL384:
 6106              	.LBB1359:
 6107              	.LBI1359:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6108              		.loc 20 75 3 is_stmt 1 view .LVU1664
 6109              	.LBB1360:
 6110              		.loc 20 76 5 view .LVU1665
 6111              		.loc 20 76 5 is_stmt 0 view .LVU1666
 6112              	.LBE1360:
 6113              	.LBE1359:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6114              		.loc 19 70 15 view .LVU1667
 6115 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6116              		.loc 19 70 53 view .LVU1668
 6117 0076 27EE067A 		vmul.f32	s14, s14, s12
 6118              	.LBB1362:
 6119              	.LBB1361:
 6120              		.loc 20 76 31 view .LVU1669
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 216


 6121 007a F0EEE66A 		vabs.f32	s13, s13
 6122              	.LBE1361:
 6123              	.LBE1362:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6124              		.loc 19 70 9 view .LVU1670
 6125 007e F4EEC76A 		vcmpe.f32	s13, s14
 6126 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6127 0086 00F34B81 		bgt	.L433
 6128              	.LVL385:
 6129              	.L376:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6130              		.loc 19 70 9 view .LVU1671
 6131              	.LBE1358:
 6132              	.LBE1357:
1648:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 6133              		.loc 19 1648 5 is_stmt 1 view .LVU1672
 6134 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1648:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 6135              		.loc 19 1648 17 is_stmt 0 view .LVU1673
 6136 008e 94ED010A 		vldr.32	s0, [r4, #4]
1648:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 6137              		.loc 19 1648 5 view .LVU1674
 6138 0092 B4EEE70A 		vcmpe.f32	s0, s15
 6139 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6140 009a 06DB     		blt	.L381
1648:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
 6141              		.loc 19 1648 35 discriminator 1 view .LVU1675
 6142 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 6143 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 6144 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6145 00a8 01D9     		bls	.L431
 6146              	.L381:
1654:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
 6147              		.loc 19 1654 9 is_stmt 1 view .LVU1676
1654:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
 6148              		.loc 19 1654 30 is_stmt 0 view .LVU1677
 6149 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 6150              	.L431:
 6151 00ae AA48     		ldr	r0, .L437+24
 6152 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 6153              	.LVL386:
1657:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
 6154              		.loc 19 1657 5 is_stmt 1 view .LVU1678
1657:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
 6155              		.loc 19 1657 17 is_stmt 0 view .LVU1679
 6156 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1657:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
 6157              		.loc 19 1657 5 view .LVU1680
 6158 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 6159 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6160 00c0 C0F22B81 		blt	.L428
1657:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
 6161              		.loc 19 1657 42 discriminator 1 view .LVU1681
 6162 00c4 DFEDA56A 		vldr.32	s13, .L437+28
1663:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
 6163              		.loc 19 1663 18 discriminator 1 view .LVU1682
 6164 00c8 9FEDA57A 		vldr.32	s14, .L437+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 217


 6165 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6166 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6167 00d4 88BF     		it	hi
 6168 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6169              	.L385:
1666:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 6170              		.loc 19 1666 17 view .LVU1683
 6171 00da 94ED030A 		vldr.32	s0, [r4, #12]
1666:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 6172              		.loc 19 1666 5 view .LVU1684
 6173 00de 9FEDA17A 		vldr.32	s14, .L437+36
 6174 00e2 A14B     		ldr	r3, .L437+40
 6175 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6176              	.LBB1373:
 6177              	.LBB1374:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6178              		.loc 8 60 20 view .LVU1685
 6179 00e8 A04D     		ldr	r5, .L437+44
 6180 00ea C3ED007A 		vstr.32	s15, [r3]
 6181              	.LBE1374:
 6182              	.LBE1373:
1666:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 6183              		.loc 19 1666 5 is_stmt 1 view .LVU1686
 6184 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6185 00f2 06DB     		blt	.L388
1666:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
 6186              		.loc 19 1666 40 is_stmt 0 discriminator 1 view .LVU1687
 6187 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6188 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6189 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6190 0100 01D9     		bls	.L432
 6191              	.L388:
1672:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
 6192              		.loc 19 1672 9 is_stmt 1 view .LVU1688
 6193              	.LVL387:
 6194              	.LBB1375:
 6195              	.LBI1375:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6196              		.loc 8 58 17 view .LVU1689
 6197              	.LBB1376:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6198              		.loc 8 60 9 view .LVU1690
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6199              		.loc 8 60 20 is_stmt 0 view .LVU1691
 6200 0102 9FED9B0A 		vldr.32	s0, .L437+48
 6201              	.LVL388:
 6202              	.L432:
 6203              		.loc 8 61 34 view .LVU1692
 6204 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6205              		.loc 8 60 20 view .LVU1693
 6206 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6207              		.loc 8 61 9 is_stmt 1 view .LVU1694
 6208              		.loc 8 61 34 is_stmt 0 view .LVU1695
 6209 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6210              	.LVL389:
 6211              	.LBE1376:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 218


 6212              	.LBE1375:
1675:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 6213              		.loc 19 1675 5 view .LVU1696
 6214 0110 DFED987A 		vldr.32	s15, .L437+52
 6215              	.LBB1378:
 6216              	.LBB1377:
 6217              		.loc 8 61 20 view .LVU1697
 6218 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6219              	.LBE1377:
 6220              	.LBE1378:
1675:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 6221              		.loc 19 1675 5 is_stmt 1 view .LVU1698
1675:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 6222              		.loc 19 1675 17 is_stmt 0 view .LVU1699
 6223 0118 94ED050A 		vldr.32	s0, [r4, #20]
1675:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 6224              		.loc 19 1675 5 view .LVU1700
 6225 011c B4EEE70A 		vcmpe.f32	s0, s15
 6226 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6227 0124 07DB     		blt	.L392
1675:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
 6228              		.loc 19 1675 40 discriminator 1 view .LVU1701
 6229 0126 DFED947A 		vldr.32	s15, .L437+56
 6230 012a B4EEE70A 		vcmpe.f32	s0, s15
 6231 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6232 0132 40F2DF80 		bls	.L434
 6233              	.L392:
1684:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
 6234              		.loc 19 1684 9 is_stmt 1 view .LVU1702
1684:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
 6235              		.loc 19 1684 22 is_stmt 0 view .LVU1703
 6236 0136 9FED900A 		vldr.32	s0, .L437+56
 6237 013a 9048     		ldr	r0, .L437+60
 6238 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6239              	.LVL390:
1685:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6240              		.loc 19 1685 9 is_stmt 1 view .LVU1704
1685:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6241              		.loc 19 1685 22 is_stmt 0 view .LVU1705
 6242 0140 9FED8D0A 		vldr.32	s0, .L437+56
 6243 0144 8E48     		ldr	r0, .L437+64
 6244 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6245              	.LVL391:
1686:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6246              		.loc 19 1686 9 is_stmt 1 view .LVU1706
1686:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6247              		.loc 19 1686 27 is_stmt 0 view .LVU1707
 6248 014a 9FED8B0A 		vldr.32	s0, .L437+56
 6249 014e 8D48     		ldr	r0, .L437+68
 6250 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6251              	.LVL392:
1687:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6252              		.loc 19 1687 9 is_stmt 1 view .LVU1708
1687:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6253              		.loc 19 1687 27 is_stmt 0 view .LVU1709
 6254 0154 9FED880A 		vldr.32	s0, .L437+56
 6255 0158 8B48     		ldr	r0, .L437+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 219


 6256 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6257              	.LVL393:
 6258              	.L395:
1690:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 6259              		.loc 19 1690 5 is_stmt 1 view .LVU1710
1690:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 6260              		.loc 19 1690 17 is_stmt 0 view .LVU1711
 6261 015e 94ED040A 		vldr.32	s0, [r4, #16]
1690:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 6262              		.loc 19 1690 5 view .LVU1712
 6263 0162 DFED8A7A 		vldr.32	s15, .L437+76
 6264 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6265 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6266 016e 07DB     		blt	.L396
1690:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
 6267              		.loc 19 1690 40 discriminator 1 view .LVU1713
 6268 0170 DFED877A 		vldr.32	s15, .L437+80
 6269 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6270 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6271 017c 40F2A780 		bls	.L435
 6272              	.L396:
1699:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
 6273              		.loc 19 1699 9 is_stmt 1 view .LVU1714
1699:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
 6274              		.loc 19 1699 22 is_stmt 0 view .LVU1715
 6275 0180 9FED840A 		vldr.32	s0, .L437+84
 6276 0184 8448     		ldr	r0, .L437+88
 6277 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6278              	.LVL394:
1700:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6279              		.loc 19 1700 9 is_stmt 1 view .LVU1716
1700:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6280              		.loc 19 1700 22 is_stmt 0 view .LVU1717
 6281 018a 9FED820A 		vldr.32	s0, .L437+84
 6282 018e 8348     		ldr	r0, .L437+92
 6283 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6284              	.LVL395:
1701:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6285              		.loc 19 1701 9 is_stmt 1 view .LVU1718
1701:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6286              		.loc 19 1701 27 is_stmt 0 view .LVU1719
 6287 0194 9FED7F0A 		vldr.32	s0, .L437+84
 6288 0198 8148     		ldr	r0, .L437+96
 6289 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6290              	.LVL396:
1702:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6291              		.loc 19 1702 9 is_stmt 1 view .LVU1720
1702:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6292              		.loc 19 1702 27 is_stmt 0 view .LVU1721
 6293 019e 9FED7D0A 		vldr.32	s0, .L437+84
 6294 01a2 8048     		ldr	r0, .L437+100
 6295 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6296              	.LVL397:
 6297              	.L399:
1706:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
 6298              		.loc 19 1706 5 is_stmt 1 view .LVU1722
1706:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 220


 6299              		.loc 19 1706 17 is_stmt 0 view .LVU1723
 6300 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1706:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
 6301              		.loc 19 1706 5 view .LVU1724
 6302 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6303 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6304 01b4 06DB     		blt	.L400
1706:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
 6305              		.loc 19 1706 38 discriminator 1 view .LVU1725
 6306 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6307 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6308 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6309 01c2 5DD9     		bls	.L436
 6310              	.L400:
1720:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
 6311              		.loc 19 1720 9 is_stmt 1 view .LVU1726
1720:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
 6312              		.loc 19 1720 26 is_stmt 0 view .LVU1727
 6313 01c4 9FED660A 		vldr.32	s0, .L437+32
 6314 01c8 6E48     		ldr	r0, .L437+68
 6315 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6316              	.LVL398:
1721:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6317              		.loc 19 1721 9 is_stmt 1 view .LVU1728
1721:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6318              		.loc 19 1721 26 is_stmt 0 view .LVU1729
 6319 01ce 9FED640A 		vldr.32	s0, .L437+32
 6320 01d2 7348     		ldr	r0, .L437+96
 6321 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6322              	.LVL399:
1722:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6323              		.loc 19 1722 9 is_stmt 1 view .LVU1730
1722:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6324              		.loc 19 1722 26 is_stmt 0 view .LVU1731
 6325 01d8 9FED610A 		vldr.32	s0, .L437+32
 6326 01dc 6A48     		ldr	r0, .L437+72
 6327 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6328              	.LVL400:
1723:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6329              		.loc 19 1723 9 is_stmt 1 view .LVU1732
1723:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6330              		.loc 19 1723 26 is_stmt 0 view .LVU1733
 6331 01e2 9FED5F0A 		vldr.32	s0, .L437+32
 6332 01e6 6F48     		ldr	r0, .L437+100
 6333 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6334              	.LVL401:
 6335              	.L403:
1726:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 6336              		.loc 19 1726 5 is_stmt 1 view .LVU1734
1726:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 6337              		.loc 19 1726 16 is_stmt 0 view .LVU1735
 6338 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1726:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 6339              		.loc 19 1726 5 view .LVU1736
 6340 01f0 9FED6D7A 		vldr.32	s14, .L437+104
1732:Veno-Echo.cpp ****         PostFilters = true;
 6341              		.loc 19 1732 21 view .LVU1737
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 221


 6342 01f4 6D4B     		ldr	r3, .L437+108
1726:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
 6343              		.loc 19 1726 5 view .LVU1738
 6344 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 6345 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6346 01fe 3CD4     		bmi	.L407
1730:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
 6347              		.loc 19 1730 14 is_stmt 1 view .LVU1739
 6348 0200 9FED6B7A 		vldr.32	s14, .L437+112
 6349 0204 F4EEC77A 		vcmpe.f32	s15, s14
 6350 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6351 020c 35DD     		ble	.L407
1732:Veno-Echo.cpp ****         PostFilters = true;
 6352              		.loc 19 1732 9 view .LVU1740
1732:Veno-Echo.cpp ****         PostFilters = true;
 6353              		.loc 19 1732 21 is_stmt 0 view .LVU1741
 6354 020e 0122     		movs	r2, #1
 6355 0210 1A70     		strb	r2, [r3]
1739:Veno-Echo.cpp **** }
 6356              		.loc 19 1739 1 view .LVU1742
 6357 0212 38BD     		pop	{r3, r4, r5, pc}
 6358              	.LVL402:
 6359              	.L370:
1644:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
 6360              		.loc 19 1644 9 is_stmt 1 view .LVU1743
 6361              	.LBB1379:
 6362              	.LBI1379:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 6363              		.loc 19 68 10 view .LVU1744
 6364              	.LBB1380:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6365              		.loc 19 70 9 view .LVU1745
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6366              		.loc 19 70 28 is_stmt 0 view .LVU1746
 6367 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 6368              	.LVL403:
 6369              	.LBB1381:
 6370              	.LBI1381:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6371              		.loc 20 75 3 is_stmt 1 view .LVU1747
 6372              	.LBB1382:
 6373              		.loc 20 76 5 view .LVU1748
 6374              		.loc 20 76 5 is_stmt 0 view .LVU1749
 6375              	.LBE1382:
 6376              	.LBE1381:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6377              		.loc 19 70 15 view .LVU1750
 6378 0218 DFED666A 		vldr.32	s13, .L437+116
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6379              		.loc 19 70 53 view .LVU1751
 6380 021c 9FED4B6A 		vldr.32	s12, .L437+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6381              		.loc 19 70 15 view .LVU1752
 6382 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6383              		.loc 19 70 53 view .LVU1753
 6384 0224 67EE867A 		vmul.f32	s15, s15, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 222


 6385              	.LBB1384:
 6386              	.LBB1383:
 6387              		.loc 20 76 31 view .LVU1754
 6388 0228 B0EEC77A 		vabs.f32	s14, s14
 6389              	.LBE1383:
 6390              	.LBE1384:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6391              		.loc 19 70 9 view .LVU1755
 6392 022c B4EEE77A 		vcmpe.f32	s14, s15
 6393 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6394 0234 06DD     		ble	.L377
 6395              	.LBE1380:
 6396              	.LBE1379:
1644:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
 6397              		.loc 19 1644 33 view .LVU1756
 6398 0236 1A68     		ldr	r2, [r3]
 6399              	.LBB1390:
 6400              	.LBB1389:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6401              		.loc 19 73 13 is_stmt 1 view .LVU1757
 6402              	.LBB1385:
 6403              	.LBB1386:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6404              		.loc 18 71 9 is_stmt 0 view .LVU1758
 6405 0238 0021     		movs	r1, #0
 6406              		.loc 18 72 9 view .LVU1759
 6407 023a 5F48     		ldr	r0, .L437+120
 6408              	.LVL404:
 6409              		.loc 18 72 9 view .LVU1760
 6410              	.LBE1386:
 6411              	.LBE1385:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6412              		.loc 19 73 27 view .LVU1761
 6413 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6414              		.loc 19 74 13 is_stmt 1 view .LVU1762
 6415              	.LVL405:
 6416              	.LBB1388:
 6417              	.LBI1385:
  69:delayline_reverse.h ****     {
 6418              		.loc 18 69 17 view .LVU1763
 6419              	.LBB1387:
 6420              		.loc 18 72 9 is_stmt 0 view .LVU1764
 6421 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6422              		.loc 18 71 9 view .LVU1765
 6423 0242 1160     		str	r1, [r2]	@ float
 6424              	.LVL406:
 6425              	.L377:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6426              		.loc 18 71 9 view .LVU1766
 6427              	.LBE1387:
 6428              	.LBE1388:
 6429              	.LBE1389:
 6430              	.LBE1390:
1645:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6431              		.loc 19 1645 9 is_stmt 1 view .LVU1767
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 223


 6432              	.LBB1391:
 6433              	.LBI1391:
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
 6434              		.loc 19 68 10 view .LVU1768
 6435              	.LBB1392:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6436              		.loc 19 70 9 view .LVU1769
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6437              		.loc 19 70 28 is_stmt 0 view .LVU1770
 6438 0244 434B     		ldr	r3, .L437+20
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6439              		.loc 19 70 15 view .LVU1771
 6440 0246 DFED5B6A 		vldr.32	s13, .L437+116
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6441              		.loc 19 70 28 view .LVU1772
 6442 024a D3ED017A 		vldr.32	s15, [r3, #4]
 6443              	.LVL407:
 6444              	.LBB1393:
 6445              	.LBI1393:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6446              		.loc 20 75 3 is_stmt 1 view .LVU1773
 6447              	.LBB1394:
 6448              		.loc 20 76 5 view .LVU1774
 6449              		.loc 20 76 5 is_stmt 0 view .LVU1775
 6450              	.LBE1394:
 6451              	.LBE1393:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6452              		.loc 19 70 53 view .LVU1776
 6453 024e 9FED3F6A 		vldr.32	s12, .L437+12
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6454              		.loc 19 70 15 view .LVU1777
 6455 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6456              		.loc 19 70 53 view .LVU1778
 6457 0256 67EE867A 		vmul.f32	s15, s15, s12
 6458              	.LBB1396:
 6459              	.LBB1395:
 6460              		.loc 20 76 31 view .LVU1779
 6461 025a B0EEC77A 		vabs.f32	s14, s14
 6462              	.LBE1395:
 6463              	.LBE1396:
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
 6464              		.loc 19 70 9 view .LVU1780
 6465 025e B4EEE77A 		vcmpe.f32	s14, s15
 6466 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6467 0266 7FF710AF 		ble	.L376
 6468              	.LBE1392:
 6469              	.LBE1391:
1645:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6470              		.loc 19 1645 33 view .LVU1781
 6471 026a 1A68     		ldr	r2, [r3]
 6472              	.LBB1402:
 6473              	.LBB1401:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6474              		.loc 19 73 13 is_stmt 1 view .LVU1782
 6475              	.LBB1397:
 6476              	.LBB1398:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 224


  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6477              		.loc 18 71 9 is_stmt 0 view .LVU1783
 6478 026c 0021     		movs	r1, #0
 6479              		.loc 18 72 9 view .LVU1784
 6480 026e 5248     		ldr	r0, .L437+120
 6481              	.LBE1398:
 6482              	.LBE1397:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6483              		.loc 19 73 27 view .LVU1785
 6484 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6485              		.loc 19 74 13 is_stmt 1 view .LVU1786
 6486              	.LVL408:
 6487              	.LBB1400:
 6488              	.LBI1397:
  69:delayline_reverse.h ****     {
 6489              		.loc 18 69 17 view .LVU1787
 6490              	.LBB1399:
 6491              		.loc 18 72 9 is_stmt 0 view .LVU1788
 6492 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6493              		.loc 18 71 9 view .LVU1789
 6494 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6495              		.loc 18 73 5 view .LVU1790
 6496 0278 07E7     		b	.L376
 6497              	.LVL409:
 6498              	.L407:
 6499              		.loc 18 73 5 view .LVU1791
 6500              	.LBE1399:
 6501              	.LBE1400:
 6502              	.LBE1401:
 6503              	.LBE1402:
1728:Veno-Echo.cpp ****         PostFilters = false;
 6504              		.loc 19 1728 9 is_stmt 1 view .LVU1792
1728:Veno-Echo.cpp ****         PostFilters = false;
 6505              		.loc 19 1728 21 is_stmt 0 view .LVU1793
 6506 027a 0022     		movs	r2, #0
 6507 027c 1A70     		strb	r2, [r3]
1739:Veno-Echo.cpp **** }
 6508              		.loc 19 1739 1 view .LVU1794
 6509 027e 38BD     		pop	{r3, r4, r5, pc}
 6510              	.LVL410:
 6511              	.L436:
1708:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
 6512              		.loc 19 1708 9 is_stmt 1 view .LVU1795
1708:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
 6513              		.loc 19 1708 21 is_stmt 0 view .LVU1796
 6514 0280 3E48     		ldr	r0, .L437+60
 6515 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6516              	.LVL411:
1709:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6517              		.loc 19 1709 9 is_stmt 1 view .LVU1797
1709:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6518              		.loc 19 1709 21 is_stmt 0 view .LVU1798
 6519 0286 94ED060A 		vldr.32	s0, [r4, #24]
 6520 028a 4348     		ldr	r0, .L437+88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 225


 6521 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6522              	.LVL412:
1710:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6523              		.loc 19 1710 9 is_stmt 1 view .LVU1799
1710:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6524              		.loc 19 1710 21 is_stmt 0 view .LVU1800
 6525 0290 94ED060A 		vldr.32	s0, [r4, #24]
 6526 0294 3A48     		ldr	r0, .L437+64
 6527 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6528              	.LVL413:
1711:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6529              		.loc 19 1711 9 is_stmt 1 view .LVU1801
1711:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6530              		.loc 19 1711 21 is_stmt 0 view .LVU1802
 6531 029a 94ED060A 		vldr.32	s0, [r4, #24]
 6532 029e 3F48     		ldr	r0, .L437+92
 6533 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6534              	.LVL414:
1712:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6535              		.loc 19 1712 9 is_stmt 1 view .LVU1803
1712:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6536              		.loc 19 1712 26 is_stmt 0 view .LVU1804
 6537 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 6538 02a8 3648     		ldr	r0, .L437+68
 6539 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6540              	.LVL415:
1713:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6541              		.loc 19 1713 9 is_stmt 1 view .LVU1805
1713:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6542              		.loc 19 1713 26 is_stmt 0 view .LVU1806
 6543 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 6544 02b2 3B48     		ldr	r0, .L437+96
 6545 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6546              	.LVL416:
1714:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6547              		.loc 19 1714 9 is_stmt 1 view .LVU1807
1714:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6548              		.loc 19 1714 26 is_stmt 0 view .LVU1808
 6549 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 6550 02bc 3248     		ldr	r0, .L437+72
 6551 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6552              	.LVL417:
1715:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6553              		.loc 19 1715 9 is_stmt 1 view .LVU1809
1715:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6554              		.loc 19 1715 26 is_stmt 0 view .LVU1810
 6555 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 6556 02c6 3748     		ldr	r0, .L437+100
 6557 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6558              	.LVL418:
 6559 02cc 8EE7     		b	.L403
 6560              	.L435:
1692:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
 6561              		.loc 19 1692 9 is_stmt 1 view .LVU1811
1692:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
 6562              		.loc 19 1692 22 is_stmt 0 view .LVU1812
 6563 02ce 3248     		ldr	r0, .L437+88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 226


 6564 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6565              	.LVL419:
1693:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6566              		.loc 19 1693 9 is_stmt 1 view .LVU1813
1693:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6567              		.loc 19 1693 22 is_stmt 0 view .LVU1814
 6568 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 6569 02d8 3048     		ldr	r0, .L437+92
 6570 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6571              	.LVL420:
1694:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6572              		.loc 19 1694 9 is_stmt 1 view .LVU1815
1694:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6573              		.loc 19 1694 27 is_stmt 0 view .LVU1816
 6574 02de 94ED040A 		vldr.32	s0, [r4, #16]
 6575 02e2 2F48     		ldr	r0, .L437+96
 6576 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6577              	.LVL421:
1695:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6578              		.loc 19 1695 9 is_stmt 1 view .LVU1817
1695:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6579              		.loc 19 1695 27 is_stmt 0 view .LVU1818
 6580 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 6581 02ec 2D48     		ldr	r0, .L437+100
 6582 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6583              	.LVL422:
 6584 02f2 59E7     		b	.L399
 6585              	.L434:
1677:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
 6586              		.loc 19 1677 9 is_stmt 1 view .LVU1819
1677:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
 6587              		.loc 19 1677 22 is_stmt 0 view .LVU1820
 6588 02f4 2148     		ldr	r0, .L437+60
 6589 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6590              	.LVL423:
1678:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6591              		.loc 19 1678 9 is_stmt 1 view .LVU1821
1678:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6592              		.loc 19 1678 22 is_stmt 0 view .LVU1822
 6593 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 6594 02fe 2048     		ldr	r0, .L437+64
 6595 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6596              	.LVL424:
1679:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6597              		.loc 19 1679 9 is_stmt 1 view .LVU1823
1679:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6598              		.loc 19 1679 27 is_stmt 0 view .LVU1824
 6599 0304 94ED050A 		vldr.32	s0, [r4, #20]
 6600 0308 1E48     		ldr	r0, .L437+68
 6601 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6602              	.LVL425:
1680:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6603              		.loc 19 1680 9 is_stmt 1 view .LVU1825
1680:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6604              		.loc 19 1680 27 is_stmt 0 view .LVU1826
 6605 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6606 0312 1D48     		ldr	r0, .L437+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 227


 6607 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6608              	.LVL426:
 6609 0318 21E7     		b	.L395
 6610              	.L428:
1663:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
 6611              		.loc 19 1663 18 view .LVU1827
 6612 031a DFED117A 		vldr.32	s15, .L437+32
 6613 031e DCE6     		b	.L385
 6614              	.LVL427:
 6615              	.L433:
 6616              	.LBB1403:
 6617              	.LBB1371:
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6618              		.loc 19 74 29 view .LVU1828
 6619 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6620              	.LBB1363:
 6621              	.LBB1364:
  72:delayline_reverse.h ****     }
 6622              		.loc 18 72 9 view .LVU1829
 6623 0324 0A4D     		ldr	r5, .L437+16
 6624              	.LBE1364:
 6625              	.LBE1363:
 6626              	.LBE1371:
 6627              	.LBE1403:
1640:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 6628              		.loc 19 1640 33 view .LVU1830
 6629 0326 1968     		ldr	r1, [r3]
 6630              	.LBB1404:
 6631              	.LBB1372:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6632              		.loc 19 73 13 is_stmt 1 view .LVU1831
 6633              	.LBB1368:
 6634              	.LBB1365:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6635              		.loc 18 71 9 is_stmt 0 view .LVU1832
 6636 0328 0020     		movs	r0, #0
 6637              	.LBE1365:
 6638              	.LBE1368:
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
 6639              		.loc 19 73 27 view .LVU1833
 6640 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6641              		.loc 19 74 29 view .LVU1834
 6642 032e 17EE102A 		vmov	r2, s14	@ int
 6643              	.LBB1369:
 6644              	.LBB1366:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6645              		.loc 18 71 9 view .LVU1835
 6646 0332 0860     		str	r0, [r1]	@ float
 6647              	.LVL428:
  72:delayline_reverse.h ****     }
 6648              		.loc 18 72 9 view .LVU1836
 6649 0334 AA42     		cmp	r2, r5
 6650 0336 28BF     		it	cs
 6651 0338 2A46     		movcs	r2, r5
 6652              	.LBE1366:
 6653              	.LBE1369:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 228


  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6654              		.loc 19 74 13 is_stmt 1 view .LVU1837
 6655              	.LVL429:
 6656              	.LBB1370:
 6657              	.LBI1363:
  69:delayline_reverse.h ****     {
 6658              		.loc 18 69 17 view .LVU1838
 6659              	.LBB1367:
  72:delayline_reverse.h ****     }
 6660              		.loc 18 72 9 is_stmt 0 view .LVU1839
 6661 033a 0A61     		str	r2, [r1, #16]
 6662              		.loc 18 73 5 view .LVU1840
 6663 033c A5E6     		b	.L376
 6664              	.L438:
 6665 033e 00BF     		.align	2
 6666              	.L437:
 6667 0340 0050C346 		.word	1187205120
 6668 0344 00000000 		.word	.LANCHOR2
 6669 0348 00606A48 		.word	1214930944
 6670 034c 0AD7A33B 		.word	1000593162
 6671 0350 BF270900 		.word	599999
 6672 0354 00000000 		.word	.LANCHOR3
 6673 0358 00000000 		.word	.LANCHOR56
 6674 035c 0000FA43 		.word	1140457472
 6675 0360 00000000 		.word	0
 6676 0364 CDCCCC3D 		.word	1036831949
 6677 0368 00000000 		.word	.LANCHOR42
 6678 036c 00000000 		.word	.LANCHOR46
 6679 0370 9A99A140 		.word	1084332442
 6680 0374 0080BB44 		.word	1153138688
 6681 0378 00803B46 		.word	1178304512
 6682 037c 00000000 		.word	.LANCHOR27
 6683 0380 00000000 		.word	.LANCHOR28
 6684 0384 00000000 		.word	.LANCHOR29
 6685 0388 00000000 		.word	.LANCHOR30
 6686 038c 0000C842 		.word	1120403456
 6687 0390 00004844 		.word	1145569280
 6688 0394 00004843 		.word	1128792064
 6689 0398 00000000 		.word	.LANCHOR15
 6690 039c 00000000 		.word	.LANCHOR16
 6691 03a0 00000000 		.word	.LANCHOR17
 6692 03a4 00000000 		.word	.LANCHOR18
 6693 03a8 6666E63E 		.word	1055286886
 6694 03ac 00000000 		.word	.LANCHOR49
 6695 03b0 CDCC0C3F 		.word	1057803469
 6696 03b4 00650148 		.word	1208050944
 6697 03b8 94050200 		.word	132500
 6698              	.LBE1367:
 6699              	.LBE1370:
 6700              	.LBE1372:
 6701              	.LBE1404:
 6702              		.cfi_endproc
 6703              	.LFE4312:
 6705              		.section	.text.startup.main,"ax",%progbits
 6706              		.align	1
 6707              		.p2align 2,,3
 6708              		.global	main
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 229


 6709              		.syntax unified
 6710              		.thumb
 6711              		.thumb_func
 6712              		.fpu fpv5-d16
 6714              	main:
 6715              	.LFB4290:
 611:Veno-Echo.cpp **** {
 6716              		.loc 19 611 1 is_stmt 1 view -0
 6717              		.cfi_startproc
 6718              		@ Volatile: function does not return.
 6719              		@ args = 0, pretend = 0, frame = 240
 6720              		@ frame_needed = 0, uses_anonymous_args = 0
 613:Veno-Echo.cpp ****     hw.Configure();
 6721              		.loc 19 613 5 view .LVU1842
 611:Veno-Echo.cpp **** {
 6722              		.loc 19 611 1 is_stmt 0 view .LVU1843
 6723 0000 80B5     		push	{r7, lr}
 6724              		.cfi_def_cfa_offset 8
 6725              		.cfi_offset 7, -8
 6726              		.cfi_offset 14, -4
 613:Veno-Echo.cpp ****     hw.Configure();
 6727              		.loc 19 613 17 view .LVU1844
 6728 0002 D148     		ldr	r0, .L442
 611:Veno-Echo.cpp **** {
 6729              		.loc 19 611 1 view .LVU1845
 6730 0004 BEB0     		sub	sp, sp, #248
 6731              		.cfi_def_cfa_offset 256
 613:Veno-Echo.cpp ****     hw.Configure();
 6732              		.loc 19 613 17 view .LVU1846
 6733 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6734              	.LVL430:
 614:Veno-Echo.cpp ****     hw.Init();
 6735              		.loc 19 614 5 is_stmt 1 view .LVU1847
 614:Veno-Echo.cpp ****     hw.Init();
 6736              		.loc 19 614 12 is_stmt 0 view .LVU1848
 6737 000a 0021     		movs	r1, #0
 6738 000c CE48     		ldr	r0, .L442
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6739              		.loc 19 618 16 view .LVU1849
 6740 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 614:Veno-Echo.cpp ****     hw.Init();
 6741              		.loc 19 614 12 view .LVU1850
 6742 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6743              	.LVL431:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6744              		.loc 19 618 5 is_stmt 1 view .LVU1851
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6745              		.loc 19 618 16 is_stmt 0 view .LVU1852
 6746 0016 1D20     		movs	r0, #29
 6747 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6748              	.LVL432:
 6749 001c 0346     		mov	r3, r0	@ movhi
 6750 001e 0620     		movs	r0, #6
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6751              		.loc 19 625 22 view .LVU1853
 6752 0020 0224     		movs	r4, #2
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 230


 6753              		.loc 19 618 16 view .LVU1854
 6754 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6755 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6756              	.LVL433:
 6757 002a 0346     		mov	r3, r0	@ movhi
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6758              		.loc 19 618 80 view .LVU1855
 6759 002c C648     		ldr	r0, .L442
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6760              		.loc 19 625 22 view .LVU1856
 6761 002e 9FEDC79A 		vldr.32	s18, .L442+4
 6762              	.LBB1405:
 6763              	.LBB1406:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6764              		.loc 7 58 57 view .LVU1857
 6765 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6766              	.LBE1406:
 6767              	.LBE1405:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6768              		.loc 19 618 16 view .LVU1858
 6769 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6770              		.loc 19 618 80 view .LVU1859
 6771 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6772              	.LVL434:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6773              		.loc 19 618 16 view .LVU1860
 6774 003e 0123     		movs	r3, #1
 6775 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6776 0044 039A     		ldr	r2, [sp, #12]
 6777              	.LBB1409:
 6778              	.LBB1410:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6779              		.loc 7 54 63 view .LVU1861
 6780 0046 4FF07C55 		mov	r5, #1056964608
 6781              	.LBE1410:
 6782              	.LBE1409:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6783              		.loc 19 618 16 view .LVU1862
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 231


 6784 004a 0299     		ldr	r1, [sp, #8]
 6785              	.LBB1413:
 6786              	.LBB1414:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6787              		.loc 10 64 50 view .LVU1863
 6788 004c 1F46     		mov	r7, r3
 6789              	.LBE1414:
 6790              	.LBE1413:
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 6791              		.loc 19 618 16 view .LVU1864
 6792 004e C048     		ldr	r0, .L442+8
 6793 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6794              	.LVL435:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6795              		.loc 19 619 5 is_stmt 1 view .LVU1865
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6796              		.loc 19 619 16 is_stmt 0 view .LVU1866
 6797 0054 1E20     		movs	r0, #30
 6798 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6799              	.LVL436:
 6800 005a 0346     		mov	r3, r0	@ movhi
 6801 005c 0720     		movs	r0, #7
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 6802              		.loc 19 632 20 view .LVU1867
 6803 005e DFF85483 		ldr	r8, .L442+108
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6804              		.loc 19 619 16 view .LVU1868
 6805 0062 ADF81030 		strh	r3, [sp, #16]	@ movhi
 6806 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6807              	.LVL437:
 6808 006a 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6809              		.loc 19 619 80 view .LVU1869
 6810 006c B648     		ldr	r0, .L442
 6811              	.LBB1417:
 6812              	.LBB1418:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6813              		.loc 7 54 63 view .LVU1870
 6814 006e B94E     		ldr	r6, .L442+12
 6815              	.LBE1418:
 6816              	.LBE1417:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6817              		.loc 19 619 16 view .LVU1871
 6818 0070 ADF81430 		strh	r3, [sp, #20]	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6819              		.loc 19 619 80 view .LVU1872
 6820 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6821              	.LVL438:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6822              		.loc 19 619 16 view .LVU1873
 6823 0078 059A     		ldr	r2, [sp, #20]
 6824 007a 80EE080A 		vdiv.f32	s0, s0, s16
 6825 007e 0499     		ldr	r1, [sp, #16]
 6826 0080 3B46     		mov	r3, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 232


 6827 0082 B548     		ldr	r0, .L442+16
 6828 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6829              	.LVL439:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6830              		.loc 19 620 5 is_stmt 1 view .LVU1874
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6831              		.loc 19 620 18 is_stmt 0 view .LVU1875
 6832 0088 0A20     		movs	r0, #10
 6833 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6834              	.LVL440:
 6835 008e 0346     		mov	r3, r0	@ movhi
 6836 0090 2046     		mov	r0, r4
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 6837              		.loc 19 638 20 view .LVU1876
 6838 0092 DFF82493 		ldr	r9, .L442+112
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6839              		.loc 19 620 18 view .LVU1877
 6840 0096 ADF81830 		strh	r3, [sp, #24]	@ movhi
 6841 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6842              	.LVL441:
 6843 009e 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6844              		.loc 19 620 85 view .LVU1878
 6845 00a0 A948     		ldr	r0, .L442
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6846              		.loc 19 620 18 view .LVU1879
 6847 00a2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6848              		.loc 19 620 85 view .LVU1880
 6849 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6850              	.LVL442:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6851              		.loc 19 620 18 view .LVU1881
 6852 00aa 079A     		ldr	r2, [sp, #28]
 6853 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 6854 00b0 0699     		ldr	r1, [sp, #24]
 6855 00b2 0023     		movs	r3, #0
 6856 00b4 A948     		ldr	r0, .L442+20
 6857 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6858              	.LVL443:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6859              		.loc 19 621 5 is_stmt 1 view .LVU1882
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6860              		.loc 19 621 18 is_stmt 0 view .LVU1883
 6861 00ba 0B20     		movs	r0, #11
 6862 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6863              	.LVL444:
 6864 00c0 0346     		mov	r3, r0	@ movhi
 6865 00c2 0320     		movs	r0, #3
 6866 00c4 ADF82030 		strh	r3, [sp, #32]	@ movhi
 6867 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6868              	.LVL445:
 6869 00cc 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6870              		.loc 19 621 85 view .LVU1884
 6871 00ce 9E48     		ldr	r0, .L442
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 233


 6872              		.loc 19 621 18 view .LVU1885
 6873 00d0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6874              		.loc 19 621 85 view .LVU1886
 6875 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6876              	.LVL446:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6877              		.loc 19 621 18 view .LVU1887
 6878 00d8 099A     		ldr	r2, [sp, #36]
 6879 00da 80EE080A 		vdiv.f32	s0, s0, s16
 6880 00de 0899     		ldr	r1, [sp, #32]
 6881 00e0 0023     		movs	r3, #0
 6882 00e2 9F48     		ldr	r0, .L442+24
 6883 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6884              	.LVL447:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6885              		.loc 19 622 5 is_stmt 1 view .LVU1888
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6886              		.loc 19 622 20 is_stmt 0 view .LVU1889
 6887 00e8 1820     		movs	r0, #24
 6888 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6889              	.LVL448:
 6890 00ee 0346     		mov	r3, r0	@ movhi
 6891 00f0 0420     		movs	r0, #4
 6892 00f2 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6893 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6894              	.LVL449:
 6895 00fa 0346     		mov	r3, r0	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6896              		.loc 19 622 93 view .LVU1890
 6897 00fc 9248     		ldr	r0, .L442
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6898              		.loc 19 622 20 view .LVU1891
 6899 00fe ADF82C30 		strh	r3, [sp, #44]	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6900              		.loc 19 622 93 view .LVU1892
 6901 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6902              	.LVL450:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6903              		.loc 19 622 20 view .LVU1893
 6904 0106 2346     		mov	r3, r4
 6905 0108 80EE080A 		vdiv.f32	s0, s0, s16
 6906 010c 0B9A     		ldr	r2, [sp, #44]
 6907 010e 0A99     		ldr	r1, [sp, #40]
 6908 0110 9448     		ldr	r0, .L442+28
 6909 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6910              	.LVL451:
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6911              		.loc 19 625 5 is_stmt 1 view .LVU1894
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6912              		.loc 19 625 22 is_stmt 0 view .LVU1895
 6913 0116 0020     		movs	r0, #0
 6914 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6915              	.LVL452:
 6916 011c 0346     		mov	r3, r0	@ movhi
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6917              		.loc 19 625 55 view .LVU1896
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 234


 6918 011e 8A48     		ldr	r0, .L442
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6919              		.loc 19 625 22 view .LVU1897
 6920 0120 ADF83030 		strh	r3, [sp, #48]	@ movhi
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6921              		.loc 19 625 55 view .LVU1898
 6922 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6923              	.LVL453:
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6924              		.loc 19 625 22 view .LVU1899
 6925 0128 3A46     		mov	r2, r7
 6926 012a 0C99     		ldr	r1, [sp, #48]
 6927 012c 80EE090A 		vdiv.f32	s0, s0, s18
 6928 0130 3B46     		mov	r3, r7
 6929 0132 8D48     		ldr	r0, .L442+32
 6930 0134 0094     		str	r4, [sp]
 6931 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6932              	.LVL454:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6933              		.loc 19 626 5 is_stmt 1 view .LVU1900
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6934              		.loc 19 626 22 is_stmt 0 view .LVU1901
 6935 013a 3846     		mov	r0, r7
 6936 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6937              	.LVL455:
 6938 0140 0346     		mov	r3, r0	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6939              		.loc 19 626 55 view .LVU1902
 6940 0142 8148     		ldr	r0, .L442
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6941              		.loc 19 626 22 view .LVU1903
 6942 0144 ADF83430 		strh	r3, [sp, #52]	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6943              		.loc 19 626 55 view .LVU1904
 6944 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6945              	.LVL456:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6946              		.loc 19 626 22 view .LVU1905
 6947 014c 3A46     		mov	r2, r7
 6948 014e 0D99     		ldr	r1, [sp, #52]
 6949 0150 80EE090A 		vdiv.f32	s0, s0, s18
 6950 0154 3B46     		mov	r3, r7
 6951 0156 8548     		ldr	r0, .L442+36
 6952 0158 0094     		str	r4, [sp]
 6953 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6954              	.LVL457:
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 6955              		.loc 19 629 5 is_stmt 1 view .LVU1906
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 6956              		.loc 19 629 14 is_stmt 0 view .LVU1907
 6957 015e 1720     		movs	r0, #23
 6958 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6959              	.LVL458:
 6960 0164 0346     		mov	r3, r0	@ movhi
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 6961              		.loc 19 629 48 view .LVU1908
 6962 0166 7848     		ldr	r0, .L442
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 235


 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 6963              		.loc 19 629 14 view .LVU1909
 6964 0168 ADF83830 		strh	r3, [sp, #56]	@ movhi
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 6965              		.loc 19 629 48 view .LVU1910
 6966 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6967              	.LVL459:
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 6968              		.loc 19 629 14 view .LVU1911
 6969 0170 0E99     		ldr	r1, [sp, #56]
 6970 0172 80EE090A 		vdiv.f32	s0, s0, s18
 6971 0176 7E48     		ldr	r0, .L442+40
 6972 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6973              	.LVL460:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6974              		.loc 19 630 5 is_stmt 1 view .LVU1912
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6975              		.loc 19 630 17 is_stmt 0 view .LVU1913
 6976 017c 0520     		movs	r0, #5
 6977 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6978              	.LVL461:
 6979 0182 0346     		mov	r3, r0	@ movhi
 6980 0184 7048     		ldr	r0, .L442
 6981 0186 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6982 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6983              	.LVL462:
 6984 018e 0F99     		ldr	r1, [sp, #60]
 6985 0190 7848     		ldr	r0, .L442+44
 6986 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6987              	.LVL463:
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 6988              		.loc 19 632 5 is_stmt 1 view .LVU1914
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 6989              		.loc 19 632 20 is_stmt 0 view .LVU1915
 6990 0196 6C48     		ldr	r0, .L442
 6991 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6992              	.LVL464:
 6993 019c 4046     		mov	r0, r8
 6994 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6995              	.LVL465:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6996              		.loc 19 633 5 is_stmt 1 view .LVU1916
 6997              	.LBB1421:
 6998              	.LBI1409:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6999              		.loc 7 54 17 view .LVU1917
 7000              	.LBB1411:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7001              		.loc 7 54 48 view .LVU1918
 7002              	.LBE1411:
 7003              	.LBE1421:
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 7004              		.loc 19 638 20 is_stmt 0 view .LVU1919
 7005 01a2 6948     		ldr	r0, .L442
 7006              	.LBB1422:
 7007              	.LBB1407:
 7008              		.loc 7 58 57 view .LVU1920
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 236


 7009 01a4 C8ED008A 		vstr.32	s17, [r8]
 7010              	.LBE1407:
 7011              	.LBE1422:
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 7012              		.loc 19 644 17 view .LVU1921
 7013 01a8 734C     		ldr	r4, .L442+48
 7014              	.LBB1423:
 7015              	.LBB1412:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7016              		.loc 7 54 63 view .LVU1922
 7017 01aa C8F80850 		str	r5, [r8, #8]	@ float
 7018              	.LVL466:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7019              		.loc 7 54 63 view .LVU1923
 7020              	.LBE1412:
 7021              	.LBE1423:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7022              		.loc 19 634 5 is_stmt 1 view .LVU1924
 7023              	.LBB1424:
 7024              	.LBI1417:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7025              		.loc 7 54 17 view .LVU1925
 7026              	.LBB1419:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7027              		.loc 7 54 48 view .LVU1926
 7028              	.LBE1419:
 7029              	.LBE1424:
 7030              	.LBB1425:
 7031              	.LBB1426:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7032              		.loc 7 54 63 is_stmt 0 view .LVU1927
 7033 01ae C8F81450 		str	r5, [r8, #20]	@ float
 7034              	.LBE1426:
 7035              	.LBE1425:
 7036              	.LBB1428:
 7037              	.LBB1420:
 7038 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 7039              	.LVL467:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7040              		.loc 7 54 63 view .LVU1928
 7041              	.LBE1420:
 7042              	.LBE1428:
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7043              		.loc 19 635 5 is_stmt 1 view .LVU1929
 7044              	.LBB1429:
 7045              	.LBI1425:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7046              		.loc 7 54 17 view .LVU1930
 7047              	.LBB1427:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7048              		.loc 7 54 48 view .LVU1931
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7049              		.loc 7 54 48 is_stmt 0 view .LVU1932
 7050              	.LBE1427:
 7051              	.LBE1429:
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 7052              		.loc 19 636 5 is_stmt 1 view .LVU1933
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 237


 7053              	.LBB1430:
 7054              	.LBI1405:
 7055              		.loc 7 58 17 view .LVU1934
 7056              	.LBB1408:
 7057              		.loc 7 58 52 view .LVU1935
 7058              		.loc 7 58 52 is_stmt 0 view .LVU1936
 7059              	.LBE1408:
 7060              	.LBE1430:
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 7061              		.loc 19 638 5 is_stmt 1 view .LVU1937
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 7062              		.loc 19 638 20 is_stmt 0 view .LVU1938
 7063 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7064              	.LVL468:
 7065 01ba 4846     		mov	r0, r9
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 7066              		.loc 19 650 17 view .LVU1939
 7067 01bc DFF8FC81 		ldr	r8, .L442+116
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 7068              		.loc 19 638 20 view .LVU1940
 7069 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7070              	.LVL469:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7071              		.loc 19 639 5 is_stmt 1 view .LVU1941
 7072              	.LBB1431:
 7073              	.LBI1431:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7074              		.loc 7 54 17 view .LVU1942
 7075              	.LBB1432:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7076              		.loc 7 54 48 view .LVU1943
 7077              	.LBE1432:
 7078              	.LBE1431:
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 7079              		.loc 19 644 17 is_stmt 0 view .LVU1944
 7080 01c4 6048     		ldr	r0, .L442
 7081              	.LBB1434:
 7082              	.LBB1433:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7083              		.loc 7 54 63 view .LVU1945
 7084 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 7085              	.LVL470:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7086              		.loc 7 54 63 view .LVU1946
 7087              	.LBE1433:
 7088              	.LBE1434:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7089              		.loc 19 640 5 is_stmt 1 view .LVU1947
 7090              	.LBB1435:
 7091              	.LBI1435:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7092              		.loc 7 54 17 view .LVU1948
 7093              	.LBB1436:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7094              		.loc 7 54 48 view .LVU1949
 7095              	.LBE1436:
 7096              	.LBE1435:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 238


 7097              	.LBB1438:
 7098              	.LBB1439:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7099              		.loc 7 54 63 is_stmt 0 view .LVU1950
 7100 01ca C9F81450 		str	r5, [r9, #20]	@ float
 7101              	.LBE1439:
 7102              	.LBE1438:
 7103              	.LBB1441:
 7104              	.LBB1437:
 7105 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 7106              	.LVL471:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7107              		.loc 7 54 63 view .LVU1951
 7108              	.LBE1437:
 7109              	.LBE1441:
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7110              		.loc 19 641 5 is_stmt 1 view .LVU1952
 7111              	.LBB1442:
 7112              	.LBI1438:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7113              		.loc 7 54 17 view .LVU1953
 7114              	.LBB1440:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7115              		.loc 7 54 48 view .LVU1954
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7116              		.loc 7 54 48 is_stmt 0 view .LVU1955
 7117              	.LBE1440:
 7118              	.LBE1442:
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7119              		.loc 19 642 5 is_stmt 1 view .LVU1956
 7120              	.LBB1443:
 7121              	.LBI1443:
 7122              		.loc 7 58 17 view .LVU1957
 7123              	.LBB1444:
 7124              		.loc 7 58 52 view .LVU1958
 7125              		.loc 7 58 57 is_stmt 0 view .LVU1959
 7126 01d2 C9ED008A 		vstr.32	s17, [r9]
 7127              	.LVL472:
 7128              		.loc 7 58 57 view .LVU1960
 7129              	.LBE1444:
 7130              	.LBE1443:
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 7131              		.loc 19 644 5 is_stmt 1 view .LVU1961
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 7132              		.loc 19 644 17 is_stmt 0 view .LVU1962
 7133 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7134              	.LVL473:
 7135 01da 2046     		mov	r0, r4
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7136              		.loc 19 669 17 view .LVU1963
 7137 01dc 9FED678A 		vldr.32	s16, .L442+52
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 7138              		.loc 19 644 17 view .LVU1964
 7139 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7140              	.LVL474:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7141              		.loc 19 645 5 is_stmt 1 view .LVU1965
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 239


 7142              	.LBB1445:
 7143              	.LBI1445:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7144              		.loc 7 54 17 view .LVU1966
 7145              	.LBB1446:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7146              		.loc 7 54 48 view .LVU1967
 7147              	.LBE1446:
 7148              	.LBE1445:
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 7149              		.loc 19 650 17 is_stmt 0 view .LVU1968
 7150 01e4 5848     		ldr	r0, .L442
 7151              	.LBB1448:
 7152              	.LBB1449:
 7153              		.loc 7 58 57 view .LVU1969
 7154 01e6 C4ED008A 		vstr.32	s17, [r4]
 7155              	.LBE1449:
 7156              	.LBE1448:
 7157              	.LBB1451:
 7158              	.LBB1447:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7159              		.loc 7 54 63 view .LVU1970
 7160 01ea A660     		str	r6, [r4, #8]	@ float
 7161              	.LVL475:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7162              		.loc 7 54 63 view .LVU1971
 7163              	.LBE1447:
 7164              	.LBE1451:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7165              		.loc 19 646 5 is_stmt 1 view .LVU1972
 7166              	.LBB1452:
 7167              	.LBI1452:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7168              		.loc 7 54 17 view .LVU1973
 7169              	.LBB1453:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7170              		.loc 7 54 48 view .LVU1974
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7171              		.loc 7 54 63 is_stmt 0 view .LVU1975
 7172 01ec E660     		str	r6, [r4, #12]	@ float
 7173              	.LVL476:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7174              		.loc 7 54 63 view .LVU1976
 7175              	.LBE1453:
 7176              	.LBE1452:
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7177              		.loc 19 647 5 is_stmt 1 view .LVU1977
 7178              	.LBB1454:
 7179              	.LBI1454:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7180              		.loc 7 54 17 view .LVU1978
 7181              	.LBB1455:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7182              		.loc 7 54 48 view .LVU1979
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7183              		.loc 7 54 63 is_stmt 0 view .LVU1980
 7184 01ee 6661     		str	r6, [r4, #20]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 240


 7185              	.LVL477:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7186              		.loc 7 54 63 view .LVU1981
 7187              	.LBE1455:
 7188              	.LBE1454:
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7189              		.loc 19 648 5 is_stmt 1 view .LVU1982
 7190              	.LBB1456:
 7191              	.LBI1448:
 7192              		.loc 7 58 17 view .LVU1983
 7193              	.LBB1450:
 7194              		.loc 7 58 52 view .LVU1984
 7195              		.loc 7 58 52 is_stmt 0 view .LVU1985
 7196              	.LBE1450:
 7197              	.LBE1456:
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 7198              		.loc 19 650 5 is_stmt 1 view .LVU1986
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 7199              		.loc 19 650 17 is_stmt 0 view .LVU1987
 7200 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7201              	.LVL478:
 7202 01f4 4046     		mov	r0, r8
 7203              	.LBB1457:
 7204              	.LBB1458:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7205              		.loc 8 44 20 view .LVU1988
 7206 01f6 624C     		ldr	r4, .L442+56
 7207              	.LBE1458:
 7208              	.LBE1457:
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 7209              		.loc 19 650 17 view .LVU1989
 7210 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7211              	.LVL479:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7212              		.loc 19 651 5 is_stmt 1 view .LVU1990
 7213              	.LBB1463:
 7214              	.LBI1463:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7215              		.loc 7 54 17 view .LVU1991
 7216              	.LBB1464:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7217              		.loc 7 54 48 view .LVU1992
 7218              	.LBE1464:
 7219              	.LBE1463:
 7220              	.LBB1466:
 7221              	.LBB1467:
 7222              	.LBB1468:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7223              		.loc 10 45 16 is_stmt 0 view .LVU1993
 7224 01fc 6149     		ldr	r1, .L442+60
 7225              	.LBE1468:
 7226              	.LBE1467:
 7227              	.LBE1466:
 7228              	.LBB1473:
 7229              	.LBB1474:
 7230              	.LBB1475:
 7231 01fe 624A     		ldr	r2, .L442+64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 241


 7232              	.LBE1475:
 7233              	.LBE1474:
 7234              	.LBE1473:
 7235              	.LBB1480:
 7236              	.LBB1481:
 7237              	.LBB1482:
 7238 0200 624B     		ldr	r3, .L442+68
 7239              	.LBE1482:
 7240              	.LBE1481:
 7241              	.LBE1480:
 7242              	.LBB1487:
 7243              	.LBB1471:
 7244              	.LBB1469:
 7245 0202 0D60     		str	r5, [r1]	@ float
 7246              	.LBE1469:
 7247              	.LBE1471:
 7248              	.LBE1487:
 7249              	.LBB1488:
 7250              	.LBB1478:
 7251              	.LBB1476:
 7252 0204 1560     		str	r5, [r2]	@ float
 7253              	.LBE1476:
 7254              	.LBE1478:
 7255              	.LBE1488:
 7256              	.LBB1489:
 7257              	.LBB1485:
 7258              	.LBB1483:
 7259 0206 1D60     		str	r5, [r3]	@ float
 7260              	.LBE1483:
 7261              	.LBE1485:
 7262              	.LBE1489:
 7263              	.LBB1490:
 7264              	.LBB1415:
 7265              		.loc 10 64 50 view .LVU1994
 7266 0208 0F71     		strb	r7, [r1, #4]
 7267              	.LBE1415:
 7268              	.LBE1490:
 7269              	.LBB1491:
 7270              	.LBB1492:
 7271 020a 1771     		strb	r7, [r2, #4]
 7272              	.LBE1492:
 7273              	.LBE1491:
 7274              	.LBB1494:
 7275              	.LBB1495:
 7276 020c 1F71     		strb	r7, [r3, #4]
 7277              	.LBE1495:
 7278              	.LBE1494:
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 7279              		.loc 19 665 15 view .LVU1995
 7280 020e 4E48     		ldr	r0, .L442
 7281              	.LBB1497:
 7282              	.LBB1498:
 7283              		.loc 7 58 57 view .LVU1996
 7284 0210 C8ED008A 		vstr.32	s17, [r8]
 7285              	.LBE1498:
 7286              	.LBE1497:
 7287              	.LBB1500:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 242


 7288              	.LBB1465:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7289              		.loc 7 54 63 view .LVU1997
 7290 0214 C8F80860 		str	r6, [r8, #8]	@ float
 7291              	.LVL480:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7292              		.loc 7 54 63 view .LVU1998
 7293              	.LBE1465:
 7294              	.LBE1500:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7295              		.loc 19 652 5 is_stmt 1 view .LVU1999
 7296              	.LBB1501:
 7297              	.LBI1501:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7298              		.loc 7 54 17 view .LVU2000
 7299              	.LBB1502:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7300              		.loc 7 54 48 view .LVU2001
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7301              		.loc 7 54 63 is_stmt 0 view .LVU2002
 7302 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 7303              	.LVL481:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7304              		.loc 7 54 63 view .LVU2003
 7305              	.LBE1502:
 7306              	.LBE1501:
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7307              		.loc 19 653 5 is_stmt 1 view .LVU2004
 7308              	.LBB1503:
 7309              	.LBI1503:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7310              		.loc 7 54 17 view .LVU2005
 7311              	.LBB1504:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7312              		.loc 7 54 48 view .LVU2006
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7313              		.loc 7 54 63 is_stmt 0 view .LVU2007
 7314 021c C8F81460 		str	r6, [r8, #20]	@ float
 7315              	.LVL482:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7316              		.loc 7 54 63 view .LVU2008
 7317              	.LBE1504:
 7318              	.LBE1503:
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7319              		.loc 19 654 5 is_stmt 1 view .LVU2009
 7320              	.LBB1505:
 7321              	.LBI1497:
 7322              		.loc 7 58 17 view .LVU2010
 7323              	.LBB1499:
 7324              		.loc 7 58 52 view .LVU2011
 7325              		.loc 7 58 52 is_stmt 0 view .LVU2012
 7326              	.LBE1499:
 7327              	.LBE1505:
 657:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 7328              		.loc 19 657 5 is_stmt 1 view .LVU2013
 7329              	.LBB1506:
 7330              	.LBI1466:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 243


  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7331              		.loc 10 51 17 view .LVU2014
 7332              	.LBE1506:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7333              		.loc 10 51 26 view .LVU2015
 7334              	.LBB1507:
 7335              	.LBB1472:
 7336              	.LBI1467:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7337              		.loc 10 43 17 view .LVU2016
 7338              	.LBB1470:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7339              		.loc 10 45 9 view .LVU2017
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7340              		.loc 10 46 9 view .LVU2018
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7341              		.loc 10 46 9 is_stmt 0 view .LVU2019
 7342              	.LBE1470:
 7343              	.LBE1472:
 7344              	.LBE1507:
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7345              		.loc 19 658 5 is_stmt 1 view .LVU2020
 7346              	.LBB1508:
 7347              	.LBI1413:
 7348              		.loc 10 64 17 view .LVU2021
 7349              	.LBB1416:
 7350              		.loc 10 64 43 view .LVU2022
 7351              		.loc 10 64 43 is_stmt 0 view .LVU2023
 7352              	.LBE1416:
 7353              	.LBE1508:
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7354              		.loc 19 659 5 is_stmt 1 view .LVU2024
 7355              	.LBB1509:
 7356              	.LBI1473:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7357              		.loc 10 51 17 view .LVU2025
 7358              	.LBE1509:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7359              		.loc 10 51 26 view .LVU2026
 7360              	.LBB1510:
 7361              	.LBB1479:
 7362              	.LBI1474:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7363              		.loc 10 43 17 view .LVU2027
 7364              	.LBB1477:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7365              		.loc 10 45 9 view .LVU2028
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7366              		.loc 10 46 9 view .LVU2029
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7367              		.loc 10 46 9 is_stmt 0 view .LVU2030
 7368              	.LBE1477:
 7369              	.LBE1479:
 7370              	.LBE1510:
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7371              		.loc 19 660 5 is_stmt 1 view .LVU2031
 7372              	.LBB1511:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 244


 7373              	.LBI1491:
 7374              		.loc 10 64 17 view .LVU2032
 7375              	.LBB1493:
 7376              		.loc 10 64 43 view .LVU2033
 7377              		.loc 10 64 43 is_stmt 0 view .LVU2034
 7378              	.LBE1493:
 7379              	.LBE1511:
 662:Veno-Echo.cpp ****     WidthXfade.Init();
 7380              		.loc 19 662 5 is_stmt 1 view .LVU2035
 7381              	.LBB1512:
 7382              	.LBI1480:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7383              		.loc 10 51 17 view .LVU2036
 7384              	.LBE1512:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7385              		.loc 10 51 26 view .LVU2037
 7386              	.LBB1513:
 7387              	.LBB1486:
 7388              	.LBI1481:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7389              		.loc 10 43 17 view .LVU2038
 7390              	.LBB1484:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7391              		.loc 10 45 9 view .LVU2039
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7392              		.loc 10 46 9 view .LVU2040
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7393              		.loc 10 46 9 is_stmt 0 view .LVU2041
 7394              	.LBE1484:
 7395              	.LBE1486:
 7396              	.LBE1513:
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7397              		.loc 19 663 5 is_stmt 1 view .LVU2042
 7398              	.LBB1514:
 7399              	.LBI1494:
 7400              		.loc 10 64 17 view .LVU2043
 7401              	.LBB1496:
 7402              		.loc 10 64 43 view .LVU2044
 7403              		.loc 10 64 43 is_stmt 0 view .LVU2045
 7404              	.LBE1496:
 7405              	.LBE1514:
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 7406              		.loc 19 665 5 is_stmt 1 view .LVU2046
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 7407              		.loc 19 665 15 is_stmt 0 view .LVU2047
 7408 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7409              	.LVL483:
 7410 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 7411              	.LVL484:
 668:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 7412              		.loc 19 668 5 is_stmt 1 view .LVU2048
 668:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 7413              		.loc 19 668 15 is_stmt 0 view .LVU2049
 7414 0228 4748     		ldr	r0, .L442
 7415 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7416              	.LVL485:
 7417 022e 5848     		ldr	r0, .L442+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 245


 7418 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7419              	.LVL486:
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7420              		.loc 19 669 5 is_stmt 1 view .LVU2050
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7421              		.loc 19 669 17 is_stmt 0 view .LVU2051
 7422 0234 B0EE480A 		vmov.f32	s0, s16
 7423 0238 5548     		ldr	r0, .L442+72
 7424 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7425              	.LVL487:
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7426              		.loc 19 670 5 is_stmt 1 view .LVU2052
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7427              		.loc 19 670 18 is_stmt 0 view .LVU2053
 7428 023e 9FED550A 		vldr.32	s0, .L442+76
 7429 0242 5348     		ldr	r0, .L442+72
 7430 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7431              	.LVL488:
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7432              		.loc 19 671 5 is_stmt 1 view .LVU2054
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7433              		.loc 19 671 19 is_stmt 0 view .LVU2055
 7434 0248 9FED5D0A 		vldr.32	s0, .L442+120
 7435 024c 5048     		ldr	r0, .L442+72
 7436 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7437              	.LVL489:
 673:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 7438              		.loc 19 673 5 is_stmt 1 view .LVU2056
 673:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 7439              		.loc 19 673 15 is_stmt 0 view .LVU2057
 7440 0252 3D48     		ldr	r0, .L442
 7441 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7442              	.LVL490:
 7443 0258 4F48     		ldr	r0, .L442+80
 7444 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7445              	.LVL491:
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7446              		.loc 19 674 5 is_stmt 1 view .LVU2058
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7447              		.loc 19 674 17 is_stmt 0 view .LVU2059
 7448 025e B0EE480A 		vmov.f32	s0, s16
 7449 0262 4D48     		ldr	r0, .L442+80
 7450 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7451              	.LVL492:
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7452              		.loc 19 675 5 is_stmt 1 view .LVU2060
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7453              		.loc 19 675 18 is_stmt 0 view .LVU2061
 7454 0268 9FED4A0A 		vldr.32	s0, .L442+76
 7455 026c 4A48     		ldr	r0, .L442+80
 7456 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7457              	.LVL493:
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7458              		.loc 19 676 5 is_stmt 1 view .LVU2062
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7459              		.loc 19 676 19 is_stmt 0 view .LVU2063
 7460 0272 9FED530A 		vldr.32	s0, .L442+120
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 246


 7461 0276 4848     		ldr	r0, .L442+80
 7462 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7463              	.LVL494:
 679:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 7464              		.loc 19 679 5 is_stmt 1 view .LVU2064
 679:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 7465              		.loc 19 679 15 is_stmt 0 view .LVU2065
 7466 027c 3248     		ldr	r0, .L442
 7467 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7468              	.LVL495:
 7469 0282 4648     		ldr	r0, .L442+84
 7470 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7471              	.LVL496:
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7472              		.loc 19 680 5 is_stmt 1 view .LVU2066
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7473              		.loc 19 680 17 is_stmt 0 view .LVU2067
 7474 0288 B0EE480A 		vmov.f32	s0, s16
 7475 028c 4348     		ldr	r0, .L442+84
 7476 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7477              	.LVL497:
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7478              		.loc 19 681 5 is_stmt 1 view .LVU2068
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7479              		.loc 19 681 18 is_stmt 0 view .LVU2069
 7480 0292 9FED430A 		vldr.32	s0, .L442+88
 7481 0296 4148     		ldr	r0, .L442+84
 7482 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7483              	.LVL498:
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7484              		.loc 19 682 5 is_stmt 1 view .LVU2070
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7485              		.loc 19 682 19 is_stmt 0 view .LVU2071
 7486 029c 9FED480A 		vldr.32	s0, .L442+120
 7487 02a0 3E48     		ldr	r0, .L442+84
 7488 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7489              	.LVL499:
 684:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 7490              		.loc 19 684 5 is_stmt 1 view .LVU2072
 684:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 7491              		.loc 19 684 15 is_stmt 0 view .LVU2073
 7492 02a6 2848     		ldr	r0, .L442
 7493 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7494              	.LVL500:
 7495 02ac 3D48     		ldr	r0, .L442+92
 7496 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7497              	.LVL501:
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7498              		.loc 19 685 5 is_stmt 1 view .LVU2074
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7499              		.loc 19 685 17 is_stmt 0 view .LVU2075
 7500 02b2 B0EE480A 		vmov.f32	s0, s16
 7501 02b6 3B48     		ldr	r0, .L442+92
 7502 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7503              	.LVL502:
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7504              		.loc 19 686 5 is_stmt 1 view .LVU2076
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 247


 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7505              		.loc 19 686 18 is_stmt 0 view .LVU2077
 7506 02bc 9FED380A 		vldr.32	s0, .L442+88
 7507 02c0 3848     		ldr	r0, .L442+92
 7508 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7509              	.LVL503:
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7510              		.loc 19 687 5 is_stmt 1 view .LVU2078
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7511              		.loc 19 687 19 is_stmt 0 view .LVU2079
 7512 02c6 9FED3E0A 		vldr.32	s0, .L442+120
 7513 02ca 3648     		ldr	r0, .L442+92
 7514 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7515              	.LVL504:
 690:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 7516              		.loc 19 690 5 is_stmt 1 view .LVU2080
 690:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 7517              		.loc 19 690 20 is_stmt 0 view .LVU2081
 7518 02d0 1D48     		ldr	r0, .L442
 7519 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7520              	.LVL505:
 7521 02d6 3448     		ldr	r0, .L442+96
 7522 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7523              	.LVL506:
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7524              		.loc 19 691 5 is_stmt 1 view .LVU2082
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7525              		.loc 19 691 22 is_stmt 0 view .LVU2083
 7526 02dc B0EE480A 		vmov.f32	s0, s16
 7527 02e0 3148     		ldr	r0, .L442+96
 7528 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7529              	.LVL507:
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7530              		.loc 19 692 5 is_stmt 1 view .LVU2084
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7531              		.loc 19 692 23 is_stmt 0 view .LVU2085
 7532 02e6 9FED2B0A 		vldr.32	s0, .L442+76
 7533 02ea 2F48     		ldr	r0, .L442+96
 7534 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7535              	.LVL508:
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7536              		.loc 19 693 5 is_stmt 1 view .LVU2086
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7537              		.loc 19 693 24 is_stmt 0 view .LVU2087
 7538 02f0 9FED330A 		vldr.32	s0, .L442+120
 7539 02f4 2C48     		ldr	r0, .L442+96
 7540 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7541              	.LVL509:
 695:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 7542              		.loc 19 695 5 is_stmt 1 view .LVU2088
 695:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 7543              		.loc 19 695 20 is_stmt 0 view .LVU2089
 7544 02fa 1348     		ldr	r0, .L442
 7545 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7546              	.LVL510:
 7547 0300 2A48     		ldr	r0, .L442+100
 7548 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 248


 7549              	.LVL511:
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7550              		.loc 19 696 5 is_stmt 1 view .LVU2090
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7551              		.loc 19 696 22 is_stmt 0 view .LVU2091
 7552 0306 B0EE480A 		vmov.f32	s0, s16
 7553 030a 2848     		ldr	r0, .L442+100
 7554 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7555              	.LVL512:
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7556              		.loc 19 697 5 is_stmt 1 view .LVU2092
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7557              		.loc 19 697 23 is_stmt 0 view .LVU2093
 7558 0310 9FED200A 		vldr.32	s0, .L442+76
 7559 0314 2548     		ldr	r0, .L442+100
 7560 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7561              	.LVL513:
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7562              		.loc 19 698 5 is_stmt 1 view .LVU2094
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7563              		.loc 19 698 24 is_stmt 0 view .LVU2095
 7564 031a 9FED290A 		vldr.32	s0, .L442+120
 7565 031e 2348     		ldr	r0, .L442+100
 7566 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7567              	.LVL514:
 701:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 7568              		.loc 19 701 5 is_stmt 1 view .LVU2096
 701:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 7569              		.loc 19 701 20 is_stmt 0 view .LVU2097
 7570 0324 0848     		ldr	r0, .L442
 7571 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7572              	.LVL515:
 7573 032a 2148     		ldr	r0, .L442+104
 7574 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7575              	.LVL516:
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7576              		.loc 19 702 5 is_stmt 1 view .LVU2098
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7577              		.loc 19 702 22 is_stmt 0 view .LVU2099
 7578 0330 B0EE480A 		vmov.f32	s0, s16
 7579 0334 1E48     		ldr	r0, .L442+104
 7580 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7581              	.LVL517:
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7582              		.loc 19 703 5 is_stmt 1 view .LVU2100
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7583              		.loc 19 703 23 is_stmt 0 view .LVU2101
 7584 033a 9FED190A 		vldr.32	s0, .L442+88
 7585 033e 1C48     		ldr	r0, .L442+104
 7586 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7587              	.LVL518:
 7588 0344 3EE0     		b	.L443
 7589              	.L444:
 7590 0346 00BF     		.align	2
 7591              	.L442:
 7592 0348 00000000 		.word	.LANCHOR4
 7593 034c 00004042 		.word	1111490560
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 249


 7594 0350 00000000 		.word	.LANCHOR75
 7595 0354 0AD7233C 		.word	1008981770
 7596 0358 00000000 		.word	.LANCHOR76
 7597 035c 00000000 		.word	.LANCHOR77
 7598 0360 00000000 		.word	.LANCHOR78
 7599 0364 00000000 		.word	.LANCHOR79
 7600 0368 00000000 		.word	.LANCHOR80
 7601 036c 00000000 		.word	.LANCHOR81
 7602 0370 00000000 		.word	.LANCHOR82
 7603 0374 00000000 		.word	.LANCHOR53
 7604 0378 00000000 		.word	.LANCHOR85
 7605 037c 00000000 		.word	0
 7606 0380 00000000 		.word	.LANCHOR46
 7607 0384 00000000 		.word	.LANCHOR87
 7608 0388 00000000 		.word	.LANCHOR88
 7609 038c 00000000 		.word	.LANCHOR41
 7610 0390 00000000 		.word	.LANCHOR27
 7611 0394 00803B46 		.word	1178304512
 7612 0398 00000000 		.word	.LANCHOR28
 7613 039c 00000000 		.word	.LANCHOR15
 7614 03a0 00004843 		.word	1128792064
 7615 03a4 00000000 		.word	.LANCHOR16
 7616 03a8 00000000 		.word	.LANCHOR29
 7617 03ac 00000000 		.word	.LANCHOR30
 7618 03b0 00000000 		.word	.LANCHOR17
 7619 03b4 00000000 		.word	.LANCHOR83
 7620 03b8 00000000 		.word	.LANCHOR84
 7621 03bc 00000000 		.word	.LANCHOR86
 7622 03c0 3333333F 		.word	1060320051
 7623              	.L443:
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7624              		.loc 19 704 5 is_stmt 1 view .LVU2102
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7625              		.loc 19 704 24 is_stmt 0 view .LVU2103
 7626 03c4 1FED020A 		vldr.32	s0, .L442+120
 7627 03c8 7B48     		ldr	r0, .L445
 7628 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7629              	.LVL519:
 706:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 7630              		.loc 19 706 5 is_stmt 1 view .LVU2104
 706:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 7631              		.loc 19 706 20 is_stmt 0 view .LVU2105
 7632 03ce 7B48     		ldr	r0, .L445+4
 7633 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7634              	.LVL520:
 7635 03d4 7A48     		ldr	r0, .L445+8
 7636 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7637              	.LVL521:
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7638              		.loc 19 707 5 is_stmt 1 view .LVU2106
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7639              		.loc 19 707 22 is_stmt 0 view .LVU2107
 7640 03da B0EE480A 		vmov.f32	s0, s16
 7641 03de 7848     		ldr	r0, .L445+8
 7642 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7643              	.LVL522:
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 250


 7644              		.loc 19 708 5 is_stmt 1 view .LVU2108
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7645              		.loc 19 708 23 is_stmt 0 view .LVU2109
 7646 03e4 9FED770A 		vldr.32	s0, .L445+12
 7647 03e8 7548     		ldr	r0, .L445+8
 7648 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7649              	.LVL523:
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7650              		.loc 19 709 5 is_stmt 1 view .LVU2110
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7651              		.loc 19 709 24 is_stmt 0 view .LVU2111
 7652 03ee 9FED760A 		vldr.32	s0, .L445+16
 7653 03f2 7348     		ldr	r0, .L445+8
 7654 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7655              	.LVL524:
 711:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 7656              		.loc 19 711 5 is_stmt 1 view .LVU2112
 711:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 7657              		.loc 19 711 21 is_stmt 0 view .LVU2113
 7658 03f8 7048     		ldr	r0, .L445+4
 7659 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7660              	.LVL525:
 7661 03fe 7348     		ldr	r0, .L445+20
 7662 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7663              	.LVL526:
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7664              		.loc 19 712 5 is_stmt 1 view .LVU2114
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7665              		.loc 19 712 21 is_stmt 0 view .LVU2115
 7666 0404 6D48     		ldr	r0, .L445+4
 7667 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7668              	.LVL527:
 7669 040a 7148     		ldr	r0, .L445+24
 7670 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7671              	.LVL528:
 715:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 7672              		.loc 19 715 5 is_stmt 1 view .LVU2116
 715:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 7673              		.loc 19 715 13 is_stmt 0 view .LVU2117
 7674 0410 6A48     		ldr	r0, .L445+4
 7675 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7676              	.LVL529:
 7677 0416 F0EE407A 		vmov.f32	s15, s0
 7678              	.LVL530:
 7679              	.LBB1515:
 7680              	.LBI1457:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7681              		.loc 8 42 10 is_stmt 1 view .LVU2118
 7682              	.LBB1459:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7683              		.loc 8 44 9 view .LVU2119
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7684              		.loc 8 46 20 is_stmt 0 view .LVU2120
 7685 041a 9FED6E7A 		vldr.32	s14, .L445+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7686              		.loc 8 49 34 view .LVU2121
 7687 041e 2046     		mov	r0, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 251


  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7688              		.loc 8 47 20 view .LVU2122
 7689 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7690              		.loc 8 45 27 view .LVU2123
 7691 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7692              		.loc 8 46 20 view .LVU2124
 7693 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7694              		.loc 8 44 20 view .LVU2125
 7695 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7696              		.loc 8 45 9 is_stmt 1 view .LVU2126
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7697              		.loc 8 48 20 is_stmt 0 view .LVU2127
 7698 042e 84ED058A 		vstr.32	s16, [r4, #20]
 7699              	.LBE1459:
 7700              	.LBE1515:
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7701              		.loc 19 737 17 view .LVU2128
 7702 0432 694D     		ldr	r5, .L445+32
 7703              	.LBB1516:
 7704              	.LBB1460:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7705              		.loc 8 49 34 view .LVU2129
 7706 0434 B0EE470A 		vmov.f32	s0, s14
 7707              	.LVL531:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7708              		.loc 8 45 20 view .LVU2130
 7709 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7710              		.loc 8 46 9 is_stmt 1 view .LVU2131
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7711              		.loc 8 47 9 view .LVU2132
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7712              		.loc 8 48 9 view .LVU2133
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7713              		.loc 8 49 9 view .LVU2134
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7714              		.loc 8 49 34 is_stmt 0 view .LVU2135
 7715 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7716              	.LVL532:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7717              		.loc 8 52 20 view .LVU2136
 7718 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7719              		.loc 8 49 34 view .LVU2137
 7720 0444 F0EE407A 		vmov.f32	s15, s0
 7721              	.LBE1460:
 7722              	.LBE1516:
 7723              	.LBB1517:
 7724              	.LBB1518:
 7725              		.loc 8 61 34 view .LVU2138
 7726 0448 2046     		mov	r0, r4
 7727              	.LBE1518:
 7728              	.LBE1517:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 252


 7729              	.LBB1522:
 7730              	.LBB1523:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7731              		.loc 8 72 19 view .LVU2139
 7732 044a 2770     		strb	r7, [r4]
 7733              	.LBE1523:
 7734              	.LBE1522:
 7735              	.LBB1525:
 7736              	.LBB1461:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7737              		.loc 8 52 20 view .LVU2140
 7738 044c A384     		strh	r3, [r4, #36]	@ movhi
 7739              	.LBE1461:
 7740              	.LBE1525:
 7741              	.LBB1526:
 7742              	.LBB1519:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7743              		.loc 8 61 34 view .LVU2141
 7744 044e B0EE680A 		vmov.f32	s0, s17
 7745              	.LBE1519:
 7746              	.LBE1526:
 7747              	.LBB1527:
 7748              	.LBB1462:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7749              		.loc 8 49 20 view .LVU2142
 7750 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7751              		.loc 8 50 9 is_stmt 1 view .LVU2143
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7752              		.loc 8 51 9 view .LVU2144
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7753              		.loc 8 52 9 view .LVU2145
 7754              	.LVL533:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7755              		.loc 8 52 9 is_stmt 0 view .LVU2146
 7756              	.LBE1462:
 7757              	.LBE1527:
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7758              		.loc 19 716 5 is_stmt 1 view .LVU2147
 7759              	.LBB1528:
 7760              	.LBI1522:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7761              		.loc 8 70 17 view .LVU2148
 7762              	.LBB1524:
 7763              		.loc 8 72 9 view .LVU2149
 7764              		.loc 8 72 9 is_stmt 0 view .LVU2150
 7765              	.LBE1524:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 253


 7766              	.LBE1528:
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7767              		.loc 19 717 5 is_stmt 1 view .LVU2151
 7768              	.LBB1529:
 7769              	.LBI1517:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7770              		.loc 8 58 17 view .LVU2152
 7771              	.LBB1520:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7772              		.loc 8 60 9 view .LVU2153
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7773              		.loc 8 61 9 view .LVU2154
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7774              		.loc 8 60 20 is_stmt 0 view .LVU2155
 7775 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7776              		.loc 8 61 34 view .LVU2156
 7777 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7778              	.LVL534:
 7779 045e F0EE407A 		vmov.f32	s15, s0
 7780              	.LBE1520:
 7781              	.LBE1529:
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 7782              		.loc 19 725 19 view .LVU2157
 7783 0462 41F27072 		movw	r2, #6000
 7784 0466 5021     		movs	r1, #80
 7785 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 7786 046c 5B48     		ldr	r0, .L445+36
 7787              	.LBB1530:
 7788              	.LBB1531:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7789              		.loc 8 67 46 view .LVU2158
 7790 046e C4ED018A 		vstr.32	s17, [r4, #4]
 7791              	.LBE1531:
 7792              	.LBE1530:
 7793              	.LBB1533:
 7794              	.LBB1521:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7795              		.loc 8 61 20 view .LVU2159
 7796 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 7797              	.LVL535:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7798              		.loc 8 61 20 view .LVU2160
 7799              	.LBE1521:
 7800              	.LBE1533:
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7801              		.loc 19 718 5 is_stmt 1 view .LVU2161
 7802              	.LBB1534:
 7803              	.LBI1530:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7804              		.loc 8 67 17 view .LVU2162
 7805              	.LBB1532:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7806              		.loc 8 67 41 view .LVU2163
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7807              		.loc 8 67 41 is_stmt 0 view .LVU2164
 7808              	.LBE1532:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 254


 7809              	.LBE1534:
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 7810              		.loc 19 725 5 is_stmt 1 view .LVU2165
 725:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 7811              		.loc 19 725 19 is_stmt 0 view .LVU2166
 7812 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7813              	.LVL536:
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 7814              		.loc 19 729 5 is_stmt 1 view .LVU2167
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 7815              		.loc 19 729 23 is_stmt 0 view .LVU2168
 7816 047a 1820     		movs	r0, #24
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7817              		.loc 19 737 17 view .LVU2169
 7818 047c 584C     		ldr	r4, .L445+40
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 7819              		.loc 19 729 23 view .LVU2170
 7820 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7821              	.LVL537:
 7822 0482 0346     		mov	r3, r0	@ movhi
 7823 0484 4D48     		ldr	r0, .L445+4
 7824 0486 ADF84030 		strh	r3, [sp, #64]	@ movhi
 7825 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7826              	.LVL538:
 7827 048e 1099     		ldr	r1, [sp, #64]
 7828 0490 5448     		ldr	r0, .L445+44
 7829 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7830              	.LVL539:
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7831              		.loc 19 730 5 is_stmt 1 view .LVU2171
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7832              		.loc 19 730 27 is_stmt 0 view .LVU2172
 7833 0496 5148     		ldr	r0, .L445+36
 7834 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7835              	.LVL540:
 7836 049c 5148     		ldr	r0, .L445+44
 7837 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7838              	.LVL541:
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7839              		.loc 19 731 5 is_stmt 1 view .LVU2173
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7840              		.loc 19 731 29 is_stmt 0 view .LVU2174
 7841 04a2 5048     		ldr	r0, .L445+44
 7842 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7843              	.LVL542:
 736:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 7844              		.loc 19 736 5 is_stmt 1 view .LVU2175
 736:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 7845              		.loc 19 736 18 is_stmt 0 view .LVU2176
 7846 04a8 4B48     		ldr	r0, .L445+32
 7847 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7848              	.LVL543:
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7849              		.loc 19 737 5 is_stmt 1 view .LVU2177
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7850              		.loc 19 737 17 is_stmt 0 view .LVU2178
 7851 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 255


 7852 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7853 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7854 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 745:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 7855              		.loc 19 745 5 is_stmt 1 view .LVU2179
 747:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 7856              		.loc 19 747 5 view .LVU2180
 747:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 7857              		.loc 19 747 28 is_stmt 0 view .LVU2181
 7858 04ba 0F20     		movs	r0, #15
 7859 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7860              	.LVL544:
 7861 04c0 0346     		mov	r3, r0	@ movhi
 7862 04c2 1CA8     		add	r0, sp, #112
 7863 04c4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7864 04c8 1199     		ldr	r1, [sp, #68]
 7865 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7866              	.LVL545:
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7867              		.loc 19 748 5 is_stmt 1 view .LVU2182
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7868              		.loc 19 748 28 is_stmt 0 view .LVU2183
 7869 04ce 1020     		movs	r0, #16
 7870 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7871              	.LVL546:
 7872 04d4 0346     		mov	r3, r0	@ movhi
 7873 04d6 0DF18100 		add	r0, sp, #129
 7874 04da ADF84830 		strh	r3, [sp, #72]	@ movhi
 7875 04de 1299     		ldr	r1, [sp, #72]
 7876 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7877              	.LVL547:
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7878              		.loc 19 749 5 is_stmt 1 view .LVU2184
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7879              		.loc 19 749 28 is_stmt 0 view .LVU2185
 7880 04e4 1120     		movs	r0, #17
 7881 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7882              	.LVL548:
 7883 04ea 0346     		mov	r3, r0	@ movhi
 7884 04ec 0DF19200 		add	r0, sp, #146
 7885 04f0 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7886 04f4 1399     		ldr	r1, [sp, #76]
 7887 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7888              	.LVL549:
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7889              		.loc 19 750 5 is_stmt 1 view .LVU2186
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7890              		.loc 19 750 28 is_stmt 0 view .LVU2187
 7891 04fa 1220     		movs	r0, #18
 7892 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7893              	.LVL550:
 7894 0500 0346     		mov	r3, r0	@ movhi
 7895 0502 0DF1A300 		add	r0, sp, #163
 7896 0506 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7897 050a 1499     		ldr	r1, [sp, #80]
 7898 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7899              	.LVL551:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 256


 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7900              		.loc 19 751 5 is_stmt 1 view .LVU2188
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7901              		.loc 19 751 28 is_stmt 0 view .LVU2189
 7902 0510 1320     		movs	r0, #19
 7903 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7904              	.LVL552:
 7905 0516 0346     		mov	r3, r0	@ movhi
 7906 0518 2DA8     		add	r0, sp, #180
 7907 051a ADF85430 		strh	r3, [sp, #84]	@ movhi
 7908 051e 1599     		ldr	r1, [sp, #84]
 7909 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7910              	.LVL553:
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7911              		.loc 19 752 5 is_stmt 1 view .LVU2190
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7912              		.loc 19 752 28 is_stmt 0 view .LVU2191
 7913 0524 1420     		movs	r0, #20
 7914 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7915              	.LVL554:
 7916 052a 0346     		mov	r3, r0	@ movhi
 7917 052c 0DF1C500 		add	r0, sp, #197
 7918 0530 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7919 0534 1699     		ldr	r1, [sp, #88]
 7920 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7921              	.LVL555:
 754:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 7922              		.loc 19 754 5 is_stmt 1 view .LVU2192
 754:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 7923              		.loc 19 754 28 is_stmt 0 view .LVU2193
 7924 053a 1620     		movs	r0, #22
 7925 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7926              	.LVL556:
 7927 0540 0346     		mov	r3, r0	@ movhi
 7928 0542 0DF1D600 		add	r0, sp, #214
 7929 0546 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7930 054a 1799     		ldr	r1, [sp, #92]
 7931 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7932              	.LVL557:
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7933              		.loc 19 755 5 is_stmt 1 view .LVU2194
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7934              		.loc 19 755 25 is_stmt 0 view .LVU2195
 7935 0550 1920     		movs	r0, #25
 7936 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7937              	.LVL558:
 7938 0556 0346     		mov	r3, r0	@ movhi
 7939 0558 0E20     		movs	r0, #14
 7940 055a ADF86030 		strh	r3, [sp, #96]	@ movhi
 7941 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7942              	.LVL559:
 7943 0562 0346     		mov	r3, r0	@ movhi
 7944 0564 0D20     		movs	r0, #13
 7945 0566 ADF86430 		strh	r3, [sp, #100]	@ movhi
 7946 056a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7947              	.LVL560:
 7948 056e 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 257


 7949 0570 0C20     		movs	r0, #12
 7950 0572 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7951 0576 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7952              	.LVL561:
 7953 057a BDF86810 		ldrh	r1, [sp, #104]
 7954 057e 0822     		movs	r2, #8
 7955 0580 199B     		ldr	r3, [sp, #100]
 7956 0582 ADF80400 		strh	r0, [sp, #4]	@ movhi
 7957 0586 0DF1E700 		add	r0, sp, #231
 7958 058a ADF80010 		strh	r1, [sp]	@ movhi
 7959 058e 1899     		ldr	r1, [sp, #96]
 7960 0590 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7961              	.LVL562:
 758:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 7962              		.loc 19 758 5 is_stmt 1 view .LVU2196
 758:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 7963              		.loc 19 758 16 is_stmt 0 view .LVU2197
 7964 0594 1CA9     		add	r1, sp, #112
 7965 0596 0623     		movs	r3, #6
 7966 0598 0822     		movs	r2, #8
 7967 059a 1348     		ldr	r0, .L445+48
 7968 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7969              	.LVL563:
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7970              		.loc 19 759 5 is_stmt 1 view .LVU2198
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7971              		.loc 19 759 17 is_stmt 0 view .LVU2199
 7972 05a0 1148     		ldr	r0, .L445+48
 7973 05a2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7974              	.LVL564:
 761:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 7975              		.loc 19 761 5 is_stmt 1 view .LVU2200
 761:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 7976              		.loc 19 761 25 is_stmt 0 view .LVU2201
 7977 05a6 3946     		mov	r1, r7
 7978 05a8 0448     		ldr	r0, .L445+4
 7979 05aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7980              	.LVL565:
 763:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 7981              		.loc 19 763 5 is_stmt 1 view .LVU2202
 763:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 7982              		.loc 19 763 18 is_stmt 0 view .LVU2203
 7983 05ae 0F49     		ldr	r1, .L445+52
 7984 05b0 0248     		ldr	r0, .L445+4
 7985 05b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7986              	.LVL566:
 7987              	.L440:
 767:Veno-Echo.cpp ****      for(;;)
 7988              		.loc 19 767 6 is_stmt 1 discriminator 1 view .LVU2204
 767:Veno-Echo.cpp ****      for(;;)
 7989              		.loc 19 767 6 discriminator 1 view .LVU2205
 767:Veno-Echo.cpp ****      for(;;)
 7990              		.loc 19 767 6 discriminator 1 view .LVU2206
 767:Veno-Echo.cpp ****      for(;;)
 7991              		.loc 19 767 6 discriminator 1 view .LVU2207
 7992 05b6 FEE7     		b	.L440
 7993              	.L446:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 258


 7994              		.align	2
 7995              	.L445:
 7996 05b8 00000000 		.word	.LANCHOR17
 7997 05bc 00000000 		.word	.LANCHOR4
 7998 05c0 00000000 		.word	.LANCHOR18
 7999 05c4 00004843 		.word	1128792064
 8000 05c8 3333333F 		.word	1060320051
 8001 05cc 00000000 		.word	.LANCHOR89
 8002 05d0 00000000 		.word	.LANCHOR90
 8003 05d4 0000C842 		.word	1120403456
 8004 05d8 00000000 		.word	.LANCHOR91
 8005 05dc 00000000 		.word	.LANCHOR56
 8006 05e0 00000000 		.word	.LANCHOR19
 8007 05e4 00000000 		.word	.LANCHOR55
 8008 05e8 18000000 		.word	.LANCHOR4+24
 8009 05ec 00000000 		.word	_ZL13AudioCallbackPfS_j
 8010              		.cfi_endproc
 8011              	.LFE4290:
 8013              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8014              		.align	1
 8015              		.p2align 2,,3
 8016              		.global	_Z13TurnOnAllLEDsv
 8017              		.syntax unified
 8018              		.thumb
 8019              		.thumb_func
 8020              		.fpu fpv5-d16
 8022              	_Z13TurnOnAllLEDsv:
 8023              	.LFB4313:
1742:Veno-Echo.cpp **** {
 8024              		.loc 19 1742 1 view -0
 8025              		.cfi_startproc
 8026              		@ args = 0, pretend = 0, frame = 0
 8027              		@ frame_needed = 0, uses_anonymous_args = 0
1743:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8028              		.loc 19 1743 5 view .LVU2209
1742:Veno-Echo.cpp **** {
 8029              		.loc 19 1742 1 is_stmt 0 view .LVU2210
 8030 0000 08B5     		push	{r3, lr}
 8031              		.cfi_def_cfa_offset 8
 8032              		.cfi_offset 3, -8
 8033              		.cfi_offset 14, -4
1743:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8034              		.loc 19 1743 26 view .LVU2211
 8035 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8036 0006 1148     		ldr	r0, .L449
 8037 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8038              	.LVL567:
1744:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8039              		.loc 19 1744 5 is_stmt 1 view .LVU2212
1744:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8040              		.loc 19 1744 28 is_stmt 0 view .LVU2213
 8041 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8042 0010 0F48     		ldr	r0, .L449+4
 8043 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8044              	.LVL568:
1745:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8045              		.loc 19 1745 5 is_stmt 1 view .LVU2214
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 259


1745:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8046              		.loc 19 1745 28 is_stmt 0 view .LVU2215
 8047 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8048 001a 0E48     		ldr	r0, .L449+8
 8049 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8050              	.LVL569:
1746:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8051              		.loc 19 1746 5 is_stmt 1 view .LVU2216
1746:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8052              		.loc 19 1746 21 is_stmt 0 view .LVU2217
 8053 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8054 0024 0C48     		ldr	r0, .L449+12
 8055 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8056              	.LVL570:
1747:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8057              		.loc 19 1747 5 is_stmt 1 view .LVU2218
1747:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8058              		.loc 19 1747 21 is_stmt 0 view .LVU2219
 8059 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8060 002e 0B48     		ldr	r0, .L449+16
 8061 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8062              	.LVL571:
1748:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8063              		.loc 19 1748 5 is_stmt 1 view .LVU2220
1748:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8064              		.loc 19 1748 19 is_stmt 0 view .LVU2221
 8065 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8066 0038 0948     		ldr	r0, .L449+20
 8067 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8068              	.LVL572:
1749:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8069              		.loc 19 1749 5 is_stmt 1 view .LVU2222
1749:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8070              		.loc 19 1749 19 is_stmt 0 view .LVU2223
 8071 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8072 0042 0848     		ldr	r0, .L449+24
1750:Veno-Echo.cpp **** }
 8073              		.loc 19 1750 1 view .LVU2224
 8074 0044 BDE80840 		pop	{r3, lr}
 8075              		.cfi_restore 14
 8076              		.cfi_restore 3
 8077              		.cfi_def_cfa_offset 0
1749:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8078              		.loc 19 1749 19 view .LVU2225
 8079 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8080              	.LVL573:
 8081              	.L450:
 8082              		.align	2
 8083              	.L449:
 8084 004c 00000000 		.word	.LANCHOR55
 8085 0050 04000000 		.word	.LANCHOR0+4
 8086 0054 04000000 		.word	.LANCHOR1+4
 8087 0058 00000000 		.word	.LANCHOR77
 8088 005c 00000000 		.word	.LANCHOR78
 8089 0060 00000000 		.word	.LANCHOR75
 8090 0064 00000000 		.word	.LANCHOR76
 8091              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 260


 8092              	.LFE4313:
 8094              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8095              		.align	1
 8096              		.p2align 2,,3
 8097              		.global	_Z12ResetAllLEDsv
 8098              		.syntax unified
 8099              		.thumb
 8100              		.thumb_func
 8101              		.fpu fpv5-d16
 8103              	_Z12ResetAllLEDsv:
 8104              	.LFB4314:
1753:Veno-Echo.cpp **** {
 8105              		.loc 19 1753 1 is_stmt 1 view -0
 8106              		.cfi_startproc
 8107              		@ args = 0, pretend = 0, frame = 0
 8108              		@ frame_needed = 0, uses_anonymous_args = 0
1754:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8109              		.loc 19 1754 5 view .LVU2227
1753:Veno-Echo.cpp **** {
 8110              		.loc 19 1753 1 is_stmt 0 view .LVU2228
 8111 0000 08B5     		push	{r3, lr}
 8112              		.cfi_def_cfa_offset 8
 8113              		.cfi_offset 3, -8
 8114              		.cfi_offset 14, -4
1754:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8115              		.loc 19 1754 26 view .LVU2229
 8116 0002 9FED1E0A 		vldr.32	s0, .L458
 8117 0006 1E48     		ldr	r0, .L458+4
 8118 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8119              	.LVL574:
1755:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8120              		.loc 19 1755 5 is_stmt 1 view .LVU2230
1755:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8121              		.loc 19 1755 28 is_stmt 0 view .LVU2231
 8122 000c 9FED1B0A 		vldr.32	s0, .L458
 8123 0010 1C48     		ldr	r0, .L458+8
 8124 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8125              	.LVL575:
1756:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8126              		.loc 19 1756 5 is_stmt 1 view .LVU2232
1756:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8127              		.loc 19 1756 28 is_stmt 0 view .LVU2233
 8128 0016 1C48     		ldr	r0, .L458+12
 8129 0018 9FED180A 		vldr.32	s0, .L458
 8130 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8131              	.LVL576:
1757:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8132              		.loc 19 1757 5 is_stmt 1 view .LVU2234
1757:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8133              		.loc 19 1757 26 is_stmt 0 view .LVU2235
 8134 0020 1A48     		ldr	r0, .L458+16
 8135 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8136              	.LVL577:
1757:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8137              		.loc 19 1757 5 view .LVU2236
 8138 0026 C8B9     		cbnz	r0, .L452
1759:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 261


 8139              		.loc 19 1759 9 is_stmt 1 view .LVU2237
1759:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
 8140              		.loc 19 1759 25 is_stmt 0 view .LVU2238
 8141 0028 1848     		ldr	r0, .L458+16
 8142 002a 9FED140A 		vldr.32	s0, .L458
 8143 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8144              	.LVL578:
1766:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 8145              		.loc 19 1766 5 is_stmt 1 view .LVU2239
1766:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 8146              		.loc 19 1766 26 is_stmt 0 view .LVU2240
 8147 0032 1748     		ldr	r0, .L458+20
 8148 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8149              	.LVL579:
1766:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 8150              		.loc 19 1766 5 view .LVU2241
 8151 0038 D0B9     		cbnz	r0, .L454
 8152              	.L457:
1768:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
 8153              		.loc 19 1768 9 is_stmt 1 view .LVU2242
1768:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
 8154              		.loc 19 1768 25 is_stmt 0 view .LVU2243
 8155 003a 9FED100A 		vldr.32	s0, .L458
 8156 003e 1448     		ldr	r0, .L458+20
 8157 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8158              	.LVL580:
 8159              	.L455:
1775:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
 8160              		.loc 19 1775 5 is_stmt 1 view .LVU2244
1775:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
 8161              		.loc 19 1775 19 is_stmt 0 view .LVU2245
 8162 0044 9FED0D0A 		vldr.32	s0, .L458
 8163 0048 1248     		ldr	r0, .L458+24
 8164 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8165              	.LVL581:
1776:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8166              		.loc 19 1776 5 is_stmt 1 view .LVU2246
1776:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8167              		.loc 19 1776 19 is_stmt 0 view .LVU2247
 8168 004e 9FED0B0A 		vldr.32	s0, .L458
 8169 0052 1148     		ldr	r0, .L458+28
1777:Veno-Echo.cpp **** }
 8170              		.loc 19 1777 1 view .LVU2248
 8171 0054 BDE80840 		pop	{r3, lr}
 8172              		.cfi_remember_state
 8173              		.cfi_restore 14
 8174              		.cfi_restore 3
 8175              		.cfi_def_cfa_offset 0
1776:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8176              		.loc 19 1776 19 view .LVU2249
 8177 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8178              	.LVL582:
 8179              	.L452:
 8180              		.cfi_restore_state
1763:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
 8181              		.loc 19 1763 8 is_stmt 1 view .LVU2250
1763:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 262


 8182              		.loc 19 1763 24 is_stmt 0 view .LVU2251
 8183 005c 0B48     		ldr	r0, .L458+16
 8184 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8185 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8186              	.LVL583:
1766:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 8187              		.loc 19 1766 5 is_stmt 1 view .LVU2252
1766:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 8188              		.loc 19 1766 26 is_stmt 0 view .LVU2253
 8189 0066 0A48     		ldr	r0, .L458+20
 8190 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8191              	.LVL584:
1766:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
 8192              		.loc 19 1766 5 view .LVU2254
 8193 006c 0028     		cmp	r0, #0
 8194 006e E4D0     		beq	.L457
 8195              	.L454:
1772:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
 8196              		.loc 19 1772 9 is_stmt 1 view .LVU2255
1772:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
 8197              		.loc 19 1772 25 is_stmt 0 view .LVU2256
 8198 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8199 0074 0648     		ldr	r0, .L458+20
 8200 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8201              	.LVL585:
 8202 007a E3E7     		b	.L455
 8203              	.L459:
 8204              		.align	2
 8205              	.L458:
 8206 007c 00000000 		.word	0
 8207 0080 00000000 		.word	.LANCHOR55
 8208 0084 04000000 		.word	.LANCHOR0+4
 8209 0088 04000000 		.word	.LANCHOR1+4
 8210 008c 00000000 		.word	.LANCHOR77
 8211 0090 00000000 		.word	.LANCHOR78
 8212 0094 00000000 		.word	.LANCHOR75
 8213 0098 00000000 		.word	.LANCHOR76
 8214              		.cfi_endproc
 8215              	.LFE4314:
 8217              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8218              		.align	1
 8219              		.p2align 2,,3
 8220              		.global	_Z14Update_Buttonsv
 8221              		.syntax unified
 8222              		.thumb
 8223              		.thumb_func
 8224              		.fpu fpv5-d16
 8226              	_Z14Update_Buttonsv:
 8227              	.LFB4308:
1371:Veno-Echo.cpp **** {  
 8228              		.loc 19 1371 1 is_stmt 1 view -0
 8229              		.cfi_startproc
 8230              		@ args = 0, pretend = 0, frame = 0
 8231              		@ frame_needed = 0, uses_anonymous_args = 0
1372:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8232              		.loc 19 1372 5 view .LVU2258
1373:Veno-Echo.cpp ****     static uint32_t resetTime{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 263


 8233              		.loc 19 1373 5 view .LVU2259
1374:Veno-Echo.cpp ****     static int buttonstate{};
 8234              		.loc 19 1374 5 view .LVU2260
1376:Veno-Echo.cpp ****     Rev_L_sw.update();
 8235              		.loc 19 1376 5 view .LVU2261
1371:Veno-Echo.cpp **** {  
 8236              		.loc 19 1371 1 is_stmt 0 view .LVU2262
 8237 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8238              		.cfi_def_cfa_offset 24
 8239              		.cfi_offset 3, -24
 8240              		.cfi_offset 4, -20
 8241              		.cfi_offset 5, -16
 8242              		.cfi_offset 6, -12
 8243              		.cfi_offset 7, -8
 8244              		.cfi_offset 14, -4
1376:Veno-Echo.cpp ****     Rev_L_sw.update();
 8245              		.loc 19 1376 20 view .LVU2263
 8246 0002 6748     		ldr	r0, .L509
 8247 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8248              	.LVL586:
1377:Veno-Echo.cpp ****     Rev_R_sw.update();
 8249              		.loc 19 1377 5 is_stmt 1 view .LVU2264
1377:Veno-Echo.cpp ****     Rev_R_sw.update();
 8250              		.loc 19 1377 20 is_stmt 0 view .LVU2265
 8251 0008 6648     		ldr	r0, .L509+4
 8252 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8253              	.LVL587:
1378:Veno-Echo.cpp ****     LPF_sw.update();
 8254              		.loc 19 1378 5 is_stmt 1 view .LVU2266
1378:Veno-Echo.cpp ****     LPF_sw.update();
 8255              		.loc 19 1378 18 is_stmt 0 view .LVU2267
 8256 000e 6648     		ldr	r0, .L509+8
 8257 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8258              	.LVL588:
1379:Veno-Echo.cpp ****     HPF_sw.update();
 8259              		.loc 19 1379 5 is_stmt 1 view .LVU2268
1382:Veno-Echo.cpp ****     ReverseGateL.Debounce();
 8260              		.loc 19 1382 26 is_stmt 0 view .LVU2269
 8261 0014 654C     		ldr	r4, .L509+12
1379:Veno-Echo.cpp ****     HPF_sw.update();
 8262              		.loc 19 1379 18 view .LVU2270
 8263 0016 6648     		ldr	r0, .L509+16
 8264 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8265              	.LVL589:
1380:Veno-Echo.cpp ****     Tap_Button.update();
 8266              		.loc 19 1380 5 is_stmt 1 view .LVU2271
1380:Veno-Echo.cpp ****     Tap_Button.update();
 8267              		.loc 19 1380 22 is_stmt 0 view .LVU2272
 8268 001c 6548     		ldr	r0, .L509+20
 8269 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8270              	.LVL590:
1382:Veno-Echo.cpp ****     ReverseGateL.Debounce();
 8271              		.loc 19 1382 5 is_stmt 1 view .LVU2273
1382:Veno-Echo.cpp ****     ReverseGateL.Debounce();
 8272              		.loc 19 1382 26 is_stmt 0 view .LVU2274
 8273 0022 2046     		mov	r0, r4
 8274 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 264


 8275              	.LVL591:
1383:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8276              		.loc 19 1383 5 is_stmt 1 view .LVU2275
1383:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8277              		.loc 19 1383 26 is_stmt 0 view .LVU2276
 8278 0028 6348     		ldr	r0, .L509+24
 8279 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8280              	.LVL592:
1385:Veno-Echo.cpp ****     Sync.Debounce();
 8281              		.loc 19 1385 5 is_stmt 1 view .LVU2277
1385:Veno-Echo.cpp ****     Sync.Debounce();
 8282              		.loc 19 1385 18 is_stmt 0 view .LVU2278
 8283 002e 6348     		ldr	r0, .L509+28
 8284 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8285              	.LVL593:
1386:Veno-Echo.cpp ****     ClockIn.Debounce();
 8286              		.loc 19 1386 5 is_stmt 1 view .LVU2279
1386:Veno-Echo.cpp ****     ClockIn.Debounce();
 8287              		.loc 19 1386 21 is_stmt 0 view .LVU2280
 8288 0034 6248     		ldr	r0, .L509+32
 8289 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8290              	.LVL594:
1388:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
 8291              		.loc 19 1388 5 is_stmt 1 view .LVU2281
 8292              		.loc 1 69 38 view .LVU2282
1388:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
 8293              		.loc 19 1388 5 is_stmt 0 view .LVU2283
 8294 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8295 003c 7F2B     		cmp	r3, #127
 8296 003e 00F09380 		beq	.L501
 8297              	.L461:
1394:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
 8298              		.loc 19 1394 5 is_stmt 1 view .LVU2284
 8299              	.LVL595:
 8300              		.loc 1 69 38 view .LVU2285
1394:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
 8301              		.loc 19 1394 32 is_stmt 0 view .LVU2286
 8302 0042 5D4B     		ldr	r3, .L509+24
1394:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
 8303              		.loc 19 1394 5 view .LVU2287
 8304 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8305 0046 7F2B     		cmp	r3, #127
 8306 0048 00F08A80 		beq	.L502
 8307              	.L462:
1402:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
 8308              		.loc 19 1402 5 is_stmt 1 view .LVU2288
1402:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
 8309              		.loc 19 1402 28 is_stmt 0 view .LVU2289
 8310 004c 5448     		ldr	r0, .L509
1404:Veno-Echo.cpp ****         buttonstate += 1;
 8311              		.loc 19 1404 21 view .LVU2290
 8312 004e 5D4C     		ldr	r4, .L509+36
1402:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
 8313              		.loc 19 1402 28 view .LVU2291
 8314 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8315              	.LVL596:
1402:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 265


 8316              		.loc 19 1402 5 view .LVU2292
 8317 0054 28B1     		cbz	r0, .L464
1404:Veno-Echo.cpp ****         buttonstate += 1;
 8318              		.loc 19 1404 9 is_stmt 1 view .LVU2293
1404:Veno-Echo.cpp ****         buttonstate += 1;
 8319              		.loc 19 1404 21 is_stmt 0 view .LVU2294
 8320 0056 2368     		ldr	r3, [r4]
 8321 0058 0133     		adds	r3, r3, #1
1405:Veno-Echo.cpp ****         if (buttonstate == 3)
 8322              		.loc 19 1405 9 view .LVU2295
 8323 005a 032B     		cmp	r3, #3
1404:Veno-Echo.cpp ****         buttonstate += 1;
 8324              		.loc 19 1404 21 view .LVU2296
 8325 005c 2360     		str	r3, [r4]
1405:Veno-Echo.cpp ****         if (buttonstate == 3)
 8326              		.loc 19 1405 9 is_stmt 1 view .LVU2297
 8327 005e 00F08C80 		beq	.L503
 8328              	.L464:
1411:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
 8329              		.loc 19 1411 5 view .LVU2298
1411:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
 8330              		.loc 19 1411 29 is_stmt 0 view .LVU2299
 8331 0062 4F48     		ldr	r0, .L509
 8332 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8333              	.LVL597:
1411:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
 8334              		.loc 19 1411 5 view .LVU2300
 8335 0068 10B1     		cbz	r0, .L466
1413:Veno-Echo.cpp ****         buttonstate -= 1;
 8336              		.loc 19 1413 9 is_stmt 1 view .LVU2301
1413:Veno-Echo.cpp ****         buttonstate -= 1;
 8337              		.loc 19 1413 21 is_stmt 0 view .LVU2302
 8338 006a 2368     		ldr	r3, [r4]
 8339 006c 013B     		subs	r3, r3, #1
 8340 006e 2360     		str	r3, [r4]
 8341              	.L466:
1416:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
 8342              		.loc 19 1416 5 is_stmt 1 view .LVU2303
1416:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
 8343              		.loc 19 1416 28 is_stmt 0 view .LVU2304
 8344 0070 4C48     		ldr	r0, .L509+4
 8345 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8346              	.LVL598:
1416:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
 8347              		.loc 19 1416 5 view .LVU2305
 8348 0076 20B1     		cbz	r0, .L468
1418:Veno-Echo.cpp ****         buttonstate += 1;
 8349              		.loc 19 1418 9 is_stmt 1 view .LVU2306
1418:Veno-Echo.cpp ****         buttonstate += 1;
 8350              		.loc 19 1418 21 is_stmt 0 view .LVU2307
 8351 0078 2368     		ldr	r3, [r4]
 8352 007a 0133     		adds	r3, r3, #1
1419:Veno-Echo.cpp ****         if (buttonstate == 3)
 8353              		.loc 19 1419 9 view .LVU2308
 8354 007c 032B     		cmp	r3, #3
1418:Veno-Echo.cpp ****         buttonstate += 1;
 8355              		.loc 19 1418 21 view .LVU2309
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 266


 8356 007e 2360     		str	r3, [r4]
1419:Veno-Echo.cpp ****         if (buttonstate == 3)
 8357              		.loc 19 1419 9 is_stmt 1 view .LVU2310
 8358 0080 76D0     		beq	.L504
 8359              	.L468:
1425:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
 8360              		.loc 19 1425 5 view .LVU2311
1425:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
 8361              		.loc 19 1425 29 is_stmt 0 view .LVU2312
 8362 0082 4848     		ldr	r0, .L509+4
 8363 0084 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8364              	.LVL599:
1425:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
 8365              		.loc 19 1425 5 view .LVU2313
 8366 0088 10B1     		cbz	r0, .L470
1427:Veno-Echo.cpp ****         buttonstate -= 1;
 8367              		.loc 19 1427 9 is_stmt 1 view .LVU2314
1427:Veno-Echo.cpp ****         buttonstate -= 1;
 8368              		.loc 19 1427 21 is_stmt 0 view .LVU2315
 8369 008a 2368     		ldr	r3, [r4]
 8370 008c 013B     		subs	r3, r3, #1
 8371 008e 2360     		str	r3, [r4]
 8372              	.L470:
1430:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
 8373              		.loc 19 1430 5 is_stmt 1 view .LVU2316
1430:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
 8374              		.loc 19 1430 30 is_stmt 0 view .LVU2317
 8375 0090 4848     		ldr	r0, .L509+20
 8376 0092 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8377              	.LVL600:
1430:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
 8378              		.loc 19 1430 5 view .LVU2318
 8379 0096 40BB     		cbnz	r0, .L471
 8380 0098 4B4D     		ldr	r5, .L509+40
 8381              	.L472:
1454:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
 8382              		.loc 19 1454 5 is_stmt 1 view .LVU2319
1454:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
 8383              		.loc 19 1454 31 is_stmt 0 view .LVU2320
 8384 009a 4648     		ldr	r0, .L509+20
 8385 009c FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8386              	.LVL601:
1454:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
 8387              		.loc 19 1454 5 view .LVU2321
 8388 00a0 38B1     		cbz	r0, .L476
1456:Veno-Echo.cpp ****         shift = false;
 8389              		.loc 19 1456 9 is_stmt 1 view .LVU2322
1457:Veno-Echo.cpp ****         buttonstate -= 1;
 8390              		.loc 19 1457 21 is_stmt 0 view .LVU2323
 8391 00a2 2368     		ldr	r3, [r4]
1456:Veno-Echo.cpp ****         shift = false;
 8392              		.loc 19 1456 15 view .LVU2324
 8393 00a4 0022     		movs	r2, #0
 8394 00a6 4948     		ldr	r0, .L509+44
1457:Veno-Echo.cpp ****         buttonstate -= 1;
 8395              		.loc 19 1457 21 view .LVU2325
 8396 00a8 013B     		subs	r3, r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 267


1458:Veno-Echo.cpp ****         mute = false;
 8397              		.loc 19 1458 14 view .LVU2326
 8398 00aa 4949     		ldr	r1, .L509+48
1456:Veno-Echo.cpp ****         shift = false;
 8399              		.loc 19 1456 15 view .LVU2327
 8400 00ac 0270     		strb	r2, [r0]
1457:Veno-Echo.cpp ****         buttonstate -= 1;
 8401              		.loc 19 1457 9 is_stmt 1 view .LVU2328
1457:Veno-Echo.cpp ****         buttonstate -= 1;
 8402              		.loc 19 1457 21 is_stmt 0 view .LVU2329
 8403 00ae 2360     		str	r3, [r4]
1458:Veno-Echo.cpp ****         mute = false;
 8404              		.loc 19 1458 9 is_stmt 1 view .LVU2330
1458:Veno-Echo.cpp ****         mute = false;
 8405              		.loc 19 1458 14 is_stmt 0 view .LVU2331
 8406 00b0 0A70     		strb	r2, [r1]
 8407              	.L476:
1461:Veno-Echo.cpp ****     if (Tap_Button.getState())
 8408              		.loc 19 1461 5 is_stmt 1 view .LVU2332
1461:Veno-Echo.cpp ****     if (Tap_Button.getState())
 8409              		.loc 19 1461 28 is_stmt 0 view .LVU2333
 8410 00b2 4048     		ldr	r0, .L509+20
 8411 00b4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8412              	.LVL602:
1461:Veno-Echo.cpp ****     if (Tap_Button.getState())
 8413              		.loc 19 1461 5 view .LVU2334
 8414 00b8 10B1     		cbz	r0, .L477
1465:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
 8415              		.loc 19 1465 13 is_stmt 1 view .LVU2335
1465:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
 8416              		.loc 19 1465 19 is_stmt 0 view .LVU2336
 8417 00ba 444B     		ldr	r3, .L509+44
 8418 00bc 0122     		movs	r2, #1
 8419 00be 1A70     		strb	r2, [r3]
 8420              	.L477:
1469:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
 8421              		.loc 19 1469 5 is_stmt 1 view .LVU2337
 8422 00c0 2368     		ldr	r3, [r4]
 8423 00c2 032B     		cmp	r3, #3
 8424 00c4 29D0     		beq	.L505
 8425              	.L479:
1491:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
 8426              		.loc 19 1491 5 view .LVU2338
1491:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
 8427              		.loc 19 1491 31 is_stmt 0 view .LVU2339
 8428 00c6 3D4B     		ldr	r3, .L509+28
 8429 00c8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8430              	.LBB1535:
 8431              	.LBI1535:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8432              		.loc 1 75 17 is_stmt 1 view .LVU2340
 8433              	.LVL603:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 268


 8434              	.LBB1536:
 8435              		.loc 1 75 35 view .LVU2341
 8436              		.loc 1 75 52 is_stmt 0 view .LVU2342
 8437 00ca A3F1FF02 		sub	r2, r3, #255
 8438              	.LBE1536:
 8439              	.LBE1535:
1493:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
 8440              		.loc 19 1493 5 view .LVU2343
 8441 00ce 7F2B     		cmp	r3, #127
 8442              	.LBB1538:
 8443              	.LBB1537:
 8444              		.loc 1 75 52 view .LVU2344
 8445 00d0 B2FA82F2 		clz	r2, r2
 8446 00d4 4FEA5212 		lsr	r2, r2, #5
 8447 00d8 2A70     		strb	r2, [r5]
 8448              	.LBE1537:
 8449              	.LBE1538:
1493:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
 8450              		.loc 19 1493 5 is_stmt 1 view .LVU2345
 8451              	.LVL604:
  69:../libdaisy/src/hid/switch.h **** 
 8452              		.loc 1 69 38 view .LVU2346
1493:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
 8453              		.loc 19 1493 5 is_stmt 0 view .LVU2347
 8454 00da 00D0     		beq	.L506
1502:Veno-Echo.cpp **** }
 8455              		.loc 19 1502 1 view .LVU2348
 8456 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8457              	.L506:
1498:Veno-Echo.cpp ****         delayL_flag = true;
 8458              		.loc 19 1498 9 is_stmt 1 view .LVU2349
1498:Veno-Echo.cpp ****         delayL_flag = true;
 8459              		.loc 19 1498 21 is_stmt 0 view .LVU2350
 8460 00de 0123     		movs	r3, #1
 8461 00e0 3C49     		ldr	r1, .L509+52
1499:Veno-Echo.cpp ****         delayR_flag = true;
 8462              		.loc 19 1499 21 view .LVU2351
 8463 00e2 3D4A     		ldr	r2, .L509+56
1498:Veno-Echo.cpp ****         delayL_flag = true;
 8464              		.loc 19 1498 21 view .LVU2352
 8465 00e4 0B70     		strb	r3, [r1]
1499:Veno-Echo.cpp ****         delayR_flag = true;
 8466              		.loc 19 1499 9 is_stmt 1 view .LVU2353
1499:Veno-Echo.cpp ****         delayR_flag = true;
 8467              		.loc 19 1499 21 is_stmt 0 view .LVU2354
 8468 00e6 1370     		strb	r3, [r2]
1502:Veno-Echo.cpp **** }
 8469              		.loc 19 1502 1 view .LVU2355
 8470 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8471              	.LVL605:
 8472              	.L471:
1432:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
 8473              		.loc 19 1432 9 is_stmt 1 view .LVU2356
1432:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
 8474              		.loc 19 1432 25 is_stmt 0 view .LVU2357
 8475 00ea 3C48     		ldr	r0, .L509+60
 8476 00ec FFF7FEFF 		bl	_ZN8Taptempo3tapEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 269


 8477              	.LVL606:
1432:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
 8478              		.loc 19 1432 9 view .LVU2358
 8479 00f0 0028     		cmp	r0, #0
 8480 00f2 47D1     		bne	.L507
 8481              	.L473:
1436:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 8482              		.loc 19 1436 9 is_stmt 1 view .LVU2359
1438:Veno-Echo.cpp ****         if(syncMode)
 8483              		.loc 19 1438 9 is_stmt 0 view .LVU2360
 8484 00f4 344D     		ldr	r5, .L509+40
1436:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 8485              		.loc 19 1436 33 view .LVU2361
 8486 00f6 3A48     		ldr	r0, .L509+64
 8487 00f8 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8488              	.LVL607:
1438:Veno-Echo.cpp ****         if(syncMode)
 8489              		.loc 19 1438 9 is_stmt 1 view .LVU2362
 8490 00fc 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8491 00fe 002B     		cmp	r3, #0
 8492 0100 47D1     		bne	.L508
 8493              	.L474:
1444:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
 8494              		.loc 19 1444 9 view .LVU2363
1444:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
 8495              		.loc 19 1444 35 is_stmt 0 view .LVU2364
 8496 0102 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8497              	.LVL608:
1445:Veno-Echo.cpp ****         buttonstate += 1;
 8498              		.loc 19 1445 9 is_stmt 1 view .LVU2365
1445:Veno-Echo.cpp ****         buttonstate += 1;
 8499              		.loc 19 1445 21 is_stmt 0 view .LVU2366
 8500 0106 2368     		ldr	r3, [r4]
 8501 0108 0133     		adds	r3, r3, #1
1447:Veno-Echo.cpp ****         if (buttonstate == 3)
 8502              		.loc 19 1447 9 view .LVU2367
 8503 010a 032B     		cmp	r3, #3
1445:Veno-Echo.cpp ****         buttonstate += 1;
 8504              		.loc 19 1445 21 view .LVU2368
 8505 010c 2360     		str	r3, [r4]
1447:Veno-Echo.cpp ****         if (buttonstate == 3)
 8506              		.loc 19 1447 9 is_stmt 1 view .LVU2369
 8507 010e C4D1     		bne	.L472
1449:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8508              		.loc 19 1449 13 view .LVU2370
1449:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8509              		.loc 19 1449 39 is_stmt 0 view .LVU2371
 8510 0110 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8511              	.LVL609:
1449:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8512              		.loc 19 1449 23 view .LVU2372
 8513 0114 334B     		ldr	r3, .L509+68
 8514 0116 1860     		str	r0, [r3]
 8515 0118 BFE7     		b	.L472
 8516              	.L505:
1478:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 8517              		.loc 19 1478 13 is_stmt 1 view .LVU2373
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 270


1478:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 8518              		.loc 19 1478 36 is_stmt 0 view .LVU2374
 8519 011a 324F     		ldr	r7, .L509+68
1478:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 8520              		.loc 19 1478 33 view .LVU2375
 8521 011c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8522              	.LVL610:
1478:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 8523              		.loc 19 1478 13 view .LVU2376
 8524 0120 40F6B833 		movw	r3, #3000
1478:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 8525              		.loc 19 1478 36 view .LVU2377
 8526 0124 3A68     		ldr	r2, [r7]
 8527 0126 801A     		subs	r0, r0, r2
1478:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
 8528              		.loc 19 1478 13 view .LVU2378
 8529 0128 9842     		cmp	r0, r3
 8530 012a CCD9     		bls	.L479
1480:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
 8531              		.loc 19 1480 17 is_stmt 1 view .LVU2379
1480:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
 8532              		.loc 19 1480 32 is_stmt 0 view .LVU2380
 8533 012c 1C48     		ldr	r0, .L509
 8534 012e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8535              	.LVL611:
1481:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8536              		.loc 19 1481 17 is_stmt 1 view .LVU2381
1481:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8537              		.loc 19 1481 32 is_stmt 0 view .LVU2382
 8538 0132 1C48     		ldr	r0, .L509+4
 8539 0134 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8540              	.LVL612:
1482:Veno-Echo.cpp ****                 ResetAllLEDs();
 8541              		.loc 19 1482 17 is_stmt 1 view .LVU2383
1486:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8542              		.loc 19 1486 29 is_stmt 0 view .LVU2384
 8543 0138 2B4E     		ldr	r6, .L509+72
1482:Veno-Echo.cpp ****                 ResetAllLEDs();
 8544              		.loc 19 1482 29 view .LVU2385
 8545 013a FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8546              	.LVL613:
1484:Veno-Echo.cpp ****                 shift = false;
 8547              		.loc 19 1484 17 is_stmt 1 view .LVU2386
1484:Veno-Echo.cpp ****                 shift = false;
 8548              		.loc 19 1484 23 is_stmt 0 view .LVU2387
 8549 013e 234B     		ldr	r3, .L509+44
 8550 0140 0022     		movs	r2, #0
1485:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8551              		.loc 19 1485 30 view .LVU2388
 8552 0142 2948     		ldr	r0, .L509+72
1486:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8553              		.loc 19 1486 29 view .LVU2389
 8554 0144 294C     		ldr	r4, .L509+76
1484:Veno-Echo.cpp ****                 shift = false;
 8555              		.loc 19 1484 23 view .LVU2390
 8556 0146 1A70     		strb	r2, [r3]
1485:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 271


 8557              		.loc 19 1485 17 is_stmt 1 view .LVU2391
1485:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8558              		.loc 19 1485 30 is_stmt 0 view .LVU2392
 8559 0148 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8560              	.LVL614:
1486:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8561              		.loc 19 1486 17 is_stmt 1 view .LVU2393
1486:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8562              		.loc 19 1486 29 is_stmt 0 view .LVU2394
 8563 014c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8564 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8565 0150 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 8566 0154 84E80F00 		stm	r4, {r0, r1, r2, r3}
1487:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8567              		.loc 19 1487 17 is_stmt 1 view .LVU2395
1487:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8568              		.loc 19 1487 43 is_stmt 0 view .LVU2396
 8569 0158 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8570              	.LVL615:
1487:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8571              		.loc 19 1487 27 view .LVU2397
 8572 015c 3860     		str	r0, [r7]
 8573 015e B2E7     		b	.L479
 8574              	.L502:
1396:Veno-Echo.cpp ****         Rev_R_sw.toggle();
 8575              		.loc 19 1396 9 is_stmt 1 view .LVU2398
1396:Veno-Echo.cpp ****         Rev_R_sw.toggle();
 8576              		.loc 19 1396 24 is_stmt 0 view .LVU2399
 8577 0160 1048     		ldr	r0, .L509+4
 8578 0162 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8579              	.LVL616:
 8580 0166 71E7     		b	.L462
 8581              	.LVL617:
 8582              	.L501:
1390:Veno-Echo.cpp ****         Rev_L_sw.toggle();
 8583              		.loc 19 1390 9 is_stmt 1 view .LVU2400
1390:Veno-Echo.cpp ****         Rev_L_sw.toggle();
 8584              		.loc 19 1390 24 is_stmt 0 view .LVU2401
 8585 0168 0D48     		ldr	r0, .L509
 8586 016a FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8587              	.LVL618:
 8588 016e 68E7     		b	.L461
 8589              	.LVL619:
 8590              	.L504:
1421:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8591              		.loc 19 1421 13 is_stmt 1 view .LVU2402
1421:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8592              		.loc 19 1421 39 is_stmt 0 view .LVU2403
 8593 0170 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8594              	.LVL620:
1421:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8595              		.loc 19 1421 23 view .LVU2404
 8596 0174 1B4B     		ldr	r3, .L509+68
 8597 0176 1860     		str	r0, [r3]
 8598 0178 83E7     		b	.L468
 8599              	.L503:
1407:Veno-Echo.cpp ****             resetTime = System::GetNow();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 272


 8600              		.loc 19 1407 13 is_stmt 1 view .LVU2405
1407:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8601              		.loc 19 1407 39 is_stmt 0 view .LVU2406
 8602 017a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8603              	.LVL621:
1407:Veno-Echo.cpp ****             resetTime = System::GetNow();
 8604              		.loc 19 1407 23 view .LVU2407
 8605 017e 194B     		ldr	r3, .L509+68
 8606 0180 1860     		str	r0, [r3]
 8607 0182 6EE7     		b	.L464
 8608              	.L507:
1434:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 8609              		.loc 19 1434 13 is_stmt 1 view .LVU2408
1434:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 8610              		.loc 19 1434 35 is_stmt 0 view .LVU2409
 8611 0184 1548     		ldr	r0, .L509+60
 8612 0186 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8613              	.LVL622:
 8614 018a 1548     		ldr	r0, .L509+64
 8615 018c FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8616              	.LVL623:
 8617 0190 B0E7     		b	.L473
 8618              	.L508:
1440:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 8619              		.loc 19 1440 13 is_stmt 1 view .LVU2410
1440:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
 8620              		.loc 19 1440 39 is_stmt 0 view .LVU2411
 8621 0192 1748     		ldr	r0, .L509+80
 8622 0194 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8623              	.LVL624:
1441:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8624              		.loc 19 1441 13 is_stmt 1 view .LVU2412
1441:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8625              		.loc 19 1441 39 is_stmt 0 view .LVU2413
 8626 0198 1648     		ldr	r0, .L509+84
 8627 019a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8628              	.LVL625:
 8629 019e B0E7     		b	.L474
 8630              	.L510:
 8631              		.align	2
 8632              	.L509:
 8633 01a0 00000000 		.word	.LANCHOR77
 8634 01a4 00000000 		.word	.LANCHOR78
 8635 01a8 00000000 		.word	.LANCHOR75
 8636 01ac 00000000 		.word	.LANCHOR80
 8637 01b0 00000000 		.word	.LANCHOR76
 8638 01b4 00000000 		.word	.LANCHOR79
 8639 01b8 00000000 		.word	.LANCHOR81
 8640 01bc 00000000 		.word	.LANCHOR82
 8641 01c0 00000000 		.word	.LANCHOR53
 8642 01c4 00000000 		.word	.LANCHOR92
 8643 01c8 00000000 		.word	.LANCHOR57
 8644 01cc 00000000 		.word	.LANCHOR8
 8645 01d0 00000000 		.word	.LANCHOR94
 8646 01d4 00000000 		.word	.LANCHOR60
 8647 01d8 00000000 		.word	.LANCHOR61
 8648 01dc 00000000 		.word	.LANCHOR56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 273


 8649 01e0 00000000 		.word	.LANCHOR55
 8650 01e4 00000000 		.word	.LANCHOR93
 8651 01e8 00000000 		.word	.LANCHOR91
 8652 01ec 00000000 		.word	.LANCHOR19
 8653 01f0 04000000 		.word	.LANCHOR0+4
 8654 01f4 04000000 		.word	.LANCHOR1+4
 8655              		.cfi_endproc
 8656              	.LFE4308:
 8658              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8659              		.align	1
 8660              		.p2align 2,,3
 8661              		.syntax unified
 8662              		.thumb
 8663              		.thumb_func
 8664              		.fpu fpv5-d16
 8666              	_ZL13AudioCallbackPfS_j:
 8667              	.LVL626:
 8668              	.LFB4288:
 241:Veno-Echo.cpp **** {
 8669              		.loc 19 241 1 is_stmt 1 view -0
 8670              		.cfi_startproc
 8671              		@ args = 0, pretend = 0, frame = 72
 8672              		@ frame_needed = 0, uses_anonymous_args = 0
 252:Veno-Echo.cpp **** static int Counter{};
 8673              		.loc 19 252 1 view .LVU2415
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8674              		.loc 19 270 1 view .LVU2416
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8675              		.loc 19 270 9 is_stmt 0 view .LVU2417
 8676 0000 DFF894C0 		ldr	ip, .L628+8
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8677              		.loc 19 270 20 view .LVU2418
 8678 0004 DCF80030 		ldr	r3, [ip]
 241:Veno-Echo.cpp **** {
 8679              		.loc 19 241 1 view .LVU2419
 8680 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8681              		.cfi_def_cfa_offset 36
 8682              		.cfi_offset 4, -36
 8683              		.cfi_offset 5, -32
 8684              		.cfi_offset 6, -28
 8685              		.cfi_offset 7, -24
 8686              		.cfi_offset 8, -20
 8687              		.cfi_offset 9, -16
 8688              		.cfi_offset 10, -12
 8689              		.cfi_offset 11, -8
 8690              		.cfi_offset 14, -4
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8691              		.loc 19 270 20 view .LVU2420
 8692 000c 0133     		adds	r3, r3, #1
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8693              		.loc 19 270 25 view .LVU2421
 8694 000e 204C     		ldr	r4, .L628
 241:Veno-Echo.cpp **** {
 8695              		.loc 19 241 1 view .LVU2422
 8696 0010 0646     		mov	r6, r0
 8697 0012 1546     		mov	r5, r2
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 274


 8698              		.loc 19 270 25 view .LVU2423
 8699 0014 84FB0302 		smull	r0, r2, r4, r3
 8700              	.LVL627:
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8701              		.loc 19 270 25 view .LVU2424
 8702 0018 DC17     		asrs	r4, r3, #31
 241:Veno-Echo.cpp **** {
 8703              		.loc 19 241 1 view .LVU2425
 8704 001a 0F46     		mov	r7, r1
 8705              	.LBB1628:
 8706              	.LBB1629:
 8707              	.LBB1630:
 8708              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 275


  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 276


 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 277


 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 278


 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 279


 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 280


 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 281


 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 8709              		.loc 23 419 24 view .LVU2426
 8710 001c 1D49     		ldr	r1, .L628+4
 8711              	.LVL628:
 8712              		.loc 23 419 24 view .LVU2427
 8713              	.LBE1630:
 8714              	.LBE1629:
 8715              	.LBE1628:
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8716              		.loc 19 270 25 view .LVU2428
 8717 001e 1A44     		add	r2, r2, r3
 8718 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8719 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8720 0028 1B1B     		subs	r3, r3, r4
 241:Veno-Echo.cpp **** {
 8721              		.loc 19 241 1 view .LVU2429
 8722 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8723              		.cfi_def_cfa_offset 92
 8724              		.cfi_offset 80, -92
 8725              		.cfi_offset 81, -88
 8726              		.cfi_offset 82, -84
 8727              		.cfi_offset 83, -80
 8728              		.cfi_offset 84, -76
 8729              		.cfi_offset 85, -72
 8730              		.cfi_offset 86, -68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 282


 8731              		.cfi_offset 87, -64
 8732              		.cfi_offset 88, -60
 8733              		.cfi_offset 89, -56
 8734              		.cfi_offset 90, -52
 8735              		.cfi_offset 91, -48
 8736              		.cfi_offset 92, -44
 8737              		.cfi_offset 93, -40
 270:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 8738              		.loc 19 270 9 view .LVU2430
 8739 002e CCF80030 		str	r3, [ip]
 272:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 8740              		.loc 19 272 1 is_stmt 1 view .LVU2431
 8741              	.LVL629:
 8742              	.LBB1635:
 8743              	.LBI1628:
 8744              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 283


  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8745              		.loc 24 87 5 view .LVU2432
 8746              	.LBE1635:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8747              		.loc 24 88 7 view .LVU2433
 8748              	.LBB1636:
 8749              	.LBB1633:
 8750              	.LBI1629:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8751              		.loc 23 413 7 view .LVU2434
 8752              	.LBB1631:
 8753              		.loc 23 419 24 is_stmt 0 view .LVU2435
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 284


 8754 0032 BFF35B8F 		dmb	ish
 8755 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8756              	.LBE1631:
 8757              	.LBE1633:
 8758              	.LBE1636:
 241:Veno-Echo.cpp **** {
 8759              		.loc 19 241 1 view .LVU2436
 8760 0038 93B0     		sub	sp, sp, #76
 8761              		.cfi_def_cfa_offset 168
 8762              	.LBB1637:
 8763              	.LBB1634:
 8764              	.LBB1632:
 8765              		.loc 23 419 24 view .LVU2437
 8766 003a BFF35B8F 		dmb	ish
 8767              	.LBE1632:
 8768              	.LBE1634:
 8769              	.LBE1637:
 272:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 8770              		.loc 19 272 1 view .LVU2438
 8771 003e B3B9     		cbnz	r3, .L512
 285:Veno-Echo.cpp ****         switch (Counter)
 8772              		.loc 19 285 9 is_stmt 1 view .LVU2439
 8773 0040 DCF80030 		ldr	r3, [ip]
 8774 0044 0E2B     		cmp	r3, #14
 8775 0046 12D8     		bhi	.L512
 8776 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8777              	.L514:
 8778 004c 2606     		.2byte	(.L528-.L514)/2
 8779 004e 1D06     		.2byte	(.L527-.L514)/2
 8780 0050 1906     		.2byte	(.L526-.L514)/2
 8781 0052 1006     		.2byte	(.L525-.L514)/2
 8782 0054 0C06     		.2byte	(.L524-.L514)/2
 8783 0056 0306     		.2byte	(.L523-.L514)/2
 8784 0058 FF05     		.2byte	(.L522-.L514)/2
 8785 005a F605     		.2byte	(.L521-.L514)/2
 8786 005c F205     		.2byte	(.L520-.L514)/2
 8787 005e E905     		.2byte	(.L519-.L514)/2
 8788 0060 E505     		.2byte	(.L518-.L514)/2
 8789 0062 DC05     		.2byte	(.L517-.L514)/2
 8790 0064 D805     		.2byte	(.L516-.L514)/2
 8791 0066 0F00     		.2byte	(.L515-.L514)/2
 8792 0068 D405     		.2byte	(.L513-.L514)/2
 8793              		.p2align 1
 8794              	.L515:
 340:Veno-Echo.cpp ****             case 13:
 8795              		.loc 19 340 13 view .LVU2440
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 8796              		.loc 19 341 17 view .LVU2441
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 8797              		.loc 19 341 37 is_stmt 0 view .LVU2442
 8798 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8799              	.LVL630:
 342:Veno-Echo.cpp ****             break;
 8800              		.loc 19 342 13 is_stmt 1 view .LVU2443
 8801              	.L512:
 8802              	.LBB1638:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 285


 8803              		.loc 19 350 25 discriminator 1 view .LVU2444
 8804 006e 002D     		cmp	r5, #0
 8805 0070 00F0A885 		beq	.L511
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 8806              		.loc 19 350 25 is_stmt 0 view .LVU2445
 8807 0074 0023     		movs	r3, #0
 8808 0076 013D     		subs	r5, r5, #1
 8809              	.LVL631:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 8810              		.loc 19 350 25 view .LVU2446
 8811 0078 DFF82080 		ldr	r8, .L628+12
 8812 007c B346     		mov	fp, r6
 8813 007e 0293     		str	r3, [sp, #8]
 8814 0080 25F00103 		bic	r3, r5, #1
 8815 0084 DFF81890 		ldr	r9, .L628+16
 8816 0088 0097     		str	r7, [sp]
 8817 008a 0593     		str	r3, [sp, #20]
 8818 008c 8FE0     		b	.L584
 8819              	.L629:
 8820 008e 00BF     		.align	2
 8821              	.L628:
 8822 0090 89888888 		.word	-2004318071
 8823 0094 00000000 		.word	.LANCHOR96
 8824 0098 00000000 		.word	.LANCHOR95
 8825 009c 00000000 		.word	.LANCHOR111
 8826 00a0 00000000 		.word	.LANCHOR112
 8827              	.LVL632:
 8828              	.L627:
 8829              	.LBB1639:
 8830              	.LBB1640:
 8831              	.LBB1641:
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8832              		.loc 19 1784 10 is_stmt 1 view .LVU2447
 8833 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8834              		.loc 19 1785 19 is_stmt 0 view .LVU2448
 8835 00a8 B4EE678A 		vcmp.f32	s16, s15
 8836 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8837 00b0 48BF     		it	mi
 8838 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8839              	.LVL633:
 8840              	.L566:
1789:Veno-Echo.cpp ****     return returnval;   
 8841              		.loc 19 1789 5 is_stmt 1 view .LVU2449
1789:Veno-Echo.cpp ****     return returnval;   
 8842              		.loc 19 1789 5 is_stmt 0 view .LVU2450
 8843              	.LBE1641:
 8844              	.LBE1640:
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 8845              		.loc 19 489 9 is_stmt 1 view .LVU2451
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 8846              		.loc 19 489 42 is_stmt 0 view .LVU2452
 8847 00b6 D848     		ldr	r0, .L630
 8848 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8849              	.LVL634:
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 8850              		.loc 19 489 21 view .LVU2453
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 286


 8851 00bc 11A9     		add	r1, sp, #68
 8852 00be D748     		ldr	r0, .L630+4
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 8853              		.loc 19 489 42 view .LVU2454
 8854 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 8855              		.loc 19 489 21 view .LVU2455
 8856 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8857              	.LVL635:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8858              		.loc 19 490 9 is_stmt 1 view .LVU2456
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8859              		.loc 19 490 42 is_stmt 0 view .LVU2457
 8860 00c8 D548     		ldr	r0, .L630+8
 8861 00ca B0EE480A 		vmov.f32	s0, s16
 8862 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8863              	.LVL636:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8864              		.loc 19 490 21 view .LVU2458
 8865 00d2 11A9     		add	r1, sp, #68
 8866 00d4 D348     		ldr	r0, .L630+12
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8867              		.loc 19 490 42 view .LVU2459
 8868 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8869              		.loc 19 490 21 view .LVU2460
 8870 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8871              	.LVL637:
 493:Veno-Echo.cpp ****         float mixL;
 8872              		.loc 19 493 9 is_stmt 1 view .LVU2461
 494:Veno-Echo.cpp ****         float mixR;
 8873              		.loc 19 494 9 view .LVU2462
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 8874              		.loc 19 496 9 view .LVU2463
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 8875              		.loc 19 496 53 is_stmt 0 view .LVU2464
 8876 00de 09AA     		add	r2, sp, #36
 8877 00e0 08A9     		add	r1, sp, #32
 8878 00e2 D148     		ldr	r0, .L630+16
 8879 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8880              	.LVL638:
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8881              		.loc 19 497 53 view .LVU2465
 8882 00e8 08AA     		add	r2, sp, #32
 8883 00ea 09A9     		add	r1, sp, #36
 8884 00ec CE48     		ldr	r0, .L630+16
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 8885              		.loc 19 496 81 view .LVU2466
 8886 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8887              		.loc 19 497 9 is_stmt 1 view .LVU2467
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8888              		.loc 19 497 53 is_stmt 0 view .LVU2468
 8889 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8890              	.LVL639:
 8891              	.LBB1643:
 8892              	.LBB1644:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 287


1782:Veno-Echo.cpp ****     if (input > limit)
 8893              		.loc 19 1782 5 view .LVU2469
 8894 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8895              	.LBE1644:
 8896              	.LBE1643:
 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 8897              		.loc 19 500 38 view .LVU2470
 8898 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 8899              		.loc 19 500 9 is_stmt 1 view .LVU2471
 8900              	.LVL640:
 8901              	.LBB1647:
 8902              	.LBI1643:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 8903              		.loc 19 1779 7 view .LVU2472
 8904              	.LBB1645:
1781:Veno-Echo.cpp ****     float returnval{};
 8905              		.loc 19 1781 5 view .LVU2473
1782:Veno-Echo.cpp ****     if (input > limit)
 8906              		.loc 19 1782 5 view .LVU2474
 8907 00fe F4EEC77A 		vcmpe.f32	s15, s14
 8908 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8909 0106 00F30285 		bgt	.L596
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8910              		.loc 19 1784 10 view .LVU2475
 8911 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8912              		.loc 19 1785 19 is_stmt 0 view .LVU2476
 8913 010e F4EE477A 		vcmp.f32	s15, s14
 8914 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8915 0116 48BF     		it	mi
 8916 0118 F0EE477A 		vmovmi.f32	s15, s14
 8917              	.LVL641:
 8918              	.L568:
1789:Veno-Echo.cpp ****     return returnval;   
 8919              		.loc 19 1789 5 is_stmt 1 view .LVU2477
1789:Veno-Echo.cpp ****     return returnval;   
 8920              		.loc 19 1789 5 is_stmt 0 view .LVU2478
 8921              	.LBE1645:
 8922              	.LBE1647:
 8923              	.LBB1648:
 8924              	.LBB1649:
1782:Veno-Echo.cpp ****     if (input > limit)
 8925              		.loc 19 1782 5 view .LVU2479
 8926 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8927              	.LBE1649:
 8928              	.LBE1648:
 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 8929              		.loc 19 500 27 view .LVU2480
 8930 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8931              		.loc 19 501 9 is_stmt 1 view .LVU2481
 8932              	.LVL642:
 8933              	.LBB1653:
 8934              	.LBI1648:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 8935              		.loc 19 1779 7 view .LVU2482
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 288


 8936              	.LBB1650:
1781:Veno-Echo.cpp ****     float returnval{};
 8937              		.loc 19 1781 5 view .LVU2483
1782:Veno-Echo.cpp ****     if (input > limit)
 8938              		.loc 19 1782 5 view .LVU2484
 8939 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8940 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8941 012c 00F35784 		bgt	.L597
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8942              		.loc 19 1784 10 view .LVU2485
 8943 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8944              	.LBE1650:
 8945              	.LBE1653:
 8946              	.LBB1654:
 503:Veno-Echo.cpp **** if(PostFilters)
 8947              		.loc 19 503 1 is_stmt 0 view .LVU2486
 8948 0134 BD4B     		ldr	r3, .L630+20
 8949 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8950              	.LBE1654:
 8951              	.LBB1676:
 8952              	.LBB1651:
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8953              		.loc 19 1785 19 view .LVU2487
 8954 0138 B4EE470A 		vcmp.f32	s0, s14
 8955 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8956 0140 48BF     		it	mi
 8957 0142 B0EE470A 		vmovmi.f32	s0, s14
 8958              	.LVL643:
1789:Veno-Echo.cpp ****     return returnval;   
 8959              		.loc 19 1789 5 is_stmt 1 view .LVU2488
1789:Veno-Echo.cpp ****     return returnval;   
 8960              		.loc 19 1789 5 is_stmt 0 view .LVU2489
 8961              	.LBE1651:
 8962              	.LBE1676:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8963              		.loc 19 501 27 view .LVU2490
 8964 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 503:Veno-Echo.cpp **** if(PostFilters)
 8965              		.loc 19 503 1 is_stmt 1 view .LVU2491
 8966              	.LBB1677:
 8967 014a 002B     		cmp	r3, #0
 8968 014c 40F05084 		bne	.L624
 8969              	.LVL644:
 8970              	.L572:
 503:Veno-Echo.cpp **** if(PostFilters)
 8971              		.loc 19 503 1 is_stmt 0 view .LVU2492
 8972              	.LBE1677:
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 8973              		.loc 19 544 9 is_stmt 1 view .LVU2493
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 8974              		.loc 19 544 19 is_stmt 0 view .LVU2494
 8975 0150 B74B     		ldr	r3, .L630+24
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 8976              		.loc 19 544 9 view .LVU2495
 8977 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 8978              		.loc 19 544 19 view .LVU2496
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 289


 8979 0156 93ED007A 		vldr.32	s14, [r3]
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 8980              		.loc 19 544 9 view .LVU2497
 8981 015a B4EEE67A 		vcmpe.f32	s14, s13
 8982 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8983 0162 40F12A84 		bpl	.L618
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 8984              		.loc 19 546 13 is_stmt 1 view .LVU2498
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 8985              		.loc 19 546 34 is_stmt 0 view .LVU2499
 8986 0166 37EE077A 		vadd.f32	s14, s14, s14
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 8987              		.loc 19 546 18 view .LVU2500
 8988 016a 9BED006A 		vldr.32	s12, [fp]
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8989              		.loc 19 547 18 view .LVU2501
 8990 016e DBED016A 		vldr.32	s13, [fp, #4]
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 8991              		.loc 19 546 18 view .LVU2502
 8992 0172 A7EE276A 		vfma.f32	s12, s14, s15
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8993              		.loc 19 547 18 view .LVU2503
 8994 0176 E7EE006A 		vfma.f32	s13, s14, s0
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 8995              		.loc 19 546 18 view .LVU2504
 8996 017a F0EE467A 		vmov.f32	s15, s12
 8997              	.LVL645:
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8998              		.loc 19 547 13 is_stmt 1 view .LVU2505
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8999              		.loc 19 547 18 is_stmt 0 view .LVU2506
 9000 017e B0EE660A 		vmov.f32	s0, s13
 9001              	.LVL646:
 9002              	.L578:
 561:Veno-Echo.cpp ****         if(mute)
 9003              		.loc 19 561 9 is_stmt 1 view .LVU2507
 9004 0182 AC4B     		ldr	r3, .L630+28
 9005 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9006 0186 002B     		cmp	r3, #0
 9007 0188 00F01084 		beq	.L581
 563:Veno-Echo.cpp ****             out[i] = 0.0f;
 9008              		.loc 19 563 13 view .LVU2508
 563:Veno-Echo.cpp ****             out[i] = 0.0f;
 9009              		.loc 19 563 20 is_stmt 0 view .LVU2509
 9010 018c 0023     		movs	r3, #0
 9011 018e 009A     		ldr	r2, [sp]
 9012 0190 1360     		str	r3, [r2]	@ float
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9013              		.loc 19 564 13 is_stmt 1 view .LVU2510
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9014              		.loc 19 564 22 is_stmt 0 view .LVU2511
 9015 0192 5360     		str	r3, [r2, #4]	@ float
 9016              	.L582:
 9017              	.LBE1639:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 9018              		.loc 19 350 5 is_stmt 1 discriminator 2 view .LVU2512
 9019 0194 009B     		ldr	r3, [sp]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 290


 9020 0196 0BF1080B 		add	fp, fp, #8
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 9021              		.loc 19 350 35 is_stmt 0 discriminator 2 view .LVU2513
 9022 019a 029A     		ldr	r2, [sp, #8]
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 9023              		.loc 19 350 25 discriminator 2 view .LVU2514
 9024 019c 0599     		ldr	r1, [sp, #20]
 9025 019e 0833     		adds	r3, r3, #8
 9026 01a0 8A42     		cmp	r2, r1
 9027 01a2 0093     		str	r3, [sp]
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 9028              		.loc 19 350 35 discriminator 2 view .LVU2515
 9029 01a4 02F10203 		add	r3, r2, #2
 9030              	.LVL647:
 350:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 9031              		.loc 19 350 25 is_stmt 1 discriminator 2 view .LVU2516
 9032 01a8 00F00C85 		beq	.L511
 9033 01ac 0293     		str	r3, [sp, #8]
 9034              	.LVL648:
 9035              	.L584:
 9036              	.LBB2013:
 352:Veno-Echo.cpp ****         UpdateClock(); 
 9037              		.loc 19 352 9 view .LVU2517
 352:Veno-Echo.cpp ****         UpdateClock(); 
 9038              		.loc 19 352 20 is_stmt 0 view .LVU2518
 9039 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 9040              	.LVL649:
 353:Veno-Echo.cpp ****         Update_Mod();
 9041              		.loc 19 353 9 is_stmt 1 view .LVU2519
 9042              	.LBB1678:
 9043              	.LBB1679:
 9044              	.LBB1680:
 9045              	.LBB1681:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 291


  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 292


 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9046              		.loc 18 174 71 is_stmt 0 view .LVU2520
 9047 01b2 DFF808A3 		ldr	r10, .L630+164
 9048              	.LBE1681:
 9049              	.LBE1680:
 9050              	.LBE1679:
 9051              	.LBE1678:
 353:Veno-Echo.cpp ****         Update_Mod();
 9052              		.loc 19 353 19 view .LVU2521
 9053 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 9054              	.LVL650:
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 9055              		.loc 19 355 9 is_stmt 1 view .LVU2522
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 9056              		.loc 19 355 51 is_stmt 0 view .LVU2523
 9057 01ba 9F48     		ldr	r0, .L630+32
 9058 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9059              	.LVL651:
 9060 01c0 0146     		mov	r1, r0
 9061 01c2 9E48     		ldr	r0, .L630+36
 9062              	.LBB1733:
 9063              	.LBB1716:
 9064              	.LBB1699:
 9065              	.LBB1682:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9066              		.loc 18 175 77 view .LVU2524
 9067 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 9068              	.LBE1682:
 9069              	.LBE1699:
 9070              	.LBE1716:
 9071              	.LBE1733:
 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 9072              		.loc 19 355 51 view .LVU2525
 9073 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9074              	.LVL652:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9075              		.loc 19 356 51 view .LVU2526
 9076 01cc 9C48     		ldr	r0, .L630+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 293


 355:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 9077              		.loc 19 355 51 view .LVU2527
 9078 01ce F0EE40BA 		vmov.f32	s23, s0
 9079              	.LVL653:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9080              		.loc 19 356 9 is_stmt 1 view .LVU2528
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9081              		.loc 19 356 51 is_stmt 0 view .LVU2529
 9082 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9083              	.LVL654:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9084              		.loc 19 356 51 view .LVU2530
 9085 01d6 0146     		mov	r1, r0
 9086 01d8 9A48     		ldr	r0, .L630+44
 9087 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9088              	.LVL655:
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 9089              		.loc 19 358 44 view .LVU2531
 9090 01de 9A48     		ldr	r0, .L630+48
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9091              		.loc 19 356 51 view .LVU2532
 9092 01e0 B0EE409A 		vmov.f32	s18, s0
 9093              	.LVL656:
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 9094              		.loc 19 358 9 is_stmt 1 view .LVU2533
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 9095              		.loc 19 358 44 is_stmt 0 view .LVU2534
 9096 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9097              	.LVL657:
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 9098              		.loc 19 358 44 view .LVU2535
 9099 01e8 0146     		mov	r1, r0
 9100 01ea 9848     		ldr	r0, .L630+52
 9101 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9102              	.LVL658:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9103              		.loc 19 359 44 view .LVU2536
 9104 01f0 9748     		ldr	r0, .L630+56
 358:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 9105              		.loc 19 358 44 view .LVU2537
 9106 01f2 B0EE408A 		vmov.f32	s16, s0
 9107              	.LVL659:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9108              		.loc 19 359 9 is_stmt 1 view .LVU2538
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9109              		.loc 19 359 44 is_stmt 0 view .LVU2539
 9110 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9111              	.LVL660:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9112              		.loc 19 359 44 view .LVU2540
 9113 01fa 0146     		mov	r1, r0
 9114 01fc 9548     		ldr	r0, .L630+60
 9115 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9116              	.LVL661:
 9117              	.LBB1734:
 9118              	.LBB1735:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 294


 9119              		.loc 10 60 42 view .LVU2541
 9120 0202 9548     		ldr	r0, .L630+64
 9121              	.LBE1735:
 9122              	.LBE1734:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 9123              		.loc 19 382 49 view .LVU2542
 9124 0204 954B     		ldr	r3, .L630+68
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9125              		.loc 19 359 44 view .LVU2543
 9126 0206 F0EE407A 		vmov.f32	s15, s0
 9127              	.LVL662:
 362:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 9128              		.loc 19 362 9 is_stmt 1 view .LVU2544
 9129              	.LBB1737:
 9130              	.LBI1734:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9131              		.loc 10 60 17 view .LVU2545
 9132              	.LBB1736:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9133              		.loc 10 60 37 view .LVU2546
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9134              		.loc 10 60 42 is_stmt 0 view .LVU2547
 9135 020a C0ED00BA 		vstr.32	s23, [r0]
 9136              	.LVL663:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9137              		.loc 10 60 42 view .LVU2548
 9138              	.LBE1736:
 9139              	.LBE1737:
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9140              		.loc 19 363 9 is_stmt 1 view .LVU2549
 9141              	.LBB1738:
 9142              	.LBI1738:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9143              		.loc 10 60 17 view .LVU2550
 9144              	.LBB1739:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9145              		.loc 10 60 37 view .LVU2551
 9146              	.LBE1739:
 9147              	.LBE1738:
 9148              	.LBB1742:
 9149              	.LBB1717:
 9150              	.LBB1700:
 9151              	.LBB1683:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9152              		.loc 18 174 82 is_stmt 0 view .LVU2552
 9153 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 9154              	.LBE1683:
 9155              	.LBE1700:
 9156              	.LBE1717:
 9157              	.LBE1742:
 9158              	.LBB1743:
 9159              	.LBB1740:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9160              		.loc 10 60 42 view .LVU2553
 9161 0212 9348     		ldr	r0, .L630+72
 9162              	.LBE1740:
 9163              	.LBE1743:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 295


 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 9164              		.loc 19 382 49 view .LVU2554
 9165 0214 1D68     		ldr	r5, [r3]
 9166              	.LBB1744:
 9167              	.LBB1741:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9168              		.loc 10 60 42 view .LVU2555
 9169 0216 80ED009A 		vstr.32	s18, [r0]
 9170              	.LVL664:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9171              		.loc 10 60 42 view .LVU2556
 9172              	.LBE1741:
 9173              	.LBE1744:
 365:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 9174              		.loc 19 365 9 is_stmt 1 view .LVU2557
 9175              	.LBB1745:
 9176              	.LBI1745:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9177              		.loc 10 60 17 view .LVU2558
 9178              	.LBB1746:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9179              		.loc 10 60 37 view .LVU2559
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9180              		.loc 10 60 42 is_stmt 0 view .LVU2560
 9181 021a 9248     		ldr	r0, .L630+76
 9182              	.LBE1746:
 9183              	.LBE1745:
 9184              	.LBB1748:
 9185              	.LBB1718:
 9186              	.LBB1701:
 9187              	.LBB1684:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9188              		.loc 18 174 71 view .LVU2561
 9189 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9190              		.loc 18 174 46 view .LVU2562
 9191 0220 9FED91AA 		vldr.32	s20, .L630+80
 9192              	.LBE1684:
 9193              	.LBE1701:
 9194              	.LBE1718:
 9195              	.LBE1748:
 9196              	.LBB1749:
 9197              	.LBB1747:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9198              		.loc 10 60 42 view .LVU2563
 9199 0224 80ED008A 		vstr.32	s16, [r0]
 9200              	.LVL665:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9201              		.loc 10 60 42 view .LVU2564
 9202              	.LBE1747:
 9203              	.LBE1749:
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9204              		.loc 19 366 9 is_stmt 1 view .LVU2565
 9205              	.LBB1750:
 9206              	.LBI1750:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9207              		.loc 10 60 17 view .LVU2566
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 296


 9208              	.LBB1751:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9209              		.loc 10 60 37 view .LVU2567
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9210              		.loc 10 60 42 is_stmt 0 view .LVU2568
 9211 0228 9048     		ldr	r0, .L630+84
 9212              	.LBE1751:
 9213              	.LBE1750:
 9214              	.LBB1753:
 9215              	.LBB1719:
 9216              	.LBB1702:
 9217              	.LBB1685:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9218              		.loc 18 174 71 view .LVU2569
 9219 022a 93ED00BA 		vldr.32	s22, [r3]
 9220              	.LBE1685:
 9221              	.LBE1702:
 9222              	.LBE1719:
 9223              	.LBE1753:
 9224              	.LBB1754:
 9225              	.LBB1752:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9226              		.loc 10 60 42 view .LVU2570
 9227 022e 80ED008A 		vstr.32	s16, [r0]
 9228              	.LVL666:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9229              		.loc 10 60 42 view .LVU2571
 9230              	.LBE1752:
 9231              	.LBE1754:
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9232              		.loc 19 367 9 is_stmt 1 view .LVU2572
 9233              	.LBB1755:
 9234              	.LBI1755:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9235              		.loc 10 60 17 view .LVU2573
 9236              	.LBB1756:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9237              		.loc 10 60 37 view .LVU2574
 9238              	.LBE1756:
 9239              	.LBE1755:
 9240              	.LBB1759:
 9241              	.LBB1760:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9242              		.loc 10 60 42 is_stmt 0 view .LVU2575
 9243 0232 8F48     		ldr	r0, .L630+88
 9244              	.LBE1760:
 9245              	.LBE1759:
 9246              	.LBB1763:
 9247              	.LBB1720:
 9248              	.LBB1703:
 9249              	.LBB1686:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9250              		.loc 18 174 46 view .LVU2576
 9251 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 9252              	.LVL667:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9253              		.loc 18 174 71 view .LVU2577
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 297


 9254 0238 0493     		str	r3, [sp, #16]
 9255              		.loc 18 175 77 view .LVU2578
 9256 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 9257              	.LBE1686:
 9258              	.LBE1703:
 9259              	.LBE1720:
 9260              	.LBE1763:
 9261              	.LBB1764:
 9262              	.LBB1761:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9263              		.loc 10 60 42 view .LVU2579
 9264 023e 80ED008A 		vstr.32	s16, [r0]
 9265              	.LBE1761:
 9266              	.LBE1764:
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 9267              		.loc 19 375 27 view .LVU2580
 9268 0242 8C4B     		ldr	r3, .L630+92
 9269              	.LBB1765:
 9270              	.LBB1766:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9271              		.loc 10 60 42 view .LVU2581
 9272 0244 8C48     		ldr	r0, .L630+96
 9273              	.LBE1766:
 9274              	.LBE1765:
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 9275              		.loc 19 375 27 view .LVU2582
 9276 0246 1B68     		ldr	r3, [r3]	@ float
 9277              	.LBB1769:
 9278              	.LBB1767:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9279              		.loc 10 60 42 view .LVU2583
 9280 0248 80ED008A 		vstr.32	s16, [r0]
 9281              	.LBE1767:
 9282              	.LBE1769:
 9283              	.LBB1770:
 9284              	.LBB1757:
 9285 024c 8B48     		ldr	r0, .L630+100
 9286              	.LBE1757:
 9287              	.LBE1770:
 9288              	.LBB1771:
 9289              	.LBB1721:
 9290              	.LBB1704:
 9291              	.LBB1687:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9292              		.loc 18 174 103 view .LVU2584
 9293 024e DFED8C9A 		vldr.32	s19, .L630+104
 9294              	.LBE1687:
 9295              	.LBE1704:
 9296              	.LBE1721:
 9297              	.LBE1771:
 9298              	.LBB1772:
 9299              	.LBB1758:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9300              		.loc 10 60 42 view .LVU2585
 9301 0252 C0ED007A 		vstr.32	s15, [r0]
 9302              	.LVL668:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 298


 9303              		.loc 10 60 42 view .LVU2586
 9304              	.LBE1758:
 9305              	.LBE1772:
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9306              		.loc 19 368 9 is_stmt 1 view .LVU2587
 9307              	.LBB1773:
 9308              	.LBI1773:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9309              		.loc 10 60 17 view .LVU2588
 9310              	.LBB1774:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9311              		.loc 10 60 37 view .LVU2589
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9312              		.loc 10 60 42 is_stmt 0 view .LVU2590
 9313 0256 8B48     		ldr	r0, .L630+108
 9314              	.LBE1774:
 9315              	.LBE1773:
 9316              	.LBB1776:
 9317              	.LBB1722:
 9318              	.LBB1705:
 9319              	.LBB1688:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9320              		.loc 18 174 98 view .LVU2591
 9321 0258 9FED8B9A 		vldr.32	s18, .L630+112
 9322              	.LVL669:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9323              		.loc 18 174 98 view .LVU2592
 9324              	.LBE1688:
 9325              	.LBE1705:
 9326              	.LBE1722:
 9327              	.LBE1776:
 9328              	.LBB1777:
 9329              	.LBB1775:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9330              		.loc 10 60 42 view .LVU2593
 9331 025c C0ED007A 		vstr.32	s15, [r0]
 9332              	.LVL670:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9333              		.loc 10 60 42 view .LVU2594
 9334              	.LBE1775:
 9335              	.LBE1777:
 370:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 9336              		.loc 19 370 9 is_stmt 1 view .LVU2595
 9337              	.LBB1778:
 9338              	.LBI1759:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9339              		.loc 10 60 17 view .LVU2596
 9340              	.LBB1762:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9341              		.loc 10 60 37 view .LVU2597
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9342              		.loc 10 60 37 is_stmt 0 view .LVU2598
 9343              	.LBE1762:
 9344              	.LBE1778:
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 9345              		.loc 19 371 9 is_stmt 1 view .LVU2599
 9346              	.LBB1779:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 299


 9347              	.LBI1765:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9348              		.loc 10 60 17 view .LVU2600
 9349              	.LBB1768:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9350              		.loc 10 60 37 view .LVU2601
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9351              		.loc 10 60 37 is_stmt 0 view .LVU2602
 9352              	.LBE1768:
 9353              	.LBE1779:
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 9354              		.loc 19 372 9 is_stmt 1 view .LVU2603
 9355              	.LBB1780:
 9356              	.LBI1780:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9357              		.loc 10 60 17 view .LVU2604
 9358              	.LBB1781:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9359              		.loc 10 60 37 view .LVU2605
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9360              		.loc 10 60 42 is_stmt 0 view .LVU2606
 9361 0260 8A48     		ldr	r0, .L630+116
 9362              	.LBE1781:
 9363              	.LBE1780:
 9364              	.LBB1783:
 9365              	.LBB1723:
 9366              	.LBB1706:
 9367              	.LBB1689:
 162:delayline_reverse.h **** 
 9368              		.loc 18 162 23 view .LVU2607
 9369 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 9370              	.LBE1689:
 9371              	.LBE1706:
 9372              	.LBE1723:
 9373              	.LBE1783:
 9374              	.LBB1784:
 9375              	.LBB1782:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9376              		.loc 10 60 42 view .LVU2608
 9377 0266 C0ED007A 		vstr.32	s15, [r0]
 9378              	.LVL671:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9379              		.loc 10 60 42 view .LVU2609
 9380              	.LBE1782:
 9381              	.LBE1784:
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 9382              		.loc 19 373 9 is_stmt 1 view .LVU2610
 9383              	.LBB1785:
 9384              	.LBI1785:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9385              		.loc 10 60 17 view .LVU2611
 9386              	.LBB1786:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9387              		.loc 10 60 37 view .LVU2612
 9388              	.LBE1786:
 9389              	.LBE1785:
 9390              	.LBB1789:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 300


 9391              	.LBB1724:
 9392              	.LBB1707:
 9393              	.LBB1690:
 162:delayline_reverse.h **** 
 9394              		.loc 18 162 11 is_stmt 0 view .LVU2613
 9395 026a 05EB8702 		add	r2, r5, r7, lsl #2
 9396              	.LBE1690:
 9397              	.LBE1707:
 9398              	.LBE1724:
 9399              	.LBE1789:
 9400              	.LBB1790:
 9401              	.LBB1787:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9402              		.loc 10 60 42 view .LVU2614
 9403 026e 8848     		ldr	r0, .L630+120
 9404              	.LBE1787:
 9405              	.LBE1790:
 9406              	.LBB1791:
 9407              	.LBB1725:
 9408              	.LBB1708:
 9409              	.LBB1691:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9410              		.loc 18 161 11 view .LVU2615
 9411 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 9412              		.loc 18 162 11 view .LVU2616
 9413 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 9414              	.LBE1691:
 9415              	.LBE1708:
 9416              	.LBE1725:
 9417              	.LBE1791:
 9418              	.LBB1792:
 9419              	.LBB1793:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9420              		.loc 10 60 42 view .LVU2617
 9421 0278 864A     		ldr	r2, .L630+124
 9422              	.LBE1793:
 9423              	.LBE1792:
 9424              	.LBB1795:
 9425              	.LBB1788:
 9426 027a C0ED007A 		vstr.32	s15, [r0]
 9427              	.LVL672:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9428              		.loc 10 60 42 view .LVU2618
 9429              	.LBE1788:
 9430              	.LBE1795:
 375:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 9431              		.loc 19 375 9 is_stmt 1 view .LVU2619
 9432              	.LBB1796:
 9433              	.LBI1792:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9434              		.loc 10 60 17 view .LVU2620
 9435              	.LBB1794:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9436              		.loc 10 60 37 view .LVU2621
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9437              		.loc 10 60 42 is_stmt 0 view .LVU2622
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 301


 9438 027e 1360     		str	r3, [r2]	@ float
 9439              	.LVL673:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9440              		.loc 10 60 42 view .LVU2623
 9441              	.LBE1794:
 9442              	.LBE1796:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9443              		.loc 19 376 9 is_stmt 1 view .LVU2624
 9444              	.LBB1797:
 9445              	.LBI1797:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9446              		.loc 10 60 17 view .LVU2625
 9447              	.LBB1798:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9448              		.loc 10 60 37 view .LVU2626
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9449              		.loc 10 60 42 is_stmt 0 view .LVU2627
 9450 0280 854A     		ldr	r2, .L630+128
 9451              	.LBE1798:
 9452              	.LBE1797:
 9453              	.LBB1800:
 9454              	.LBB1726:
 9455              	.LBB1709:
 9456              	.LBB1692:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9457              		.loc 18 161 11 view .LVU2628
 9458 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 9459              	.LBE1692:
 9460              	.LBE1709:
 9461              	.LBE1726:
 9462              	.LBE1800:
 9463              	.LBB1801:
 9464              	.LBB1799:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9465              		.loc 10 60 42 view .LVU2629
 9466 0286 1360     		str	r3, [r2]	@ float
 9467              	.LVL674:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9468              		.loc 10 60 42 view .LVU2630
 9469              	.LBE1799:
 9470              	.LBE1801:
 378:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 9471              		.loc 19 378 9 is_stmt 1 view .LVU2631
 9472              	.LBB1802:
 9473              	.LBI1802:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9474              		.loc 10 60 17 view .LVU2632
 9475              	.LBB1803:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9476              		.loc 10 60 37 view .LVU2633
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9477              		.loc 10 60 42 is_stmt 0 view .LVU2634
 9478 0288 844A     		ldr	r2, .L630+132
 9479 028a 1360     		str	r3, [r2]	@ float
 9480              	.LVL675:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9481              		.loc 10 60 42 view .LVU2635
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 302


 9482              	.LBE1803:
 9483              	.LBE1802:
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 9484              		.loc 19 379 9 is_stmt 1 view .LVU2636
 9485              	.LBB1804:
 9486              	.LBI1804:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9487              		.loc 10 60 17 view .LVU2637
 9488              	.LBB1805:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9489              		.loc 10 60 37 view .LVU2638
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9490              		.loc 10 60 42 is_stmt 0 view .LVU2639
 9491 028c 844A     		ldr	r2, .L630+136
 9492 028e 1360     		str	r3, [r2]	@ float
 9493              	.LVL676:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9494              		.loc 10 60 42 view .LVU2640
 9495              	.LBE1805:
 9496              	.LBE1804:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 9497              		.loc 19 382 9 is_stmt 1 view .LVU2641
 9498              	.LBB1806:
 9499              	.LBI1678:
  79:Veno-Echo.cpp ****     float Read()
 9500              		.loc 19 79 11 view .LVU2642
 9501              	.LBB1727:
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
 9502              		.loc 19 82 9 view .LVU2643
 9503              	.LBB1710:
 9504              	.LBI1680:
 159:delayline_reverse.h ****     {
 9505              		.loc 18 159 20 view .LVU2644
 9506              	.LBB1693:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9507              		.loc 18 174 46 is_stmt 0 view .LVU2645
 9508 0290 FFF7FEFF 		bl	sinf
 9509              	.LVL677:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9510              		.loc 18 174 46 view .LVU2646
 9511 0294 F0EE40BA 		vmov.f32	s23, s0
 9512              	.LVL678:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9513              		.loc 18 174 103 view .LVU2647
 9514 0298 2BEE290A 		vmul.f32	s0, s22, s19
 9515 029c FFF7FEFF 		bl	sinf
 9516              	.LVL679:
 9517 02a0 B0EE408A 		vmov.f32	s16, s0
 9518              	.LVL680:
 9519              		.loc 18 175 46 view .LVU2648
 9520 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 9521 02a8 FFF7FEFF 		bl	sinf
 9522              	.LVL681:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9523              		.loc 18 174 98 view .LVU2649
 9524 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 303


 9525              		.loc 18 174 82 view .LVU2650
 9526 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 9527              	.LVL682:
 9528              		.loc 18 175 46 view .LVU2651
 9529 02b4 F0EE40BA 		vmov.f32	s23, s0
 9530              		.loc 18 175 112 view .LVU2652
 9531 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 9532 02bc FFF7FEFF 		bl	sinf
 9533              	.LVL683:
 9534              		.loc 18 175 107 view .LVU2653
 9535 02c0 60EE097A 		vmul.f32	s15, s0, s18
 9536              	.LBE1693:
 9537              	.LBE1710:
 9538              	.LBE1727:
 9539              	.LBE1806:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9540              		.loc 19 383 49 view .LVU2654
 9541 02c4 774B     		ldr	r3, .L630+140
 9542              	.LBB1807:
 9543              	.LBB1728:
 9544              	.LBB1711:
 9545              	.LBB1694:
 9546              		.loc 18 175 91 view .LVU2655
 9547 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 9548              	.LVL684:
 9549              		.loc 18 175 91 view .LVU2656
 9550              	.LBE1694:
 9551              	.LBE1711:
 9552              	.LBE1728:
 9553              	.LBE1807:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9554              		.loc 19 383 49 view .LVU2657
 9555 02ca 1C68     		ldr	r4, [r3]
 9556              	.LBB1808:
 9557              	.LBB1729:
 9558              	.LBB1712:
 9559              	.LBB1695:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9560              		.loc 18 174 9 view .LVU2658
 9561 02cc 38EE088A 		vadd.f32	s16, s16, s16
 9562              	.LVL685:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9563              		.loc 18 174 9 view .LVU2659
 9564              	.LBE1695:
 9565              	.LBE1712:
 9566              	.LBE1729:
 9567              	.LBE1808:
 9568              	.LBB1809:
 9569              	.LBB1810:
 9570              	.LBB1811:
 9571              	.LBB1812:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9572              		.loc 18 174 71 view .LVU2660
 9573 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 9574              		.loc 18 162 11 view .LVU2661
 9575 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 304


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9576              		.loc 18 174 71 view .LVU2662
 9577 02d8 91ED00CA 		vldr.32	s24, [r1]
 9578              	.LBE1812:
 9579              	.LBE1811:
 9580              	.LBE1810:
 9581              	.LBE1809:
 9582              	.LBB1843:
 9583              	.LBB1730:
 9584              	.LBB1713:
 9585              	.LBB1696:
 9586              		.loc 18 175 9 view .LVU2663
 9587 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 9588              	.LVL686:
 9589              		.loc 18 175 9 view .LVU2664
 9590              	.LBE1696:
 9591              	.LBE1713:
 9592              	.LBE1730:
 9593              	.LBE1843:
 9594              	.LBB1844:
 9595              	.LBB1833:
 9596              	.LBB1823:
 9597              	.LBB1813:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9598              		.loc 18 161 11 view .LVU2665
 9599 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9600              		.loc 18 162 11 view .LVU2666
 9601 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9602              		.loc 18 175 77 view .LVU2667
 9603 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9604              		.loc 18 174 46 view .LVU2668
 9605 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9606              		.loc 18 161 11 view .LVU2669
 9607 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9608              	.LBE1813:
 9609              	.LBE1823:
 9610              	.LBE1833:
 9611              	.LBE1844:
 9612              	.LBB1845:
 9613              	.LBB1731:
 9614              	.LBB1714:
 9615              	.LBB1697:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9616              		.loc 18 177 44 view .LVU2670
 9617 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9618              	.LVL687:
 9619              		.loc 18 177 44 view .LVU2671
 9620              	.LBE1697:
 9621              	.LBE1714:
 9622              	.LBE1731:
 9623              	.LBE1845:
 9624              	.LBB1846:
 9625              	.LBB1834:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 305


 9626              	.LBB1824:
 9627              	.LBB1814:
 162:delayline_reverse.h **** 
 9628              		.loc 18 162 11 view .LVU2672
 9629 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9630              		.loc 18 174 71 view .LVU2673
 9631 02fc 0391     		str	r1, [sp, #12]
 9632              	.LBE1814:
 9633              	.LBE1824:
 9634              	.LBE1834:
 9635              	.LBE1846:
 9636              	.LBB1847:
 9637              	.LBB1732:
 9638              	.LBB1715:
 9639              	.LBB1698:
 9640              		.loc 18 177 54 view .LVU2674
 9641 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9642              	.LVL688:
 9643              		.loc 18 177 54 view .LVU2675
 9644              	.LBE1698:
 9645              	.LBE1715:
  83:Veno-Echo.cpp ****         return read;
 9646              		.loc 19 83 9 is_stmt 1 view .LVU2676
  83:Veno-Echo.cpp ****         return read;
 9647              		.loc 19 83 9 is_stmt 0 view .LVU2677
 9648              	.LBE1732:
 9649              	.LBE1847:
 382:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 9650              		.loc 19 382 50 view .LVU2678
 9651 0302 CDED067A 		vstr.32	s15, [sp, #24]
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9652              		.loc 19 383 9 is_stmt 1 view .LVU2679
 9653              	.LVL689:
 9654              	.LBB1848:
 9655              	.LBI1809:
  79:Veno-Echo.cpp ****     float Read()
 9656              		.loc 19 79 11 view .LVU2680
 9657              	.LBB1835:
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
 9658              		.loc 19 82 9 view .LVU2681
 9659              	.LBB1825:
 9660              	.LBI1811:
 159:delayline_reverse.h ****     {
 9661              		.loc 18 159 20 view .LVU2682
 9662              	.LBB1815:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9663              		.loc 18 174 46 is_stmt 0 view .LVU2683
 9664 0306 FFF7FEFF 		bl	sinf
 9665              	.LVL690:
 9666 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9667              		.loc 18 174 103 view .LVU2684
 9668 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9669 0312 FFF7FEFF 		bl	sinf
 9670              	.LVL691:
 9671 0316 B0EE408A 		vmov.f32	s16, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 306


 175:delayline_reverse.h **** 
 9672              		.loc 18 175 46 view .LVU2685
 9673 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9674 031e FFF7FEFF 		bl	sinf
 9675              	.LVL692:
 9676 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9677              		.loc 18 175 112 view .LVU2686
 9678 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9679              		.loc 18 174 98 view .LVU2687
 9680 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9681              		.loc 18 175 46 view .LVU2688
 9682 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9683              		.loc 18 175 112 view .LVU2689
 9684 0332 FFF7FEFF 		bl	sinf
 9685              	.LVL693:
 9686              	.LBE1815:
 9687              	.LBE1825:
 9688              	.LBE1835:
 9689              	.LBE1848:
 9690              	.LBB1849:
 9691              	.LBB1850:
 9692              	.LBB1851:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9693              		.loc 18 98 38 view .LVU2690
 9694 0336 5C48     		ldr	r0, .L630+144
 9695              	.LBE1851:
 9696              	.LBE1850:
 9697              	.LBE1849:
 9698              	.LBB1874:
 9699              	.LBB1836:
 9700              	.LBB1826:
 9701              	.LBB1816:
 175:delayline_reverse.h **** 
 9702              		.loc 18 175 107 view .LVU2691
 9703 0338 60EE097A 		vmul.f32	s15, s0, s18
 9704              	.LBE1816:
 9705              	.LBE1826:
 9706              	.LBE1836:
 9707              	.LBE1874:
 9708              	.LBB1875:
 9709              	.LBB1863:
 9710              	.LBB1852:
  92:delayline_reverse.h ****         
 9711              		.loc 18 92 57 view .LVU2692
 9712 033c 5B4B     		ldr	r3, .L630+148
 9713              	.LBE1852:
 9714              	.LBE1863:
 9715              	.LBE1875:
 9716              	.LBB1876:
 9717              	.LBB1837:
 9718              	.LBB1827:
 9719              	.LBB1817:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 307


 9720              		.loc 18 174 82 view .LVU2693
 9721 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9722              	.LVL694:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9723              		.loc 18 174 82 view .LVU2694
 9724              	.LBE1817:
 9725              	.LBE1827:
 9726              	.LBE1837:
 9727              	.LBE1876:
 9728              	.LBB1877:
 9729              	.LBB1864:
 9730              	.LBB1853:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9731              		.loc 18 98 38 view .LVU2695
 9732 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9733              		.loc 18 90 15 view .LVU2696
 9734 0344 D5F804E0 		ldr	lr, [r5, #4]
 9735              	.LBE1853:
 9736              	.LBE1864:
 9737              	.LBE1877:
 9738              	.LBB1878:
 9739              	.LBB1838:
 9740              	.LBB1828:
 9741              	.LBB1818:
 175:delayline_reverse.h **** 
 9742              		.loc 18 175 91 view .LVU2697
 9743 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9744              	.LVL695:
 175:delayline_reverse.h **** 
 9745              		.loc 18 175 91 view .LVU2698
 9746              	.LBE1818:
 9747              	.LBE1828:
 9748              	.LBE1838:
 9749              	.LBE1878:
 9750              	.LBB1879:
 9751              	.LBB1865:
 9752              	.LBB1854:
  99:delayline_reverse.h ****  
 9753              		.loc 18 99 38 view .LVU2699
 9754 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9755              		.loc 18 98 50 view .LVU2700
 9756 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9757              		.loc 18 92 57 view .LVU2701
 9758 0352 DFF86CC1 		ldr	ip, .L630+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9759              		.loc 18 90 9 view .LVU2702
 9760 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9761              		.loc 18 98 50 view .LVU2703
 9762 035a 890C     		lsrs	r1, r1, #18
 9763              	.LBE1854:
 9764              	.LBE1865:
 9765              	.LBE1879:
 9766              	.LBB1880:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 308


 9767              	.LBB1839:
 9768              	.LBB1829:
 9769              	.LBB1819:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9770              		.loc 18 174 9 view .LVU2704
 9771 035c 38EE088A 		vadd.f32	s16, s16, s16
 9772              	.LVL696:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9773              		.loc 18 174 9 view .LVU2705
 9774              	.LBE1819:
 9775              	.LBE1829:
 9776              	.LBE1839:
 9777              	.LBE1880:
 9778              	.LBB1881:
 9779              	.LBB1866:
 9780              	.LBB1855:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9781              		.loc 18 98 50 view .LVU2706
 9782 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9783              		.loc 18 92 45 view .LVU2707
 9784 0364 524E     		ldr	r6, .L630+152
 9785              	.LBE1855:
 9786              	.LBE1866:
 9787              	.LBE1881:
 9788              	.LBB1882:
 9789              	.LBB1840:
 9790              	.LBB1830:
 9791              	.LBB1820:
 175:delayline_reverse.h **** 
 9792              		.loc 18 175 9 view .LVU2708
 9793 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9794              	.LVL697:
 175:delayline_reverse.h **** 
 9795              		.loc 18 175 9 view .LVU2709
 9796              	.LBE1820:
 9797              	.LBE1830:
 9798              	.LBE1840:
 9799              	.LBE1882:
 386:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 9800              		.loc 19 386 26 view .LVU2710
 9801 036a DBED007A 		vldr.32	s15, [fp]
 9802              	.LBB1883:
 9803              	.LBB1867:
 9804              	.LBB1856:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9805              		.loc 18 98 50 view .LVU2711
 9806 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9807              		.loc 18 92 45 view .LVU2712
 9808 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9809              		.loc 18 99 50 view .LVU2713
 9810 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9811              		.loc 18 92 57 view .LVU2714
 9812 0376 A3FB0613 		umull	r1, r3, r3, r6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 309


  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9813              		.loc 18 98 9 view .LVU2715
 9814 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9815              		.loc 18 99 50 view .LVU2716
 9816 037c 4FEA9E4E 		lsr	lr, lr, #18
 9817              	.LBE1856:
 9818              	.LBE1867:
 9819              	.LBE1883:
 9820              	.LBB1884:
 9821              	.LBB1841:
 9822              	.LBB1831:
 9823              	.LBB1821:
 9824              		.loc 18 177 44 view .LVU2717
 9825 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9826              	.LVL698:
 9827              		.loc 18 177 44 view .LVU2718
 9828              	.LBE1821:
 9829              	.LBE1831:
 9830              	.LBE1841:
 9831              	.LBE1884:
 9832              	.LBB1885:
 9833              	.LBB1868:
 9834              	.LBB1857:
  92:delayline_reverse.h ****         
 9835              		.loc 18 92 57 view .LVU2719
 9836 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9837              		.loc 18 99 50 view .LVU2720
 9838 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9839              	.LBE1857:
 9840              	.LBE1868:
 9841              	.LBE1885:
 9842              	.LBB1886:
 9843              	.LBB1842:
 9844              	.LBB1832:
 9845              	.LBB1822:
 9846              		.loc 18 177 54 view .LVU2721
 9847 038a ACEE880A 		vfma.f32	s0, s25, s16
 9848              	.LVL699:
 9849              		.loc 18 177 54 view .LVU2722
 9850              	.LBE1822:
 9851              	.LBE1832:
  83:Veno-Echo.cpp ****         return read;
 9852              		.loc 19 83 9 is_stmt 1 view .LVU2723
  83:Veno-Echo.cpp ****         return read;
 9853              		.loc 19 83 9 is_stmt 0 view .LVU2724
 9854              	.LBE1842:
 9855              	.LBE1886:
 9856              	.LBB1887:
 9857              	.LBB1869:
 9858              	.LBB1858:
  92:delayline_reverse.h ****         
 9859              		.loc 18 92 57 view .LVU2725
 9860 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9861              		.loc 18 95 43 view .LVU2726
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 310


 9862 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9863              		.loc 18 90 9 view .LVU2727
 9864 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9865              		.loc 18 95 43 view .LVU2728
 9866 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9867              		.loc 18 101 36 view .LVU2729
 9868 039c DFF824A1 		ldr	r10, .L630+172
  95:delayline_reverse.h **** 
 9869              		.loc 18 95 43 view .LVU2730
 9870 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9871              		.loc 18 101 36 view .LVU2731
 9872 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9873              		.loc 18 101 45 view .LVU2732
 9874 03a6 07F1FF3A 		add	r10, r7, #-1
 9875              	.LBE1858:
 9876              	.LBE1869:
 9877              	.LBE1887:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9878              		.loc 19 383 50 view .LVU2733
 9879 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 386:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 9880              		.loc 19 386 9 is_stmt 1 view .LVU2734
 9881              	.LVL700:
 9882              	.LBB1888:
 9883              	.LBI1849:
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 9884              		.loc 19 92 10 view .LVU2735
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 9885              		.loc 19 92 10 is_stmt 0 view .LVU2736
 9886              	.LBE1888:
 9887              	.LBE2013:
 9888              	.LBE1638:
  94:Veno-Echo.cpp ****         del -> Write(in);
 9889              		.loc 19 94 9 is_stmt 1 view .LVU2737
 9890              	.LBB2025:
 9891              	.LBB2014:
 9892              	.LBB1889:
 9893              	.LBB1870:
 9894              	.LBI1850:
  88:delayline_reverse.h ****     {
 9895              		.loc 18 88 17 view .LVU2738
 9896              	.LBB1859:
  99:delayline_reverse.h ****  
 9897              		.loc 18 99 9 is_stmt 0 view .LVU2739
 9898 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9899              		.loc 18 95 54 view .LVU2740
 9900 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9901              		.loc 18 101 45 view .LVU2741
 9902 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 311


 9903              		.loc 18 95 54 view .LVU2742
 9904 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9905              		.loc 18 92 9 view .LVU2743
 9906 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9907              		.loc 18 101 9 view .LVU2744
 9908 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9909              		.loc 18 95 9 view .LVU2745
 9910 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9911              		.loc 18 101 9 view .LVU2746
 9912 03c4 40F2CF82 		bls	.L530
 103:delayline_reverse.h ****             {
 9913              		.loc 18 103 17 view .LVU2747
 9914 03c8 3A49     		ldr	r1, .L630+156
 103:delayline_reverse.h ****             {
 9915              		.loc 18 103 13 view .LVU2748
 9916 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9917              		.loc 18 103 17 view .LVU2749
 9918 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9919              		.loc 18 103 13 view .LVU2750
 9920 03ce 0028     		cmp	r0, #0
 9921 03d0 40F0CF82 		bne	.L621
 107:delayline_reverse.h ****                 {
 9922              		.loc 18 107 21 view .LVU2751
 9923 03d4 3848     		ldr	r0, .L630+160
 105:delayline_reverse.h ****                 
 9924              		.loc 18 105 17 view .LVU2752
 9925 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9926              		.loc 18 110 45 view .LVU2753
 9927 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9928              		.loc 18 107 17 view .LVU2754
 9929 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9930              		.loc 18 107 21 view .LVU2755
 9931 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9932              		.loc 18 105 17 view .LVU2756
 9933 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9934              		.loc 18 107 17 view .LVU2757
 9935 03e0 002E     		cmp	r6, #0
 9936 03e2 40F0EB83 		bne	.L532
 110:delayline_reverse.h ****                 }
 9937              		.loc 18 110 21 view .LVU2758
 9938 03e6 EB60     		str	r3, [r5, #12]
 9939              	.L533:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9940              		.loc 18 130 45 view .LVU2759
 9941 03e8 07EE90EA 		vmov	s15, lr	@ int
 9942              	.LVL701:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 312


 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9943              		.loc 18 130 45 view .LVU2760
 9944 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9945 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9946 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9947              		.loc 18 130 37 view .LVU2761
 9948 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9949              		.loc 18 131 17 view .LVU2762
 9950 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9951 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9952 0404 40F39183 		ble	.L622
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9953              		.loc 18 133 21 view .LVU2763
 9954 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9955              		.loc 18 134 21 view .LVU2764
 9956 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9957              		.loc 18 133 21 view .LVU2765
 9958 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9959              		.loc 18 135 21 view .LVU2766
 9960 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9961              		.loc 18 134 21 view .LVU2767
 9962 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9963              		.loc 18 135 21 view .LVU2768
 9964 0414 0370     		strb	r3, [r0]
 9965 0416 57E0     		b	.L631
 9966              	.L632:
 9967              		.align	2
 9968              	.L630:
 9969 0418 00000000 		.word	.LANCHOR89
 9970 041c 00000000 		.word	.LANCHOR0
 9971 0420 00000000 		.word	.LANCHOR90
 9972 0424 00000000 		.word	.LANCHOR1
 9973 0428 00000000 		.word	.LANCHOR41
 9974 042c 00000000 		.word	.LANCHOR49
 9975 0430 00000000 		.word	.LANCHOR35
 9976 0434 00000000 		.word	.LANCHOR94
 9977 0438 00000000 		.word	.LANCHOR77
 9978 043c 00000000 		.word	.LANCHOR83
 9979 0440 00000000 		.word	.LANCHOR78
 9980 0444 00000000 		.word	.LANCHOR84
 9981 0448 00000000 		.word	.LANCHOR76
 9982 044c 00000000 		.word	.LANCHOR86
 9983 0450 00000000 		.word	.LANCHOR75
 9984 0454 00000000 		.word	.LANCHOR85
 9985 0458 00000000 		.word	.LANCHOR87
 9986 045c 00000000 		.word	.LANCHOR2
 9987 0460 00000000 		.word	.LANCHOR88
 9988 0464 00000000 		.word	.LANCHOR97
 9989 0468 DB0FC93F 		.word	1070141403
 9990 046c 00000000 		.word	.LANCHOR98
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 313


 9991 0470 00000000 		.word	.LANCHOR101
 9992 0474 00000000 		.word	.LANCHOR48
 9993 0478 00000000 		.word	.LANCHOR102
 9994 047c 00000000 		.word	.LANCHOR99
 9995 0480 E4CB9640 		.word	1083624420
 9996 0484 00000000 		.word	.LANCHOR100
 9997 0488 0000803D 		.word	1031798784
 9998 048c 00000000 		.word	.LANCHOR103
 9999 0490 00000000 		.word	.LANCHOR104
 10000 0494 00000000 		.word	.LANCHOR105
 10001 0498 00000000 		.word	.LANCHOR106
 10002 049c 00000000 		.word	.LANCHOR107
 10003 04a0 00000000 		.word	.LANCHOR108
 10004 04a4 00000000 		.word	.LANCHOR3
 10005 04a8 BF270900 		.word	599999
 10006 04ac 851DD96F 		.word	1876499845
 10007 04b0 C1270900 		.word	600001
 10008 04b4 249F2400 		.word	2400036
 10009 04b8 1C9F2400 		.word	2400028
 10010 04bc 209F2400 		.word	2400032
 10011 04c0 C0270900 		.word	600000
 10012 04c4 189F2400 		.word	2400024
 10013              	.L631:
 10014              	.LVL702:
 10015              	.L536:
 135:delayline_reverse.h ****                 }
 10016              		.loc 18 135 21 view .LVU2769
 10017              	.LBE1859:
 10018              	.LBE1870:
 10019              	.LBE1889:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10020              		.loc 19 387 9 is_stmt 1 view .LVU2770
 10021              	.LBB1890:
 10022              	.LBB1891:
 10023              	.LBB1892:
  95:delayline_reverse.h **** 
 10024              		.loc 18 95 45 is_stmt 0 view .LVU2771
 10025 04c8 2169     		ldr	r1, [r4, #16]
 10026 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10027              		.loc 18 95 43 view .LVU2772
 10028 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10029              		.loc 18 90 15 view .LVU2773
 10030 04d0 6568     		ldr	r5, [r4, #4]
 10031 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10032              		.loc 18 95 43 view .LVU2774
 10033 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10034              		.loc 18 92 45 view .LVU2775
 10035 04d8 B14F     		ldr	r7, .L633
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10036              		.loc 18 90 9 view .LVU2776
 10037 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10038              		.loc 18 98 38 view .LVU2777
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 314


 10039 04de B14B     		ldr	r3, .L633+4
  95:delayline_reverse.h **** 
 10040              		.loc 18 95 43 view .LVU2778
 10041 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10042              		.loc 18 92 45 view .LVU2779
 10043 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 10044              		.loc 18 101 45 view .LVU2780
 10045 04e4 01F1FF3C 		add	ip, r1, #-1
 10046              	.LBE1892:
 10047              	.LBE1891:
 10048              	.LBE1890:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10049              		.loc 19 387 26 view .LVU2781
 10050 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 10051              	.LVL703:
 10052              	.LBB1901:
 10053              	.LBI1890:
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 10054              		.loc 19 92 10 is_stmt 1 view .LVU2782
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
 10055              		.loc 19 92 10 is_stmt 0 view .LVU2783
 10056              	.LBE1901:
 10057              	.LBE2014:
 10058              	.LBE2025:
  94:Veno-Echo.cpp ****         del -> Write(in);
 10059              		.loc 19 94 9 is_stmt 1 view .LVU2784
 10060              	.LBB2026:
 10061              	.LBB2015:
 10062              	.LBB1902:
 10063              	.LBB1897:
 10064              	.LBI1891:
  88:delayline_reverse.h ****     {
 10065              		.loc 18 88 17 view .LVU2785
 10066              	.LBB1893:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10067              		.loc 18 98 38 is_stmt 0 view .LVU2786
 10068 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 10069 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10070              		.loc 18 99 38 view .LVU2787
 10071 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10072              		.loc 18 92 57 view .LVU2788
 10073 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10074              		.loc 18 95 54 view .LVU2789
 10075 04fa B2FBF1F0 		udiv	r0, r2, r1
 10076 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 10077              		.loc 18 101 36 view .LVU2790
 10078 0502 A949     		ldr	r1, .L633+8
  92:delayline_reverse.h ****         
 10079              		.loc 18 92 57 view .LVU2791
 10080 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 315


 10081              		.loc 18 101 36 view .LVU2792
 10082 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10083              		.loc 18 92 57 view .LVU2793
 10084 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10085              		.loc 18 90 9 view .LVU2794
 10086 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 10087              		.loc 18 101 36 view .LVU2795
 10088 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10089              		.loc 18 92 57 view .LVU2796
 10090 0514 A3FB0762 		umull	r6, r2, r3, r7
 10091 0518 DFF8C8E2 		ldr	lr, .L633+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10092              		.loc 18 98 50 view .LVU2797
 10093 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10094              		.loc 18 99 50 view .LVU2798
 10095 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10096              		.loc 18 101 45 view .LVU2799
 10097 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10098              		.loc 18 92 57 view .LVU2800
 10099 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10100              		.loc 18 95 9 view .LVU2801
 10101 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10102              		.loc 18 98 50 view .LVU2802
 10103 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 10104              		.loc 18 101 45 view .LVU2803
 10105 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10106              		.loc 18 99 50 view .LVU2804
 10107 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10108              		.loc 18 92 57 view .LVU2805
 10109 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10110              		.loc 18 98 50 view .LVU2806
 10111 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10112              		.loc 18 101 9 view .LVU2807
 10113 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10114              		.loc 18 99 50 view .LVU2808
 10115 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10116              		.loc 18 98 9 view .LVU2809
 10117 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10118              		.loc 18 99 9 view .LVU2810
 10119 0544 E360     		str	r3, [r4, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 316


 101:delayline_reverse.h ****         {
 10120              		.loc 18 101 9 view .LVU2811
 10121 0546 40F2EB81 		bls	.L540
 103:delayline_reverse.h ****             {
 10122              		.loc 18 103 17 view .LVU2812
 10123 054a 9849     		ldr	r1, .L633+12
 103:delayline_reverse.h ****             {
 10124              		.loc 18 103 13 view .LVU2813
 10125 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10126              		.loc 18 103 17 view .LVU2814
 10127 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10128              		.loc 18 103 13 view .LVU2815
 10129 0550 0028     		cmp	r0, #0
 10130 0552 40F0EB81 		bne	.L623
 107:delayline_reverse.h ****                 {
 10131              		.loc 18 107 21 view .LVU2816
 10132 0556 9648     		ldr	r0, .L633+16
 105:delayline_reverse.h ****                 
 10133              		.loc 18 105 17 view .LVU2817
 10134 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10135              		.loc 18 110 45 view .LVU2818
 10136 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10137              		.loc 18 107 17 view .LVU2819
 10138 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10139              		.loc 18 107 21 view .LVU2820
 10140 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10141              		.loc 18 105 17 view .LVU2821
 10142 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 10143              		.loc 18 107 17 view .LVU2822
 10144 0562 002D     		cmp	r5, #0
 10145 0564 40F02C83 		bne	.L542
 110:delayline_reverse.h ****                 }
 10146              		.loc 18 110 21 view .LVU2823
 10147 0568 E260     		str	r2, [r4, #12]
 10148              	.L543:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10149              		.loc 18 130 45 view .LVU2824
 10150 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10151              	.LVL704:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10152              		.loc 18 130 45 view .LVU2825
 10153 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10154              		.loc 18 130 37 view .LVU2826
 10155 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10156              		.loc 18 130 45 view .LVU2827
 10157 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10158              		.loc 18 130 37 view .LVU2828
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 317


 10159 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10160              		.loc 18 130 45 view .LVU2829
 10161 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10162              		.loc 18 130 37 view .LVU2830
 10163 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10164              		.loc 18 131 17 view .LVU2831
 10165 0584 F4EEC77A 		vcmpe.f32	s15, s14
 10166 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10167 058c 40F31F83 		ble	.L625
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10168              		.loc 18 133 21 view .LVU2832
 10169 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10170              		.loc 18 134 21 view .LVU2833
 10171 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10172              		.loc 18 133 21 view .LVU2834
 10173 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10174              		.loc 18 135 21 view .LVU2835
 10175 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10176              		.loc 18 134 21 view .LVU2836
 10177 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10178              		.loc 18 135 21 view .LVU2837
 10179 059c 0270     		strb	r2, [r0]
 10180              	.LVL705:
 10181              	.L546:
 135:delayline_reverse.h ****                 }
 10182              		.loc 18 135 21 view .LVU2838
 10183              	.LBE1893:
 10184              	.LBE1897:
 10185              	.LBE1902:
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 10186              		.loc 19 392 9 is_stmt 1 view .LVU2839
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 10187              		.loc 19 392 56 is_stmt 0 view .LVU2840
 10188 059e 06AA     		add	r2, sp, #24
 10189 05a0 5946     		mov	r1, fp
 10190 05a2 8448     		ldr	r0, .L633+20
 10191 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10192              	.LVL706:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10193              		.loc 19 393 56 view .LVU2841
 10194 05a8 18EE101A 		vmov	r1, s16	@ int
 10195 05ac 07AA     		add	r2, sp, #28
 10196 05ae 8248     		ldr	r0, .L633+24
 392:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 10197              		.loc 19 392 56 view .LVU2842
 10198 05b0 F0EE408A 		vmov.f32	s17, s0
 10199              	.LVL707:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10200              		.loc 19 393 9 is_stmt 1 view .LVU2843
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 318


 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10201              		.loc 19 393 56 is_stmt 0 view .LVU2844
 10202 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10203              	.LVL708:
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 10204              		.loc 19 396 46 view .LVU2845
 10205 05b8 8048     		ldr	r0, .L633+28
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10206              		.loc 19 393 56 view .LVU2846
 10207 05ba B0EE408A 		vmov.f32	s16, s0
 10208              	.LVL709:
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 10209              		.loc 19 396 9 is_stmt 1 view .LVU2847
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 10210              		.loc 19 396 46 is_stmt 0 view .LVU2848
 10211 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10212              	.LVL710:
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 10213              		.loc 19 396 46 view .LVU2849
 10214 05c2 0346     		mov	r3, r0
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10215              		.loc 19 397 46 view .LVU2850
 10216 05c4 7E48     		ldr	r0, .L633+32
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 10217              		.loc 19 396 45 view .LVU2851
 10218 05c6 1B68     		ldr	r3, [r3]	@ float
 396:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 10219              		.loc 19 396 47 view .LVU2852
 10220 05c8 0893     		str	r3, [sp, #32]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10221              		.loc 19 397 9 is_stmt 1 view .LVU2853
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10222              		.loc 19 397 46 is_stmt 0 view .LVU2854
 10223 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10224              	.LVL711:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10225              		.loc 19 397 45 view .LVU2855
 10226 05ce 0368     		ldr	r3, [r0]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10227              		.loc 19 397 47 view .LVU2856
 10228 05d0 0993     		str	r3, [sp, #36]	@ float
 399:Veno-Echo.cpp ****         Update_BaseTempoLED();
 10229              		.loc 19 399 9 is_stmt 1 view .LVU2857
 399:Veno-Echo.cpp ****         Update_BaseTempoLED();
 10230              		.loc 19 399 28 is_stmt 0 view .LVU2858
 10231 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10232              	.LVL712:
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 10233              		.loc 19 402 9 is_stmt 1 view .LVU2859
 10234              	.LBB1903:
 10235              	.LBB1904:
1782:Veno-Echo.cpp ****     if (input > limit)
 10236              		.loc 19 1782 5 is_stmt 0 view .LVU2860
 10237 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 10238              	.LBE1904:
 10239              	.LBE1903:
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 319


 10240              		.loc 19 402 34 view .LVU2861
 10241 05da DDED087A 		vldr.32	s15, [sp, #32]
 10242              	.LVL713:
 10243              	.LBB1907:
 10244              	.LBI1903:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 10245              		.loc 19 1779 7 is_stmt 1 view .LVU2862
 10246              	.LBB1905:
1781:Veno-Echo.cpp ****     float returnval{};
 10247              		.loc 19 1781 5 view .LVU2863
1782:Veno-Echo.cpp ****     if (input > limit)
 10248              		.loc 19 1782 5 view .LVU2864
 10249 05de F4EEC77A 		vcmpe.f32	s15, s14
 10250 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10251 05e6 00F39881 		bgt	.L587
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10252              		.loc 19 1784 10 view .LVU2865
 10253 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10254              		.loc 19 1785 19 is_stmt 0 view .LVU2866
 10255 05ee F4EE477A 		vcmp.f32	s15, s14
 10256 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10257 05f6 48BF     		it	mi
 10258 05f8 F0EE477A 		vmovmi.f32	s15, s14
 10259              	.LVL714:
 10260              	.L550:
1789:Veno-Echo.cpp ****     return returnval;   
 10261              		.loc 19 1789 5 is_stmt 1 view .LVU2867
1789:Veno-Echo.cpp ****     return returnval;   
 10262              		.loc 19 1789 5 is_stmt 0 view .LVU2868
 10263              	.LBE1905:
 10264              	.LBE1907:
 10265              	.LBB1908:
 10266              	.LBB1909:
1782:Veno-Echo.cpp ****     if (input > limit)
 10267              		.loc 19 1782 5 view .LVU2869
 10268 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 10269              	.LBE1909:
 10270              	.LBE1908:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10271              		.loc 19 403 34 view .LVU2870
 10272 0600 9DED090A 		vldr.32	s0, [sp, #36]
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 10273              		.loc 19 402 23 view .LVU2871
 10274 0604 CDED087A 		vstr.32	s15, [sp, #32]
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10275              		.loc 19 403 9 is_stmt 1 view .LVU2872
 10276              	.LVL715:
 10277              	.LBB1913:
 10278              	.LBI1908:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 10279              		.loc 19 1779 7 view .LVU2873
 10280              	.LBB1910:
1781:Veno-Echo.cpp ****     float returnval{};
 10281              		.loc 19 1781 5 view .LVU2874
1782:Veno-Echo.cpp ****     if (input > limit)
 10282              		.loc 19 1782 5 view .LVU2875
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 320


 10283 0608 B4EEC70A 		vcmpe.f32	s0, s14
 10284 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10285 0610 00F3EA80 		bgt	.L588
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10286              		.loc 19 1784 10 view .LVU2876
 10287 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 10288              	.LBE1910:
 10289              	.LBE1913:
 10290              	.LBB1914:
 405:Veno-Echo.cpp **** if(!PostFilters)
 10291              		.loc 19 405 1 is_stmt 0 view .LVU2877
 10292 0618 6A4B     		ldr	r3, .L633+36
 10293 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10294              	.LBE1914:
 10295              	.LBB1936:
 10296              	.LBB1911:
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10297              		.loc 19 1785 19 view .LVU2878
 10298 061c B4EE470A 		vcmp.f32	s0, s14
 10299 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10300 0624 48BF     		it	mi
 10301 0626 B0EE470A 		vmovmi.f32	s0, s14
 10302              	.LVL716:
1789:Veno-Echo.cpp ****     return returnval;   
 10303              		.loc 19 1789 5 is_stmt 1 view .LVU2879
1789:Veno-Echo.cpp ****     return returnval;   
 10304              		.loc 19 1789 5 is_stmt 0 view .LVU2880
 10305              	.LBE1911:
 10306              	.LBE1936:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10307              		.loc 19 403 23 view .LVU2881
 10308 062a 8DED090A 		vstr.32	s0, [sp, #36]
 405:Veno-Echo.cpp **** if(!PostFilters)
 10309              		.loc 19 405 1 is_stmt 1 view .LVU2882
 10310              	.LBB1937:
 10311 062e 002B     		cmp	r3, #0
 10312 0630 00F0E380 		beq	.L626
 10313              	.L554:
 10314              	.LBE1937:
 449:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 10315              		.loc 19 449 9 view .LVU2883
 450:Veno-Echo.cpp ****         static float RNegFB{};
 10316              		.loc 19 450 9 view .LVU2884
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 10317              		.loc 19 453 9 view .LVU2885
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 10318              		.loc 19 453 22 is_stmt 0 view .LVU2886
 10319 0634 644B     		ldr	r3, .L633+40
 10320              	.LBB1938:
 10321              	.LBB1939:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 10322              		.loc 12 57 16 view .LVU2887
 10323 0636 D8ED042A 		vldr.32	s5, [r8, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 321


 10324              	.LBE1939:
 10325              	.LBE1938:
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 10326              		.loc 19 453 22 view .LVU2888
 10327 063a D3ED004A 		vldr.32	s9, [r3]
 10328 063e 634B     		ldr	r3, .L633+44
 10329              	.LBB1951:
 10330              	.LBB1940:
 10331              		.loc 12 57 37 view .LVU2889
 10332 0640 98ED006A 		vldr.32	s12, [r8]
 10333              	.LBE1940:
 10334              	.LBE1951:
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 10335              		.loc 19 453 22 view .LVU2890
 10336 0644 93ED007A 		vldr.32	s14, [r3]
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 10337              		.loc 19 456 22 view .LVU2891
 10338 0648 614B     		ldr	r3, .L633+48
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 10339              		.loc 19 453 9 view .LVU2892
 10340 064a F4EEC74A 		vcmpe.f32	s9, s14
 10341              	.LBB1952:
 10342              	.LBB1953:
 10343              		.loc 12 57 16 view .LVU2893
 10344 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 10345              		.loc 12 65 20 view .LVU2894
 10346 0652 99ED054A 		vldr.32	s8, [r9, #20]
 10347              		.loc 12 65 53 view .LVU2895
 10348 0656 99ED032A 		vldr.32	s4, [r9, #12]
 10349              	.LBE1953:
 10350              	.LBE1952:
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 10351              		.loc 19 453 9 view .LVU2896
 10352 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10353              	.LBB1962:
 10354              	.LBB1941:
 10355              		.loc 12 65 20 view .LVU2897
 10356 065e 98ED053A 		vldr.32	s6, [r8, #20]
 10357              		.loc 12 65 53 view .LVU2898
 10358 0662 98ED031A 		vldr.32	s2, [r8, #12]
 10359              	.LBE1941:
 10360              	.LBE1962:
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 10361              		.loc 19 472 13 view .LVU2899
 10362 0666 DFED5B1A 		vldr.32	s3, .L633+52
 10363 066a 58BF     		it	pl
 10364 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 10365              		.loc 19 456 9 is_stmt 1 view .LVU2900
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 322


 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 10366              		.loc 19 456 22 is_stmt 0 view .LVU2901
 10367 0670 93ED007A 		vldr.32	s14, [r3]
 10368 0674 584B     		ldr	r3, .L633+56
 10369 0676 D3ED006A 		vldr.32	s13, [r3]
 459:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 10370              		.loc 19 459 15 view .LVU2902
 10371 067a 67EEA44A 		vmul.f32	s9, s15, s9
 10372              	.LBB1963:
 10373              	.LBB1954:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10374              		.loc 12 57 37 view .LVU2903
 10375 067e D9ED007A 		vldr.32	s15, [r9]
 10376              	.LBE1954:
 10377              	.LBE1963:
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 10378              		.loc 19 456 9 view .LVU2904
 10379 0682 B4EEE67A 		vcmpe.f32	s14, s13
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 10380              		.loc 19 463 36 view .LVU2905
 10381 0686 554B     		ldr	r3, .L633+60
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 10382              		.loc 19 456 9 view .LVU2906
 10383 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10384 068c 58BF     		it	pl
 10385 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 459:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 10386              		.loc 19 459 9 is_stmt 1 view .LVU2907
 10387              	.LVL717:
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10388              		.loc 19 460 9 view .LVU2908
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 10389              		.loc 19 463 36 is_stmt 0 view .LVU2909
 10390 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10391              		.loc 19 460 15 view .LVU2910
 10392 0696 20EE070A 		vmul.f32	s0, s0, s14
 10393              	.LVL718:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 10394              		.loc 19 463 9 is_stmt 1 view .LVU2911
 10395              	.LBB1964:
 10396              	.LBB1942:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10397              		.loc 12 57 33 is_stmt 0 view .LVU2912
 10398 069a 36EEE25A 		vsub.f32	s10, s13, s5
 10399              	.LBE1942:
 10400              	.LBE1964:
 10401              	.LBB1965:
 10402              	.LBB1955:
 10403 069e 76EEE35A 		vsub.f32	s11, s13, s7
 10404              	.LBE1955:
 10405              	.LBE1965:
 10406              	.LBB1966:
 10407              	.LBB1943:
 10408              		.loc 12 65 45 view .LVU2913
 10409 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 323


 10410              		.loc 12 57 37 view .LVU2914
 10411 06a6 25EE065A 		vmul.f32	s10, s10, s12
 10412              	.LBE1943:
 10413              	.LBE1966:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 10414              		.loc 19 463 36 view .LVU2915
 10415 06aa 93ED006A 		vldr.32	s12, [r3]
 10416              	.LBB1967:
 10417              	.LBB1956:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10418              		.loc 12 57 37 view .LVU2916
 10419 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 10420              		.loc 12 65 45 view .LVU2917
 10421 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 10422              	.LBE1956:
 10423              	.LBE1967:
 10424              	.LBB1968:
 10425              	.LBB1944:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10426              		.loc 12 57 28 view .LVU2918
 10427 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 10428              	.LBE1944:
 10429              	.LBE1968:
 10430              	.LBB1969:
 10431              	.LBB1957:
 10432 06ba E0EE235A 		vfma.f32	s11, s0, s7
 10433              		.loc 12 65 53 view .LVU2919
 10434 06be 67EE827A 		vmul.f32	s15, s15, s4
 10435              	.LBE1957:
 10436              	.LBE1969:
 10437              	.LBB1970:
 10438              	.LBB1945:
 10439 06c2 27EE017A 		vmul.f32	s14, s14, s2
 10440              	.LBE1945:
 10441              	.LBE1970:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 10442              		.loc 19 463 36 view .LVU2920
 10443 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 10444              	.LBB1971:
 10445              	.LBB1946:
  58:envFollow.h   **** 
 10446              		.loc 12 58 30 view .LVU2921
 10447 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10448              		.loc 12 57 13 view .LVU2922
 10449 06ce 88ED005A 		vstr.32	s10, [r8]
 10450              	.LBE1946:
 10451              	.LBE1971:
 10452              	.LBB1972:
 10453              	.LBB1958:
  58:envFollow.h   **** 
 10454              		.loc 12 58 30 view .LVU2923
 10455 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10456              		.loc 12 57 13 view .LVU2924
 10457 06d6 C9ED005A 		vstr.32	s11, [r9]
 10458              	.LBE1958:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 324


 10459              	.LBE1972:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 10460              		.loc 19 463 89 view .LVU2925
 10461 06da 66EE005A 		vmul.f32	s11, s12, s0
 10462              	.LBB1973:
 10463              	.LBB1947:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10464              		.loc 12 61 27 view .LVU2926
 10465 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 10466              		.loc 12 58 21 view .LVU2927
 10467 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 10468              	.LBE1947:
 10469              	.LBE1973:
 10470              	.LBB1974:
 10471              	.LBB1959:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10472              		.loc 12 61 27 view .LVU2928
 10473 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 10474              		.loc 12 58 21 view .LVU2929
 10475 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 10476              	.LBE1959:
 10477              	.LBE1974:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10478              		.loc 19 464 89 view .LVU2930
 10479 06ee 26EE246A 		vmul.f32	s12, s12, s9
 10480              	.LBB1975:
 10481              	.LBB1948:
 10482              		.loc 12 65 40 view .LVU2931
 10483 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10484              		.loc 12 61 20 view .LVU2932
 10485 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 10486              	.LBE1948:
 10487              	.LBE1975:
 10488              	.LBB1976:
 10489              	.LBB1960:
 10490              		.loc 12 65 40 view .LVU2933
 10491 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10492              		.loc 12 61 20 view .LVU2934
 10493 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 10494              	.LBE1960:
 10495              	.LBE1976:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 10496              		.loc 19 463 15 view .LVU2935
 10497 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 10498              	.LVL719:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10499              		.loc 19 464 9 is_stmt 1 view .LVU2936
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10500              		.loc 19 464 15 is_stmt 0 view .LVU2937
 10501 0706 A6EE806A 		vfma.f32	s12, s13, s0
 10502              	.LVL720:
 468:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 10503              		.loc 19 468 9 is_stmt 1 view .LVU2938
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 325


 10504              	.LBB1977:
 10505              	.LBI1938:
  54:envFollow.h   ****     {
 10506              		.loc 12 54 11 view .LVU2939
 10507              	.LBB1949:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10508              		.loc 12 57 9 view .LVU2940
  58:envFollow.h   **** 
 10509              		.loc 12 58 9 view .LVU2941
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10510              		.loc 12 61 9 view .LVU2942
 10511              		.loc 12 65 9 view .LVU2943
 10512              	.LBE1949:
 10513              	.LBE1977:
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 10514              		.loc 19 472 13 is_stmt 0 view .LVU2944
 10515 070a B4EEE17A 		vcmpe.f32	s14, s3
 10516              	.LBB1978:
 10517              	.LBB1950:
 10518              		.loc 12 65 17 view .LVU2945
 10519 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 10520              		.loc 12 67 9 is_stmt 1 view .LVU2946
 10521              	.LVL721:
 10522              		.loc 12 67 9 is_stmt 0 view .LVU2947
 10523              	.LBE1950:
 10524              	.LBE1978:
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 10525              		.loc 19 469 9 is_stmt 1 view .LVU2948
 10526              	.LBB1979:
 10527              	.LBI1952:
  54:envFollow.h   ****     {
 10528              		.loc 12 54 11 view .LVU2949
 10529              	.LBB1961:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10530              		.loc 12 57 9 view .LVU2950
  58:envFollow.h   **** 
 10531              		.loc 12 58 9 view .LVU2951
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10532              		.loc 12 61 9 view .LVU2952
  65:envFollow.h   **** 
 10533              		.loc 12 65 9 view .LVU2953
  65:envFollow.h   **** 
 10534              		.loc 12 65 17 is_stmt 0 view .LVU2954
 10535 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 10536              		.loc 12 67 9 is_stmt 1 view .LVU2955
 10537              	.LVL722:
 10538              		.loc 12 67 9 is_stmt 0 view .LVU2956
 10539              	.LBE1961:
 10540              	.LBE1979:
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 10541              		.loc 19 472 13 is_stmt 1 view .LVU2957
 10542 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10543 071a 3DDB     		blt	.L616
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10544              		.loc 19 473 17 view .LVU2958
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 326


 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10545              		.loc 19 473 32 is_stmt 0 view .LVU2959
 10546 071c 37EE617A 		vsub.f32	s14, s14, s3
 10547              	.LVL723:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10548              		.loc 19 473 47 view .LVU2960
 10549 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 10550 0724 27EE267A 		vmul.f32	s14, s14, s13
 10551              	.L560:
 477:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 10552              		.loc 19 477 13 view .LVU2961
 10553 0728 DFED2A6A 		vldr.32	s13, .L633+52
 10554 072c 274B     		ldr	r3, .L633+44
 10555 072e F4EEE67A 		vcmpe.f32	s15, s13
 10556 0732 83ED007A 		vstr.32	s14, [r3]
 477:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 10557              		.loc 19 477 13 is_stmt 1 view .LVU2962
 10558 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10559 073a 2ADB     		blt	.L617
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10560              		.loc 19 478 17 view .LVU2963
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10561              		.loc 19 478 32 is_stmt 0 view .LVU2964
 10562 073c 77EEE67A 		vsub.f32	s15, s15, s13
 10563              	.LVL724:
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10564              		.loc 19 478 47 view .LVU2965
 10565 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 10566 0744 67EE877A 		vmul.f32	s15, s15, s14
 10567              	.L562:
 10568 0748 234B     		ldr	r3, .L633+56
 482:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 10569              		.loc 19 482 15 view .LVU2966
 10570 074a 38EEA50A 		vadd.f32	s0, s17, s11
 10571              	.LVL725:
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10572              		.loc 19 483 15 view .LVU2967
 10573 074e 38EE068A 		vadd.f32	s16, s16, s12
 10574              	.LVL726:
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10575              		.loc 19 483 15 view .LVU2968
 10576 0752 C3ED007A 		vstr.32	s15, [r3]
 482:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 10577              		.loc 19 482 9 is_stmt 1 view .LVU2969
 10578              	.LVL727:
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10579              		.loc 19 483 9 view .LVU2970
 486:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 10580              		.loc 19 486 9 view .LVU2971
 10581              	.LBB1980:
 10582              	.LBI1980:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 10583              		.loc 19 1779 7 view .LVU2972
 10584              	.LBB1981:
1781:Veno-Echo.cpp ****     float returnval{};
 10585              		.loc 19 1781 5 view .LVU2973
1782:Veno-Echo.cpp ****     if (input > limit)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 327


 10586              		.loc 19 1782 5 view .LVU2974
 10587 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 10588 075a B4EEE70A 		vcmpe.f32	s0, s15
 10589 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10590 0762 13DC     		bgt	.L594
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10591              		.loc 19 1784 10 view .LVU2975
 10592 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10593              		.loc 19 1785 19 is_stmt 0 view .LVU2976
 10594 0768 B4EE670A 		vcmp.f32	s0, s15
 10595 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10596 0770 48BF     		it	mi
 10597 0772 B0EE670A 		vmovmi.f32	s0, s15
 10598              	.LVL728:
 10599              	.L564:
1789:Veno-Echo.cpp ****     return returnval;   
 10600              		.loc 19 1789 5 is_stmt 1 view .LVU2977
1789:Veno-Echo.cpp ****     return returnval;   
 10601              		.loc 19 1789 5 is_stmt 0 view .LVU2978
 10602              	.LBE1981:
 10603              	.LBE1980:
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 10604              		.loc 19 487 9 is_stmt 1 view .LVU2979
 10605              	.LBB1983:
 10606              	.LBI1640:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 10607              		.loc 19 1779 7 view .LVU2980
 10608              	.LBB1642:
1781:Veno-Echo.cpp ****     float returnval{};
 10609              		.loc 19 1781 5 view .LVU2981
1782:Veno-Echo.cpp ****     if (input > limit)
 10610              		.loc 19 1782 5 view .LVU2982
 10611 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10612 077a B4EEE78A 		vcmpe.f32	s16, s15
 10613 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10614 0782 7FF78FAC 		ble	.L627
1783:Veno-Echo.cpp ****         returnval = limit;
 10615              		.loc 19 1783 19 is_stmt 0 view .LVU2983
 10616 0786 B0EE678A 		vmov.f32	s16, s15
 10617              	.LVL729:
1783:Veno-Echo.cpp ****         returnval = limit;
 10618              		.loc 19 1783 19 view .LVU2984
 10619 078a 94E4     		b	.L566
 10620              	.LVL730:
 10621              	.L594:
1783:Veno-Echo.cpp ****         returnval = limit;
 10622              		.loc 19 1783 19 view .LVU2985
 10623              	.LBE1642:
 10624              	.LBE1983:
 10625              	.LBB1984:
 10626              	.LBB1982:
 10627 078c B0EE670A 		vmov.f32	s0, s15
 10628              	.LVL731:
1783:Veno-Echo.cpp ****         returnval = limit;
 10629              		.loc 19 1783 19 view .LVU2986
 10630 0790 F1E7     		b	.L564
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 328


 10631              	.LVL732:
 10632              	.L617:
1783:Veno-Echo.cpp ****         returnval = limit;
 10633              		.loc 19 1783 19 view .LVU2987
 10634              	.LBE1982:
 10635              	.LBE1984:
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10636              		.loc 19 479 25 view .LVU2988
 10637 0792 DFED137A 		vldr.32	s15, .L633+64
 10638              	.LVL733:
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10639              		.loc 19 479 25 view .LVU2989
 10640 0796 D7E7     		b	.L562
 10641              	.LVL734:
 10642              	.L616:
 475:Veno-Echo.cpp ****             else LNegFB = 0.0;
 10643              		.loc 19 475 25 view .LVU2990
 10644 0798 9FED117A 		vldr.32	s14, .L633+64
 10645              	.LVL735:
 475:Veno-Echo.cpp ****             else LNegFB = 0.0;
 10646              		.loc 19 475 25 view .LVU2991
 10647 079c C4E7     		b	.L560
 10648              	.L634:
 10649 079e 00BF     		.align	2
 10650              	.L633:
 10651 07a0 C1270900 		.word	600001
 10652 07a4 BF270900 		.word	599999
 10653 07a8 189F2400 		.word	2400024
 10654 07ac 249F2400 		.word	2400036
 10655 07b0 1C9F2400 		.word	2400028
 10656 07b4 00000000 		.word	.LANCHOR87
 10657 07b8 00000000 		.word	.LANCHOR88
 10658 07bc 00000000 		.word	.LANCHOR0
 10659 07c0 00000000 		.word	.LANCHOR1
 10660 07c4 00000000 		.word	.LANCHOR49
 10661 07c8 00000000 		.word	.LANCHOR12
 10662 07cc 00000000 		.word	.LANCHOR109
 10663 07d0 00000000 		.word	.LANCHOR24
 10664 07d4 CDCCCC3E 		.word	1053609165
 10665 07d8 00000000 		.word	.LANCHOR110
 10666 07dc 00000000 		.word	.LANCHOR44
 10667 07e0 00000000 		.word	0
 10668 07e4 C0270900 		.word	600000
 10669              	.LVL736:
 10670              	.L588:
 10671              	.LBB1985:
 405:Veno-Echo.cpp **** if(!PostFilters)
 10672              		.loc 19 405 1 view .LVU2992
 10673 07e8 D64B     		ldr	r3, .L635
 10674              	.LBE1985:
 10675              	.LBB1986:
 10676              	.LBB1912:
1783:Veno-Echo.cpp ****         returnval = limit;
 10677              		.loc 19 1783 19 view .LVU2993
 10678 07ea B0EE470A 		vmov.f32	s0, s14
 10679              	.LVL737:
1789:Veno-Echo.cpp ****     return returnval;   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 329


 10680              		.loc 19 1789 5 is_stmt 1 view .LVU2994
1789:Veno-Echo.cpp ****     return returnval;   
 10681              		.loc 19 1789 5 is_stmt 0 view .LVU2995
 10682              	.LBE1912:
 10683              	.LBE1986:
 10684              	.LBB1987:
 405:Veno-Echo.cpp **** if(!PostFilters)
 10685              		.loc 19 405 1 view .LVU2996
 10686 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10687              	.LBE1987:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10688              		.loc 19 403 23 view .LVU2997
 10689 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 405:Veno-Echo.cpp **** if(!PostFilters)
 10690              		.loc 19 405 1 is_stmt 1 view .LVU2998
 10691              	.LBB1988:
 10692 07f4 002B     		cmp	r3, #0
 10693 07f6 7FF41DAF 		bne	.L554
 10694              	.L626:
 10695              	.LBB1915:
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 10696              		.loc 19 411 9 view .LVU2999
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 10697              		.loc 19 411 22 is_stmt 0 view .LVU3000
 10698 07fa 9FEDD39A 		vldr.32	s18, .L635+4
 10699 07fe D34D     		ldr	r5, .L635+8
 10700 0800 27EE890A 		vmul.f32	s0, s15, s18
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10701              		.loc 19 412 22 view .LVU3001
 10702 0804 D24C     		ldr	r4, .L635+12
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 10703              		.loc 19 411 22 view .LVU3002
 10704 0806 2846     		mov	r0, r5
 10705 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10706              	.LVL738:
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10707              		.loc 19 412 9 is_stmt 1 view .LVU3003
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10708              		.loc 19 412 22 is_stmt 0 view .LVU3004
 10709 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10710 0810 2046     		mov	r0, r4
 10711 0812 20EE090A 		vmul.f32	s0, s0, s18
 10712 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10713              	.LVL739:
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 10714              		.loc 19 415 9 is_stmt 1 view .LVU3005
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 10715              		.loc 19 415 9 is_stmt 0 view .LVU3006
 10716              	.LBE1915:
 10717              	.LBE1988:
 10718              	.LBE2015:
 10719              	.LBE2026:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 330


  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10720              		.loc 9 52 26 is_stmt 1 view .LVU3007
 10721              	.LBB2027:
 10722              	.LBB2016:
 10723              	.LBB1989:
 10724              	.LBB1930:
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 10725              		.loc 19 415 40 is_stmt 0 view .LVU3008
 10726 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 10727 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 10728              		.loc 19 419 49 view .LVU3009
 10729 0822 0CAA     		add	r2, sp, #48
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10730              		.loc 19 416 40 view .LVU3010
 10731 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 10732              		.loc 19 419 49 view .LVU3011
 10733 0828 08A9     		add	r1, sp, #32
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 10734              		.loc 19 415 40 view .LVU3012
 10735 082a 27EE267A 		vmul.f32	s14, s14, s13
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 10736              		.loc 19 419 49 view .LVU3013
 10737 082e C948     		ldr	r0, .L635+16
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10738              		.loc 19 416 40 view .LVU3014
 10739 0830 67EEA67A 		vmul.f32	s15, s15, s13
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 10740              		.loc 19 415 47 view .LVU3015
 10741 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10742              		.loc 19 416 9 is_stmt 1 view .LVU3016
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 331


 10743              	.LVL740:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10744              		.loc 19 416 9 is_stmt 0 view .LVU3017
 10745              	.LBE1930:
 10746              	.LBE1989:
 10747              	.LBE2016:
 10748              	.LBE2027:
 10749              		.loc 9 52 26 is_stmt 1 view .LVU3018
 10750              	.LBB2028:
 10751              	.LBB2017:
 10752              	.LBB1990:
 10753              	.LBB1931:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10754              		.loc 19 416 47 is_stmt 0 view .LVU3019
 10755 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 10756              		.loc 19 419 9 is_stmt 1 view .LVU3020
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 10757              		.loc 19 419 49 is_stmt 0 view .LVU3021
 10758 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10759              	.LVL741:
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10760              		.loc 19 420 49 view .LVU3022
 10761 0840 0DAA     		add	r2, sp, #52
 10762 0842 09A9     		add	r1, sp, #36
 10763 0844 C448     		ldr	r0, .L635+20
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 10764              		.loc 19 419 78 view .LVU3023
 10765 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10766              		.loc 19 420 9 is_stmt 1 view .LVU3024
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10767              		.loc 19 420 49 is_stmt 0 view .LVU3025
 10768 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10769              	.LVL742:
 10770              	.LBB1916:
 10771              	.LBB1917:
1782:Veno-Echo.cpp ****     if (input > limit)
 10772              		.loc 19 1782 5 view .LVU3026
 10773 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10774              	.LBE1917:
 10775              	.LBE1916:
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 10776              		.loc 19 423 36 view .LVU3027
 10777 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10778              		.loc 19 420 49 view .LVU3028
 10779 0856 F0EE407A 		vmov.f32	s15, s0
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 10780              		.loc 19 423 9 is_stmt 1 view .LVU3029
 10781              	.LVL743:
 10782              	.LBB1921:
 10783              	.LBI1916:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 10784              		.loc 19 1779 7 view .LVU3030
 10785              	.LBB1918:
1781:Veno-Echo.cpp ****     float returnval{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 332


 10786              		.loc 19 1781 5 view .LVU3031
1782:Veno-Echo.cpp ****     if (input > limit)
 10787              		.loc 19 1782 5 view .LVU3032
 10788 085a B4EEE67A 		vcmpe.f32	s14, s13
 10789 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10790 0862 00F3A681 		bgt	.L589
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10791              		.loc 19 1784 10 view .LVU3033
 10792 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10793 086a B4EEE67A 		vcmpe.f32	s14, s13
 10794 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10795 0872 00F1B581 		bmi	.L590
 10796 0876 27EE090A 		vmul.f32	s0, s14, s18
 10797              	.LVL744:
 10798              	.L555:
1789:Veno-Echo.cpp ****     return returnval;   
 10799              		.loc 19 1789 5 view .LVU3034
1789:Veno-Echo.cpp ****     return returnval;   
 10800              		.loc 19 1789 5 is_stmt 0 view .LVU3035
 10801              	.LBE1918:
 10802              	.LBE1921:
 10803              	.LBB1922:
 10804              	.LBB1923:
1782:Veno-Echo.cpp ****     if (input > limit)
 10805              		.loc 19 1782 5 view .LVU3036
 10806 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10807              	.LBE1923:
 10808              	.LBE1922:
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 10809              		.loc 19 423 25 view .LVU3037
 10810 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10811              		.loc 19 424 9 is_stmt 1 view .LVU3038
 10812              	.LVL745:
 10813              	.LBB1926:
 10814              	.LBI1922:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 10815              		.loc 19 1779 7 view .LVU3039
 10816              	.LBB1924:
1781:Veno-Echo.cpp ****     float returnval{};
 10817              		.loc 19 1781 5 view .LVU3040
1782:Veno-Echo.cpp ****     if (input > limit)
 10818              		.loc 19 1782 5 view .LVU3041
 10819 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10820 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10821 088a 00F38F81 		bgt	.L591
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10822              		.loc 19 1784 10 view .LVU3042
 10823 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10824              		.loc 19 1785 19 is_stmt 0 view .LVU3043
 10825 0892 F4EE477A 		vcmp.f32	s15, s14
 10826 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10827 089a 48BF     		it	mi
 10828 089c F0EE477A 		vmovmi.f32	s15, s14
 10829              	.LVL746:
 10830              	.L556:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 333


1789:Veno-Echo.cpp ****     return returnval;   
 10831              		.loc 19 1789 5 is_stmt 1 view .LVU3044
1789:Veno-Echo.cpp ****     return returnval;   
 10832              		.loc 19 1789 5 is_stmt 0 view .LVU3045
 10833              	.LBE1924:
 10834              	.LBE1926:
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 10835              		.loc 19 427 22 view .LVU3046
 10836 08a0 AE4D     		ldr	r5, .L635+24
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10837              		.loc 19 428 22 view .LVU3047
 10838 08a2 AF4C     		ldr	r4, .L635+28
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 10839              		.loc 19 427 22 view .LVU3048
 10840 08a4 2846     		mov	r0, r5
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10841              		.loc 19 424 25 view .LVU3049
 10842 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 10843              		.loc 19 427 9 is_stmt 1 view .LVU3050
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 10844              		.loc 19 427 22 is_stmt 0 view .LVU3051
 10845 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10846              	.LVL747:
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10847              		.loc 19 428 9 is_stmt 1 view .LVU3052
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10848              		.loc 19 428 22 is_stmt 0 view .LVU3053
 10849 08ae DFEDA67A 		vldr.32	s15, .L635+4
 10850 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10851 08b6 2046     		mov	r0, r4
 10852 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10853 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10854              	.LVL748:
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 10855              		.loc 19 430 9 is_stmt 1 view .LVU3054
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 10856              		.loc 19 430 9 is_stmt 0 view .LVU3055
 10857              	.LBE1931:
 10858              	.LBE1990:
 10859              	.LBE2017:
 10860              	.LBE2028:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10861              		.loc 9 56 27 is_stmt 1 view .LVU3056
 10862              	.LBB2029:
 10863              	.LBB2018:
 10864              	.LBB1991:
 10865              	.LBB1932:
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 10866              		.loc 19 430 41 is_stmt 0 view .LVU3057
 10867 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10868 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 10869              		.loc 19 433 45 view .LVU3058
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 334


 10870 08c8 0EA9     		add	r1, sp, #56
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10871              		.loc 19 431 41 view .LVU3059
 10872 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 10873              		.loc 19 433 45 view .LVU3060
 10874 08ce 10AA     		add	r2, sp, #64
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 10875              		.loc 19 430 41 view .LVU3061
 10876 08d0 27EE267A 		vmul.f32	s14, s14, s13
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 10877              		.loc 19 433 45 view .LVU3062
 10878 08d4 A348     		ldr	r0, .L635+32
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10879              		.loc 19 431 41 view .LVU3063
 10880 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 10881              		.loc 19 430 48 view .LVU3064
 10882 08da 8DED107A 		vstr.32	s14, [sp, #64]
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10883              		.loc 19 431 9 is_stmt 1 view .LVU3065
 10884              	.LVL749:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10885              		.loc 19 431 9 is_stmt 0 view .LVU3066
 10886              	.LBE1932:
 10887              	.LBE1991:
 10888              	.LBE2018:
 10889              	.LBE2029:
 10890              		.loc 9 56 27 is_stmt 1 view .LVU3067
 10891              	.LBB2030:
 10892              	.LBB2019:
 10893              	.LBB1992:
 10894              	.LBB1933:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10895              		.loc 19 431 48 is_stmt 0 view .LVU3068
 10896 08de CDED117A 		vstr.32	s15, [sp, #68]
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 10897              		.loc 19 433 9 is_stmt 1 view .LVU3069
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 10898              		.loc 19 433 45 is_stmt 0 view .LVU3070
 10899 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10900              	.LVL750:
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10901              		.loc 19 434 45 view .LVU3071
 10902 08e6 0FA9     		add	r1, sp, #60
 10903 08e8 11AA     		add	r2, sp, #68
 10904 08ea 9F48     		ldr	r0, .L635+36
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 10905              		.loc 19 433 25 view .LVU3072
 10906 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10907              		.loc 19 434 9 is_stmt 1 view .LVU3073
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10908              		.loc 19 434 45 is_stmt 0 view .LVU3074
 10909 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10910              	.LVL751:
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 335


 10911              		.loc 19 438 44 view .LVU3075
 10912 08f4 0EAA     		add	r2, sp, #56
 10913 08f6 08A9     		add	r1, sp, #32
 10914 08f8 9C48     		ldr	r0, .L635+40
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10915              		.loc 19 434 25 view .LVU3076
 10916 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 10917              		.loc 19 438 9 is_stmt 1 view .LVU3077
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 10918              		.loc 19 438 44 is_stmt 0 view .LVU3078
 10919 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10920              	.LVL752:
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10921              		.loc 19 439 44 view .LVU3079
 10922 0902 0FAA     		add	r2, sp, #60
 10923 0904 09A9     		add	r1, sp, #36
 10924 0906 9A48     		ldr	r0, .L635+44
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 10925              		.loc 19 438 23 view .LVU3080
 10926 0908 8DED080A 		vstr.32	s0, [sp, #32]
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10927              		.loc 19 439 9 is_stmt 1 view .LVU3081
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10928              		.loc 19 439 44 is_stmt 0 view .LVU3082
 10929 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10930              	.LVL753:
 10931 0910 DDED087A 		vldr.32	s15, [sp, #32]
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10932              		.loc 19 439 23 view .LVU3083
 10933 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10934              	.LBE1933:
 10935 0918 8CE6     		b	.L554
 10936              	.LVL754:
 10937              	.L587:
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10938              		.loc 19 439 23 view .LVU3084
 10939              	.LBE1992:
 10940              	.LBB1993:
 10941              	.LBB1906:
1783:Veno-Echo.cpp ****         returnval = limit;
 10942              		.loc 19 1783 19 view .LVU3085
 10943 091a F0EE477A 		vmov.f32	s15, s14
 10944              	.LVL755:
1783:Veno-Echo.cpp ****         returnval = limit;
 10945              		.loc 19 1783 19 view .LVU3086
 10946 091e 6DE6     		b	.L550
 10947              	.LVL756:
 10948              	.L540:
1783:Veno-Echo.cpp ****         returnval = limit;
 10949              		.loc 19 1783 19 view .LVU3087
 10950              	.LBE1906:
 10951              	.LBE1993:
 10952              	.LBB1994:
 10953              	.LBB1898:
 10954              	.LBB1894:
 126:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 336


 10955              		.loc 18 126 12 view .LVU3088
 10956 0920 944B     		ldr	r3, .L635+48
 126:delayline_reverse.h ****         {
 10957              		.loc 18 126 9 view .LVU3089
 10958 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10959              		.loc 18 126 12 view .LVU3090
 10960 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10961              		.loc 18 126 9 view .LVU3091
 10962 0926 002A     		cmp	r2, #0
 10963 0928 3FF439AE 		beq	.L546
 10964              	.L623:
 126:delayline_reverse.h ****         {
 10965              		.loc 18 126 9 view .LVU3092
 10966 092c 924A     		ldr	r2, .L635+52
 10967 092e A018     		adds	r0, r4, r2
 10968 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10969              		.loc 18 128 13 view .LVU3093
 10970 0932 002A     		cmp	r2, #0
 10971 0934 3FF419AE 		beq	.L543
 10972              	.L544:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10973              		.loc 18 141 45 view .LVU3094
 10974 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10975              	.LVL757:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10976              		.loc 18 141 45 view .LVU3095
 10977 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10978              		.loc 18 141 37 view .LVU3096
 10979 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10980              		.loc 18 142 17 view .LVU3097
 10981 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10982              		.loc 18 141 45 view .LVU3098
 10983 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10984              		.loc 18 141 37 view .LVU3099
 10985 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10986              		.loc 18 141 45 view .LVU3100
 10987 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10988              		.loc 18 141 37 view .LVU3101
 10989 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10990              		.loc 18 142 17 view .LVU3102
 10991 0954 F5EEC07A 		vcmpe.f32	s15, #0
 10992 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10993 095c 00F13A81 		bmi	.L549
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10994              		.loc 18 141 17 view .LVU3103
 10995 0960 C1ED007A 		vstr.32	s15, [r1]
 10996 0964 1BE6     		b	.L546
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 337


 10997              	.LVL758:
 10998              	.L530:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10999              		.loc 18 141 17 view .LVU3104
 11000              	.LBE1894:
 11001              	.LBE1898:
 11002              	.LBE1994:
 11003              	.LBB1995:
 11004              	.LBB1871:
 11005              	.LBB1860:
 126:delayline_reverse.h ****         {
 11006              		.loc 18 126 12 view .LVU3105
 11007 0966 834A     		ldr	r2, .L635+48
 126:delayline_reverse.h ****         {
 11008              		.loc 18 126 9 view .LVU3106
 11009 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11010              		.loc 18 126 12 view .LVU3107
 11011 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 11012              		.loc 18 126 9 view .LVU3108
 11013 096c 002B     		cmp	r3, #0
 11014 096e 3FF4ABAD 		beq	.L536
 11015              	.L621:
 126:delayline_reverse.h ****         {
 11016              		.loc 18 126 9 view .LVU3109
 11017 0972 814B     		ldr	r3, .L635+52
 11018 0974 E818     		adds	r0, r5, r3
 11019 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11020              		.loc 18 128 13 view .LVU3110
 11021 0978 002B     		cmp	r3, #0
 11022 097a 3FF435AD 		beq	.L533
 11023              	.L534:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11024              		.loc 18 141 45 view .LVU3111
 11025 097e 07EE90EA 		vmov	s15, lr	@ int
 11026              	.LVL759:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11027              		.loc 18 141 45 view .LVU3112
 11028 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 11029              		.loc 18 142 17 view .LVU3113
 11030 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11031              		.loc 18 141 45 view .LVU3114
 11032 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 11033 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11034              		.loc 18 141 37 view .LVU3115
 11035 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11036              		.loc 18 142 17 view .LVU3116
 11037 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 11038 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11039 099c 40F1C580 		bpl	.L622
 145:delayline_reverse.h ****                     playinghead_ = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 338


 11040              		.loc 18 145 21 view .LVU3117
 11041 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11042              		.loc 18 144 21 view .LVU3118
 11043 09a2 049D     		ldr	r5, [sp, #16]
 11044              	.LVL760:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11045              		.loc 18 144 21 view .LVU3119
 11046 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11047              		.loc 18 145 21 view .LVU3120
 11048 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11049              		.loc 18 146 21 view .LVU3121
 11050 09a8 0170     		strb	r1, [r0]
 11051 09aa 8DE5     		b	.L536
 11052              	.LVL761:
 11053              	.L581:
 146:delayline_reverse.h ****                 }
 11054              		.loc 18 146 21 view .LVU3122
 11055              	.LBE1860:
 11056              	.LBE1871:
 11057              	.LBE1995:
 568:Veno-Echo.cpp ****             out[i] = mixL;
 11058              		.loc 19 568 13 is_stmt 1 view .LVU3123
 568:Veno-Echo.cpp ****             out[i] = mixL;
 11059              		.loc 19 568 20 is_stmt 0 view .LVU3124
 11060 09ac 009B     		ldr	r3, [sp]
 11061 09ae C3ED007A 		vstr.32	s15, [r3]
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 11062              		.loc 19 569 13 is_stmt 1 view .LVU3125
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 11063              		.loc 19 569 22 is_stmt 0 view .LVU3126
 11064 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 11065 09b6 FFF7EDBB 		b	.L582
 11066              	.LVL762:
 11067              	.L618:
 549:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 11068              		.loc 19 549 14 is_stmt 1 view .LVU3127
 11069 09ba 40F3AC80 		ble	.L619
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 11070              		.loc 19 551 13 view .LVU3128
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 11071              		.loc 19 551 24 is_stmt 0 view .LVU3129
 11072 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 11073              		.loc 19 551 18 view .LVU3130
 11074 09c2 DBED005A 		vldr.32	s11, [fp]
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11075              		.loc 19 552 18 view .LVU3131
 11076 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 11077              		.loc 19 551 24 view .LVU3132
 11078 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 11079              		.loc 19 551 33 view .LVU3133
 11080 09ce 37EE077A 		vadd.f32	s14, s14, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 339


 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 11081              		.loc 19 551 18 view .LVU3134
 11082 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 11083              	.LVL763:
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11084              		.loc 19 552 13 is_stmt 1 view .LVU3135
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11085              		.loc 19 552 18 is_stmt 0 view .LVU3136
 11086 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 11087              	.LVL764:
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11088              		.loc 19 552 18 view .LVU3137
 11089 09da FFF7D2BB 		b	.L578
 11090              	.LVL765:
 11091              	.L597:
 11092              	.LBB1996:
 503:Veno-Echo.cpp **** if(PostFilters)
 11093              		.loc 19 503 1 view .LVU3138
 11094 09de 594B     		ldr	r3, .L635
 11095              	.LBE1996:
 11096              	.LBB1997:
 11097              	.LBB1652:
1783:Veno-Echo.cpp ****         returnval = limit;
 11098              		.loc 19 1783 19 view .LVU3139
 11099 09e0 B0EE470A 		vmov.f32	s0, s14
 11100              	.LVL766:
1789:Veno-Echo.cpp ****     return returnval;   
 11101              		.loc 19 1789 5 is_stmt 1 view .LVU3140
1789:Veno-Echo.cpp ****     return returnval;   
 11102              		.loc 19 1789 5 is_stmt 0 view .LVU3141
 11103              	.LBE1652:
 11104              	.LBE1997:
 11105              	.LBB1998:
 503:Veno-Echo.cpp **** if(PostFilters)
 11106              		.loc 19 503 1 view .LVU3142
 11107 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11108              	.LBE1998:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 11109              		.loc 19 501 27 view .LVU3143
 11110 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 503:Veno-Echo.cpp **** if(PostFilters)
 11111              		.loc 19 503 1 is_stmt 1 view .LVU3144
 11112              	.LBB1999:
 11113 09ea 002B     		cmp	r3, #0
 11114 09ec 3FF4B0AB 		beq	.L572
 11115              	.L624:
 11116              	.LBB1655:
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 11117              		.loc 19 509 9 view .LVU3145
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 11118              		.loc 19 509 27 is_stmt 0 view .LVU3146
 11119 09f0 9FED558A 		vldr.32	s16, .L635+4
 11120              	.LVL767:
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 11121              		.loc 19 509 27 view .LVU3147
 11122 09f4 614D     		ldr	r5, .L635+56
 11123 09f6 27EE880A 		vmul.f32	s0, s15, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 340


 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11124              		.loc 19 510 27 view .LVU3148
 11125 09fa 614C     		ldr	r4, .L635+60
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 11126              		.loc 19 509 27 view .LVU3149
 11127 09fc 2846     		mov	r0, r5
 11128 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11129              	.LVL768:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11130              		.loc 19 510 9 is_stmt 1 view .LVU3150
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11131              		.loc 19 510 27 is_stmt 0 view .LVU3151
 11132 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 11133 0a06 2046     		mov	r0, r4
 11134 0a08 20EE080A 		vmul.f32	s0, s0, s16
 11135 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11136              	.LVL769:
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 11137              		.loc 19 513 9 is_stmt 1 view .LVU3152
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 11138              		.loc 19 513 9 is_stmt 0 view .LVU3153
 11139              	.LBE1655:
 11140              	.LBE1999:
 11141              	.LBE2019:
 11142              	.LBE2030:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11143              		.loc 9 52 26 is_stmt 1 view .LVU3154
 11144              	.LBB2031:
 11145              	.LBB2020:
 11146              	.LBB2000:
 11147              	.LBB1670:
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 11148              		.loc 19 513 50 is_stmt 0 view .LVU3155
 11149 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 11150 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 11151              		.loc 19 517 59 view .LVU3156
 11152 0a18 0AA9     		add	r1, sp, #40
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11153              		.loc 19 514 50 view .LVU3157
 11154 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 11155              		.loc 19 517 59 view .LVU3158
 11156 0a1e 0CAA     		add	r2, sp, #48
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 11157              		.loc 19 513 50 view .LVU3159
 11158 0a20 27EE267A 		vmul.f32	s14, s14, s13
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 11159              		.loc 19 517 59 view .LVU3160
 11160 0a24 5748     		ldr	r0, .L635+64
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11161              		.loc 19 514 50 view .LVU3161
 11162 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 11163              		.loc 19 513 57 view .LVU3162
 11164 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 341


 11165              		.loc 19 514 9 is_stmt 1 view .LVU3163
 11166              	.LVL770:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11167              		.loc 19 514 9 is_stmt 0 view .LVU3164
 11168              	.LBE1670:
 11169              	.LBE2000:
 11170              	.LBE2020:
 11171              	.LBE2031:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11172              		.loc 9 52 26 is_stmt 1 view .LVU3165
 11173              	.LBB2032:
 11174              	.LBB2021:
 11175              	.LBB2001:
 11176              	.LBB1671:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11177              		.loc 19 514 57 is_stmt 0 view .LVU3166
 11178 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 11179              		.loc 19 517 9 is_stmt 1 view .LVU3167
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 11180              		.loc 19 517 59 is_stmt 0 view .LVU3168
 11181 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11182              	.LVL771:
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11183              		.loc 19 518 59 view .LVU3169
 11184 0a36 0BA9     		add	r1, sp, #44
 11185 0a38 0DAA     		add	r2, sp, #52
 11186 0a3a 5348     		ldr	r0, .L635+68
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 11187              		.loc 19 517 97 view .LVU3170
 11188 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11189              		.loc 19 518 9 is_stmt 1 view .LVU3171
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11190              		.loc 19 518 59 is_stmt 0 view .LVU3172
 11191 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11192              	.LVL772:
 11193              	.LBB1656:
 11194              	.LBB1657:
1782:Veno-Echo.cpp ****     if (input > limit)
 11195              		.loc 19 1782 5 view .LVU3173
 11196 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 11197              	.LBE1657:
 11198              	.LBE1656:
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 11199              		.loc 19 521 41 view .LVU3174
 11200 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11201              		.loc 19 518 59 view .LVU3175
 11202 0a4c F0EE407A 		vmov.f32	s15, s0
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 11203              		.loc 19 521 9 is_stmt 1 view .LVU3176
 11204              	.LVL773:
 11205              	.LBB1661:
 11206              	.LBI1656:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 11207              		.loc 19 1779 7 view .LVU3177
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 342


 11208              	.LBB1658:
1781:Veno-Echo.cpp ****     float returnval{};
 11209              		.loc 19 1781 5 view .LVU3178
1782:Veno-Echo.cpp ****     if (input > limit)
 11210              		.loc 19 1782 5 view .LVU3179
 11211 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 11212 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11213 0a58 6EDC     		bgt	.L598
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11214              		.loc 19 1784 10 view .LVU3180
 11215 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 11216 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 11217 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11218 0a66 00F1C080 		bmi	.L599
 11219 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 11220              	.LVL774:
 11221              	.L573:
1789:Veno-Echo.cpp ****     return returnval;   
 11222              		.loc 19 1789 5 view .LVU3181
1789:Veno-Echo.cpp ****     return returnval;   
 11223              		.loc 19 1789 5 is_stmt 0 view .LVU3182
 11224              	.LBE1658:
 11225              	.LBE1661:
 11226              	.LBB1662:
 11227              	.LBB1663:
1782:Veno-Echo.cpp ****     if (input > limit)
 11228              		.loc 19 1782 5 view .LVU3183
 11229 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 11230              	.LBE1663:
 11231              	.LBE1662:
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 11232              		.loc 19 521 30 view .LVU3184
 11233 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11234              		.loc 19 522 9 is_stmt 1 view .LVU3185
 11235              	.LVL775:
 11236              	.LBB1666:
 11237              	.LBI1662:
1779:Veno-Echo.cpp **** float HardLimit(float input, float limit)
 11238              		.loc 19 1779 7 view .LVU3186
 11239              	.LBB1664:
1781:Veno-Echo.cpp ****     float returnval{};
 11240              		.loc 19 1781 5 view .LVU3187
1782:Veno-Echo.cpp ****     if (input > limit)
 11241              		.loc 19 1782 5 view .LVU3188
 11242 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 11243 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11244 0a7e 58DC     		bgt	.L600
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11245              		.loc 19 1784 10 view .LVU3189
 11246 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11247              		.loc 19 1785 19 is_stmt 0 view .LVU3190
 11248 0a84 F4EE477A 		vcmp.f32	s15, s14
 11249 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11250 0a8c 48BF     		it	mi
 11251 0a8e F0EE477A 		vmovmi.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 343


 11252              	.LVL776:
 11253              	.L574:
1789:Veno-Echo.cpp ****     return returnval;   
 11254              		.loc 19 1789 5 is_stmt 1 view .LVU3191
1789:Veno-Echo.cpp ****     return returnval;   
 11255              		.loc 19 1789 5 is_stmt 0 view .LVU3192
 11256              	.LBE1664:
 11257              	.LBE1666:
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 11258              		.loc 19 525 27 view .LVU3193
 11259 0a92 3E4D     		ldr	r5, .L635+72
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11260              		.loc 19 526 27 view .LVU3194
 11261 0a94 3E4C     		ldr	r4, .L635+76
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 11262              		.loc 19 525 27 view .LVU3195
 11263 0a96 2846     		mov	r0, r5
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11264              		.loc 19 522 30 view .LVU3196
 11265 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 11266              		.loc 19 525 9 is_stmt 1 view .LVU3197
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 11267              		.loc 19 525 27 is_stmt 0 view .LVU3198
 11268 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11269              	.LVL777:
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11270              		.loc 19 526 9 is_stmt 1 view .LVU3199
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11271              		.loc 19 526 27 is_stmt 0 view .LVU3200
 11272 0aa0 DFED297A 		vldr.32	s15, .L635+4
 11273 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 11274 0aa8 2046     		mov	r0, r4
 11275 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 11276 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11277              	.LVL778:
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 11278              		.loc 19 528 9 is_stmt 1 view .LVU3201
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 11279              		.loc 19 528 9 is_stmt 0 view .LVU3202
 11280              	.LBE1671:
 11281              	.LBE2001:
 11282              	.LBE2021:
 11283              	.LBE2032:
 11284              		.loc 9 56 27 is_stmt 1 view .LVU3203
 11285              	.LBB2033:
 11286              	.LBB2022:
 11287              	.LBB2002:
 11288              	.LBB1672:
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 11289              		.loc 19 528 51 is_stmt 0 view .LVU3204
 11290 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 11291 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 11292              		.loc 19 531 55 view .LVU3205
 11293 0aba 0EA9     		add	r1, sp, #56
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 344


 11294              		.loc 19 529 51 view .LVU3206
 11295 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 11296              		.loc 19 531 55 view .LVU3207
 11297 0ac0 10AA     		add	r2, sp, #64
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 11298              		.loc 19 528 51 view .LVU3208
 11299 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 11300              		.loc 19 531 55 view .LVU3209
 11301 0ac6 3348     		ldr	r0, .L635+80
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11302              		.loc 19 529 51 view .LVU3210
 11303 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 11304              		.loc 19 528 58 view .LVU3211
 11305 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11306              		.loc 19 529 9 is_stmt 1 view .LVU3212
 11307              	.LVL779:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11308              		.loc 19 529 9 is_stmt 0 view .LVU3213
 11309              	.LBE1672:
 11310              	.LBE2002:
 11311              	.LBE2022:
 11312              	.LBE2033:
 11313              		.loc 9 56 27 is_stmt 1 view .LVU3214
 11314              	.LBB2034:
 11315              	.LBB2023:
 11316              	.LBB2003:
 11317              	.LBB1673:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11318              		.loc 19 529 58 is_stmt 0 view .LVU3215
 11319 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 11320              		.loc 19 531 9 is_stmt 1 view .LVU3216
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 11321              		.loc 19 531 55 is_stmt 0 view .LVU3217
 11322 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11323              	.LVL780:
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11324              		.loc 19 532 55 view .LVU3218
 11325 0ad8 0FA9     		add	r1, sp, #60
 11326 0ada 11AA     		add	r2, sp, #68
 11327 0adc 2E48     		ldr	r0, .L635+84
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 11328              		.loc 19 531 30 view .LVU3219
 11329 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11330              		.loc 19 532 9 is_stmt 1 view .LVU3220
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11331              		.loc 19 532 55 is_stmt 0 view .LVU3221
 11332 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11333              	.LVL781:
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 11334              		.loc 19 535 53 view .LVU3222
 11335 0ae6 0EAA     		add	r2, sp, #56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 345


 11336 0ae8 0AA9     		add	r1, sp, #40
 11337 0aea 2C48     		ldr	r0, .L635+88
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11338              		.loc 19 532 30 view .LVU3223
 11339 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 11340              		.loc 19 535 9 is_stmt 1 view .LVU3224
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 11341              		.loc 19 535 53 is_stmt 0 view .LVU3225
 11342 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11343              	.LVL782:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11344              		.loc 19 536 53 view .LVU3226
 11345 0af4 0FAA     		add	r2, sp, #60
 11346 0af6 0BA9     		add	r1, sp, #44
 11347 0af8 2948     		ldr	r0, .L635+92
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 11348              		.loc 19 535 27 view .LVU3227
 11349 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11350              		.loc 19 536 9 is_stmt 1 view .LVU3228
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11351              		.loc 19 536 53 is_stmt 0 view .LVU3229
 11352 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11353              	.LVL783:
 11354 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11355              		.loc 19 536 27 view .LVU3230
 11356 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 11357              	.LBE1673:
 11358 0b0a FFF721BB 		b	.L572
 11359              	.LVL784:
 11360              	.L596:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11361              		.loc 19 536 27 view .LVU3231
 11362              	.LBE2003:
 11363              	.LBB2004:
 11364              	.LBB1646:
1783:Veno-Echo.cpp ****         returnval = limit;
 11365              		.loc 19 1783 19 view .LVU3232
 11366 0b0e F0EE477A 		vmov.f32	s15, s14
 11367              	.LVL785:
1783:Veno-Echo.cpp ****         returnval = limit;
 11368              		.loc 19 1783 19 view .LVU3233
 11369 0b12 FFF703BB 		b	.L568
 11370              	.LVL786:
 11371              	.L619:
1783:Veno-Echo.cpp ****         returnval = limit;
 11372              		.loc 19 1783 19 view .LVU3234
 11373              	.LBE1646:
 11374              	.LBE2004:
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 11375              		.loc 19 556 13 is_stmt 1 view .LVU3235
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 11376              		.loc 19 556 18 is_stmt 0 view .LVU3236
 11377 0b16 DBED006A 		vldr.32	s13, [fp]
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 346


 11378              		.loc 19 557 18 view .LVU3237
 11379 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 11380              		.loc 19 556 18 view .LVU3238
 11381 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 11382              	.LVL787:
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11383              		.loc 19 557 13 is_stmt 1 view .LVU3239
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11384              		.loc 19 557 18 is_stmt 0 view .LVU3240
 11385 0b22 30EE070A 		vadd.f32	s0, s0, s14
 11386              	.LVL788:
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11387              		.loc 19 557 18 view .LVU3241
 11388 0b26 FFF72CBB 		b	.L578
 11389              	.LVL789:
 11390              	.L622:
 11391              	.LBB2005:
 11392              	.LBB1872:
 11393              	.LBB1861:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11394              		.loc 18 141 17 view .LVU3242
 11395 0b2a 049B     		ldr	r3, [sp, #16]
 11396 0b2c 83ED00BA 		vstr.32	s22, [r3]
 11397 0b30 CAE4     		b	.L536
 11398              	.LVL790:
 11399              	.L600:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11400              		.loc 18 141 17 view .LVU3243
 11401              	.LBE1861:
 11402              	.LBE1872:
 11403              	.LBE2005:
 11404              	.LBB2006:
 11405              	.LBB1674:
 11406              	.LBB1667:
 11407              	.LBB1665:
1783:Veno-Echo.cpp ****         returnval = limit;
 11408              		.loc 19 1783 19 view .LVU3244
 11409 0b32 F0EE667A 		vmov.f32	s15, s13
 11410              	.LVL791:
1783:Veno-Echo.cpp ****         returnval = limit;
 11411              		.loc 19 1783 19 view .LVU3245
 11412 0b36 ACE7     		b	.L574
 11413              	.LVL792:
 11414              	.L598:
1783:Veno-Echo.cpp ****         returnval = limit;
 11415              		.loc 19 1783 19 view .LVU3246
 11416              	.LBE1665:
 11417              	.LBE1667:
 11418              	.LBB1668:
 11419              	.LBB1659:
 11420 0b38 B0EE667A 		vmov.f32	s14, s13
 11421              	.LVL793:
1783:Veno-Echo.cpp ****         returnval = limit;
 11422              		.loc 19 1783 19 view .LVU3247
 11423 0b3c 9FED190A 		vldr.32	s0, .L635+96
 11424 0b40 95E7     		b	.L573
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 347


 11425              	.L636:
 11426 0b42 00BF     		.align	2
 11427              	.L635:
 11428 0b44 00000000 		.word	.LANCHOR49
 11429 0b48 CDCCCC3D 		.word	1036831949
 11430 0b4c 00000000 		.word	.LANCHOR27
 11431 0b50 00000000 		.word	.LANCHOR28
 11432 0b54 00000000 		.word	.LANCHOR99
 11433 0b58 00000000 		.word	.LANCHOR100
 11434 0b5c 00000000 		.word	.LANCHOR15
 11435 0b60 00000000 		.word	.LANCHOR16
 11436 0b64 00000000 		.word	.LANCHOR97
 11437 0b68 00000000 		.word	.LANCHOR98
 11438 0b6c 00000000 		.word	.LANCHOR105
 11439 0b70 00000000 		.word	.LANCHOR106
 11440 0b74 249F2400 		.word	2400036
 11441 0b78 1C9F2400 		.word	2400028
 11442 0b7c 00000000 		.word	.LANCHOR29
 11443 0b80 00000000 		.word	.LANCHOR30
 11444 0b84 00000000 		.word	.LANCHOR103
 11445 0b88 00000000 		.word	.LANCHOR104
 11446 0b8c 00000000 		.word	.LANCHOR17
 11447 0b90 00000000 		.word	.LANCHOR18
 11448 0b94 00000000 		.word	.LANCHOR101
 11449 0b98 00000000 		.word	.LANCHOR102
 11450 0b9c 00000000 		.word	.LANCHOR107
 11451 0ba0 00000000 		.word	.LANCHOR108
 11452 0ba4 CDCC4C3E 		.word	1045220557
 11453 0ba8 CDCC4CBE 		.word	3192704205
 11454              	.LVL794:
 11455              	.L591:
1783:Veno-Echo.cpp ****         returnval = limit;
 11456              		.loc 19 1783 19 view .LVU3248
 11457              	.LBE1659:
 11458              	.LBE1668:
 11459              	.LBE1674:
 11460              	.LBE2006:
 11461              	.LBB2007:
 11462              	.LBB1934:
 11463              	.LBB1927:
 11464              	.LBB1925:
 11465 0bac F0EE667A 		vmov.f32	s15, s13
 11466              	.LVL795:
1783:Veno-Echo.cpp ****         returnval = limit;
 11467              		.loc 19 1783 19 view .LVU3249
 11468 0bb0 76E6     		b	.L556
 11469              	.LVL796:
 11470              	.L589:
1783:Veno-Echo.cpp ****         returnval = limit;
 11471              		.loc 19 1783 19 view .LVU3250
 11472              	.LBE1925:
 11473              	.LBE1927:
 11474              	.LBB1928:
 11475              	.LBB1919:
 11476 0bb2 B0EE667A 		vmov.f32	s14, s13
 11477              	.LVL797:
1783:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 348


 11478              		.loc 19 1783 19 view .LVU3251
 11479 0bb6 1FED050A 		vldr.32	s0, .L635+96
 11480 0bba 5EE6     		b	.L555
 11481              	.LVL798:
 11482              	.L532:
1783:Veno-Echo.cpp ****         returnval = limit;
 11483              		.loc 19 1783 19 view .LVU3252
 11484              	.LBE1919:
 11485              	.LBE1928:
 11486              	.LBE1934:
 11487              	.LBE2007:
 11488              	.LBB2008:
 11489              	.LBB1873:
 11490              	.LBB1862:
 116:delayline_reverse.h ****                 }
 11491              		.loc 18 116 21 view .LVU3253
 11492 0bbc AB60     		str	r3, [r5, #8]
 11493 0bbe DEE6     		b	.L534
 11494              	.LVL799:
 11495              	.L542:
 116:delayline_reverse.h ****                 }
 11496              		.loc 18 116 21 view .LVU3254
 11497              	.LBE1862:
 11498              	.LBE1873:
 11499              	.LBE2008:
 11500              	.LBB2009:
 11501              	.LBB1899:
 11502              	.LBB1895:
 11503 0bc0 A260     		str	r2, [r4, #8]
 11504 0bc2 B9E6     		b	.L544
 11505              	.LVL800:
 11506              	.L511:
 116:delayline_reverse.h ****                 }
 11507              		.loc 18 116 21 view .LVU3255
 11508              	.LBE1895:
 11509              	.LBE1899:
 11510              	.LBE2009:
 11511              	.LBE2023:
 11512              	.LBE2034:
 577:Veno-Echo.cpp **** }
 11513              		.loc 19 577 1 view .LVU3256
 11514 0bc4 13B0     		add	sp, sp, #76
 11515              		.cfi_remember_state
 11516              		.cfi_def_cfa_offset 92
 11517              		@ sp needed
 11518 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 11519              		.cfi_restore 92
 11520              		.cfi_restore 93
 11521              		.cfi_restore 90
 11522              		.cfi_restore 91
 11523              		.cfi_restore 88
 11524              		.cfi_restore 89
 11525              		.cfi_restore 86
 11526              		.cfi_restore 87
 11527              		.cfi_restore 84
 11528              		.cfi_restore 85
 11529              		.cfi_restore 82
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 349


 11530              		.cfi_restore 83
 11531              		.cfi_restore 80
 11532              		.cfi_restore 81
 11533              		.cfi_def_cfa_offset 36
 11534 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11535              	.LVL801:
 11536              	.L625:
 11537              		.cfi_restore_state
 11538              	.LBB2035:
 11539              	.LBB2024:
 11540              	.LBB2010:
 11541              	.LBB1900:
 11542              	.LBB1896:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11543              		.loc 18 130 17 view .LVU3257
 11544 0bce C2ED007A 		vstr.32	s15, [r2]
 11545 0bd2 E4E4     		b	.L546
 11546              	.L549:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11547              		.loc 18 145 21 view .LVU3258
 11548 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11549              		.loc 18 144 21 view .LVU3259
 11550 0bd6 039C     		ldr	r4, [sp, #12]
 11551              	.LVL802:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11552              		.loc 18 144 21 view .LVU3260
 11553 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11554              		.loc 18 145 21 view .LVU3261
 11555 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11556              		.loc 18 146 21 view .LVU3262
 11557 0bdc 0170     		strb	r1, [r0]
 11558 0bde DEE4     		b	.L546
 11559              	.LVL803:
 11560              	.L590:
 146:delayline_reverse.h ****                 }
 11561              		.loc 18 146 21 view .LVU3263
 11562              	.LBE1896:
 11563              	.LBE1900:
 11564              	.LBE2010:
 11565              	.LBB2011:
 11566              	.LBB1935:
 11567              	.LBB1929:
 11568              	.LBB1920:
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11569              		.loc 19 1785 19 view .LVU3264
 11570 0be0 B0EE667A 		vmov.f32	s14, s13
 11571              	.LVL804:
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11572              		.loc 19 1785 19 view .LVU3265
 11573 0be4 1FED100A 		vldr.32	s0, .L635+100
 11574 0be8 47E6     		b	.L555
 11575              	.LVL805:
 11576              	.L599:
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 350


 11577              		.loc 19 1785 19 view .LVU3266
 11578              	.LBE1920:
 11579              	.LBE1929:
 11580              	.LBE1935:
 11581              	.LBE2011:
 11582              	.LBB2012:
 11583              	.LBB1675:
 11584              	.LBB1669:
 11585              	.LBB1660:
 11586 0bea B0EE667A 		vmov.f32	s14, s13
 11587              	.LVL806:
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11588              		.loc 19 1785 19 view .LVU3267
 11589 0bee 1FED120A 		vldr.32	s0, .L635+100
 11590 0bf2 3CE7     		b	.L573
 11591              	.LVL807:
 11592              	.L513:
1785:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11593              		.loc 19 1785 19 view .LVU3268
 11594              	.LBE1660:
 11595              	.LBE1669:
 11596              	.LBE1675:
 11597              	.LBE2012:
 11598              	.LBE2024:
 11599              	.LBE2035:
 344:Veno-Echo.cpp ****             case 14:
 11600              		.loc 19 344 13 is_stmt 1 view .LVU3269
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 11601              		.loc 19 345 17 view .LVU3270
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 11602              		.loc 19 345 35 is_stmt 0 view .LVU3271
 11603 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11604              	.LVL808:
 346:Veno-Echo.cpp ****             break;
 11605              		.loc 19 346 13 is_stmt 1 view .LVU3272
 11606 0bf8 FFF739BA 		b	.L512
 11607              	.L516:
 336:Veno-Echo.cpp ****             case 12:
 11608              		.loc 19 336 13 view .LVU3273
 337:Veno-Echo.cpp ****                 Update_width();
 11609              		.loc 19 337 17 view .LVU3274
 337:Veno-Echo.cpp ****                 Update_width();
 11610              		.loc 19 337 29 is_stmt 0 view .LVU3275
 11611 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11612              	.LVL809:
 338:Veno-Echo.cpp ****             break;
 11613              		.loc 19 338 13 is_stmt 1 view .LVU3276
 11614 0c00 FFF735BA 		b	.L512
 11615              	.L517:
 332:Veno-Echo.cpp ****             case 11:
 11616              		.loc 19 332 13 view .LVU3277
 333:Veno-Echo.cpp ****                 Update_width_CV();
 11617              		.loc 19 333 17 view .LVU3278
 11618              	.LBB2036:
 11619              	.LBI2036:
1217:Veno-Echo.cpp **** void Update_width_CV()
 11620              		.loc 19 1217 6 view .LVU3279
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 351


 11621              	.LBB2037:
1219:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 11622              		.loc 19 1219 5 view .LVU3280
1219:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 11623              		.loc 19 1219 30 is_stmt 0 view .LVU3281
 11624 0c04 0521     		movs	r1, #5
 11625 0c06 2748     		ldr	r0, .L637
 11626 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11627              	.LVL810:
1219:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 11628              		.loc 19 1219 13 view .LVU3282
 11629 0c0c 264B     		ldr	r3, .L637+4
 11630 0c0e 83ED000A 		vstr.32	s0, [r3]
1220:Veno-Echo.cpp **** }
 11631              		.loc 19 1220 1 view .LVU3283
 11632 0c12 FFF72CBA 		b	.L512
 11633              	.L518:
 11634              	.LBE2037:
 11635              	.LBE2036:
 328:Veno-Echo.cpp ****             case 10:
 11636              		.loc 19 328 13 is_stmt 1 view .LVU3284
 329:Veno-Echo.cpp ****                 Update_drywet();
 11637              		.loc 19 329 17 view .LVU3285
 329:Veno-Echo.cpp ****                 Update_drywet();
 11638              		.loc 19 329 30 is_stmt 0 view .LVU3286
 11639 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11640              	.LVL811:
 330:Veno-Echo.cpp ****             break;
 11641              		.loc 19 330 13 is_stmt 1 view .LVU3287
 11642 0c1a FFF728BA 		b	.L512
 11643              	.L519:
 324:Veno-Echo.cpp ****             case 9:
 11644              		.loc 19 324 13 view .LVU3288
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 11645              		.loc 19 325 17 view .LVU3289
 11646              	.LBB2038:
 11647              	.LBI2038:
1123:Veno-Echo.cpp **** void Update_drywet_CV()
 11648              		.loc 19 1123 6 view .LVU3290
 11649              	.LBB2039:
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 11650              		.loc 19 1125 5 view .LVU3291
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 11651              		.loc 19 1125 32 is_stmt 0 view .LVU3292
 11652 0c1e 0421     		movs	r1, #4
 11653 0c20 2048     		ldr	r0, .L637
 11654 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11655              	.LVL812:
1125:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 11656              		.loc 19 1125 15 view .LVU3293
 11657 0c26 214B     		ldr	r3, .L637+8
 11658 0c28 83ED000A 		vstr.32	s0, [r3]
1126:Veno-Echo.cpp **** }
 11659              		.loc 19 1126 1 view .LVU3294
 11660 0c2c FFF71FBA 		b	.L512
 11661              	.L520:
 11662              	.LBE2039:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 352


 11663              	.LBE2038:
 320:Veno-Echo.cpp ****             case 8:
 11664              		.loc 19 320 13 is_stmt 1 view .LVU3295
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 11665              		.loc 19 321 17 view .LVU3296
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 11666              		.loc 19 321 33 is_stmt 0 view .LVU3297
 11667 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11668              	.LVL813:
 322:Veno-Echo.cpp ****             break;
 11669              		.loc 19 322 13 is_stmt 1 view .LVU3298
 11670 0c34 FFF71BBA 		b	.L512
 11671              	.L521:
 316:Veno-Echo.cpp ****             case 7:
 11672              		.loc 19 316 13 view .LVU3299
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11673              		.loc 19 317 17 view .LVU3300
 11674              	.LBB2040:
 11675              	.LBI2040:
1051:Veno-Echo.cpp **** void Update_feedbackR_CV()
 11676              		.loc 19 1051 6 view .LVU3301
 11677              	.LBB2041:
1053:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 11678              		.loc 19 1053 5 view .LVU3302
1053:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 11679              		.loc 19 1053 35 is_stmt 0 view .LVU3303
 11680 0c38 0321     		movs	r1, #3
 11681 0c3a 1A48     		ldr	r0, .L637
 11682 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11683              	.LVL814:
1053:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 11684              		.loc 19 1053 18 view .LVU3304
 11685 0c40 1B4B     		ldr	r3, .L637+12
 11686 0c42 83ED000A 		vstr.32	s0, [r3]
1054:Veno-Echo.cpp **** }
 11687              		.loc 19 1054 1 view .LVU3305
 11688 0c46 FFF712BA 		b	.L512
 11689              	.L522:
 11690              	.LBE2041:
 11691              	.LBE2040:
 312:Veno-Echo.cpp ****             case 6:
 11692              		.loc 19 312 13 is_stmt 1 view .LVU3306
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 11693              		.loc 19 313 17 view .LVU3307
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 11694              		.loc 19 313 33 is_stmt 0 view .LVU3308
 11695 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11696              	.LVL815:
 314:Veno-Echo.cpp ****             break;
 11697              		.loc 19 314 13 is_stmt 1 view .LVU3309
 11698 0c4e FFF70EBA 		b	.L512
 11699              	.L523:
 308:Veno-Echo.cpp ****             case 5:
 11700              		.loc 19 308 13 view .LVU3310
 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11701              		.loc 19 309 17 view .LVU3311
 11702              	.LBB2042:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 353


 11703              	.LBI2042:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 11704              		.loc 19 979 6 view .LVU3312
 11705              	.LBB2043:
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 11706              		.loc 19 981 5 view .LVU3313
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 11707              		.loc 19 981 35 is_stmt 0 view .LVU3314
 11708 0c52 0221     		movs	r1, #2
 11709 0c54 1348     		ldr	r0, .L637
 11710 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11711              	.LVL816:
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 11712              		.loc 19 981 18 view .LVU3315
 11713 0c5a 164B     		ldr	r3, .L637+16
 11714 0c5c 83ED000A 		vstr.32	s0, [r3]
 982:Veno-Echo.cpp **** }
 11715              		.loc 19 982 1 view .LVU3316
 11716 0c60 FFF705BA 		b	.L512
 11717              	.L524:
 11718              	.LBE2043:
 11719              	.LBE2042:
 304:Veno-Echo.cpp ****             case 4:
 11720              		.loc 19 304 13 is_stmt 1 view .LVU3317
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11721              		.loc 19 305 17 view .LVU3318
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11722              		.loc 19 305 34 is_stmt 0 view .LVU3319
 11723 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11724              	.LVL817:
 306:Veno-Echo.cpp ****             break;
 11725              		.loc 19 306 13 is_stmt 1 view .LVU3320
 11726 0c68 FFF701BA 		b	.L512
 11727              	.L525:
 300:Veno-Echo.cpp ****             case 3:
 11728              		.loc 19 300 13 view .LVU3321
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11729              		.loc 19 301 17 view .LVU3322
 11730              	.LBB2044:
 11731              	.LBI2044:
 885:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 11732              		.loc 19 885 6 view .LVU3323
 11733              	.LBB2045:
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 11734              		.loc 19 887 5 view .LVU3324
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 11735              		.loc 19 887 36 is_stmt 0 view .LVU3325
 11736 0c6c 0121     		movs	r1, #1
 11737 0c6e 0D48     		ldr	r0, .L637
 11738 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11739              	.LVL818:
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 11740              		.loc 19 887 19 view .LVU3326
 11741 0c74 104B     		ldr	r3, .L637+20
 11742 0c76 83ED000A 		vstr.32	s0, [r3]
 888:Veno-Echo.cpp **** }
 11743              		.loc 19 888 1 view .LVU3327
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 354


 11744 0c7a FFF7F8B9 		b	.L512
 11745              	.L526:
 11746              	.LBE2045:
 11747              	.LBE2044:
 296:Veno-Echo.cpp ****             case 2:
 11748              		.loc 19 296 13 is_stmt 1 view .LVU3328
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11749              		.loc 19 297 17 view .LVU3329
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11750              		.loc 19 297 34 is_stmt 0 view .LVU3330
 11751 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11752              	.LVL819:
 298:Veno-Echo.cpp ****             break;
 11753              		.loc 19 298 13 is_stmt 1 view .LVU3331
 11754 0c82 FFF7F4B9 		b	.L512
 11755              	.L527:
 292:Veno-Echo.cpp ****             case 1:
 11756              		.loc 19 292 13 view .LVU3332
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11757              		.loc 19 293 17 view .LVU3333
 11758              	.LBB2046:
 11759              	.LBI2046:
 787:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 11760              		.loc 19 787 6 view .LVU3334
 11761              	.LBB2047:
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 11762              		.loc 19 789 5 view .LVU3335
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 11763              		.loc 19 789 36 is_stmt 0 view .LVU3336
 11764 0c86 0021     		movs	r1, #0
 11765 0c88 0648     		ldr	r0, .L637
 11766 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11767              	.LVL820:
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 11768              		.loc 19 789 19 view .LVU3337
 11769 0c8e 0B4B     		ldr	r3, .L637+24
 11770 0c90 83ED000A 		vstr.32	s0, [r3]
 790:Veno-Echo.cpp **** }
 11771              		.loc 19 790 1 view .LVU3338
 11772 0c94 FFF7EBB9 		b	.L512
 11773              	.L528:
 11774              	.LBE2047:
 11775              	.LBE2046:
 287:Veno-Echo.cpp ****             case 0:
 11776              		.loc 19 287 13 is_stmt 1 view .LVU3339
 288:Veno-Echo.cpp ****                 Update_Buttons();
 11777              		.loc 19 288 17 view .LVU3340
 288:Veno-Echo.cpp ****                 Update_Buttons();
 11778              		.loc 19 288 31 is_stmt 0 view .LVU3341
 11779 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11780              	.LVL821:
 289:Veno-Echo.cpp ****                 GetModCV();
 11781              		.loc 19 289 17 is_stmt 1 view .LVU3342
 289:Veno-Echo.cpp ****                 GetModCV();
 11782              		.loc 19 289 25 is_stmt 0 view .LVU3343
 11783 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 11784              	.LVL822:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 355


 290:Veno-Echo.cpp ****             break;
 11785              		.loc 19 290 13 is_stmt 1 view .LVU3344
 11786 0ca0 FFF7E5B9 		b	.L512
 11787              	.L638:
 11788              		.align	2
 11789              	.L637:
 11790 0ca4 18000000 		.word	.LANCHOR4+24
 11791 0ca8 00000000 		.word	.LANCHOR38
 11792 0cac 00000000 		.word	.LANCHOR31
 11793 0cb0 00000000 		.word	.LANCHOR20
 11794 0cb4 00000000 		.word	.LANCHOR7
 11795 0cb8 00000000 		.word	.LANCHOR6
 11796 0cbc 00000000 		.word	.LANCHOR5
 11797              		.cfi_endproc
 11798              	.LFE4288:
 11800              		.section	.text._Z9HardLimitff,"ax",%progbits
 11801              		.align	1
 11802              		.p2align 2,,3
 11803              		.global	_Z9HardLimitff
 11804              		.syntax unified
 11805              		.thumb
 11806              		.thumb_func
 11807              		.fpu fpv5-d16
 11809              	_Z9HardLimitff:
 11810              	.LVL823:
 11811              	.LFB4315:
1780:Veno-Echo.cpp **** {
 11812              		.loc 19 1780 1 view -0
 11813              		.cfi_startproc
 11814              		@ args = 0, pretend = 0, frame = 0
 11815              		@ frame_needed = 0, uses_anonymous_args = 0
 11816              		@ link register save eliminated.
1781:Veno-Echo.cpp ****     float returnval{};
 11817              		.loc 19 1781 5 view .LVU3346
1782:Veno-Echo.cpp ****     if (input > limit)
 11818              		.loc 19 1782 5 view .LVU3347
 11819 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11820 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11821 0008 07DC     		bgt	.L640
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11822              		.loc 19 1784 10 view .LVU3348
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11823              		.loc 19 1784 28 is_stmt 0 view .LVU3349
 11824 000a F1EE600A 		vneg.f32	s1, s1
 11825              	.LVL824:
1784:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11826              		.loc 19 1784 10 view .LVU3350
 11827 000e F4EEC00A 		vcmpe.f32	s1, s0
 11828 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1787:Veno-Echo.cpp ****         returnval = input;
 11829              		.loc 19 1787 19 view .LVU3351
 11830 0016 70FE800A 		vselgt.f32	s1, s1, s0
 11831              	.L640:
 11832              	.LVL825:
1789:Veno-Echo.cpp ****     return returnval;   
 11833              		.loc 19 1789 5 is_stmt 1 view .LVU3352
1790:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 356


 11834              		.loc 19 1790 1 is_stmt 0 view .LVU3353
 11835 001a B0EE600A 		vmov.f32	s0, s1
 11836              	.LVL826:
1790:Veno-Echo.cpp **** }
 11837              		.loc 19 1790 1 view .LVU3354
 11838 001e 7047     		bx	lr
 11839              		.cfi_endproc
 11840              	.LFE4315:
 11842              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11843              		.align	1
 11844              		.p2align 2,,3
 11845              		.global	_Z10PotCVComboff
 11846              		.syntax unified
 11847              		.thumb
 11848              		.thumb_func
 11849              		.fpu fpv5-d16
 11851              	_Z10PotCVComboff:
 11852              	.LVL827:
 11853              	.LFB4316:
1793:Veno-Echo.cpp **** {
 11854              		.loc 19 1793 1 is_stmt 1 view -0
 11855              		.cfi_startproc
 11856              		@ args = 0, pretend = 0, frame = 0
 11857              		@ frame_needed = 0, uses_anonymous_args = 0
 11858              		@ link register save eliminated.
1794:Veno-Echo.cpp ****     float output{};
 11859              		.loc 19 1794 5 view .LVU3356
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11860              		.loc 19 1795 5 view .LVU3357
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11861              		.loc 19 1795 39 is_stmt 0 view .LVU3358
 11862 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11863              		.loc 19 1795 49 view .LVU3359
 11864 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11865              		.loc 19 1795 12 view .LVU3360
 11866 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11867              		.loc 19 1795 39 view .LVU3361
 11868 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11869              	.LVL828:
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11870              		.loc 19 1795 49 view .LVU3362
 11871 0010 70EEE60A 		vsub.f32	s1, s1, s13
1795:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11872              		.loc 19 1795 12 view .LVU3363
 11873 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11874              	.LVL829:
1797:Veno-Echo.cpp ****     if(output < 0.0f)
 11875              		.loc 19 1797 5 is_stmt 1 view .LVU3364
 11876 0018 B5EEC00A 		vcmpe.f32	s0, #0
 11877 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11878 0020 06D4     		bmi	.L646
1802:Veno-Echo.cpp ****     if(output > 1.0f)
 11879              		.loc 19 1802 5 view .LVU3365
1804:Veno-Echo.cpp ****         output = 1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 357


 11880              		.loc 19 1804 16 is_stmt 0 view .LVU3366
 11881 0022 B4EE670A 		vcmp.f32	s0, s15
 11882 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11883 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11884              	.LVL830:
1804:Veno-Echo.cpp ****         output = 1.0f;
 11885              		.loc 19 1804 16 view .LVU3367
 11886 002e 7047     		bx	lr
 11887              	.LVL831:
 11888              	.L646:
1799:Veno-Echo.cpp ****         output = 0.0f;
 11889              		.loc 19 1799 16 view .LVU3368
 11890 0030 9FED010A 		vldr.32	s0, .L648
 11891              	.LVL832:
1807:Veno-Echo.cpp ****     return output;
 11892              		.loc 19 1807 5 is_stmt 1 view .LVU3369
1808:Veno-Echo.cpp **** }
 11893              		.loc 19 1808 1 is_stmt 0 view .LVU3370
 11894 0034 7047     		bx	lr
 11895              	.L649:
 11896 0036 00BF     		.align	2
 11897              	.L648:
 11898 0038 00000000 		.word	0
 11899              		.cfi_endproc
 11900              	.LFE4316:
 11902              		.section	.text._Z16checkPickupStateff11pickupStateb,"ax",%progbits
 11903              		.align	1
 11904              		.p2align 2,,3
 11905              		.global	_Z16checkPickupStateff11pickupStateb
 11906              		.syntax unified
 11907              		.thumb
 11908              		.thumb_func
 11909              		.fpu fpv5-d16
 11911              	_Z16checkPickupStateff11pickupStateb:
 11912              	.LVL833:
 11913              	.LFB4317:
1811:Veno-Echo.cpp **** {
 11914              		.loc 19 1811 1 is_stmt 1 view -0
 11915              		.cfi_startproc
 11916              		@ args = 0, pretend = 0, frame = 0
 11917              		@ frame_needed = 0, uses_anonymous_args = 0
 11918              		@ link register save eliminated.
1812:Veno-Echo.cpp ****     pickupState retval{};
 11919              		.loc 19 1812 5 view .LVU3372
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 11920              		.loc 19 1814 5 view .LVU3373
1811:Veno-Echo.cpp **** {
 11921              		.loc 19 1811 1 is_stmt 0 view .LVU3374
 11922 0000 F0EE607A 		vmov.f32	s15, s1
1814:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 11923              		.loc 19 1814 5 view .LVU3375
 11924 0004 51B1     		cbz	r1, .L651
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 11925              		.loc 19 1816 9 is_stmt 1 view .LVU3376
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 11926              		.loc 19 1816 31 is_stmt 0 view .LVU3377
 11927 0006 DFED0B0A 		vldr.32	s1, .L656
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 358


 11928              	.LVL834:
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 11929              		.loc 19 1816 31 view .LVU3378
 11930 000a 77EEE06A 		vsub.f32	s13, s15, s1
1816:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 11931              		.loc 19 1816 9 view .LVU3379
 11932 000e F4EEC06A 		vcmpe.f32	s13, s0
 11933 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11934 0016 03DD     		ble	.L655
1818:Veno-Echo.cpp ****             retval = BELOW;
 11935              		.loc 19 1818 20 view .LVU3380
 11936 0018 0020     		movs	r0, #0
 11937              	.LVL835:
1855:Veno-Echo.cpp ****     return retval;
 11938              		.loc 19 1855 5 is_stmt 1 view .LVU3381
 11939              		.loc 19 1856 1 is_stmt 0 view .LVU3382
 11940 001a 7047     		bx	lr
 11941              	.LVL836:
 11942              	.L651:
 11943              		.loc 19 1856 1 view .LVU3383
 11944 001c FFF7FEBF 		b	_Z16checkPickupStateff11pickupStateb.part.0
 11945              	.LVL837:
 11946              	.L655:
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 11947              		.loc 19 1821 14 is_stmt 1 view .LVU3384
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 11948              		.loc 19 1821 36 is_stmt 0 view .LVU3385
 11949 0020 77EEA00A 		vadd.f32	s1, s15, s1
1821:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 11950              		.loc 19 1821 14 view .LVU3386
 11951 0024 F4EEC00A 		vcmpe.f32	s1, s0
 11952 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1828:Veno-Echo.cpp ****             retval = PICKEDUP;
 11953              		.loc 19 1828 20 view .LVU3387
 11954 002c 4CBF     		ite	mi
 11955 002e 0120     		movmi	r0, #1
 11956              	.LVL838:
1828:Veno-Echo.cpp ****             retval = PICKEDUP;
 11957              		.loc 19 1828 20 view .LVU3388
 11958 0030 0220     		movpl	r0, #2
 11959 0032 7047     		bx	lr
 11960              	.L657:
 11961              		.align	2
 11962              	.L656:
 11963 0034 0AD7A33B 		.word	1000593162
 11964              		.cfi_endproc
 11965              	.LFE4317:
 11967              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11968              		.align	1
 11969              		.p2align 2,,3
 11970              		.syntax unified
 11971              		.thumb
 11972              		.thumb_func
 11973              		.fpu fpv5-d16
 11975              	_GLOBAL__sub_I_delMemsL:
 11976              	.LFB4896:
 11977              		.loc 19 1856 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 359


 11978              		.cfi_startproc
 11979              		@ args = 0, pretend = 0, frame = 0
 11980              		@ frame_needed = 0, uses_anonymous_args = 0
 11981              	.LBB2204:
 11982              	.LBI2204:
 11983              		.loc 19 1856 1 view .LVU3390
 11984              	.LVL839:
 11985              	.LBB2205:
 11986              	.LBB2206:
 11987              	.LBI2206:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11988              		.loc 2 21 5 view .LVU3391
 11989              	.LBB2207:
 11990              	.LBB2208:
 11991              	.LBI2208:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11992              		.loc 6 36 5 view .LVU3392
 11993              	.LBE2208:
 11994              	.LBE2207:
 11995              	.LBE2206:
 11996              	.LBE2205:
 11997              	.LBE2204:
 11998              		.loc 19 1856 1 is_stmt 0 view .LVU3393
 11999 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12000              		.cfi_def_cfa_offset 24
 12001              		.cfi_offset 4, -24
 12002              		.cfi_offset 5, -20
 12003              		.cfi_offset 6, -16
 12004              		.cfi_offset 7, -12
 12005              		.cfi_offset 8, -8
 12006              		.cfi_offset 14, -4
 12007              	.LBB2327:
 12008              	.LBB2323:
 12009              	.LBB2223:
 12010              	.LBB2221:
 12011              	.LBB2213:
 12012              	.LBB2209:
 12013              	.LBB2210:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12014              		.loc 6 36 35 view .LVU3394
 12015 0004 9448     		ldr	r0, .L660
 12016 0006 0026     		movs	r6, #0
 12017              	.LBE2210:
 12018              	.LBE2209:
 12019              	.LBE2213:
 12020              	.LBE2221:
 12021              	.LBE2223:
 12022              		.file 25 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 360


  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12023              		.loc 25 33 18 view .LVU3395
 12024 0008 944C     		ldr	r4, .L660+4
  40:Veno-Echo.cpp **** static Svf LPF_L;
 12025              		.loc 19 40 12 view .LVU3396
 12026 000a 954D     		ldr	r5, .L660+8
 12027              		.loc 25 33 18 view .LVU3397
 12028 000c 2246     		mov	r2, r4
 12029 000e 9549     		ldr	r1, .L660+12
 12030              	.LBB2224:
 12031              	.LBB2222:
 12032              	.LBB2214:
 12033              	.LBB2212:
 12034              	.LBB2211:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12035              		.loc 6 36 35 view .LVU3398
 12036 0010 4661     		str	r6, [r0, #20]
 12037              	.LVL840:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12038              		.loc 6 36 35 view .LVU3399
 12039              	.LBE2211:
 12040              	.LBE2212:
 12041              	.LBE2214:
 12042              	.LBB2215:
 12043              	.LBI2215:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12044              		.loc 5 84 5 is_stmt 1 view .LVU3400
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12045              		.loc 5 84 5 is_stmt 0 view .LVU3401
 12046              	.LBE2215:
 12047              	.LBB2216:
 12048              	.LBI2216:
 12049              		.file 26 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 361


   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 362


  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12050              		.loc 26 83 5 is_stmt 1 view .LVU3402
 12051              	.LBB2217:
 12052              	.LBB2218:
 12053              		.loc 26 83 33 is_stmt 0 view .LVU3403
 12054 0012 0662     		str	r6, [r0, #32]
 12055              	.LVL841:
 12056              		.loc 26 83 33 view .LVU3404
 12057              	.LBE2218:
 12058              	.LBE2217:
 12059              	.LBE2216:
 12060              	.LBB2219:
 12061              	.LBI2219:
  40:../libdaisy/src/hid/usb.h **** 
 12062              		.loc 4 40 5 is_stmt 1 view .LVU3405
  40:../libdaisy/src/hid/usb.h **** 
 12063              		.loc 4 40 5 is_stmt 0 view .LVU3406
 12064              	.LBE2219:
 12065              	.LBB2220:
 12066              	.LBI2220:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12067              		.loc 3 56 5 is_stmt 1 view .LVU3407
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12068              		.loc 3 56 5 is_stmt 0 view .LVU3408
 12069              	.LBE2220:
 12070              	.LBE2222:
 12071              	.LBE2224:
 12072              		.loc 25 33 18 view .LVU3409
 12073 0014 FFF7FEFF 		bl	__aeabi_atexit
 12074              	.LVL842:
 12075              	.LBB2225:
 12076              	.LBI2225:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 363


 12077              		.loc 9 21 5 is_stmt 1 view .LVU3410
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12078              		.loc 9 21 5 is_stmt 0 view .LVU3411
 12079              	.LBE2225:
  40:Veno-Echo.cpp **** static Svf LPF_L;
 12080              		.loc 19 40 12 view .LVU3412
 12081 0018 2246     		mov	r2, r4
 12082 001a 2946     		mov	r1, r5
 12083 001c 9248     		ldr	r0, .L660+16
 12084 001e FFF7FEFF 		bl	__aeabi_atexit
 12085              	.LVL843:
 12086              	.LBB2226:
 12087              	.LBI2226:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12088              		.loc 9 21 5 is_stmt 1 view .LVU3413
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12089              		.loc 9 21 5 is_stmt 0 view .LVU3414
 12090              	.LBE2226:
  41:Veno-Echo.cpp **** static Svf LPF_R;
 12091              		.loc 19 41 12 view .LVU3415
 12092 0022 2246     		mov	r2, r4
 12093 0024 2946     		mov	r1, r5
 12094 0026 9148     		ldr	r0, .L660+20
 12095 0028 FFF7FEFF 		bl	__aeabi_atexit
 12096              	.LVL844:
 12097              	.LBB2227:
 12098              	.LBI2227:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12099              		.loc 9 21 5 is_stmt 1 view .LVU3416
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12100              		.loc 9 21 5 is_stmt 0 view .LVU3417
 12101              	.LBE2227:
  42:Veno-Echo.cpp **** static Svf HPF_L;
 12102              		.loc 19 42 12 view .LVU3418
 12103 002c 2246     		mov	r2, r4
 12104 002e 2946     		mov	r1, r5
 12105 0030 8F48     		ldr	r0, .L660+24
 12106 0032 FFF7FEFF 		bl	__aeabi_atexit
 12107              	.LVL845:
 12108              	.LBB2228:
 12109              	.LBI2228:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12110              		.loc 9 21 5 is_stmt 1 view .LVU3419
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12111              		.loc 9 21 5 is_stmt 0 view .LVU3420
 12112              	.LBE2228:
  43:Veno-Echo.cpp **** static Svf HPF_R;
 12113              		.loc 19 43 12 view .LVU3421
 12114 0036 2246     		mov	r2, r4
 12115 0038 2946     		mov	r1, r5
 12116 003a 8E48     		ldr	r0, .L660+28
 12117 003c FFF7FEFF 		bl	__aeabi_atexit
 12118              	.LVL846:
 12119              	.LBB2229:
 12120              	.LBI2229:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12121              		.loc 9 21 5 is_stmt 1 view .LVU3422
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 364


  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12122              		.loc 9 21 5 is_stmt 0 view .LVU3423
 12123              	.LBE2229:
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
 12124              		.loc 19 45 12 view .LVU3424
 12125 0040 2246     		mov	r2, r4
 12126 0042 2946     		mov	r1, r5
 12127 0044 8C48     		ldr	r0, .L660+32
 12128 0046 FFF7FEFF 		bl	__aeabi_atexit
 12129              	.LVL847:
 12130              	.LBB2230:
 12131              	.LBI2230:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12132              		.loc 9 21 5 is_stmt 1 view .LVU3425
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12133              		.loc 9 21 5 is_stmt 0 view .LVU3426
 12134              	.LBE2230:
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
 12135              		.loc 19 46 12 view .LVU3427
 12136 004a 2246     		mov	r2, r4
 12137 004c 2946     		mov	r1, r5
 12138 004e 8B48     		ldr	r0, .L660+36
 12139 0050 FFF7FEFF 		bl	__aeabi_atexit
 12140              	.LVL848:
 12141              	.LBB2231:
 12142              	.LBI2231:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12143              		.loc 9 21 5 is_stmt 1 view .LVU3428
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12144              		.loc 9 21 5 is_stmt 0 view .LVU3429
 12145              	.LBE2231:
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
 12146              		.loc 19 47 12 view .LVU3430
 12147 0054 2246     		mov	r2, r4
 12148 0056 2946     		mov	r1, r5
 12149 0058 8948     		ldr	r0, .L660+40
 12150 005a FFF7FEFF 		bl	__aeabi_atexit
 12151              	.LVL849:
 12152              	.LBB2232:
 12153              	.LBI2232:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12154              		.loc 9 21 5 is_stmt 1 view .LVU3431
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12155              		.loc 9 21 5 is_stmt 0 view .LVU3432
 12156              	.LBE2232:
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
 12157              		.loc 19 48 12 view .LVU3433
 12158 005e 2246     		mov	r2, r4
 12159 0060 2946     		mov	r1, r5
 12160 0062 8848     		ldr	r0, .L660+44
 12161 0064 FFF7FEFF 		bl	__aeabi_atexit
 12162              	.LVL850:
 12163              	.LBB2233:
 12164              	.LBI2233:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12165              		.loc 8 15 5 is_stmt 1 view .LVU3434
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 365


 12166              		.loc 8 15 5 is_stmt 0 view .LVU3435
 12167              	.LBE2233:
  50:Veno-Echo.cpp **** static Oscillator lfo;
 12168              		.loc 19 50 19 view .LVU3436
 12169 0068 2246     		mov	r2, r4
 12170 006a 8749     		ldr	r1, .L660+48
 12171              	.LBB2234:
 12172              	.LBB2235:
 12173              	.LBB2236:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12174              		.loc 12 45 13 view .LVU3437
 12175 006c 0025     		movs	r5, #0
 12176              	.LBE2236:
 12177              	.LBE2235:
 12178              	.LBE2234:
  50:Veno-Echo.cpp **** static Oscillator lfo;
 12179              		.loc 19 50 19 view .LVU3438
 12180 006e 8748     		ldr	r0, .L660+52
 12181 0070 FFF7FEFF 		bl	__aeabi_atexit
 12182              	.LVL851:
 12183              	.LBB2241:
 12184              	.LBI2234:
  43:envFollow.h   ****     {
 12185              		.loc 12 43 5 is_stmt 1 view .LVU3439
 12186              	.LBB2239:
 12187              	.LBB2237:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12188              		.loc 12 45 9 view .LVU3440
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12189              		.loc 12 48 11 is_stmt 0 view .LVU3441
 12190 0074 864F     		ldr	r7, .L660+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12191              		.loc 12 45 13 view .LVU3442
 12192 0076 8748     		ldr	r0, .L660+60
 12193              	.LBE2237:
 12194              	.LBE2239:
 12195              	.LBE2241:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12196              		.loc 19 51 18 view .LVU3443
 12197 0078 2246     		mov	r2, r4
 12198 007a 8749     		ldr	r1, .L660+64
 12199              	.LBB2242:
 12200              	.LBB2240:
 12201              	.LBB2238:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12202              		.loc 12 45 13 view .LVU3444
 12203 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12204              		.loc 12 46 9 is_stmt 1 view .LVU3445
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12205              		.loc 12 46 20 is_stmt 0 view .LVU3446
 12206 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12207              		.loc 12 47 9 is_stmt 1 view .LVU3447
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12208              		.loc 12 47 17 is_stmt 0 view .LVU3448
 12209 0080 C560     		str	r5, [r0, #12]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 366


  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12210              		.loc 12 48 9 is_stmt 1 view .LVU3449
  50:envFollow.h   ****     }  
 12211              		.loc 12 50 21 is_stmt 0 view .LVU3450
 12212 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12213              		.loc 12 48 11 view .LVU3451
 12214 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12215              		.loc 12 49 9 is_stmt 1 view .LVU3452
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12216              		.loc 12 49 15 is_stmt 0 view .LVU3453
 12217 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12218              		.loc 12 50 9 is_stmt 1 view .LVU3454
 12219              	.LVL852:
  50:envFollow.h   ****     }  
 12220              		.loc 12 50 9 is_stmt 0 view .LVU3455
 12221              	.LBE2238:
 12222              	.LBE2240:
 12223              	.LBE2242:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12224              		.loc 19 51 18 view .LVU3456
 12225 0088 FFF7FEFF 		bl	__aeabi_atexit
 12226              	.LVL853:
 12227              	.LBB2243:
 12228              	.LBI2243:
  43:envFollow.h   ****     {
 12229              		.loc 12 43 5 is_stmt 1 view .LVU3457
 12230              	.LBB2244:
 12231              	.LBB2245:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12232              		.loc 12 45 9 view .LVU3458
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12233              		.loc 12 45 13 is_stmt 0 view .LVU3459
 12234 008c 8348     		ldr	r0, .L660+68
 12235              	.LBE2245:
 12236              	.LBE2244:
 12237              	.LBE2243:
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 12238              		.loc 19 53 16 view .LVU3460
 12239 008e DFF8D082 		ldr	r8, .L660+264
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12240              		.loc 19 51 27 view .LVU3461
 12241 0092 2246     		mov	r2, r4
 12242 0094 8049     		ldr	r1, .L660+64
 12243              	.LBB2248:
 12244              	.LBB2247:
 12245              	.LBB2246:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12246              		.loc 12 45 13 view .LVU3462
 12247 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12248              		.loc 12 46 9 is_stmt 1 view .LVU3463
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12249              		.loc 12 46 20 is_stmt 0 view .LVU3464
 12250 0098 4560     		str	r5, [r0, #4]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 367


  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12251              		.loc 12 47 9 is_stmt 1 view .LVU3465
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12252              		.loc 12 47 17 is_stmt 0 view .LVU3466
 12253 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12254              		.loc 12 48 9 is_stmt 1 view .LVU3467
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12255              		.loc 12 48 11 is_stmt 0 view .LVU3468
 12256 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12257              		.loc 12 49 9 is_stmt 1 view .LVU3469
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12258              		.loc 12 49 15 is_stmt 0 view .LVU3470
 12259 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12260              		.loc 12 50 9 is_stmt 1 view .LVU3471
  50:envFollow.h   ****     }  
 12261              		.loc 12 50 21 is_stmt 0 view .LVU3472
 12262 00a0 8560     		str	r5, [r0, #8]	@ float
 12263              	.LVL854:
  50:envFollow.h   ****     }  
 12264              		.loc 12 50 21 view .LVU3473
 12265              	.LBE2246:
 12266              	.LBE2247:
 12267              	.LBE2248:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12268              		.loc 19 51 27 view .LVU3474
 12269 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12270              	.LVL855:
 12271              	.LBB2249:
 12272              	.LBI2249:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12273              		.loc 11 14 5 is_stmt 1 view .LVU3475
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12274              		.loc 11 14 5 is_stmt 0 view .LVU3476
 12275              	.LBE2249:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
 12276              		.loc 19 56 76 view .LVU3477
 12277 00a6 7E4F     		ldr	r7, .L660+72
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 12278              		.loc 19 53 16 view .LVU3478
 12279 00a8 2246     		mov	r2, r4
 12280 00aa 4146     		mov	r1, r8
 12281 00ac 7D48     		ldr	r0, .L660+76
 12282 00ae FFF7FEFF 		bl	__aeabi_atexit
 12283              	.LVL856:
 12284              	.LBB2250:
 12285              	.LBI2250:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12286              		.loc 11 14 5 is_stmt 1 view .LVU3479
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12287              		.loc 11 14 5 is_stmt 0 view .LVU3480
 12288              	.LBE2250:
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 12289              		.loc 19 53 29 view .LVU3481
 12290 00b2 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 368


 12291 00b4 4146     		mov	r1, r8
 12292 00b6 7C48     		ldr	r0, .L660+80
 12293 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12294              	.LVL857:
 12295              	.LBB2251:
 12296              	.LBI2251:
  48:delayline_multitap.h ****     {
 12297              		.loc 17 48 5 is_stmt 1 view .LVU3482
  48:delayline_multitap.h ****     {
 12298              		.loc 17 48 5 is_stmt 0 view .LVU3483
 12299              	.LBE2251:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
 12300              		.loc 19 59 80 view .LVU3484
 12301 00bc 7B4D     		ldr	r5, .L660+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
 12302              		.loc 19 56 76 view .LVU3485
 12303 00be 2246     		mov	r2, r4
 12304 00c0 3946     		mov	r1, r7
 12305 00c2 7B48     		ldr	r0, .L660+88
 12306 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12307              	.LVL858:
 12308              	.LBB2252:
 12309              	.LBI2252:
  48:delayline_multitap.h ****     {
 12310              		.loc 17 48 5 is_stmt 1 view .LVU3486
  48:delayline_multitap.h ****     {
 12311              		.loc 17 48 5 is_stmt 0 view .LVU3487
 12312              	.LBE2252:
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12313              		.loc 19 57 76 view .LVU3488
 12314 00c8 2246     		mov	r2, r4
 12315 00ca 3946     		mov	r1, r7
 12316 00cc 7948     		ldr	r0, .L660+92
 12317 00ce FFF7FEFF 		bl	__aeabi_atexit
 12318              	.LVL859:
 12319              	.LBB2253:
 12320              	.LBI2253:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12321              		.loc 18 38 5 is_stmt 1 view .LVU3489
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12322              		.loc 18 38 5 is_stmt 0 view .LVU3490
 12323              	.LBE2253:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 12324              		.loc 19 98 12 view .LVU3491
 12325 00d2 794F     		ldr	r7, .L660+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
 12326              		.loc 19 59 80 view .LVU3492
 12327 00d4 2246     		mov	r2, r4
 12328 00d6 2946     		mov	r1, r5
 12329 00d8 7848     		ldr	r0, .L660+100
 12330 00da FFF7FEFF 		bl	__aeabi_atexit
 12331              	.LVL860:
 12332              	.LBB2254:
 12333              	.LBI2254:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12334              		.loc 18 38 5 is_stmt 1 view .LVU3493
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 369


 12335              		.loc 18 38 5 is_stmt 0 view .LVU3494
 12336              	.LBE2254:
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12337              		.loc 19 60 80 view .LVU3495
 12338 00de 2246     		mov	r2, r4
 12339 00e0 2946     		mov	r1, r5
 12340 00e2 7748     		ldr	r0, .L660+104
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 12341              		.loc 19 102 11 view .LVU3496
 12342 00e4 774D     		ldr	r5, .L660+108
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12343              		.loc 19 60 80 view .LVU3497
 12344 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12345              	.LVL861:
 12346              	.LBB2255:
 12347              	.LBI2255:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12348              		.loc 16 49 1 is_stmt 1 view .LVU3498
 12349              	.LBB2256:
 12350              	.LBB2257:
 12351              	.LBI2257:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12352              		.loc 14 40 1 view .LVU3499
 12353              	.LBB2258:
 12354              	.LBB2259:
 12355              	.LBI2259:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12356              		.loc 15 24 5 view .LVU3500
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12357              		.loc 15 24 5 is_stmt 0 view .LVU3501
 12358              	.LBE2259:
 12359              	.LBB2260:
 12360              	.LBI2260:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12361              		.loc 8 15 5 is_stmt 1 view .LVU3502
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12362              		.loc 8 15 5 is_stmt 0 view .LVU3503
 12363              	.LBE2260:
 12364              	.LBE2258:
 12365              	.LBE2257:
 12366              	.LBE2256:
 12367              	.LBE2255:
 12368              	.LBE2323:
 12369              	.LBE2327:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12370              		.loc 16 49 14 is_stmt 1 view .LVU3504
  49:DelayMulti.h  **** ~DelayMulti() {}
 12371              		.loc 16 49 14 view .LVU3505
 12372              	.LBB2328:
 12373              	.LBB2324:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 12374              		.loc 19 98 12 is_stmt 0 view .LVU3506
 12375 00ea 2246     		mov	r2, r4
 12376 00ec 3946     		mov	r1, r7
 12377 00ee 7648     		ldr	r0, .L660+112
 12378 00f0 FFF7FEFF 		bl	__aeabi_atexit
 12379              	.LVL862:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 370


 12380              	.LBB2261:
 12381              	.LBI2261:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12382              		.loc 16 49 1 is_stmt 1 view .LVU3507
 12383              	.LBB2262:
 12384              	.LBB2263:
 12385              	.LBI2263:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12386              		.loc 14 40 1 view .LVU3508
 12387              	.LBB2264:
 12388              	.LBB2265:
 12389              	.LBI2265:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12390              		.loc 15 24 5 view .LVU3509
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12391              		.loc 15 24 5 is_stmt 0 view .LVU3510
 12392              	.LBE2265:
 12393              	.LBB2266:
 12394              	.LBI2266:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12395              		.loc 8 15 5 is_stmt 1 view .LVU3511
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12396              		.loc 8 15 5 is_stmt 0 view .LVU3512
 12397              	.LBE2266:
 12398              	.LBE2264:
 12399              	.LBE2263:
 12400              	.LBE2262:
 12401              	.LBE2261:
 12402              	.LBE2324:
 12403              	.LBE2328:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12404              		.loc 16 49 14 is_stmt 1 view .LVU3513
  49:DelayMulti.h  **** ~DelayMulti() {}
 12405              		.loc 16 49 14 view .LVU3514
 12406              	.LBB2329:
 12407              	.LBB2325:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 12408              		.loc 19 98 19 is_stmt 0 view .LVU3515
 12409 00f4 2246     		mov	r2, r4
 12410 00f6 3946     		mov	r1, r7
 12411 00f8 7448     		ldr	r0, .L660+116
 12412 00fa FFF7FEFF 		bl	__aeabi_atexit
 12413              	.LVL863:
 12414              	.LBB2267:
 12415              	.LBI2267:
  60:LEDs.h        ****     ~ButtonLED() {}
 12416              		.loc 14 60 5 is_stmt 1 view .LVU3516
 12417              	.LBB2268:
 12418              	.LBB2269:
 12419              	.LBI2269:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12420              		.loc 1 40 5 view .LVU3517
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12421              		.loc 1 40 5 is_stmt 0 view .LVU3518
 12422              	.LBE2269:
 12423              	.LBB2270:
 12424              	.LBI2270:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 371


  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12425              		.loc 15 24 5 is_stmt 1 view .LVU3519
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12426              		.loc 15 24 5 is_stmt 0 view .LVU3520
 12427              	.LBE2270:
 12428              	.LBE2268:
 12429              	.LBE2267:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 12430              		.loc 19 102 11 view .LVU3521
 12431 00fe 2246     		mov	r2, r4
 12432 0100 2946     		mov	r1, r5
 12433 0102 7348     		ldr	r0, .L660+120
 12434 0104 FFF7FEFF 		bl	__aeabi_atexit
 12435              	.LVL864:
 12436              	.LBB2271:
 12437              	.LBI2271:
  60:LEDs.h        ****     ~ButtonLED() {}
 12438              		.loc 14 60 5 is_stmt 1 view .LVU3522
 12439              	.LBB2272:
 12440              	.LBB2273:
 12441              	.LBI2273:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12442              		.loc 1 40 5 view .LVU3523
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12443              		.loc 1 40 5 is_stmt 0 view .LVU3524
 12444              	.LBE2273:
 12445              	.LBB2274:
 12446              	.LBI2274:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12447              		.loc 15 24 5 is_stmt 1 view .LVU3525
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12448              		.loc 15 24 5 is_stmt 0 view .LVU3526
 12449              	.LBE2274:
 12450              	.LBE2272:
 12451              	.LBE2271:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 12452              		.loc 19 102 18 view .LVU3527
 12453 0108 2246     		mov	r2, r4
 12454 010a 2946     		mov	r1, r5
 12455 010c 7148     		ldr	r0, .L660+124
 12456 010e FFF7FEFF 		bl	__aeabi_atexit
 12457              	.LVL865:
 12458              	.LBB2275:
 12459              	.LBI2275:
  60:LEDs.h        ****     ~ButtonLED() {}
 12460              		.loc 14 60 5 is_stmt 1 view .LVU3528
 12461              	.LBB2276:
 12462              	.LBB2277:
 12463              	.LBI2277:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12464              		.loc 1 40 5 view .LVU3529
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12465              		.loc 1 40 5 is_stmt 0 view .LVU3530
 12466              	.LBE2277:
 12467              	.LBB2278:
 12468              	.LBI2278:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 372


 12469              		.loc 15 24 5 is_stmt 1 view .LVU3531
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12470              		.loc 15 24 5 is_stmt 0 view .LVU3532
 12471              	.LBE2278:
 12472              	.LBE2276:
 12473              	.LBE2275:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 12474              		.loc 19 102 25 view .LVU3533
 12475 0112 2246     		mov	r2, r4
 12476 0114 2946     		mov	r1, r5
 12477 0116 7048     		ldr	r0, .L660+128
 12478 0118 FFF7FEFF 		bl	__aeabi_atexit
 12479              	.LVL866:
 12480              	.LBB2279:
 12481              	.LBI2279:
  60:LEDs.h        ****     ~ButtonLED() {}
 12482              		.loc 14 60 5 is_stmt 1 view .LVU3534
 12483              	.LBB2280:
 12484              	.LBB2281:
 12485              	.LBI2281:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12486              		.loc 1 40 5 view .LVU3535
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12487              		.loc 1 40 5 is_stmt 0 view .LVU3536
 12488              	.LBE2281:
 12489              	.LBB2282:
 12490              	.LBI2282:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12491              		.loc 15 24 5 is_stmt 1 view .LVU3537
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12492              		.loc 15 24 5 is_stmt 0 view .LVU3538
 12493              	.LBE2282:
 12494              	.LBE2280:
 12495              	.LBE2279:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 12496              		.loc 19 102 34 view .LVU3539
 12497 011c 2246     		mov	r2, r4
 12498 011e 2946     		mov	r1, r5
 12499 0120 6E48     		ldr	r0, .L660+132
 12500 0122 FFF7FEFF 		bl	__aeabi_atexit
 12501              	.LVL867:
 12502              	.LBB2283:
 12503              	.LBI2283:
  60:LEDs.h        ****     ~ButtonLED() {}
 12504              		.loc 14 60 5 is_stmt 1 view .LVU3540
 12505              	.LBB2284:
 12506              	.LBB2285:
 12507              	.LBI2285:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12508              		.loc 1 40 5 view .LVU3541
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12509              		.loc 1 40 5 is_stmt 0 view .LVU3542
 12510              	.LBE2285:
 12511              	.LBB2286:
 12512              	.LBI2286:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12513              		.loc 15 24 5 is_stmt 1 view .LVU3543
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 373


  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12514              		.loc 15 24 5 is_stmt 0 view .LVU3544
 12515              	.LBE2286:
 12516              	.LBE2284:
 12517              	.LBE2283:
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 12518              		.loc 19 147 13 view .LVU3545
 12519 0126 6E4F     		ldr	r7, .L660+136
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 12520              		.loc 19 102 44 view .LVU3546
 12521 0128 2246     		mov	r2, r4
 12522 012a 2946     		mov	r1, r5
 12523 012c 6D48     		ldr	r0, .L660+140
 12524 012e FFF7FEFF 		bl	__aeabi_atexit
 12525              	.LVL868:
 12526              	.LBB2287:
 12527              	.LBI2287:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12528              		.loc 14 40 1 is_stmt 1 view .LVU3547
 12529              	.LBB2288:
 12530              	.LBB2289:
 12531              	.LBI2289:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12532              		.loc 15 24 5 view .LVU3548
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12533              		.loc 15 24 5 is_stmt 0 view .LVU3549
 12534              	.LBE2289:
 12535              	.LBB2290:
 12536              	.LBI2290:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12537              		.loc 8 15 5 is_stmt 1 view .LVU3550
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12538              		.loc 8 15 5 is_stmt 0 view .LVU3551
 12539              	.LBE2290:
 12540              	.LBE2288:
 12541              	.LBE2287:
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12542              		.loc 19 103 10 view .LVU3552
 12543 0132 2246     		mov	r2, r4
 12544 0134 6C49     		ldr	r1, .L660+144
 12545 0136 6D48     		ldr	r0, .L660+148
 12546 0138 FFF7FEFF 		bl	__aeabi_atexit
 12547              	.LVL869:
 12548              	.LBB2291:
 12549              	.LBI2291:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12550              		.loc 7 38 5 is_stmt 1 view .LVU3553
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12551              		.loc 7 38 5 is_stmt 0 view .LVU3554
 12552              	.LBE2291:
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 12553              		.loc 19 147 13 view .LVU3555
 12554 013c 2246     		mov	r2, r4
 12555 013e 3946     		mov	r1, r7
 12556 0140 6B48     		ldr	r0, .L660+152
 12557 0142 FFF7FEFF 		bl	__aeabi_atexit
 12558              	.LVL870:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 374


 12559              	.LBB2292:
 12560              	.LBI2292:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12561              		.loc 7 38 5 is_stmt 1 view .LVU3556
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12562              		.loc 7 38 5 is_stmt 0 view .LVU3557
 12563              	.LBE2292:
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12564              		.loc 19 148 13 view .LVU3558
 12565 0146 2246     		mov	r2, r4
 12566 0148 3946     		mov	r1, r7
 12567 014a 6A48     		ldr	r0, .L660+156
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 12568              		.loc 19 153 18 view .LVU3559
 12569 014c 6A4D     		ldr	r5, .L660+160
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12570              		.loc 19 148 13 view .LVU3560
 12571 014e FFF7FEFF 		bl	__aeabi_atexit
 12572              	.LVL871:
 12573              	.LBB2293:
 12574              	.LBI2293:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12575              		.loc 7 38 5 is_stmt 1 view .LVU3561
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12576              		.loc 7 38 5 is_stmt 0 view .LVU3562
 12577              	.LBE2293:
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 12578              		.loc 19 150 13 view .LVU3563
 12579 0152 2246     		mov	r2, r4
 12580 0154 3946     		mov	r1, r7
 12581 0156 6948     		ldr	r0, .L660+164
 12582 0158 FFF7FEFF 		bl	__aeabi_atexit
 12583              	.LVL872:
 12584              	.LBB2294:
 12585              	.LBI2294:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12586              		.loc 7 38 5 is_stmt 1 view .LVU3564
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12587              		.loc 7 38 5 is_stmt 0 view .LVU3565
 12588              	.LBE2294:
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 12589              		.loc 19 151 13 view .LVU3566
 12590 015c 2246     		mov	r2, r4
 12591 015e 3946     		mov	r1, r7
 12592 0160 6748     		ldr	r0, .L660+168
 12593 0162 FFF7FEFF 		bl	__aeabi_atexit
 12594              	.LVL873:
 12595              	.LBB2295:
 12596              	.LBI2295:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12597              		.loc 10 36 5 is_stmt 1 view .LVU3567
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12598              		.loc 10 36 5 is_stmt 0 view .LVU3568
 12599              	.LBE2295:
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 12600              		.loc 19 153 18 view .LVU3569
 12601 0166 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 375


 12602 0168 2946     		mov	r1, r5
 12603 016a 6648     		ldr	r0, .L660+172
 12604 016c FFF7FEFF 		bl	__aeabi_atexit
 12605              	.LVL874:
 12606              	.LBB2296:
 12607              	.LBI2296:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12608              		.loc 10 36 5 is_stmt 1 view .LVU3570
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12609              		.loc 10 36 5 is_stmt 0 view .LVU3571
 12610              	.LBE2296:
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12611              		.loc 19 154 18 view .LVU3572
 12612 0170 2246     		mov	r2, r4
 12613 0172 2946     		mov	r1, r5
 12614 0174 6448     		ldr	r0, .L660+176
 12615 0176 FFF7FEFF 		bl	__aeabi_atexit
 12616              	.LVL875:
 12617              	.LBB2297:
 12618              	.LBI2297:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12619              		.loc 10 36 5 is_stmt 1 view .LVU3573
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12620              		.loc 10 36 5 is_stmt 0 view .LVU3574
 12621              	.LBE2297:
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
 12622              		.loc 19 156 18 view .LVU3575
 12623 017a 2246     		mov	r2, r4
 12624 017c 2946     		mov	r1, r5
 12625 017e 6348     		ldr	r0, .L660+180
 12626 0180 FFF7FEFF 		bl	__aeabi_atexit
 12627              	.LVL876:
 12628              	.LBB2298:
 12629              	.LBI2298:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12630              		.loc 10 36 5 is_stmt 1 view .LVU3576
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12631              		.loc 10 36 5 is_stmt 0 view .LVU3577
 12632              	.LBE2298:
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 12633              		.loc 19 159 18 view .LVU3578
 12634 0184 2246     		mov	r2, r4
 12635 0186 2946     		mov	r1, r5
 12636 0188 6148     		ldr	r0, .L660+184
 12637 018a FFF7FEFF 		bl	__aeabi_atexit
 12638              	.LVL877:
 12639              	.LBB2299:
 12640              	.LBI2299:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12641              		.loc 10 36 5 is_stmt 1 view .LVU3579
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12642              		.loc 10 36 5 is_stmt 0 view .LVU3580
 12643              	.LBE2299:
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12644              		.loc 19 160 18 view .LVU3581
 12645 018e 2246     		mov	r2, r4
 12646 0190 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 376


 12647 0192 6048     		ldr	r0, .L660+188
 12648 0194 FFF7FEFF 		bl	__aeabi_atexit
 12649              	.LVL878:
 12650              	.LBB2300:
 12651              	.LBI2300:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12652              		.loc 10 36 5 is_stmt 1 view .LVU3582
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12653              		.loc 10 36 5 is_stmt 0 view .LVU3583
 12654              	.LBE2300:
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12655              		.loc 19 161 18 view .LVU3584
 12656 0198 2246     		mov	r2, r4
 12657 019a 2946     		mov	r1, r5
 12658 019c 5E48     		ldr	r0, .L660+192
 12659 019e FFF7FEFF 		bl	__aeabi_atexit
 12660              	.LVL879:
 12661              	.LBB2301:
 12662              	.LBI2301:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12663              		.loc 10 36 5 is_stmt 1 view .LVU3585
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12664              		.loc 10 36 5 is_stmt 0 view .LVU3586
 12665              	.LBE2301:
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12666              		.loc 19 162 18 view .LVU3587
 12667 01a2 2246     		mov	r2, r4
 12668 01a4 2946     		mov	r1, r5
 12669 01a6 5D48     		ldr	r0, .L660+196
 12670 01a8 FFF7FEFF 		bl	__aeabi_atexit
 12671              	.LVL880:
 12672              	.LBB2302:
 12673              	.LBI2302:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12674              		.loc 10 36 5 is_stmt 1 view .LVU3588
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12675              		.loc 10 36 5 is_stmt 0 view .LVU3589
 12676              	.LBE2302:
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 12677              		.loc 19 165 18 view .LVU3590
 12678 01ac 2246     		mov	r2, r4
 12679 01ae 2946     		mov	r1, r5
 12680 01b0 5B48     		ldr	r0, .L660+200
 12681 01b2 FFF7FEFF 		bl	__aeabi_atexit
 12682              	.LVL881:
 12683              	.LBB2303:
 12684              	.LBI2303:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12685              		.loc 10 36 5 is_stmt 1 view .LVU3591
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12686              		.loc 10 36 5 is_stmt 0 view .LVU3592
 12687              	.LBE2303:
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12688              		.loc 19 166 18 view .LVU3593
 12689 01b6 2246     		mov	r2, r4
 12690 01b8 2946     		mov	r1, r5
 12691 01ba 5A48     		ldr	r0, .L660+204
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 377


 12692 01bc FFF7FEFF 		bl	__aeabi_atexit
 12693              	.LVL882:
 12694              	.LBB2304:
 12695              	.LBI2304:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12696              		.loc 10 36 5 is_stmt 1 view .LVU3594
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12697              		.loc 10 36 5 is_stmt 0 view .LVU3595
 12698              	.LBE2304:
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12699              		.loc 19 167 18 view .LVU3596
 12700 01c0 2246     		mov	r2, r4
 12701 01c2 2946     		mov	r1, r5
 12702 01c4 5848     		ldr	r0, .L660+208
 12703 01c6 FFF7FEFF 		bl	__aeabi_atexit
 12704              	.LVL883:
 12705              	.LBB2305:
 12706              	.LBI2305:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12707              		.loc 10 36 5 is_stmt 1 view .LVU3597
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12708              		.loc 10 36 5 is_stmt 0 view .LVU3598
 12709              	.LBE2305:
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12710              		.loc 19 168 18 view .LVU3599
 12711 01ca 2246     		mov	r2, r4
 12712 01cc 2946     		mov	r1, r5
 12713 01ce 5748     		ldr	r0, .L660+212
 12714 01d0 FFF7FEFF 		bl	__aeabi_atexit
 12715              	.LVL884:
 12716              	.LBB2306:
 12717              	.LBI2306:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12718              		.loc 10 36 5 is_stmt 1 view .LVU3600
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12719              		.loc 10 36 5 is_stmt 0 view .LVU3601
 12720              	.LBE2306:
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 12721              		.loc 19 171 18 view .LVU3602
 12722 01d4 2246     		mov	r2, r4
 12723 01d6 2946     		mov	r1, r5
 12724 01d8 5548     		ldr	r0, .L660+216
 12725 01da FFF7FEFF 		bl	__aeabi_atexit
 12726              	.LVL885:
 12727              	.LBB2307:
 12728              	.LBI2307:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12729              		.loc 10 36 5 is_stmt 1 view .LVU3603
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12730              		.loc 10 36 5 is_stmt 0 view .LVU3604
 12731              	.LBE2307:
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12732              		.loc 19 172 18 view .LVU3605
 12733 01de 2246     		mov	r2, r4
 12734 01e0 2946     		mov	r1, r5
 12735 01e2 5448     		ldr	r0, .L660+220
 12736 01e4 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 378


 12737              	.LVL886:
 12738              	.LBB2308:
 12739              	.LBI2308:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12740              		.loc 10 36 5 is_stmt 1 view .LVU3606
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12741              		.loc 10 36 5 is_stmt 0 view .LVU3607
 12742              	.LBE2308:
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 12743              		.loc 19 178 8 view .LVU3608
 12744 01e8 534F     		ldr	r7, .L660+224
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 12745              		.loc 19 174 18 view .LVU3609
 12746 01ea 2246     		mov	r2, r4
 12747 01ec 2946     		mov	r1, r5
 12748 01ee 5348     		ldr	r0, .L660+228
 12749 01f0 FFF7FEFF 		bl	__aeabi_atexit
 12750              	.LVL887:
 12751              	.LBB2309:
 12752              	.LBI2309:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12753              		.loc 10 36 5 is_stmt 1 view .LVU3610
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12754              		.loc 10 36 5 is_stmt 0 view .LVU3611
 12755              	.LBE2309:
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12756              		.loc 19 175 18 view .LVU3612
 12757 01f4 2246     		mov	r2, r4
 12758 01f6 2946     		mov	r1, r5
 12759 01f8 5148     		ldr	r0, .L660+232
 12760 01fa FFF7FEFF 		bl	__aeabi_atexit
 12761              	.LVL888:
 12762              	.LBB2310:
 12763              	.LBI2310:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12764              		.loc 1 40 5 is_stmt 1 view .LVU3613
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12765              		.loc 1 40 5 is_stmt 0 view .LVU3614
 12766              	.LBE2310:
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 12767              		.loc 19 178 8 view .LVU3615
 12768 01fe 2246     		mov	r2, r4
 12769 0200 3946     		mov	r1, r7
 12770 0202 5048     		ldr	r0, .L660+236
 12771 0204 FFF7FEFF 		bl	__aeabi_atexit
 12772              	.LVL889:
 12773              	.LBB2311:
 12774              	.LBI2311:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12775              		.loc 1 40 5 is_stmt 1 view .LVU3616
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12776              		.loc 1 40 5 is_stmt 0 view .LVU3617
 12777              	.LBE2311:
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 12778              		.loc 19 179 8 view .LVU3618
 12779 0208 2246     		mov	r2, r4
 12780 020a 3946     		mov	r1, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 379


 12781 020c 4E48     		ldr	r0, .L660+240
 12782 020e FFF7FEFF 		bl	__aeabi_atexit
 12783              	.LVL890:
 12784              	.LBB2312:
 12785              	.LBI2312:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12786              		.loc 1 40 5 is_stmt 1 view .LVU3619
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12787              		.loc 1 40 5 is_stmt 0 view .LVU3620
 12788              	.LBE2312:
 182:Veno-Echo.cpp **** Switch Sync;
 12789              		.loc 19 182 8 view .LVU3621
 12790 0212 2246     		mov	r2, r4
 12791 0214 3946     		mov	r1, r7
 12792 0216 4D48     		ldr	r0, .L660+244
 12793 0218 FFF7FEFF 		bl	__aeabi_atexit
 12794              	.LVL891:
 12795              	.LBB2313:
 12796              	.LBI2313:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12797              		.loc 1 40 5 is_stmt 1 view .LVU3622
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12798              		.loc 1 40 5 is_stmt 0 view .LVU3623
 12799              	.LBE2313:
 183:Veno-Echo.cpp **** Switch ClockIn;
 12800              		.loc 19 183 8 view .LVU3624
 12801 021c 2246     		mov	r2, r4
 12802 021e 3946     		mov	r1, r7
 12803 0220 4B48     		ldr	r0, .L660+248
 12804 0222 FFF7FEFF 		bl	__aeabi_atexit
 12805              	.LVL892:
 12806              	.LBB2314:
 12807              	.LBI2314:
  41:taptempo.h    ****     {
 12808              		.loc 13 41 5 is_stmt 1 view .LVU3625
 12809              	.LBB2315:
 12810              	.LBB2316:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12811              		.loc 13 43 9 view .LVU3626
  46:taptempo.h    ****         lastTapLength_ = 0;
 12812              		.loc 13 46 17 is_stmt 0 view .LVU3627
 12813 0226 5027     		movs	r7, #80
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12814              		.loc 13 43 18 view .LVU3628
 12815 0228 4A48     		ldr	r0, .L660+252
  45:taptempo.h    ****         mintap_ = 80;
 12816              		.loc 13 45 17 view .LVU3629
 12817 022a 4FF4FA6C 		mov	ip, #2000
  44:taptempo.h    ****         maxtap_ = 2000;
 12818              		.loc 13 44 24 view .LVU3630
 12819 022e DFF834E1 		ldr	lr, .L660+268
  51:taptempo.h    **** 
 12820              		.loc 13 51 19 view .LVU3631
 12821 0232 4FF07E53 		mov	r3, #1065353216
  48:taptempo.h    ****         lastTime_ = 0;
 12822              		.loc 13 48 16 view .LVU3632
 12823 0236 484D     		ldr	r5, .L660+256
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 380


 12824              	.LBE2316:
 12825              	.LBE2315:
 12826              	.LBE2314:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 12827              		.loc 19 186 10 view .LVU3633
 12828 0238 2246     		mov	r2, r4
 12829              	.LBB2321:
 12830              	.LBB2319:
 12831              	.LBB2317:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12832              		.loc 13 43 18 view .LVU3634
 12833 023a 0676     		strb	r6, [r0, #24]
  44:taptempo.h    ****         maxtap_ = 2000;
 12834              		.loc 13 44 9 is_stmt 1 view .LVU3635
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12835              		.loc 13 50 22 is_stmt 0 view .LVU3636
 12836 023c 8660     		str	r6, [r0, #8]
  44:taptempo.h    ****         maxtap_ = 2000;
 12837              		.loc 13 44 24 view .LVU3637
 12838 023e C0F81CE0 		str	lr, [r0, #28]	@ float
  45:taptempo.h    ****         mintap_ = 80;
 12839              		.loc 13 45 9 is_stmt 1 view .LVU3638
  48:taptempo.h    ****         lastTime_ = 0;
 12840              		.loc 13 48 16 is_stmt 0 view .LVU3639
 12841 0242 0562     		str	r5, [r0, #32]	@ float
 12842              	.LBE2317:
 12843              	.LBE2319:
 12844              	.LBE2321:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 12845              		.loc 19 186 10 view .LVU3640
 12846 0244 4549     		ldr	r1, .L660+260
 12847              	.LBB2322:
 12848              	.LBB2320:
 12849              	.LBB2318:
  51:taptempo.h    **** 
 12850              		.loc 13 51 19 view .LVU3641
 12851 0246 4362     		str	r3, [r0, #36]	@ float
  49:taptempo.h    ****         currentTime_ = 0;
 12852              		.loc 13 49 19 view .LVU3642
 12853 0248 C0E90366 		strd	r6, r6, [r0, #12]
  46:taptempo.h    ****         lastTapLength_ = 0;
 12854              		.loc 13 46 17 view .LVU3643
 12855 024c C0E9007C 		strd	r7, ip, [r0]
  47:taptempo.h    ****         tempo_ = 500.0f;
 12856              		.loc 13 47 9 is_stmt 1 view .LVU3644
  48:taptempo.h    ****         lastTime_ = 0;
 12857              		.loc 13 48 9 view .LVU3645
  49:taptempo.h    ****         currentTime_ = 0;
 12858              		.loc 13 49 9 view .LVU3646
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12859              		.loc 13 50 9 view .LVU3647
  51:taptempo.h    **** 
 12860              		.loc 13 51 9 view .LVU3648
 12861              	.LVL893:
  51:taptempo.h    **** 
 12862              		.loc 13 51 9 is_stmt 0 view .LVU3649
 12863              	.LBE2318:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 381


 12864              	.LBE2320:
 12865              	.LBE2322:
 12866              	.LBE2325:
 12867              	.LBE2329:
 12868              		.loc 19 1856 1 view .LVU3650
 12869 0250 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12870              		.cfi_restore 14
 12871              		.cfi_restore 8
 12872              		.cfi_restore 7
 12873              		.cfi_restore 6
 12874              		.cfi_restore 5
 12875              		.cfi_restore 4
 12876              		.cfi_def_cfa_offset 0
 12877              	.LBB2330:
 12878              	.LBB2326:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 12879              		.loc 19 186 10 view .LVU3651
 12880 0254 FFF7FEBF 		b	__aeabi_atexit
 12881              	.LVL894:
 12882              	.L661:
 12883              		.align	2
 12884              	.L660:
 12885 0258 00000000 		.word	.LANCHOR4
 12886 025c 00000000 		.word	__dso_handle
 12887 0260 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12888 0264 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12889 0268 00000000 		.word	.LANCHOR27
 12890 026c 00000000 		.word	.LANCHOR28
 12891 0270 00000000 		.word	.LANCHOR15
 12892 0274 00000000 		.word	.LANCHOR16
 12893 0278 00000000 		.word	.LANCHOR29
 12894 027c 00000000 		.word	.LANCHOR30
 12895 0280 00000000 		.word	.LANCHOR17
 12896 0284 00000000 		.word	.LANCHOR18
 12897 0288 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12898 028c 00000000 		.word	.LANCHOR46
 12899 0290 17B7D138 		.word	953267991
 12900 0294 00000000 		.word	.LANCHOR111
 12901 0298 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12902 029c 00000000 		.word	.LANCHOR112
 12903 02a0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12904 02a4 00000000 		.word	.LANCHOR89
 12905 02a8 00000000 		.word	.LANCHOR90
 12906 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12907 02b0 00000000 		.word	delMemsL
 12908 02b4 00000000 		.word	delMemsR
 12909 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
 12910 02bc 00000000 		.word	delMemsL_REV
 12911 02c0 00000000 		.word	delMemsR_REV
 12912 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 12913 02c8 00000000 		.word	.LANCHOR0
 12914 02cc 00000000 		.word	.LANCHOR1
 12915 02d0 00000000 		.word	.LANCHOR75
 12916 02d4 00000000 		.word	.LANCHOR76
 12917 02d8 00000000 		.word	.LANCHOR77
 12918 02dc 00000000 		.word	.LANCHOR78
 12919 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 382


 12920 02e4 00000000 		.word	.LANCHOR79
 12921 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 12922 02ec 00000000 		.word	.LANCHOR55
 12923 02f0 00000000 		.word	.LANCHOR83
 12924 02f4 00000000 		.word	.LANCHOR84
 12925 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12926 02fc 00000000 		.word	.LANCHOR85
 12927 0300 00000000 		.word	.LANCHOR86
 12928 0304 00000000 		.word	.LANCHOR87
 12929 0308 00000000 		.word	.LANCHOR88
 12930 030c 00000000 		.word	.LANCHOR41
 12931 0310 00000000 		.word	.LANCHOR99
 12932 0314 00000000 		.word	.LANCHOR100
 12933 0318 00000000 		.word	.LANCHOR97
 12934 031c 00000000 		.word	.LANCHOR98
 12935 0320 00000000 		.word	.LANCHOR103
 12936 0324 00000000 		.word	.LANCHOR104
 12937 0328 00000000 		.word	.LANCHOR101
 12938 032c 00000000 		.word	.LANCHOR102
 12939 0330 00000000 		.word	.LANCHOR105
 12940 0334 00000000 		.word	.LANCHOR106
 12941 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12942 033c 00000000 		.word	.LANCHOR107
 12943 0340 00000000 		.word	.LANCHOR108
 12944 0344 00000000 		.word	.LANCHOR80
 12945 0348 00000000 		.word	.LANCHOR81
 12946 034c 00000000 		.word	.LANCHOR82
 12947 0350 00000000 		.word	.LANCHOR53
 12948 0354 00000000 		.word	.LANCHOR56
 12949 0358 0000FA43 		.word	1140457472
 12950 035c 00000000 		.word	_ZN8TaptempoD1Ev
 12951 0360 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12952 0364 0000A03F 		.word	1067450368
 12953              	.LBE2326:
 12954              	.LBE2330:
 12955              		.cfi_endproc
 12956              	.LFE4896:
 12958              		.section	.init_array,"aw",%init_array
 12959              		.align	2
 12960 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12961              		.global	AltControls
 12962              		.global	BaseTempo
 12963              		.global	ClockIn
 12964              		.global	Sync
 12965              		.global	ReverseGateR
 12966              		.global	ReverseGateL
 12967              		.global	save_flag
 12968              		.global	delayR_flag
 12969              		.global	delayL_flag
 12970              		.global	PostFilters
 12971              		.global	ClockInFlag
 12972              		.global	mute
 12973              		.global	shift
 12974              		.global	syncMode
 12975              		.global	modulation_CV_Raw
 12976              		.global	ModDepth
 12977              		.global	div_R
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 383


 12978              		.global	div_L
 12979              		.global	filterXfade
 12980              		.global	width_CV
 12981              		.global	width
 12982              		.global	drywet_CV
 12983              		.global	drywet
 12984              		.global	crossfeedback_CV
 12985              		.global	crossfeedback
 12986              		.global	feedbackR_CV
 12987              		.global	feedbackR
 12988              		.global	feedbackL_CV
 12989              		.global	feedbackL
 12990              		.global	delayTimeR_CV
 12991              		.global	delayTimeL_CV
 12992              		.global	tempoLED_BASE
 12993              		.global	Tap_Button
 12994              		.global	Rev_R_sw
 12995              		.global	Rev_L_sw
 12996              		.global	HPF_sw
 12997              		.global	LPF_sw
 12998              		.global	delaysR_REV
 12999              		.global	delaysL_REV
 13000              		.global	delayR
 13001              		.global	delayL
 13002              		.global	delMemsR_REV
 13003              		.global	delMemsL_REV
 13004              		.global	delMemsR
 13005              		.global	delMemsL
 13006              		.section	.bss.AltControls,"aw",%nobits
 13007              		.align	2
 13008              		.set	.LANCHOR19,. + 0
 13011              	AltControls:
 13012 0000 00000000 		.space	32
 13012      00000000 
 13012      00000000 
 13012      00000000 
 13012      00000000 
 13013              		.section	.bss.BaseTempo,"aw",%nobits
 13014              		.align	2
 13015              		.set	.LANCHOR56,. + 0
 13018              	BaseTempo:
 13019 0000 00000000 		.space	40
 13019      00000000 
 13019      00000000 
 13019      00000000 
 13019      00000000 
 13020              		.section	.bss.ClockIn,"aw",%nobits
 13021              		.align	2
 13022              		.set	.LANCHOR53,. + 0
 13025              	ClockIn:
 13026 0000 00000000 		.space	16
 13026      00000000 
 13026      00000000 
 13026      00000000 
 13027              		.section	.bss.ClockInFlag,"aw",%nobits
 13030              	ClockInFlag:
 13031 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 384


 13032              		.section	.bss.HPF_sw,"aw",%nobits
 13033              		.align	2
 13034              		.set	.LANCHOR76,. + 0
 13037              	HPF_sw:
 13038 0000 00000000 		.space	52
 13038      00000000 
 13038      00000000 
 13038      00000000 
 13038      00000000 
 13039              		.section	.bss.LPF_sw,"aw",%nobits
 13040              		.align	2
 13041              		.set	.LANCHOR75,. + 0
 13044              	LPF_sw:
 13045 0000 00000000 		.space	52
 13045      00000000 
 13045      00000000 
 13045      00000000 
 13045      00000000 
 13046              		.section	.bss.ModDepth,"aw",%nobits
 13047              		.align	2
 13048              		.set	.LANCHOR42,. + 0
 13051              	ModDepth:
 13052 0000 00000000 		.space	4
 13053              		.section	.bss.PostFilters,"aw",%nobits
 13054              		.set	.LANCHOR49,. + 0
 13057              	PostFilters:
 13058 0000 00       		.space	1
 13059              		.section	.bss.Rev_L_sw,"aw",%nobits
 13060              		.align	2
 13061              		.set	.LANCHOR77,. + 0
 13064              	Rev_L_sw:
 13065 0000 00000000 		.space	52
 13065      00000000 
 13065      00000000 
 13065      00000000 
 13065      00000000 
 13066              		.section	.bss.Rev_R_sw,"aw",%nobits
 13067              		.align	2
 13068              		.set	.LANCHOR78,. + 0
 13071              	Rev_R_sw:
 13072 0000 00000000 		.space	52
 13072      00000000 
 13072      00000000 
 13072      00000000 
 13072      00000000 
 13073              		.section	.bss.ReverseGateL,"aw",%nobits
 13074              		.align	2
 13075              		.set	.LANCHOR80,. + 0
 13078              	ReverseGateL:
 13079 0000 00000000 		.space	16
 13079      00000000 
 13079      00000000 
 13079      00000000 
 13080              		.section	.bss.ReverseGateR,"aw",%nobits
 13081              		.align	2
 13082              		.set	.LANCHOR81,. + 0
 13085              	ReverseGateR:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 385


 13086 0000 00000000 		.space	16
 13086      00000000 
 13086      00000000 
 13086      00000000 
 13087              		.section	.bss.Sync,"aw",%nobits
 13088              		.align	2
 13089              		.set	.LANCHOR82,. + 0
 13092              	Sync:
 13093 0000 00000000 		.space	16
 13093      00000000 
 13093      00000000 
 13093      00000000 
 13094              		.section	.bss.Tap_Button,"aw",%nobits
 13095              		.align	2
 13096              		.set	.LANCHOR79,. + 0
 13099              	Tap_Button:
 13100 0000 00000000 		.space	52
 13100      00000000 
 13100      00000000 
 13100      00000000 
 13100      00000000 
 13101              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13102              		.align	2
 13103              		.set	.LANCHOR83,. + 0
 13106              	_ZL10FwdRevLEnv:
 13107 0000 00000000 		.space	56
 13107      00000000 
 13107      00000000 
 13107      00000000 
 13107      00000000 
 13108              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13109              		.align	2
 13110              		.set	.LANCHOR84,. + 0
 13113              	_ZL10FwdRevREnv:
 13114 0000 00000000 		.space	56
 13114      00000000 
 13114      00000000 
 13114      00000000 
 13114      00000000 
 13115              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13116              		.align	2
 13117              		.set	.LANCHOR97,. + 0
 13120              	_ZL10HPF_LXfade:
 13121 0000 00000000 		.space	8
 13121      00000000 
 13122              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13123              		.align	2
 13124              		.set	.LANCHOR17,. + 0
 13127              	_ZL10HPF_L_post:
 13128 0000 00000000 		.space	76
 13128      00000000 
 13128      00000000 
 13128      00000000 
 13128      00000000 
 13129              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13130              		.align	2
 13131              		.set	.LANCHOR98,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 386


 13134              	_ZL10HPF_RXfade:
 13135 0000 00000000 		.space	8
 13135      00000000 
 13136              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13137              		.align	2
 13138              		.set	.LANCHOR18,. + 0
 13141              	_ZL10HPF_R_post:
 13142 0000 00000000 		.space	76
 13142      00000000 
 13142      00000000 
 13142      00000000 
 13142      00000000 
 13143              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13144              		.align	2
 13145              		.set	.LANCHOR99,. + 0
 13148              	_ZL10LPF_LXfade:
 13149 0000 00000000 		.space	8
 13149      00000000 
 13150              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13151              		.align	2
 13152              		.set	.LANCHOR29,. + 0
 13155              	_ZL10LPF_L_post:
 13156 0000 00000000 		.space	76
 13156      00000000 
 13156      00000000 
 13156      00000000 
 13156      00000000 
 13157              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13158              		.align	2
 13159              		.set	.LANCHOR100,. + 0
 13162              	_ZL10LPF_RXfade:
 13163 0000 00000000 		.space	8
 13163      00000000 
 13164              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13165              		.align	2
 13166              		.set	.LANCHOR30,. + 0
 13169              	_ZL10LPF_R_post:
 13170 0000 00000000 		.space	76
 13170      00000000 
 13170      00000000 
 13170      00000000 
 13170      00000000 
 13171              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13172              		.align	2
 13173              		.set	.LANCHOR41,. + 0
 13176              	_ZL10WidthXfade:
 13177 0000 00000000 		.space	8
 13177      00000000 
 13178              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13179              		.align	2
 13180              		.set	.LANCHOR89,. + 0
 13183              	_ZL11DcBlock_LFB:
 13184 0000 00000000 		.space	12
 13184      00000000 
 13184      00000000 
 13185              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13186              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 387


 13187              		.set	.LANCHOR90,. + 0
 13190              	_ZL11DcBlock_RFB:
 13191 0000 00000000 		.space	12
 13191      00000000 
 13191      00000000 
 13192              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13193              		.align	2
 13194              		.set	.LANCHOR105,. + 0
 13197              	_ZL11FilterMix_L:
 13198 0000 00000000 		.space	8
 13198      00000000 
 13199              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13200              		.align	2
 13201              		.set	.LANCHOR106,. + 0
 13204              	_ZL11FilterMix_R:
 13205 0000 00000000 		.space	8
 13205      00000000 
 13206              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13207              		.align	2
 13208              		.set	.LANCHOR87,. + 0
 13211              	_ZL12FwdRevLXfade:
 13212 0000 00000000 		.space	8
 13212      00000000 
 13213              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13214              		.align	2
 13215              		.set	.LANCHOR88,. + 0
 13218              	_ZL12FwdRevRXfade:
 13219 0000 00000000 		.space	8
 13219      00000000 
 13220              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13221              		.align	2
 13222              		.set	.LANCHOR101,. + 0
 13225              	_ZL15HPF_LXfade_post:
 13226 0000 00000000 		.space	8
 13226      00000000 
 13227              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13228              		.align	2
 13229              		.set	.LANCHOR102,. + 0
 13232              	_ZL15HPF_RXfade_post:
 13233 0000 00000000 		.space	8
 13233      00000000 
 13234              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13235              		.align	2
 13236              		.set	.LANCHOR103,. + 0
 13239              	_ZL15LPF_LXfade_post:
 13240 0000 00000000 		.space	8
 13240      00000000 
 13241              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13242              		.align	2
 13243              		.set	.LANCHOR104,. + 0
 13246              	_ZL15LPF_RXfade_post:
 13247 0000 00000000 		.space	8
 13247      00000000 
 13248              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13249              		.align	2
 13250              		.set	.LANCHOR107,. + 0
 13253              	_ZL16FilterMix_L_post:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 388


 13254 0000 00000000 		.space	8
 13254      00000000 
 13255              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13256              		.align	2
 13257              		.set	.LANCHOR108,. + 0
 13260              	_ZL16FilterMix_R_post:
 13261 0000 00000000 		.space	8
 13261      00000000 
 13262              		.section	.bss._ZL2hw,"aw",%nobits
 13263              		.align	2
 13264              		.set	.LANCHOR4,. + 0
 13267              	_ZL2hw:
 13268 0000 00000000 		.space	60
 13268      00000000 
 13268      00000000 
 13268      00000000 
 13268      00000000 
 13269              		.section	.bss._ZL3lfo,"aw",%nobits
 13270              		.align	2
 13271              		.set	.LANCHOR46,. + 0
 13274              	_ZL3lfo:
 13275 0000 00000000 		.space	40
 13275      00000000 
 13275      00000000 
 13275      00000000 
 13275      00000000 
 13276              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13277              		.align	2
 13278              		.set	.LANCHOR15,. + 0
 13281              	_ZL5HPF_L:
 13282 0000 00000000 		.space	76
 13282      00000000 
 13282      00000000 
 13282      00000000 
 13282      00000000 
 13283              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13284              		.align	2
 13285              		.set	.LANCHOR16,. + 0
 13288              	_ZL5HPF_R:
 13289 0000 00000000 		.space	76
 13289      00000000 
 13289      00000000 
 13289      00000000 
 13289      00000000 
 13290              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13291              		.align	2
 13292              		.set	.LANCHOR27,. + 0
 13295              	_ZL5LPF_L:
 13296 0000 00000000 		.space	76
 13296      00000000 
 13296      00000000 
 13296      00000000 
 13296      00000000 
 13297              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13298              		.align	2
 13299              		.set	.LANCHOR28,. + 0
 13302              	_ZL5LPF_R:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 389


 13303 0000 00000000 		.space	76
 13303      00000000 
 13303      00000000 
 13303      00000000 
 13303      00000000 
 13304              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13305              		.align	2
 13306              		.set	.LANCHOR86,. + 0
 13309              	_ZL7HPF_Env:
 13310 0000 00000000 		.space	56
 13310      00000000 
 13310      00000000 
 13310      00000000 
 13310      00000000 
 13311              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13312              		.align	2
 13313              		.set	.LANCHOR85,. + 0
 13316              	_ZL7LPF_Env:
 13317 0000 00000000 		.space	56
 13317      00000000 
 13317      00000000 
 13317      00000000 
 13317      00000000 
 13318              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13319              		.align	2
 13320              		.set	.LANCHOR111,. + 0
 13323              	_ZL7LeftEnv:
 13324 0000 00000000 		.space	24
 13324      00000000 
 13324      00000000 
 13324      00000000 
 13324      00000000 
 13325              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13326              		.align	2
 13327              		.set	.LANCHOR112,. + 0
 13330              	_ZL8RightEnv:
 13331 0000 00000000 		.space	24
 13331      00000000 
 13331      00000000 
 13331      00000000 
 13331      00000000 
 13332              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13333              		.align	2
 13334              		.set	.LANCHOR51,. + 0
 13337              	_ZZ10Update_ModvE13modulation_CV:
 13338 0000 00000000 		.space	4
 13339              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13340              		.align	2
 13341              		.set	.LANCHOR52,. + 0
 13344              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13345 0000 00000000 		.space	4
 13346              		.section	.bss._ZZ11UpdateClockvE10divCounter,"aw",%nobits
 13347              		.align	2
 13348              		.set	.LANCHOR54,. + 0
 13351              	_ZZ11UpdateClockvE10divCounter:
 13352 0000 00000000 		.space	4
 13353              		.section	.bss._ZZ12Update_widthvE14width_Pot_Last,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 390


 13354              		.align	2
 13355              		.set	.LANCHOR39,. + 0
 13358              	_ZZ12Update_widthvE14width_Pot_Last:
 13359 0000 00000000 		.space	4
 13360              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 13361              		.set	.LANCHOR37,. + 0
 13364              	_ZZ13Update_drywetvE10Res_pickup:
 13365 0000 00       		.space	1
 13366              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13367              		.align	2
 13368              		.set	.LANCHOR33,. + 0
 13371              	_ZZ13Update_drywetvE11drywet_Last:
 13372 0000 00000000 		.space	4
 13373              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 13374              		.set	.LANCHOR34,. + 0
 13377              	_ZZ13Update_drywetvE13drywet_pickup:
 13378 0000 00       		.space	1
 13379              		.section	.bss._ZZ13Update_drywetvE8Res_Last,"aw",%nobits
 13380              		.align	2
 13381              		.set	.LANCHOR36,. + 0
 13384              	_ZZ13Update_drywetvE8Res_Last:
 13385 0000 00000000 		.space	4
 13386              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13387              		.set	.LANCHOR32,. + 0
 13390              	_ZZ13Update_drywetvE9lastShift:
 13391 0000 00       		.space	1
 13392              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13393              		.align	2
 13394              		.set	.LANCHOR92,. + 0
 13397              	_ZZ14Update_ButtonsvE11buttonstate:
 13398 0000 00000000 		.space	4
 13399              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13400              		.align	2
 13401              		.set	.LANCHOR93,. + 0
 13404              	_ZZ14Update_ButtonsvE9resetTime:
 13405 0000 00000000 		.space	4
 13406              		.section	.bss._ZZ16Update_feedbackLvE13HPCutoff_Last,"aw",%nobits
 13407              		.align	2
 13408              		.set	.LANCHOR13,. + 0
 13411              	_ZZ16Update_feedbackLvE13HPCutoff_Last:
 13412 0000 00000000 		.space	4
 13413              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13414              		.align	2
 13415              		.set	.LANCHOR10,. + 0
 13418              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13419 0000 00000000 		.space	4
 13420              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13421              		.set	.LANCHOR14,. + 0
 13424              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13425 0000 00       		.space	1
 13426              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 13427              		.set	.LANCHOR11,. + 0
 13430              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13431 0000 00       		.space	1
 13432              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13433              		.set	.LANCHOR9,. + 0
 13436              	_ZZ16Update_feedbackLvE9lastShift:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 391


 13437 0000 00       		.space	1
 13438              		.section	.bss._ZZ16Update_feedbackRvE13LPCutoff_Last,"aw",%nobits
 13439              		.align	2
 13440              		.set	.LANCHOR25,. + 0
 13443              	_ZZ16Update_feedbackRvE13LPCutoff_Last:
 13444 0000 00000000 		.space	4
 13445              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13446              		.align	2
 13447              		.set	.LANCHOR22,. + 0
 13450              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13451 0000 00000000 		.space	4
 13452              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13453              		.set	.LANCHOR26,. + 0
 13456              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13457 0000 00       		.space	1
 13458              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13459              		.set	.LANCHOR23,. + 0
 13462              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13463 0000 00       		.space	1
 13464              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13465              		.set	.LANCHOR21,. + 0
 13468              	_ZZ16Update_feedbackRvE9lastShift:
 13469 0000 00       		.space	1
 13470              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13471              		.set	.LANCHOR72,. + 0
 13474              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13475 0000 00       		.space	1
 13476              		.section	.bss._ZZ17Update_DelayTimeLvE18Rev_DelayTime_last,"aw",%nobits
 13477              		.align	2
 13478              		.set	.LANCHOR73,. + 0
 13481              	_ZZ17Update_DelayTimeLvE18Rev_DelayTime_last:
 13482 0000 00000000 		.space	4
 13483              		.section	.bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last,"aw",%nobits
 13484              		.align	2
 13485              		.set	.LANCHOR71,. + 0
 13488              	_ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:
 13489 0000 00000000 		.space	4
 13490              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13491              		.set	.LANCHOR74,. + 0
 13494              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13495 0000 00       		.space	1
 13496              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13497              		.align	2
 13498              		.set	.LANCHOR69,. + 0
 13501              	_ZZ17Update_DelayTimeLvE8counterL:
 13502 0000 00000000 		.space	4
 13503              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13504              		.set	.LANCHOR70,. + 0
 13507              	_ZZ17Update_DelayTimeLvE9lastShift:
 13508 0000 00       		.space	1
 13509              		.section	.bss._ZZ17Update_DelayTimeRvE13tapRatio_last,"aw",%nobits
 13510              		.align	2
 13511              		.set	.LANCHOR66,. + 0
 13514              	_ZZ17Update_DelayTimeRvE13tapRatio_last:
 13515 0000 00000000 		.space	4
 13516              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13517              		.set	.LANCHOR67,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 392


 13520              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13521 0000 00       		.space	1
 13522              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13523              		.set	.LANCHOR65,. + 0
 13526              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13527 0000 00       		.space	1
 13528              		.section	.bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last,"aw",%nobits
 13529              		.align	2
 13530              		.set	.LANCHOR64,. + 0
 13533              	_ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:
 13534 0000 00000000 		.space	4
 13535              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13536              		.align	2
 13537              		.set	.LANCHOR62,. + 0
 13540              	_ZZ17Update_DelayTimeRvE8counterR:
 13541 0000 00000000 		.space	4
 13542              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13543              		.set	.LANCHOR63,. + 0
 13546              	_ZZ17Update_DelayTimeRvE9lastShift:
 13547 0000 00       		.space	1
 13548              		.section	.bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last,"aw",%nobits
 13549              		.align	2
 13550              		.set	.LANCHOR47,. + 0
 13553              	_ZZ18Update_filterXfadevE20filterXfade_Pot_Last:
 13554 0000 00000000 		.space	4
 13555              		.section	.bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last,"aw",%nobits
 13556              		.align	2
 13557              		.set	.LANCHOR43,. + 0
 13560              	_ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:
 13561 0000 00000000 		.space	4
 13562              		.section	.bss._ZZ20Update_crossfeedbackvE7modRate,"aw",%nobits
 13563              		.align	2
 13564              		.set	.LANCHOR45,. + 0
 13567              	_ZZ20Update_crossfeedbackvE7modRate:
 13568 0000 00000000 		.space	4
 13569              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13570              		.align	2
 13571              		.set	.LANCHOR109,. + 0
 13574              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13575 0000 00000000 		.space	4
 13576              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13577              		.align	2
 13578              		.set	.LANCHOR110,. + 0
 13581              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13582 0000 00000000 		.space	4
 13583              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13584              		.align	2
 13585              		.set	.LANCHOR95,. + 0
 13588              	_ZZL13AudioCallbackPfS_jE7Counter:
 13589 0000 00000000 		.space	4
 13590              		.section	.bss.crossfeedback,"aw",%nobits
 13591              		.align	2
 13592              		.set	.LANCHOR44,. + 0
 13595              	crossfeedback:
 13596 0000 00000000 		.space	4
 13597              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13598              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 393


 13601              	crossfeedback_CV:
 13602 0000 00000000 		.space	4
 13603              		.section	.bss.delayL,"aw",%nobits
 13604              		.align	2
 13605              		.set	.LANCHOR0,. + 0
 13608              	delayL:
 13609 0000 00000000 		.space	284
 13609      00000000 
 13609      00000000 
 13609      00000000 
 13609      00000000 
 13610              		.section	.bss.delayR,"aw",%nobits
 13611              		.align	2
 13612              		.set	.LANCHOR1,. + 0
 13615              	delayR:
 13616 0000 00000000 		.space	284
 13616      00000000 
 13616      00000000 
 13616      00000000 
 13616      00000000 
 13617              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13618              		.align	2
 13619              		.set	.LANCHOR5,. + 0
 13622              	delayTimeL_CV:
 13623 0000 00000000 		.space	4
 13624              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13625              		.align	2
 13626              		.set	.LANCHOR6,. + 0
 13629              	delayTimeR_CV:
 13630 0000 00000000 		.space	4
 13631              		.section	.bss.delaysL_REV,"aw",%nobits
 13632              		.align	2
 13633              		.set	.LANCHOR2,. + 0
 13636              	delaysL_REV:
 13637 0000 00000000 		.space	8
 13637      00000000 
 13638              		.section	.bss.delaysR_REV,"aw",%nobits
 13639              		.align	2
 13640              		.set	.LANCHOR3,. + 0
 13643              	delaysR_REV:
 13644 0000 00000000 		.space	8
 13644      00000000 
 13645              		.section	.bss.div_L,"aw",%nobits
 13646              		.set	.LANCHOR58,. + 0
 13649              	div_L:
 13650 0000 00       		.space	1
 13651              		.section	.bss.div_R,"aw",%nobits
 13652              		.set	.LANCHOR59,. + 0
 13655              	div_R:
 13656 0000 00       		.space	1
 13657              		.section	.bss.drywet_CV,"aw",%nobits
 13658              		.align	2
 13659              		.set	.LANCHOR31,. + 0
 13662              	drywet_CV:
 13663 0000 00000000 		.space	4
 13664              		.section	.bss.feedbackL,"aw",%nobits
 13665              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 394


 13666              		.set	.LANCHOR12,. + 0
 13669              	feedbackL:
 13670 0000 00000000 		.space	4
 13671              		.section	.bss.feedbackL_CV,"aw",%nobits
 13672              		.align	2
 13673              		.set	.LANCHOR7,. + 0
 13676              	feedbackL_CV:
 13677 0000 00000000 		.space	4
 13678              		.section	.bss.feedbackR,"aw",%nobits
 13679              		.align	2
 13680              		.set	.LANCHOR24,. + 0
 13683              	feedbackR:
 13684 0000 00000000 		.space	4
 13685              		.section	.bss.feedbackR_CV,"aw",%nobits
 13686              		.align	2
 13687              		.set	.LANCHOR20,. + 0
 13690              	feedbackR_CV:
 13691 0000 00000000 		.space	4
 13692              		.section	.bss.filterXfade,"aw",%nobits
 13693              		.align	2
 13694              		.set	.LANCHOR48,. + 0
 13697              	filterXfade:
 13698 0000 00000000 		.space	4
 13699              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13700              		.align	2
 13701              		.set	.LANCHOR50,. + 0
 13704              	modulation_CV_Raw:
 13705 0000 00000000 		.space	4
 13706              		.section	.bss.mute,"aw",%nobits
 13707              		.set	.LANCHOR94,. + 0
 13710              	mute:
 13711 0000 00       		.space	1
 13712              		.section	.bss.save_flag,"aw",%nobits
 13713              		.align	2
 13714              		.set	.LANCHOR96,. + 0
 13717              	save_flag:
 13718 0000 00       		.space	1
 13719              		.section	.bss.shift,"aw",%nobits
 13720              		.set	.LANCHOR8,. + 0
 13723              	shift:
 13724 0000 00       		.space	1
 13725              		.section	.bss.syncMode,"aw",%nobits
 13726              		.set	.LANCHOR57,. + 0
 13729              	syncMode:
 13730 0000 00       		.space	1
 13731              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13732              		.align	2
 13733              		.set	.LANCHOR55,. + 0
 13736              	tempoLED_BASE:
 13737 0000 00000000 		.space	68
 13737      00000000 
 13737      00000000 
 13737      00000000 
 13737      00000000 
 13738              		.section	.bss.width_CV,"aw",%nobits
 13739              		.align	2
 13740              		.set	.LANCHOR38,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 395


 13743              	width_CV:
 13744 0000 00000000 		.space	4
 13745              		.section	.data.delayL_flag,"aw"
 13746              		.set	.LANCHOR60,. + 0
 13749              	delayL_flag:
 13750 0000 01       		.byte	1
 13751              		.section	.data.delayR_flag,"aw"
 13752              		.set	.LANCHOR61,. + 0
 13755              	delayR_flag:
 13756 0000 01       		.byte	1
 13757              		.section	.data.drywet,"aw"
 13758              		.align	2
 13759              		.set	.LANCHOR35,. + 0
 13762              	drywet:
 13763 0000 0000003F 		.word	1056964608
 13764              		.section	.data.width,"aw"
 13765              		.align	2
 13766              		.set	.LANCHOR40,. + 0
 13769              	width:
 13770 0000 0000803F 		.word	1065353216
 13771              		.section	.rodata.CSWTCH.303,"a"
 13772              		.align	2
 13773              		.set	.LANCHOR68,. + 0
 13776              	CSWTCH.303:
 13777 0000 0000C03F 		.word	1069547520
 13778 0004 00000040 		.word	1073741824
 13779 0008 00004040 		.word	1077936128
 13780              		.section	.rodata._ZL18defaultAltControls,"a"
 13781              		.align	2
 13782              		.set	.LANCHOR91,. + 0
 13785              	_ZL18defaultAltControls:
 13786 0000 00650148 		.word	1208050944
 13787 0004 0000803F 		.word	1065353216
 13788 0008 00000000 		.word	0
 13789 000c 9A99A140 		.word	1084332442
 13790 0010 00004843 		.word	1128792064
 13791 0014 00803B46 		.word	1178304512
 13792 0018 00000000 		.word	0
 13793 001c 00000000 		.word	0
 13794              		.section	.sdram_bss,"aw"
 13795              		.align	2
 13798              	delMemsR_REV:
 13799 0000 00000000 		.space	2400040
 13799      00000000 
 13799      00000000 
 13799      00000000 
 13799      00000000 
 13802              	delMemsL_REV:
 13803 249f28 00000000 		.space	2400040
 13803      00000000 
 13803      00000000 
 13803      00000000 
 13803      00000000 
 13806              	delMemsR:
 13807 493e50 00000000 		.space	6912136
 13807      00000000 
 13807      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 396


 13807      00000000 
 13807      00000000 
 13810              	delMemsL:
 13811 b2b6d8 00000000 		.space	6912136
 13811      00000000 
 13811      00000000 
 13811      00000000 
 13811      00000000 
 13812              		.text
 13813              	.Letext0:
 13814              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13815              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13816              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13817              		.file 30 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13818              		.file 31 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13819              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13820              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13821              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13822              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13823              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13824              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13825              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13826              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13827              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13828              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13829              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13830              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13831              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13832              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13833              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13834              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13835              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13836              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13837              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13838              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13839              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13840              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13841              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13842              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13843              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13844              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13845              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13846              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13847              		.file 60 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13848              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13849              		.file 62 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13850              		.file 63 "../libdaisy/src/daisy_core.h"
 13851              		.file 64 "../libdaisy/src/per/tim.h"
 13852              		.file 65 "../libdaisy/src/per/sai.h"
 13853              		.file 66 "../libdaisy/src/util/wav_format.h"
 13854              		.file 67 "../libdaisy/src/per/qspi.h"
 13855              		.file 68 "../libdaisy/src/per/gpio.h"
 13856              		.file 69 "../libdaisy/src/dev/sdram.h"
 13857              		.file 70 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13858              		.file 71 "<built-in>"
 13859              		.file 72 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13860              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 397


 13861              		.file 74 "../libdaisy/src/util/oled_fonts.h"
 13862              		.file 75 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13863              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13864              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13865              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13866              		.file 79 "../libdaisy/src/util/sd_diskio.h"
 13867              		.file 80 "../libdaisy/src/sys/fatfs.h"
 13868              		.file 81 "../DaisySP/Source/Control/adenv.h"
 13869              		.file 82 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13870              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13871              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13872              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13873              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13874              		.file 87 "QSPI_Settings.h"
 13875              		.file 88 "scale.h"
 13876              		.file 89 "constants.h"
 13877              		.file 90 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 398


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:303    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:337    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:376    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:401    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:426    .text._Z16checkPickupStateff11pickupStateb.part.0:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:433    .text._Z16checkPickupStateff11pickupStateb.part.0:0000000000000000 _Z16checkPickupStateff11pickupStateb.part.0
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:491    .text._Z16checkPickupStateff11pickupStateb.part.0:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:496    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:504    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1067   .text._Z10InitDelaysf:000000000000018c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13810  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13806  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13802  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13798  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1093   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1101   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1126   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 399


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1132   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1140   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1165   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1171   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1179   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1204   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1210   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1218   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1773   .text._Z16Update_feedbackLv:00000000000001cc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1798   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1806   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1831   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1837   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:1845   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:2399   .text._Z16Update_feedbackRv:00000000000001cc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:2424   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:2432   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:2457   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:2463   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:2471   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3073   .text._Z13Update_drywetv:0000000000000230 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3106   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3114   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3139   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3145   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3153   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3354   .text._Z12Update_widthv:00000000000000bc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3374   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3382   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3551   .text._Z20Update_crossfeedbackv:0000000000000084 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3566   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3574   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3706   .text._Z18Update_filterXfadev:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3722   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3730   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3760   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3768   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3776   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3930   .text._Z10Update_Modv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3942   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:3950   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4061   .text._Z11UpdateClockv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4076   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4084   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4156   .text._Z19Update_BaseTempoLEDv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4165   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4173   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 _Z11SetTempoDivfP9TempoDivs
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4393   .text._Z11SetTempoDivfP9TempoDivs:0000000000000108 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4410   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:4418   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5083   .text._Z17Update_DelayTimeRv:000000000000022c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5109   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5117   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5889   .text._Z17Update_DelayTimeLv:0000000000000278 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5919   .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5927   .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5957   .text._Z11GetTapRatio9TapRatios:000000000000001c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 400


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5962   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:5970   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:6667   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:6706   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:6714   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:7592   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:7626   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:7996   .text.startup.main:00000000000005b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8666   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8014   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8022   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8084   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8095   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8103   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8206   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8218   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8226   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8633   .text._Z14Update_Buttonsv:00000000000001a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8659   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8778   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8793   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8822   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:8833   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:9969   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:10025  .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:10651  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:10673  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11428  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11465  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11790  .text._ZL13AudioCallbackPfS_j:0000000000000ca4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11801  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11809  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11843  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11851  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11898  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11903  .text._Z16checkPickupStateff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11911  .text._Z16checkPickupStateff11pickupStateb:0000000000000000 _Z16checkPickupStateff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11963  .text._Z16checkPickupStateff11pickupStateb:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11968  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:11975  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:12885  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000258 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:12959  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13011  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13018  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13025  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13092  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13085  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13078  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13717  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13755  .data.delayR_flag:0000000000000000 delayR_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13749  .data.delayL_flag:0000000000000000 delayL_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13057  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13030  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13710  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13723  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13729  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13704  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 401


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13051  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13655  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13649  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13697  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13743  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13769  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13662  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13762  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13601  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13595  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13690  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13683  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13676  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13669  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13629  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13622  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13736  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13099  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13071  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13064  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13037  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13044  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13643  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13636  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13615  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13608  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13007  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13014  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13021  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13031  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13033  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13040  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13047  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13058  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13060  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13067  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13074  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13081  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13088  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13095  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13102  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13106  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13109  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13113  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13116  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13120  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13123  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13127  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13130  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13134  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13137  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13141  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13144  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13148  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13151  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13155  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13158  .bss._ZL10LPF_RXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 402


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13162  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13165  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13169  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13172  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13176  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13179  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13183  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13186  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13190  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13193  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13197  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13200  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13204  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13207  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13211  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13214  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13218  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13221  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13225  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13228  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13232  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13235  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13239  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13242  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13246  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13249  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13253  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13256  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13260  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13263  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13267  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13270  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13274  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13277  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13281  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13284  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13288  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13291  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13295  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13298  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13302  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13305  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13309  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13312  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13316  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13319  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13323  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13326  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13330  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13333  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13337  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13340  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13344  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13347  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13351  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 _ZZ11UpdateClockvE10divCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13354  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13358  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 _ZZ12Update_widthvE14width_Pot_Last
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 403


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13364  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13365  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13367  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13371  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13377  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13378  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13380  .bss._ZZ13Update_drywetvE8Res_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13384  .bss._ZZ13Update_drywetvE8Res_Last:0000000000000000 _ZZ13Update_drywetvE8Res_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13390  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13391  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13393  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13397  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13400  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13404  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13407  .bss._ZZ16Update_feedbackLvE13HPCutoff_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13411  .bss._ZZ16Update_feedbackLvE13HPCutoff_Last:0000000000000000 _ZZ16Update_feedbackLvE13HPCutoff_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13414  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13418  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13424  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13425  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13430  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13431  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13436  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13437  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13439  .bss._ZZ16Update_feedbackRvE13LPCutoff_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13443  .bss._ZZ16Update_feedbackRvE13LPCutoff_Last:0000000000000000 _ZZ16Update_feedbackRvE13LPCutoff_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13446  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13450  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13456  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13457  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13462  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13463  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13468  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13469  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13474  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13475  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13477  .bss._ZZ17Update_DelayTimeLvE18Rev_DelayTime_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13481  .bss._ZZ17Update_DelayTimeLvE18Rev_DelayTime_last:0000000000000000 _ZZ17Update_DelayTimeLvE18Rev_DelayTime_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13484  .bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13488  .bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:0000000000000000 _ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13494  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13495  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13497  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13501  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13507  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13508  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13510  .bss._ZZ17Update_DelayTimeRvE13tapRatio_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13514  .bss._ZZ17Update_DelayTimeRvE13tapRatio_last:0000000000000000 _ZZ17Update_DelayTimeRvE13tapRatio_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13520  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13521  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13526  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13527  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13529  .bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13533  .bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:0000000000000000 _ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13536  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13540  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13546  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 404


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13547  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13549  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13553  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 _ZZ18Update_filterXfadevE20filterXfade_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13556  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13560  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 _ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13563  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13567  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 _ZZ20Update_crossfeedbackvE7modRate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13570  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13574  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13577  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13581  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13584  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13588  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13591  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13598  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13604  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13611  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13618  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13625  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13632  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13639  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13650  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13656  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13658  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13665  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13672  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13679  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13686  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13693  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13700  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13711  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13713  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13724  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13730  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13732  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13739  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13758  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13765  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13772  .rodata.CSWTCH.303:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13776  .rodata.CSWTCH.303:0000000000000000 CSWTCH.303
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13781  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13785  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s:13795  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 405



UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZN10DelayMulti12SetDelayTimeEf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_Z5scalefff9CurveType
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN10DelayMulti13SetModulationERKf
_ZN5daisy6Switch8DebounceEv
_ZN8TempoLED10resetPhaseEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo11setTapRatioEf
_ZN10DelayMulti16SetDelayTime_potEfb
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccjtmjAT.s 			page 406


__dso_handle
