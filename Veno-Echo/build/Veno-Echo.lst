ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy6GateInD2Ev,"axG",%progbits,_ZN5daisy6GateInD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy6GateInD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy6GateInD2Ev:
  52              	.LVL1:
  53              	.LFB1563:
  54              		.file 2 "../libdaisy/src/hid/gatein.h"
   1:../libdaisy/src/hid/gatein.h **** #pragma once
   2:../libdaisy/src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../libdaisy/src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../libdaisy/src/hid/gatein.h **** #include "per/gpio.h"
   5:../libdaisy/src/hid/gatein.h **** 
   6:../libdaisy/src/hid/gatein.h **** namespace daisy
   7:../libdaisy/src/hid/gatein.h **** {
   8:../libdaisy/src/hid/gatein.h **** /** @file hid_gatein.h */
   9:../libdaisy/src/hid/gatein.h **** /**
  10:../libdaisy/src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  11:../libdaisy/src/hid/gatein.h ****    @author Stephen Hensley
  12:../libdaisy/src/hid/gatein.h ****    @date    March 2020
  13:../libdaisy/src/hid/gatein.h ****    @ingroup controls
  14:../libdaisy/src/hid/gatein.h **** */
  15:../libdaisy/src/hid/gatein.h **** class GateIn
  16:../libdaisy/src/hid/gatein.h **** {
  17:../libdaisy/src/hid/gatein.h ****   public:
  18:../libdaisy/src/hid/gatein.h ****     /** GateIn 
  19:../libdaisy/src/hid/gatein.h ****     Constructor 
  20:../libdaisy/src/hid/gatein.h ****     */
  21:../libdaisy/src/hid/gatein.h ****     GateIn() {}
  22:../libdaisy/src/hid/gatein.h ****     /** GateIn~
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 3


  23:../libdaisy/src/hid/gatein.h ****     Destructor 
  24:../libdaisy/src/hid/gatein.h ****     */
  25:../libdaisy/src/hid/gatein.h ****     ~GateIn() {}
  55              		.loc 2 25 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 25 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1563:
  65              		.weak	_ZN5daisy6GateInD1Ev
  66              		.thumb_set _ZN5daisy6GateInD1Ev,_ZN5daisy6GateInD2Ev
  67 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy9DaisySeedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy9DaisySeedD2Ev:
  77              	.LVL2:
  78              	.LFB1703:
  79              		.file 3 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  80              		.loc 3 22 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LBB878:
  86              	.LBI878:
  87              		.file 4 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 4


   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  88              		.loc 4 57 5 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 5


  89              		.loc 4 57 5 is_stmt 0 view .LVU6
  90              	.LBE878:
  91              	.LBB879:
  92              	.LBI879:
  93              		.file 5 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  94              		.loc 5 42 5 is_stmt 1 view .LVU7
  95              		.loc 5 42 5 is_stmt 0 view .LVU8
  96              	.LBE879:
  97              	.LBB880:
  98              	.LBI880:
  99              		.file 6 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 6


   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 7


  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 100              		.loc 6 85 5 is_stmt 1 view .LVU9
 101              		.loc 6 85 5 is_stmt 0 view .LVU10
 102              	.LBE880:
 103              	.LBB881:
 104              	.LBI881:
 105              		.file 7 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 8


  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 106              		.loc 7 37 5 is_stmt 1 view .LVU11
 107              		.loc 7 37 5 is_stmt 0 view .LVU12
 108              	.LBE881:
 109              		.loc 3 22 19 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1703:
 114              		.weak	_ZN5daisy9DaisySeedD1Ev
 115              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp4AdsrD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp4AdsrD2Ev:
 126              	.LVL3:
 127              	.LFB1726:
 128              		.file 8 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 9


  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 129              		.loc 8 39 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 39 14 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE1726:
 139              		.weak	_ZN7daisysp4AdsrD1Ev
 140              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp10OscillatorD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp10OscillatorD2Ev:
 151              	.LVL4:
 152              	.LFB3340:
 153              		.file 9 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 154              		.loc 9 16 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 10


 159              		.loc 9 16 20 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE3340:
 164              		.weak	_ZN7daisysp10OscillatorD1Ev
 165              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp3SvfD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp3SvfD2Ev:
 176              	.LVL5:
 177              	.LFB3356:
 178              		.file 10 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 179              		.loc 10 22 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              		.loc 10 22 13 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3356:
 189              		.weak	_ZN7daisysp3SvfD1Ev
 190              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp9CrossFadeD2Ev
 195              		.syntax unified
 196              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 11


 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp9CrossFadeD2Ev:
 201              	.LVL6:
 202              	.LFB3461:
 203              		.file 11 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 204              		.loc 11 37 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 37 19 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3461:
 214              		.weak	_ZN7daisysp9CrossFadeD1Ev
 215              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 12


 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 13


  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 14


  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_,minclock_,maxclock_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_,currentClockTime_,lastClockTime_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
  41:taptempo.h    ****         int PPQN_;
  42:taptempo.h    **** 
  43:taptempo.h    ****     public:
  44:taptempo.h    **** 
  45:taptempo.h    ****     Taptempo()  //default constructor
  46:taptempo.h    ****     {
  47:taptempo.h    ****         tapflag_ = false;
  48:taptempo.h    ****         tap_tolerance_ = 1.25f;
  49:taptempo.h    ****         maxtap_ = 6000000;
  50:taptempo.h    ****         mintap_ = 20000;
  51:taptempo.h    ****         lastTapLength_ = 0;
  52:taptempo.h    ****         tempo_ = 500000.0f;
  53:taptempo.h    ****         lastTime_ = 0;
  54:taptempo.h    ****         currentTime_ = 0;
  55:taptempo.h    ****         tapRatio_ = 1.0f;
  56:taptempo.h    ****         clockLength_ = 0;
  57:taptempo.h    ****         lastClockLength_ = 0;
  58:taptempo.h    ****         clockThresh_ = 10000; //Us change
  59:taptempo.h    ****         PPQN_ = 24;
  60:taptempo.h    ****     }
  61:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 61 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 61 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 15


   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB882:
 285              	.LBI882:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 16


   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE882:
 290              	.LBB883:
 291              	.LBI883:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE883:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 17


 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB884:
 321              	.LBI884:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE884:
 325              	.LBB885:
 326              	.LBI885:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE885:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 18


 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 19


  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB886:
 356              	.LBI886:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB887:
 359              	.LBI887:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE887:
 363              	.LBB888:
 364              	.LBI888:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE888:
 368              	.LBE886:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4914:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 20


  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4914:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 21


 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4917:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4917:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 22


 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 23


  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** //static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 24


 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** float CLOCK_DEBUG;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 151:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static Adsr LPF_Env;
 154:Veno-Echo.cpp **** static Adsr HPF_Env;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 157:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 158:Veno-Echo.cpp **** 
 159:Veno-Echo.cpp **** static CrossFade WidthXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of filters
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 25


 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 168:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 169:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 170:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 171:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 172:Veno-Echo.cpp **** 
 173:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 178:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 179:Veno-Echo.cpp **** 
 180:Veno-Echo.cpp **** //Gate inputs
 181:Veno-Echo.cpp **** Switch ReverseGateL;
 182:Veno-Echo.cpp **** Switch ReverseGateR;
 183:Veno-Echo.cpp **** 
 184:Veno-Echo.cpp **** //Switch TapButton;
 185:Veno-Echo.cpp **** Switch Sync;
 186:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 187:Veno-Echo.cpp **** GateIn ClockIn;
 188:Veno-Echo.cpp **** //Switch ClockIn;
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** //Tap tempo
 191:Veno-Echo.cpp **** Taptempo BaseTempo; 
 192:Veno-Echo.cpp **** 
 193:Veno-Echo.cpp **** Settings AltControls;
 194:Veno-Echo.cpp **** 
 195:Veno-Echo.cpp **** //default alt control values
 196:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 197:Veno-Echo.cpp **** {
 198:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 199:Veno-Echo.cpp ****     1.0f,   //tapRatio
 200:Veno-Echo.cpp ****     0.0f,   //ModDepth
 201:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 202:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 203:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 204:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 205:Veno-Echo.cpp ****     0.0f,    //filter prepost
 206:Veno-Echo.cpp ****     24000.0f,     //base tempo (in samples)
 207:Veno-Echo.cpp ****     0.0f,       //L_Rev
 208:Veno-Echo.cpp ****     0.0f    //R_Rev
 209:Veno-Echo.cpp **** };
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 212:Veno-Echo.cpp **** void Update_DelayTimeL();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 215:Veno-Echo.cpp **** void Update_DelayTimeR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_feedbackL_CV();
 218:Veno-Echo.cpp **** void Update_feedbackL();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 26


 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_feedbackR_CV();
 221:Veno-Echo.cpp **** void Update_feedbackR();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_drywet_CV();
 224:Veno-Echo.cpp **** void Update_drywet();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_width_CV();
 227:Veno-Echo.cpp **** void Update_width();
 228:Veno-Echo.cpp **** 
 229:Veno-Echo.cpp **** void Update_crossfeedback();
 230:Veno-Echo.cpp **** void Update_filterXfade();
 231:Veno-Echo.cpp **** 
 232:Veno-Echo.cpp **** void Update_Buttons();
 233:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 234:Veno-Echo.cpp **** void Update_BaseTempoLED();
 235:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 236:Veno-Echo.cpp **** void Update_Mod();
 237:Veno-Echo.cpp **** void GetModCV();
 238:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 239:Veno-Echo.cpp **** void UpdateClock();
 240:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 241:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 242:Veno-Echo.cpp **** void TurnOnAllLEDs();
 243:Veno-Echo.cpp **** void ResetAllLEDs();
 244:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 245:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 246:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 247:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 250:Veno-Echo.cpp **** {
 251:Veno-Echo.cpp **** 
 252:Veno-Echo.cpp **** /*
 253:Veno-Echo.cpp **** static uint32_t funcLength{};
 254:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 255:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 256:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 257:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 258:Veno-Echo.cpp **** 
 259:Veno-Echo.cpp **** */
 260:Veno-Echo.cpp **** 
 261:Veno-Echo.cpp **** static int Counter{};
 262:Veno-Echo.cpp **** 
 263:Veno-Echo.cpp **** /*
 264:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 265:Veno-Echo.cpp **** 
 266:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 267:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 268:Veno-Echo.cpp ****     {
 269:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 270:Veno-Echo.cpp ****     }
 271:Veno-Echo.cpp **** 
 272:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 273:Veno-Echo.cpp ****     {
 274:Veno-Echo.cpp ****         minFuncLength = funcLength;
 275:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 27


 276:Veno-Echo.cpp **** 
 277:Veno-Echo.cpp **** */
 278:Veno-Echo.cpp **** 
 279:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****     /*
 282:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 283:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 284:Veno-Echo.cpp ****         //init timeofCall as current time
 285:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 286:Veno-Echo.cpp **** 
 287:Veno-Echo.cpp ****         //wait for random Dither time
 288:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 289:Veno-Echo.cpp ****         {}
 290:Veno-Echo.cpp ****     */
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****         switch (Counter)
 293:Veno-Echo.cpp ****         {
 294:Veno-Echo.cpp ****             case 0:
 295:Veno-Echo.cpp ****                 Update_Buttons();
 296:Veno-Echo.cpp ****                 GetModCV();
 297:Veno-Echo.cpp ****                 
 298:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 299:Veno-Echo.cpp ****             break;
 300:Veno-Echo.cpp **** 
 301:Veno-Echo.cpp ****             case 1:
 302:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 303:Veno-Echo.cpp ****             break;
 304:Veno-Echo.cpp **** 
 305:Veno-Echo.cpp ****             case 2:
 306:Veno-Echo.cpp ****                 if(saveState != SAVING)
 307:Veno-Echo.cpp ****                 {
 308:Veno-Echo.cpp ****                     Update_DelayTimeL();
 309:Veno-Echo.cpp ****                 }
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 3:
 313:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 314:Veno-Echo.cpp ****             break;
 315:Veno-Echo.cpp **** 
 316:Veno-Echo.cpp ****             case 4:
 317:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 318:Veno-Echo.cpp ****                 {
 319:Veno-Echo.cpp ****                     Update_DelayTimeR();
 320:Veno-Echo.cpp ****                 }
 321:Veno-Echo.cpp ****             break;
 322:Veno-Echo.cpp **** 
 323:Veno-Echo.cpp ****             case 5:
 324:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 325:Veno-Echo.cpp ****             break;
 326:Veno-Echo.cpp **** 
 327:Veno-Echo.cpp ****             case 6:
 328:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 329:Veno-Echo.cpp ****                 {
 330:Veno-Echo.cpp ****                     Update_feedbackL();
 331:Veno-Echo.cpp ****                 }
 332:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 28


 333:Veno-Echo.cpp **** 
 334:Veno-Echo.cpp ****             case 7:
 335:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 336:Veno-Echo.cpp ****             break;
 337:Veno-Echo.cpp **** 
 338:Veno-Echo.cpp ****             case 8:
 339:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 340:Veno-Echo.cpp ****                 {
 341:Veno-Echo.cpp ****                     Update_feedbackR();
 342:Veno-Echo.cpp ****                 }
 343:Veno-Echo.cpp ****             break;
 344:Veno-Echo.cpp **** 
 345:Veno-Echo.cpp ****             case 9:
 346:Veno-Echo.cpp ****                 Update_drywet_CV();
 347:Veno-Echo.cpp ****             break;
 348:Veno-Echo.cpp **** 
 349:Veno-Echo.cpp ****             case 10:
 350:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 351:Veno-Echo.cpp ****                 {
 352:Veno-Echo.cpp ****                     Update_drywet();
 353:Veno-Echo.cpp ****                 }
 354:Veno-Echo.cpp ****             break;
 355:Veno-Echo.cpp **** 
 356:Veno-Echo.cpp ****             case 11:
 357:Veno-Echo.cpp ****                 Update_width_CV();
 358:Veno-Echo.cpp ****             break;
 359:Veno-Echo.cpp **** 
 360:Veno-Echo.cpp ****             case 12:
 361:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 362:Veno-Echo.cpp ****                 {
 363:Veno-Echo.cpp ****                     Update_width();
 364:Veno-Echo.cpp ****                 }
 365:Veno-Echo.cpp ****             break;
 366:Veno-Echo.cpp **** 
 367:Veno-Echo.cpp ****             case 13:
 368:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 369:Veno-Echo.cpp ****                 {
 370:Veno-Echo.cpp ****                     Update_crossfeedback();
 371:Veno-Echo.cpp ****                 }
 372:Veno-Echo.cpp ****             break;
 373:Veno-Echo.cpp **** 
 374:Veno-Echo.cpp ****             case 14:
 375:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 376:Veno-Echo.cpp ****                 {
 377:Veno-Echo.cpp ****                     Update_filterXfade();
 378:Veno-Echo.cpp ****                 }
 379:Veno-Echo.cpp ****             break;
 380:Veno-Echo.cpp ****         }
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 383:Veno-Echo.cpp ****     {   
 384:Veno-Echo.cpp ****         UpdateClock(); 
 385:Veno-Echo.cpp ****         Update_Mod();
 386:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 387:Veno-Echo.cpp **** 
 388:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 389:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 29


 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 391:Veno-Echo.cpp ****         
 392:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 394:Veno-Echo.cpp **** 
 395:Veno-Echo.cpp ****         //set xfade positions      
 396:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 397:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 398:Veno-Echo.cpp ****         
 399:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 400:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 401:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 402:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 403:Veno-Echo.cpp **** 
 404:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 405:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 406:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 407:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 408:Veno-Echo.cpp **** 
 409:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 410:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 411:Veno-Echo.cpp **** 
 412:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 413:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 416:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 417:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 418:Veno-Echo.cpp **** 
 419:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 420:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 421:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 422:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 423:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 424:Veno-Echo.cpp **** 
 425:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 426:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 427:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 428:Veno-Echo.cpp **** 
 429:Veno-Echo.cpp ****         //Get combined output from all delay heads
 430:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 432:Veno-Echo.cpp **** 
 433:Veno-Echo.cpp ****         //Update Base Tempo LED
 434:Veno-Echo.cpp ****         Update_BaseTempoLED();
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp ****         //hard limit
 437:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 438:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 439:Veno-Echo.cpp **** 
 440:Veno-Echo.cpp **** if(!PostFilters)
 441:Veno-Echo.cpp **** {
 442:Veno-Echo.cpp **** //****************************************************************************************
 443:Veno-Echo.cpp ****         //pre filters
 444:Veno-Echo.cpp ****         //process LPF
 445:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 446:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 30


 447:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 448:Veno-Echo.cpp **** 
 449:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 450:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 451:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 452:Veno-Echo.cpp ****         
 453:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 454:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 456:Veno-Echo.cpp **** 
 457:Veno-Echo.cpp ****         //hard limit
 458:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 459:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 460:Veno-Echo.cpp **** 
 461:Veno-Echo.cpp ****         //process HPF
 462:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 463:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 464:Veno-Echo.cpp **** 
 465:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 466:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 472:Veno-Echo.cpp **** 
 473:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 474:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 475:Veno-Echo.cpp **** 
 476:Veno-Echo.cpp **** //****************************************************************************************
 477:Veno-Echo.cpp **** }
 478:Veno-Echo.cpp **** 
 479:Veno-Echo.cpp **** else
 480:Veno-Echo.cpp **** {
 481:Veno-Echo.cpp ****     /* code */
 482:Veno-Echo.cpp **** }
 483:Veno-Echo.cpp **** 
 484:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 485:Veno-Echo.cpp ****         static float RNegFB{};
 486:Veno-Echo.cpp **** 
 487:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 488:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 490:Veno-Echo.cpp ****         
 491:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 492:Veno-Echo.cpp ****             RNegFB = 0.0f;
 493:Veno-Echo.cpp **** 
 494:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 495:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         //crossfeedback:
 498:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 500:Veno-Echo.cpp **** 
 501:Veno-Echo.cpp **** 
 502:Veno-Echo.cpp ****         //get envelopes for feedback signals
 503:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 31


 504:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 505:Veno-Echo.cpp **** 
 506:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 507:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 508:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 509:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 510:Veno-Echo.cpp ****             else LNegFB = 0.0;
 511:Veno-Echo.cpp ****             
 512:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 513:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 514:Veno-Echo.cpp ****             else RNegFB = 0.0;
 515:Veno-Echo.cpp **** 
 516:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 517:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 518:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 519:Veno-Echo.cpp ****  
 520:Veno-Echo.cpp ****         //hard limit
 521:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 522:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 523:Veno-Echo.cpp **** 
 524:Veno-Echo.cpp ****         delayL.Write( combinedL );
 525:Veno-Echo.cpp ****         delayR.Write( combinedR );
 526:Veno-Echo.cpp **** 
 527:Veno-Echo.cpp ****         // floats for wet dry mix
 528:Veno-Echo.cpp ****         float mixL;
 529:Veno-Echo.cpp ****         float mixR;
 530:Veno-Echo.cpp **** 
 531:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 532:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp ****         //hard limit
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 537:Veno-Echo.cpp **** 
 538:Veno-Echo.cpp **** if(PostFilters)
 539:Veno-Echo.cpp **** {
 540:Veno-Echo.cpp ****     //****************************************************************************************
 541:Veno-Echo.cpp ****         //post filters
 542:Veno-Echo.cpp ****         //process LPF
 543:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 544:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 545:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 546:Veno-Echo.cpp **** 
 547:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 548:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 549:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 550:Veno-Echo.cpp ****         
 551:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 552:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 554:Veno-Echo.cpp **** 
 555:Veno-Echo.cpp ****         //hard limit
 556:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 557:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 558:Veno-Echo.cpp **** 
 559:Veno-Echo.cpp ****         //process HPF
 560:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 32


 561:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 562:Veno-Echo.cpp **** 
 563:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 564:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 565:Veno-Echo.cpp **** 
 566:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 568:Veno-Echo.cpp **** 
 569:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 570:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 571:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 572:Veno-Echo.cpp **** 
 573:Veno-Echo.cpp ****     //****************************************************************************************
 574:Veno-Echo.cpp **** }
 575:Veno-Echo.cpp **** else
 576:Veno-Echo.cpp **** {
 577:Veno-Echo.cpp ****     /* code */
 578:Veno-Echo.cpp **** }
 579:Veno-Echo.cpp ****         if(drywet < 0.5f)
 580:Veno-Echo.cpp ****         {
 581:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 582:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 583:Veno-Echo.cpp ****         }
 584:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 585:Veno-Echo.cpp ****         {
 586:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 588:Veno-Echo.cpp ****         }
 589:Veno-Echo.cpp ****         else
 590:Veno-Echo.cpp ****         {
 591:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 592:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 593:Veno-Echo.cpp ****         }
 594:Veno-Echo.cpp **** 
 595:Veno-Echo.cpp ****         //send mixes to outputs
 596:Veno-Echo.cpp ****         if(mute)
 597:Veno-Echo.cpp ****         {
 598:Veno-Echo.cpp ****             out[i] = 0.0f;
 599:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 600:Veno-Echo.cpp ****         }
 601:Veno-Echo.cpp ****         else
 602:Veno-Echo.cpp ****         {
 603:Veno-Echo.cpp ****             out[i] = mixL;
 604:Veno-Echo.cpp ****             out[i+1] = mixR;
 605:Veno-Echo.cpp ****         }
 606:Veno-Echo.cpp **** 
 607:Veno-Echo.cpp ****         //write to DAC for debug
 608:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp ****     }
 611:Veno-Echo.cpp **** 
 612:Veno-Echo.cpp **** }
 613:Veno-Echo.cpp **** 
 614:Veno-Echo.cpp **** void InitDelays(float samplerate)
 615:Veno-Echo.cpp **** {
 439              		.loc 20 615 1 is_stmt 1 view -0
 440              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 33


 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 616:Veno-Echo.cpp **** 
 617:Veno-Echo.cpp ****     //Init fwd delays
 618:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 618 5 view .LVU50
 444              	.LBB889:
 445              	.LBI889:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB890:
 448              	.LBB891:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE891:
 453              	.LBE890:
 454              	.LBE889:
 615:Veno-Echo.cpp **** 
 455              		.loc 20 615 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB896:
 470              	.LBB895:
 471              	.LBB892:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE892:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 34


 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB893:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE893:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB894:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 35


 523              		.loc 18 66 31 view .LVU72
 524              	.LBE894:
 525              	.LBE895:
 526              	.LBE896:
 527              	.LBB897:
 528              	.LBB898:
 529              	.LBB899:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE899:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB900:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE900:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB901:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 36


 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE901:
 576              	.LBE898:
 577              	.LBE897:
 619:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 620:Veno-Echo.cpp **** 
 621:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 622:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 622 5 is_stmt 1 view .LVU91
 623:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 623 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 624:Veno-Echo.cpp **** 
 625:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 625 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 622:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 622 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 623:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 623 5 is_stmt 1 view .LVU95
 588              	.LBB902:
 589              	.LBB903:
 590              	.LBB904:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE904:
 594              	.LBE903:
 595              	.LBE902:
 623:Veno-Echo.cpp **** 
 596              		.loc 20 623 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 625 5 is_stmt 1 view .LVU98
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 37


 599              		.loc 20 625 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 625 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 626:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 626 5 is_stmt 1 view .LVU101
 611              		.loc 20 626 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB916:
 618              	.LBB911:
 619              	.LBB906:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE906:
 623              	.LBE911:
 624              	.LBE916:
 625              		.loc 20 626 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 627:Veno-Echo.cpp **** 
 628:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 629:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 630:Veno-Echo.cpp **** 
 631:Veno-Echo.cpp ****     //Init rev delays
 632:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 632 5 is_stmt 1 view .LVU105
 632              	.LBB917:
 633              	.LBI902:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB912:
 636              	.LBI903:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB907:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 38


 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB905:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE905:
 660              	.LBE907:
 661              	.LBE912:
 662              	.LBE917:
 663              	.LBB918:
 664              	.LBB919:
 665              	.LBB920:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE920:
 675              	.LBE919:
 676              	.LBE918:
 677              	.LBB943:
 678              	.LBB913:
 679              	.LBB908:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE908:
 683              	.LBE913:
 684              	.LBE943:
 685              	.LBB944:
 686              	.LBB933:
 687              	.LBB923:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 39


 690              	.LBE923:
 691              	.LBE933:
 692              	.LBE944:
 693              	.LBB945:
 694              	.LBB914:
 695              	.LBB909:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE909:
 714              	.LBE914:
 715              	.LBE945:
 633:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 633 5 is_stmt 1 view .LVU128
 717              	.LBB946:
 718              	.LBI918:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB934:
 721              	.LBI919:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB924:
 724              	.LBB921:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE921:
 727              	.LBE924:
 728              	.LBE934:
 729              	.LBE946:
 730              	.LBB947:
 731              	.LBB915:
 732              	.LBB910:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 40


  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE910:
 742              	.LBE915:
 743              	.LBE947:
 744              	.LBB948:
 745              	.LBB935:
 746              	.LBB925:
 747              	.LBB922:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE922:
 756              	.LBE925:
 757              	.LBE935:
 758              	.LBE948:
 634:Veno-Echo.cpp **** 
 635:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 636:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 636 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB949:
 762              	.LBB936:
 763              	.LBB926:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE926:
 767              	.LBE936:
 768              	.LBE949:
 769              	.LBB950:
 770              	.LBB951:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 41


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE951:
 780              	.LBE950:
 781              	.LBB965:
 782              	.LBB937:
 783              	.LBB927:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE927:
 787              	.LBE937:
 788              	.LBE965:
 789              	.LBB966:
 790              	.LBB960:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE960:
 794              	.LBE966:
 795              	.LBB967:
 796              	.LBB938:
 797              	.LBB928:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE928:
 803              	.LBE938:
 804              	.LBE967:
 805              	.LBB968:
 806              	.LBB961:
 807              	.LBB952:
 808              	.LBB953:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 42


  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 43


 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE953:
 813              	.LBE952:
 814              	.LBE961:
 815              	.LBE968:
 816              	.LBB969:
 817              	.LBB939:
 818              	.LBB929:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE929:
 826              	.LBE939:
 827              	.LBE969:
 828              	.LBB970:
 829              	.LBB962:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE962:
 833              	.LBE970:
 834              	.LBB971:
 835              	.LBB940:
 836              	.LBB930:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE930:
 842              	.LBE940:
 843              	.LBE971:
 844              		.loc 20 636 5 is_stmt 1 view .LVU155
 637:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 637 5 view .LVU156
 636:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 636 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB972:
 849              	.LBB941:
 850              	.LBB931:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE931:
 854              	.LBE941:
 855              	.LBE972:
 856              	.LBB973:
 857              	.LBB963:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 44


 860              	.LBE963:
 861              	.LBE973:
 862              	.LBB974:
 863              	.LBB942:
 864              	.LBB932:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE932:
 868              	.LBE942:
 869              	.LBE974:
 870              		.loc 20 637 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 638:Veno-Echo.cpp **** 
 639:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 640:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 640 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB975:
 876              	.LBI950:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB964:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB955:
 881              	.LBI952:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB954:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE954:
 887              	.LBE955:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB956:
 892              	.LBB957:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE957:
 896              	.LBE956:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 45


  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB959:
 902              	.LBI956:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB958:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE958:
 913              	.LBE959:
 914              	.LBE964:
 915              	.LBE975:
 641:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 641 5 is_stmt 1 view .LVU177
 917              	.LBB976:
 918              	.LBI976:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB977:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB978:
 926              	.LBI978:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB979:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE979:
 932              	.LBE978:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB981:
 942              	.LBB980:
 943              		.loc 21 76 31 view .LVU188
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 46


 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE980:
 946              	.LBE981:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB982:
 953              	.LBB983:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE983:
 959              	.LBE982:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB985:
 965              	.LBI982:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB984:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE984:
 976              	.LBE985:
 977              	.LBE977:
 978              	.LBE976:
 642:Veno-Echo.cpp **** 
 643:Veno-Echo.cpp **** }
 979              		.loc 20 643 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 47


 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 644:Veno-Echo.cpp **** 
 645:Veno-Echo.cpp **** int main(void)
 646:Veno-Echo.cpp **** {
 647:Veno-Echo.cpp ****     // initialize hardware.
 648:Veno-Echo.cpp ****     hw.Configure();
 649:Veno-Echo.cpp ****     hw.Init();
 650:Veno-Echo.cpp ****     
 651:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 652:Veno-Echo.cpp **** 
 653:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 658:Veno-Echo.cpp **** 
 659:Veno-Echo.cpp ****     //Gates
 660:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 662:Veno-Echo.cpp **** 
 663:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 664:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 665:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 666:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 667:Veno-Echo.cpp ****     
 668:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 669:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 48


 673:Veno-Echo.cpp **** 
 674:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 678:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 679:Veno-Echo.cpp **** 
 680:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 684:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 685:Veno-Echo.cpp **** 
 686:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 690:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 691:Veno-Echo.cpp **** 
 692:Veno-Echo.cpp ****     // set params for CrossFade objects
 693:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 694:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 695:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 696:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 697:Veno-Echo.cpp **** 
 698:Veno-Echo.cpp ****     WidthXfade.Init();
 699:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 700:Veno-Echo.cpp **** 
 701:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 702:Veno-Echo.cpp **** 
 703:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 704:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 705:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 706:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 707:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 708:Veno-Echo.cpp **** 
 709:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 710:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 711:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 712:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 713:Veno-Echo.cpp **** 
 714:Veno-Echo.cpp ****     //setup L and R High Pass filters
 715:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 716:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 717:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 718:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 721:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 722:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 723:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 724:Veno-Echo.cpp **** 
 725:Veno-Echo.cpp ****     //post filters
 726:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 727:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 728:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 729:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 49


 730:Veno-Echo.cpp **** 
 731:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 732:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 733:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 734:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****     //setup L and R High Pass filters
 737:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 738:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 739:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 740:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 741:Veno-Echo.cpp **** 
 742:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 743:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 744:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 745:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 746:Veno-Echo.cpp **** 
 747:Veno-Echo.cpp ****     //DcBlock_LFB.Init(hw.AudioSampleRate());
 748:Veno-Echo.cpp ****     //DcBlock_RFB.Init(hw.AudioSampleRate());
 749:Veno-Echo.cpp **** 
 750:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 751:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 752:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 753:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 754:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 755:Veno-Echo.cpp **** 
 756:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f,24);  //max 6 second tap
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp ****     //setup tempo indicators
 759:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 760:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 761:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 762:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 763:Veno-Echo.cpp **** 
 764:Veno-Echo.cpp ****     //load settings from flash
 765:Veno-Echo.cpp **** 
 766:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 767:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 768:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 769:Veno-Echo.cpp **** 
 770:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 771:Veno-Echo.cpp ****     AltControls = SavedSettings;
 772:Veno-Echo.cpp **** 
 773:Veno-Echo.cpp ****     //initialize DAC
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp ****    //ADC
 776:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 777:Veno-Echo.cpp **** 
 778:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 779:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 780:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 781:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 782:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 783:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 784:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 785:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 786:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 50


 787:Veno-Echo.cpp **** 
 788:Veno-Echo.cpp **** 
 789:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 790:Veno-Echo.cpp ****     hw.adc.Start();
 791:Veno-Echo.cpp **** 
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 794:Veno-Echo.cpp ****     // start audio callback
 795:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 796:Veno-Echo.cpp **** 
 797:Veno-Echo.cpp ****     
 798:Veno-Echo.cpp **** 
 799:Veno-Echo.cpp ****      for(;;)
 800:Veno-Echo.cpp ****      {  
 801:Veno-Echo.cpp **** 
 802:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 803:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 804:Veno-Echo.cpp ****        
 805:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 806:Veno-Echo.cpp ****         {
 807:Veno-Echo.cpp ****             save_flag = false;
 808:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 809:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 810:Veno-Echo.cpp ****         }
 811:Veno-Echo.cpp ****         
 812:Veno-Echo.cpp ****         else    //save flag not set
 813:Veno-Echo.cpp ****         {
 814:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 815:Veno-Echo.cpp ****            {
 816:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 817:Veno-Echo.cpp ****                 {
 818:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 819:Veno-Echo.cpp ****                     
 820:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 821:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 822:Veno-Echo.cpp ****                     {
 823:Veno-Echo.cpp ****                     }
 824:Veno-Echo.cpp ****                 }
 825:Veno-Echo.cpp **** 
 826:Veno-Echo.cpp ****                 else{} //still waiting
 827:Veno-Echo.cpp **** 
 828:Veno-Echo.cpp ****            }
 829:Veno-Echo.cpp **** 
 830:Veno-Echo.cpp ****            if(saveState == SAVING)
 831:Veno-Echo.cpp ****            {
 832:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 833:Veno-Echo.cpp ****             {
 834:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 835:Veno-Echo.cpp ****             }
 836:Veno-Echo.cpp ****             else{} //ADCs paused
 837:Veno-Echo.cpp **** 
 838:Veno-Echo.cpp ****            }
 839:Veno-Echo.cpp **** 
 840:Veno-Echo.cpp ****            else //IDLE - do nothing
 841:Veno-Echo.cpp ****            {
 842:Veno-Echo.cpp ****            }
 843:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 51


 844:Veno-Echo.cpp **** 
 845:Veno-Echo.cpp ****      }
 846:Veno-Echo.cpp **** 
 847:Veno-Echo.cpp **** }
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 850:Veno-Echo.cpp **** {
 1022              		.loc 20 850 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 851:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 851 5 view .LVU201
 850:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 850 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 851 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 851 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 852:Veno-Echo.cpp **** }
 1040              		.loc 20 852 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 853:Veno-Echo.cpp **** 
 854:Veno-Echo.cpp **** void Update_DelayTimeL()
 855:Veno-Echo.cpp **** {
 1061              		.loc 20 855 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 856:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 856 5 view .LVU207
 857:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 52


 1066              		.loc 20 857 5 view .LVU208
 858:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 858 5 view .LVU209
 859:Veno-Echo.cpp ****     
 860:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 860 5 view .LVU210
 861:Veno-Echo.cpp **** 
 862:Veno-Echo.cpp ****     //update pot values
 863:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 863 5 view .LVU211
 855:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 855 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 863 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7648     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 864:Veno-Echo.cpp **** 
 865:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 866:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 867:Veno-Echo.cpp ****     static int counterL{};
 868:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 868 26 view .LVU214
 1082 000c 7549     		ldr	r1, .L75+4
 1083              		.loc 20 868 31 view .LVU215
 1084 000e 764B     		ldr	r3, .L75+8
 1085              	.LVL41:
 867:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 867 5 is_stmt 1 view .LVU216
 1087              		.loc 20 868 5 view .LVU217
 1088              		.loc 20 868 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB986:
 869:Veno-Echo.cpp **** 
 870:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 870 9 view .LVU219
 1092 0012 7648     		ldr	r0, .L75+12
 1093              	.LBE986:
 868:Veno-Echo.cpp **** 
 1094              		.loc 20 868 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB1059:
 1097              		.loc 20 870 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE1059:
 868:Veno-Echo.cpp **** 
 1100              		.loc 20 868 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 53


 1106              	.LBB1060:
 1107              	.LBB987:
 871:Veno-Echo.cpp ****     {
 872:Veno-Echo.cpp ****         static float delayTimeL_new{};
 873:Veno-Echo.cpp ****         //udpate pickup
 874:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 874 19 view .LVU223
 1109 002a 714A     		ldr	r2, .L75+16
 1110              	.LBE987:
 1111              	.LBE1060:
 868:Veno-Echo.cpp **** 
 1112              		.loc 20 868 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 870:Veno-Echo.cpp ****     {
 1114              		.loc 20 870 5 is_stmt 1 view .LVU225
 1115              	.LBB1061:
 1116 002e 80BB     		cbnz	r0, .L43
 1117              	.LBB1006:
 872:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 872 9 view .LVU226
 1119              		.loc 20 874 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 875:Veno-Echo.cpp ****         {
 876:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 876 13 view .LVU228
 877:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 877 31 is_stmt 0 view .LVU229
 1125 0036 6F4C     		ldr	r4, .L75+20
 878:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 878 28 view .LVU230
 1127 0038 6F49     		ldr	r1, .L75+24
 876:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 876 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 877:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 877 13 is_stmt 1 view .LVU232
 877:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 877 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 878 13 is_stmt 1 view .LVU234
 1134              		.loc 20 878 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
 879:Veno-Echo.cpp ****         } 
 880:Veno-Echo.cpp ****         else    //not a recent shift change
 881:Veno-Echo.cpp ****         {
 882:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 883:Veno-Echo.cpp ****             {
 884:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 885:Veno-Echo.cpp ****                 {
 886:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 887:Veno-Echo.cpp ****                 }
 888:Veno-Echo.cpp ****             }
 889:Veno-Echo.cpp ****         }
 890:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 54


 891:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 891 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 892:Veno-Echo.cpp **** 
 893:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 893 9 view .LVU237
 894:Veno-Echo.cpp ****         {
 895:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 896:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 897:Veno-Echo.cpp ****         }
 898:Veno-Echo.cpp **** 
 899:Veno-Echo.cpp ****         else
 900:Veno-Echo.cpp ****         {
 901:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 901 13 view .LVU238
 1141              	.LBB988:
 1142              	.LBI988:
 902:Veno-Echo.cpp ****         }
 903:Veno-Echo.cpp **** 
 904:Veno-Echo.cpp ****         if(counterL == 0)
 905:Veno-Echo.cpp ****         {
 906:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 907:Veno-Echo.cpp ****             {
 908:Veno-Echo.cpp ****             };
 909:Veno-Echo.cpp ****         }
 910:Veno-Echo.cpp **** 
 911:Veno-Echo.cpp ****     }   //not shift mode
 912:Veno-Echo.cpp **** 
 913:Veno-Echo.cpp ****     else    //shift mode
 914:Veno-Echo.cpp ****     {
 915:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 916:Veno-Echo.cpp **** 
 917:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 918:Veno-Echo.cpp ****         {
 919:Veno-Echo.cpp ****             lastShift = shift;
 920:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 921:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 922:Veno-Echo.cpp ****         }
 923:Veno-Echo.cpp **** 
 924:Veno-Echo.cpp ****         else    //not a recent shift change
 925:Veno-Echo.cpp ****         {
 926:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 927:Veno-Echo.cpp ****             {
 928:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 929:Veno-Echo.cpp ****                 {
 930:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 931:Veno-Echo.cpp ****                 }
 932:Veno-Echo.cpp ****             }
 933:Veno-Echo.cpp ****         }
 934:Veno-Echo.cpp **** 
 935:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 936:Veno-Echo.cpp ****         {
 937:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 938:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 939:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 940:Veno-Echo.cpp ****             //save setting:
 941:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 55


 942:Veno-Echo.cpp ****             save_flag = true;
 943:Veno-Echo.cpp ****         }
 944:Veno-Echo.cpp ****     }
 945:Veno-Echo.cpp ****     
 946:Veno-Echo.cpp **** }
 947:Veno-Echo.cpp **** 
 948:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 949:Veno-Echo.cpp **** {
 950:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 951:Veno-Echo.cpp **** }
 952:Veno-Echo.cpp **** 
 953:Veno-Echo.cpp **** void Update_DelayTimeR()
 954:Veno-Echo.cpp **** {
 955:Veno-Echo.cpp ****     static bool lastShift{};
 956:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 957:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 958:Veno-Echo.cpp ****     
 959:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 960:Veno-Echo.cpp **** 
 961:Veno-Echo.cpp ****     //update pot values
 962:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 963:Veno-Echo.cpp **** 
 964:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 965:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 966:Veno-Echo.cpp ****     static int counterR{};
 967:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 968:Veno-Echo.cpp **** 
 969:Veno-Echo.cpp ****     if (!shift) //default control
 970:Veno-Echo.cpp ****     {
 971:Veno-Echo.cpp ****         static float delayTimeR_new{};
 972:Veno-Echo.cpp ****         //udpate pickup
 973:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 974:Veno-Echo.cpp ****         {
 975:Veno-Echo.cpp ****             lastShift = shift;
 976:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 977:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 978:Veno-Echo.cpp ****         } 
 979:Veno-Echo.cpp ****         else    //not a default shift change
 980:Veno-Echo.cpp ****         {
 981:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 982:Veno-Echo.cpp ****             {
 983:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 984:Veno-Echo.cpp ****                 {
 985:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 986:Veno-Echo.cpp ****                 }
 987:Veno-Echo.cpp ****             }
 988:Veno-Echo.cpp ****         }
 989:Veno-Echo.cpp **** 
 990:Veno-Echo.cpp ****         float delayTimeR{};
 991:Veno-Echo.cpp **** 
 992:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 993:Veno-Echo.cpp ****         {
 994:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 995:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 996:Veno-Echo.cpp ****         }
 997:Veno-Echo.cpp **** 
 998:Veno-Echo.cpp ****         else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 56


 999:Veno-Echo.cpp ****         {
1000:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
1001:Veno-Echo.cpp ****         }
1002:Veno-Echo.cpp **** 
1003:Veno-Echo.cpp ****         if(counterR == 0)
1004:Veno-Echo.cpp ****         {
1005:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1006:Veno-Echo.cpp ****             {
1007:Veno-Echo.cpp ****             };
1008:Veno-Echo.cpp **** 
1009:Veno-Echo.cpp ****         }
1010:Veno-Echo.cpp ****     }   //not shift mode
1011:Veno-Echo.cpp **** 
1012:Veno-Echo.cpp ****     else    //shift mode
1013:Veno-Echo.cpp ****     {
1014:Veno-Echo.cpp **** 
1015:Veno-Echo.cpp ****         static float tapRatio_new{};
1016:Veno-Echo.cpp **** 
1017:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1018:Veno-Echo.cpp ****         {
1019:Veno-Echo.cpp ****             lastShift = shift;
1020:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1021:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1022:Veno-Echo.cpp ****         }
1023:Veno-Echo.cpp **** 
1024:Veno-Echo.cpp ****         else    //not a recent shift change
1025:Veno-Echo.cpp ****         {
1026:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1027:Veno-Echo.cpp ****             {
1028:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1029:Veno-Echo.cpp ****                 {
1030:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1031:Veno-Echo.cpp ****                 }
1032:Veno-Echo.cpp ****             }
1033:Veno-Echo.cpp ****         }
1034:Veno-Echo.cpp **** 
1035:Veno-Echo.cpp ****         if(tapRatio_pickup)
1036:Veno-Echo.cpp ****         {
1037:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1038:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1039:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1040:Veno-Echo.cpp ****             //save setting:
1041:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1042:Veno-Echo.cpp ****             save_flag = true;
1043:Veno-Echo.cpp ****         }
1044:Veno-Echo.cpp ****     }
1045:Veno-Echo.cpp ****     
1046:Veno-Echo.cpp **** }
1047:Veno-Echo.cpp **** void Update_feedbackL_CV()
1048:Veno-Echo.cpp **** {
1049:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1050:Veno-Echo.cpp **** }
1051:Veno-Echo.cpp **** void Update_feedbackL()
1052:Veno-Echo.cpp **** {
1053:Veno-Echo.cpp ****     static bool lastShift{};
1054:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
1055:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 57


1056:Veno-Echo.cpp **** 
1057:Veno-Echo.cpp ****     static float feedbackL_Last{};
1058:Veno-Echo.cpp **** 
1059:Veno-Echo.cpp ****     //get pot values:
1060:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1061:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1062:Veno-Echo.cpp **** 
1063:Veno-Echo.cpp ****     if (!shift) //default controls
1064:Veno-Echo.cpp ****     {   
1065:Veno-Echo.cpp ****         static float feedbackL_new{};
1066:Veno-Echo.cpp ****         //update pickup
1067:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1068:Veno-Echo.cpp ****         {
1069:Veno-Echo.cpp ****             lastShift = shift;
1070:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1071:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1072:Veno-Echo.cpp ****         } 
1073:Veno-Echo.cpp ****         else    //not a default shift change
1074:Veno-Echo.cpp ****         {
1075:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1076:Veno-Echo.cpp ****             {
1077:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1078:Veno-Echo.cpp ****                 {
1079:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1080:Veno-Echo.cpp ****                 }
1081:Veno-Echo.cpp ****             }
1082:Veno-Echo.cpp ****         }
1083:Veno-Echo.cpp **** 
1084:Veno-Echo.cpp ****         float feedbackL_combo{};
1085:Veno-Echo.cpp **** 
1086:Veno-Echo.cpp ****         if(feedbackL_pickup)
1087:Veno-Echo.cpp ****         {
1088:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1089:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1090:Veno-Echo.cpp ****         }
1091:Veno-Echo.cpp **** 
1092:Veno-Echo.cpp ****         else
1093:Veno-Echo.cpp ****         {
1094:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1095:Veno-Echo.cpp ****         }
1096:Veno-Echo.cpp ****   
1097:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1098:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1099:Veno-Echo.cpp ****     }
1100:Veno-Echo.cpp ****     else    //alternate controls
1101:Veno-Echo.cpp ****     {
1102:Veno-Echo.cpp ****         static float HPCutoff_new{};
1103:Veno-Echo.cpp **** 
1104:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1105:Veno-Echo.cpp ****         {
1106:Veno-Echo.cpp ****             lastShift = shift;
1107:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1108:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1109:Veno-Echo.cpp ****         }
1110:Veno-Echo.cpp **** 
1111:Veno-Echo.cpp ****         else    //not a recent shift change
1112:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 58


1113:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1114:Veno-Echo.cpp ****             {
1115:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1116:Veno-Echo.cpp ****                 {
1117:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1118:Veno-Echo.cpp ****                 }
1119:Veno-Echo.cpp ****             }
1120:Veno-Echo.cpp ****         }
1121:Veno-Echo.cpp **** 
1122:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1123:Veno-Echo.cpp ****         {
1124:Veno-Echo.cpp ****             float HPCutoff{};
1125:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1126:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1127:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1128:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1129:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1130:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1131:Veno-Echo.cpp ****             save_flag = true;
1132:Veno-Echo.cpp ****         }
1133:Veno-Echo.cpp ****     }
1134:Veno-Echo.cpp **** }
1135:Veno-Echo.cpp **** 
1136:Veno-Echo.cpp **** void Update_feedbackR_CV()
1137:Veno-Echo.cpp **** {
1138:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1139:Veno-Echo.cpp **** }
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp **** void Update_feedbackR()
1142:Veno-Echo.cpp **** {
1143:Veno-Echo.cpp ****     static bool lastShift{};
1144:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1145:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1146:Veno-Echo.cpp **** 
1147:Veno-Echo.cpp ****     static float feedbackR_Last{};
1148:Veno-Echo.cpp **** 
1149:Veno-Echo.cpp ****     //get pot values:
1150:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1151:Veno-Echo.cpp **** 
1152:Veno-Echo.cpp ****     if (!shift) //default controls
1153:Veno-Echo.cpp ****     {   
1154:Veno-Echo.cpp ****         static float feedbackR_new{};
1155:Veno-Echo.cpp ****         //update pickup
1156:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1157:Veno-Echo.cpp ****         {
1158:Veno-Echo.cpp ****             lastShift = shift;
1159:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1160:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1161:Veno-Echo.cpp ****         } 
1162:Veno-Echo.cpp ****         else    //not a recent shift change
1163:Veno-Echo.cpp ****         {
1164:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1165:Veno-Echo.cpp ****             {
1166:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1167:Veno-Echo.cpp ****                 {
1168:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1169:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 59


1170:Veno-Echo.cpp ****             }
1171:Veno-Echo.cpp ****         }
1172:Veno-Echo.cpp **** 
1173:Veno-Echo.cpp ****         float feedbackR_combo{};
1174:Veno-Echo.cpp ****         
1175:Veno-Echo.cpp ****         if(feedbackR_pickup)
1176:Veno-Echo.cpp ****         {
1177:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1178:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1179:Veno-Echo.cpp ****         }
1180:Veno-Echo.cpp **** 
1181:Veno-Echo.cpp ****         else
1182:Veno-Echo.cpp ****         {
1183:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1184:Veno-Echo.cpp ****         }
1185:Veno-Echo.cpp **** 
1186:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1187:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1188:Veno-Echo.cpp ****     }
1189:Veno-Echo.cpp ****     else    //alternate controls
1190:Veno-Echo.cpp ****     {
1191:Veno-Echo.cpp **** 
1192:Veno-Echo.cpp ****         static float LPCutoff_new{};
1193:Veno-Echo.cpp **** 
1194:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1195:Veno-Echo.cpp ****         {
1196:Veno-Echo.cpp ****             lastShift = shift;
1197:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1198:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1199:Veno-Echo.cpp ****         }
1200:Veno-Echo.cpp **** 
1201:Veno-Echo.cpp ****         else    //not a recent shift change
1202:Veno-Echo.cpp ****         {
1203:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1204:Veno-Echo.cpp ****             {
1205:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1206:Veno-Echo.cpp ****                 {
1207:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1208:Veno-Echo.cpp ****                 }
1209:Veno-Echo.cpp ****             }
1210:Veno-Echo.cpp ****         }
1211:Veno-Echo.cpp **** 
1212:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1213:Veno-Echo.cpp ****         {
1214:Veno-Echo.cpp ****             float LPCutoff{};
1215:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1216:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1217:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1218:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1219:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1220:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1221:Veno-Echo.cpp ****             save_flag = true;
1222:Veno-Echo.cpp ****         }
1223:Veno-Echo.cpp ****     }
1224:Veno-Echo.cpp **** }
1225:Veno-Echo.cpp **** 
1226:Veno-Echo.cpp **** void Update_drywet_CV()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 60


1227:Veno-Echo.cpp **** {
1228:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1229:Veno-Echo.cpp **** }
1230:Veno-Echo.cpp **** 
1231:Veno-Echo.cpp **** void Update_drywet()
1232:Veno-Echo.cpp **** {
1233:Veno-Echo.cpp ****     static bool lastShift{};
1234:Veno-Echo.cpp ****     static bool drywet_pickup{};
1235:Veno-Echo.cpp ****     static bool Res_pickup{};
1236:Veno-Echo.cpp **** 
1237:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1238:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1239:Veno-Echo.cpp **** 
1240:Veno-Echo.cpp ****     //get pot values:
1241:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1242:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1243:Veno-Echo.cpp **** 
1244:Veno-Echo.cpp ****     if (!shift) //default controls
1245:Veno-Echo.cpp ****     {   
1246:Veno-Echo.cpp **** 
1247:Veno-Echo.cpp ****         static float drywet_new{};
1248:Veno-Echo.cpp **** 
1249:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1250:Veno-Echo.cpp ****         {
1251:Veno-Echo.cpp ****             lastShift = shift;
1252:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1253:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1254:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1255:Veno-Echo.cpp ****         } 
1256:Veno-Echo.cpp ****         
1257:Veno-Echo.cpp ****         else    //not a recent shift change
1258:Veno-Echo.cpp ****         {
1259:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1260:Veno-Echo.cpp ****             {
1261:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1262:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1263:Veno-Echo.cpp ****                 {
1264:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1265:Veno-Echo.cpp ****                 }
1266:Veno-Echo.cpp ****             }
1267:Veno-Echo.cpp **** 
1268:Veno-Echo.cpp ****         }
1269:Veno-Echo.cpp ****         
1270:Veno-Echo.cpp ****         float drywetcombo{};
1271:Veno-Echo.cpp **** 
1272:Veno-Echo.cpp ****         if (drywet_pickup)
1273:Veno-Echo.cpp ****         {
1274:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1275:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1276:Veno-Echo.cpp ****         }
1277:Veno-Echo.cpp **** 
1278:Veno-Echo.cpp ****         else
1279:Veno-Echo.cpp ****         {
1280:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1281:Veno-Echo.cpp ****         }
1282:Veno-Echo.cpp **** 
1283:Veno-Echo.cpp ****         float drywetTarget{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 61


1284:Veno-Echo.cpp **** 
1285:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1286:Veno-Echo.cpp ****         {
1287:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1288:Veno-Echo.cpp ****         }
1289:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1290:Veno-Echo.cpp ****         {
1291:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1292:Veno-Echo.cpp ****         }
1293:Veno-Echo.cpp ****         else
1294:Veno-Echo.cpp ****         {
1295:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1296:Veno-Echo.cpp ****         }
1297:Veno-Echo.cpp **** 
1298:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1299:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1300:Veno-Echo.cpp ****     }
1301:Veno-Echo.cpp ****     else    //alternate controls
1302:Veno-Echo.cpp ****     {
1303:Veno-Echo.cpp ****         static float Res_new{};
1304:Veno-Echo.cpp **** 
1305:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1306:Veno-Echo.cpp ****         {
1307:Veno-Echo.cpp ****             lastShift = shift;
1308:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1309:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1310:Veno-Echo.cpp ****         }
1311:Veno-Echo.cpp **** 
1312:Veno-Echo.cpp ****         else    //not a recent shift change
1313:Veno-Echo.cpp ****         {
1314:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1315:Veno-Echo.cpp ****             {
1316:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1317:Veno-Echo.cpp ****                 {
1318:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1319:Veno-Echo.cpp ****                 }
1320:Veno-Echo.cpp ****             }
1321:Veno-Echo.cpp ****         }
1322:Veno-Echo.cpp **** 
1323:Veno-Echo.cpp ****         if(Res_pickup)
1324:Veno-Echo.cpp ****         {
1325:Veno-Echo.cpp ****             float Res{};
1326:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1327:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1328:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1329:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1330:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1331:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1332:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1333:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1334:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1335:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1336:Veno-Echo.cpp ****             save_flag = true;
1337:Veno-Echo.cpp ****         }
1338:Veno-Echo.cpp ****     }
1339:Veno-Echo.cpp **** }
1340:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 62


1341:Veno-Echo.cpp **** void Update_width_CV()
1342:Veno-Echo.cpp **** {
1343:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1344:Veno-Echo.cpp **** }
1345:Veno-Echo.cpp **** 
1346:Veno-Echo.cpp **** void Update_width()
1347:Veno-Echo.cpp **** {
1348:Veno-Echo.cpp ****     static bool lastShift{};
1349:Veno-Echo.cpp ****     static bool width_pickup{};
1350:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1351:Veno-Echo.cpp **** 
1352:Veno-Echo.cpp ****     static float width_Last{};
1353:Veno-Echo.cpp **** 
1354:Veno-Echo.cpp ****     //get pot values:
1355:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1356:Veno-Echo.cpp **** 
1357:Veno-Echo.cpp ****     if (!shift) //default controls
1358:Veno-Echo.cpp ****     {   
1359:Veno-Echo.cpp ****         static float width_new{};
1360:Veno-Echo.cpp ****         //update pickup
1361:Veno-Echo.cpp ****         if (shift != lastShift)
1362:Veno-Echo.cpp ****         {
1363:Veno-Echo.cpp ****             lastShift = shift;
1364:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1365:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1366:Veno-Echo.cpp ****         }
1367:Veno-Echo.cpp **** 
1368:Veno-Echo.cpp ****         else
1369:Veno-Echo.cpp ****         {
1370:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1371:Veno-Echo.cpp ****             {
1372:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1373:Veno-Echo.cpp ****                 {
1374:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1375:Veno-Echo.cpp ****                 }
1376:Veno-Echo.cpp ****             }
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****         }
1379:Veno-Echo.cpp **** 
1380:Veno-Echo.cpp ****         float widthTarget{};
1381:Veno-Echo.cpp **** 
1382:Veno-Echo.cpp ****         if(width_pickup)
1383:Veno-Echo.cpp ****         {
1384:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1385:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1386:Veno-Echo.cpp ****         }
1387:Veno-Echo.cpp **** 
1388:Veno-Echo.cpp ****         else
1389:Veno-Echo.cpp ****         {        
1390:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1391:Veno-Echo.cpp ****         }
1392:Veno-Echo.cpp ****             
1393:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1394:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1395:Veno-Echo.cpp ****     }
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****     else    //alternate controls
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 63


1398:Veno-Echo.cpp ****     {
1399:Veno-Echo.cpp ****         static float ModDepth_new{};
1400:Veno-Echo.cpp **** 
1401:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1402:Veno-Echo.cpp ****         {
1403:Veno-Echo.cpp ****             lastShift = shift;
1404:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1405:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1406:Veno-Echo.cpp ****         }
1407:Veno-Echo.cpp **** 
1408:Veno-Echo.cpp ****         else    //not a recent shift change
1409:Veno-Echo.cpp ****         {
1410:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1411:Veno-Echo.cpp ****             {
1412:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1413:Veno-Echo.cpp ****                 {
1414:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1415:Veno-Echo.cpp ****                 }
1416:Veno-Echo.cpp ****             }
1417:Veno-Echo.cpp ****         }
1418:Veno-Echo.cpp **** 
1419:Veno-Echo.cpp ****         if(ModDepth_pickup)
1420:Veno-Echo.cpp ****         {
1421:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1422:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1423:Veno-Echo.cpp ****             save_flag = true;
1424:Veno-Echo.cpp ****         }
1425:Veno-Echo.cpp ****     }
1426:Veno-Echo.cpp **** }
1427:Veno-Echo.cpp **** 
1428:Veno-Echo.cpp **** void Update_crossfeedback()
1429:Veno-Echo.cpp **** {
1430:Veno-Echo.cpp ****     static bool lastShift{};
1431:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1432:Veno-Echo.cpp ****     static bool modRate_pickup{};
1433:Veno-Echo.cpp **** 
1434:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1435:Veno-Echo.cpp **** 
1436:Veno-Echo.cpp ****     //get pot values:
1437:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1438:Veno-Echo.cpp **** 
1439:Veno-Echo.cpp ****     if (!shift) //default controls
1440:Veno-Echo.cpp ****     {   
1441:Veno-Echo.cpp ****         static float crossfeedback_new{};
1442:Veno-Echo.cpp ****         //update pickup
1443:Veno-Echo.cpp ****         if (shift != lastShift)
1444:Veno-Echo.cpp ****         {
1445:Veno-Echo.cpp ****             lastShift = shift;
1446:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1447:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1448:Veno-Echo.cpp ****         }
1449:Veno-Echo.cpp **** 
1450:Veno-Echo.cpp ****         else
1451:Veno-Echo.cpp ****         {
1452:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1453:Veno-Echo.cpp ****             {
1454:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 64


1455:Veno-Echo.cpp ****                 {
1456:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1457:Veno-Echo.cpp ****                 }
1458:Veno-Echo.cpp ****             }
1459:Veno-Echo.cpp ****         }
1460:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1461:Veno-Echo.cpp **** 
1462:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1463:Veno-Echo.cpp ****         {
1464:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1465:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1466:Veno-Echo.cpp ****         }
1467:Veno-Echo.cpp **** 
1468:Veno-Echo.cpp ****         else
1469:Veno-Echo.cpp ****         {
1470:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1471:Veno-Echo.cpp ****         }
1472:Veno-Echo.cpp **** 
1473:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1474:Veno-Echo.cpp ****     }
1475:Veno-Echo.cpp ****     else    //alternate controls
1476:Veno-Echo.cpp ****     {
1477:Veno-Echo.cpp ****         static float modRate_new{};
1478:Veno-Echo.cpp **** 
1479:Veno-Echo.cpp ****         if (shift != lastShift)
1480:Veno-Echo.cpp ****         {
1481:Veno-Echo.cpp ****             lastShift = shift;
1482:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1483:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1484:Veno-Echo.cpp ****         }
1485:Veno-Echo.cpp **** 
1486:Veno-Echo.cpp ****         else
1487:Veno-Echo.cpp ****         {
1488:Veno-Echo.cpp ****             if(!modRate_pickup)
1489:Veno-Echo.cpp ****             {
1490:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1491:Veno-Echo.cpp ****                 {
1492:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1493:Veno-Echo.cpp ****                 }
1494:Veno-Echo.cpp ****             }
1495:Veno-Echo.cpp ****         }
1496:Veno-Echo.cpp **** 
1497:Veno-Echo.cpp ****         if(modRate_pickup)
1498:Veno-Echo.cpp ****         {
1499:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1500:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1501:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1502:Veno-Echo.cpp ****             save_flag = true;
1503:Veno-Echo.cpp ****         }
1504:Veno-Echo.cpp ****     }
1505:Veno-Echo.cpp **** }
1506:Veno-Echo.cpp **** 
1507:Veno-Echo.cpp **** void Update_filterXfade()
1508:Veno-Echo.cpp **** {
1509:Veno-Echo.cpp ****     static bool lastShift{};
1510:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1511:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 65


1512:Veno-Echo.cpp **** 
1513:Veno-Echo.cpp ****     static float filterXfade_last{};
1514:Veno-Echo.cpp **** 
1515:Veno-Echo.cpp ****     //get pot values:
1516:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1517:Veno-Echo.cpp **** 
1518:Veno-Echo.cpp ****     if (!shift) //default controls
1519:Veno-Echo.cpp ****     {   
1520:Veno-Echo.cpp ****         static float filterXfade_new{};
1521:Veno-Echo.cpp ****         //update pickup
1522:Veno-Echo.cpp ****         if (shift != lastShift)
1523:Veno-Echo.cpp ****         {
1524:Veno-Echo.cpp ****             lastShift = shift;
1525:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1526:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1527:Veno-Echo.cpp ****         }
1528:Veno-Echo.cpp **** 
1529:Veno-Echo.cpp ****         else
1530:Veno-Echo.cpp ****         {
1531:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1532:Veno-Echo.cpp ****             {
1533:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1534:Veno-Echo.cpp ****                 {
1535:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1536:Veno-Echo.cpp ****                 }
1537:Veno-Echo.cpp ****             }
1538:Veno-Echo.cpp ****         }
1539:Veno-Echo.cpp **** 
1540:Veno-Echo.cpp ****         float filterXfadeTarget{};
1541:Veno-Echo.cpp **** 
1542:Veno-Echo.cpp ****         if(filterXfade_pickup)
1543:Veno-Echo.cpp ****         {
1544:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1545:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1546:Veno-Echo.cpp ****         }
1547:Veno-Echo.cpp **** 
1548:Veno-Echo.cpp ****         else
1549:Veno-Echo.cpp ****         {
1550:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1551:Veno-Echo.cpp ****         }
1552:Veno-Echo.cpp **** 
1553:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1554:Veno-Echo.cpp ****     }
1555:Veno-Echo.cpp ****     else    //alternate controls
1556:Veno-Echo.cpp ****     {
1557:Veno-Echo.cpp **** 
1558:Veno-Echo.cpp ****         static float PostFilters_new{};
1559:Veno-Echo.cpp **** 
1560:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1561:Veno-Echo.cpp ****         {
1562:Veno-Echo.cpp ****             lastShift = shift;
1563:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1564:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1565:Veno-Echo.cpp ****         }
1566:Veno-Echo.cpp **** 
1567:Veno-Echo.cpp ****         else    //not a recent shift change
1568:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 66


1569:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1570:Veno-Echo.cpp ****             {
1571:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1572:Veno-Echo.cpp ****                 {
1573:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1574:Veno-Echo.cpp ****                 }
1575:Veno-Echo.cpp ****             }
1576:Veno-Echo.cpp ****         }
1577:Veno-Echo.cpp ****         
1578:Veno-Echo.cpp ****         if(PostFilters_pickup)
1579:Veno-Echo.cpp ****         {
1580:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1581:Veno-Echo.cpp ****             {
1582:Veno-Echo.cpp ****                 PostFilters = false;
1583:Veno-Echo.cpp ****             }
1584:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1585:Veno-Echo.cpp ****             {
1586:Veno-Echo.cpp ****                 PostFilters = true;
1587:Veno-Echo.cpp ****             }
1588:Veno-Echo.cpp ****             else
1589:Veno-Echo.cpp ****             {
1590:Veno-Echo.cpp ****               //do nothing
1591:Veno-Echo.cpp ****             }
1592:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1593:Veno-Echo.cpp ****             save_flag = true;
1594:Veno-Echo.cpp ****         }  
1595:Veno-Echo.cpp ****     }
1596:Veno-Echo.cpp **** }
1597:Veno-Echo.cpp **** 
1598:Veno-Echo.cpp **** void GetModCV()
1599:Veno-Echo.cpp **** {
1600:Veno-Echo.cpp ****     //get modulation CV input
1601:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1602:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1603:Veno-Echo.cpp **** }
1604:Veno-Echo.cpp **** 
1605:Veno-Echo.cpp **** void Update_Mod()
1606:Veno-Echo.cpp **** {    
1607:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1608:Veno-Echo.cpp ****     static float modulation_CV{};
1609:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1610:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1611:Veno-Echo.cpp ****     //calculate InternalMod
1612:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1613:Veno-Echo.cpp ****     //apply modulation to delay lines
1614:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1615:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1616:Veno-Echo.cpp **** }
1617:Veno-Echo.cpp **** 
1618:Veno-Echo.cpp **** void UpdateClock()
1619:Veno-Echo.cpp **** {
1620:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
1621:Veno-Echo.cpp **** 
1622:Veno-Echo.cpp ****     ClockCounter += 1; //increment by one
1623:Veno-Echo.cpp ****     //if clock in pulse received
1624:Veno-Echo.cpp ****     if (ClockIn.Trig())     
1625:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 67


1626:Veno-Echo.cpp ****         
1627:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1628:Veno-Echo.cpp ****             if(BaseTempo.clock(ClockCounter)) //if valid tap resistered
1629:Veno-Echo.cpp ****             {
1630:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1631:Veno-Echo.cpp ****                 AltControls.tempo = BaseTempo.getTempo();
1632:Veno-Echo.cpp ****                 save_flag = true;
1633:Veno-Echo.cpp ****             }
1634:Veno-Echo.cpp ****             ClockCounter = 0; //reset counter
1635:Veno-Echo.cpp **** 
1636:Veno-Echo.cpp ****     } 
1637:Veno-Echo.cpp **** }
1638:Veno-Echo.cpp **** 
1639:Veno-Echo.cpp **** void Update_Buttons()
1640:Veno-Echo.cpp **** {  
1641:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1642:Veno-Echo.cpp ****     static uint32_t resetTime{};
1643:Veno-Echo.cpp ****     static int buttonstate{};
1644:Veno-Echo.cpp **** 
1645:Veno-Echo.cpp ****     Rev_L_sw.update();
1646:Veno-Echo.cpp ****     Rev_R_sw.update();
1647:Veno-Echo.cpp ****     LPF_sw.update();
1648:Veno-Echo.cpp ****     HPF_sw.update();
1649:Veno-Echo.cpp ****     Tap_Button.update();
1650:Veno-Echo.cpp **** 
1651:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1652:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1653:Veno-Echo.cpp ****     //TapButton.Debounce();
1654:Veno-Echo.cpp ****     Sync.Debounce();
1655:Veno-Echo.cpp ****     //ClockIn.Debounce();
1656:Veno-Echo.cpp ****     //gate inputs
1657:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1658:Veno-Echo.cpp ****     {
1659:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1660:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1661:Veno-Echo.cpp ****         {
1662:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1663:Veno-Echo.cpp ****         }
1664:Veno-Echo.cpp ****         else
1665:Veno-Echo.cpp ****         {
1666:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1667:Veno-Echo.cpp ****         }
1668:Veno-Echo.cpp ****         save_flag = true;
1669:Veno-Echo.cpp ****     }
1670:Veno-Echo.cpp **** 
1671:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1672:Veno-Echo.cpp ****     {
1673:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1674:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1675:Veno-Echo.cpp ****         {
1676:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1677:Veno-Echo.cpp ****         }
1678:Veno-Echo.cpp ****         else
1679:Veno-Echo.cpp ****         {
1680:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1681:Veno-Echo.cpp ****         }
1682:Veno-Echo.cpp ****         save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 68


1683:Veno-Echo.cpp ****     }
1684:Veno-Echo.cpp **** 
1685:Veno-Echo.cpp ****     //buttons
1686:Veno-Echo.cpp **** 
1687:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1688:Veno-Echo.cpp ****     {
1689:Veno-Echo.cpp ****         buttonstate += 1;
1690:Veno-Echo.cpp ****         if (buttonstate == 3)
1691:Veno-Echo.cpp ****         {
1692:Veno-Echo.cpp ****             resetTime = System::GetNow();
1693:Veno-Echo.cpp ****         }
1694:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1695:Veno-Echo.cpp ****         {
1696:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1697:Veno-Echo.cpp ****         }
1698:Veno-Echo.cpp ****         else
1699:Veno-Echo.cpp ****         {
1700:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1701:Veno-Echo.cpp ****         }
1702:Veno-Echo.cpp ****         save_flag = true;
1703:Veno-Echo.cpp ****     }
1704:Veno-Echo.cpp **** 
1705:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1706:Veno-Echo.cpp ****     {
1707:Veno-Echo.cpp ****         buttonstate -= 1;
1708:Veno-Echo.cpp ****     }
1709:Veno-Echo.cpp **** 
1710:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1711:Veno-Echo.cpp ****     {
1712:Veno-Echo.cpp ****         buttonstate += 1;
1713:Veno-Echo.cpp ****         if (buttonstate == 3)
1714:Veno-Echo.cpp ****         {
1715:Veno-Echo.cpp ****             resetTime = System::GetNow();
1716:Veno-Echo.cpp ****         }
1717:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1718:Veno-Echo.cpp ****         {
1719:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1720:Veno-Echo.cpp ****         }
1721:Veno-Echo.cpp ****         else
1722:Veno-Echo.cpp ****         {
1723:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1724:Veno-Echo.cpp ****         }
1725:Veno-Echo.cpp ****         save_flag = true;
1726:Veno-Echo.cpp ****     }
1727:Veno-Echo.cpp **** 
1728:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1729:Veno-Echo.cpp ****     {
1730:Veno-Echo.cpp ****         buttonstate -= 1;
1731:Veno-Echo.cpp ****     }
1732:Veno-Echo.cpp **** 
1733:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1734:Veno-Echo.cpp ****     {
1735:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1736:Veno-Echo.cpp ****         {
1737:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1738:Veno-Echo.cpp ****             AltControls.tempo = BaseTempo.getTempo();
1739:Veno-Echo.cpp ****             save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 69


1740:Veno-Echo.cpp ****         }
1741:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1742:Veno-Echo.cpp ****         
1743:Veno-Echo.cpp **** 
1744:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1745:Veno-Echo.cpp ****         buttonstate += 1;
1746:Veno-Echo.cpp ****         
1747:Veno-Echo.cpp ****         if (buttonstate == 3)
1748:Veno-Echo.cpp ****         {
1749:Veno-Echo.cpp ****             resetTime = System::GetNow();
1750:Veno-Echo.cpp ****         }
1751:Veno-Echo.cpp **** 
1752:Veno-Echo.cpp ****     }
1753:Veno-Echo.cpp **** 
1754:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1755:Veno-Echo.cpp ****     {
1756:Veno-Echo.cpp ****         shift = false;
1757:Veno-Echo.cpp ****         buttonstate -= 1;
1758:Veno-Echo.cpp ****         mute = false;
1759:Veno-Echo.cpp ****     }
1760:Veno-Echo.cpp **** 
1761:Veno-Echo.cpp ****     if (Tap_Button.getState())
1762:Veno-Echo.cpp ****     {
1763:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1764:Veno-Echo.cpp ****         {
1765:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1766:Veno-Echo.cpp ****         } 
1767:Veno-Echo.cpp ****     }
1768:Veno-Echo.cpp **** 
1769:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1770:Veno-Echo.cpp ****     {
1771:Veno-Echo.cpp **** 
1772:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1773:Veno-Echo.cpp ****             {
1774:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1775:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1776:Veno-Echo.cpp ****                 ResetAllLEDs();
1777:Veno-Echo.cpp ****                 //don't let reset or shift update
1778:Veno-Echo.cpp ****                 shift = false;
1779:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1780:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1781:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1782:Veno-Echo.cpp ****                 save_flag = true;
1783:Veno-Echo.cpp ****             }
1784:Veno-Echo.cpp ****     } 
1785:Veno-Echo.cpp **** 
1786:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1787:Veno-Echo.cpp **** }
1788:Veno-Echo.cpp **** 
1789:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1790:Veno-Echo.cpp **** {
1791:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
1792:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
1793:Veno-Echo.cpp **** }
1794:Veno-Echo.cpp **** 
1795:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1796:Veno-Echo.cpp **** {    
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 70


1797:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1798:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1799:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
1800:Veno-Echo.cpp ****     //DELAYR_DEBUG = delayR.GetDelayTime();
1801:Veno-Echo.cpp ****     //CLOCK_DEBUG = BaseTempo.getDelayLength();
1802:Veno-Echo.cpp **** }
1803:Veno-Echo.cpp **** 
1804:Veno-Echo.cpp **** void Update_BaseTempoLED()
1805:Veno-Echo.cpp **** {
1806:Veno-Echo.cpp ****     tempoLED_BASE.update();
1807:Veno-Echo.cpp **** 
1808:Veno-Echo.cpp ****     static int phaseCounter{};
1809:Veno-Echo.cpp **** 
1810:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1811:Veno-Echo.cpp ****     {
1812:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1813:Veno-Echo.cpp ****     }
1814:Veno-Echo.cpp **** 
1815:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
1817:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1818:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1819:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1820:Veno-Echo.cpp **** }
1821:Veno-Echo.cpp **** 
1822:Veno-Echo.cpp **** 
1823:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1824:Veno-Echo.cpp **** {
1825:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1826:Veno-Echo.cpp ****     {
1827:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1828:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1829:Veno-Echo.cpp ****     }
1830:Veno-Echo.cpp ****     else
1831:Veno-Echo.cpp ****     {
1832:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1833:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1834:Veno-Echo.cpp ****     }
1835:Veno-Echo.cpp **** 
1836:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1837:Veno-Echo.cpp ****     {
1838:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1839:Veno-Echo.cpp ****     }
1840:Veno-Echo.cpp ****     else
1841:Veno-Echo.cpp ****     {
1842:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1843:Veno-Echo.cpp ****     }
1844:Veno-Echo.cpp **** 
1845:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1846:Veno-Echo.cpp ****     {
1847:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1848:Veno-Echo.cpp ****     }
1849:Veno-Echo.cpp ****     else
1850:Veno-Echo.cpp ****     {
1851:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1852:Veno-Echo.cpp ****     }
1853:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 71


1854:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1855:Veno-Echo.cpp ****     {
1856:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1857:Veno-Echo.cpp ****     }
1858:Veno-Echo.cpp ****     else
1859:Veno-Echo.cpp ****     {
1860:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1861:Veno-Echo.cpp ****     }
1862:Veno-Echo.cpp **** 
1863:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1864:Veno-Echo.cpp ****     {
1865:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1866:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1867:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1868:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1869:Veno-Echo.cpp ****     }
1870:Veno-Echo.cpp ****     else
1871:Veno-Echo.cpp ****     {
1872:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1873:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1874:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1875:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1876:Veno-Echo.cpp ****     }
1877:Veno-Echo.cpp ****     
1878:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1879:Veno-Echo.cpp ****     {
1880:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1881:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1882:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1883:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1884:Veno-Echo.cpp ****     }
1885:Veno-Echo.cpp ****     else
1886:Veno-Echo.cpp ****     {
1887:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1888:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1889:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1890:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1891:Veno-Echo.cpp **** 
1892:Veno-Echo.cpp ****     }
1893:Veno-Echo.cpp **** 
1894:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1895:Veno-Echo.cpp ****     {
1896:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1897:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1898:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1899:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1900:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1901:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1902:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1903:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1904:Veno-Echo.cpp ****     }
1905:Veno-Echo.cpp **** 
1906:Veno-Echo.cpp ****     else
1907:Veno-Echo.cpp ****     {
1908:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1909:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1910:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 72


1911:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1912:Veno-Echo.cpp ****     }
1913:Veno-Echo.cpp **** 
1914:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1915:Veno-Echo.cpp ****     {
1916:Veno-Echo.cpp ****         PostFilters = false;
1917:Veno-Echo.cpp ****     }
1918:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1919:Veno-Echo.cpp ****     {
1920:Veno-Echo.cpp ****         PostFilters = true;
1921:Veno-Echo.cpp ****     }
1922:Veno-Echo.cpp ****     else
1923:Veno-Echo.cpp ****     {
1924:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1925:Veno-Echo.cpp ****     }
1926:Veno-Echo.cpp **** 
1927:Veno-Echo.cpp ****     //if between min and max tap length
1928:Veno-Echo.cpp ****     if( (setting.tempo >= static_cast<float> (minTempo)) 
1929:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
1930:Veno-Echo.cpp ****     {
1931:Veno-Echo.cpp ****         BaseTempo.setTempo(setting.tempo);
1932:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1933:Veno-Echo.cpp ****     }
1934:Veno-Echo.cpp **** 
1935:Veno-Echo.cpp ****     else
1936:Veno-Echo.cpp ****     {
1937:Veno-Echo.cpp ****         BaseTempo.setTempo(defaultAltControls.tempo);
1938:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1939:Veno-Echo.cpp ****     }
1940:Veno-Echo.cpp **** 
1941:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1942:Veno-Echo.cpp ****     {
1943:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1944:Veno-Echo.cpp ****     }
1945:Veno-Echo.cpp ****     else    //default OFF
1946:Veno-Echo.cpp ****     {
1947:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1948:Veno-Echo.cpp ****     }
1949:Veno-Echo.cpp **** 
1950:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1951:Veno-Echo.cpp ****     {
1952:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1953:Veno-Echo.cpp ****     }
1954:Veno-Echo.cpp ****     else    //default OFF
1955:Veno-Echo.cpp ****     {
1956:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1957:Veno-Echo.cpp ****     }
1958:Veno-Echo.cpp **** 
1959:Veno-Echo.cpp **** }
1960:Veno-Echo.cpp **** 
1961:Veno-Echo.cpp **** void TurnOnAllLEDs()
1962:Veno-Echo.cpp **** {
1963:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1964:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1965:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1966:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1967:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 73


1968:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1969:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1970:Veno-Echo.cpp **** }
1971:Veno-Echo.cpp **** 
1972:Veno-Echo.cpp **** void ResetAllLEDs()
1973:Veno-Echo.cpp **** {
1974:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1975:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1976:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1977:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1978:Veno-Echo.cpp ****     {
1979:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1980:Veno-Echo.cpp ****     }
1981:Veno-Echo.cpp ****     else
1982:Veno-Echo.cpp ****     {
1983:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1984:Veno-Echo.cpp ****     }
1985:Veno-Echo.cpp **** 
1986:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1987:Veno-Echo.cpp ****     {
1988:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1989:Veno-Echo.cpp ****     }
1990:Veno-Echo.cpp ****     else
1991:Veno-Echo.cpp ****     {
1992:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1993:Veno-Echo.cpp ****     }
1994:Veno-Echo.cpp ****     
1995:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1996:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1997:Veno-Echo.cpp **** }
1998:Veno-Echo.cpp **** 
1999:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2000:Veno-Echo.cpp **** {
2001:Veno-Echo.cpp ****     float returnval{};
2002:Veno-Echo.cpp ****     if (input > limit)
2003:Veno-Echo.cpp ****         returnval = limit;
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2006:Veno-Echo.cpp ****     else
2007:Veno-Echo.cpp ****         returnval = input;
2008:Veno-Echo.cpp **** 
2009:Veno-Echo.cpp ****     return returnval;   
2010:Veno-Echo.cpp **** }
2011:Veno-Echo.cpp **** 
2012:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 2012 7 view .LVU239
 1144              	.LBB989:
2013:Veno-Echo.cpp **** {
2014:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 2014 5 view .LVU240
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 2015 5 view .LVU241
 1147              	.LBE989:
 1148              	.LBE988:
 901:Veno-Echo.cpp ****         }
 1149              		.loc 20 901 36 is_stmt 0 view .LVU242
 1150 0042 6E49     		ldr	r1, .L75+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 74


 1151              	.LBB993:
 1152              	.LBB990:
 1153              		.loc 20 2015 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 2015 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE990:
 1158              	.LBE993:
 901:Veno-Echo.cpp ****         }
 1159              		.loc 20 901 36 view .LVU245
 1160 004c 6C4A     		ldr	r2, .L75+32
 1161              	.LBB994:
 1162              	.LBB991:
 1163              		.loc 20 2015 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
 1165              		.loc 20 2015 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 2015 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 2015 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 2015 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
2016:Veno-Echo.cpp **** 
2017:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 2017 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1B180 		bmi	.L73
2018:Veno-Echo.cpp ****     {
2019:Veno-Echo.cpp ****         output = 0.0f;
2020:Veno-Echo.cpp ****     }
2021:Veno-Echo.cpp **** 
2022:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 2022 5 view .LVU252
2023:Veno-Echo.cpp ****     {
2024:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 2024 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
 1186              		.loc 20 2024 16 view .LVU254
 1187              	.LBE991:
 1188              	.LBE994:
 904:Veno-Echo.cpp ****         {
 1189              		.loc 20 904 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 906:Veno-Echo.cpp ****             {
 1191              		.loc 20 906 13 view .LVU256
 906:Veno-Echo.cpp ****             {
 1192              		.loc 20 906 35 is_stmt 0 view .LVU257
 1193 0080 604B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 75


 1195              	.LVL45:
 906:Veno-Echo.cpp ****             {
 1196              		.loc 20 906 35 view .LVU258
 1197 0086 6048     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE1006:
 1200              	.LBE1061:
 946:Veno-Echo.cpp **** 
 1201              		.loc 20 946 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB1062:
 1208              	.LBB1007:
 906:Veno-Echo.cpp ****             {
 1209              		.loc 20 906 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 906:Veno-Echo.cpp ****             {
 1214              		.loc 20 906 35 view .LVU261
 1215              	.LBE1007:
 1216              	.LBB1008:
 915:Veno-Echo.cpp **** 
 1217              		.loc 20 915 9 is_stmt 1 view .LVU262
 917:Veno-Echo.cpp ****         {
 1218              		.loc 20 917 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 919:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 919 13 view .LVU264
 919:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 919 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 920:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 920 34 view .LVU266
 1226 009a 5C48     		ldr	r0, .L75+44
 921:Veno-Echo.cpp ****         }
 1227              		.loc 20 921 31 view .LVU267
 1228 009c 5C49     		ldr	r1, .L75+48
 919:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 919 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 920:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 920 13 is_stmt 1 view .LVU269
 920:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 920 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 921:Veno-Echo.cpp ****         }
 1234              		.loc 20 921 13 is_stmt 1 view .LVU271
 921:Veno-Echo.cpp ****         }
 1235              		.loc 20 921 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 76


 1237              	.L42:
 921:Veno-Echo.cpp ****         }
 1238              		.loc 20 921 31 view .LVU273
 1239              	.LBE1008:
 1240              	.LBE1062:
 946:Veno-Echo.cpp **** 
 1241              		.loc 20 946 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB1063:
 1245              	.LBB1056:
 882:Veno-Echo.cpp ****             {
 1246              		.loc 20 882 13 is_stmt 1 view .LVU275
 882:Veno-Echo.cpp ****             {
 1247              		.loc 20 882 16 is_stmt 0 view .LVU276
 1248 00a8 524A     		ldr	r2, .L75+20
 882:Veno-Echo.cpp ****             {
 1249              		.loc 20 882 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 884:Veno-Echo.cpp ****                 {
 1252              		.loc 20 884 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB995:
 1255              	.LBI995:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB996:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE996:
 1261              	.LBE995:
 884:Veno-Echo.cpp ****                 {
 1262              		.loc 20 884 23 view .LVU282
 1263 00ae 5249     		ldr	r1, .L75+24
 884:Veno-Echo.cpp ****                 {
 1264              		.loc 20 884 17 view .LVU283
 1265 00b0 9FED587A 		vldr.32	s14, .L75+52
 884:Veno-Echo.cpp ****                 {
 1266              		.loc 20 884 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB998:
 1270              	.LBB997:
 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE997:
 1274              	.LBE998:
 884:Veno-Echo.cpp ****                 {
 1275              		.loc 20 884 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 886:Veno-Echo.cpp ****                 }
 1279              		.loc 20 886 21 is_stmt 1 view .LVU287
 886:Veno-Echo.cpp ****                 }
 1280              		.loc 20 886 39 is_stmt 0 view .LVU288
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 77


 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 891:Veno-Echo.cpp **** 
 1284              		.loc 20 891 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 893:Veno-Echo.cpp ****         {
 1286              		.loc 20 893 9 view .LVU290
 895:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 895 13 view .LVU291
 1288              	.LBB999:
 1289              	.LBI999:
2012:Veno-Echo.cpp **** {
 1290              		.loc 20 2012 7 view .LVU292
 1291              	.LBB1000:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 2014 5 view .LVU293
2015:Veno-Echo.cpp **** 
 1293              		.loc 20 2015 5 view .LVU294
 1294              	.LBE1000:
 1295              	.LBE999:
 895:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 895 36 is_stmt 0 view .LVU295
 1297 00ce 4B4A     		ldr	r2, .L75+28
 1298              	.LBB1003:
 1299              	.LBB1001:
2015:Veno-Echo.cpp **** 
 1300              		.loc 20 2015 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2015:Veno-Echo.cpp **** 
 1302              		.loc 20 2015 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2015:Veno-Echo.cpp **** 
 1304              		.loc 20 2015 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
2015:Veno-Echo.cpp **** 
 1306              		.loc 20 2015 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2015:Veno-Echo.cpp **** 
 1308              		.loc 20 2015 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
2015:Veno-Echo.cpp **** 
 1310              		.loc 20 2015 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
2015:Veno-Echo.cpp **** 
 1312              		.loc 20 2015 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2017:Veno-Echo.cpp ****     {
 1315              		.loc 20 2017 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2015:Veno-Echo.cpp **** 
 1317              		.loc 20 2015 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
2017:Veno-Echo.cpp ****     {
 1320              		.loc 20 2017 5 is_stmt 1 view .LVU305
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 78


 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 6DD4     		bmi	.L74
2022:Veno-Echo.cpp ****     {
 1323              		.loc 20 2022 5 view .LVU306
 1324              		.loc 20 2024 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
2025:Veno-Echo.cpp ****     }
2026:Veno-Echo.cpp **** 
2027:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 2027 5 is_stmt 1 view .LVU308
 1331              		.loc 20 2027 5 is_stmt 0 view .LVU309
 1332              	.LBE1001:
 1333              	.LBE1003:
 896:Veno-Echo.cpp ****         }
 1334              		.loc 20 896 13 is_stmt 1 view .LVU310
 896:Veno-Echo.cpp ****         }
 1335              		.loc 20 896 29 is_stmt 0 view .LVU311
 1336 010a 3D4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 896:Veno-Echo.cpp ****         }
 1341              		.loc 20 896 29 view .LVU312
 1342              	.LBE1056:
 1343              	.LBB1057:
 926:Veno-Echo.cpp ****             {
 1344              		.loc 20 926 13 is_stmt 1 view .LVU313
 926:Veno-Echo.cpp ****             {
 1345              		.loc 20 926 16 is_stmt 0 view .LVU314
 1346 0112 3E4B     		ldr	r3, .L75+44
 926:Veno-Echo.cpp ****             {
 1347              		.loc 20 926 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 928:Veno-Echo.cpp ****                 {
 1350              		.loc 20 928 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB1009:
 1353              	.LBI1009:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB1010:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE1010:
 1359              	.LBE1009:
 928:Veno-Echo.cpp ****                 {
 1360              		.loc 20 928 23 view .LVU320
 1361 0118 3D4A     		ldr	r2, .L75+48
 928:Veno-Echo.cpp ****                 {
 1362              		.loc 20 928 17 view .LVU321
 1363 011a 9FED3E7A 		vldr.32	s14, .L75+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 79


 928:Veno-Echo.cpp ****                 {
 1364              		.loc 20 928 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB1012:
 1368              	.LBB1011:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE1011:
 1372              	.LBE1012:
 928:Veno-Echo.cpp ****                 {
 1373              		.loc 20 928 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
 930:Veno-Echo.cpp ****                 }
 1377              		.loc 20 930 21 is_stmt 1 view .LVU325
 930:Veno-Echo.cpp ****                 }
 1378              		.loc 20 930 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 935:Veno-Echo.cpp ****         {
 1382              		.loc 20 935 9 is_stmt 1 view .LVU327
 1383              	.LBB1013:
 937:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1384              		.loc 20 937 13 view .LVU328
 937:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 937 38 is_stmt 0 view .LVU329
 1386 0138 0120     		movs	r0, #1
 1387 013a 9FED371A 		vldr.32	s2, .L75+56
 1388 013e DFED370A 		vldr.32	s1, .L75+60
 1389 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1390              	.LVL53:
 1391              	.LBB1014:
 1392              	.LBB1015:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1393              		.loc 20 70 28 view .LVU330
 1394 0146 364B     		ldr	r3, .L75+64
 1395              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1396              		.loc 20 70 28 view .LVU331
 1397              	.LBE1015:
 1398              	.LBE1014:
 938:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1399              		.loc 20 938 13 is_stmt 1 view .LVU332
 1400              	.LBB1029:
 1401              	.LBI1014:
  68:Veno-Echo.cpp ****     {
 1402              		.loc 20 68 10 view .LVU333
 1403              	.LBB1027:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1404              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 is_stmt 0 view .LVU335
 1406 0148 DFED326A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 80


 1407              		.loc 20 70 28 view .LVU336
 1408 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1409              	.LVL55:
 1410              	.LBB1016:
 1411              	.LBI1016:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1412              		.loc 21 75 3 is_stmt 1 view .LVU337
 1413              	.LBB1017:
 1414              		.loc 21 76 5 view .LVU338
 1415              		.loc 21 76 5 is_stmt 0 view .LVU339
 1416              	.LBE1017:
 1417              	.LBE1016:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 20 70 15 view .LVU340
 1419 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1420              		.loc 20 70 53 view .LVU341
 1421 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1422              	.LBB1019:
 1423              	.LBB1018:
 1424              		.loc 21 76 31 view .LVU342
 1425 0158 B0EEC77A 		vabs.f32	s14, s14
 1426              	.LBE1018:
 1427              	.LBE1019:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1428              		.loc 20 70 9 view .LVU343
 1429 015c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1431 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1432              		.loc 20 74 29 view .LVU344
 1433 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1434              	.LBB1020:
 1435              	.LBB1021:
 1436              		.loc 19 72 9 view .LVU345
 1437 016a 2E4C     		ldr	r4, .L75+68
 1438              	.LBE1021:
 1439              	.LBE1020:
 1440              	.LBE1027:
 1441              	.LBE1029:
 938:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1442              		.loc 20 938 37 view .LVU346
 1443 016c 1968     		ldr	r1, [r3]
 1444              	.LBB1030:
 1445              	.LBB1028:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1446              		.loc 20 73 13 is_stmt 1 view .LVU347
 1447              	.LBB1024:
 1448              	.LBB1022:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1449              		.loc 19 71 9 is_stmt 0 view .LVU348
 1450 016e 0020     		movs	r0, #0
 1451              	.LBE1022:
 1452              	.LBE1024:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1453              		.loc 20 73 27 view .LVU349
 1454 0170 83ED010A 		vstr.32	s0, [r3, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 81


  74:Veno-Echo.cpp ****             //del -> Reset();
 1455              		.loc 20 74 13 is_stmt 1 view .LVU350
 1456              	.LVL56:
 1457              	.LBB1025:
 1458              	.LBI1020:
  69:delayline_reverse.h ****     {
 1459              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 is_stmt 0 view .LVU352
 1461              	.LBE1025:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1462              		.loc 20 74 29 view .LVU353
 1463 0174 17EE902A 		vmov	r2, s15	@ int
 1464              	.LBB1026:
 1465              	.LBB1023:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1466              		.loc 19 71 9 view .LVU354
 1467 0178 0860     		str	r0, [r1]	@ float
 1468              		.loc 19 72 9 view .LVU355
 1469 017a A242     		cmp	r2, r4
 1470 017c 28BF     		it	cs
 1471 017e 2246     		movcs	r2, r4
 1472 0180 0A61     		str	r2, [r1, #16]
 1473              	.LVL57:
 1474              	.L62:
 1475              		.loc 19 72 9 view .LVU356
 1476              	.LBE1023:
 1477              	.LBE1026:
 1478              	.LBE1028:
 1479              	.LBE1030:
 939:Veno-Echo.cpp ****             //save setting:
 1480              		.loc 20 939 13 is_stmt 1 view .LVU357
 1481              	.LBB1031:
 1482              	.LBI1031:
  68:Veno-Echo.cpp ****     {
 1483              		.loc 20 68 10 view .LVU358
 1484              	.LBB1032:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1485              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 28 is_stmt 0 view .LVU360
 1487 0182 294B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU361
 1489 0184 DFED236A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1490              		.loc 20 70 28 view .LVU362
 1491 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1492              	.LVL58:
 1493              	.LBB1033:
 1494              	.LBI1033:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1495              		.loc 21 75 3 is_stmt 1 view .LVU363
 1496              	.LBB1034:
 1497              		.loc 21 76 5 view .LVU364
 1498              		.loc 21 76 5 is_stmt 0 view .LVU365
 1499              	.LBE1034:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 82


 1500              	.LBE1033:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1501              		.loc 20 70 15 view .LVU366
 1502 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1503              		.loc 20 70 53 view .LVU367
 1504 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1505              	.LBB1036:
 1506              	.LBB1035:
 1507              		.loc 21 76 31 view .LVU368
 1508 0194 B0EEC77A 		vabs.f32	s14, s14
 1509              	.LBE1035:
 1510              	.LBE1036:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 20 70 9 view .LVU369
 1512 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1513 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1514 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1515              		.loc 20 74 29 view .LVU370
 1516 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1517              	.LBB1037:
 1518              	.LBB1038:
 1519              		.loc 19 72 9 view .LVU371
 1520 01a6 1F4C     		ldr	r4, .L75+68
 1521              	.LBE1038:
 1522              	.LBE1037:
 1523              	.LBE1032:
 1524              	.LBE1031:
 939:Veno-Echo.cpp ****             //save setting:
 1525              		.loc 20 939 37 view .LVU372
 1526 01a8 1968     		ldr	r1, [r3]
 1527              	.LBB1045:
 1528              	.LBB1044:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1529              		.loc 20 73 13 is_stmt 1 view .LVU373
 1530              	.LBB1041:
 1531              	.LBB1039:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1532              		.loc 19 71 9 is_stmt 0 view .LVU374
 1533 01aa 0020     		movs	r0, #0
 1534              	.LBE1039:
 1535              	.LBE1041:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1536              		.loc 20 73 27 view .LVU375
 1537 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1538              		.loc 20 74 13 is_stmt 1 view .LVU376
 1539              	.LVL59:
 1540              	.LBB1042:
 1541              	.LBI1037:
  69:delayline_reverse.h ****     {
 1542              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 is_stmt 0 view .LVU378
 1544              	.LBE1042:
  74:Veno-Echo.cpp ****             //del -> Reset();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 83


 1545              		.loc 20 74 29 view .LVU379
 1546 01b0 17EE902A 		vmov	r2, s15	@ int
 1547              	.LBB1043:
 1548              	.LBB1040:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1549              		.loc 19 71 9 view .LVU380
 1550 01b4 0860     		str	r0, [r1]	@ float
 1551              		.loc 19 72 9 view .LVU381
 1552 01b6 A242     		cmp	r2, r4
 1553 01b8 28BF     		it	cs
 1554 01ba 2246     		movcs	r2, r4
 1555 01bc 0A61     		str	r2, [r1, #16]
 1556              	.LVL60:
 1557              	.L56:
 1558              		.loc 19 72 9 view .LVU382
 1559              	.LBE1040:
 1560              	.LBE1043:
 1561              	.LBE1044:
 1562              	.LBE1045:
 941:Veno-Echo.cpp ****             save_flag = true;
 1563              		.loc 20 941 13 is_stmt 1 view .LVU383
 941:Veno-Echo.cpp ****             save_flag = true;
 1564              		.loc 20 941 35 is_stmt 0 view .LVU384
 1565 01be 1B49     		ldr	r1, .L75+76
 1566              	.LBB1046:
 1567              	.LBB1047:
 1568              	.LBB1048:
 1569              	.LBB1049:
 1570              	.LBB1050:
 1571              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 84


  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 85


  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 86


 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 87


 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 88


 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 89


 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 90


 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1572              		.loc 22 397 18 view .LVU385
 1573 01c0 0122     		movs	r2, #1
 1574 01c2 1B4B     		ldr	r3, .L75+80
 1575              	.LBE1050:
 1576              	.LBE1049:
 1577              	.LBE1048:
 1578              	.LBE1047:
 1579              	.LBE1046:
 941:Veno-Echo.cpp ****             save_flag = true;
 1580              		.loc 20 941 35 view .LVU386
 1581 01c4 81ED000A 		vstr.32	s0, [r1]
 942:Veno-Echo.cpp ****         }
 1582              		.loc 20 942 13 is_stmt 1 view .LVU387
 1583              	.LVL61:
 1584              	.LBB1055:
 1585              	.LBI1046:
 1586              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 91


  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 92


  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1587              		.loc 23 80 5 view .LVU388
 1588              	.LBB1054:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1589              		.loc 23 81 7 view .LVU389
 1590              	.LBB1053:
 1591              	.LBI1048:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1592              		.loc 22 288 7 view .LVU390
 1593              	.LBB1052:
 1594              	.LBI1049:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1595              		.loc 22 390 7 view .LVU391
 1596              	.LBB1051:
 1597              		.loc 22 397 18 is_stmt 0 view .LVU392
 1598 01c8 BFF35B8F 		dmb	ish
 1599 01cc 1A70     		strb	r2, [r3]
 1600 01ce BFF35B8F 		dmb	ish
 1601              	.LVL62:
 1602              		.loc 22 397 18 view .LVU393
 1603              	.LBE1051:
 1604              	.LBE1052:
 1605              	.LBE1053:
 1606              	.LBE1054:
 1607              	.LBE1055:
 1608              	.LBE1013:
 1609              	.LBE1057:
 1610              	.LBE1063:
 946:Veno-Echo.cpp **** 
 1611              		.loc 20 946 1 view .LVU394
 1612 01d2 10BD     		pop	{r4, pc}
 1613              	.LVL63:
 1614              	.L73:
 1615              	.LBB1064:
 1616              	.LBB1058:
 1617              	.LBB1004:
 1618              	.LBB992:
2019:Veno-Echo.cpp ****     }
 1619              		.loc 20 2019 16 view .LVU395
 1620 01d4 DFED177A 		vldr.32	s15, .L75+84
 1621              	.LVL64:
2019:Veno-Echo.cpp ****     }
 1622              		.loc 20 2019 16 view .LVU396
 1623 01d8 51E7     		b	.L50
 1624              	.LVL65:
 1625              	.L74:
2019:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 93


 1626              		.loc 20 2019 16 view .LVU397
 1627              	.LBE992:
 1628              	.LBE1004:
 1629              	.LBB1005:
 1630              	.LBB1002:
 1631 01da DFED167A 		vldr.32	s15, .L75+84
 1632 01de 94E7     		b	.L48
 1633              	.L76:
 1634              		.align	2
 1635              	.L75:
 1636 01e0 18000000 		.word	.LANCHOR4+24
 1637 01e4 00000000 		.word	.LANCHOR6
 1638 01e8 ABAAAA2A 		.word	715827883
 1639 01ec 00000000 		.word	.LANCHOR7
 1640 01f0 00000000 		.word	.LANCHOR8
 1641 01f4 00000000 		.word	.LANCHOR9
 1642 01f8 00000000 		.word	.LANCHOR10
 1643 01fc 00000000 		.word	.LANCHOR5
 1644 0200 00000000 		.word	.LANCHOR11
 1645 0204 00000000 		.word	.LANCHOR12
 1646 0208 00000000 		.word	.LANCHOR0
 1647 020c 00000000 		.word	.LANCHOR13
 1648 0210 00000000 		.word	.LANCHOR14
 1649 0214 0AD7A33B 		.word	1000593162
 1650 0218 0050C346 		.word	1187205120
 1651 021c 00606A48 		.word	1214930944
 1652 0220 00000000 		.word	.LANCHOR2
 1653 0224 BF270900 		.word	599999
 1654 0228 00000000 		.word	.LANCHOR3
 1655 022c 00000000 		.word	.LANCHOR15
 1656 0230 00000000 		.word	.LANCHOR16
 1657 0234 00000000 		.word	0
 1658              	.LBE1002:
 1659              	.LBE1005:
 1660              	.LBE1058:
 1661              	.LBE1064:
 1662              		.cfi_endproc
 1663              	.LFE4313:
 1665              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	_Z20Update_DelayTimeR_CVv
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv5-d16
 1674              	_Z20Update_DelayTimeR_CVv:
 1675              	.LFB4314:
 949:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1676              		.loc 20 949 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 950:Veno-Echo.cpp **** }
 1680              		.loc 20 950 5 view .LVU399
 949:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1681              		.loc 20 949 1 is_stmt 0 view .LVU400
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 94


 1682 0000 08B5     		push	{r3, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 3, -8
 1685              		.cfi_offset 14, -4
 950:Veno-Echo.cpp **** }
 1686              		.loc 20 950 36 view .LVU401
 1687 0002 0121     		movs	r1, #1
 1688 0004 0348     		ldr	r0, .L79
 1689 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1690              	.LVL66:
 950:Veno-Echo.cpp **** }
 1691              		.loc 20 950 19 view .LVU402
 1692 000a 034B     		ldr	r3, .L79+4
 1693 000c 83ED000A 		vstr.32	s0, [r3]
 951:Veno-Echo.cpp **** 
 1694              		.loc 20 951 1 view .LVU403
 1695 0010 08BD     		pop	{r3, pc}
 1696              	.L80:
 1697 0012 00BF     		.align	2
 1698              	.L79:
 1699 0014 18000000 		.word	.LANCHOR4+24
 1700 0018 00000000 		.word	.LANCHOR17
 1701              		.cfi_endproc
 1702              	.LFE4314:
 1704              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	_Z17Update_DelayTimeRv
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	_Z17Update_DelayTimeRv:
 1714              	.LFB4315:
 954:Veno-Echo.cpp ****     static bool lastShift{};
 1715              		.loc 20 954 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 955:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1719              		.loc 20 955 5 view .LVU405
 956:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1720              		.loc 20 956 5 view .LVU406
 957:Veno-Echo.cpp ****     
 1721              		.loc 20 957 5 view .LVU407
 959:Veno-Echo.cpp **** 
 1722              		.loc 20 959 5 view .LVU408
 962:Veno-Echo.cpp **** 
 1723              		.loc 20 962 5 view .LVU409
 954:Veno-Echo.cpp ****     static bool lastShift{};
 1724              		.loc 20 954 1 is_stmt 0 view .LVU410
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 962:Veno-Echo.cpp **** 
 1729              		.loc 20 962 44 view .LVU411
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 95


 1730 0002 0622     		movs	r2, #6
 1731 0004 0721     		movs	r1, #7
 1732 0006 6948     		ldr	r0, .L111
 954:Veno-Echo.cpp ****     static bool lastShift{};
 1733              		.loc 20 954 1 view .LVU412
 1734 0008 2DED028B 		vpush.64	{d8}
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 80, -16
 1737              		.cfi_offset 81, -12
 962:Veno-Echo.cpp **** 
 1738              		.loc 20 962 44 view .LVU413
 1739 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1740              	.LVL67:
 967:Veno-Echo.cpp **** 
 1741              		.loc 20 967 26 view .LVU414
 1742 0010 6749     		ldr	r1, .L111+4
 967:Veno-Echo.cpp **** 
 1743              		.loc 20 967 31 view .LVU415
 1744 0012 684B     		ldr	r3, .L111+8
 1745              	.LVL68:
 966:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1746              		.loc 20 966 5 is_stmt 1 view .LVU416
 967:Veno-Echo.cpp **** 
 1747              		.loc 20 967 5 view .LVU417
 967:Veno-Echo.cpp **** 
 1748              		.loc 20 967 26 is_stmt 0 view .LVU418
 1749 0014 0A68     		ldr	r2, [r1]
 1750              	.LBB1065:
 969:Veno-Echo.cpp ****     {
 1751              		.loc 20 969 9 view .LVU419
 1752 0016 6848     		ldr	r0, .L111+12
 1753              	.LBE1065:
 967:Veno-Echo.cpp **** 
 1754              		.loc 20 967 26 view .LVU420
 1755 0018 0132     		adds	r2, r2, #1
 1756              	.LBB1114:
 969:Veno-Echo.cpp ****     {
 1757              		.loc 20 969 5 view .LVU421
 1758 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1759              	.LBE1114:
 967:Veno-Echo.cpp **** 
 1760              		.loc 20 967 31 view .LVU422
 1761 001c 83FB0243 		smull	r4, r3, r3, r2
 1762 0020 D417     		asrs	r4, r2, #31
 1763 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1764 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1765 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1766              	.LBB1115:
 1767              	.LBB1066:
 973:Veno-Echo.cpp ****         {
 1768              		.loc 20 973 19 view .LVU423
 1769 002e 634A     		ldr	r2, .L111+16
 1770              	.LBE1066:
 1771              	.LBE1115:
 967:Veno-Echo.cpp **** 
 1772              		.loc 20 967 14 view .LVU424
 1773 0030 0B60     		str	r3, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 96


 969:Veno-Echo.cpp ****     {
 1774              		.loc 20 969 5 is_stmt 1 view .LVU425
 1775              	.LBB1116:
 1776 0032 90BB     		cbnz	r0, .L82
 1777              	.LBB1085:
 971:Veno-Echo.cpp ****         //udpate pickup
 1778              		.loc 20 971 9 view .LVU426
 973:Veno-Echo.cpp ****         {
 1779              		.loc 20 973 9 view .LVU427
 1780 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1781 0036 0029     		cmp	r1, #0
 1782 0038 3CD0     		beq	.L83
 975:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1783              		.loc 20 975 13 view .LVU428
 976:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1784              		.loc 20 976 31 is_stmt 0 view .LVU429
 1785 003a 614C     		ldr	r4, .L111+20
 977:Veno-Echo.cpp ****         } 
 1786              		.loc 20 977 28 view .LVU430
 1787 003c 6149     		ldr	r1, .L111+24
 975:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1788              		.loc 20 975 23 view .LVU431
 1789 003e 1070     		strb	r0, [r2]
 976:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 976 13 is_stmt 1 view .LVU432
 976:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1791              		.loc 20 976 31 is_stmt 0 view .LVU433
 1792 0040 2070     		strb	r0, [r4]
 977:Veno-Echo.cpp ****         } 
 1793              		.loc 20 977 13 is_stmt 1 view .LVU434
 977:Veno-Echo.cpp ****         } 
 1794              		.loc 20 977 28 is_stmt 0 view .LVU435
 1795 0042 81ED000A 		vstr.32	s0, [r1]
 1796              	.L84:
 990:Veno-Echo.cpp **** 
 1797              		.loc 20 990 9 is_stmt 1 view .LVU436
 1798              	.LVL69:
 992:Veno-Echo.cpp ****         {
 1799              		.loc 20 992 9 view .LVU437
1000:Veno-Echo.cpp ****         }
 1800              		.loc 20 1000 13 view .LVU438
 1801              	.LBB1067:
 1802              	.LBI1067:
2012:Veno-Echo.cpp **** {
 1803              		.loc 20 2012 7 view .LVU439
 1804              	.LBB1068:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1805              		.loc 20 2014 5 view .LVU440
2015:Veno-Echo.cpp **** 
 1806              		.loc 20 2015 5 view .LVU441
 1807              	.LBE1068:
 1808              	.LBE1067:
1000:Veno-Echo.cpp ****         }
 1809              		.loc 20 1000 36 is_stmt 0 view .LVU442
 1810 0046 6049     		ldr	r1, .L111+28
 1811              	.LBB1072:
 1812              	.LBB1069:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 97


2015:Veno-Echo.cpp **** 
 1813              		.loc 20 2015 39 view .LVU443
 1814 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2015:Veno-Echo.cpp **** 
 1815              		.loc 20 2015 49 view .LVU444
 1816 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1817              	.LBE1069:
 1818              	.LBE1072:
1000:Veno-Echo.cpp ****         }
 1819              		.loc 20 1000 36 view .LVU445
 1820 0050 5E4A     		ldr	r2, .L111+32
 1821              	.LBB1073:
 1822              	.LBB1070:
2015:Veno-Echo.cpp **** 
 1823              		.loc 20 2015 39 view .LVU446
 1824 0052 91ED007A 		vldr.32	s14, [r1]
2015:Veno-Echo.cpp **** 
 1825              		.loc 20 2015 12 view .LVU447
 1826 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1827 005a D2ED007A 		vldr.32	s15, [r2]
2015:Veno-Echo.cpp **** 
 1828              		.loc 20 2015 39 view .LVU448
 1829 005e 36EEC77A 		vsub.f32	s14, s13, s14
2015:Veno-Echo.cpp **** 
 1830              		.loc 20 2015 49 view .LVU449
 1831 0062 37EE657A 		vsub.f32	s14, s14, s11
2015:Veno-Echo.cpp **** 
 1832              		.loc 20 2015 12 view .LVU450
 1833 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1834              	.LVL70:
2017:Veno-Echo.cpp ****     {
 1835              		.loc 20 2017 5 is_stmt 1 view .LVU451
 1836 006a F5EEC07A 		vcmpe.f32	s15, #0
 1837 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1838 0072 00F18C80 		bmi	.L109
2022:Veno-Echo.cpp ****     {
 1839              		.loc 20 2022 5 view .LVU452
2024:Veno-Echo.cpp ****     }
 1840              		.loc 20 2024 16 is_stmt 0 view .LVU453
 1841 0076 F4EE667A 		vcmp.f32	s15, s13
 1842 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1843 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1844              	.LVL71:
 1845              	.L89:
2024:Veno-Echo.cpp ****     }
 1846              		.loc 20 2024 16 view .LVU454
 1847              	.LBE1070:
 1848              	.LBE1073:
1003:Veno-Echo.cpp ****         {
 1849              		.loc 20 1003 9 is_stmt 1 view .LVU455
 1850 0082 A3B9     		cbnz	r3, .L81
1005:Veno-Echo.cpp ****             {
 1851              		.loc 20 1005 13 view .LVU456
1005:Veno-Echo.cpp ****             {
 1852              		.loc 20 1005 35 is_stmt 0 view .LVU457
 1853 0084 524B     		ldr	r3, .L111+36
 1854 0086 B0EE670A 		vmov.f32	s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 98


 1855              	.LVL72:
1005:Veno-Echo.cpp ****             {
 1856              		.loc 20 1005 35 view .LVU458
 1857 008a 5248     		ldr	r0, .L111+40
 1858 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1859              	.LBE1085:
 1860              	.LBE1116:
1046:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1861              		.loc 20 1046 1 view .LVU459
 1862 008e BDEC028B 		vldm	sp!, {d8}
 1863              		.cfi_remember_state
 1864              		.cfi_restore 80
 1865              		.cfi_restore 81
 1866              		.cfi_def_cfa_offset 8
 1867 0092 BDE81040 		pop	{r4, lr}
 1868              		.cfi_restore 14
 1869              		.cfi_restore 4
 1870              		.cfi_def_cfa_offset 0
 1871              	.LBB1117:
 1872              	.LBB1086:
1005:Veno-Echo.cpp ****             {
 1873              		.loc 20 1005 35 view .LVU460
 1874 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1875              	.LVL73:
 1876              	.L82:
 1877              		.cfi_restore_state
1005:Veno-Echo.cpp ****             {
 1878              		.loc 20 1005 35 view .LVU461
 1879              	.LBE1086:
 1880              	.LBB1087:
1015:Veno-Echo.cpp **** 
 1881              		.loc 20 1015 9 is_stmt 1 view .LVU462
1017:Veno-Echo.cpp ****         {
 1882              		.loc 20 1017 9 view .LVU463
 1883 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1884 009c 002B     		cmp	r3, #0
 1885 009e 3ED1     		bne	.L92
1019:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1886              		.loc 20 1019 13 view .LVU464
1019:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1887              		.loc 20 1019 23 is_stmt 0 view .LVU465
 1888 00a0 0124     		movs	r4, #1
1020:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1889              		.loc 20 1020 29 view .LVU466
 1890 00a2 4D48     		ldr	r0, .L111+44
1021:Veno-Echo.cpp ****         }
 1891              		.loc 20 1021 26 view .LVU467
 1892 00a4 4D49     		ldr	r1, .L111+48
1019:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1893              		.loc 20 1019 23 view .LVU468
 1894 00a6 1470     		strb	r4, [r2]
1020:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1895              		.loc 20 1020 13 is_stmt 1 view .LVU469
1020:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1896              		.loc 20 1020 29 is_stmt 0 view .LVU470
 1897 00a8 0370     		strb	r3, [r0]
1021:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 99


 1898              		.loc 20 1021 13 is_stmt 1 view .LVU471
1021:Veno-Echo.cpp ****         }
 1899              		.loc 20 1021 26 is_stmt 0 view .LVU472
 1900 00aa 81ED000A 		vstr.32	s0, [r1]
 1901              	.L81:
1021:Veno-Echo.cpp ****         }
 1902              		.loc 20 1021 26 view .LVU473
 1903              	.LBE1087:
 1904              	.LBE1117:
1046:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1905              		.loc 20 1046 1 view .LVU474
 1906 00ae BDEC028B 		vldm	sp!, {d8}
 1907              		.cfi_remember_state
 1908              		.cfi_restore 80
 1909              		.cfi_restore 81
 1910              		.cfi_def_cfa_offset 8
 1911 00b2 10BD     		pop	{r4, pc}
 1912              	.L83:
 1913              		.cfi_restore_state
 1914              	.LBB1118:
 1915              	.LBB1110:
 981:Veno-Echo.cpp ****             {
 1916              		.loc 20 981 13 is_stmt 1 view .LVU475
 981:Veno-Echo.cpp ****             {
 1917              		.loc 20 981 16 is_stmt 0 view .LVU476
 1918 00b4 424A     		ldr	r2, .L111+20
 981:Veno-Echo.cpp ****             {
 1919              		.loc 20 981 13 view .LVU477
 1920 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1921 00b8 79B9     		cbnz	r1, .L85
 983:Veno-Echo.cpp ****                 {
 1922              		.loc 20 983 17 is_stmt 1 view .LVU478
 1923              	.LVL74:
 1924              	.LBB1074:
 1925              	.LBI1074:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1926              		.loc 21 75 3 view .LVU479
 1927              	.LBB1075:
 1928              		.loc 21 76 5 view .LVU480
 1929              		.loc 21 76 5 is_stmt 0 view .LVU481
 1930              	.LBE1075:
 1931              	.LBE1074:
 983:Veno-Echo.cpp ****                 {
 1932              		.loc 20 983 23 view .LVU482
 1933 00ba 4249     		ldr	r1, .L111+24
 983:Veno-Echo.cpp ****                 {
 1934              		.loc 20 983 17 view .LVU483
 1935 00bc 9FED487A 		vldr.32	s14, .L111+52
 983:Veno-Echo.cpp ****                 {
 1936              		.loc 20 983 23 view .LVU484
 1937 00c0 D1ED007A 		vldr.32	s15, [r1]
 1938 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1939              	.LBB1077:
 1940              	.LBB1076:
 1941              		.loc 21 76 31 view .LVU485
 1942 00c8 F0EEE77A 		vabs.f32	s15, s15
 1943              	.LBE1076:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 100


 1944              	.LBE1077:
 983:Veno-Echo.cpp ****                 {
 1945              		.loc 20 983 17 view .LVU486
 1946 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1947 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1948 00d4 B7DD     		ble	.L84
 985:Veno-Echo.cpp ****                 }
 1949              		.loc 20 985 21 is_stmt 1 view .LVU487
 985:Veno-Echo.cpp ****                 }
 1950              		.loc 20 985 39 is_stmt 0 view .LVU488
 1951 00d6 0121     		movs	r1, #1
 1952 00d8 1170     		strb	r1, [r2]
 1953              	.L85:
 990:Veno-Echo.cpp **** 
 1954              		.loc 20 990 9 is_stmt 1 view .LVU489
 1955              	.LVL75:
 992:Veno-Echo.cpp ****         {
 1956              		.loc 20 992 9 view .LVU490
 994:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1957              		.loc 20 994 13 view .LVU491
 1958              	.LBB1078:
 1959              	.LBI1078:
2012:Veno-Echo.cpp **** {
 1960              		.loc 20 2012 7 view .LVU492
 1961              	.LBB1079:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 20 2014 5 view .LVU493
2015:Veno-Echo.cpp **** 
 1963              		.loc 20 2015 5 view .LVU494
 1964              	.LBE1079:
 1965              	.LBE1078:
 994:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1966              		.loc 20 994 36 is_stmt 0 view .LVU495
 1967 00da 3B4A     		ldr	r2, .L111+28
 1968              	.LBB1082:
 1969              	.LBB1080:
2015:Veno-Echo.cpp **** 
 1970              		.loc 20 2015 39 view .LVU496
 1971 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2015:Veno-Echo.cpp **** 
 1972              		.loc 20 2015 49 view .LVU497
 1973 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2015:Veno-Echo.cpp **** 
 1974              		.loc 20 2015 39 view .LVU498
 1975 00e4 D2ED007A 		vldr.32	s15, [r2]
2015:Veno-Echo.cpp **** 
 1976              		.loc 20 2015 12 view .LVU499
 1977 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2015:Veno-Echo.cpp **** 
 1978              		.loc 20 2015 39 view .LVU500
 1979 00ec 77EE677A 		vsub.f32	s15, s14, s15
2015:Veno-Echo.cpp **** 
 1980              		.loc 20 2015 49 view .LVU501
 1981 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2015:Veno-Echo.cpp **** 
 1982              		.loc 20 2015 12 view .LVU502
 1983 00f4 B0EE406A 		vmov.f32	s12, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 101


 1984 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2017:Veno-Echo.cpp ****     {
 1985              		.loc 20 2017 5 view .LVU503
 1986 00fc B5EEC06A 		vcmpe.f32	s12, #0
2015:Veno-Echo.cpp **** 
 1987              		.loc 20 2015 12 view .LVU504
 1988 0100 F0EE467A 		vmov.f32	s15, s12
 1989              	.LVL76:
2017:Veno-Echo.cpp ****     {
 1990              		.loc 20 2017 5 is_stmt 1 view .LVU505
 1991 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1992 0108 44D4     		bmi	.L110
2022:Veno-Echo.cpp ****     {
 1993              		.loc 20 2022 5 view .LVU506
2024:Veno-Echo.cpp ****     }
 1994              		.loc 20 2024 16 is_stmt 0 view .LVU507
 1995 010a F4EE477A 		vcmp.f32	s15, s14
 1996 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1997 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1998              	.L87:
 1999              	.LVL77:
 2000              		.loc 20 2027 5 is_stmt 1 view .LVU508
 2001              		.loc 20 2027 5 is_stmt 0 view .LVU509
 2002              	.LBE1080:
 2003              	.LBE1082:
 995:Veno-Echo.cpp ****         }
 2004              		.loc 20 995 13 is_stmt 1 view .LVU510
 995:Veno-Echo.cpp ****         }
 2005              		.loc 20 995 29 is_stmt 0 view .LVU511
 2006 0116 2D4A     		ldr	r2, .L111+32
 2007 0118 82ED000A 		vstr.32	s0, [r2]
 2008 011c B1E7     		b	.L89
 2009              	.LVL78:
 2010              	.L92:
 995:Veno-Echo.cpp ****         }
 2011              		.loc 20 995 29 view .LVU512
 2012              	.LBE1110:
 2013              	.LBB1111:
1026:Veno-Echo.cpp ****             {
 2014              		.loc 20 1026 13 is_stmt 1 view .LVU513
1026:Veno-Echo.cpp ****             {
 2015              		.loc 20 1026 16 is_stmt 0 view .LVU514
 2016 011e 2E4B     		ldr	r3, .L111+44
1026:Veno-Echo.cpp ****             {
 2017              		.loc 20 1026 13 view .LVU515
 2018 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 0122 7AB9     		cbnz	r2, .L93
1028:Veno-Echo.cpp ****                 {
 2020              		.loc 20 1028 17 is_stmt 1 view .LVU516
 2021              	.LVL79:
 2022              	.LBB1088:
 2023              	.LBI1088:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2024              		.loc 21 75 3 view .LVU517
 2025              	.LBB1089:
 2026              		.loc 21 76 5 view .LVU518
 2027              		.loc 21 76 5 is_stmt 0 view .LVU519
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 102


 2028              	.LBE1089:
 2029              	.LBE1088:
1028:Veno-Echo.cpp ****                 {
 2030              		.loc 20 1028 23 view .LVU520
 2031 0124 2D4A     		ldr	r2, .L111+48
1028:Veno-Echo.cpp ****                 {
 2032              		.loc 20 1028 17 view .LVU521
 2033 0126 9FED2E7A 		vldr.32	s14, .L111+52
1028:Veno-Echo.cpp ****                 {
 2034              		.loc 20 1028 23 view .LVU522
 2035 012a D2ED007A 		vldr.32	s15, [r2]
 2036 012e 70EE677A 		vsub.f32	s15, s0, s15
 2037              	.LBB1091:
 2038              	.LBB1090:
 2039              		.loc 21 76 31 view .LVU523
 2040 0132 F0EEE77A 		vabs.f32	s15, s15
 2041              	.LBE1090:
 2042              	.LBE1091:
1028:Veno-Echo.cpp ****                 {
 2043              		.loc 20 1028 17 view .LVU524
 2044 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2045 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2046 013e B6DD     		ble	.L81
1030:Veno-Echo.cpp ****                 }
 2047              		.loc 20 1030 21 is_stmt 1 view .LVU525
1030:Veno-Echo.cpp ****                 }
 2048              		.loc 20 1030 37 is_stmt 0 view .LVU526
 2049 0140 0122     		movs	r2, #1
 2050 0142 1A70     		strb	r2, [r3]
 2051              	.L93:
1035:Veno-Echo.cpp ****         {
 2052              		.loc 20 1035 9 is_stmt 1 view .LVU527
 2053              	.LBB1092:
1037:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2054              		.loc 20 1037 13 view .LVU528
 2055              	.LVL80:
1038:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2056              		.loc 20 1038 13 view .LVU529
1038:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2057              		.loc 20 1038 61 is_stmt 0 view .LVU530
 2058 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2059 0148 0020     		movs	r0, #0
 2060 014a 9FED261A 		vldr.32	s2, .L111+56
 2061 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2062              	.LVL81:
 2063              	.LBB1093:
 2064              	.LBI1093:
 2065              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 103


  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 104


  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 105


 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 106


 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 107


 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 108


 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 109


 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 110


 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 111


 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 112


 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 113


 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 114


 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 115


 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 116


 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 117


 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 118


 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 119


 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 120


 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 121


1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 122


1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 123


1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 124


1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 125


1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 126


1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 127


1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 128


1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 129


1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 130


1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 131


1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 132


1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 133


1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2066              		.loc 24 1756 3 is_stmt 1 view .LVU531
 2067              	.LBB1094:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2068              		.loc 24 1757 5 view .LVU532
 2069              		.loc 24 1757 28 is_stmt 0 view .LVU533
 2070 0152 B8FE400A 		vrinta.f32	s0, s0
 2071              	.LVL82:
 2072              		.loc 24 1757 28 view .LVU534
 2073              	.LBE1094:
 2074              	.LBE1093:
1039:Veno-Echo.cpp ****             //save setting:
 2075              		.loc 20 1039 13 is_stmt 1 view .LVU535
 2076              	.LBB1095:
 2077              	.LBI1095:
2028:Veno-Echo.cpp **** }
2029:Veno-Echo.cpp **** 
2030:Veno-Echo.cpp **** //checks pickup state of primary controls
2031:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2032:Veno-Echo.cpp **** {
2033:Veno-Echo.cpp ****     bool retval{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 134


2034:Veno-Echo.cpp ****     
2035:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2036:Veno-Echo.cpp ****     {
2037:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2038:Veno-Echo.cpp ****         {
2039:Veno-Echo.cpp ****             retval = false;
2040:Veno-Echo.cpp ****         }
2041:Veno-Echo.cpp ****         else
2042:Veno-Echo.cpp ****         {
2043:Veno-Echo.cpp ****             retval = true;
2044:Veno-Echo.cpp ****         }
2045:Veno-Echo.cpp ****     }
2046:Veno-Echo.cpp **** 
2047:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2048:Veno-Echo.cpp ****     {
2049:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2050:Veno-Echo.cpp ****     {
2051:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2052:Veno-Echo.cpp ****         {
2053:Veno-Echo.cpp ****             retval = true;
2054:Veno-Echo.cpp ****         }
2055:Veno-Echo.cpp **** 
2056:Veno-Echo.cpp ****         else
2057:Veno-Echo.cpp ****         {
2058:Veno-Echo.cpp ****             retval = false;
2059:Veno-Echo.cpp ****         }
2060:Veno-Echo.cpp **** 
2061:Veno-Echo.cpp ****     }
2062:Veno-Echo.cpp ****     else    //previous state is picked up
2063:Veno-Echo.cpp ****     {
2064:Veno-Echo.cpp ****         retval = true;  //always return true
2065:Veno-Echo.cpp ****     }
2066:Veno-Echo.cpp **** 
2067:Veno-Echo.cpp ****     }
2068:Veno-Echo.cpp ****     return retval;
2069:Veno-Echo.cpp **** 
2070:Veno-Echo.cpp **** }
2071:Veno-Echo.cpp **** 
2072:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2073:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2074:Veno-Echo.cpp **** {
2075:Veno-Echo.cpp ****     pickupState retval{};
2076:Veno-Echo.cpp **** 
2077:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
2078:Veno-Echo.cpp ****     {
2079:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2080:Veno-Echo.cpp ****         {
2081:Veno-Echo.cpp ****             retval = BELOW;
2082:Veno-Echo.cpp ****         }
2083:Veno-Echo.cpp ****         
2084:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2085:Veno-Echo.cpp ****         {
2086:Veno-Echo.cpp ****             retval = ABOVE;
2087:Veno-Echo.cpp ****         }
2088:Veno-Echo.cpp **** 
2089:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2090:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 135


2091:Veno-Echo.cpp ****             retval = PICKEDUP;
2092:Veno-Echo.cpp ****         }
2093:Veno-Echo.cpp ****     }
2094:Veno-Echo.cpp **** 
2095:Veno-Echo.cpp ****     else    //not a recent shift change
2096:Veno-Echo.cpp ****     {
2097:Veno-Echo.cpp ****         switch(lastState)
2098:Veno-Echo.cpp ****         {
2099:Veno-Echo.cpp ****             case BELOW:
2100:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2101:Veno-Echo.cpp ****                 retval = PICKEDUP;
2102:Veno-Echo.cpp ****             else
2103:Veno-Echo.cpp ****                 retval = lastState;
2104:Veno-Echo.cpp ****             break;
2105:Veno-Echo.cpp **** 
2106:Veno-Echo.cpp ****             case ABOVE:
2107:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2108:Veno-Echo.cpp ****                 retval = PICKEDUP;
2109:Veno-Echo.cpp ****             else
2110:Veno-Echo.cpp ****                 retval = lastState;
2111:Veno-Echo.cpp ****             break;
2112:Veno-Echo.cpp ****             case PICKEDUP:
2113:Veno-Echo.cpp ****                 retval = lastState;
2114:Veno-Echo.cpp ****             break;
2115:Veno-Echo.cpp ****         }
2116:Veno-Echo.cpp ****     }
2117:Veno-Echo.cpp ****     
2118:Veno-Echo.cpp ****     return retval;
2119:Veno-Echo.cpp **** }
2120:Veno-Echo.cpp **** 
2121:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2078              		.loc 20 2121 8 view .LVU536
 2079              	.LBB1096:
2122:Veno-Echo.cpp **** {
2123:Veno-Echo.cpp **** double retVal{};
 2080              		.loc 20 2123 1 view .LVU537
2124:Veno-Echo.cpp ****     switch(ratio)
 2081              		.loc 20 2124 5 view .LVU538
 2082              	.LBE1096:
 2083              	.LBE1095:
1038:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2084              		.loc 20 1038 130 is_stmt 0 view .LVU539
 2085 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2086 015a 17EE903A 		vmov	r3, s15	@ int
 2087 015e 013B     		subs	r3, r3, #1
 2088 0160 DBB2     		uxtb	r3, r3
 2089 0162 022B     		cmp	r3, #2
 2090 0164 19D9     		bls	.L97
 2091 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2092              	.L98:
 2093              	.LVL83:
 2094              	.LBB1098:
 2095              	.LBB1097:
2125:Veno-Echo.cpp ****     {
2126:Veno-Echo.cpp ****         case QUARTER:
2127:Veno-Echo.cpp ****         retVal = 1.0;
2128:Veno-Echo.cpp ****         break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 136


2129:Veno-Echo.cpp **** 
2130:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2131:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2132:Veno-Echo.cpp ****         break;
2133:Veno-Echo.cpp **** 
2134:Veno-Echo.cpp ****         case EIGHT:
2135:Veno-Echo.cpp ****         retVal = 2.0;
2136:Veno-Echo.cpp ****         break;
2137:Veno-Echo.cpp **** 
2138:Veno-Echo.cpp ****         case TWELVE:
2139:Veno-Echo.cpp ****         retVal = 3.0;
2140:Veno-Echo.cpp ****         break;
2141:Veno-Echo.cpp **** 
2142:Veno-Echo.cpp ****         default:
2143:Veno-Echo.cpp ****         retVal = 1.0;
2144:Veno-Echo.cpp ****         break;
2145:Veno-Echo.cpp ****     }
2146:Veno-Echo.cpp **** 
2147:Veno-Echo.cpp **** return retVal;
 2096              		.loc 20 2147 1 is_stmt 1 view .LVU540
 2097              		.loc 20 2147 1 is_stmt 0 view .LVU541
 2098              	.LBE1097:
 2099              	.LBE1098:
1039:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 20 1039 34 view .LVU542
 2101 016a B0EE480A 		vmov.f32	s0, s16
 2102              	.LVL84:
1039:Veno-Echo.cpp ****             //save setting:
 2103              		.loc 20 1039 34 view .LVU543
 2104 016e 1E48     		ldr	r0, .L111+60
 2105 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2106              	.LVL85:
1041:Veno-Echo.cpp ****             save_flag = true;
 2107              		.loc 20 1041 13 is_stmt 1 view .LVU544
1041:Veno-Echo.cpp ****             save_flag = true;
 2108              		.loc 20 1041 13 is_stmt 0 view .LVU545
 2109              	.LBE1092:
 2110              	.LBE1111:
 2111              	.LBE1118:
2123:Veno-Echo.cpp ****     switch(ratio)
 2112              		.loc 20 2123 1 is_stmt 1 view .LVU546
2124:Veno-Echo.cpp ****     {
 2113              		.loc 20 2124 5 view .LVU547
 2114              		.loc 20 2147 1 view .LVU548
 2115              	.LBB1119:
 2116              	.LBB1112:
 2117              	.LBB1109:
1041:Veno-Echo.cpp ****             save_flag = true;
 2118              		.loc 20 1041 34 is_stmt 0 view .LVU549
 2119 0174 1D49     		ldr	r1, .L111+64
 2120              	.LBB1099:
 2121              	.LBB1100:
 2122              	.LBB1101:
 2123              	.LBB1102:
 2124              	.LBB1103:
 2125              		.loc 22 397 18 view .LVU550
 2126 0176 1E4B     		ldr	r3, .L111+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 137


 2127 0178 0122     		movs	r2, #1
 2128              	.LBE1103:
 2129              	.LBE1102:
 2130              	.LBE1101:
 2131              	.LBE1100:
 2132              	.LBE1099:
1041:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 20 1041 34 view .LVU551
 2134 017a 81ED018A 		vstr.32	s16, [r1, #4]
1042:Veno-Echo.cpp ****         }
 2135              		.loc 20 1042 13 is_stmt 1 view .LVU552
 2136              	.LVL86:
 2137              	.LBB1108:
 2138              	.LBI1099:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2139              		.loc 23 80 5 view .LVU553
 2140              	.LBB1107:
 2141              		.loc 23 81 7 view .LVU554
 2142              	.LBB1106:
 2143              	.LBI1101:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2144              		.loc 22 288 7 view .LVU555
 2145              	.LBB1105:
 2146              	.LBI1102:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2147              		.loc 22 390 7 view .LVU556
 2148              	.LBB1104:
 2149              		.loc 22 397 18 is_stmt 0 view .LVU557
 2150 017e BFF35B8F 		dmb	ish
 2151 0182 1A70     		strb	r2, [r3]
 2152 0184 BFF35B8F 		dmb	ish
 2153              	.LVL87:
 2154              		.loc 22 397 18 view .LVU558
 2155              	.LBE1104:
 2156              	.LBE1105:
 2157              	.LBE1106:
 2158              	.LBE1107:
 2159              	.LBE1108:
 2160              	.LBE1109:
 2161              	.LBE1112:
 2162              	.LBE1119:
1046:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2163              		.loc 20 1046 1 view .LVU559
 2164 0188 BDEC028B 		vldm	sp!, {d8}
 2165              		.cfi_remember_state
 2166              		.cfi_restore 80
 2167              		.cfi_restore 81
 2168              		.cfi_def_cfa_offset 8
 2169 018c 10BD     		pop	{r4, pc}
 2170              	.LVL88:
 2171              	.L109:
 2172              		.cfi_restore_state
 2173              	.LBB1120:
 2174              	.LBB1113:
 2175              	.LBB1083:
 2176              	.LBB1071:
2019:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 138


 2177              		.loc 20 2019 16 view .LVU560
 2178 018e DFED157A 		vldr.32	s15, .L111+56
 2179              	.LVL89:
2019:Veno-Echo.cpp ****     }
 2180              		.loc 20 2019 16 view .LVU561
 2181 0192 76E7     		b	.L89
 2182              	.LVL90:
 2183              	.L110:
2019:Veno-Echo.cpp ****     }
 2184              		.loc 20 2019 16 view .LVU562
 2185              	.LBE1071:
 2186              	.LBE1083:
 2187              	.LBB1084:
 2188              	.LBB1081:
 2189 0194 DFED137A 		vldr.32	s15, .L111+56
 2190 0198 BDE7     		b	.L87
 2191              	.LVL91:
 2192              	.L97:
2019:Veno-Echo.cpp ****     }
 2193              		.loc 20 2019 16 view .LVU563
 2194 019a 164A     		ldr	r2, .L111+72
 2195 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2196 01a0 93ED008B 		vldr.64	d8, [r3]
 2197 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2198 01a8 DFE7     		b	.L98
 2199              	.L112:
 2200 01aa 00BF     		.align	2
 2201              	.L111:
 2202 01ac 18000000 		.word	.LANCHOR4+24
 2203 01b0 00000000 		.word	.LANCHOR18
 2204 01b4 ABAAAA2A 		.word	715827883
 2205 01b8 00000000 		.word	.LANCHOR7
 2206 01bc 00000000 		.word	.LANCHOR19
 2207 01c0 00000000 		.word	.LANCHOR20
 2208 01c4 00000000 		.word	.LANCHOR21
 2209 01c8 00000000 		.word	.LANCHOR17
 2210 01cc 00000000 		.word	.LANCHOR22
 2211 01d0 00000000 		.word	.LANCHOR12
 2212 01d4 00000000 		.word	.LANCHOR1
 2213 01d8 00000000 		.word	.LANCHOR23
 2214 01dc 00000000 		.word	.LANCHOR24
 2215 01e0 0AD7A33B 		.word	1000593162
 2216 01e4 00000000 		.word	0
 2217 01e8 00000000 		.word	.LANCHOR26
 2218 01ec 00000000 		.word	.LANCHOR15
 2219 01f0 00000000 		.word	.LANCHOR16
 2220 01f4 00000000 		.word	.LANCHOR25
 2221              	.LBE1081:
 2222              	.LBE1084:
 2223              	.LBE1113:
 2224              	.LBE1120:
 2225              		.cfi_endproc
 2226              	.LFE4315:
 2228              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2229              		.align	1
 2230              		.p2align 2,,3
 2231              		.global	_Z19Update_feedbackL_CVv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 139


 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z19Update_feedbackL_CVv:
 2238              	.LFB4316:
1048:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2239              		.loc 20 1048 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1049:Veno-Echo.cpp **** }
 2243              		.loc 20 1049 5 view .LVU565
1048:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2244              		.loc 20 1048 1 is_stmt 0 view .LVU566
 2245 0000 08B5     		push	{r3, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 3, -8
 2248              		.cfi_offset 14, -4
1049:Veno-Echo.cpp **** }
 2249              		.loc 20 1049 35 view .LVU567
 2250 0002 0221     		movs	r1, #2
 2251 0004 0348     		ldr	r0, .L115
 2252 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2253              	.LVL92:
1049:Veno-Echo.cpp **** }
 2254              		.loc 20 1049 18 view .LVU568
 2255 000a 034B     		ldr	r3, .L115+4
 2256 000c 83ED000A 		vstr.32	s0, [r3]
1050:Veno-Echo.cpp **** void Update_feedbackL()
 2257              		.loc 20 1050 1 view .LVU569
 2258 0010 08BD     		pop	{r3, pc}
 2259              	.L116:
 2260 0012 00BF     		.align	2
 2261              	.L115:
 2262 0014 18000000 		.word	.LANCHOR4+24
 2263 0018 00000000 		.word	.LANCHOR27
 2264              		.cfi_endproc
 2265              	.LFE4316:
 2267              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2268              		.align	1
 2269              		.p2align 2,,3
 2270              		.global	_Z16Update_feedbackLv
 2271              		.syntax unified
 2272              		.thumb
 2273              		.thumb_func
 2274              		.fpu fpv5-d16
 2276              	_Z16Update_feedbackLv:
 2277              	.LFB4317:
1052:Veno-Echo.cpp ****     static bool lastShift{};
 2278              		.loc 20 1052 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
1053:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2282              		.loc 20 1053 5 view .LVU571
1054:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 140


 2283              		.loc 20 1054 5 view .LVU572
1055:Veno-Echo.cpp **** 
 2284              		.loc 20 1055 5 view .LVU573
1057:Veno-Echo.cpp **** 
 2285              		.loc 20 1057 5 view .LVU574
1061:Veno-Echo.cpp **** 
 2286              		.loc 20 1061 5 view .LVU575
1061:Veno-Echo.cpp **** 
 2287              		.loc 20 1061 43 is_stmt 0 view .LVU576
 2288 0000 0122     		movs	r2, #1
 2289 0002 0721     		movs	r1, #7
 2290 0004 6548     		ldr	r0, .L145
1052:Veno-Echo.cpp ****     static bool lastShift{};
 2291              		.loc 20 1052 1 view .LVU577
 2292 0006 10B5     		push	{r4, lr}
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 4, -8
 2295              		.cfi_offset 14, -4
 2296 0008 2DED028B 		vpush.64	{d8}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 80, -16
 2299              		.cfi_offset 81, -12
1061:Veno-Echo.cpp **** 
 2300              		.loc 20 1061 43 view .LVU578
 2301 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2302              	.LVL93:
 2303              	.LBB1121:
1063:Veno-Echo.cpp ****     {   
 2304              		.loc 20 1063 9 view .LVU579
 2305 0010 634B     		ldr	r3, .L145+4
 2306              	.LVL94:
1063:Veno-Echo.cpp ****     {   
 2307              		.loc 20 1063 9 view .LVU580
 2308              	.LBE1121:
1063:Veno-Echo.cpp ****     {   
 2309              		.loc 20 1063 5 is_stmt 1 view .LVU581
 2310              	.LBB1166:
 2311              	.LBB1122:
1067:Veno-Echo.cpp ****         {
 2312              		.loc 20 1067 19 is_stmt 0 view .LVU582
 2313 0012 644A     		ldr	r2, .L145+8
 2314              	.LBE1122:
1063:Veno-Echo.cpp ****     {   
 2315              		.loc 20 1063 5 view .LVU583
 2316 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0016 002B     		cmp	r3, #0
 2318 0018 3DD1     		bne	.L118
 2319              	.LBB1145:
1065:Veno-Echo.cpp ****         //update pickup
 2320              		.loc 20 1065 9 is_stmt 1 view .LVU584
1067:Veno-Echo.cpp ****         {
 2321              		.loc 20 1067 9 view .LVU585
 2322 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 001c 0029     		cmp	r1, #0
 2324 001e 47D0     		beq	.L119
1069:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2325              		.loc 20 1069 13 view .LVU586
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 141


1070:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2326              		.loc 20 1070 30 is_stmt 0 view .LVU587
 2327 0020 6148     		ldr	r0, .L145+12
1071:Veno-Echo.cpp ****         } 
 2328              		.loc 20 1071 27 view .LVU588
 2329 0022 6249     		ldr	r1, .L145+16
1069:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2330              		.loc 20 1069 23 view .LVU589
 2331 0024 1370     		strb	r3, [r2]
1070:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2332              		.loc 20 1070 13 is_stmt 1 view .LVU590
1070:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2333              		.loc 20 1070 30 is_stmt 0 view .LVU591
 2334 0026 0370     		strb	r3, [r0]
1071:Veno-Echo.cpp ****         } 
 2335              		.loc 20 1071 13 is_stmt 1 view .LVU592
1071:Veno-Echo.cpp ****         } 
 2336              		.loc 20 1071 27 is_stmt 0 view .LVU593
 2337 0028 81ED000A 		vstr.32	s0, [r1]
 2338              	.L120:
1084:Veno-Echo.cpp **** 
 2339              		.loc 20 1084 9 is_stmt 1 view .LVU594
 2340              	.LVL95:
1086:Veno-Echo.cpp ****         {
 2341              		.loc 20 1086 9 view .LVU595
1094:Veno-Echo.cpp ****         }
 2342              		.loc 20 1094 13 view .LVU596
 2343              	.LBB1123:
 2344              	.LBI1123:
2012:Veno-Echo.cpp **** {
 2345              		.loc 20 2012 7 view .LVU597
 2346              	.LBB1124:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2347              		.loc 20 2014 5 view .LVU598
2015:Veno-Echo.cpp **** 
 2348              		.loc 20 2015 5 view .LVU599
 2349              	.LBE1124:
 2350              	.LBE1123:
1094:Veno-Echo.cpp ****         }
 2351              		.loc 20 1094 41 is_stmt 0 view .LVU600
 2352 002c 604A     		ldr	r2, .L145+20
 2353              	.LBB1128:
 2354              	.LBB1125:
2015:Veno-Echo.cpp **** 
 2355              		.loc 20 2015 39 view .LVU601
 2356 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2015:Veno-Echo.cpp **** 
 2357              		.loc 20 2015 49 view .LVU602
 2358 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2359              	.LBE1125:
 2360              	.LBE1128:
1094:Veno-Echo.cpp ****         }
 2361              		.loc 20 1094 41 view .LVU603
 2362 0036 5F4B     		ldr	r3, .L145+24
 2363              	.LBB1129:
 2364              	.LBB1126:
2015:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 142


 2365              		.loc 20 2015 39 view .LVU604
 2366 0038 92ED007A 		vldr.32	s14, [r2]
2015:Veno-Echo.cpp **** 
 2367              		.loc 20 2015 12 view .LVU605
 2368 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2369 0040 D3ED007A 		vldr.32	s15, [r3]
2015:Veno-Echo.cpp **** 
 2370              		.loc 20 2015 39 view .LVU606
 2371 0044 36EEC77A 		vsub.f32	s14, s13, s14
2015:Veno-Echo.cpp **** 
 2372              		.loc 20 2015 49 view .LVU607
 2373 0048 37EE657A 		vsub.f32	s14, s14, s11
2015:Veno-Echo.cpp **** 
 2374              		.loc 20 2015 12 view .LVU608
 2375 004c E7EE067A 		vfma.f32	s15, s14, s12
 2376              	.LVL96:
2017:Veno-Echo.cpp ****     {
 2377              		.loc 20 2017 5 is_stmt 1 view .LVU609
 2378 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2379 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2380 0058 00F19A80 		bmi	.L143
2022:Veno-Echo.cpp ****     {
 2381              		.loc 20 2022 5 view .LVU610
2024:Veno-Echo.cpp ****     }
 2382              		.loc 20 2024 16 is_stmt 0 view .LVU611
 2383 005c F4EE667A 		vcmp.f32	s15, s13
 2384 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2385 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2386              	.LVL97:
 2387              	.L125:
2024:Veno-Echo.cpp ****     }
 2388              		.loc 20 2024 16 view .LVU612
 2389              	.LBE1126:
 2390              	.LBE1129:
1097:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2391              		.loc 20 1097 9 is_stmt 1 view .LVU613
1097:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2392              		.loc 20 1097 37 is_stmt 0 view .LVU614
 2393 0068 B0EE670A 		vmov.f32	s0, s15
 2394              	.LVL98:
1097:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2395              		.loc 20 1097 37 view .LVU615
 2396 006c 0020     		movs	r0, #0
 2397 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2398 0072 DFED510A 		vldr.32	s1, .L145+28
 2399 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2400              	.LVL99:
1098:Veno-Echo.cpp ****     }
 2401              		.loc 20 1098 9 is_stmt 1 view .LVU616
 2402              	.LBB1130:
 2403              	.LBI1130:
 2404              		.file 25 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 143


   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 144


  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 145


 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2405              		.loc 25 135 13 view .LVU617
 2406              	.LBB1131:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2407              		.loc 25 137 5 view .LVU618
 2408              		.loc 25 137 9 is_stmt 0 view .LVU619
 2409 007a 504B     		ldr	r3, .L145+32
 2410 007c 9FED507A 		vldr.32	s14, .L145+36
 2411 0080 D3ED007A 		vldr.32	s15, [r3]
 2412              		.loc 25 137 24 view .LVU620
 2413 0084 30EE670A 		vsub.f32	s0, s0, s15
 2414              	.LVL100:
 2415              		.loc 25 137 24 view .LVU621
 2416              	.LBE1131:
 2417              	.LBE1130:
 2418              	.LBE1145:
 2419              	.LBE1166:
1134:Veno-Echo.cpp **** 
 2420              		.loc 20 1134 1 view .LVU622
 2421 0088 BDEC028B 		vldm	sp!, {d8}
 2422              		.cfi_remember_state
 2423              		.cfi_restore 80
 2424              		.cfi_restore 81
 2425              		.cfi_def_cfa_offset 8
 2426              	.LBB1167:
 2427              	.LBB1146:
 2428              	.LBB1133:
 2429              	.LBB1132:
 2430              		.loc 25 137 9 view .LVU623
 2431 008c E0EE077A 		vfma.f32	s15, s0, s14
 2432 0090 C3ED007A 		vstr.32	s15, [r3]
 2433              	.LBE1132:
 2434              	.LBE1133:
 2435              	.LBE1146:
 2436              	.LBE1167:
1134:Veno-Echo.cpp **** 
 2437              		.loc 20 1134 1 view .LVU624
 2438 0094 10BD     		pop	{r4, pc}
 2439              	.LVL101:
 2440              	.L118:
 2441              		.cfi_restore_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 146


 2442              	.LBB1168:
 2443              	.LBB1147:
1102:Veno-Echo.cpp **** 
 2444              		.loc 20 1102 9 is_stmt 1 view .LVU625
1104:Veno-Echo.cpp ****         {
 2445              		.loc 20 1104 9 view .LVU626
 2446 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2447 0098 002B     		cmp	r3, #0
 2448 009a 3ED1     		bne	.L128
1106:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2449              		.loc 20 1106 13 view .LVU627
1106:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2450              		.loc 20 1106 23 is_stmt 0 view .LVU628
 2451 009c 0124     		movs	r4, #1
1107:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2452              		.loc 20 1107 29 view .LVU629
 2453 009e 4948     		ldr	r0, .L145+40
1108:Veno-Echo.cpp ****         }
 2454              		.loc 20 1108 26 view .LVU630
 2455 00a0 4949     		ldr	r1, .L145+44
1106:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2456              		.loc 20 1106 23 view .LVU631
 2457 00a2 1470     		strb	r4, [r2]
1107:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2458              		.loc 20 1107 13 is_stmt 1 view .LVU632
1107:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2459              		.loc 20 1107 29 is_stmt 0 view .LVU633
 2460 00a4 0370     		strb	r3, [r0]
1108:Veno-Echo.cpp ****         }
 2461              		.loc 20 1108 13 is_stmt 1 view .LVU634
1108:Veno-Echo.cpp ****         }
 2462              		.loc 20 1108 26 is_stmt 0 view .LVU635
 2463 00a6 81ED000A 		vstr.32	s0, [r1]
 2464              	.L117:
1108:Veno-Echo.cpp ****         }
 2465              		.loc 20 1108 26 view .LVU636
 2466              	.LBE1147:
 2467              	.LBE1168:
1134:Veno-Echo.cpp **** 
 2468              		.loc 20 1134 1 view .LVU637
 2469 00aa BDEC028B 		vldm	sp!, {d8}
 2470              		.cfi_remember_state
 2471              		.cfi_restore 80
 2472              		.cfi_restore 81
 2473              		.cfi_def_cfa_offset 8
 2474 00ae 10BD     		pop	{r4, pc}
 2475              	.L119:
 2476              		.cfi_restore_state
 2477              	.LBB1169:
 2478              	.LBB1163:
1075:Veno-Echo.cpp ****             {
 2479              		.loc 20 1075 13 is_stmt 1 view .LVU638
1075:Veno-Echo.cpp ****             {
 2480              		.loc 20 1075 16 is_stmt 0 view .LVU639
 2481 00b0 3D4B     		ldr	r3, .L145+12
1075:Veno-Echo.cpp ****             {
 2482              		.loc 20 1075 13 view .LVU640
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 147


 2483 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2484 00b4 7AB9     		cbnz	r2, .L121
1077:Veno-Echo.cpp ****                 {
 2485              		.loc 20 1077 17 is_stmt 1 view .LVU641
 2486              	.LVL102:
 2487              	.LBB1134:
 2488              	.LBI1134:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2489              		.loc 21 75 3 view .LVU642
 2490              	.LBB1135:
 2491              		.loc 21 76 5 view .LVU643
 2492              		.loc 21 76 5 is_stmt 0 view .LVU644
 2493              	.LBE1135:
 2494              	.LBE1134:
1077:Veno-Echo.cpp ****                 {
 2495              		.loc 20 1077 23 view .LVU645
 2496 00b6 3D4A     		ldr	r2, .L145+16
1077:Veno-Echo.cpp ****                 {
 2497              		.loc 20 1077 17 view .LVU646
 2498 00b8 9FED447A 		vldr.32	s14, .L145+48
1077:Veno-Echo.cpp ****                 {
 2499              		.loc 20 1077 23 view .LVU647
 2500 00bc D2ED007A 		vldr.32	s15, [r2]
 2501 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2502              	.LBB1137:
 2503              	.LBB1136:
 2504              		.loc 21 76 31 view .LVU648
 2505 00c4 F0EEE77A 		vabs.f32	s15, s15
 2506              	.LBE1136:
 2507              	.LBE1137:
1077:Veno-Echo.cpp ****                 {
 2508              		.loc 20 1077 17 view .LVU649
 2509 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2510 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2511 00d0 ACDD     		ble	.L120
1079:Veno-Echo.cpp ****                 }
 2512              		.loc 20 1079 21 is_stmt 1 view .LVU650
1079:Veno-Echo.cpp ****                 }
 2513              		.loc 20 1079 38 is_stmt 0 view .LVU651
 2514 00d2 0122     		movs	r2, #1
 2515 00d4 1A70     		strb	r2, [r3]
 2516              	.L121:
1084:Veno-Echo.cpp **** 
 2517              		.loc 20 1084 9 is_stmt 1 view .LVU652
 2518              	.LVL103:
1086:Veno-Echo.cpp ****         {
 2519              		.loc 20 1086 9 view .LVU653
1088:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2520              		.loc 20 1088 13 view .LVU654
 2521              	.LBB1138:
 2522              	.LBI1138:
2012:Veno-Echo.cpp **** {
 2523              		.loc 20 2012 7 view .LVU655
 2524              	.LBB1139:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 20 2014 5 view .LVU656
2015:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 148


 2526              		.loc 20 2015 5 view .LVU657
 2527              	.LBE1139:
 2528              	.LBE1138:
1088:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2529              		.loc 20 1088 41 is_stmt 0 view .LVU658
 2530 00d6 364B     		ldr	r3, .L145+20
 2531              	.LBB1142:
 2532              	.LBB1140:
2015:Veno-Echo.cpp **** 
 2533              		.loc 20 2015 39 view .LVU659
 2534 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2015:Veno-Echo.cpp **** 
 2535              		.loc 20 2015 49 view .LVU660
 2536 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2015:Veno-Echo.cpp **** 
 2537              		.loc 20 2015 39 view .LVU661
 2538 00e0 D3ED007A 		vldr.32	s15, [r3]
2015:Veno-Echo.cpp **** 
 2539              		.loc 20 2015 12 view .LVU662
 2540 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2015:Veno-Echo.cpp **** 
 2541              		.loc 20 2015 39 view .LVU663
 2542 00e8 77EE677A 		vsub.f32	s15, s14, s15
2015:Veno-Echo.cpp **** 
 2543              		.loc 20 2015 49 view .LVU664
 2544 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2015:Veno-Echo.cpp **** 
 2545              		.loc 20 2015 12 view .LVU665
 2546 00f0 B0EE406A 		vmov.f32	s12, s0
 2547 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2017:Veno-Echo.cpp ****     {
 2548              		.loc 20 2017 5 view .LVU666
 2549 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2015:Veno-Echo.cpp **** 
 2550              		.loc 20 2015 12 view .LVU667
 2551 00fc F0EE467A 		vmov.f32	s15, s12
 2552              	.LVL104:
2017:Veno-Echo.cpp ****     {
 2553              		.loc 20 2017 5 is_stmt 1 view .LVU668
 2554 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2555 0104 47D4     		bmi	.L144
2022:Veno-Echo.cpp ****     {
 2556              		.loc 20 2022 5 view .LVU669
2024:Veno-Echo.cpp ****     }
 2557              		.loc 20 2024 16 is_stmt 0 view .LVU670
 2558 0106 F4EE477A 		vcmp.f32	s15, s14
 2559 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2560 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2561              	.L123:
 2562              	.LVL105:
2027:Veno-Echo.cpp **** }
 2563              		.loc 20 2027 5 is_stmt 1 view .LVU671
2027:Veno-Echo.cpp **** }
 2564              		.loc 20 2027 5 is_stmt 0 view .LVU672
 2565              	.LBE1140:
 2566              	.LBE1142:
1089:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 149


 2567              		.loc 20 1089 13 is_stmt 1 view .LVU673
1089:Veno-Echo.cpp ****         }
 2568              		.loc 20 1089 28 is_stmt 0 view .LVU674
 2569 0112 284B     		ldr	r3, .L145+24
 2570 0114 83ED000A 		vstr.32	s0, [r3]
 2571 0118 A6E7     		b	.L125
 2572              	.LVL106:
 2573              	.L128:
1089:Veno-Echo.cpp ****         }
 2574              		.loc 20 1089 28 view .LVU675
 2575              	.LBE1163:
 2576              	.LBB1164:
1113:Veno-Echo.cpp ****             {
 2577              		.loc 20 1113 13 is_stmt 1 view .LVU676
1113:Veno-Echo.cpp ****             {
 2578              		.loc 20 1113 16 is_stmt 0 view .LVU677
 2579 011a 2A4B     		ldr	r3, .L145+40
1113:Veno-Echo.cpp ****             {
 2580              		.loc 20 1113 13 view .LVU678
 2581 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2582 011e 7AB9     		cbnz	r2, .L130
1115:Veno-Echo.cpp ****                 {
 2583              		.loc 20 1115 17 is_stmt 1 view .LVU679
 2584              	.LVL107:
 2585              	.LBB1148:
 2586              	.LBI1148:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2587              		.loc 21 75 3 view .LVU680
 2588              	.LBB1149:
 2589              		.loc 21 76 5 view .LVU681
 2590              		.loc 21 76 5 is_stmt 0 view .LVU682
 2591              	.LBE1149:
 2592              	.LBE1148:
1115:Veno-Echo.cpp ****                 {
 2593              		.loc 20 1115 23 view .LVU683
 2594 0120 294A     		ldr	r2, .L145+44
1115:Veno-Echo.cpp ****                 {
 2595              		.loc 20 1115 17 view .LVU684
 2596 0122 9FED2A7A 		vldr.32	s14, .L145+48
1115:Veno-Echo.cpp ****                 {
 2597              		.loc 20 1115 23 view .LVU685
 2598 0126 D2ED007A 		vldr.32	s15, [r2]
 2599 012a 70EE677A 		vsub.f32	s15, s0, s15
 2600              	.LBB1151:
 2601              	.LBB1150:
 2602              		.loc 21 76 31 view .LVU686
 2603 012e F0EEE77A 		vabs.f32	s15, s15
 2604              	.LBE1150:
 2605              	.LBE1151:
1115:Veno-Echo.cpp ****                 {
 2606              		.loc 20 1115 17 view .LVU687
 2607 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2608 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 013a B6DD     		ble	.L117
1117:Veno-Echo.cpp ****                 }
 2610              		.loc 20 1117 21 is_stmt 1 view .LVU688
1117:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 150


 2611              		.loc 20 1117 37 is_stmt 0 view .LVU689
 2612 013c 0122     		movs	r2, #1
 2613 013e 1A70     		strb	r2, [r3]
 2614              	.L130:
1122:Veno-Echo.cpp ****         {
 2615              		.loc 20 1122 9 is_stmt 1 view .LVU690
 2616              	.LBB1152:
1124:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2617              		.loc 20 1124 13 view .LVU691
 2618              	.LVL108:
1125:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2619              		.loc 20 1125 13 view .LVU692
1125:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2620              		.loc 20 1125 29 is_stmt 0 view .LVU693
 2621 0140 9FED231A 		vldr.32	s2, .L145+52
 2622 0144 0120     		movs	r0, #1
 2623 0146 DFED230A 		vldr.32	s1, .L145+56
 2624 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2625              	.LVL109:
1125:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2626              		.loc 20 1125 29 view .LVU694
 2627 014e B0EE408A 		vmov.f32	s16, s0
 2628              	.LVL110:
1126:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2629              		.loc 20 1126 13 is_stmt 1 view .LVU695
1126:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2630              		.loc 20 1126 26 is_stmt 0 view .LVU696
 2631 0152 2148     		ldr	r0, .L145+60
 2632 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2633              	.LVL111:
1127:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2634              		.loc 20 1127 13 is_stmt 1 view .LVU697
1127:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2635              		.loc 20 1127 26 is_stmt 0 view .LVU698
 2636 0158 2048     		ldr	r0, .L145+64
 2637 015a B0EE480A 		vmov.f32	s0, s16
 2638 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2639              	.LVL112:
1128:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2640              		.loc 20 1128 13 is_stmt 1 view .LVU699
1128:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2641              		.loc 20 1128 31 is_stmt 0 view .LVU700
 2642 0162 B0EE480A 		vmov.f32	s0, s16
 2643 0166 1E48     		ldr	r0, .L145+68
 2644 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2645              	.LVL113:
1129:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2646              		.loc 20 1129 13 is_stmt 1 view .LVU701
1129:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2647              		.loc 20 1129 31 is_stmt 0 view .LVU702
 2648 016c B0EE480A 		vmov.f32	s0, s16
 2649 0170 1C48     		ldr	r0, .L145+72
 2650 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2651              	.LVL114:
1130:Veno-Echo.cpp ****             save_flag = true;
 2652              		.loc 20 1130 13 is_stmt 1 view .LVU703
1130:Veno-Echo.cpp ****             save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 151


 2653              		.loc 20 1130 35 is_stmt 0 view .LVU704
 2654 0176 1C49     		ldr	r1, .L145+76
 2655              	.LBB1153:
 2656              	.LBB1154:
 2657              	.LBB1155:
 2658              	.LBB1156:
 2659              	.LBB1157:
 2660              		.loc 22 397 18 view .LVU705
 2661 0178 1C4B     		ldr	r3, .L145+80
 2662 017a 0122     		movs	r2, #1
 2663              	.LBE1157:
 2664              	.LBE1156:
 2665              	.LBE1155:
 2666              	.LBE1154:
 2667              	.LBE1153:
1130:Veno-Echo.cpp ****             save_flag = true;
 2668              		.loc 20 1130 35 view .LVU706
 2669 017c 81ED048A 		vstr.32	s16, [r1, #16]
1131:Veno-Echo.cpp ****         }
 2670              		.loc 20 1131 13 is_stmt 1 view .LVU707
 2671              	.LVL115:
 2672              	.LBB1162:
 2673              	.LBI1153:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2674              		.loc 23 80 5 view .LVU708
 2675              	.LBB1161:
 2676              		.loc 23 81 7 view .LVU709
 2677              	.LBB1160:
 2678              	.LBI1155:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2679              		.loc 22 288 7 view .LVU710
 2680              	.LBB1159:
 2681              	.LBI1156:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2682              		.loc 22 390 7 view .LVU711
 2683              	.LBB1158:
 2684              		.loc 22 397 18 is_stmt 0 view .LVU712
 2685 0180 BFF35B8F 		dmb	ish
 2686 0184 1A70     		strb	r2, [r3]
 2687 0186 BFF35B8F 		dmb	ish
 2688              	.LVL116:
 2689              		.loc 22 397 18 view .LVU713
 2690              	.LBE1158:
 2691              	.LBE1159:
 2692              	.LBE1160:
 2693              	.LBE1161:
 2694              	.LBE1162:
 2695              	.LBE1152:
 2696              	.LBE1164:
 2697              	.LBE1169:
1134:Veno-Echo.cpp **** 
 2698              		.loc 20 1134 1 view .LVU714
 2699 018a BDEC028B 		vldm	sp!, {d8}
 2700              		.cfi_remember_state
 2701              		.cfi_restore 80
 2702              		.cfi_restore 81
 2703              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 152


 2704              	.LVL117:
1134:Veno-Echo.cpp **** 
 2705              		.loc 20 1134 1 view .LVU715
 2706 018e 10BD     		pop	{r4, pc}
 2707              	.LVL118:
 2708              	.L143:
 2709              		.cfi_restore_state
 2710              	.LBB1170:
 2711              	.LBB1165:
 2712              	.LBB1143:
 2713              	.LBB1127:
2019:Veno-Echo.cpp ****     }
 2714              		.loc 20 2019 16 view .LVU716
 2715 0190 DFED097A 		vldr.32	s15, .L145+28
 2716              	.LVL119:
2019:Veno-Echo.cpp ****     }
 2717              		.loc 20 2019 16 view .LVU717
 2718 0194 68E7     		b	.L125
 2719              	.LVL120:
 2720              	.L144:
2019:Veno-Echo.cpp ****     }
 2721              		.loc 20 2019 16 view .LVU718
 2722              	.LBE1127:
 2723              	.LBE1143:
 2724              	.LBB1144:
 2725              	.LBB1141:
 2726 0196 DFED087A 		vldr.32	s15, .L145+28
 2727 019a BAE7     		b	.L123
 2728              	.L146:
 2729              		.align	2
 2730              	.L145:
 2731 019c 18000000 		.word	.LANCHOR4+24
 2732 01a0 00000000 		.word	.LANCHOR7
 2733 01a4 00000000 		.word	.LANCHOR28
 2734 01a8 00000000 		.word	.LANCHOR29
 2735 01ac 00000000 		.word	.LANCHOR30
 2736 01b0 00000000 		.word	.LANCHOR27
 2737 01b4 00000000 		.word	.LANCHOR31
 2738 01b8 00000000 		.word	0
 2739 01bc 00000000 		.word	.LANCHOR32
 2740 01c0 6F12033D 		.word	1023611503
 2741 01c4 00000000 		.word	.LANCHOR33
 2742 01c8 00000000 		.word	.LANCHOR34
 2743 01cc 0AD7A33B 		.word	1000593162
 2744 01d0 00004844 		.word	1145569280
 2745 01d4 0000C842 		.word	1120403456
 2746 01d8 00000000 		.word	.LANCHOR35
 2747 01dc 00000000 		.word	.LANCHOR36
 2748 01e0 00000000 		.word	.LANCHOR37
 2749 01e4 00000000 		.word	.LANCHOR38
 2750 01e8 00000000 		.word	.LANCHOR15
 2751 01ec 00000000 		.word	.LANCHOR16
 2752              	.LBE1141:
 2753              	.LBE1144:
 2754              	.LBE1165:
 2755              	.LBE1170:
 2756              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 153


 2757              	.LFE4317:
 2759              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.global	_Z19Update_feedbackR_CVv
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv5-d16
 2768              	_Z19Update_feedbackR_CVv:
 2769              	.LFB4318:
1137:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2770              		.loc 20 1137 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1138:Veno-Echo.cpp **** }
 2774              		.loc 20 1138 5 view .LVU720
1137:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2775              		.loc 20 1137 1 is_stmt 0 view .LVU721
 2776 0000 08B5     		push	{r3, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 3, -8
 2779              		.cfi_offset 14, -4
1138:Veno-Echo.cpp **** }
 2780              		.loc 20 1138 35 view .LVU722
 2781 0002 0321     		movs	r1, #3
 2782 0004 0348     		ldr	r0, .L149
 2783 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2784              	.LVL121:
1138:Veno-Echo.cpp **** }
 2785              		.loc 20 1138 18 view .LVU723
 2786 000a 034B     		ldr	r3, .L149+4
 2787 000c 83ED000A 		vstr.32	s0, [r3]
1139:Veno-Echo.cpp **** 
 2788              		.loc 20 1139 1 view .LVU724
 2789 0010 08BD     		pop	{r3, pc}
 2790              	.L150:
 2791 0012 00BF     		.align	2
 2792              	.L149:
 2793 0014 18000000 		.word	.LANCHOR4+24
 2794 0018 00000000 		.word	.LANCHOR39
 2795              		.cfi_endproc
 2796              	.LFE4318:
 2798              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.global	_Z16Update_feedbackRv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu fpv5-d16
 2807              	_Z16Update_feedbackRv:
 2808              	.LFB4319:
1142:Veno-Echo.cpp ****     static bool lastShift{};
 2809              		.loc 20 1142 1 is_stmt 1 view -0
 2810              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 154


 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1143:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2813              		.loc 20 1143 5 view .LVU726
1144:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2814              		.loc 20 1144 5 view .LVU727
1145:Veno-Echo.cpp **** 
 2815              		.loc 20 1145 5 view .LVU728
1147:Veno-Echo.cpp **** 
 2816              		.loc 20 1147 5 view .LVU729
1150:Veno-Echo.cpp **** 
 2817              		.loc 20 1150 5 view .LVU730
1150:Veno-Echo.cpp **** 
 2818              		.loc 20 1150 43 is_stmt 0 view .LVU731
 2819 0000 0422     		movs	r2, #4
 2820 0002 0721     		movs	r1, #7
 2821 0004 6548     		ldr	r0, .L179
1142:Veno-Echo.cpp ****     static bool lastShift{};
 2822              		.loc 20 1142 1 view .LVU732
 2823 0006 10B5     		push	{r4, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0008 2DED028B 		vpush.64	{d8}
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 80, -16
 2830              		.cfi_offset 81, -12
1150:Veno-Echo.cpp **** 
 2831              		.loc 20 1150 43 view .LVU733
 2832 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2833              	.LVL122:
 2834              	.LBB1171:
1152:Veno-Echo.cpp ****     {   
 2835              		.loc 20 1152 9 view .LVU734
 2836 0010 634B     		ldr	r3, .L179+4
 2837              	.LVL123:
1152:Veno-Echo.cpp ****     {   
 2838              		.loc 20 1152 9 view .LVU735
 2839              	.LBE1171:
1152:Veno-Echo.cpp ****     {   
 2840              		.loc 20 1152 5 is_stmt 1 view .LVU736
 2841              	.LBB1216:
 2842              	.LBB1172:
1156:Veno-Echo.cpp ****         {
 2843              		.loc 20 1156 19 is_stmt 0 view .LVU737
 2844 0012 644A     		ldr	r2, .L179+8
 2845              	.LBE1172:
1152:Veno-Echo.cpp ****     {   
 2846              		.loc 20 1152 5 view .LVU738
 2847 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 0016 002B     		cmp	r3, #0
 2849 0018 3DD1     		bne	.L152
 2850              	.LBB1195:
1154:Veno-Echo.cpp ****         //update pickup
 2851              		.loc 20 1154 9 is_stmt 1 view .LVU739
1156:Veno-Echo.cpp ****         {
 2852              		.loc 20 1156 9 view .LVU740
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 155


 2853 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 001c 0029     		cmp	r1, #0
 2855 001e 47D0     		beq	.L153
1158:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2856              		.loc 20 1158 13 view .LVU741
1159:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2857              		.loc 20 1159 30 is_stmt 0 view .LVU742
 2858 0020 6148     		ldr	r0, .L179+12
1160:Veno-Echo.cpp ****         } 
 2859              		.loc 20 1160 27 view .LVU743
 2860 0022 6249     		ldr	r1, .L179+16
1158:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2861              		.loc 20 1158 23 view .LVU744
 2862 0024 1370     		strb	r3, [r2]
1159:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2863              		.loc 20 1159 13 is_stmt 1 view .LVU745
1159:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2864              		.loc 20 1159 30 is_stmt 0 view .LVU746
 2865 0026 0370     		strb	r3, [r0]
1160:Veno-Echo.cpp ****         } 
 2866              		.loc 20 1160 13 is_stmt 1 view .LVU747
1160:Veno-Echo.cpp ****         } 
 2867              		.loc 20 1160 27 is_stmt 0 view .LVU748
 2868 0028 81ED000A 		vstr.32	s0, [r1]
 2869              	.L154:
1173:Veno-Echo.cpp ****         
 2870              		.loc 20 1173 9 is_stmt 1 view .LVU749
 2871              	.LVL124:
1175:Veno-Echo.cpp ****         {
 2872              		.loc 20 1175 9 view .LVU750
1183:Veno-Echo.cpp ****         }
 2873              		.loc 20 1183 13 view .LVU751
 2874              	.LBB1173:
 2875              	.LBI1173:
2012:Veno-Echo.cpp **** {
 2876              		.loc 20 2012 7 view .LVU752
 2877              	.LBB1174:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2878              		.loc 20 2014 5 view .LVU753
2015:Veno-Echo.cpp **** 
 2879              		.loc 20 2015 5 view .LVU754
 2880              	.LBE1174:
 2881              	.LBE1173:
1183:Veno-Echo.cpp ****         }
 2882              		.loc 20 1183 41 is_stmt 0 view .LVU755
 2883 002c 604A     		ldr	r2, .L179+20
 2884              	.LBB1178:
 2885              	.LBB1175:
2015:Veno-Echo.cpp **** 
 2886              		.loc 20 2015 39 view .LVU756
 2887 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2015:Veno-Echo.cpp **** 
 2888              		.loc 20 2015 49 view .LVU757
 2889 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2890              	.LBE1175:
 2891              	.LBE1178:
1183:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 156


 2892              		.loc 20 1183 41 view .LVU758
 2893 0036 5F4B     		ldr	r3, .L179+24
 2894              	.LBB1179:
 2895              	.LBB1176:
2015:Veno-Echo.cpp **** 
 2896              		.loc 20 2015 39 view .LVU759
 2897 0038 92ED007A 		vldr.32	s14, [r2]
2015:Veno-Echo.cpp **** 
 2898              		.loc 20 2015 12 view .LVU760
 2899 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2900 0040 D3ED007A 		vldr.32	s15, [r3]
2015:Veno-Echo.cpp **** 
 2901              		.loc 20 2015 39 view .LVU761
 2902 0044 36EEC77A 		vsub.f32	s14, s13, s14
2015:Veno-Echo.cpp **** 
 2903              		.loc 20 2015 49 view .LVU762
 2904 0048 37EE657A 		vsub.f32	s14, s14, s11
2015:Veno-Echo.cpp **** 
 2905              		.loc 20 2015 12 view .LVU763
 2906 004c E7EE067A 		vfma.f32	s15, s14, s12
 2907              	.LVL125:
2017:Veno-Echo.cpp ****     {
 2908              		.loc 20 2017 5 is_stmt 1 view .LVU764
 2909 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2910 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2911 0058 00F19A80 		bmi	.L177
2022:Veno-Echo.cpp ****     {
 2912              		.loc 20 2022 5 view .LVU765
2024:Veno-Echo.cpp ****     }
 2913              		.loc 20 2024 16 is_stmt 0 view .LVU766
 2914 005c F4EE667A 		vcmp.f32	s15, s13
 2915 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2916 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2917              	.LVL126:
 2918              	.L159:
2024:Veno-Echo.cpp ****     }
 2919              		.loc 20 2024 16 view .LVU767
 2920              	.LBE1176:
 2921              	.LBE1179:
1186:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2922              		.loc 20 1186 9 is_stmt 1 view .LVU768
1186:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2923              		.loc 20 1186 37 is_stmt 0 view .LVU769
 2924 0068 B0EE670A 		vmov.f32	s0, s15
 2925              	.LVL127:
1186:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2926              		.loc 20 1186 37 view .LVU770
 2927 006c 0020     		movs	r0, #0
 2928 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2929 0072 DFED510A 		vldr.32	s1, .L179+28
 2930 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2931              	.LVL128:
1187:Veno-Echo.cpp ****     }
 2932              		.loc 20 1187 9 is_stmt 1 view .LVU771
 2933              	.LBB1180:
 2934              	.LBI1180:
 135:../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 157


 2935              		.loc 25 135 13 view .LVU772
 2936              	.LBB1181:
 2937              		.loc 25 137 5 view .LVU773
 2938              		.loc 25 137 9 is_stmt 0 view .LVU774
 2939 007a 504B     		ldr	r3, .L179+32
 2940 007c 9FED507A 		vldr.32	s14, .L179+36
 2941 0080 D3ED007A 		vldr.32	s15, [r3]
 2942              		.loc 25 137 24 view .LVU775
 2943 0084 30EE670A 		vsub.f32	s0, s0, s15
 2944              	.LVL129:
 2945              		.loc 25 137 24 view .LVU776
 2946              	.LBE1181:
 2947              	.LBE1180:
 2948              	.LBE1195:
 2949              	.LBE1216:
1224:Veno-Echo.cpp **** 
 2950              		.loc 20 1224 1 view .LVU777
 2951 0088 BDEC028B 		vldm	sp!, {d8}
 2952              		.cfi_remember_state
 2953              		.cfi_restore 80
 2954              		.cfi_restore 81
 2955              		.cfi_def_cfa_offset 8
 2956              	.LBB1217:
 2957              	.LBB1196:
 2958              	.LBB1183:
 2959              	.LBB1182:
 2960              		.loc 25 137 9 view .LVU778
 2961 008c E0EE077A 		vfma.f32	s15, s0, s14
 2962 0090 C3ED007A 		vstr.32	s15, [r3]
 2963              	.LBE1182:
 2964              	.LBE1183:
 2965              	.LBE1196:
 2966              	.LBE1217:
1224:Veno-Echo.cpp **** 
 2967              		.loc 20 1224 1 view .LVU779
 2968 0094 10BD     		pop	{r4, pc}
 2969              	.LVL130:
 2970              	.L152:
 2971              		.cfi_restore_state
 2972              	.LBB1218:
 2973              	.LBB1197:
1192:Veno-Echo.cpp **** 
 2974              		.loc 20 1192 9 is_stmt 1 view .LVU780
1194:Veno-Echo.cpp ****         {
 2975              		.loc 20 1194 10 view .LVU781
 2976 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2977 0098 002B     		cmp	r3, #0
 2978 009a 3ED1     		bne	.L162
1196:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2979              		.loc 20 1196 13 view .LVU782
1196:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2980              		.loc 20 1196 23 is_stmt 0 view .LVU783
 2981 009c 0124     		movs	r4, #1
1197:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2982              		.loc 20 1197 29 view .LVU784
 2983 009e 4948     		ldr	r0, .L179+40
1198:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 158


 2984              		.loc 20 1198 26 view .LVU785
 2985 00a0 4949     		ldr	r1, .L179+44
1196:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2986              		.loc 20 1196 23 view .LVU786
 2987 00a2 1470     		strb	r4, [r2]
1197:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2988              		.loc 20 1197 13 is_stmt 1 view .LVU787
1197:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2989              		.loc 20 1197 29 is_stmt 0 view .LVU788
 2990 00a4 0370     		strb	r3, [r0]
1198:Veno-Echo.cpp ****         }
 2991              		.loc 20 1198 13 is_stmt 1 view .LVU789
1198:Veno-Echo.cpp ****         }
 2992              		.loc 20 1198 26 is_stmt 0 view .LVU790
 2993 00a6 81ED000A 		vstr.32	s0, [r1]
 2994              	.L151:
1198:Veno-Echo.cpp ****         }
 2995              		.loc 20 1198 26 view .LVU791
 2996              	.LBE1197:
 2997              	.LBE1218:
1224:Veno-Echo.cpp **** 
 2998              		.loc 20 1224 1 view .LVU792
 2999 00aa BDEC028B 		vldm	sp!, {d8}
 3000              		.cfi_remember_state
 3001              		.cfi_restore 80
 3002              		.cfi_restore 81
 3003              		.cfi_def_cfa_offset 8
 3004 00ae 10BD     		pop	{r4, pc}
 3005              	.L153:
 3006              		.cfi_restore_state
 3007              	.LBB1219:
 3008              	.LBB1213:
1164:Veno-Echo.cpp ****             {
 3009              		.loc 20 1164 13 is_stmt 1 view .LVU793
1164:Veno-Echo.cpp ****             {
 3010              		.loc 20 1164 16 is_stmt 0 view .LVU794
 3011 00b0 3D4B     		ldr	r3, .L179+12
1164:Veno-Echo.cpp ****             {
 3012              		.loc 20 1164 13 view .LVU795
 3013 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3014 00b4 7AB9     		cbnz	r2, .L155
1166:Veno-Echo.cpp ****                 {
 3015              		.loc 20 1166 17 is_stmt 1 view .LVU796
 3016              	.LVL131:
 3017              	.LBB1184:
 3018              	.LBI1184:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3019              		.loc 21 75 3 view .LVU797
 3020              	.LBB1185:
 3021              		.loc 21 76 5 view .LVU798
 3022              		.loc 21 76 5 is_stmt 0 view .LVU799
 3023              	.LBE1185:
 3024              	.LBE1184:
1166:Veno-Echo.cpp ****                 {
 3025              		.loc 20 1166 23 view .LVU800
 3026 00b6 3D4A     		ldr	r2, .L179+16
1166:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 159


 3027              		.loc 20 1166 17 view .LVU801
 3028 00b8 9FED447A 		vldr.32	s14, .L179+48
1166:Veno-Echo.cpp ****                 {
 3029              		.loc 20 1166 23 view .LVU802
 3030 00bc D2ED007A 		vldr.32	s15, [r2]
 3031 00c0 70EE677A 		vsub.f32	s15, s0, s15
 3032              	.LBB1187:
 3033              	.LBB1186:
 3034              		.loc 21 76 31 view .LVU803
 3035 00c4 F0EEE77A 		vabs.f32	s15, s15
 3036              	.LBE1186:
 3037              	.LBE1187:
1166:Veno-Echo.cpp ****                 {
 3038              		.loc 20 1166 17 view .LVU804
 3039 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 3040 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3041 00d0 ACDD     		ble	.L154
1168:Veno-Echo.cpp ****                 }
 3042              		.loc 20 1168 21 is_stmt 1 view .LVU805
1168:Veno-Echo.cpp ****                 }
 3043              		.loc 20 1168 38 is_stmt 0 view .LVU806
 3044 00d2 0122     		movs	r2, #1
 3045 00d4 1A70     		strb	r2, [r3]
 3046              	.L155:
1173:Veno-Echo.cpp ****         
 3047              		.loc 20 1173 9 is_stmt 1 view .LVU807
 3048              	.LVL132:
1175:Veno-Echo.cpp ****         {
 3049              		.loc 20 1175 9 view .LVU808
1177:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3050              		.loc 20 1177 13 view .LVU809
 3051              	.LBB1188:
 3052              	.LBI1188:
2012:Veno-Echo.cpp **** {
 3053              		.loc 20 2012 7 view .LVU810
 3054              	.LBB1189:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3055              		.loc 20 2014 5 view .LVU811
2015:Veno-Echo.cpp **** 
 3056              		.loc 20 2015 5 view .LVU812
 3057              	.LBE1189:
 3058              	.LBE1188:
1177:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3059              		.loc 20 1177 41 is_stmt 0 view .LVU813
 3060 00d6 364B     		ldr	r3, .L179+20
 3061              	.LBB1192:
 3062              	.LBB1190:
2015:Veno-Echo.cpp **** 
 3063              		.loc 20 2015 39 view .LVU814
 3064 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2015:Veno-Echo.cpp **** 
 3065              		.loc 20 2015 49 view .LVU815
 3066 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2015:Veno-Echo.cpp **** 
 3067              		.loc 20 2015 39 view .LVU816
 3068 00e0 D3ED007A 		vldr.32	s15, [r3]
2015:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 160


 3069              		.loc 20 2015 12 view .LVU817
 3070 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2015:Veno-Echo.cpp **** 
 3071              		.loc 20 2015 39 view .LVU818
 3072 00e8 77EE677A 		vsub.f32	s15, s14, s15
2015:Veno-Echo.cpp **** 
 3073              		.loc 20 2015 49 view .LVU819
 3074 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2015:Veno-Echo.cpp **** 
 3075              		.loc 20 2015 12 view .LVU820
 3076 00f0 B0EE406A 		vmov.f32	s12, s0
 3077 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2017:Veno-Echo.cpp ****     {
 3078              		.loc 20 2017 5 view .LVU821
 3079 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2015:Veno-Echo.cpp **** 
 3080              		.loc 20 2015 12 view .LVU822
 3081 00fc F0EE467A 		vmov.f32	s15, s12
 3082              	.LVL133:
2017:Veno-Echo.cpp ****     {
 3083              		.loc 20 2017 5 is_stmt 1 view .LVU823
 3084 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3085 0104 47D4     		bmi	.L178
2022:Veno-Echo.cpp ****     {
 3086              		.loc 20 2022 5 view .LVU824
2024:Veno-Echo.cpp ****     }
 3087              		.loc 20 2024 16 is_stmt 0 view .LVU825
 3088 0106 F4EE477A 		vcmp.f32	s15, s14
 3089 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3090 010e 77FE277A 		vselgt.f32	s15, s14, s15
 3091              	.L157:
 3092              	.LVL134:
2027:Veno-Echo.cpp **** }
 3093              		.loc 20 2027 5 is_stmt 1 view .LVU826
2027:Veno-Echo.cpp **** }
 3094              		.loc 20 2027 5 is_stmt 0 view .LVU827
 3095              	.LBE1190:
 3096              	.LBE1192:
1178:Veno-Echo.cpp ****         }
 3097              		.loc 20 1178 13 is_stmt 1 view .LVU828
1178:Veno-Echo.cpp ****         }
 3098              		.loc 20 1178 28 is_stmt 0 view .LVU829
 3099 0112 284B     		ldr	r3, .L179+24
 3100 0114 83ED000A 		vstr.32	s0, [r3]
 3101 0118 A6E7     		b	.L159
 3102              	.LVL135:
 3103              	.L162:
1178:Veno-Echo.cpp ****         }
 3104              		.loc 20 1178 28 view .LVU830
 3105              	.LBE1213:
 3106              	.LBB1214:
1203:Veno-Echo.cpp ****             {
 3107              		.loc 20 1203 13 is_stmt 1 view .LVU831
1203:Veno-Echo.cpp ****             {
 3108              		.loc 20 1203 16 is_stmt 0 view .LVU832
 3109 011a 2A4B     		ldr	r3, .L179+40
1203:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 161


 3110              		.loc 20 1203 13 view .LVU833
 3111 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3112 011e 7AB9     		cbnz	r2, .L164
1205:Veno-Echo.cpp ****                 {
 3113              		.loc 20 1205 17 is_stmt 1 view .LVU834
 3114              	.LVL136:
 3115              	.LBB1198:
 3116              	.LBI1198:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3117              		.loc 21 75 3 view .LVU835
 3118              	.LBB1199:
 3119              		.loc 21 76 5 view .LVU836
 3120              		.loc 21 76 5 is_stmt 0 view .LVU837
 3121              	.LBE1199:
 3122              	.LBE1198:
1205:Veno-Echo.cpp ****                 {
 3123              		.loc 20 1205 23 view .LVU838
 3124 0120 294A     		ldr	r2, .L179+44
1205:Veno-Echo.cpp ****                 {
 3125              		.loc 20 1205 17 view .LVU839
 3126 0122 9FED2A7A 		vldr.32	s14, .L179+48
1205:Veno-Echo.cpp ****                 {
 3127              		.loc 20 1205 23 view .LVU840
 3128 0126 D2ED007A 		vldr.32	s15, [r2]
 3129 012a 70EE677A 		vsub.f32	s15, s0, s15
 3130              	.LBB1201:
 3131              	.LBB1200:
 3132              		.loc 21 76 31 view .LVU841
 3133 012e F0EEE77A 		vabs.f32	s15, s15
 3134              	.LBE1200:
 3135              	.LBE1201:
1205:Veno-Echo.cpp ****                 {
 3136              		.loc 20 1205 17 view .LVU842
 3137 0132 F4EEC77A 		vcmpe.f32	s15, s14
 3138 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3139 013a B6DD     		ble	.L151
1207:Veno-Echo.cpp ****                 }
 3140              		.loc 20 1207 21 is_stmt 1 view .LVU843
1207:Veno-Echo.cpp ****                 }
 3141              		.loc 20 1207 37 is_stmt 0 view .LVU844
 3142 013c 0122     		movs	r2, #1
 3143 013e 1A70     		strb	r2, [r3]
 3144              	.L164:
1212:Veno-Echo.cpp ****         {
 3145              		.loc 20 1212 9 is_stmt 1 view .LVU845
 3146              	.LBB1202:
1214:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3147              		.loc 20 1214 13 view .LVU846
 3148              	.LVL137:
1215:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3149              		.loc 20 1215 13 view .LVU847
1215:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3150              		.loc 20 1215 29 is_stmt 0 view .LVU848
 3151 0140 9FED231A 		vldr.32	s2, .L179+52
 3152 0144 0120     		movs	r0, #1
 3153 0146 DFED230A 		vldr.32	s1, .L179+56
 3154 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 162


 3155              	.LVL138:
1215:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3156              		.loc 20 1215 29 view .LVU849
 3157 014e B0EE408A 		vmov.f32	s16, s0
 3158              	.LVL139:
1216:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3159              		.loc 20 1216 13 is_stmt 1 view .LVU850
1216:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3160              		.loc 20 1216 26 is_stmt 0 view .LVU851
 3161 0152 2148     		ldr	r0, .L179+60
 3162 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3163              	.LVL140:
1217:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3164              		.loc 20 1217 13 is_stmt 1 view .LVU852
1217:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3165              		.loc 20 1217 26 is_stmt 0 view .LVU853
 3166 0158 2048     		ldr	r0, .L179+64
 3167 015a B0EE480A 		vmov.f32	s0, s16
 3168 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3169              	.LVL141:
1218:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3170              		.loc 20 1218 13 is_stmt 1 view .LVU854
1218:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3171              		.loc 20 1218 31 is_stmt 0 view .LVU855
 3172 0162 B0EE480A 		vmov.f32	s0, s16
 3173 0166 1E48     		ldr	r0, .L179+68
 3174 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3175              	.LVL142:
1219:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3176              		.loc 20 1219 13 is_stmt 1 view .LVU856
1219:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3177              		.loc 20 1219 31 is_stmt 0 view .LVU857
 3178 016c B0EE480A 		vmov.f32	s0, s16
 3179 0170 1C48     		ldr	r0, .L179+72
 3180 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3181              	.LVL143:
1220:Veno-Echo.cpp ****             save_flag = true;
 3182              		.loc 20 1220 13 is_stmt 1 view .LVU858
1220:Veno-Echo.cpp ****             save_flag = true;
 3183              		.loc 20 1220 35 is_stmt 0 view .LVU859
 3184 0176 1C49     		ldr	r1, .L179+76
 3185              	.LBB1203:
 3186              	.LBB1204:
 3187              	.LBB1205:
 3188              	.LBB1206:
 3189              	.LBB1207:
 3190              		.loc 22 397 18 view .LVU860
 3191 0178 1C4B     		ldr	r3, .L179+80
 3192 017a 0122     		movs	r2, #1
 3193              	.LBE1207:
 3194              	.LBE1206:
 3195              	.LBE1205:
 3196              	.LBE1204:
 3197              	.LBE1203:
1220:Veno-Echo.cpp ****             save_flag = true;
 3198              		.loc 20 1220 35 view .LVU861
 3199 017c 81ED058A 		vstr.32	s16, [r1, #20]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 163


1221:Veno-Echo.cpp ****         }
 3200              		.loc 20 1221 13 is_stmt 1 view .LVU862
 3201              	.LVL144:
 3202              	.LBB1212:
 3203              	.LBI1203:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3204              		.loc 23 80 5 view .LVU863
 3205              	.LBB1211:
 3206              		.loc 23 81 7 view .LVU864
 3207              	.LBB1210:
 3208              	.LBI1205:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3209              		.loc 22 288 7 view .LVU865
 3210              	.LBB1209:
 3211              	.LBI1206:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3212              		.loc 22 390 7 view .LVU866
 3213              	.LBB1208:
 3214              		.loc 22 397 18 is_stmt 0 view .LVU867
 3215 0180 BFF35B8F 		dmb	ish
 3216 0184 1A70     		strb	r2, [r3]
 3217 0186 BFF35B8F 		dmb	ish
 3218              	.LVL145:
 3219              		.loc 22 397 18 view .LVU868
 3220              	.LBE1208:
 3221              	.LBE1209:
 3222              	.LBE1210:
 3223              	.LBE1211:
 3224              	.LBE1212:
 3225              	.LBE1202:
 3226              	.LBE1214:
 3227              	.LBE1219:
1224:Veno-Echo.cpp **** 
 3228              		.loc 20 1224 1 view .LVU869
 3229 018a BDEC028B 		vldm	sp!, {d8}
 3230              		.cfi_remember_state
 3231              		.cfi_restore 80
 3232              		.cfi_restore 81
 3233              		.cfi_def_cfa_offset 8
 3234              	.LVL146:
1224:Veno-Echo.cpp **** 
 3235              		.loc 20 1224 1 view .LVU870
 3236 018e 10BD     		pop	{r4, pc}
 3237              	.LVL147:
 3238              	.L177:
 3239              		.cfi_restore_state
 3240              	.LBB1220:
 3241              	.LBB1215:
 3242              	.LBB1193:
 3243              	.LBB1177:
2019:Veno-Echo.cpp ****     }
 3244              		.loc 20 2019 16 view .LVU871
 3245 0190 DFED097A 		vldr.32	s15, .L179+28
 3246              	.LVL148:
2019:Veno-Echo.cpp ****     }
 3247              		.loc 20 2019 16 view .LVU872
 3248 0194 68E7     		b	.L159
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 164


 3249              	.LVL149:
 3250              	.L178:
2019:Veno-Echo.cpp ****     }
 3251              		.loc 20 2019 16 view .LVU873
 3252              	.LBE1177:
 3253              	.LBE1193:
 3254              	.LBB1194:
 3255              	.LBB1191:
 3256 0196 DFED087A 		vldr.32	s15, .L179+28
 3257 019a BAE7     		b	.L157
 3258              	.L180:
 3259              		.align	2
 3260              	.L179:
 3261 019c 18000000 		.word	.LANCHOR4+24
 3262 01a0 00000000 		.word	.LANCHOR7
 3263 01a4 00000000 		.word	.LANCHOR40
 3264 01a8 00000000 		.word	.LANCHOR41
 3265 01ac 00000000 		.word	.LANCHOR42
 3266 01b0 00000000 		.word	.LANCHOR39
 3267 01b4 00000000 		.word	.LANCHOR43
 3268 01b8 00000000 		.word	0
 3269 01bc 00000000 		.word	.LANCHOR44
 3270 01c0 6F12033D 		.word	1023611503
 3271 01c4 00000000 		.word	.LANCHOR45
 3272 01c8 00000000 		.word	.LANCHOR46
 3273 01cc 0AD7A33B 		.word	1000593162
 3274 01d0 00803B46 		.word	1178304512
 3275 01d4 0080BB44 		.word	1153138688
 3276 01d8 00000000 		.word	.LANCHOR47
 3277 01dc 00000000 		.word	.LANCHOR48
 3278 01e0 00000000 		.word	.LANCHOR49
 3279 01e4 00000000 		.word	.LANCHOR50
 3280 01e8 00000000 		.word	.LANCHOR15
 3281 01ec 00000000 		.word	.LANCHOR16
 3282              	.LBE1191:
 3283              	.LBE1194:
 3284              	.LBE1215:
 3285              	.LBE1220:
 3286              		.cfi_endproc
 3287              	.LFE4319:
 3289              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3290              		.align	1
 3291              		.p2align 2,,3
 3292              		.global	_Z16Update_drywet_CVv
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3296              		.fpu fpv5-d16
 3298              	_Z16Update_drywet_CVv:
 3299              	.LFB4320:
1227:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3300              		.loc 20 1227 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1228:Veno-Echo.cpp **** }
 3304              		.loc 20 1228 5 view .LVU875
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 165


1227:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3305              		.loc 20 1227 1 is_stmt 0 view .LVU876
 3306 0000 08B5     		push	{r3, lr}
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 3, -8
 3309              		.cfi_offset 14, -4
1228:Veno-Echo.cpp **** }
 3310              		.loc 20 1228 32 view .LVU877
 3311 0002 0421     		movs	r1, #4
 3312 0004 0348     		ldr	r0, .L183
 3313 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3314              	.LVL150:
1228:Veno-Echo.cpp **** }
 3315              		.loc 20 1228 15 view .LVU878
 3316 000a 034B     		ldr	r3, .L183+4
 3317 000c 83ED000A 		vstr.32	s0, [r3]
1229:Veno-Echo.cpp **** 
 3318              		.loc 20 1229 1 view .LVU879
 3319 0010 08BD     		pop	{r3, pc}
 3320              	.L184:
 3321 0012 00BF     		.align	2
 3322              	.L183:
 3323 0014 18000000 		.word	.LANCHOR4+24
 3324 0018 00000000 		.word	.LANCHOR51
 3325              		.cfi_endproc
 3326              	.LFE4320:
 3328              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 2,,3
 3331              		.global	_Z13Update_drywetv
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu fpv5-d16
 3337              	_Z13Update_drywetv:
 3338              	.LFB4321:
1232:Veno-Echo.cpp ****     static bool lastShift{};
 3339              		.loc 20 1232 1 is_stmt 1 view -0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
1233:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3343              		.loc 20 1233 5 view .LVU881
1234:Veno-Echo.cpp ****     static bool Res_pickup{};
 3344              		.loc 20 1234 5 view .LVU882
1235:Veno-Echo.cpp **** 
 3345              		.loc 20 1235 5 view .LVU883
1237:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3346              		.loc 20 1237 5 view .LVU884
1242:Veno-Echo.cpp **** 
 3347              		.loc 20 1242 5 view .LVU885
1242:Veno-Echo.cpp **** 
 3348              		.loc 20 1242 40 is_stmt 0 view .LVU886
 3349 0000 0522     		movs	r2, #5
 3350 0002 0721     		movs	r1, #7
 3351 0004 8248     		ldr	r0, .L218+24
1232:Veno-Echo.cpp ****     static bool lastShift{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 166


 3352              		.loc 20 1232 1 view .LVU887
 3353 0006 10B5     		push	{r4, lr}
 3354              		.cfi_def_cfa_offset 8
 3355              		.cfi_offset 4, -8
 3356              		.cfi_offset 14, -4
 3357 0008 2DED028B 		vpush.64	{d8}
 3358              		.cfi_def_cfa_offset 16
 3359              		.cfi_offset 80, -16
 3360              		.cfi_offset 81, -12
1242:Veno-Echo.cpp **** 
 3361              		.loc 20 1242 40 view .LVU888
 3362 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3363              	.LVL151:
 3364              	.LBB1221:
1244:Veno-Echo.cpp ****     {   
 3365              		.loc 20 1244 9 view .LVU889
 3366 0010 804B     		ldr	r3, .L218+28
 3367              	.LVL152:
1244:Veno-Echo.cpp ****     {   
 3368              		.loc 20 1244 9 view .LVU890
 3369              	.LBE1221:
1244:Veno-Echo.cpp ****     {   
 3370              		.loc 20 1244 5 is_stmt 1 view .LVU891
 3371              	.LBB1264:
 3372              	.LBB1222:
1249:Veno-Echo.cpp ****         {
 3373              		.loc 20 1249 19 is_stmt 0 view .LVU892
 3374 0012 814A     		ldr	r2, .L218+32
 3375              	.LBE1222:
1244:Veno-Echo.cpp ****     {   
 3376              		.loc 20 1244 5 view .LVU893
 3377 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3378 0016 B3BB     		cbnz	r3, .L186
 3379              	.LBB1243:
1247:Veno-Echo.cpp **** 
 3380              		.loc 20 1247 9 is_stmt 1 view .LVU894
1249:Veno-Echo.cpp ****         {
 3381              		.loc 20 1249 9 view .LVU895
 3382 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3383 001a 0029     		cmp	r1, #0
 3384 001c 40D0     		beq	.L187
1251:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3385              		.loc 20 1251 13 view .LVU896
1253:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3386              		.loc 20 1253 27 is_stmt 0 view .LVU897
 3387 001e 7F48     		ldr	r0, .L218+36
1254:Veno-Echo.cpp ****         } 
 3388              		.loc 20 1254 24 view .LVU898
 3389 0020 7F49     		ldr	r1, .L218+40
1251:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3390              		.loc 20 1251 23 view .LVU899
 3391 0022 1370     		strb	r3, [r2]
1253:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3392              		.loc 20 1253 13 is_stmt 1 view .LVU900
1253:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3393              		.loc 20 1253 27 is_stmt 0 view .LVU901
 3394 0024 0370     		strb	r3, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 167


1254:Veno-Echo.cpp ****         } 
 3395              		.loc 20 1254 13 is_stmt 1 view .LVU902
1254:Veno-Echo.cpp ****         } 
 3396              		.loc 20 1254 24 is_stmt 0 view .LVU903
 3397 0026 81ED000A 		vstr.32	s0, [r1]
 3398              	.L188:
1270:Veno-Echo.cpp **** 
 3399              		.loc 20 1270 9 is_stmt 1 view .LVU904
 3400              	.LVL153:
1272:Veno-Echo.cpp ****         {
 3401              		.loc 20 1272 9 view .LVU905
1280:Veno-Echo.cpp ****         }
 3402              		.loc 20 1280 13 view .LVU906
 3403              	.LBB1223:
 3404              	.LBI1223:
2012:Veno-Echo.cpp **** {
 3405              		.loc 20 2012 7 view .LVU907
 3406              	.LBB1224:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3407              		.loc 20 2014 5 view .LVU908
2015:Veno-Echo.cpp **** 
 3408              		.loc 20 2015 5 view .LVU909
 3409              	.LBE1224:
 3410              	.LBE1223:
1280:Veno-Echo.cpp ****         }
 3411              		.loc 20 1280 37 is_stmt 0 view .LVU910
 3412 002a 7E4A     		ldr	r2, .L218+44
 3413              	.LBB1227:
 3414              	.LBB1225:
2015:Veno-Echo.cpp **** 
 3415              		.loc 20 2015 39 view .LVU911
 3416 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2015:Veno-Echo.cpp **** 
 3417              		.loc 20 2015 49 view .LVU912
 3418 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3419              	.LBE1225:
 3420              	.LBE1227:
1280:Veno-Echo.cpp ****         }
 3421              		.loc 20 1280 37 view .LVU913
 3422 0034 7C4B     		ldr	r3, .L218+48
 3423              	.LBB1228:
 3424              	.LBB1226:
2015:Veno-Echo.cpp **** 
 3425              		.loc 20 2015 39 view .LVU914
 3426 0036 92ED007A 		vldr.32	s14, [r2]
2015:Veno-Echo.cpp **** 
 3427              		.loc 20 2015 12 view .LVU915
 3428 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3429 003e D3ED007A 		vldr.32	s15, [r3]
2015:Veno-Echo.cpp **** 
 3430              		.loc 20 2015 39 view .LVU916
 3431 0042 36EEC77A 		vsub.f32	s14, s13, s14
2015:Veno-Echo.cpp **** 
 3432              		.loc 20 2015 49 view .LVU917
 3433 0046 37EE657A 		vsub.f32	s14, s14, s11
2015:Veno-Echo.cpp **** 
 3434              		.loc 20 2015 12 view .LVU918
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 168


 3435 004a E7EE067A 		vfma.f32	s15, s14, s12
 3436              	.LVL154:
2017:Veno-Echo.cpp ****     {
 3437              		.loc 20 2017 5 is_stmt 1 view .LVU919
 3438 004e F5EEC07A 		vcmpe.f32	s15, #0
 3439 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3440 0056 00F1C180 		bmi	.L205
2022:Veno-Echo.cpp ****     {
 3441              		.loc 20 2022 5 view .LVU920
 3442 005a F4EEE67A 		vcmpe.f32	s15, s13
 3443 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3444 0062 40F3C680 		ble	.L211
 3445              	.LVL155:
 3446              	.L196:
2022:Veno-Echo.cpp ****     {
 3447              		.loc 20 2022 5 is_stmt 0 view .LVU921
 3448              	.LBE1226:
 3449              	.LBE1228:
1287:Veno-Echo.cpp ****         }
 3450              		.loc 20 1287 26 view .LVU922
 3451 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3452              	.LVL156:
 3453              	.L195:
1299:Veno-Echo.cpp ****     }
 3454              		.loc 20 1299 9 is_stmt 1 view .LVU923
 3455              	.LBB1229:
 3456              	.LBI1229:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3457              		.loc 25 135 13 view .LVU924
 3458              	.LBB1230:
 3459              		.loc 25 137 5 view .LVU925
 3460              		.loc 25 137 9 is_stmt 0 view .LVU926
 3461 006a 704B     		ldr	r3, .L218+52
 3462 006c 9FED707A 		vldr.32	s14, .L218+56
 3463 0070 D3ED007A 		vldr.32	s15, [r3]
 3464              		.loc 25 137 24 view .LVU927
 3465 0074 30EE670A 		vsub.f32	s0, s0, s15
 3466              	.LVL157:
 3467              		.loc 25 137 24 view .LVU928
 3468              	.LBE1230:
 3469              	.LBE1229:
 3470              	.LBE1243:
 3471              	.LBE1264:
1339:Veno-Echo.cpp **** 
 3472              		.loc 20 1339 1 view .LVU929
 3473 0078 BDEC028B 		vldm	sp!, {d8}
 3474              		.cfi_remember_state
 3475              		.cfi_restore 80
 3476              		.cfi_restore 81
 3477              		.cfi_def_cfa_offset 8
 3478              	.LBB1265:
 3479              	.LBB1244:
 3480              	.LBB1232:
 3481              	.LBB1231:
 3482              		.loc 25 137 9 view .LVU930
 3483 007c E0EE077A 		vfma.f32	s15, s0, s14
 3484 0080 C3ED007A 		vstr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 169


 3485              	.LBE1231:
 3486              	.LBE1232:
 3487              	.LBE1244:
 3488              	.LBE1265:
1339:Veno-Echo.cpp **** 
 3489              		.loc 20 1339 1 view .LVU931
 3490 0084 10BD     		pop	{r4, pc}
 3491              	.LVL158:
 3492              	.L186:
 3493              		.cfi_restore_state
 3494              	.LBB1266:
 3495              	.LBB1245:
1303:Veno-Echo.cpp **** 
 3496              		.loc 20 1303 9 is_stmt 1 view .LVU932
1305:Veno-Echo.cpp ****         {
 3497              		.loc 20 1305 9 view .LVU933
 3498 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3499 0088 002B     		cmp	r3, #0
 3500 008a 58D1     		bne	.L200
1307:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3501              		.loc 20 1307 13 view .LVU934
1307:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3502              		.loc 20 1307 23 is_stmt 0 view .LVU935
 3503 008c 0124     		movs	r4, #1
1308:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3504              		.loc 20 1308 24 view .LVU936
 3505 008e 6948     		ldr	r0, .L218+60
1309:Veno-Echo.cpp ****         }
 3506              		.loc 20 1309 21 view .LVU937
 3507 0090 6949     		ldr	r1, .L218+64
1307:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3508              		.loc 20 1307 23 view .LVU938
 3509 0092 1470     		strb	r4, [r2]
1308:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3510              		.loc 20 1308 13 is_stmt 1 view .LVU939
1308:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3511              		.loc 20 1308 24 is_stmt 0 view .LVU940
 3512 0094 0370     		strb	r3, [r0]
1309:Veno-Echo.cpp ****         }
 3513              		.loc 20 1309 13 is_stmt 1 view .LVU941
1309:Veno-Echo.cpp ****         }
 3514              		.loc 20 1309 21 is_stmt 0 view .LVU942
 3515 0096 81ED000A 		vstr.32	s0, [r1]
 3516              	.L185:
1309:Veno-Echo.cpp ****         }
 3517              		.loc 20 1309 21 view .LVU943
 3518              	.LBE1245:
 3519              	.LBE1266:
1339:Veno-Echo.cpp **** 
 3520              		.loc 20 1339 1 view .LVU944
 3521 009a BDEC028B 		vldm	sp!, {d8}
 3522              		.cfi_remember_state
 3523              		.cfi_restore 80
 3524              		.cfi_restore 81
 3525              		.cfi_def_cfa_offset 8
 3526 009e 10BD     		pop	{r4, pc}
 3527              	.L187:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 170


 3528              		.cfi_restore_state
 3529              	.LBB1267:
 3530              	.LBB1261:
1259:Veno-Echo.cpp ****             {
 3531              		.loc 20 1259 13 is_stmt 1 view .LVU945
1259:Veno-Echo.cpp ****             {
 3532              		.loc 20 1259 16 is_stmt 0 view .LVU946
 3533 00a0 5E4B     		ldr	r3, .L218+36
1259:Veno-Echo.cpp ****             {
 3534              		.loc 20 1259 13 view .LVU947
 3535 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 00a4 7AB9     		cbnz	r2, .L189
1262:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1262 17 is_stmt 1 view .LVU948
 3538              	.LVL159:
 3539              	.LBB1233:
 3540              	.LBI1233:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3541              		.loc 21 75 3 view .LVU949
 3542              	.LBB1234:
 3543              		.loc 21 76 5 view .LVU950
 3544              		.loc 21 76 5 is_stmt 0 view .LVU951
 3545              	.LBE1234:
 3546              	.LBE1233:
1262:Veno-Echo.cpp ****                 {
 3547              		.loc 20 1262 23 view .LVU952
 3548 00a6 5E4A     		ldr	r2, .L218+40
1262:Veno-Echo.cpp ****                 {
 3549              		.loc 20 1262 17 view .LVU953
 3550 00a8 9FED647A 		vldr.32	s14, .L218+68
1262:Veno-Echo.cpp ****                 {
 3551              		.loc 20 1262 23 view .LVU954
 3552 00ac D2ED007A 		vldr.32	s15, [r2]
 3553 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3554              	.LBB1236:
 3555              	.LBB1235:
 3556              		.loc 21 76 31 view .LVU955
 3557 00b4 F0EEE77A 		vabs.f32	s15, s15
 3558              	.LBE1235:
 3559              	.LBE1236:
1262:Veno-Echo.cpp ****                 {
 3560              		.loc 20 1262 17 view .LVU956
 3561 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3562 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3563 00c0 B3DD     		ble	.L188
1264:Veno-Echo.cpp ****                 }
 3564              		.loc 20 1264 21 is_stmt 1 view .LVU957
1264:Veno-Echo.cpp ****                 }
 3565              		.loc 20 1264 35 is_stmt 0 view .LVU958
 3566 00c2 0122     		movs	r2, #1
 3567 00c4 1A70     		strb	r2, [r3]
 3568              	.L189:
1270:Veno-Echo.cpp **** 
 3569              		.loc 20 1270 9 is_stmt 1 view .LVU959
 3570              	.LVL160:
1272:Veno-Echo.cpp ****         {
 3571              		.loc 20 1272 9 view .LVU960
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 171


1274:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3572              		.loc 20 1274 13 view .LVU961
 3573              	.LBB1237:
 3574              	.LBI1237:
2012:Veno-Echo.cpp **** {
 3575              		.loc 20 2012 7 view .LVU962
 3576              	.LBB1238:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3577              		.loc 20 2014 5 view .LVU963
2015:Veno-Echo.cpp **** 
 3578              		.loc 20 2015 5 view .LVU964
 3579              	.LBE1238:
 3580              	.LBE1237:
1274:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3581              		.loc 20 1274 37 is_stmt 0 view .LVU965
 3582 00c6 574B     		ldr	r3, .L218+44
 3583              	.LBB1241:
 3584              	.LBB1239:
2015:Veno-Echo.cpp **** 
 3585              		.loc 20 2015 39 view .LVU966
 3586 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2015:Veno-Echo.cpp **** 
 3587              		.loc 20 2015 49 view .LVU967
 3588 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2015:Veno-Echo.cpp **** 
 3589              		.loc 20 2015 39 view .LVU968
 3590 00d0 D3ED007A 		vldr.32	s15, [r3]
2015:Veno-Echo.cpp **** 
 3591              		.loc 20 2015 12 view .LVU969
 3592 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2015:Veno-Echo.cpp **** 
 3593              		.loc 20 2015 39 view .LVU970
 3594 00d8 77EE677A 		vsub.f32	s15, s14, s15
2015:Veno-Echo.cpp **** 
 3595              		.loc 20 2015 49 view .LVU971
 3596 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2015:Veno-Echo.cpp **** 
 3597              		.loc 20 2015 12 view .LVU972
 3598 00e0 B0EE406A 		vmov.f32	s12, s0
 3599 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2017:Veno-Echo.cpp ****     {
 3600              		.loc 20 2017 5 view .LVU973
 3601 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2015:Veno-Echo.cpp **** 
 3602              		.loc 20 2015 12 view .LVU974
 3603 00ec F0EE467A 		vmov.f32	s15, s12
 3604              	.LVL161:
2017:Veno-Echo.cpp ****     {
 3605              		.loc 20 2017 5 is_stmt 1 view .LVU975
 3606 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3607 00f4 75D4     		bmi	.L216
2022:Veno-Echo.cpp ****     {
 3608              		.loc 20 2022 5 view .LVU976
 3609 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3610 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3611 00fe 75DD     		ble	.L217
2024:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 172


 3612              		.loc 20 2024 16 is_stmt 0 view .LVU977
 3613 0100 F0EE477A 		vmov.f32	s15, s14
 3614 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3615              	.LVL162:
 3616              	.L191:
2027:Veno-Echo.cpp **** }
 3617              		.loc 20 2027 5 is_stmt 1 view .LVU978
2027:Veno-Echo.cpp **** }
 3618              		.loc 20 2027 5 is_stmt 0 view .LVU979
 3619              	.LBE1239:
 3620              	.LBE1241:
1275:Veno-Echo.cpp ****         }
 3621              		.loc 20 1275 13 is_stmt 1 view .LVU980
1275:Veno-Echo.cpp ****         }
 3622              		.loc 20 1275 25 is_stmt 0 view .LVU981
 3623 0108 474B     		ldr	r3, .L218+48
 3624 010a 83ED000A 		vstr.32	s0, [r3]
 3625              	.LVL163:
 3626              	.L192:
1283:Veno-Echo.cpp **** 
 3627              		.loc 20 1283 9 is_stmt 1 view .LVU982
1285:Veno-Echo.cpp ****         {
 3628              		.loc 20 1285 9 view .LVU983
 3629 010e 9FED3A5B 		vldr.64	d5, .L218
 3630 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3631 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3632 011a A4DA     		bge	.L196
1289:Veno-Echo.cpp ****         {
 3633              		.loc 20 1289 14 view .LVU984
 3634 011c 9FED385B 		vldr.64	d5, .L218+8
 3635 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3636 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3637 0128 58D9     		bls	.L205
1295:Veno-Echo.cpp ****         }
 3638              		.loc 20 1295 13 view .LVU985
1295:Veno-Echo.cpp ****         }
 3639              		.loc 20 1295 33 is_stmt 0 view .LVU986
 3640 012a B0EE670A 		vmov.f32	s0, s15
 3641              	.LVL164:
1295:Veno-Echo.cpp ****         }
 3642              		.loc 20 1295 33 view .LVU987
 3643 012e 0020     		movs	r0, #0
 3644 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3645 0134 DFED420A 		vldr.32	s1, .L218+72
 3646 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3647              	.LVL165:
1295:Veno-Echo.cpp ****         }
 3648              		.loc 20 1295 33 view .LVU988
 3649 013c 95E7     		b	.L195
 3650              	.LVL166:
 3651              	.L200:
1295:Veno-Echo.cpp ****         }
 3652              		.loc 20 1295 33 view .LVU989
 3653              	.LBE1261:
 3654              	.LBB1262:
1314:Veno-Echo.cpp ****             {
 3655              		.loc 20 1314 13 is_stmt 1 view .LVU990
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 173


1314:Veno-Echo.cpp ****             {
 3656              		.loc 20 1314 16 is_stmt 0 view .LVU991
 3657 013e 3D4B     		ldr	r3, .L218+60
1314:Veno-Echo.cpp ****             {
 3658              		.loc 20 1314 13 view .LVU992
 3659 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3660 0142 7AB9     		cbnz	r2, .L202
1316:Veno-Echo.cpp ****                 {
 3661              		.loc 20 1316 17 is_stmt 1 view .LVU993
 3662              	.LVL167:
 3663              	.LBB1246:
 3664              	.LBI1246:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3665              		.loc 21 75 3 view .LVU994
 3666              	.LBB1247:
 3667              		.loc 21 76 5 view .LVU995
 3668              		.loc 21 76 5 is_stmt 0 view .LVU996
 3669              	.LBE1247:
 3670              	.LBE1246:
1316:Veno-Echo.cpp ****                 {
 3671              		.loc 20 1316 23 view .LVU997
 3672 0144 3C4A     		ldr	r2, .L218+64
1316:Veno-Echo.cpp ****                 {
 3673              		.loc 20 1316 17 view .LVU998
 3674 0146 9FED3D7A 		vldr.32	s14, .L218+68
1316:Veno-Echo.cpp ****                 {
 3675              		.loc 20 1316 23 view .LVU999
 3676 014a D2ED007A 		vldr.32	s15, [r2]
 3677 014e 70EE677A 		vsub.f32	s15, s0, s15
 3678              	.LBB1249:
 3679              	.LBB1248:
 3680              		.loc 21 76 31 view .LVU1000
 3681 0152 F0EEE77A 		vabs.f32	s15, s15
 3682              	.LBE1248:
 3683              	.LBE1249:
1316:Veno-Echo.cpp ****                 {
 3684              		.loc 20 1316 17 view .LVU1001
 3685 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3686 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3687 015e 9CDD     		ble	.L185
1318:Veno-Echo.cpp ****                 }
 3688              		.loc 20 1318 21 is_stmt 1 view .LVU1002
1318:Veno-Echo.cpp ****                 }
 3689              		.loc 20 1318 32 is_stmt 0 view .LVU1003
 3690 0160 0122     		movs	r2, #1
 3691 0162 1A70     		strb	r2, [r3]
 3692              	.L202:
1323:Veno-Echo.cpp ****         {
 3693              		.loc 20 1323 9 is_stmt 1 view .LVU1004
 3694              	.LBB1250:
1325:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3695              		.loc 20 1325 13 view .LVU1005
 3696              	.LVL168:
1326:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3697              		.loc 20 1326 13 view .LVU1006
1326:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3698              		.loc 20 1326 24 is_stmt 0 view .LVU1007
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 174


 3699 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3700 0168 DFED350A 		vldr.32	s1, .L218+72
 3701 016c 0020     		movs	r0, #0
 3702 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3703              	.LVL169:
1326:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3704              		.loc 20 1326 24 view .LVU1008
 3705 0172 B0EE408A 		vmov.f32	s16, s0
 3706              	.LVL170:
1327:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3707              		.loc 20 1327 13 is_stmt 1 view .LVU1009
1327:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3708              		.loc 20 1327 25 is_stmt 0 view .LVU1010
 3709 0176 3348     		ldr	r0, .L218+76
 3710 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3711              	.LVL171:
1328:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3712              		.loc 20 1328 13 is_stmt 1 view .LVU1011
1328:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3713              		.loc 20 1328 25 is_stmt 0 view .LVU1012
 3714 017c 3248     		ldr	r0, .L218+80
 3715 017e B0EE480A 		vmov.f32	s0, s16
 3716 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3717              	.LVL172:
1329:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3718              		.loc 20 1329 13 is_stmt 1 view .LVU1013
1329:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3719              		.loc 20 1329 25 is_stmt 0 view .LVU1014
 3720 0186 B0EE480A 		vmov.f32	s0, s16
 3721 018a 3048     		ldr	r0, .L218+84
 3722 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3723              	.LVL173:
1330:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3724              		.loc 20 1330 13 is_stmt 1 view .LVU1015
1330:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3725              		.loc 20 1330 25 is_stmt 0 view .LVU1016
 3726 0190 B0EE480A 		vmov.f32	s0, s16
 3727 0194 2E48     		ldr	r0, .L218+88
 3728 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3729              	.LVL174:
1331:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3730              		.loc 20 1331 13 is_stmt 1 view .LVU1017
1331:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3731              		.loc 20 1331 30 is_stmt 0 view .LVU1018
 3732 019a B0EE480A 		vmov.f32	s0, s16
 3733 019e 2D48     		ldr	r0, .L218+92
 3734 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3735              	.LVL175:
1332:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3736              		.loc 20 1332 13 is_stmt 1 view .LVU1019
1332:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3737              		.loc 20 1332 30 is_stmt 0 view .LVU1020
 3738 01a4 B0EE480A 		vmov.f32	s0, s16
 3739 01a8 2B48     		ldr	r0, .L218+96
 3740 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3741              	.LVL176:
1333:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 175


 3742              		.loc 20 1333 13 is_stmt 1 view .LVU1021
1333:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3743              		.loc 20 1333 30 is_stmt 0 view .LVU1022
 3744 01ae B0EE480A 		vmov.f32	s0, s16
 3745 01b2 2A48     		ldr	r0, .L218+100
 3746 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3747              	.LVL177:
1334:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3748              		.loc 20 1334 13 is_stmt 1 view .LVU1023
1334:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3749              		.loc 20 1334 30 is_stmt 0 view .LVU1024
 3750 01b8 B0EE480A 		vmov.f32	s0, s16
 3751 01bc 2848     		ldr	r0, .L218+104
 3752 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3753              	.LVL178:
1335:Veno-Echo.cpp ****             save_flag = true;
 3754              		.loc 20 1335 13 is_stmt 1 view .LVU1025
1335:Veno-Echo.cpp ****             save_flag = true;
 3755              		.loc 20 1335 35 is_stmt 0 view .LVU1026
 3756 01c2 2849     		ldr	r1, .L218+108
 3757              	.LBB1251:
 3758              	.LBB1252:
 3759              	.LBB1253:
 3760              	.LBB1254:
 3761              	.LBB1255:
 3762              		.loc 22 397 18 view .LVU1027
 3763 01c4 284B     		ldr	r3, .L218+112
 3764 01c6 0122     		movs	r2, #1
 3765              	.LBE1255:
 3766              	.LBE1254:
 3767              	.LBE1253:
 3768              	.LBE1252:
 3769              	.LBE1251:
1335:Veno-Echo.cpp ****             save_flag = true;
 3770              		.loc 20 1335 35 view .LVU1028
 3771 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1336:Veno-Echo.cpp ****         }
 3772              		.loc 20 1336 13 is_stmt 1 view .LVU1029
 3773              	.LVL179:
 3774              	.LBB1260:
 3775              	.LBI1251:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3776              		.loc 23 80 5 view .LVU1030
 3777              	.LBB1259:
 3778              		.loc 23 81 7 view .LVU1031
 3779              	.LBB1258:
 3780              	.LBI1253:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3781              		.loc 22 288 7 view .LVU1032
 3782              	.LBB1257:
 3783              	.LBI1254:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3784              		.loc 22 390 7 view .LVU1033
 3785              	.LBB1256:
 3786              		.loc 22 397 18 is_stmt 0 view .LVU1034
 3787 01cc BFF35B8F 		dmb	ish
 3788 01d0 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 176


 3789 01d2 BFF35B8F 		dmb	ish
 3790              	.LVL180:
 3791              		.loc 22 397 18 view .LVU1035
 3792              	.LBE1256:
 3793              	.LBE1257:
 3794              	.LBE1258:
 3795              	.LBE1259:
 3796              	.LBE1260:
 3797              	.LBE1250:
 3798              	.LBE1262:
 3799              	.LBE1267:
1339:Veno-Echo.cpp **** 
 3800              		.loc 20 1339 1 view .LVU1036
 3801 01d6 BDEC028B 		vldm	sp!, {d8}
 3802              		.cfi_remember_state
 3803              		.cfi_restore 80
 3804              		.cfi_restore 81
 3805              		.cfi_def_cfa_offset 8
 3806              	.LVL181:
1339:Veno-Echo.cpp **** 
 3807              		.loc 20 1339 1 view .LVU1037
 3808 01da 10BD     		pop	{r4, pc}
 3809              	.LVL182:
 3810              	.L205:
 3811              		.cfi_restore_state
 3812              	.LBB1268:
 3813              	.LBB1263:
1291:Veno-Echo.cpp ****         }
 3814              		.loc 20 1291 26 view .LVU1038
 3815 01dc 9FED180A 		vldr.32	s0, .L218+72
 3816              	.LVL183:
1291:Veno-Echo.cpp ****         }
 3817              		.loc 20 1291 26 view .LVU1039
 3818 01e0 43E7     		b	.L195
 3819              	.LVL184:
 3820              	.L216:
 3821              	.LBB1242:
 3822              	.LBB1240:
1291:Veno-Echo.cpp ****         }
 3823              		.loc 20 1291 26 view .LVU1040
 3824 01e2 9FED096B 		vldr.64	d6, .L218+16
 3825              	.LVL185:
2019:Veno-Echo.cpp ****     }
 3826              		.loc 20 2019 16 view .LVU1041
 3827 01e6 DFED167A 		vldr.32	s15, .L218+72
 3828              	.LVL186:
2019:Veno-Echo.cpp ****     }
 3829              		.loc 20 2019 16 view .LVU1042
 3830 01ea 8DE7     		b	.L191
 3831              	.LVL187:
 3832              	.L217:
2019:Veno-Echo.cpp ****     }
 3833              		.loc 20 2019 16 view .LVU1043
 3834 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3835              	.LVL188:
2019:Veno-Echo.cpp ****     }
 3836              		.loc 20 2019 16 view .LVU1044
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 177


 3837 01f0 8AE7     		b	.L191
 3838              	.LVL189:
 3839              	.L211:
2019:Veno-Echo.cpp ****     }
 3840              		.loc 20 2019 16 view .LVU1045
 3841 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
 3842 01f6 8AE7     		b	.L192
 3843              	.L219:
 3844              		.align	3
 3845              	.L218:
 3846 01f8 5C8FC2F5 		.word	4123168604
 3847 01fc 285CEF3F 		.word	1072651304
 3848 0200 7B14AE47 		.word	1202590843
 3849 0204 E17A943F 		.word	1066695393
 3850 0208 00000000 		.word	0
 3851 020c 00000000 		.word	0
 3852 0210 18000000 		.word	.LANCHOR4+24
 3853 0214 00000000 		.word	.LANCHOR7
 3854 0218 00000000 		.word	.LANCHOR52
 3855 021c 00000000 		.word	.LANCHOR53
 3856 0220 00000000 		.word	.LANCHOR54
 3857 0224 00000000 		.word	.LANCHOR51
 3858 0228 00000000 		.word	.LANCHOR55
 3859 022c 00000000 		.word	.LANCHOR56
 3860 0230 6F12833C 		.word	1015222895
 3861 0234 00000000 		.word	.LANCHOR57
 3862 0238 00000000 		.word	.LANCHOR58
 3863 023c 0AD7A33B 		.word	1000593162
 3864 0240 00000000 		.word	0
 3865 0244 00000000 		.word	.LANCHOR47
 3866 0248 00000000 		.word	.LANCHOR48
 3867 024c 00000000 		.word	.LANCHOR35
 3868 0250 00000000 		.word	.LANCHOR36
 3869 0254 00000000 		.word	.LANCHOR49
 3870 0258 00000000 		.word	.LANCHOR50
 3871 025c 00000000 		.word	.LANCHOR37
 3872 0260 00000000 		.word	.LANCHOR38
 3873 0264 00000000 		.word	.LANCHOR15
 3874 0268 00000000 		.word	.LANCHOR16
 3875              	.LBE1240:
 3876              	.LBE1242:
 3877              	.LBE1263:
 3878              	.LBE1268:
 3879              		.cfi_endproc
 3880              	.LFE4321:
 3882              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3883              		.align	1
 3884              		.p2align 2,,3
 3885              		.global	_Z15Update_width_CVv
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv5-d16
 3891              	_Z15Update_width_CVv:
 3892              	.LFB4322:
1342:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3893              		.loc 20 1342 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 178


 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
1343:Veno-Echo.cpp **** }
 3897              		.loc 20 1343 5 view .LVU1047
1342:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3898              		.loc 20 1342 1 is_stmt 0 view .LVU1048
 3899 0000 08B5     		push	{r3, lr}
 3900              		.cfi_def_cfa_offset 8
 3901              		.cfi_offset 3, -8
 3902              		.cfi_offset 14, -4
1343:Veno-Echo.cpp **** }
 3903              		.loc 20 1343 30 view .LVU1049
 3904 0002 0521     		movs	r1, #5
 3905 0004 0348     		ldr	r0, .L222
 3906 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3907              	.LVL190:
1343:Veno-Echo.cpp **** }
 3908              		.loc 20 1343 13 view .LVU1050
 3909 000a 034B     		ldr	r3, .L222+4
 3910 000c 83ED000A 		vstr.32	s0, [r3]
1344:Veno-Echo.cpp **** 
 3911              		.loc 20 1344 1 view .LVU1051
 3912 0010 08BD     		pop	{r3, pc}
 3913              	.L223:
 3914 0012 00BF     		.align	2
 3915              	.L222:
 3916 0014 18000000 		.word	.LANCHOR4+24
 3917 0018 00000000 		.word	.LANCHOR59
 3918              		.cfi_endproc
 3919              	.LFE4322:
 3921              		.section	.text._Z12Update_widthv,"ax",%progbits
 3922              		.align	1
 3923              		.p2align 2,,3
 3924              		.global	_Z12Update_widthv
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv5-d16
 3930              	_Z12Update_widthv:
 3931              	.LFB4323:
1347:Veno-Echo.cpp ****     static bool lastShift{};
 3932              		.loc 20 1347 1 is_stmt 1 view -0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 0
 3935              		@ frame_needed = 0, uses_anonymous_args = 0
1348:Veno-Echo.cpp ****     static bool width_pickup{};
 3936              		.loc 20 1348 5 view .LVU1053
1349:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3937              		.loc 20 1349 5 view .LVU1054
1350:Veno-Echo.cpp **** 
 3938              		.loc 20 1350 5 view .LVU1055
1352:Veno-Echo.cpp **** 
 3939              		.loc 20 1352 5 view .LVU1056
1355:Veno-Echo.cpp **** 
 3940              		.loc 20 1355 5 view .LVU1057
1355:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 179


 3941              		.loc 20 1355 39 is_stmt 0 view .LVU1058
 3942 0000 0722     		movs	r2, #7
 3943 0002 6348     		ldr	r0, .L253
 3944 0004 1146     		mov	r1, r2
1347:Veno-Echo.cpp ****     static bool lastShift{};
 3945              		.loc 20 1347 1 view .LVU1059
 3946 0006 10B5     		push	{r4, lr}
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 4, -8
 3949              		.cfi_offset 14, -4
 3950 0008 2DED028B 		vpush.64	{d8}
 3951              		.cfi_def_cfa_offset 16
 3952              		.cfi_offset 80, -16
 3953              		.cfi_offset 81, -12
1355:Veno-Echo.cpp **** 
 3954              		.loc 20 1355 39 view .LVU1060
 3955 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3956              	.LVL191:
 3957              	.LBB1269:
1357:Veno-Echo.cpp ****     {   
 3958              		.loc 20 1357 9 view .LVU1061
 3959 0010 604B     		ldr	r3, .L253+4
 3960              	.LBE1269:
1355:Veno-Echo.cpp **** 
 3961              		.loc 20 1355 39 view .LVU1062
 3962 0012 B0EE408A 		vmov.f32	s16, s0
 3963              	.LVL192:
1357:Veno-Echo.cpp ****     {   
 3964              		.loc 20 1357 5 is_stmt 1 view .LVU1063
 3965              	.LBB1324:
 3966              	.LBB1270:
1361:Veno-Echo.cpp ****         {
 3967              		.loc 20 1361 19 is_stmt 0 view .LVU1064
 3968 0016 604A     		ldr	r2, .L253+8
 3969              	.LBE1270:
1357:Veno-Echo.cpp ****     {   
 3970              		.loc 20 1357 5 view .LVU1065
 3971 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3972 001a 002B     		cmp	r3, #0
 3973 001c 3ED1     		bne	.L225
 3974              	.LBB1299:
1359:Veno-Echo.cpp ****         //update pickup
 3975              		.loc 20 1359 9 is_stmt 1 view .LVU1066
1361:Veno-Echo.cpp ****         {
 3976              		.loc 20 1361 9 view .LVU1067
 3977 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3978 0020 0029     		cmp	r1, #0
 3979 0022 48D0     		beq	.L226
1363:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3980              		.loc 20 1363 13 view .LVU1068
1364:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3981              		.loc 20 1364 26 is_stmt 0 view .LVU1069
 3982 0024 5D48     		ldr	r0, .L253+12
1365:Veno-Echo.cpp ****         }
 3983              		.loc 20 1365 23 view .LVU1070
 3984 0026 5E49     		ldr	r1, .L253+16
1363:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 180


 3985              		.loc 20 1363 23 view .LVU1071
 3986 0028 1370     		strb	r3, [r2]
1364:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3987              		.loc 20 1364 13 is_stmt 1 view .LVU1072
1364:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3988              		.loc 20 1364 26 is_stmt 0 view .LVU1073
 3989 002a 0370     		strb	r3, [r0]
1365:Veno-Echo.cpp ****         }
 3990              		.loc 20 1365 13 is_stmt 1 view .LVU1074
1365:Veno-Echo.cpp ****         }
 3991              		.loc 20 1365 23 is_stmt 0 view .LVU1075
 3992 002c 81ED000A 		vstr.32	s0, [r1]
 3993              	.L227:
1380:Veno-Echo.cpp **** 
 3994              		.loc 20 1380 9 is_stmt 1 view .LVU1076
 3995              	.LVL193:
1382:Veno-Echo.cpp ****         {
 3996              		.loc 20 1382 9 view .LVU1077
1390:Veno-Echo.cpp ****         }
 3997              		.loc 20 1390 13 view .LVU1078
 3998              	.LBB1271:
 3999              	.LBI1271:
2012:Veno-Echo.cpp **** {
 4000              		.loc 20 2012 7 view .LVU1079
 4001              	.LBB1272:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4002              		.loc 20 2014 5 view .LVU1080
2015:Veno-Echo.cpp **** 
 4003              		.loc 20 2015 5 view .LVU1081
 4004              	.LBE1272:
 4005              	.LBE1271:
1390:Veno-Echo.cpp ****         }
 4006              		.loc 20 1390 32 is_stmt 0 view .LVU1082
 4007 0030 5C4A     		ldr	r2, .L253+20
 4008              	.LBB1276:
 4009              	.LBB1273:
2015:Veno-Echo.cpp **** 
 4010              		.loc 20 2015 39 view .LVU1083
 4011 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2015:Veno-Echo.cpp **** 
 4012              		.loc 20 2015 49 view .LVU1084
 4013 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4014              	.LBE1273:
 4015              	.LBE1276:
1390:Veno-Echo.cpp ****         }
 4016              		.loc 20 1390 32 view .LVU1085
 4017 003a 5B4B     		ldr	r3, .L253+24
 4018              	.LBB1277:
 4019              	.LBB1274:
2015:Veno-Echo.cpp **** 
 4020              		.loc 20 2015 39 view .LVU1086
 4021 003c D2ED007A 		vldr.32	s15, [r2]
2015:Veno-Echo.cpp **** 
 4022              		.loc 20 2015 12 view .LVU1087
 4023 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4024 0044 93ED000A 		vldr.32	s0, [r3]
 4025              	.LVL194:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 181


2015:Veno-Echo.cpp **** 
 4026              		.loc 20 2015 39 view .LVU1088
 4027 0048 77EE677A 		vsub.f32	s15, s14, s15
2015:Veno-Echo.cpp **** 
 4028              		.loc 20 2015 49 view .LVU1089
 4029 004c 77EEC67A 		vsub.f32	s15, s15, s12
2015:Veno-Echo.cpp **** 
 4030              		.loc 20 2015 12 view .LVU1090
 4031 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4032              	.LVL195:
2017:Veno-Echo.cpp ****     {
 4033              		.loc 20 2017 5 is_stmt 1 view .LVU1091
 4034 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4035 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4036 005c 00F19180 		bmi	.L251
2022:Veno-Echo.cpp ****     {
 4037              		.loc 20 2022 5 view .LVU1092
2024:Veno-Echo.cpp ****     }
 4038              		.loc 20 2024 16 is_stmt 0 view .LVU1093
 4039 0060 B4EE470A 		vcmp.f32	s0, s14
 4040 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4041 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4042              	.LVL196:
 4043              	.L233:
2027:Veno-Echo.cpp **** }
 4044              		.loc 20 2027 5 is_stmt 1 view .LVU1094
2027:Veno-Echo.cpp **** }
 4045              		.loc 20 2027 5 is_stmt 0 view .LVU1095
 4046              	.LBE1274:
 4047              	.LBE1277:
1390:Veno-Echo.cpp ****         }
 4048              		.loc 20 1390 32 view .LVU1096
 4049 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4050 0070 0020     		movs	r0, #0
 4051 0072 9FED4E1A 		vldr.32	s2, .L253+28
 4052 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4053              	.LVL197:
 4054              	.L232:
1393:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4055              		.loc 20 1393 13 is_stmt 1 view .LVU1097
 4056              	.LBB1278:
 4057              	.LBI1278:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4058              		.loc 25 135 13 view .LVU1098
 4059              	.LBB1279:
 4060              		.loc 25 137 5 view .LVU1099
 4061              		.loc 25 137 9 is_stmt 0 view .LVU1100
 4062 007a 4D4B     		ldr	r3, .L253+32
 4063 007c 9FED4D7A 		vldr.32	s14, .L253+36
 4064 0080 D3ED007A 		vldr.32	s15, [r3]
 4065              	.LBE1279:
 4066              	.LBE1278:
 4067              	.LBB1282:
 4068              	.LBB1283:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 182


  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4069              		.loc 11 60 42 view .LVU1101
 4070 0084 4C4A     		ldr	r2, .L253+40
 4071              	.LBE1283:
 4072              	.LBE1282:
 4073              	.LBB1285:
 4074              	.LBB1280:
 4075              		.loc 25 137 24 view .LVU1102
 4076 0086 30EE670A 		vsub.f32	s0, s0, s15
 4077              	.LVL198:
 4078              		.loc 25 137 24 view .LVU1103
 4079              	.LBE1280:
 4080              	.LBE1285:
 4081              	.LBE1299:
 4082              	.LBE1324:
1426:Veno-Echo.cpp **** 
 4083              		.loc 20 1426 1 view .LVU1104
 4084 008a BDEC028B 		vldm	sp!, {d8}
 4085              		.cfi_remember_state
 4086              		.cfi_restore 80
 4087              		.cfi_restore 81
 4088              		.cfi_def_cfa_offset 8
 4089              	.LVL199:
 4090              	.LBB1325:
 4091              	.LBB1300:
 4092              	.LBB1286:
 4093              	.LBB1281:
 4094              		.loc 25 137 9 view .LVU1105
 4095 008e E0EE077A 		vfma.f32	s15, s0, s14
 4096 0092 C3ED007A 		vstr.32	s15, [r3]
 4097              	.LVL200:
 4098              		.loc 25 137 9 view .LVU1106
 4099              	.LBE1281:
 4100              	.LBE1286:
1394:Veno-Echo.cpp ****     }
 4101              		.loc 20 1394 13 is_stmt 1 view .LVU1107
 4102              	.LBB1287:
 4103              	.LBI1282:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 183


 4104              		.loc 11 60 17 view .LVU1108
 4105              	.LBB1284:
 4106              		.loc 11 60 37 view .LVU1109
 4107              		.loc 11 60 42 is_stmt 0 view .LVU1110
 4108 0096 C2ED007A 		vstr.32	s15, [r2]
 4109              	.LBE1284:
 4110              	.LBE1287:
 4111              	.LBE1300:
 4112              	.LBE1325:
1426:Veno-Echo.cpp **** 
 4113              		.loc 20 1426 1 view .LVU1111
 4114 009a 10BD     		pop	{r4, pc}
 4115              	.LVL201:
 4116              	.L225:
 4117              		.cfi_restore_state
 4118              	.LBB1326:
 4119              	.LBB1301:
1399:Veno-Echo.cpp **** 
 4120              		.loc 20 1399 9 is_stmt 1 view .LVU1112
1401:Veno-Echo.cpp ****         {
 4121              		.loc 20 1401 9 view .LVU1113
 4122 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4123 009e 002B     		cmp	r3, #0
 4124 00a0 43D1     		bne	.L236
1403:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4125              		.loc 20 1403 13 view .LVU1114
1403:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4126              		.loc 20 1403 23 is_stmt 0 view .LVU1115
 4127 00a2 0124     		movs	r4, #1
1404:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4128              		.loc 20 1404 29 view .LVU1116
 4129 00a4 4548     		ldr	r0, .L253+44
1405:Veno-Echo.cpp ****         }
 4130              		.loc 20 1405 26 view .LVU1117
 4131 00a6 4649     		ldr	r1, .L253+48
1403:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4132              		.loc 20 1403 23 view .LVU1118
 4133 00a8 1470     		strb	r4, [r2]
1404:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4134              		.loc 20 1404 13 is_stmt 1 view .LVU1119
1404:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4135              		.loc 20 1404 29 is_stmt 0 view .LVU1120
 4136 00aa 0370     		strb	r3, [r0]
1405:Veno-Echo.cpp ****         }
 4137              		.loc 20 1405 13 is_stmt 1 view .LVU1121
1405:Veno-Echo.cpp ****         }
 4138              		.loc 20 1405 26 is_stmt 0 view .LVU1122
 4139 00ac 81ED000A 		vstr.32	s0, [r1]
 4140              	.L224:
1405:Veno-Echo.cpp ****         }
 4141              		.loc 20 1405 26 view .LVU1123
 4142              	.LBE1301:
 4143              	.LBE1326:
1426:Veno-Echo.cpp **** 
 4144              		.loc 20 1426 1 view .LVU1124
 4145 00b0 BDEC028B 		vldm	sp!, {d8}
 4146              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 184


 4147              		.cfi_restore 80
 4148              		.cfi_restore 81
 4149              		.cfi_def_cfa_offset 8
 4150 00b4 10BD     		pop	{r4, pc}
 4151              	.L226:
 4152              		.cfi_restore_state
 4153              	.LBB1327:
 4154              	.LBB1321:
1370:Veno-Echo.cpp ****             {
 4155              		.loc 20 1370 13 is_stmt 1 view .LVU1125
1370:Veno-Echo.cpp ****             {
 4156              		.loc 20 1370 16 is_stmt 0 view .LVU1126
 4157 00b6 394B     		ldr	r3, .L253+12
1370:Veno-Echo.cpp ****             {
 4158              		.loc 20 1370 13 view .LVU1127
 4159 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4160 00ba 7AB9     		cbnz	r2, .L228
1372:Veno-Echo.cpp ****                 {
 4161              		.loc 20 1372 17 is_stmt 1 view .LVU1128
 4162              	.LVL202:
 4163              	.LBB1288:
 4164              	.LBI1288:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4165              		.loc 21 75 3 view .LVU1129
 4166              	.LBB1289:
 4167              		.loc 21 76 5 view .LVU1130
 4168              		.loc 21 76 5 is_stmt 0 view .LVU1131
 4169              	.LBE1289:
 4170              	.LBE1288:
1372:Veno-Echo.cpp ****                 {
 4171              		.loc 20 1372 23 view .LVU1132
 4172 00bc 384A     		ldr	r2, .L253+16
1372:Veno-Echo.cpp ****                 {
 4173              		.loc 20 1372 17 view .LVU1133
 4174 00be 9FED417A 		vldr.32	s14, .L253+52
1372:Veno-Echo.cpp ****                 {
 4175              		.loc 20 1372 23 view .LVU1134
 4176 00c2 D2ED007A 		vldr.32	s15, [r2]
 4177 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4178              	.LBB1291:
 4179              	.LBB1290:
 4180              		.loc 21 76 31 view .LVU1135
 4181 00ca F0EEE77A 		vabs.f32	s15, s15
 4182              	.LBE1290:
 4183              	.LBE1291:
1372:Veno-Echo.cpp ****                 {
 4184              		.loc 20 1372 17 view .LVU1136
 4185 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4186 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4187 00d6 ABDD     		ble	.L227
1374:Veno-Echo.cpp ****                 }
 4188              		.loc 20 1374 21 is_stmt 1 view .LVU1137
1374:Veno-Echo.cpp ****                 }
 4189              		.loc 20 1374 34 is_stmt 0 view .LVU1138
 4190 00d8 0122     		movs	r2, #1
 4191 00da 1A70     		strb	r2, [r3]
 4192              	.L228:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 185


1380:Veno-Echo.cpp **** 
 4193              		.loc 20 1380 9 is_stmt 1 view .LVU1139
 4194              	.LVL203:
1382:Veno-Echo.cpp ****         {
 4195              		.loc 20 1382 9 view .LVU1140
1384:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4196              		.loc 20 1384 13 view .LVU1141
 4197              	.LBB1292:
 4198              	.LBI1292:
2012:Veno-Echo.cpp **** {
 4199              		.loc 20 2012 7 view .LVU1142
 4200              	.LBB1293:
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4201              		.loc 20 2014 5 view .LVU1143
2015:Veno-Echo.cpp **** 
 4202              		.loc 20 2015 5 view .LVU1144
 4203              	.LBE1293:
 4204              	.LBE1292:
1384:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4205              		.loc 20 1384 32 is_stmt 0 view .LVU1145
 4206 00dc 314B     		ldr	r3, .L253+20
 4207              	.LBB1296:
 4208              	.LBB1294:
2015:Veno-Echo.cpp **** 
 4209              		.loc 20 2015 39 view .LVU1146
 4210 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2015:Veno-Echo.cpp **** 
 4211              		.loc 20 2015 49 view .LVU1147
 4212 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2015:Veno-Echo.cpp **** 
 4213              		.loc 20 2015 39 view .LVU1148
 4214 00e6 D3ED007A 		vldr.32	s15, [r3]
2015:Veno-Echo.cpp **** 
 4215              		.loc 20 2015 12 view .LVU1149
 4216 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4217 00ee B0EE480A 		vmov.f32	s0, s16
 4218              	.LVL204:
2015:Veno-Echo.cpp **** 
 4219              		.loc 20 2015 39 view .LVU1150
 4220 00f2 77EE677A 		vsub.f32	s15, s14, s15
2015:Veno-Echo.cpp **** 
 4221              		.loc 20 2015 49 view .LVU1151
 4222 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2015:Veno-Echo.cpp **** 
 4223              		.loc 20 2015 12 view .LVU1152
 4224 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4225              	.LVL205:
2017:Veno-Echo.cpp ****     {
 4226              		.loc 20 2017 5 is_stmt 1 view .LVU1153
 4227 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4228 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4229 0106 3FD4     		bmi	.L252
2022:Veno-Echo.cpp ****     {
 4230              		.loc 20 2022 5 view .LVU1154
2024:Veno-Echo.cpp ****     }
 4231              		.loc 20 2024 16 is_stmt 0 view .LVU1155
 4232 0108 B4EE470A 		vcmp.f32	s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 186


 4233 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4234 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4235              	.LVL206:
 4236              	.L230:
2027:Veno-Echo.cpp **** }
 4237              		.loc 20 2027 5 is_stmt 1 view .LVU1156
2027:Veno-Echo.cpp **** }
 4238              		.loc 20 2027 5 is_stmt 0 view .LVU1157
 4239              	.LBE1294:
 4240              	.LBE1296:
1384:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4241              		.loc 20 1384 32 view .LVU1158
 4242 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4243 0118 0020     		movs	r0, #0
 4244 011a 9FED241A 		vldr.32	s2, .L253+28
 4245 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4246              	.LVL207:
1385:Veno-Echo.cpp ****         }
 4247              		.loc 20 1385 24 view .LVU1159
 4248 0122 214B     		ldr	r3, .L253+24
 4249              	.LVL208:
1385:Veno-Echo.cpp ****         }
 4250              		.loc 20 1385 13 is_stmt 1 view .LVU1160
1385:Veno-Echo.cpp ****         }
 4251              		.loc 20 1385 24 is_stmt 0 view .LVU1161
 4252 0124 83ED008A 		vstr.32	s16, [r3]
 4253 0128 A7E7     		b	.L232
 4254              	.LVL209:
 4255              	.L236:
1385:Veno-Echo.cpp ****         }
 4256              		.loc 20 1385 24 view .LVU1162
 4257              	.LBE1321:
 4258              	.LBB1322:
1410:Veno-Echo.cpp ****             {
 4259              		.loc 20 1410 13 is_stmt 1 view .LVU1163
1410:Veno-Echo.cpp ****             {
 4260              		.loc 20 1410 16 is_stmt 0 view .LVU1164
 4261 012a 244B     		ldr	r3, .L253+44
1410:Veno-Echo.cpp ****             {
 4262              		.loc 20 1410 13 view .LVU1165
 4263 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4264 012e 7AB9     		cbnz	r2, .L238
1412:Veno-Echo.cpp ****                 {
 4265              		.loc 20 1412 17 is_stmt 1 view .LVU1166
 4266              	.LVL210:
 4267              	.LBB1302:
 4268              	.LBI1302:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4269              		.loc 21 75 3 view .LVU1167
 4270              	.LBB1303:
 4271              		.loc 21 76 5 view .LVU1168
 4272              		.loc 21 76 5 is_stmt 0 view .LVU1169
 4273              	.LBE1303:
 4274              	.LBE1302:
1412:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1412 23 view .LVU1170
 4276 0130 234A     		ldr	r2, .L253+48
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 187


1412:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1412 17 view .LVU1171
 4278 0132 9FED247A 		vldr.32	s14, .L253+52
1412:Veno-Echo.cpp ****                 {
 4279              		.loc 20 1412 23 view .LVU1172
 4280 0136 D2ED007A 		vldr.32	s15, [r2]
 4281 013a 70EE677A 		vsub.f32	s15, s0, s15
 4282              	.LBB1305:
 4283              	.LBB1304:
 4284              		.loc 21 76 31 view .LVU1173
 4285 013e F0EEE77A 		vabs.f32	s15, s15
 4286              	.LBE1304:
 4287              	.LBE1305:
1412:Veno-Echo.cpp ****                 {
 4288              		.loc 20 1412 17 view .LVU1174
 4289 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4290 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4291 014a B1DD     		ble	.L224
1414:Veno-Echo.cpp ****                 }
 4292              		.loc 20 1414 21 is_stmt 1 view .LVU1175
1414:Veno-Echo.cpp ****                 }
 4293              		.loc 20 1414 37 is_stmt 0 view .LVU1176
 4294 014c 0122     		movs	r2, #1
 4295 014e 1A70     		strb	r2, [r3]
 4296              	.L238:
1419:Veno-Echo.cpp ****         {
 4297              		.loc 20 1419 9 is_stmt 1 view .LVU1177
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4298              		.loc 20 1421 13 view .LVU1178
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4299              		.loc 20 1421 29 is_stmt 0 view .LVU1179
 4300 0150 B0EE480A 		vmov.f32	s0, s16
 4301              	.LVL211:
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4302              		.loc 20 1421 29 view .LVU1180
 4303 0154 0020     		movs	r0, #0
 4304 0156 9FED1C1A 		vldr.32	s2, .L253+56
 4305 015a DFED140A 		vldr.32	s1, .L253+28
 4306 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4307              	.LVL212:
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4308              		.loc 20 1421 22 view .LVU1181
 4309 0162 1A48     		ldr	r0, .L253+60
 4310              	.LBB1306:
 4311              	.LBB1307:
 4312              	.LBB1308:
 4313              	.LBB1309:
 4314              	.LBB1310:
 4315              		.loc 22 397 18 view .LVU1182
 4316 0164 0122     		movs	r2, #1
 4317              	.LBE1310:
 4318              	.LBE1309:
 4319              	.LBE1308:
 4320              	.LBE1307:
 4321              	.LBE1306:
1422:Veno-Echo.cpp ****             save_flag = true;
 4322              		.loc 20 1422 34 view .LVU1183
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 188


 4323 0166 1A49     		ldr	r1, .L253+64
 4324              	.LBB1319:
 4325              	.LBB1317:
 4326              	.LBB1315:
 4327              	.LBB1313:
 4328              	.LBB1311:
 4329              		.loc 22 397 18 view .LVU1184
 4330 0168 1A4B     		ldr	r3, .L253+68
 4331              	.LBE1311:
 4332              	.LBE1313:
 4333              	.LBE1315:
 4334              	.LBE1317:
 4335              	.LBE1319:
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4336              		.loc 20 1421 22 view .LVU1185
 4337 016a 80ED000A 		vstr.32	s0, [r0]
1422:Veno-Echo.cpp ****             save_flag = true;
 4338              		.loc 20 1422 13 is_stmt 1 view .LVU1186
1422:Veno-Echo.cpp ****             save_flag = true;
 4339              		.loc 20 1422 34 is_stmt 0 view .LVU1187
 4340 016e 81ED020A 		vstr.32	s0, [r1, #8]
1423:Veno-Echo.cpp ****         }
 4341              		.loc 20 1423 13 is_stmt 1 view .LVU1188
 4342              	.LVL213:
 4343              	.LBB1320:
 4344              	.LBI1306:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4345              		.loc 23 80 5 view .LVU1189
 4346              	.LBB1318:
 4347              		.loc 23 81 7 view .LVU1190
 4348              	.LBB1316:
 4349              	.LBI1308:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4350              		.loc 22 288 7 view .LVU1191
 4351              	.LBB1314:
 4352              	.LBI1309:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4353              		.loc 22 390 7 view .LVU1192
 4354              	.LBB1312:
 4355              		.loc 22 397 18 is_stmt 0 view .LVU1193
 4356 0172 BFF35B8F 		dmb	ish
 4357 0176 1A70     		strb	r2, [r3]
 4358 0178 BFF35B8F 		dmb	ish
 4359              	.LVL214:
 4360              		.loc 22 397 18 view .LVU1194
 4361              	.LBE1312:
 4362              	.LBE1314:
 4363              	.LBE1316:
 4364              	.LBE1318:
 4365              	.LBE1320:
 4366              	.LBE1322:
 4367              	.LBE1327:
1426:Veno-Echo.cpp **** 
 4368              		.loc 20 1426 1 view .LVU1195
 4369 017c BDEC028B 		vldm	sp!, {d8}
 4370              		.cfi_remember_state
 4371              		.cfi_restore 80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 189


 4372              		.cfi_restore 81
 4373              		.cfi_def_cfa_offset 8
 4374              	.LVL215:
1426:Veno-Echo.cpp **** 
 4375              		.loc 20 1426 1 view .LVU1196
 4376 0180 10BD     		pop	{r4, pc}
 4377              	.LVL216:
 4378              	.L251:
 4379              		.cfi_restore_state
 4380              	.LBB1328:
 4381              	.LBB1323:
 4382              	.LBB1297:
 4383              	.LBB1275:
2019:Veno-Echo.cpp ****     }
 4384              		.loc 20 2019 16 view .LVU1197
 4385 0182 9FED0A0A 		vldr.32	s0, .L253+28
 4386              	.LVL217:
2019:Veno-Echo.cpp ****     }
 4387              		.loc 20 2019 16 view .LVU1198
 4388 0186 71E7     		b	.L233
 4389              	.LVL218:
 4390              	.L252:
2019:Veno-Echo.cpp ****     }
 4391              		.loc 20 2019 16 view .LVU1199
 4392              	.LBE1275:
 4393              	.LBE1297:
 4394              	.LBB1298:
 4395              	.LBB1295:
 4396 0188 9FED080A 		vldr.32	s0, .L253+28
 4397              	.LVL219:
2019:Veno-Echo.cpp ****     }
 4398              		.loc 20 2019 16 view .LVU1200
 4399 018c C2E7     		b	.L230
 4400              	.L254:
 4401 018e 00BF     		.align	2
 4402              	.L253:
 4403 0190 18000000 		.word	.LANCHOR4+24
 4404 0194 00000000 		.word	.LANCHOR7
 4405 0198 00000000 		.word	.LANCHOR60
 4406 019c 00000000 		.word	.LANCHOR61
 4407 01a0 00000000 		.word	.LANCHOR62
 4408 01a4 00000000 		.word	.LANCHOR59
 4409 01a8 00000000 		.word	.LANCHOR63
 4410 01ac 00000000 		.word	0
 4411 01b0 00000000 		.word	.LANCHOR64
 4412 01b4 6F12033D 		.word	1023611503
 4413 01b8 00000000 		.word	.LANCHOR65
 4414 01bc 00000000 		.word	.LANCHOR66
 4415 01c0 00000000 		.word	.LANCHOR67
 4416 01c4 0AD7A33B 		.word	1000593162
 4417 01c8 0000FA43 		.word	1140457472
 4418 01cc 00000000 		.word	.LANCHOR68
 4419 01d0 00000000 		.word	.LANCHOR15
 4420 01d4 00000000 		.word	.LANCHOR16
 4421              	.LBE1295:
 4422              	.LBE1298:
 4423              	.LBE1323:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 190


 4424              	.LBE1328:
 4425              		.cfi_endproc
 4426              	.LFE4323:
 4428              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4429              		.align	1
 4430              		.p2align 2,,3
 4431              		.global	_Z20Update_crossfeedbackv
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
 4435              		.fpu fpv5-d16
 4437              	_Z20Update_crossfeedbackv:
 4438              	.LFB4324:
1429:Veno-Echo.cpp ****     static bool lastShift{};
 4439              		.loc 20 1429 1 is_stmt 1 view -0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 0
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
1430:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4443              		.loc 20 1430 5 view .LVU1202
1431:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4444              		.loc 20 1431 5 view .LVU1203
1432:Veno-Echo.cpp **** 
 4445              		.loc 20 1432 5 view .LVU1204
1434:Veno-Echo.cpp **** 
 4446              		.loc 20 1434 5 view .LVU1205
1437:Veno-Echo.cpp **** 
 4447              		.loc 20 1437 5 view .LVU1206
1437:Veno-Echo.cpp **** 
 4448              		.loc 20 1437 47 is_stmt 0 view .LVU1207
 4449 0000 0022     		movs	r2, #0
 4450 0002 0721     		movs	r1, #7
 4451 0004 4548     		ldr	r0, .L270
1429:Veno-Echo.cpp ****     static bool lastShift{};
 4452              		.loc 20 1429 1 view .LVU1208
 4453 0006 10B5     		push	{r4, lr}
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 4, -8
 4456              		.cfi_offset 14, -4
 4457 0008 2DED028B 		vpush.64	{d8}
 4458              		.cfi_def_cfa_offset 16
 4459              		.cfi_offset 80, -16
 4460              		.cfi_offset 81, -12
1437:Veno-Echo.cpp **** 
 4461              		.loc 20 1437 47 view .LVU1209
 4462 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4463              	.LVL220:
 4464              	.LBB1329:
1439:Veno-Echo.cpp ****     {   
 4465              		.loc 20 1439 9 view .LVU1210
 4466 0010 434B     		ldr	r3, .L270+4
 4467              	.LBE1329:
1437:Veno-Echo.cpp **** 
 4468              		.loc 20 1437 47 view .LVU1211
 4469 0012 B0EE408A 		vmov.f32	s16, s0
 4470              	.LVL221:
1439:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 191


 4471              		.loc 20 1439 5 is_stmt 1 view .LVU1212
 4472              	.LBB1367:
 4473              	.LBB1330:
1443:Veno-Echo.cpp ****         {
 4474              		.loc 20 1443 19 is_stmt 0 view .LVU1213
 4475 0016 434A     		ldr	r2, .L270+8
 4476              	.LBE1330:
1439:Veno-Echo.cpp ****     {   
 4477              		.loc 20 1439 5 view .LVU1214
 4478 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 001a FBB9     		cbnz	r3, .L256
 4480              	.LBB1339:
1441:Veno-Echo.cpp ****         //update pickup
 4481              		.loc 20 1441 9 is_stmt 1 view .LVU1215
1443:Veno-Echo.cpp ****         {
 4482              		.loc 20 1443 9 view .LVU1216
 4483 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4484 001e 49B3     		cbz	r1, .L257
1445:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4485              		.loc 20 1445 13 view .LVU1217
1446:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4486              		.loc 20 1446 34 is_stmt 0 view .LVU1218
 4487 0020 4148     		ldr	r0, .L270+12
1447:Veno-Echo.cpp ****         }
 4488              		.loc 20 1447 31 view .LVU1219
 4489 0022 4249     		ldr	r1, .L270+16
1445:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4490              		.loc 20 1445 23 view .LVU1220
 4491 0024 1370     		strb	r3, [r2]
1446:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4492              		.loc 20 1446 13 is_stmt 1 view .LVU1221
1446:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4493              		.loc 20 1446 34 is_stmt 0 view .LVU1222
 4494 0026 0370     		strb	r3, [r0]
1447:Veno-Echo.cpp ****         }
 4495              		.loc 20 1447 13 is_stmt 1 view .LVU1223
1447:Veno-Echo.cpp ****         }
 4496              		.loc 20 1447 31 is_stmt 0 view .LVU1224
 4497 0028 81ED000A 		vstr.32	s0, [r1]
 4498              	.L258:
1460:Veno-Echo.cpp **** 
 4499              		.loc 20 1460 9 is_stmt 1 view .LVU1225
 4500              	.LVL222:
1462:Veno-Echo.cpp ****         {
 4501              		.loc 20 1462 9 view .LVU1226
1470:Veno-Echo.cpp ****         }
 4502              		.loc 20 1470 13 view .LVU1227
1470:Veno-Echo.cpp ****         }
 4503              		.loc 20 1470 40 is_stmt 0 view .LVU1228
 4504 002c 404B     		ldr	r3, .L270+20
 4505 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4506 0032 0020     		movs	r0, #0
 4507 0034 DFED3F0A 		vldr.32	s1, .L270+24
 4508 0038 93ED000A 		vldr.32	s0, [r3]
 4509              	.LVL223:
1470:Veno-Echo.cpp ****         }
 4510              		.loc 20 1470 40 view .LVU1229
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 192


 4511 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4512              	.LVL224:
 4513              	.L266:
1473:Veno-Echo.cpp ****     }
 4514              		.loc 20 1473 9 is_stmt 1 view .LVU1230
 4515              	.LBB1331:
 4516              	.LBI1331:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4517              		.loc 25 135 13 view .LVU1231
 4518              	.LBB1332:
 4519              		.loc 25 137 5 view .LVU1232
 4520              		.loc 25 137 9 is_stmt 0 view .LVU1233
 4521 0040 3D4B     		ldr	r3, .L270+28
 4522 0042 9FED3E7A 		vldr.32	s14, .L270+32
 4523 0046 D3ED007A 		vldr.32	s15, [r3]
 4524              		.loc 25 137 24 view .LVU1234
 4525 004a 30EE670A 		vsub.f32	s0, s0, s15
 4526              	.LVL225:
 4527              		.loc 25 137 24 view .LVU1235
 4528              	.LBE1332:
 4529              	.LBE1331:
 4530              	.LBE1339:
 4531              	.LBE1367:
1505:Veno-Echo.cpp **** 
 4532              		.loc 20 1505 1 view .LVU1236
 4533 004e BDEC028B 		vldm	sp!, {d8}
 4534              		.cfi_remember_state
 4535              		.cfi_restore 80
 4536              		.cfi_restore 81
 4537              		.cfi_def_cfa_offset 8
 4538              	.LVL226:
 4539              	.LBB1368:
 4540              	.LBB1340:
 4541              	.LBB1334:
 4542              	.LBB1333:
 4543              		.loc 25 137 9 view .LVU1237
 4544 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4545 0056 C3ED007A 		vstr.32	s15, [r3]
 4546              	.LBE1333:
 4547              	.LBE1334:
 4548              	.LBE1340:
 4549              	.LBE1368:
1505:Veno-Echo.cpp **** 
 4550              		.loc 20 1505 1 view .LVU1238
 4551 005a 10BD     		pop	{r4, pc}
 4552              	.LVL227:
 4553              	.L256:
 4554              		.cfi_restore_state
 4555              	.LBB1369:
 4556              	.LBB1341:
1477:Veno-Echo.cpp **** 
 4557              		.loc 20 1477 9 is_stmt 1 view .LVU1239
1479:Veno-Echo.cpp ****         {
 4558              		.loc 20 1479 9 view .LVU1240
 4559 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4560 005e 4BBB     		cbnz	r3, .L262
1481:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 193


 4561              		.loc 20 1481 13 view .LVU1241
1481:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4562              		.loc 20 1481 23 is_stmt 0 view .LVU1242
 4563 0060 0124     		movs	r4, #1
1482:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4564              		.loc 20 1482 28 view .LVU1243
 4565 0062 3748     		ldr	r0, .L270+36
1483:Veno-Echo.cpp ****         }
 4566              		.loc 20 1483 25 view .LVU1244
 4567 0064 3749     		ldr	r1, .L270+40
1481:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4568              		.loc 20 1481 23 view .LVU1245
 4569 0066 1470     		strb	r4, [r2]
1482:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4570              		.loc 20 1482 13 is_stmt 1 view .LVU1246
1482:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4571              		.loc 20 1482 28 is_stmt 0 view .LVU1247
 4572 0068 0370     		strb	r3, [r0]
1483:Veno-Echo.cpp ****         }
 4573              		.loc 20 1483 13 is_stmt 1 view .LVU1248
1483:Veno-Echo.cpp ****         }
 4574              		.loc 20 1483 25 is_stmt 0 view .LVU1249
 4575 006a 81ED000A 		vstr.32	s0, [r1]
 4576              	.L255:
1483:Veno-Echo.cpp ****         }
 4577              		.loc 20 1483 25 view .LVU1250
 4578              	.LBE1341:
 4579              	.LBE1369:
1505:Veno-Echo.cpp **** 
 4580              		.loc 20 1505 1 view .LVU1251
 4581 006e BDEC028B 		vldm	sp!, {d8}
 4582              		.cfi_remember_state
 4583              		.cfi_restore 80
 4584              		.cfi_restore 81
 4585              		.cfi_def_cfa_offset 8
 4586 0072 10BD     		pop	{r4, pc}
 4587              	.L257:
 4588              		.cfi_restore_state
 4589              	.LBB1370:
 4590              	.LBB1365:
1452:Veno-Echo.cpp ****             {
 4591              		.loc 20 1452 13 is_stmt 1 view .LVU1252
1452:Veno-Echo.cpp ****             {
 4592              		.loc 20 1452 16 is_stmt 0 view .LVU1253
 4593 0074 2C4B     		ldr	r3, .L270+12
1452:Veno-Echo.cpp ****             {
 4594              		.loc 20 1452 13 view .LVU1254
 4595 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4596 0078 7AB9     		cbnz	r2, .L259
1454:Veno-Echo.cpp ****                 {
 4597              		.loc 20 1454 17 is_stmt 1 view .LVU1255
 4598              	.LVL228:
 4599              	.LBB1335:
 4600              	.LBI1335:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4601              		.loc 21 75 3 view .LVU1256
 4602              	.LBB1336:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 194


 4603              		.loc 21 76 5 view .LVU1257
 4604              		.loc 21 76 5 is_stmt 0 view .LVU1258
 4605              	.LBE1336:
 4606              	.LBE1335:
1454:Veno-Echo.cpp ****                 {
 4607              		.loc 20 1454 23 view .LVU1259
 4608 007a 2C4A     		ldr	r2, .L270+16
1454:Veno-Echo.cpp ****                 {
 4609              		.loc 20 1454 17 view .LVU1260
 4610 007c 9FED327A 		vldr.32	s14, .L270+44
1454:Veno-Echo.cpp ****                 {
 4611              		.loc 20 1454 23 view .LVU1261
 4612 0080 D2ED007A 		vldr.32	s15, [r2]
 4613 0084 70EE677A 		vsub.f32	s15, s0, s15
 4614              	.LBB1338:
 4615              	.LBB1337:
 4616              		.loc 21 76 31 view .LVU1262
 4617 0088 F0EEE77A 		vabs.f32	s15, s15
 4618              	.LBE1337:
 4619              	.LBE1338:
1454:Veno-Echo.cpp ****                 {
 4620              		.loc 20 1454 17 view .LVU1263
 4621 008c F4EEC77A 		vcmpe.f32	s15, s14
 4622 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4623 0094 CADD     		ble	.L258
1456:Veno-Echo.cpp ****                 }
 4624              		.loc 20 1456 21 is_stmt 1 view .LVU1264
1456:Veno-Echo.cpp ****                 }
 4625              		.loc 20 1456 42 is_stmt 0 view .LVU1265
 4626 0096 0122     		movs	r2, #1
 4627 0098 1A70     		strb	r2, [r3]
 4628              	.L259:
1460:Veno-Echo.cpp **** 
 4629              		.loc 20 1460 9 is_stmt 1 view .LVU1266
 4630              	.LVL229:
1462:Veno-Echo.cpp ****         {
 4631              		.loc 20 1462 9 view .LVU1267
1464:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4632              		.loc 20 1464 13 view .LVU1268
1464:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4633              		.loc 20 1464 40 is_stmt 0 view .LVU1269
 4634 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4635 009e 0020     		movs	r0, #0
 4636 00a0 B0EE480A 		vmov.f32	s0, s16
 4637              	.LVL230:
1464:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4638              		.loc 20 1464 40 view .LVU1270
 4639 00a4 DFED230A 		vldr.32	s1, .L270+24
 4640 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4641              	.LVL231:
1465:Veno-Echo.cpp ****         }
 4642              		.loc 20 1465 32 view .LVU1271
 4643 00ac 204B     		ldr	r3, .L270+20
 4644              	.LVL232:
1465:Veno-Echo.cpp ****         }
 4645              		.loc 20 1465 13 is_stmt 1 view .LVU1272
1465:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 195


 4646              		.loc 20 1465 32 is_stmt 0 view .LVU1273
 4647 00ae 83ED008A 		vstr.32	s16, [r3]
 4648 00b2 C5E7     		b	.L266
 4649              	.LVL233:
 4650              	.L262:
1465:Veno-Echo.cpp ****         }
 4651              		.loc 20 1465 32 view .LVU1274
 4652              	.LBE1365:
 4653              	.LBB1366:
1488:Veno-Echo.cpp ****             {
 4654              		.loc 20 1488 13 is_stmt 1 view .LVU1275
1488:Veno-Echo.cpp ****             {
 4655              		.loc 20 1488 16 is_stmt 0 view .LVU1276
 4656 00b4 224B     		ldr	r3, .L270+36
1488:Veno-Echo.cpp ****             {
 4657              		.loc 20 1488 13 view .LVU1277
 4658 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4659 00b8 7AB9     		cbnz	r2, .L264
1490:Veno-Echo.cpp ****                 {
 4660              		.loc 20 1490 17 is_stmt 1 view .LVU1278
 4661              	.LVL234:
 4662              	.LBB1342:
 4663              	.LBI1342:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4664              		.loc 21 75 3 view .LVU1279
 4665              	.LBB1343:
 4666              		.loc 21 76 5 view .LVU1280
 4667              		.loc 21 76 5 is_stmt 0 view .LVU1281
 4668              	.LBE1343:
 4669              	.LBE1342:
1490:Veno-Echo.cpp ****                 {
 4670              		.loc 20 1490 23 view .LVU1282
 4671 00ba 224A     		ldr	r2, .L270+40
1490:Veno-Echo.cpp ****                 {
 4672              		.loc 20 1490 17 view .LVU1283
 4673 00bc 9FED227A 		vldr.32	s14, .L270+44
1490:Veno-Echo.cpp ****                 {
 4674              		.loc 20 1490 23 view .LVU1284
 4675 00c0 D2ED007A 		vldr.32	s15, [r2]
 4676 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4677              	.LBB1345:
 4678              	.LBB1344:
 4679              		.loc 21 76 31 view .LVU1285
 4680 00c8 F0EEE77A 		vabs.f32	s15, s15
 4681              	.LBE1344:
 4682              	.LBE1345:
1490:Veno-Echo.cpp ****                 {
 4683              		.loc 20 1490 17 view .LVU1286
 4684 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4685 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4686 00d4 CBDD     		ble	.L255
1492:Veno-Echo.cpp ****                 }
 4687              		.loc 20 1492 21 is_stmt 1 view .LVU1287
1492:Veno-Echo.cpp ****                 }
 4688              		.loc 20 1492 36 is_stmt 0 view .LVU1288
 4689 00d6 0122     		movs	r2, #1
 4690 00d8 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 196


 4691              	.L264:
1497:Veno-Echo.cpp ****         {
 4692              		.loc 20 1497 9 is_stmt 1 view .LVU1289
 4693              	.LBB1346:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4694              		.loc 20 1499 13 view .LVU1290
 4695              	.LBB1347:
 4696              	.LBB1348:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4697              		.loc 9 60 20 is_stmt 0 view .LVU1291
 4698 00da 1C4C     		ldr	r4, .L270+48
 4699              	.LBE1348:
 4700              	.LBE1347:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 197


 4701              		.loc 20 1499 32 view .LVU1292
 4702 00dc B0EE480A 		vmov.f32	s0, s16
 4703              	.LVL235:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4704              		.loc 20 1499 32 view .LVU1293
 4705 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4706 00e4 0020     		movs	r0, #0
 4707 00e6 DFED1A0A 		vldr.32	s1, .L270+52
 4708 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4709              	.LVL236:
 4710              	.LBB1352:
 4711              	.LBB1349:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4712              		.loc 9 61 34 view .LVU1294
 4713 00ee 2046     		mov	r0, r4
 4714              	.LBE1349:
 4715              	.LBE1352:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4716              		.loc 20 1499 32 view .LVU1295
 4717 00f0 B0EE408A 		vmov.f32	s16, s0
 4718              	.LVL237:
1500:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4719              		.loc 20 1500 13 is_stmt 1 view .LVU1296
 4720              	.LBB1353:
 4721              	.LBI1347:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4722              		.loc 9 58 17 view .LVU1297
 4723              	.LBB1350:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4724              		.loc 9 60 9 view .LVU1298
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4725              		.loc 9 60 20 is_stmt 0 view .LVU1299
 4726 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4727              		.loc 9 61 9 is_stmt 1 view .LVU1300
 4728              		.loc 9 61 34 is_stmt 0 view .LVU1301
 4729 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4730              	.LVL238:
 4731              		.loc 9 61 34 view .LVU1302
 4732              	.LBE1350:
 4733              	.LBE1353:
1501:Veno-Echo.cpp ****             save_flag = true;
 4734              		.loc 20 1501 33 view .LVU1303
 4735 00fc 1549     		ldr	r1, .L270+56
 4736              	.LBB1354:
 4737              	.LBB1355:
 4738              	.LBB1356:
 4739              	.LBB1357:
 4740              	.LBB1358:
 4741              		.loc 22 397 18 view .LVU1304
 4742 00fe 164B     		ldr	r3, .L270+60
 4743 0100 0122     		movs	r2, #1
 4744              	.LBE1358:
 4745              	.LBE1357:
 4746              	.LBE1356:
 4747              	.LBE1355:
 4748              	.LBE1354:
1501:Veno-Echo.cpp ****             save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 198


 4749              		.loc 20 1501 33 view .LVU1305
 4750 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4751              	.LBB1363:
 4752              	.LBB1351:
 4753              		.loc 9 61 20 view .LVU1306
 4754 0106 84ED060A 		vstr.32	s0, [r4, #24]
 4755              	.LVL239:
 4756              		.loc 9 61 20 view .LVU1307
 4757              	.LBE1351:
 4758              	.LBE1363:
1501:Veno-Echo.cpp ****             save_flag = true;
 4759              		.loc 20 1501 13 is_stmt 1 view .LVU1308
1502:Veno-Echo.cpp ****         }
 4760              		.loc 20 1502 13 view .LVU1309
 4761              	.LBB1364:
 4762              	.LBI1354:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4763              		.loc 23 80 5 view .LVU1310
 4764              	.LBB1362:
 4765              		.loc 23 81 7 view .LVU1311
 4766              	.LBB1361:
 4767              	.LBI1356:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4768              		.loc 22 288 7 view .LVU1312
 4769              	.LBB1360:
 4770              	.LBI1357:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4771              		.loc 22 390 7 view .LVU1313
 4772              	.LBB1359:
 4773              		.loc 22 397 18 is_stmt 0 view .LVU1314
 4774 010a BFF35B8F 		dmb	ish
 4775 010e 1A70     		strb	r2, [r3]
 4776 0110 BFF35B8F 		dmb	ish
 4777              	.LVL240:
 4778              		.loc 22 397 18 view .LVU1315
 4779              	.LBE1359:
 4780              	.LBE1360:
 4781              	.LBE1361:
 4782              	.LBE1362:
 4783              	.LBE1364:
 4784              	.LBE1346:
 4785              	.LBE1366:
 4786              	.LBE1370:
1505:Veno-Echo.cpp **** 
 4787              		.loc 20 1505 1 view .LVU1316
 4788 0114 BDEC028B 		vldm	sp!, {d8}
 4789              		.cfi_restore 80
 4790              		.cfi_restore 81
 4791              		.cfi_def_cfa_offset 8
 4792              	.LVL241:
1505:Veno-Echo.cpp **** 
 4793              		.loc 20 1505 1 view .LVU1317
 4794 0118 10BD     		pop	{r4, pc}
 4795              	.L271:
 4796 011a 00BF     		.align	2
 4797              	.L270:
 4798 011c 18000000 		.word	.LANCHOR4+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 199


 4799 0120 00000000 		.word	.LANCHOR7
 4800 0124 00000000 		.word	.LANCHOR69
 4801 0128 00000000 		.word	.LANCHOR70
 4802 012c 00000000 		.word	.LANCHOR71
 4803 0130 00000000 		.word	.LANCHOR75
 4804 0134 00000000 		.word	0
 4805 0138 00000000 		.word	.LANCHOR72
 4806 013c 6F12033D 		.word	1023611503
 4807 0140 00000000 		.word	.LANCHOR73
 4808 0144 00000000 		.word	.LANCHOR74
 4809 0148 0AD7A33B 		.word	1000593162
 4810 014c 00000000 		.word	.LANCHOR76
 4811 0150 CDCCCC3D 		.word	1036831949
 4812 0154 00000000 		.word	.LANCHOR15
 4813 0158 00000000 		.word	.LANCHOR16
 4814              		.cfi_endproc
 4815              	.LFE4324:
 4817              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4818              		.align	1
 4819              		.p2align 2,,3
 4820              		.global	_Z18Update_filterXfadev
 4821              		.syntax unified
 4822              		.thumb
 4823              		.thumb_func
 4824              		.fpu fpv5-d16
 4826              	_Z18Update_filterXfadev:
 4827              	.LFB4325:
1508:Veno-Echo.cpp ****     static bool lastShift{};
 4828              		.loc 20 1508 1 is_stmt 1 view -0
 4829              		.cfi_startproc
 4830              		@ args = 0, pretend = 0, frame = 0
 4831              		@ frame_needed = 0, uses_anonymous_args = 0
1509:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4832              		.loc 20 1509 5 view .LVU1319
1510:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4833              		.loc 20 1510 5 view .LVU1320
1511:Veno-Echo.cpp **** 
 4834              		.loc 20 1511 5 view .LVU1321
1513:Veno-Echo.cpp **** 
 4835              		.loc 20 1513 5 view .LVU1322
1516:Veno-Echo.cpp **** 
 4836              		.loc 20 1516 5 view .LVU1323
1516:Veno-Echo.cpp **** 
 4837              		.loc 20 1516 45 is_stmt 0 view .LVU1324
 4838 0000 0322     		movs	r2, #3
 4839 0002 0721     		movs	r1, #7
 4840 0004 4648     		ldr	r0, .L294
1508:Veno-Echo.cpp ****     static bool lastShift{};
 4841              		.loc 20 1508 1 view .LVU1325
 4842 0006 10B5     		push	{r4, lr}
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
 4846 0008 2DED028B 		vpush.64	{d8}
 4847              		.cfi_def_cfa_offset 16
 4848              		.cfi_offset 80, -16
 4849              		.cfi_offset 81, -12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 200


1516:Veno-Echo.cpp **** 
 4850              		.loc 20 1516 45 view .LVU1326
 4851 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4852              	.LVL242:
 4853              	.LBB1371:
1518:Veno-Echo.cpp ****     {   
 4854              		.loc 20 1518 9 view .LVU1327
 4855 0010 444B     		ldr	r3, .L294+4
 4856              	.LBE1371:
1516:Veno-Echo.cpp **** 
 4857              		.loc 20 1516 45 view .LVU1328
 4858 0012 B0EE408A 		vmov.f32	s16, s0
 4859              	.LVL243:
1518:Veno-Echo.cpp ****     {   
 4860              		.loc 20 1518 5 is_stmt 1 view .LVU1329
 4861              	.LBB1401:
 4862              	.LBB1372:
1522:Veno-Echo.cpp ****         {
 4863              		.loc 20 1522 19 is_stmt 0 view .LVU1330
 4864 0016 444A     		ldr	r2, .L294+8
 4865              	.LBE1372:
1518:Veno-Echo.cpp ****     {   
 4866              		.loc 20 1518 5 view .LVU1331
 4867 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4868 001a FBB9     		cbnz	r3, .L273
 4869              	.LBB1381:
1520:Veno-Echo.cpp ****         //update pickup
 4870              		.loc 20 1520 9 is_stmt 1 view .LVU1332
1522:Veno-Echo.cpp ****         {
 4871              		.loc 20 1522 9 view .LVU1333
 4872 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4873 001e 49B3     		cbz	r1, .L274
1524:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4874              		.loc 20 1524 13 view .LVU1334
1525:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4875              		.loc 20 1525 32 is_stmt 0 view .LVU1335
 4876 0020 4248     		ldr	r0, .L294+12
1526:Veno-Echo.cpp ****         }
 4877              		.loc 20 1526 29 view .LVU1336
 4878 0022 4349     		ldr	r1, .L294+16
1524:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4879              		.loc 20 1524 23 view .LVU1337
 4880 0024 1370     		strb	r3, [r2]
1525:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4881              		.loc 20 1525 13 is_stmt 1 view .LVU1338
1525:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4882              		.loc 20 1525 32 is_stmt 0 view .LVU1339
 4883 0026 0370     		strb	r3, [r0]
1526:Veno-Echo.cpp ****         }
 4884              		.loc 20 1526 13 is_stmt 1 view .LVU1340
1526:Veno-Echo.cpp ****         }
 4885              		.loc 20 1526 29 is_stmt 0 view .LVU1341
 4886 0028 81ED000A 		vstr.32	s0, [r1]
 4887              	.L275:
1540:Veno-Echo.cpp **** 
 4888              		.loc 20 1540 9 is_stmt 1 view .LVU1342
 4889              	.LVL244:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 201


1542:Veno-Echo.cpp ****         {
 4890              		.loc 20 1542 9 view .LVU1343
1550:Veno-Echo.cpp ****         }
 4891              		.loc 20 1550 13 view .LVU1344
1550:Veno-Echo.cpp ****         }
 4892              		.loc 20 1550 38 is_stmt 0 view .LVU1345
 4893 002c 414B     		ldr	r3, .L294+20
 4894 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4895 0032 0120     		movs	r0, #1
 4896 0034 DFED400A 		vldr.32	s1, .L294+24
 4897 0038 93ED000A 		vldr.32	s0, [r3]
 4898              	.LVL245:
1550:Veno-Echo.cpp ****         }
 4899              		.loc 20 1550 38 view .LVU1346
 4900 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4901              	.LVL246:
 4902              	.L285:
1553:Veno-Echo.cpp ****     }
 4903              		.loc 20 1553 9 is_stmt 1 view .LVU1347
 4904              	.LBB1373:
 4905              	.LBI1373:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4906              		.loc 25 135 13 view .LVU1348
 4907              	.LBB1374:
 4908              		.loc 25 137 5 view .LVU1349
 4909              		.loc 25 137 9 is_stmt 0 view .LVU1350
 4910 0040 3E4B     		ldr	r3, .L294+28
 4911 0042 9FED3F7A 		vldr.32	s14, .L294+32
 4912 0046 D3ED007A 		vldr.32	s15, [r3]
 4913              		.loc 25 137 24 view .LVU1351
 4914 004a 30EE670A 		vsub.f32	s0, s0, s15
 4915              	.LVL247:
 4916              		.loc 25 137 24 view .LVU1352
 4917              	.LBE1374:
 4918              	.LBE1373:
 4919              	.LBE1381:
 4920              	.LBE1401:
1596:Veno-Echo.cpp **** 
 4921              		.loc 20 1596 1 view .LVU1353
 4922 004e BDEC028B 		vldm	sp!, {d8}
 4923              		.cfi_remember_state
 4924              		.cfi_restore 80
 4925              		.cfi_restore 81
 4926              		.cfi_def_cfa_offset 8
 4927              	.LVL248:
 4928              	.LBB1402:
 4929              	.LBB1382:
 4930              	.LBB1376:
 4931              	.LBB1375:
 4932              		.loc 25 137 9 view .LVU1354
 4933 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4934 0056 C3ED007A 		vstr.32	s15, [r3]
 4935              	.LBE1375:
 4936              	.LBE1376:
 4937              	.LBE1382:
 4938              	.LBE1402:
1596:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 202


 4939              		.loc 20 1596 1 view .LVU1355
 4940 005a 10BD     		pop	{r4, pc}
 4941              	.LVL249:
 4942              	.L273:
 4943              		.cfi_restore_state
 4944              	.LBB1403:
 4945              	.LBB1383:
1558:Veno-Echo.cpp **** 
 4946              		.loc 20 1558 9 is_stmt 1 view .LVU1356
1560:Veno-Echo.cpp ****         {
 4947              		.loc 20 1560 9 view .LVU1357
 4948 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4949 005e 4BBB     		cbnz	r3, .L279
1562:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4950              		.loc 20 1562 13 view .LVU1358
1562:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4951              		.loc 20 1562 23 is_stmt 0 view .LVU1359
 4952 0060 0124     		movs	r4, #1
1563:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4953              		.loc 20 1563 32 view .LVU1360
 4954 0062 3848     		ldr	r0, .L294+36
1564:Veno-Echo.cpp ****         }
 4955              		.loc 20 1564 29 view .LVU1361
 4956 0064 3849     		ldr	r1, .L294+40
1562:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4957              		.loc 20 1562 23 view .LVU1362
 4958 0066 1470     		strb	r4, [r2]
1563:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4959              		.loc 20 1563 13 is_stmt 1 view .LVU1363
1563:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4960              		.loc 20 1563 32 is_stmt 0 view .LVU1364
 4961 0068 0370     		strb	r3, [r0]
1564:Veno-Echo.cpp ****         }
 4962              		.loc 20 1564 13 is_stmt 1 view .LVU1365
1564:Veno-Echo.cpp ****         }
 4963              		.loc 20 1564 29 is_stmt 0 view .LVU1366
 4964 006a 81ED000A 		vstr.32	s0, [r1]
 4965              	.L272:
1564:Veno-Echo.cpp ****         }
 4966              		.loc 20 1564 29 view .LVU1367
 4967              	.LBE1383:
 4968              	.LBE1403:
1596:Veno-Echo.cpp **** 
 4969              		.loc 20 1596 1 view .LVU1368
 4970 006e BDEC028B 		vldm	sp!, {d8}
 4971              		.cfi_remember_state
 4972              		.cfi_restore 80
 4973              		.cfi_restore 81
 4974              		.cfi_def_cfa_offset 8
 4975 0072 10BD     		pop	{r4, pc}
 4976              	.L274:
 4977              		.cfi_restore_state
 4978              	.LBB1404:
 4979              	.LBB1398:
1531:Veno-Echo.cpp ****             {
 4980              		.loc 20 1531 13 is_stmt 1 view .LVU1369
1531:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 203


 4981              		.loc 20 1531 16 is_stmt 0 view .LVU1370
 4982 0074 2D4B     		ldr	r3, .L294+12
1531:Veno-Echo.cpp ****             {
 4983              		.loc 20 1531 13 view .LVU1371
 4984 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4985 0078 7AB9     		cbnz	r2, .L276
1533:Veno-Echo.cpp ****                 {
 4986              		.loc 20 1533 17 is_stmt 1 view .LVU1372
 4987              	.LVL250:
 4988              	.LBB1377:
 4989              	.LBI1377:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4990              		.loc 21 75 3 view .LVU1373
 4991              	.LBB1378:
 4992              		.loc 21 76 5 view .LVU1374
 4993              		.loc 21 76 5 is_stmt 0 view .LVU1375
 4994              	.LBE1378:
 4995              	.LBE1377:
1533:Veno-Echo.cpp ****                 {
 4996              		.loc 20 1533 23 view .LVU1376
 4997 007a 2D4A     		ldr	r2, .L294+16
1533:Veno-Echo.cpp ****                 {
 4998              		.loc 20 1533 17 view .LVU1377
 4999 007c 9FED337A 		vldr.32	s14, .L294+44
1533:Veno-Echo.cpp ****                 {
 5000              		.loc 20 1533 23 view .LVU1378
 5001 0080 D2ED007A 		vldr.32	s15, [r2]
 5002 0084 70EE677A 		vsub.f32	s15, s0, s15
 5003              	.LBB1380:
 5004              	.LBB1379:
 5005              		.loc 21 76 31 view .LVU1379
 5006 0088 F0EEE77A 		vabs.f32	s15, s15
 5007              	.LBE1379:
 5008              	.LBE1380:
1533:Veno-Echo.cpp ****                 {
 5009              		.loc 20 1533 17 view .LVU1380
 5010 008c F4EEC77A 		vcmpe.f32	s15, s14
 5011 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5012 0094 CADD     		ble	.L275
1535:Veno-Echo.cpp ****                 }
 5013              		.loc 20 1535 21 is_stmt 1 view .LVU1381
1535:Veno-Echo.cpp ****                 }
 5014              		.loc 20 1535 40 is_stmt 0 view .LVU1382
 5015 0096 0122     		movs	r2, #1
 5016 0098 1A70     		strb	r2, [r3]
 5017              	.L276:
1540:Veno-Echo.cpp **** 
 5018              		.loc 20 1540 9 is_stmt 1 view .LVU1383
 5019              	.LVL251:
1542:Veno-Echo.cpp ****         {
 5020              		.loc 20 1542 9 view .LVU1384
1544:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5021              		.loc 20 1544 13 view .LVU1385
1544:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5022              		.loc 20 1544 38 is_stmt 0 view .LVU1386
 5023 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 5024 009e 0120     		movs	r0, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 204


 5025 00a0 B0EE480A 		vmov.f32	s0, s16
 5026              	.LVL252:
1544:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5027              		.loc 20 1544 38 view .LVU1387
 5028 00a4 DFED240A 		vldr.32	s1, .L294+24
 5029 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5030              	.LVL253:
1545:Veno-Echo.cpp ****         }
 5031              		.loc 20 1545 30 view .LVU1388
 5032 00ac 214B     		ldr	r3, .L294+20
 5033              	.LVL254:
1545:Veno-Echo.cpp ****         }
 5034              		.loc 20 1545 13 is_stmt 1 view .LVU1389
1545:Veno-Echo.cpp ****         }
 5035              		.loc 20 1545 30 is_stmt 0 view .LVU1390
 5036 00ae 83ED008A 		vstr.32	s16, [r3]
 5037 00b2 C5E7     		b	.L285
 5038              	.LVL255:
 5039              	.L279:
1545:Veno-Echo.cpp ****         }
 5040              		.loc 20 1545 30 view .LVU1391
 5041              	.LBE1398:
 5042              	.LBB1399:
1569:Veno-Echo.cpp ****             {
 5043              		.loc 20 1569 13 is_stmt 1 view .LVU1392
1569:Veno-Echo.cpp ****             {
 5044              		.loc 20 1569 16 is_stmt 0 view .LVU1393
 5045 00b4 234B     		ldr	r3, .L294+36
1569:Veno-Echo.cpp ****             {
 5046              		.loc 20 1569 13 view .LVU1394
 5047 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5048 00b8 7AB9     		cbnz	r2, .L281
1571:Veno-Echo.cpp ****                 {
 5049              		.loc 20 1571 17 is_stmt 1 view .LVU1395
 5050              	.LVL256:
 5051              	.LBB1384:
 5052              	.LBI1384:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5053              		.loc 21 75 3 view .LVU1396
 5054              	.LBB1385:
 5055              		.loc 21 76 5 view .LVU1397
 5056              		.loc 21 76 5 is_stmt 0 view .LVU1398
 5057              	.LBE1385:
 5058              	.LBE1384:
1571:Veno-Echo.cpp ****                 {
 5059              		.loc 20 1571 23 view .LVU1399
 5060 00ba 234A     		ldr	r2, .L294+40
1571:Veno-Echo.cpp ****                 {
 5061              		.loc 20 1571 17 view .LVU1400
 5062 00bc 9FED237A 		vldr.32	s14, .L294+44
1571:Veno-Echo.cpp ****                 {
 5063              		.loc 20 1571 23 view .LVU1401
 5064 00c0 D2ED007A 		vldr.32	s15, [r2]
 5065 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5066              	.LBB1387:
 5067              	.LBB1386:
 5068              		.loc 21 76 31 view .LVU1402
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 205


 5069 00c8 F0EEE77A 		vabs.f32	s15, s15
 5070              	.LBE1386:
 5071              	.LBE1387:
1571:Veno-Echo.cpp ****                 {
 5072              		.loc 20 1571 17 view .LVU1403
 5073 00cc F4EEC77A 		vcmpe.f32	s15, s14
 5074 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5075 00d4 CBDD     		ble	.L272
1573:Veno-Echo.cpp ****                 }
 5076              		.loc 20 1573 21 is_stmt 1 view .LVU1404
1573:Veno-Echo.cpp ****                 }
 5077              		.loc 20 1573 40 is_stmt 0 view .LVU1405
 5078 00d6 0122     		movs	r2, #1
 5079 00d8 1A70     		strb	r2, [r3]
 5080              	.L281:
1578:Veno-Echo.cpp ****         {
 5081              		.loc 20 1578 9 is_stmt 1 view .LVU1406
1580:Veno-Echo.cpp ****             {
 5082              		.loc 20 1580 13 view .LVU1407
 5083 00da DFED1D7A 		vldr.32	s15, .L294+48
 5084 00de B4EEE78A 		vcmpe.f32	s16, s15
 5085 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5086 00e6 0FD5     		bpl	.L293
1582:Veno-Echo.cpp ****             }
 5087              		.loc 20 1582 17 view .LVU1408
1582:Veno-Echo.cpp ****             }
 5088              		.loc 20 1582 29 is_stmt 0 view .LVU1409
 5089 00e8 1A4B     		ldr	r3, .L294+52
 5090 00ea 0022     		movs	r2, #0
 5091 00ec 1A70     		strb	r2, [r3]
 5092              	.L283:
1592:Veno-Echo.cpp ****             save_flag = true;
 5093              		.loc 20 1592 13 is_stmt 1 view .LVU1410
1592:Veno-Echo.cpp ****             save_flag = true;
 5094              		.loc 20 1592 39 is_stmt 0 view .LVU1411
 5095 00ee 1A49     		ldr	r1, .L294+56
 5096              	.LBB1388:
 5097              	.LBB1389:
 5098              	.LBB1390:
 5099              	.LBB1391:
 5100              	.LBB1392:
 5101              		.loc 22 397 18 view .LVU1412
 5102 00f0 0122     		movs	r2, #1
 5103 00f2 1A4B     		ldr	r3, .L294+60
 5104              	.LBE1392:
 5105              	.LBE1391:
 5106              	.LBE1390:
 5107              	.LBE1389:
 5108              	.LBE1388:
1592:Veno-Echo.cpp ****             save_flag = true;
 5109              		.loc 20 1592 39 view .LVU1413
 5110 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1593:Veno-Echo.cpp ****         }  
 5111              		.loc 20 1593 13 is_stmt 1 view .LVU1414
 5112              	.LVL257:
 5113              	.LBB1397:
 5114              	.LBI1388:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 206


  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5115              		.loc 23 80 5 view .LVU1415
 5116              	.LBB1396:
 5117              		.loc 23 81 7 view .LVU1416
 5118              	.LBB1395:
 5119              	.LBI1390:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5120              		.loc 22 288 7 view .LVU1417
 5121              	.LBB1394:
 5122              	.LBI1391:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5123              		.loc 22 390 7 view .LVU1418
 5124              	.LBB1393:
 5125              		.loc 22 397 18 is_stmt 0 view .LVU1419
 5126 00f8 BFF35B8F 		dmb	ish
 5127 00fc 1A70     		strb	r2, [r3]
 5128 00fe BFF35B8F 		dmb	ish
 5129              	.LVL258:
 5130              		.loc 22 397 18 view .LVU1420
 5131              	.LBE1393:
 5132              	.LBE1394:
 5133              	.LBE1395:
 5134              	.LBE1396:
 5135              	.LBE1397:
 5136              	.LBE1399:
 5137              	.LBE1404:
1596:Veno-Echo.cpp **** 
 5138              		.loc 20 1596 1 view .LVU1421
 5139 0102 BDEC028B 		vldm	sp!, {d8}
 5140              		.cfi_remember_state
 5141              		.cfi_restore 80
 5142              		.cfi_restore 81
 5143              		.cfi_def_cfa_offset 8
 5144 0106 10BD     		pop	{r4, pc}
 5145              	.L293:
 5146              		.cfi_restore_state
 5147              	.LBB1405:
 5148              	.LBB1400:
1584:Veno-Echo.cpp ****             {
 5149              		.loc 20 1584 18 is_stmt 1 view .LVU1422
 5150 0108 DFED157A 		vldr.32	s15, .L294+64
 5151 010c B4EEE78A 		vcmpe.f32	s16, s15
 5152 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5153 0114 EBDD     		ble	.L283
1586:Veno-Echo.cpp ****             }
 5154              		.loc 20 1586 17 view .LVU1423
1586:Veno-Echo.cpp ****             }
 5155              		.loc 20 1586 29 is_stmt 0 view .LVU1424
 5156 0116 0F4B     		ldr	r3, .L294+52
 5157 0118 0122     		movs	r2, #1
 5158 011a 1A70     		strb	r2, [r3]
 5159 011c E7E7     		b	.L283
 5160              	.L295:
 5161 011e 00BF     		.align	2
 5162              	.L294:
 5163 0120 18000000 		.word	.LANCHOR4+24
 5164 0124 00000000 		.word	.LANCHOR7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 207


 5165 0128 00000000 		.word	.LANCHOR77
 5166 012c 00000000 		.word	.LANCHOR78
 5167 0130 00000000 		.word	.LANCHOR79
 5168 0134 00000000 		.word	.LANCHOR84
 5169 0138 00000000 		.word	0
 5170 013c 00000000 		.word	.LANCHOR80
 5171 0140 6F12033D 		.word	1023611503
 5172 0144 00000000 		.word	.LANCHOR81
 5173 0148 00000000 		.word	.LANCHOR82
 5174 014c 0AD7A33B 		.word	1000593162
 5175 0150 6666E63E 		.word	1055286886
 5176 0154 00000000 		.word	.LANCHOR83
 5177 0158 00000000 		.word	.LANCHOR15
 5178 015c 00000000 		.word	.LANCHOR16
 5179 0160 CDCC0C3F 		.word	1057803469
 5180              	.LBE1400:
 5181              	.LBE1405:
 5182              		.cfi_endproc
 5183              	.LFE4325:
 5185              		.section	.text._Z8GetModCVv,"ax",%progbits
 5186              		.align	1
 5187              		.p2align 2,,3
 5188              		.global	_Z8GetModCVv
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv5-d16
 5194              	_Z8GetModCVv:
 5195              	.LFB4326:
1599:Veno-Echo.cpp ****     //get modulation CV input
 5196              		.loc 20 1599 1 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
1601:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5200              		.loc 20 1601 5 view .LVU1426
1599:Veno-Echo.cpp ****     //get modulation CV input
 5201              		.loc 20 1599 1 is_stmt 0 view .LVU1427
 5202 0000 08B5     		push	{r3, lr}
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 3, -8
 5205              		.cfi_offset 14, -4
1601:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5206              		.loc 20 1601 30 view .LVU1428
 5207 0002 0621     		movs	r1, #6
 5208 0004 0648     		ldr	r0, .L298
 5209 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5210              	.LVL259:
 5211 000a 0020     		movs	r0, #0
 5212 000c 9FED051A 		vldr.32	s2, .L298+4
 5213 0010 DFED050A 		vldr.32	s1, .L298+8
 5214 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5215              	.LVL260:
1601:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5216              		.loc 20 1601 23 view .LVU1429
 5217 0018 044B     		ldr	r3, .L298+12
 5218 001a 83ED000A 		vstr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 208


1603:Veno-Echo.cpp **** 
 5219              		.loc 20 1603 1 view .LVU1430
 5220 001e 08BD     		pop	{r3, pc}
 5221              	.L299:
 5222              		.align	2
 5223              	.L298:
 5224 0020 18000000 		.word	.LANCHOR4+24
 5225 0024 00004843 		.word	1128792064
 5226 0028 000048C3 		.word	3276275712
 5227 002c 00000000 		.word	.LANCHOR85
 5228              		.cfi_endproc
 5229              	.LFE4326:
 5231              		.section	.text._Z10Update_Modv,"ax",%progbits
 5232              		.align	1
 5233              		.p2align 2,,3
 5234              		.global	_Z10Update_Modv
 5235              		.syntax unified
 5236              		.thumb
 5237              		.thumb_func
 5238              		.fpu fpv5-d16
 5240              	_Z10Update_Modv:
 5241              	.LFB4327:
1606:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5242              		.loc 20 1606 1 is_stmt 1 view -0
 5243              		.cfi_startproc
 5244              		@ args = 0, pretend = 0, frame = 0
 5245              		@ frame_needed = 0, uses_anonymous_args = 0
1607:Veno-Echo.cpp ****     static float modulation_CV{};
 5246              		.loc 20 1607 5 view .LVU1432
1608:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5247              		.loc 20 1608 5 view .LVU1433
1609:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5248              		.loc 20 1609 5 view .LVU1434
 5249              	.LVL261:
 5250              	.LBB1406:
 5251              	.LBI1406:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5252              		.loc 25 135 13 view .LVU1435
 5253              	.LBB1407:
 5254              		.loc 25 137 5 view .LVU1436
 5255              	.LBE1407:
 5256              	.LBE1406:
1606:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5257              		.loc 20 1606 1 is_stmt 0 view .LVU1437
 5258 0000 38B5     		push	{r3, r4, r5, lr}
 5259              		.cfi_def_cfa_offset 16
 5260              		.cfi_offset 3, -16
 5261              		.cfi_offset 4, -12
 5262              		.cfi_offset 5, -8
 5263              		.cfi_offset 14, -4
1609:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5264              		.loc 20 1609 13 view .LVU1438
 5265 0002 154A     		ldr	r2, .L302
 5266              	.LBB1414:
 5267              	.LBB1408:
 5268              		.loc 25 137 9 view .LVU1439
 5269 0004 154C     		ldr	r4, .L302+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 209


 5270              	.LBE1408:
 5271              	.LBE1414:
 5272              	.LBB1415:
 5273              	.LBB1416:
 5274 0006 164D     		ldr	r5, .L302+8
 5275              	.LBE1416:
 5276              	.LBE1415:
1610:Veno-Echo.cpp ****     //calculate InternalMod
 5277              		.loc 20 1610 13 view .LVU1440
 5278 0008 164B     		ldr	r3, .L302+12
 5279              	.LBB1422:
 5280              	.LBB1409:
 5281              		.loc 25 137 9 view .LVU1441
 5282 000a 94ED007A 		vldr.32	s14, [r4]
 5283              	.LBE1409:
 5284              	.LBE1422:
 5285              	.LBB1423:
 5286              	.LBB1417:
 5287 000e D5ED007A 		vldr.32	s15, [r5]
 5288              	.LBE1417:
 5289              	.LBE1423:
 5290              	.LBB1424:
 5291              	.LBB1410:
 5292              		.loc 25 137 24 view .LVU1442
 5293 0012 92ED006A 		vldr.32	s12, [r2]
 5294              	.LBE1410:
 5295              	.LBE1424:
 5296              	.LBB1425:
 5297              	.LBB1418:
 5298 0016 D3ED006A 		vldr.32	s13, [r3]
 5299              	.LBE1418:
 5300              	.LBE1425:
 5301              	.LBB1426:
 5302              	.LBB1411:
 5303 001a 36EE476A 		vsub.f32	s12, s12, s14
 5304              		.loc 25 137 9 view .LVU1443
 5305 001e DFED125A 		vldr.32	s11, .L302+16
 5306              	.LBE1411:
 5307              	.LBE1426:
 5308              	.LBB1427:
 5309              	.LBB1419:
 5310              		.loc 25 137 24 view .LVU1444
 5311 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5312              	.LBE1419:
 5313              	.LBE1427:
1612:Veno-Echo.cpp ****     //apply modulation to delay lines
 5314              		.loc 20 1612 34 view .LVU1445
 5315 0026 1148     		ldr	r0, .L302+20
 5316              	.LBB1428:
 5317              	.LBB1412:
 5318              		.loc 25 137 9 view .LVU1446
 5319 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5320              	.LBE1412:
 5321              	.LBE1428:
 5322              	.LBB1429:
 5323              	.LBB1420:
 5324 002c E6EEA57A 		vfma.f32	s15, s13, s11
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 210


 5325              	.LBE1420:
 5326              	.LBE1429:
 5327              	.LBB1430:
 5328              	.LBB1413:
 5329 0030 84ED007A 		vstr.32	s14, [r4]
 5330              	.LVL262:
 5331              		.loc 25 137 9 view .LVU1447
 5332              	.LBE1413:
 5333              	.LBE1430:
1610:Veno-Echo.cpp ****     //calculate InternalMod
 5334              		.loc 20 1610 5 is_stmt 1 view .LVU1448
 5335              	.LBB1431:
 5336              	.LBI1415:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5337              		.loc 25 135 13 view .LVU1449
 5338              	.LBB1421:
 5339              		.loc 25 137 5 view .LVU1450
 5340              		.loc 25 137 9 is_stmt 0 view .LVU1451
 5341 0034 C5ED007A 		vstr.32	s15, [r5]
 5342              	.LVL263:
 5343              		.loc 25 137 9 view .LVU1452
 5344              	.LBE1421:
 5345              	.LBE1431:
1612:Veno-Echo.cpp ****     //apply modulation to delay lines
 5346              		.loc 20 1612 5 is_stmt 1 view .LVU1453
1612:Veno-Echo.cpp ****     //apply modulation to delay lines
 5347              		.loc 20 1612 34 is_stmt 0 view .LVU1454
 5348 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5349              	.LVL264:
1614:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5350              		.loc 20 1614 5 is_stmt 1 view .LVU1455
1614:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5351              		.loc 20 1614 40 is_stmt 0 view .LVU1456
 5352 003c 95ED007A 		vldr.32	s14, [r5]
 5353 0040 D4ED007A 		vldr.32	s15, [r4]
 5354              	.LBB1432:
 5355              	.LBB1433:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5356              		.loc 17 69 43 view .LVU1457
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 211


 5357 0044 0A4A     		ldr	r2, .L302+24
 5358              	.LBE1433:
 5359              	.LBE1432:
1614:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5360              		.loc 20 1614 40 view .LVU1458
 5361 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5362              	.LBB1436:
 5363              	.LBI1432:
 5364              		.loc 17 69 6 is_stmt 1 view .LVU1459
 5365              	.LVL265:
 5366              	.LBB1434:
 5367              		.loc 17 69 38 view .LVU1460
 5368              	.LBE1434:
 5369              	.LBE1436:
 5370              	.LBB1437:
 5371              	.LBB1438:
 5372              		.loc 17 69 43 is_stmt 0 view .LVU1461
 5373 004a 0A4B     		ldr	r3, .L302+28
 5374              	.LBE1438:
 5375              	.LBE1437:
 5376              	.LBB1440:
 5377              	.LBB1435:
 5378 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5379              	.LBE1435:
 5380              	.LBE1440:
1615:Veno-Echo.cpp **** }
 5381              		.loc 20 1615 5 is_stmt 1 view .LVU1462
 5382              	.LVL266:
 5383              	.LBB1441:
 5384              	.LBI1437:
 5385              		.loc 17 69 6 view .LVU1463
 5386              	.LBB1439:
 5387              		.loc 17 69 38 view .LVU1464
 5388              		.loc 17 69 43 is_stmt 0 view .LVU1465
 5389 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5390              	.LBE1439:
 5391              	.LBE1441:
1616:Veno-Echo.cpp **** 
 5392              		.loc 20 1616 1 view .LVU1466
 5393 0054 38BD     		pop	{r3, r4, r5, pc}
 5394              	.L303:
 5395 0056 00BF     		.align	2
 5396              	.L302:
 5397 0058 00000000 		.word	.LANCHOR85
 5398 005c 00000000 		.word	.LANCHOR86
 5399 0060 00000000 		.word	.LANCHOR87
 5400 0064 00000000 		.word	.LANCHOR68
 5401 0068 0AD7233C 		.word	1008981770
 5402 006c 00000000 		.word	.LANCHOR76
 5403 0070 00000000 		.word	.LANCHOR0
 5404 0074 00000000 		.word	.LANCHOR1
 5405              		.cfi_endproc
 5406              	.LFE4327:
 5408              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5409              		.align	1
 5410              		.p2align 2,,3
 5411              		.global	_Z11UpdateClockv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 212


 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5415              		.fpu fpv5-d16
 5417              	_Z11UpdateClockv:
 5418              	.LFB4328:
1619:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
 5419              		.loc 20 1619 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 0
 5422              		@ frame_needed = 0, uses_anonymous_args = 0
1620:Veno-Echo.cpp **** 
 5423              		.loc 20 1620 5 view .LVU1468
1622:Veno-Echo.cpp ****     //if clock in pulse received
 5424              		.loc 20 1622 5 view .LVU1469
1619:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
 5425              		.loc 20 1619 1 is_stmt 0 view .LVU1470
 5426 0000 10B5     		push	{r4, lr}
 5427              		.cfi_def_cfa_offset 8
 5428              		.cfi_offset 4, -8
 5429              		.cfi_offset 14, -4
1622:Veno-Echo.cpp ****     //if clock in pulse received
 5430              		.loc 20 1622 18 view .LVU1471
 5431 0002 124C     		ldr	r4, .L316
1624:Veno-Echo.cpp ****     {   
 5432              		.loc 20 1624 21 view .LVU1472
 5433 0004 1248     		ldr	r0, .L316+4
1622:Veno-Echo.cpp ****     //if clock in pulse received
 5434              		.loc 20 1622 18 view .LVU1473
 5435 0006 2368     		ldr	r3, [r4]
 5436 0008 0133     		adds	r3, r3, #1
 5437 000a 2360     		str	r3, [r4]
1624:Veno-Echo.cpp ****     {   
 5438              		.loc 20 1624 5 is_stmt 1 view .LVU1474
1624:Veno-Echo.cpp ****     {   
 5439              		.loc 20 1624 21 is_stmt 0 view .LVU1475
 5440 000c FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 5441              	.LVL267:
1624:Veno-Echo.cpp ****     {   
 5442              		.loc 20 1624 5 view .LVU1476
 5443 0010 00B9     		cbnz	r0, .L314
1637:Veno-Echo.cpp **** 
 5444              		.loc 20 1637 1 view .LVU1477
 5445 0012 10BD     		pop	{r4, pc}
 5446              	.L314:
 5447              	.LBB1449:
 5448              	.LBI1449:
1618:Veno-Echo.cpp **** {
 5449              		.loc 20 1618 6 is_stmt 1 view .LVU1478
 5450              	.LBB1450:
1628:Veno-Echo.cpp ****             {
 5451              		.loc 20 1628 13 view .LVU1479
1628:Veno-Echo.cpp ****             {
 5452              		.loc 20 1628 31 is_stmt 0 view .LVU1480
 5453 0014 2168     		ldr	r1, [r4]
 5454 0016 0F48     		ldr	r0, .L316+8
 5455 0018 FFF7FEFF 		bl	_ZN8Taptempo5clockEm
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 213


 5456              	.LVL268:
1628:Veno-Echo.cpp ****             {
 5457              		.loc 20 1628 13 view .LVU1481
 5458 001c 10B9     		cbnz	r0, .L315
 5459              	.L306:
1634:Veno-Echo.cpp **** 
 5460              		.loc 20 1634 13 is_stmt 1 view .LVU1482
1634:Veno-Echo.cpp **** 
 5461              		.loc 20 1634 26 is_stmt 0 view .LVU1483
 5462 001e 0023     		movs	r3, #0
 5463 0020 2360     		str	r3, [r4]
 5464              	.LBE1450:
 5465              	.LBE1449:
1637:Veno-Echo.cpp **** 
 5466              		.loc 20 1637 1 view .LVU1484
 5467 0022 10BD     		pop	{r4, pc}
 5468              	.L315:
 5469              	.LBB1462:
 5470              	.LBB1461:
1630:Veno-Echo.cpp ****                 AltControls.tempo = BaseTempo.getTempo();
 5471              		.loc 20 1630 17 is_stmt 1 view .LVU1485
1630:Veno-Echo.cpp ****                 AltControls.tempo = BaseTempo.getTempo();
 5472              		.loc 20 1630 39 is_stmt 0 view .LVU1486
 5473 0024 0B48     		ldr	r0, .L316+8
 5474 0026 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5475              	.LVL269:
 5476 002a 0B48     		ldr	r0, .L316+12
 5477 002c FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5478              	.LVL270:
1631:Veno-Echo.cpp ****                 save_flag = true;
 5479              		.loc 20 1631 17 is_stmt 1 view .LVU1487
1631:Veno-Echo.cpp ****                 save_flag = true;
 5480              		.loc 20 1631 55 is_stmt 0 view .LVU1488
 5481 0030 0848     		ldr	r0, .L316+8
 5482 0032 FFF7FEFF 		bl	_ZN8Taptempo8getTempoEv
 5483              	.LVL271:
1631:Veno-Echo.cpp ****                 save_flag = true;
 5484              		.loc 20 1631 35 view .LVU1489
 5485 0036 0949     		ldr	r1, .L316+16
 5486              	.LBB1451:
 5487              	.LBB1452:
 5488              	.LBB1453:
 5489              	.LBB1454:
 5490              	.LBB1455:
 5491              		.loc 22 397 18 view .LVU1490
 5492 0038 0122     		movs	r2, #1
 5493 003a 094B     		ldr	r3, .L316+20
 5494              	.LBE1455:
 5495              	.LBE1454:
 5496              	.LBE1453:
 5497              	.LBE1452:
 5498              	.LBE1451:
1631:Veno-Echo.cpp ****                 save_flag = true;
 5499              		.loc 20 1631 35 view .LVU1491
 5500 003c 81ED080A 		vstr.32	s0, [r1, #32]
1632:Veno-Echo.cpp ****             }
 5501              		.loc 20 1632 17 is_stmt 1 view .LVU1492
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 214


 5502              	.LVL272:
 5503              	.LBB1460:
 5504              	.LBI1451:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5505              		.loc 23 80 5 view .LVU1493
 5506              	.LBB1459:
 5507              		.loc 23 81 7 view .LVU1494
 5508              	.LBB1458:
 5509              	.LBI1453:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5510              		.loc 22 288 7 view .LVU1495
 5511              	.LBB1457:
 5512              	.LBI1454:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5513              		.loc 22 390 7 view .LVU1496
 5514              	.LBB1456:
 5515              		.loc 22 397 18 is_stmt 0 view .LVU1497
 5516 0040 BFF35B8F 		dmb	ish
 5517 0044 1A70     		strb	r2, [r3]
 5518 0046 BFF35B8F 		dmb	ish
 5519              	.LVL273:
 5520              		.loc 22 397 18 view .LVU1498
 5521              	.LBE1456:
 5522              	.LBE1457:
 5523              	.LBE1458:
 5524              		.loc 23 81 35 view .LVU1499
 5525 004a E8E7     		b	.L306
 5526              	.L317:
 5527              		.align	2
 5528              	.L316:
 5529 004c 00000000 		.word	.LANCHOR88
 5530 0050 00000000 		.word	.LANCHOR89
 5531 0054 00000000 		.word	.LANCHOR26
 5532 0058 00000000 		.word	.LANCHOR90
 5533 005c 00000000 		.word	.LANCHOR15
 5534 0060 00000000 		.word	.LANCHOR16
 5535              	.LBE1459:
 5536              	.LBE1460:
 5537              	.LBE1461:
 5538              	.LBE1462:
 5539              		.cfi_endproc
 5540              	.LFE4328:
 5542              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5543              		.align	1
 5544              		.p2align 2,,3
 5545              		.global	_Z21Update_DelayBaseTempov
 5546              		.syntax unified
 5547              		.thumb
 5548              		.thumb_func
 5549              		.fpu fpv5-d16
 5551              	_Z21Update_DelayBaseTempov:
 5552              	.LFB4330:
1790:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5553              		.loc 20 1790 1 is_stmt 1 view -0
 5554              		.cfi_startproc
 5555              		@ args = 0, pretend = 0, frame = 0
 5556              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 215


1791:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5557              		.loc 20 1791 5 view .LVU1501
1790:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5558              		.loc 20 1790 1 is_stmt 0 view .LVU1502
 5559 0000 08B5     		push	{r3, lr}
 5560              		.cfi_def_cfa_offset 8
 5561              		.cfi_offset 3, -8
 5562              		.cfi_offset 14, -4
1791:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5563              		.loc 20 1791 49 view .LVU1503
 5564 0002 0648     		ldr	r0, .L320
 5565 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5566              	.LVL274:
 5567              	.LBB1463:
 5568              	.LBI1463:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5569              		.loc 17 71 6 is_stmt 1 view .LVU1504
 5570              	.LBB1464:
 5571              		.loc 17 71 39 view .LVU1505
 5572              		.loc 17 71 50 is_stmt 0 view .LVU1506
 5573 0008 054B     		ldr	r3, .L320+4
 5574              	.LBE1464:
 5575              	.LBE1463:
1792:Veno-Echo.cpp **** }
 5576              		.loc 20 1792 49 view .LVU1507
 5577 000a 0448     		ldr	r0, .L320
 5578              	.LBB1466:
 5579              	.LBB1465:
 5580              		.loc 17 71 50 view .LVU1508
 5581 000c 83ED480A 		vstr.32	s0, [r3, #288]
 5582              	.LBE1465:
 5583              	.LBE1466:
1792:Veno-Echo.cpp **** }
 5584              		.loc 20 1792 5 is_stmt 1 view .LVU1509
1792:Veno-Echo.cpp **** }
 5585              		.loc 20 1792 49 is_stmt 0 view .LVU1510
 5586 0010 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5587              	.LVL275:
 5588              	.LBB1467:
 5589              	.LBI1467:
 5590              		.loc 17 71 6 is_stmt 1 view .LVU1511
 5591              	.LBB1468:
 5592              		.loc 17 71 39 view .LVU1512
 5593              		.loc 17 71 50 is_stmt 0 view .LVU1513
 5594 0014 034B     		ldr	r3, .L320+8
 5595 0016 83ED480A 		vstr.32	s0, [r3, #288]
 5596              	.LBE1468:
 5597              	.LBE1467:
1793:Veno-Echo.cpp **** 
 5598              		.loc 20 1793 1 view .LVU1514
 5599 001a 08BD     		pop	{r3, pc}
 5600              	.L321:
 5601              		.align	2
 5602              	.L320:
 5603 001c 00000000 		.word	.LANCHOR26
 5604 0020 00000000 		.word	.LANCHOR0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 216


 5605 0024 00000000 		.word	.LANCHOR1
 5606              		.cfi_endproc
 5607              	.LFE4330:
 5609              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5610              		.align	1
 5611              		.p2align 2,,3
 5612              		.global	_Z21Update_DelayTempoLEDsv
 5613              		.syntax unified
 5614              		.thumb
 5615              		.thumb_func
 5616              		.fpu fpv5-d16
 5618              	_Z21Update_DelayTempoLEDsv:
 5619              	.LFB4331:
1796:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5620              		.loc 20 1796 1 is_stmt 1 view -0
 5621              		.cfi_startproc
 5622              		@ args = 0, pretend = 0, frame = 0
 5623              		@ frame_needed = 0, uses_anonymous_args = 0
1797:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5624              		.loc 20 1797 5 view .LVU1516
1796:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5625              		.loc 20 1796 1 is_stmt 0 view .LVU1517
 5626 0000 10B5     		push	{r4, lr}
 5627              		.cfi_def_cfa_offset 8
 5628              		.cfi_offset 4, -8
 5629              		.cfi_offset 14, -4
1797:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5630              		.loc 20 1797 26 view .LVU1518
 5631 0002 054C     		ldr	r4, .L324
 5632 0004 0548     		ldr	r0, .L324+4
 5633 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5634 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5635              	.LVL276:
1798:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5636              		.loc 20 1798 5 is_stmt 1 view .LVU1519
1798:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5637              		.loc 20 1798 26 is_stmt 0 view .LVU1520
 5638 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5639 000e 0448     		ldr	r0, .L324+8
1802:Veno-Echo.cpp **** 
 5640              		.loc 20 1802 1 view .LVU1521
 5641 0010 BDE81040 		pop	{r4, lr}
 5642              		.cfi_restore 14
 5643              		.cfi_restore 4
 5644              		.cfi_def_cfa_offset 0
1798:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5645              		.loc 20 1798 26 view .LVU1522
 5646 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5647              	.LVL277:
 5648              	.L325:
 5649              		.align	2
 5650              	.L324:
 5651 0018 00000000 		.word	.LANCHOR12
 5652 001c 00000000 		.word	.LANCHOR0
 5653 0020 00000000 		.word	.LANCHOR1
 5654              		.cfi_endproc
 5655              	.LFE4331:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 217


 5657              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5658              		.align	1
 5659              		.p2align 2,,3
 5660              		.global	_Z19Update_BaseTempoLEDv
 5661              		.syntax unified
 5662              		.thumb
 5663              		.thumb_func
 5664              		.fpu fpv5-d16
 5666              	_Z19Update_BaseTempoLEDv:
 5667              	.LFB4332:
1805:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5668              		.loc 20 1805 1 is_stmt 1 view -0
 5669              		.cfi_startproc
 5670              		@ args = 0, pretend = 0, frame = 0
 5671              		@ frame_needed = 0, uses_anonymous_args = 0
1806:Veno-Echo.cpp **** 
 5672              		.loc 20 1806 5 view .LVU1524
1806:Veno-Echo.cpp **** 
 5673              		.loc 20 1806 25 is_stmt 0 view .LVU1525
 5674 0000 1848     		ldr	r0, .L330
1805:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5675              		.loc 20 1805 1 view .LVU1526
 5676 0002 08B5     		push	{r3, lr}
 5677              		.cfi_def_cfa_offset 8
 5678              		.cfi_offset 3, -8
 5679              		.cfi_offset 14, -4
1806:Veno-Echo.cpp **** 
 5680              		.loc 20 1806 25 view .LVU1527
 5681 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5682              	.LVL278:
1808:Veno-Echo.cpp **** 
 5683              		.loc 20 1808 5 is_stmt 1 view .LVU1528
1810:Veno-Echo.cpp ****     {
 5684              		.loc 20 1810 5 view .LVU1529
1810:Veno-Echo.cpp ****     {
 5685              		.loc 20 1810 27 is_stmt 0 view .LVU1530
 5686 0008 1648     		ldr	r0, .L330
 5687 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5688              	.LVL279:
1810:Veno-Echo.cpp ****     {
 5689              		.loc 20 1810 5 view .LVU1531
 5690 000e D0B9     		cbnz	r0, .L327
 5691 0010 154B     		ldr	r3, .L330+4
 5692 0012 1B68     		ldr	r3, [r3]
 5693              	.L328:
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5694              		.loc 20 1815 5 is_stmt 1 view .LVU1532
 5695              	.LVL280:
 5696              	.LBB1469:
 5697              	.LBI1469:
  71:LEDs.h        **** 
 5698              		.loc 14 71 7 view .LVU1533
 5699              	.LBB1470:
  71:LEDs.h        **** 
 5700              		.loc 14 71 20 view .LVU1534
  71:LEDs.h        **** 
 5701              		.loc 14 71 20 is_stmt 0 view .LVU1535
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 218


 5702              	.LBE1470:
 5703              	.LBE1469:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 219


  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5704              		.loc 15 92 31 is_stmt 1 view .LVU1536
 5705              	.LBB1472:
 5706              	.LBB1471:
  71:LEDs.h        **** 
 5707              		.loc 14 71 41 is_stmt 0 view .LVU1537
 5708 0014 134A     		ldr	r2, .L330
 5709              	.LBE1471:
 5710              	.LBE1472:
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5711              		.loc 20 1815 50 view .LVU1538
 5712 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5713              		.loc 20 1815 73 view .LVU1539
 5714 001a 07EE903A 		vmov	s15, r3	@ int
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5715              		.loc 20 1815 55 view .LVU1540
 5716 001e DFED136A 		vldr.32	s13, .L330+8
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5717              		.loc 20 1815 50 view .LVU1541
 5718 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5719              		.loc 20 1815 73 view .LVU1542
 5720 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5721              	.LBB1473:
 5722              	.LBB1474:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5723              		.loc 17 72 54 view .LVU1543
 5724 002a 1149     		ldr	r1, .L330+12
 5725              	.LBE1474:
 5726              	.LBE1473:
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5727              		.loc 20 1815 50 view .LVU1544
 5728 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5729              	.LBB1476:
 5730              	.LBB1477:
 5731              		.loc 17 72 54 view .LVU1545
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 220


 5732 0030 104A     		ldr	r2, .L330+16
 5733              	.LBE1477:
 5734              	.LBE1476:
1819:Veno-Echo.cpp **** }
 5735              		.loc 20 1819 17 view .LVU1546
 5736 0032 114B     		ldr	r3, .L330+20
1815:Veno-Echo.cpp ****     //update base phase for both delay lines
 5737              		.loc 20 1815 55 view .LVU1547
 5738 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5739              	.LVL281:
1817:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5740              		.loc 20 1817 5 is_stmt 1 view .LVU1548
 5741              	.LBB1479:
 5742              	.LBI1473:
 5743              		.loc 17 72 6 view .LVU1549
 5744              	.LBB1475:
 5745              		.loc 17 72 43 view .LVU1550
 5746              		.loc 17 72 54 is_stmt 0 view .LVU1551
 5747 0038 81ED477A 		vstr.32	s14, [r1, #284]
 5748              	.LBE1475:
 5749              	.LBE1479:
1818:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5750              		.loc 20 1818 5 is_stmt 1 view .LVU1552
 5751              	.LVL282:
 5752              	.LBB1480:
 5753              	.LBI1476:
 5754              		.loc 17 72 6 view .LVU1553
 5755              	.LBB1478:
 5756              		.loc 17 72 43 view .LVU1554
 5757              		.loc 17 72 54 is_stmt 0 view .LVU1555
 5758 003c 82ED477A 		vstr.32	s14, [r2, #284]
 5759              	.LBE1478:
 5760              	.LBE1480:
1819:Veno-Echo.cpp **** }
 5761              		.loc 20 1819 5 is_stmt 1 view .LVU1556
1819:Veno-Echo.cpp **** }
 5762              		.loc 20 1819 17 is_stmt 0 view .LVU1557
 5763 0040 83ED007A 		vstr.32	s14, [r3]
 5764              	.LVL283:
1820:Veno-Echo.cpp **** 
 5765              		.loc 20 1820 1 view .LVU1558
 5766 0044 08BD     		pop	{r3, pc}
 5767              	.LVL284:
 5768              	.L327:
1812:Veno-Echo.cpp ****     }
 5769              		.loc 20 1812 9 is_stmt 1 view .LVU1559
1812:Veno-Echo.cpp ****     }
 5770              		.loc 20 1812 38 is_stmt 0 view .LVU1560
 5771 0046 0849     		ldr	r1, .L330+4
1812:Veno-Echo.cpp ****     }
 5772              		.loc 20 1812 43 view .LVU1561
 5773 0048 0C4B     		ldr	r3, .L330+24
1812:Veno-Echo.cpp ****     }
 5774              		.loc 20 1812 38 view .LVU1562
 5775 004a 0A68     		ldr	r2, [r1]
 5776 004c 0132     		adds	r2, r2, #1
1812:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 221


 5777              		.loc 20 1812 43 view .LVU1563
 5778 004e 83FB0203 		smull	r0, r3, r3, r2
 5779 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5780 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5781 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1812:Veno-Echo.cpp ****     }
 5782              		.loc 20 1812 22 view .LVU1564
 5783 005e 0B60     		str	r3, [r1]
 5784 0060 D8E7     		b	.L328
 5785              	.L331:
 5786 0062 00BF     		.align	2
 5787              	.L330:
 5788 0064 00000000 		.word	.LANCHOR90
 5789 0068 00000000 		.word	.LANCHOR91
 5790 006c 920A863F 		.word	1065749138
 5791 0070 00000000 		.word	.LANCHOR0
 5792 0074 00000000 		.word	.LANCHOR1
 5793 0078 00000000 		.word	.LANCHOR92
 5794 007c ABAAAA2A 		.word	715827883
 5795              		.cfi_endproc
 5796              	.LFE4332:
 5798              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5799              		.align	1
 5800              		.p2align 2,,3
 5801              		.global	_Z13ApplySettingsRK8Settings
 5802              		.syntax unified
 5803              		.thumb
 5804              		.thumb_func
 5805              		.fpu fpv5-d16
 5807              	_Z13ApplySettingsRK8Settings:
 5808              	.LVL285:
 5809              	.LFB4333:
1824:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5810              		.loc 20 1824 1 is_stmt 1 view -0
 5811              		.cfi_startproc
 5812              		@ args = 0, pretend = 0, frame = 0
 5813              		@ frame_needed = 0, uses_anonymous_args = 0
1825:Veno-Echo.cpp ****     {
 5814              		.loc 20 1825 5 view .LVU1566
 5815 0000 9FEDDA7A 		vldr.32	s14, .L417
1825:Veno-Echo.cpp ****     {
 5816              		.loc 20 1825 17 is_stmt 0 view .LVU1567
 5817 0004 D0ED007A 		vldr.32	s15, [r0]
1825:Veno-Echo.cpp ****     {
 5818              		.loc 20 1825 5 view .LVU1568
 5819 0008 F4EEC77A 		vcmpe.f32	s15, s14
1824:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5820              		.loc 20 1824 1 view .LVU1569
 5821 000c 38B5     		push	{r3, r4, r5, lr}
 5822              		.cfi_def_cfa_offset 16
 5823              		.cfi_offset 3, -16
 5824              		.cfi_offset 4, -12
 5825              		.cfi_offset 5, -8
 5826              		.cfi_offset 14, -4
1825:Veno-Echo.cpp ****     {
 5827              		.loc 20 1825 5 view .LVU1570
 5828 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 222


1824:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5829              		.loc 20 1824 1 view .LVU1571
 5830 0012 0446     		mov	r4, r0
 5831              	.LBB1481:
 5832              	.LBB1482:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5833              		.loc 20 70 28 view .LVU1572
 5834 0014 D64B     		ldr	r3, .L417+4
 5835              	.LBE1482:
 5836              	.LBE1481:
1825:Veno-Echo.cpp ****     {
 5837              		.loc 20 1825 5 view .LVU1573
 5838 0016 C0F23281 		blt	.L333
1825:Veno-Echo.cpp ****     {
 5839              		.loc 20 1825 43 discriminator 1 view .LVU1574
 5840 001a 9FEDD67A 		vldr.32	s14, .L417+8
 5841 001e F4EEC77A 		vcmpe.f32	s15, s14
 5842 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5843 0026 00F22A81 		bhi	.L333
1827:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5844              		.loc 20 1827 9 is_stmt 1 view .LVU1575
 5845              	.LVL286:
 5846              	.LBB1496:
 5847              	.LBI1481:
  68:Veno-Echo.cpp ****     {
 5848              		.loc 20 68 10 view .LVU1576
 5849              	.LBB1494:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5850              		.loc 20 70 9 view .LVU1577
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5851              		.loc 20 70 28 is_stmt 0 view .LVU1578
 5852 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5853              	.LVL287:
 5854              	.LBB1483:
 5855              	.LBI1483:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5856              		.loc 21 75 3 is_stmt 1 view .LVU1579
 5857              	.LBB1484:
 5858              		.loc 21 76 5 view .LVU1580
 5859              		.loc 21 76 5 is_stmt 0 view .LVU1581
 5860              	.LBE1484:
 5861              	.LBE1483:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5862              		.loc 20 70 53 view .LVU1582
 5863 002e 9FEDD26A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5864              		.loc 20 70 15 view .LVU1583
 5865 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5866              		.loc 20 70 53 view .LVU1584
 5867 0036 27EE067A 		vmul.f32	s14, s14, s12
 5868              	.LBB1486:
 5869              	.LBB1485:
 5870              		.loc 21 76 31 view .LVU1585
 5871 003a F0EEE66A 		vabs.f32	s13, s13
 5872              	.LBE1485:
 5873              	.LBE1486:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 223


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5874              		.loc 20 70 9 view .LVU1586
 5875 003e F4EEC76A 		vcmpe.f32	s13, s14
 5876 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5877 0046 0FDD     		ble	.L336
  74:Veno-Echo.cpp ****             //del -> Reset();
 5878              		.loc 20 74 29 view .LVU1587
 5879 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5880              	.LBB1487:
 5881              	.LBB1488:
 5882              		.loc 19 72 9 view .LVU1588
 5883 004c CB4D     		ldr	r5, .L417+16
 5884              	.LBE1488:
 5885              	.LBE1487:
 5886              	.LBE1494:
 5887              	.LBE1496:
1827:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5888              		.loc 20 1827 33 view .LVU1589
 5889 004e 1968     		ldr	r1, [r3]
 5890              	.LBB1497:
 5891              	.LBB1495:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5892              		.loc 20 73 13 is_stmt 1 view .LVU1590
 5893              	.LBB1491:
 5894              	.LBB1489:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5895              		.loc 19 71 9 is_stmt 0 view .LVU1591
 5896 0050 0020     		movs	r0, #0
 5897              	.LVL288:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5898              		.loc 19 71 9 view .LVU1592
 5899              	.LBE1489:
 5900              	.LBE1491:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5901              		.loc 20 73 27 view .LVU1593
 5902 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5903              		.loc 20 74 13 is_stmt 1 view .LVU1594
 5904              	.LVL289:
 5905              	.LBB1492:
 5906              	.LBI1487:
  69:delayline_reverse.h ****     {
 5907              		.loc 19 69 17 view .LVU1595
  69:delayline_reverse.h ****     {
 5908              		.loc 19 69 17 is_stmt 0 view .LVU1596
 5909              	.LBE1492:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5910              		.loc 20 74 29 view .LVU1597
 5911 0056 17EE102A 		vmov	r2, s14	@ int
 5912              	.LBB1493:
 5913              	.LBB1490:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5914              		.loc 19 71 9 view .LVU1598
 5915 005a 0860     		str	r0, [r1]	@ float
 5916 005c D4ED007A 		vldr.32	s15, [r4]
 5917              	.LVL290:
 5918              		.loc 19 72 9 view .LVU1599
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 224


 5919 0060 AA42     		cmp	r2, r5
 5920 0062 28BF     		it	cs
 5921 0064 2A46     		movcs	r2, r5
 5922 0066 0A61     		str	r2, [r1, #16]
 5923              	.LVL291:
 5924              	.L336:
 5925              		.loc 19 72 9 view .LVU1600
 5926              	.LBE1490:
 5927              	.LBE1493:
 5928              	.LBE1495:
 5929              	.LBE1497:
1828:Veno-Echo.cpp ****     }
 5930              		.loc 20 1828 9 is_stmt 1 view .LVU1601
 5931              	.LBB1498:
 5932              	.LBI1498:
  68:Veno-Echo.cpp ****     {
 5933              		.loc 20 68 10 view .LVU1602
 5934              	.LBB1499:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5935              		.loc 20 70 9 view .LVU1603
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5936              		.loc 20 70 28 is_stmt 0 view .LVU1604
 5937 0068 C54B     		ldr	r3, .L417+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5938              		.loc 20 70 53 view .LVU1605
 5939 006a 9FEDC36A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5940              		.loc 20 70 28 view .LVU1606
 5941 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5942              	.LVL292:
 5943              	.LBB1500:
 5944              	.LBI1500:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5945              		.loc 21 75 3 is_stmt 1 view .LVU1607
 5946              	.LBB1501:
 5947              		.loc 21 76 5 view .LVU1608
 5948              		.loc 21 76 5 is_stmt 0 view .LVU1609
 5949              	.LBE1501:
 5950              	.LBE1500:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5951              		.loc 20 70 15 view .LVU1610
 5952 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5953              		.loc 20 70 53 view .LVU1611
 5954 0076 27EE067A 		vmul.f32	s14, s14, s12
 5955              	.LBB1503:
 5956              	.LBB1502:
 5957              		.loc 21 76 31 view .LVU1612
 5958 007a F0EEE66A 		vabs.f32	s13, s13
 5959              	.LBE1502:
 5960              	.LBE1503:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5961              		.loc 20 70 9 view .LVU1613
 5962 007e F4EEC76A 		vcmpe.f32	s13, s14
 5963 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5964 0086 00F3D381 		bgt	.L412
 5965              	.LVL293:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 225


 5966              	.L339:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5967              		.loc 20 70 9 view .LVU1614
 5968              	.LBE1499:
 5969              	.LBE1498:
1836:Veno-Echo.cpp ****     {
 5970              		.loc 20 1836 5 is_stmt 1 view .LVU1615
 5971 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1836:Veno-Echo.cpp ****     {
 5972              		.loc 20 1836 17 is_stmt 0 view .LVU1616
 5973 008e 94ED010A 		vldr.32	s0, [r4, #4]
1836:Veno-Echo.cpp ****     {
 5974              		.loc 20 1836 5 view .LVU1617
 5975 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5976 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5977 009a 06DB     		blt	.L344
1836:Veno-Echo.cpp ****     {
 5978              		.loc 20 1836 35 discriminator 1 view .LVU1618
 5979 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5980 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5981 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5982 00a8 01D9     		bls	.L409
 5983              	.L344:
1842:Veno-Echo.cpp ****     }
 5984              		.loc 20 1842 9 is_stmt 1 view .LVU1619
1842:Veno-Echo.cpp ****     }
 5985              		.loc 20 1842 30 is_stmt 0 view .LVU1620
 5986 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5987              	.L409:
 5988 00ae B548     		ldr	r0, .L417+24
 5989 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5990              	.LVL294:
1845:Veno-Echo.cpp ****     {
 5991              		.loc 20 1845 5 is_stmt 1 view .LVU1621
1845:Veno-Echo.cpp ****     {
 5992              		.loc 20 1845 17 is_stmt 0 view .LVU1622
 5993 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1845:Veno-Echo.cpp ****     {
 5994              		.loc 20 1845 5 view .LVU1623
 5995 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5996 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5997 00c0 C0F2B381 		blt	.L404
1845:Veno-Echo.cpp ****     {
 5998              		.loc 20 1845 42 discriminator 1 view .LVU1624
 5999 00c4 DFEDB06A 		vldr.32	s13, .L417+28
1851:Veno-Echo.cpp ****     }
 6000              		.loc 20 1851 18 discriminator 1 view .LVU1625
 6001 00c8 9FEDB07A 		vldr.32	s14, .L417+32
 6002 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6003 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6004 00d4 88BF     		it	hi
 6005 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6006              	.L348:
1854:Veno-Echo.cpp ****     {
 6007              		.loc 20 1854 17 view .LVU1626
 6008 00da 94ED030A 		vldr.32	s0, [r4, #12]
1854:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 226


 6009              		.loc 20 1854 5 view .LVU1627
 6010 00de 9FEDAC7A 		vldr.32	s14, .L417+36
 6011 00e2 AC4B     		ldr	r3, .L417+40
 6012 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6013              	.LBB1514:
 6014              	.LBB1515:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6015              		.loc 9 60 20 view .LVU1628
 6016 00e8 AB4D     		ldr	r5, .L417+44
 6017 00ea C3ED007A 		vstr.32	s15, [r3]
 6018              	.LBE1515:
 6019              	.LBE1514:
1854:Veno-Echo.cpp ****     {
 6020              		.loc 20 1854 5 is_stmt 1 view .LVU1629
 6021 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6022 00f2 06DB     		blt	.L351
1854:Veno-Echo.cpp ****     {
 6023              		.loc 20 1854 40 is_stmt 0 discriminator 1 view .LVU1630
 6024 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6025 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6026 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6027 0100 01D9     		bls	.L410
 6028              	.L351:
1860:Veno-Echo.cpp ****     }
 6029              		.loc 20 1860 9 is_stmt 1 view .LVU1631
 6030              	.LVL295:
 6031              	.LBB1516:
 6032              	.LBI1516:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6033              		.loc 9 58 17 view .LVU1632
 6034              	.LBB1517:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6035              		.loc 9 60 9 view .LVU1633
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6036              		.loc 9 60 20 is_stmt 0 view .LVU1634
 6037 0102 9FEDA60A 		vldr.32	s0, .L417+48
 6038              	.LVL296:
 6039              	.L410:
 6040              		.loc 9 61 34 view .LVU1635
 6041 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6042              		.loc 9 60 20 view .LVU1636
 6043 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6044              		.loc 9 61 9 is_stmt 1 view .LVU1637
 6045              		.loc 9 61 34 is_stmt 0 view .LVU1638
 6046 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6047              	.LVL297:
 6048              	.LBE1517:
 6049              	.LBE1516:
1863:Veno-Echo.cpp ****     {
 6050              		.loc 20 1863 5 view .LVU1639
 6051 0110 DFEDA37A 		vldr.32	s15, .L417+52
 6052              	.LBB1519:
 6053              	.LBB1518:
 6054              		.loc 9 61 20 view .LVU1640
 6055 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6056              	.LBE1518:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 227


 6057              	.LBE1519:
1863:Veno-Echo.cpp ****     {
 6058              		.loc 20 1863 5 is_stmt 1 view .LVU1641
1863:Veno-Echo.cpp ****     {
 6059              		.loc 20 1863 17 is_stmt 0 view .LVU1642
 6060 0118 94ED050A 		vldr.32	s0, [r4, #20]
1863:Veno-Echo.cpp ****     {
 6061              		.loc 20 1863 5 view .LVU1643
 6062 011c B4EEE70A 		vcmpe.f32	s0, s15
 6063 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6064 0124 07DB     		blt	.L355
1863:Veno-Echo.cpp ****     {
 6065              		.loc 20 1863 40 discriminator 1 view .LVU1644
 6066 0126 DFED9F7A 		vldr.32	s15, .L417+56
 6067 012a B4EEE70A 		vcmpe.f32	s0, s15
 6068 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6069 0132 40F26781 		bls	.L413
 6070              	.L355:
1872:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6071              		.loc 20 1872 9 is_stmt 1 view .LVU1645
1872:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6072              		.loc 20 1872 22 is_stmt 0 view .LVU1646
 6073 0136 9FED9B0A 		vldr.32	s0, .L417+56
 6074 013a 9B48     		ldr	r0, .L417+60
 6075 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6076              	.LVL298:
1873:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6077              		.loc 20 1873 9 is_stmt 1 view .LVU1647
1873:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6078              		.loc 20 1873 22 is_stmt 0 view .LVU1648
 6079 0140 9FED980A 		vldr.32	s0, .L417+56
 6080 0144 9948     		ldr	r0, .L417+64
 6081 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6082              	.LVL299:
1874:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6083              		.loc 20 1874 9 is_stmt 1 view .LVU1649
1874:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6084              		.loc 20 1874 27 is_stmt 0 view .LVU1650
 6085 014a 9FED960A 		vldr.32	s0, .L417+56
 6086 014e 9848     		ldr	r0, .L417+68
 6087 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6088              	.LVL300:
1875:Veno-Echo.cpp ****     }
 6089              		.loc 20 1875 9 is_stmt 1 view .LVU1651
1875:Veno-Echo.cpp ****     }
 6090              		.loc 20 1875 27 is_stmt 0 view .LVU1652
 6091 0154 9FED930A 		vldr.32	s0, .L417+56
 6092 0158 9648     		ldr	r0, .L417+72
 6093 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6094              	.LVL301:
 6095              	.L358:
1878:Veno-Echo.cpp ****     {
 6096              		.loc 20 1878 5 is_stmt 1 view .LVU1653
1878:Veno-Echo.cpp ****     {
 6097              		.loc 20 1878 17 is_stmt 0 view .LVU1654
 6098 015e 94ED040A 		vldr.32	s0, [r4, #16]
1878:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 228


 6099              		.loc 20 1878 5 view .LVU1655
 6100 0162 DFED957A 		vldr.32	s15, .L417+76
 6101 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6102 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6103 016e 07DB     		blt	.L359
1878:Veno-Echo.cpp ****     {
 6104              		.loc 20 1878 40 discriminator 1 view .LVU1656
 6105 0170 DFED927A 		vldr.32	s15, .L417+80
 6106 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6107 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6108 017c 40F2E380 		bls	.L414
 6109              	.L359:
1887:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6110              		.loc 20 1887 9 is_stmt 1 view .LVU1657
1887:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6111              		.loc 20 1887 22 is_stmt 0 view .LVU1658
 6112 0180 9FED8F0A 		vldr.32	s0, .L417+84
 6113 0184 8F48     		ldr	r0, .L417+88
 6114 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6115              	.LVL302:
1888:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6116              		.loc 20 1888 9 is_stmt 1 view .LVU1659
1888:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6117              		.loc 20 1888 22 is_stmt 0 view .LVU1660
 6118 018a 9FED8D0A 		vldr.32	s0, .L417+84
 6119 018e 8E48     		ldr	r0, .L417+92
 6120 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6121              	.LVL303:
1889:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6122              		.loc 20 1889 9 is_stmt 1 view .LVU1661
1889:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6123              		.loc 20 1889 27 is_stmt 0 view .LVU1662
 6124 0194 9FED8A0A 		vldr.32	s0, .L417+84
 6125 0198 8C48     		ldr	r0, .L417+96
 6126 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6127              	.LVL304:
1890:Veno-Echo.cpp **** 
 6128              		.loc 20 1890 9 is_stmt 1 view .LVU1663
1890:Veno-Echo.cpp **** 
 6129              		.loc 20 1890 27 is_stmt 0 view .LVU1664
 6130 019e 9FED880A 		vldr.32	s0, .L417+84
 6131 01a2 8B48     		ldr	r0, .L417+100
 6132 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6133              	.LVL305:
 6134              	.L362:
1894:Veno-Echo.cpp ****     {
 6135              		.loc 20 1894 5 is_stmt 1 view .LVU1665
1894:Veno-Echo.cpp ****     {
 6136              		.loc 20 1894 17 is_stmt 0 view .LVU1666
 6137 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1894:Veno-Echo.cpp ****     {
 6138              		.loc 20 1894 5 view .LVU1667
 6139 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6140 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6141 01b4 07DB     		blt	.L363
1894:Veno-Echo.cpp ****     {
 6142              		.loc 20 1894 38 discriminator 1 view .LVU1668
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 229


 6143 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6144 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6145 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6146 01c2 40F29980 		bls	.L415
 6147              	.L363:
1908:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6148              		.loc 20 1908 9 is_stmt 1 view .LVU1669
1908:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6149              		.loc 20 1908 26 is_stmt 0 view .LVU1670
 6150 01c6 9FED710A 		vldr.32	s0, .L417+32
 6151 01ca 7948     		ldr	r0, .L417+68
 6152 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6153              	.LVL306:
1909:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6154              		.loc 20 1909 9 is_stmt 1 view .LVU1671
1909:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6155              		.loc 20 1909 26 is_stmt 0 view .LVU1672
 6156 01d0 9FED6E0A 		vldr.32	s0, .L417+32
 6157 01d4 7D48     		ldr	r0, .L417+96
 6158 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6159              	.LVL307:
1910:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6160              		.loc 20 1910 9 is_stmt 1 view .LVU1673
1910:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6161              		.loc 20 1910 26 is_stmt 0 view .LVU1674
 6162 01da 9FED6C0A 		vldr.32	s0, .L417+32
 6163 01de 7548     		ldr	r0, .L417+72
 6164 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6165              	.LVL308:
1911:Veno-Echo.cpp ****     }
 6166              		.loc 20 1911 9 is_stmt 1 view .LVU1675
1911:Veno-Echo.cpp ****     }
 6167              		.loc 20 1911 26 is_stmt 0 view .LVU1676
 6168 01e4 9FED690A 		vldr.32	s0, .L417+32
 6169 01e8 7948     		ldr	r0, .L417+100
 6170 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6171              	.LVL309:
 6172              	.L366:
1914:Veno-Echo.cpp ****     {
 6173              		.loc 20 1914 5 is_stmt 1 view .LVU1677
1914:Veno-Echo.cpp ****     {
 6174              		.loc 20 1914 16 is_stmt 0 view .LVU1678
 6175 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1914:Veno-Echo.cpp ****     {
 6176              		.loc 20 1914 5 view .LVU1679
 6177 01f2 9FED787A 		vldr.32	s14, .L417+104
1920:Veno-Echo.cpp ****     }
 6178              		.loc 20 1920 21 view .LVU1680
 6179 01f6 784B     		ldr	r3, .L417+108
1914:Veno-Echo.cpp ****     {
 6180              		.loc 20 1914 5 view .LVU1681
 6181 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6182 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6183 0200 06D4     		bmi	.L370
1918:Veno-Echo.cpp ****     {
 6184              		.loc 20 1918 14 is_stmt 1 view .LVU1682
 6185 0202 9FED767A 		vldr.32	s14, .L417+112
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 230


 6186 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6187 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6188 020e 70DC     		bgt	.L416
 6189              	.L370:
1916:Veno-Echo.cpp ****     }
 6190              		.loc 20 1916 9 view .LVU1683
1916:Veno-Echo.cpp ****     }
 6191              		.loc 20 1916 21 is_stmt 0 view .LVU1684
 6192 0210 0022     		movs	r2, #0
 6193 0212 1A70     		strb	r2, [r3]
 6194              	.L369:
1928:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
 6195              		.loc 20 1928 5 is_stmt 1 view .LVU1685
1928:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
 6196              		.loc 20 1928 18 is_stmt 0 view .LVU1686
 6197 0214 94ED080A 		vldr.32	s0, [r4, #32]
1928:Veno-Echo.cpp ****         && (setting.tempo <= static_cast<float> (maxTempo)) )
 6198              		.loc 20 1928 5 view .LVU1687
 6199 0218 DFED717A 		vldr.32	s15, .L417+116
 6200 021c B4EEE70A 		vcmpe.f32	s0, s15
 6201 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6202 0224 06DB     		blt	.L372
1929:Veno-Echo.cpp ****     {
 6203              		.loc 20 1929 9 view .LVU1688
 6204 0226 DFED6F7A 		vldr.32	s15, .L417+120
 6205 022a B4EEE70A 		vcmpe.f32	s0, s15
 6206 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6207 0232 01D9     		bls	.L411
 6208              	.L372:
1937:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6209              		.loc 20 1937 9 is_stmt 1 view .LVU1689
1937:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6210              		.loc 20 1937 27 is_stmt 0 view .LVU1690
 6211 0234 9FED6C0A 		vldr.32	s0, .L417+124
 6212              	.L411:
 6213 0238 5248     		ldr	r0, .L417+24
 6214 023a FFF7FEFF 		bl	_ZN8Taptempo8setTempoEf
 6215              	.LVL310:
1938:Veno-Echo.cpp ****     }
 6216              		.loc 20 1938 9 is_stmt 1 view .LVU1691
1938:Veno-Echo.cpp ****     }
 6217              		.loc 20 1938 31 is_stmt 0 view .LVU1692
 6218 023e 5148     		ldr	r0, .L417+24
 6219 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6220              	.LVL311:
 6221 0244 6948     		ldr	r0, .L417+128
 6222 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6223              	.LVL312:
1941:Veno-Echo.cpp ****     {
 6224              		.loc 20 1941 5 is_stmt 1 view .LVU1693
 6225 024a DFED697A 		vldr.32	s15, .L417+132
 6226 024e 94ED097A 		vldr.32	s14, [r4, #36]
1943:Veno-Echo.cpp ****     }
 6227              		.loc 20 1943 24 is_stmt 0 view .LVU1694
 6228 0252 6848     		ldr	r0, .L417+136
1941:Veno-Echo.cpp ****     {
 6229              		.loc 20 1941 5 view .LVU1695
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 231


 6230 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6231 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6232 025c 42DD     		ble	.L406
1943:Veno-Echo.cpp ****     }
 6233              		.loc 20 1943 9 is_stmt 1 view .LVU1696
1943:Veno-Echo.cpp ****     }
 6234              		.loc 20 1943 24 is_stmt 0 view .LVU1697
 6235 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
 6236              	.LVL313:
 6237              	.L378:
1950:Veno-Echo.cpp ****     {
 6238              		.loc 20 1950 5 is_stmt 1 view .LVU1698
 6239 0262 DFED637A 		vldr.32	s15, .L417+132
 6240 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1952:Veno-Echo.cpp ****     }
 6241              		.loc 20 1952 24 is_stmt 0 view .LVU1699
 6242 026a 6348     		ldr	r0, .L417+140
1950:Veno-Echo.cpp ****     {
 6243              		.loc 20 1950 5 view .LVU1700
 6244 026c B4EEE77A 		vcmpe.f32	s14, s15
 6245 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6246 0274 39DD     		ble	.L407
1952:Veno-Echo.cpp ****     }
 6247              		.loc 20 1952 9 is_stmt 1 view .LVU1701
1959:Veno-Echo.cpp **** 
 6248              		.loc 20 1959 1 is_stmt 0 view .LVU1702
 6249 0276 BDE83840 		pop	{r3, r4, r5, lr}
 6250              		.cfi_remember_state
 6251              		.cfi_restore 14
 6252              		.cfi_restore 5
 6253              		.cfi_restore 4
 6254              		.cfi_restore 3
 6255              		.cfi_def_cfa_offset 0
 6256              	.LVL314:
1952:Veno-Echo.cpp ****     }
 6257              		.loc 20 1952 24 view .LVU1703
 6258 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6259              	.LVL315:
 6260              	.L333:
 6261              		.cfi_restore_state
1832:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6262              		.loc 20 1832 9 is_stmt 1 view .LVU1704
 6263              	.LBB1520:
 6264              	.LBI1520:
  68:Veno-Echo.cpp ****     {
 6265              		.loc 20 68 10 view .LVU1705
 6266              	.LBB1521:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6267              		.loc 20 70 9 view .LVU1706
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6268              		.loc 20 70 28 is_stmt 0 view .LVU1707
 6269 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6270              	.LVL316:
 6271              	.LBB1522:
 6272              	.LBI1522:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6273              		.loc 21 75 3 is_stmt 1 view .LVU1708
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 232


 6274              	.LBB1523:
 6275              		.loc 21 76 5 view .LVU1709
 6276              		.loc 21 76 5 is_stmt 0 view .LVU1710
 6277              	.LBE1523:
 6278              	.LBE1522:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6279              		.loc 20 70 15 view .LVU1711
 6280 0282 DFED5E6A 		vldr.32	s13, .L417+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6281              		.loc 20 70 53 view .LVU1712
 6282 0286 9FED3C6A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6283              		.loc 20 70 15 view .LVU1713
 6284 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6285              		.loc 20 70 53 view .LVU1714
 6286 028e 67EE867A 		vmul.f32	s15, s15, s12
 6287              	.LBB1525:
 6288              	.LBB1524:
 6289              		.loc 21 76 31 view .LVU1715
 6290 0292 B0EEC77A 		vabs.f32	s14, s14
 6291              	.LBE1524:
 6292              	.LBE1525:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6293              		.loc 20 70 9 view .LVU1716
 6294 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6295 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6296 029e 06DD     		ble	.L340
 6297              	.LBE1521:
 6298              	.LBE1520:
1832:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6299              		.loc 20 1832 33 view .LVU1717
 6300 02a0 1A68     		ldr	r2, [r3]
 6301              	.LBB1531:
 6302              	.LBB1530:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6303              		.loc 20 73 13 is_stmt 1 view .LVU1718
 6304              	.LBB1526:
 6305              	.LBB1527:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6306              		.loc 19 71 9 is_stmt 0 view .LVU1719
 6307 02a2 0021     		movs	r1, #0
 6308              		.loc 19 72 9 view .LVU1720
 6309 02a4 5648     		ldr	r0, .L417+148
 6310              	.LVL317:
 6311              		.loc 19 72 9 view .LVU1721
 6312              	.LBE1527:
 6313              	.LBE1526:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6314              		.loc 20 73 27 view .LVU1722
 6315 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6316              		.loc 20 74 13 is_stmt 1 view .LVU1723
 6317              	.LVL318:
 6318              	.LBB1529:
 6319              	.LBI1526:
  69:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 233


 6320              		.loc 19 69 17 view .LVU1724
 6321              	.LBB1528:
 6322              		.loc 19 72 9 is_stmt 0 view .LVU1725
 6323 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6324              		.loc 19 71 9 view .LVU1726
 6325 02ac 1160     		str	r1, [r2]	@ float
 6326              	.LVL319:
 6327              	.L340:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6328              		.loc 19 71 9 view .LVU1727
 6329              	.LBE1528:
 6330              	.LBE1529:
 6331              	.LBE1530:
 6332              	.LBE1531:
1833:Veno-Echo.cpp ****     }
 6333              		.loc 20 1833 9 is_stmt 1 view .LVU1728
 6334              	.LBB1532:
 6335              	.LBI1532:
  68:Veno-Echo.cpp ****     {
 6336              		.loc 20 68 10 view .LVU1729
 6337              	.LBB1533:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6338              		.loc 20 70 9 view .LVU1730
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6339              		.loc 20 70 28 is_stmt 0 view .LVU1731
 6340 02ae 344B     		ldr	r3, .L417+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6341              		.loc 20 70 15 view .LVU1732
 6342 02b0 DFED526A 		vldr.32	s13, .L417+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6343              		.loc 20 70 28 view .LVU1733
 6344 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6345              	.LVL320:
 6346              	.LBB1534:
 6347              	.LBI1534:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6348              		.loc 21 75 3 is_stmt 1 view .LVU1734
 6349              	.LBB1535:
 6350              		.loc 21 76 5 view .LVU1735
 6351              		.loc 21 76 5 is_stmt 0 view .LVU1736
 6352              	.LBE1535:
 6353              	.LBE1534:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6354              		.loc 20 70 53 view .LVU1737
 6355 02b8 9FED2F6A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6356              		.loc 20 70 15 view .LVU1738
 6357 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6358              		.loc 20 70 53 view .LVU1739
 6359 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6360              	.LBB1537:
 6361              	.LBB1536:
 6362              		.loc 21 76 31 view .LVU1740
 6363 02c4 B0EEC77A 		vabs.f32	s14, s14
 6364              	.LBE1536:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 234


 6365              	.LBE1537:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6366              		.loc 20 70 9 view .LVU1741
 6367 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6368 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6369 02d0 7FF7DBAE 		ble	.L339
 6370              	.LBE1533:
 6371              	.LBE1532:
1833:Veno-Echo.cpp ****     }
 6372              		.loc 20 1833 33 view .LVU1742
 6373 02d4 1A68     		ldr	r2, [r3]
 6374              	.LBB1543:
 6375              	.LBB1542:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6376              		.loc 20 73 13 is_stmt 1 view .LVU1743
 6377              	.LBB1538:
 6378              	.LBB1539:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6379              		.loc 19 71 9 is_stmt 0 view .LVU1744
 6380 02d6 0021     		movs	r1, #0
 6381              		.loc 19 72 9 view .LVU1745
 6382 02d8 4948     		ldr	r0, .L417+148
 6383              	.LBE1539:
 6384              	.LBE1538:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6385              		.loc 20 73 27 view .LVU1746
 6386 02da C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6387              		.loc 20 74 13 is_stmt 1 view .LVU1747
 6388              	.LVL321:
 6389              	.LBB1541:
 6390              	.LBI1538:
  69:delayline_reverse.h ****     {
 6391              		.loc 19 69 17 view .LVU1748
 6392              	.LBB1540:
 6393              		.loc 19 72 9 is_stmt 0 view .LVU1749
 6394 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6395              		.loc 19 71 9 view .LVU1750
 6396 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6397              		.loc 19 73 5 view .LVU1751
 6398 02e2 D2E6     		b	.L339
 6399              	.LVL322:
 6400              	.L406:
 6401              		.loc 19 73 5 view .LVU1752
 6402              	.LBE1540:
 6403              	.LBE1541:
 6404              	.LBE1542:
 6405              	.LBE1543:
1947:Veno-Echo.cpp ****     }
 6406              		.loc 20 1947 9 is_stmt 1 view .LVU1753
1947:Veno-Echo.cpp ****     }
 6407              		.loc 20 1947 25 is_stmt 0 view .LVU1754
 6408 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6409              	.LVL323:
 6410 02e8 BBE7     		b	.L378
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 235


 6411              	.L407:
1956:Veno-Echo.cpp ****     }
 6412              		.loc 20 1956 9 is_stmt 1 view .LVU1755
1959:Veno-Echo.cpp **** 
 6413              		.loc 20 1959 1 is_stmt 0 view .LVU1756
 6414 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6415              		.cfi_remember_state
 6416              		.cfi_restore 14
 6417              		.cfi_restore 5
 6418              		.cfi_restore 4
 6419              		.cfi_restore 3
 6420              		.cfi_def_cfa_offset 0
 6421              	.LVL324:
1956:Veno-Echo.cpp ****     }
 6422              		.loc 20 1956 25 view .LVU1757
 6423 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6424              	.LVL325:
 6425              	.L416:
 6426              		.cfi_restore_state
1920:Veno-Echo.cpp ****     }
 6427              		.loc 20 1920 9 is_stmt 1 view .LVU1758
1920:Veno-Echo.cpp ****     }
 6428              		.loc 20 1920 21 is_stmt 0 view .LVU1759
 6429 02f2 0122     		movs	r2, #1
 6430 02f4 1A70     		strb	r2, [r3]
 6431 02f6 8DE7     		b	.L369
 6432              	.L415:
1896:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6433              		.loc 20 1896 9 is_stmt 1 view .LVU1760
1896:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6434              		.loc 20 1896 21 is_stmt 0 view .LVU1761
 6435 02f8 2B48     		ldr	r0, .L417+60
 6436 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6437              	.LVL326:
1897:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6438              		.loc 20 1897 9 is_stmt 1 view .LVU1762
1897:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6439              		.loc 20 1897 21 is_stmt 0 view .LVU1763
 6440 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6441 0302 3048     		ldr	r0, .L417+88
 6442 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6443              	.LVL327:
1898:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6444              		.loc 20 1898 9 is_stmt 1 view .LVU1764
1898:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6445              		.loc 20 1898 21 is_stmt 0 view .LVU1765
 6446 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6447 030c 2748     		ldr	r0, .L417+64
 6448 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6449              	.LVL328:
1899:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6450              		.loc 20 1899 9 is_stmt 1 view .LVU1766
1899:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6451              		.loc 20 1899 21 is_stmt 0 view .LVU1767
 6452 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6453 0316 2C48     		ldr	r0, .L417+92
 6454 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 236


 6455              	.LVL329:
1900:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6456              		.loc 20 1900 9 is_stmt 1 view .LVU1768
1900:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6457              		.loc 20 1900 26 is_stmt 0 view .LVU1769
 6458 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6459 0320 2348     		ldr	r0, .L417+68
 6460 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6461              	.LVL330:
1901:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6462              		.loc 20 1901 9 is_stmt 1 view .LVU1770
1901:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6463              		.loc 20 1901 26 is_stmt 0 view .LVU1771
 6464 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6465 032a 2848     		ldr	r0, .L417+96
 6466 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6467              	.LVL331:
1902:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6468              		.loc 20 1902 9 is_stmt 1 view .LVU1772
1902:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6469              		.loc 20 1902 26 is_stmt 0 view .LVU1773
 6470 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6471 0334 1F48     		ldr	r0, .L417+72
 6472 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6473              	.LVL332:
1903:Veno-Echo.cpp ****     }
 6474              		.loc 20 1903 9 is_stmt 1 view .LVU1774
1903:Veno-Echo.cpp ****     }
 6475              		.loc 20 1903 26 is_stmt 0 view .LVU1775
 6476 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6477 033e 2448     		ldr	r0, .L417+100
 6478 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6479              	.LVL333:
 6480 0344 53E7     		b	.L366
 6481              	.L414:
1880:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6482              		.loc 20 1880 9 is_stmt 1 view .LVU1776
1880:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6483              		.loc 20 1880 22 is_stmt 0 view .LVU1777
 6484 0346 1F48     		ldr	r0, .L417+88
 6485 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6486              	.LVL334:
1881:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6487              		.loc 20 1881 9 is_stmt 1 view .LVU1778
1881:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6488              		.loc 20 1881 22 is_stmt 0 view .LVU1779
 6489 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6490 0350 1D48     		ldr	r0, .L417+92
 6491 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6492              	.LVL335:
1882:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6493              		.loc 20 1882 9 is_stmt 1 view .LVU1780
1882:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6494              		.loc 20 1882 27 is_stmt 0 view .LVU1781
 6495 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6496 035a 1C48     		ldr	r0, .L417+96
 6497 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 237


 6498              	.LVL336:
1883:Veno-Echo.cpp ****     }
 6499              		.loc 20 1883 9 is_stmt 1 view .LVU1782
1883:Veno-Echo.cpp ****     }
 6500              		.loc 20 1883 27 is_stmt 0 view .LVU1783
 6501 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6502 0364 1A48     		ldr	r0, .L417+100
 6503 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6504              	.LVL337:
 6505 036a 1DE7     		b	.L362
 6506              	.L418:
 6507              		.align	2
 6508              	.L417:
 6509 036c 0050C346 		.word	1187205120
 6510 0370 00000000 		.word	.LANCHOR2
 6511 0374 00606A48 		.word	1214930944
 6512 0378 0AD7A33B 		.word	1000593162
 6513 037c BF270900 		.word	599999
 6514 0380 00000000 		.word	.LANCHOR3
 6515 0384 00000000 		.word	.LANCHOR26
 6516 0388 0000FA43 		.word	1140457472
 6517 038c 00000000 		.word	0
 6518 0390 CDCCCC3D 		.word	1036831949
 6519 0394 00000000 		.word	.LANCHOR68
 6520 0398 00000000 		.word	.LANCHOR76
 6521 039c 9A99A140 		.word	1084332442
 6522 03a0 0080BB44 		.word	1153138688
 6523 03a4 00803B46 		.word	1178304512
 6524 03a8 00000000 		.word	.LANCHOR47
 6525 03ac 00000000 		.word	.LANCHOR48
 6526 03b0 00000000 		.word	.LANCHOR49
 6527 03b4 00000000 		.word	.LANCHOR50
 6528 03b8 0000C842 		.word	1120403456
 6529 03bc 00004844 		.word	1145569280
 6530 03c0 00004843 		.word	1128792064
 6531 03c4 00000000 		.word	.LANCHOR35
 6532 03c8 00000000 		.word	.LANCHOR36
 6533 03cc 00000000 		.word	.LANCHOR37
 6534 03d0 00000000 		.word	.LANCHOR38
 6535 03d4 6666E63E 		.word	1055286886
 6536 03d8 00000000 		.word	.LANCHOR83
 6537 03dc CDCC0C3F 		.word	1057803469
 6538 03e0 00007044 		.word	1148190720
 6539 03e4 00A08C48 		.word	1217175552
 6540 03e8 0080BB46 		.word	1186693120
 6541 03ec 00000000 		.word	.LANCHOR90
 6542 03f0 48E1FA3E 		.word	1056629064
 6543 03f4 00000000 		.word	.LANCHOR93
 6544 03f8 00000000 		.word	.LANCHOR94
 6545 03fc 00650148 		.word	1208050944
 6546 0400 94050200 		.word	132500
 6547              	.L413:
1865:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6548              		.loc 20 1865 9 is_stmt 1 view .LVU1784
1865:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6549              		.loc 20 1865 22 is_stmt 0 view .LVU1785
 6550 0404 1248     		ldr	r0, .L419
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 238


 6551 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6552              	.LVL338:
1866:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6553              		.loc 20 1866 9 is_stmt 1 view .LVU1786
1866:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6554              		.loc 20 1866 22 is_stmt 0 view .LVU1787
 6555 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6556 040e 1148     		ldr	r0, .L419+4
 6557 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6558              	.LVL339:
1867:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6559              		.loc 20 1867 9 is_stmt 1 view .LVU1788
1867:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6560              		.loc 20 1867 27 is_stmt 0 view .LVU1789
 6561 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6562 0418 0F48     		ldr	r0, .L419+8
 6563 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6564              	.LVL340:
1868:Veno-Echo.cpp ****     }
 6565              		.loc 20 1868 9 is_stmt 1 view .LVU1790
1868:Veno-Echo.cpp ****     }
 6566              		.loc 20 1868 27 is_stmt 0 view .LVU1791
 6567 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6568 0422 0E48     		ldr	r0, .L419+12
 6569 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6570              	.LVL341:
 6571 0428 99E6     		b	.L358
 6572              	.L404:
1851:Veno-Echo.cpp ****     }
 6573              		.loc 20 1851 18 view .LVU1792
 6574 042a DFED0D7A 		vldr.32	s15, .L419+16
 6575 042e 54E6     		b	.L348
 6576              	.LVL342:
 6577              	.L412:
 6578              	.LBB1544:
 6579              	.LBB1512:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6580              		.loc 20 74 29 view .LVU1793
 6581 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6582              	.LBB1504:
 6583              	.LBB1505:
  72:delayline_reverse.h ****     }
 6584              		.loc 19 72 9 view .LVU1794
 6585 0434 0B4D     		ldr	r5, .L419+20
 6586              	.LBE1505:
 6587              	.LBE1504:
 6588              	.LBE1512:
 6589              	.LBE1544:
1828:Veno-Echo.cpp ****     }
 6590              		.loc 20 1828 33 view .LVU1795
 6591 0436 1968     		ldr	r1, [r3]
 6592              	.LBB1545:
 6593              	.LBB1513:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6594              		.loc 20 73 13 is_stmt 1 view .LVU1796
 6595              	.LBB1509:
 6596              	.LBB1506:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 239


  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6597              		.loc 19 71 9 is_stmt 0 view .LVU1797
 6598 0438 0020     		movs	r0, #0
 6599              	.LBE1506:
 6600              	.LBE1509:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6601              		.loc 20 73 27 view .LVU1798
 6602 043a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6603              		.loc 20 74 29 view .LVU1799
 6604 043e 17EE102A 		vmov	r2, s14	@ int
 6605              	.LBB1510:
 6606              	.LBB1507:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6607              		.loc 19 71 9 view .LVU1800
 6608 0442 0860     		str	r0, [r1]	@ float
 6609              	.LVL343:
  72:delayline_reverse.h ****     }
 6610              		.loc 19 72 9 view .LVU1801
 6611 0444 AA42     		cmp	r2, r5
 6612 0446 28BF     		it	cs
 6613 0448 2A46     		movcs	r2, r5
 6614              	.LBE1507:
 6615              	.LBE1510:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6616              		.loc 20 74 13 is_stmt 1 view .LVU1802
 6617              	.LVL344:
 6618              	.LBB1511:
 6619              	.LBI1504:
  69:delayline_reverse.h ****     {
 6620              		.loc 19 69 17 view .LVU1803
 6621              	.LBB1508:
  72:delayline_reverse.h ****     }
 6622              		.loc 19 72 9 is_stmt 0 view .LVU1804
 6623 044a 0A61     		str	r2, [r1, #16]
 6624              		.loc 19 73 5 view .LVU1805
 6625 044c 1DE6     		b	.L339
 6626              	.L420:
 6627 044e 00BF     		.align	2
 6628              	.L419:
 6629 0450 00000000 		.word	.LANCHOR47
 6630 0454 00000000 		.word	.LANCHOR48
 6631 0458 00000000 		.word	.LANCHOR49
 6632 045c 00000000 		.word	.LANCHOR50
 6633 0460 00000000 		.word	0
 6634 0464 BF270900 		.word	599999
 6635              	.LBE1508:
 6636              	.LBE1511:
 6637              	.LBE1513:
 6638              	.LBE1545:
 6639              		.cfi_endproc
 6640              	.LFE4333:
 6642              		.section	.text.startup.main,"ax",%progbits
 6643              		.align	1
 6644              		.p2align 2,,3
 6645              		.global	main
 6646              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 240


 6647              		.thumb
 6648              		.thumb_func
 6649              		.fpu fpv5-d16
 6651              	main:
 6652              	.LFB4311:
 646:Veno-Echo.cpp ****     // initialize hardware.
 6653              		.loc 20 646 1 is_stmt 1 view -0
 6654              		.cfi_startproc
 6655              		@ Volatile: function does not return.
 6656              		@ args = 0, pretend = 0, frame = 328
 6657              		@ frame_needed = 0, uses_anonymous_args = 0
 648:Veno-Echo.cpp ****     hw.Init();
 6658              		.loc 20 648 5 view .LVU1807
 646:Veno-Echo.cpp ****     // initialize hardware.
 6659              		.loc 20 646 1 is_stmt 0 view .LVU1808
 6660 0000 80B5     		push	{r7, lr}
 6661              		.cfi_def_cfa_offset 8
 6662              		.cfi_offset 7, -8
 6663              		.cfi_offset 14, -4
 648:Veno-Echo.cpp ****     hw.Init();
 6664              		.loc 20 648 17 view .LVU1809
 6665 0002 CF48     		ldr	r0, .L431
 646:Veno-Echo.cpp ****     // initialize hardware.
 6666              		.loc 20 646 1 view .LVU1810
 6667 0004 D4B0     		sub	sp, sp, #336
 6668              		.cfi_def_cfa_offset 344
 648:Veno-Echo.cpp ****     hw.Init();
 6669              		.loc 20 648 17 view .LVU1811
 6670 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6671              	.LVL345:
 649:Veno-Echo.cpp ****     
 6672              		.loc 20 649 5 is_stmt 1 view .LVU1812
 649:Veno-Echo.cpp ****     
 6673              		.loc 20 649 12 is_stmt 0 view .LVU1813
 6674 000a 0021     		movs	r1, #0
 6675 000c CC48     		ldr	r0, .L431
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6676              		.loc 20 653 16 view .LVU1814
 6677 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 649:Veno-Echo.cpp ****     
 6678              		.loc 20 649 12 view .LVU1815
 6679 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6680              	.LVL346:
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6681              		.loc 20 653 5 is_stmt 1 view .LVU1816
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6682              		.loc 20 653 16 is_stmt 0 view .LVU1817
 6683 0016 1D20     		movs	r0, #29
 6684 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6685              	.LVL347:
 6686 001c 0346     		mov	r3, r0	@ movhi
 6687 001e 0620     		movs	r0, #6
 660:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6688              		.loc 20 660 22 view .LVU1818
 6689 0020 0224     		movs	r4, #2
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6690              		.loc 20 653 16 view .LVU1819
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 241


 6691 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 6692 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6693              	.LVL348:
 6694 002a 0346     		mov	r3, r0	@ movhi
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6695              		.loc 20 653 80 view .LVU1820
 6696 002c C448     		ldr	r0, .L431
 6697              	.LBB1546:
 6698              	.LBB1547:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6699              		.loc 11 64 50 view .LVU1821
 6700 002e 4FF00108 		mov	r8, #1
 6701              	.LBE1547:
 6702              	.LBE1546:
 6703              	.LBB1550:
 6704              	.LBB1551:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6705              		.loc 8 58 57 view .LVU1822
 6706 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6707              	.LBE1551:
 6708              	.LBE1550:
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6709              		.loc 20 653 16 view .LVU1823
 6710 0036 ADF81030 		strh	r3, [sp, #16]	@ movhi
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6711              		.loc 20 653 80 view .LVU1824
 6712 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6713              	.LVL349:
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6714              		.loc 20 653 16 view .LVU1825
 6715 003e 0123     		movs	r3, #1
 6716 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6717 0044 BF48     		ldr	r0, .L431+4
 668:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6718              		.loc 20 668 20 view .LVU1826
 6719 0046 C04F     		ldr	r7, .L431+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 242


 6720              	.LBB1554:
 6721              	.LBB1555:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6722              		.loc 8 54 63 view .LVU1827
 6723 0048 C04D     		ldr	r5, .L431+12
 6724              	.LBE1555:
 6725              	.LBE1554:
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6726              		.loc 20 674 20 view .LVU1828
 6727 004a C14E     		ldr	r6, .L431+16
 653:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6728              		.loc 20 653 16 view .LVU1829
 6729 004c DDE90312 		ldrd	r1, r2, [sp, #12]
 6730 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6731              	.LVL350:
 654:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6732              		.loc 20 654 5 is_stmt 1 view .LVU1830
 654:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6733              		.loc 20 654 16 is_stmt 0 view .LVU1831
 6734 0054 1E20     		movs	r0, #30
 6735 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6736              	.LVL351:
 6737 005a 0346     		mov	r3, r0	@ movhi
 6738 005c 0720     		movs	r0, #7
 6739 005e ADF81430 		strh	r3, [sp, #20]	@ movhi
 6740 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6741              	.LVL352:
 6742 0066 0346     		mov	r3, r0	@ movhi
 654:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6743              		.loc 20 654 80 view .LVU1832
 6744 0068 B548     		ldr	r0, .L431
 654:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6745              		.loc 20 654 16 view .LVU1833
 6746 006a ADF81830 		strh	r3, [sp, #24]	@ movhi
 654:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6747              		.loc 20 654 80 view .LVU1834
 6748 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6749              	.LVL353:
 654:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6750              		.loc 20 654 16 view .LVU1835
 6751 0072 0123     		movs	r3, #1
 6752 0074 80EE080A 		vdiv.f32	s0, s0, s16
 6753 0078 B648     		ldr	r0, .L431+20
 6754 007a DDE90512 		ldrd	r1, r2, [sp, #20]
 6755 007e FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6756              	.LVL354:
 655:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6757              		.loc 20 655 5 is_stmt 1 view .LVU1836
 655:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6758              		.loc 20 655 18 is_stmt 0 view .LVU1837
 6759 0082 0A20     		movs	r0, #10
 6760 0084 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6761              	.LVL355:
 6762 0088 0346     		mov	r3, r0	@ movhi
 6763 008a 0220     		movs	r0, #2
 6764 008c ADF81C30 		strh	r3, [sp, #28]	@ movhi
 6765 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 243


 6766              	.LVL356:
 6767 0094 0346     		mov	r3, r0	@ movhi
 655:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6768              		.loc 20 655 85 view .LVU1838
 6769 0096 AA48     		ldr	r0, .L431
 655:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6770              		.loc 20 655 18 view .LVU1839
 6771 0098 ADF82030 		strh	r3, [sp, #32]	@ movhi
 655:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6772              		.loc 20 655 85 view .LVU1840
 6773 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6774              	.LVL357:
 655:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6775              		.loc 20 655 18 view .LVU1841
 6776 00a0 0023     		movs	r3, #0
 6777 00a2 80EE080A 		vdiv.f32	s0, s0, s16
 6778 00a6 AC48     		ldr	r0, .L431+24
 6779 00a8 DDE90712 		ldrd	r1, r2, [sp, #28]
 6780 00ac FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6781              	.LVL358:
 656:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6782              		.loc 20 656 5 is_stmt 1 view .LVU1842
 656:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6783              		.loc 20 656 18 is_stmt 0 view .LVU1843
 6784 00b0 0B20     		movs	r0, #11
 6785 00b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6786              	.LVL359:
 6787 00b6 0346     		mov	r3, r0	@ movhi
 6788 00b8 0320     		movs	r0, #3
 6789 00ba ADF82430 		strh	r3, [sp, #36]	@ movhi
 6790 00be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6791              	.LVL360:
 6792 00c2 0346     		mov	r3, r0	@ movhi
 656:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6793              		.loc 20 656 85 view .LVU1844
 6794 00c4 9E48     		ldr	r0, .L431
 656:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6795              		.loc 20 656 18 view .LVU1845
 6796 00c6 ADF82830 		strh	r3, [sp, #40]	@ movhi
 656:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6797              		.loc 20 656 85 view .LVU1846
 6798 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6799              	.LVL361:
 656:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6800              		.loc 20 656 18 view .LVU1847
 6801 00ce 0023     		movs	r3, #0
 6802 00d0 80EE080A 		vdiv.f32	s0, s0, s16
 6803 00d4 A148     		ldr	r0, .L431+28
 6804 00d6 DDE90912 		ldrd	r1, r2, [sp, #36]
 6805 00da FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6806              	.LVL362:
 657:Veno-Echo.cpp **** 
 6807              		.loc 20 657 5 is_stmt 1 view .LVU1848
 657:Veno-Echo.cpp **** 
 6808              		.loc 20 657 20 is_stmt 0 view .LVU1849
 6809 00de 1820     		movs	r0, #24
 6810 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 244


 6811              	.LVL363:
 6812 00e4 0346     		mov	r3, r0	@ movhi
 6813 00e6 0420     		movs	r0, #4
 6814 00e8 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6815 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6816              	.LVL364:
 6817 00f0 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp **** 
 6818              		.loc 20 657 93 view .LVU1850
 6819 00f2 9348     		ldr	r0, .L431
 657:Veno-Echo.cpp **** 
 6820              		.loc 20 657 20 view .LVU1851
 6821 00f4 ADF83030 		strh	r3, [sp, #48]	@ movhi
 657:Veno-Echo.cpp **** 
 6822              		.loc 20 657 93 view .LVU1852
 6823 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6824              	.LVL365:
 657:Veno-Echo.cpp **** 
 6825              		.loc 20 657 20 view .LVU1853
 6826 00fc 2346     		mov	r3, r4
 6827 00fe 80EE080A 		vdiv.f32	s0, s0, s16
 6828 0102 9748     		ldr	r0, .L431+32
 6829 0104 DDE90B12 		ldrd	r1, r2, [sp, #44]
 6830 0108 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6831              	.LVL366:
 660:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6832              		.loc 20 660 5 is_stmt 1 view .LVU1854
 660:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6833              		.loc 20 660 22 is_stmt 0 view .LVU1855
 6834 010c 0020     		movs	r0, #0
 6835 010e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6836              	.LVL367:
 6837 0112 0346     		mov	r3, r0	@ movhi
 660:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6838              		.loc 20 660 55 view .LVU1856
 6839 0114 8A48     		ldr	r0, .L431
 660:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6840              		.loc 20 660 22 view .LVU1857
 6841 0116 ADF83430 		strh	r3, [sp, #52]	@ movhi
 660:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6842              		.loc 20 660 55 view .LVU1858
 6843 011a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6844              	.LVL368:
 660:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6845              		.loc 20 660 22 view .LVU1859
 6846 011e 0D99     		ldr	r1, [sp, #52]
 6847 0120 80EE080A 		vdiv.f32	s0, s0, s16
 6848 0124 4246     		mov	r2, r8
 6849 0126 4346     		mov	r3, r8
 6850 0128 8E48     		ldr	r0, .L431+36
 6851 012a 0094     		str	r4, [sp]
 6852 012c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6853              	.LVL369:
 661:Veno-Echo.cpp **** 
 6854              		.loc 20 661 5 is_stmt 1 view .LVU1860
 661:Veno-Echo.cpp **** 
 6855              		.loc 20 661 22 is_stmt 0 view .LVU1861
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 245


 6856 0130 4046     		mov	r0, r8
 6857 0132 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6858              	.LVL370:
 6859 0136 0346     		mov	r3, r0	@ movhi
 661:Veno-Echo.cpp **** 
 6860              		.loc 20 661 55 view .LVU1862
 6861 0138 8148     		ldr	r0, .L431
 661:Veno-Echo.cpp **** 
 6862              		.loc 20 661 22 view .LVU1863
 6863 013a ADF83830 		strh	r3, [sp, #56]	@ movhi
 661:Veno-Echo.cpp **** 
 6864              		.loc 20 661 55 view .LVU1864
 6865 013e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6866              	.LVL371:
 661:Veno-Echo.cpp **** 
 6867              		.loc 20 661 22 view .LVU1865
 6868 0142 4246     		mov	r2, r8
 6869 0144 80EE080A 		vdiv.f32	s0, s0, s16
 6870 0148 0E99     		ldr	r1, [sp, #56]
 6871 014a 4346     		mov	r3, r8
 6872 014c 8648     		ldr	r0, .L431+40
 6873 014e 0094     		str	r4, [sp]
 6874              	.LBB1558:
 6875              	.LBB1559:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6876              		.loc 8 54 63 view .LVU1866
 6877 0150 4FF07C54 		mov	r4, #1056964608
 6878              	.LBE1559:
 6879              	.LBE1558:
 661:Veno-Echo.cpp **** 
 6880              		.loc 20 661 22 view .LVU1867
 6881 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6882              	.LVL372:
 664:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6883              		.loc 20 664 5 is_stmt 1 view .LVU1868
 664:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6884              		.loc 20 664 14 is_stmt 0 view .LVU1869
 6885 0158 1720     		movs	r0, #23
 6886 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6887              	.LVL373:
 6888 015e 0346     		mov	r3, r0	@ movhi
 664:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6889              		.loc 20 664 48 view .LVU1870
 6890 0160 7748     		ldr	r0, .L431
 664:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6891              		.loc 20 664 14 view .LVU1871
 6892 0162 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 664:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6893              		.loc 20 664 48 view .LVU1872
 6894 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6895              	.LVL374:
 664:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6896              		.loc 20 664 14 view .LVU1873
 6897 016a 0F99     		ldr	r1, [sp, #60]
 6898 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6899 0170 7E48     		ldr	r0, .L431+44
 6900 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 246


 6901              	.LVL375:
 665:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6902              		.loc 20 665 6 is_stmt 1 view .LVU1874
 665:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6903              		.loc 20 665 18 is_stmt 0 view .LVU1875
 6904 0176 7E49     		ldr	r1, .L431+48
 6905 0178 7E48     		ldr	r0, .L431+52
 6906 017a FFF7FEFF 		bl	_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
 6907              	.LVL376:
 668:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6908              		.loc 20 668 5 is_stmt 1 view .LVU1876
 668:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6909              		.loc 20 668 20 is_stmt 0 view .LVU1877
 6910 017e 7048     		ldr	r0, .L431
 6911 0180 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6912              	.LVL377:
 6913 0184 3846     		mov	r0, r7
 6914 0186 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6915              	.LVL378:
 669:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6916              		.loc 20 669 5 is_stmt 1 view .LVU1878
 6917              	.LBB1562:
 6918              	.LBI1558:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6919              		.loc 8 54 17 view .LVU1879
 6920              	.LBB1560:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6921              		.loc 8 54 48 view .LVU1880
 6922              	.LBE1560:
 6923              	.LBE1562:
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6924              		.loc 20 674 20 is_stmt 0 view .LVU1881
 6925 018a 6D48     		ldr	r0, .L431
 6926              	.LBB1563:
 6927              	.LBB1552:
 6928              		.loc 8 58 57 view .LVU1882
 6929 018c C7ED008A 		vstr.32	s17, [r7]
 6930              	.LBE1552:
 6931              	.LBE1563:
 6932              	.LBB1564:
 6933              	.LBB1561:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6934              		.loc 8 54 63 view .LVU1883
 6935 0190 BC60     		str	r4, [r7, #8]	@ float
 6936              	.LVL379:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6937              		.loc 8 54 63 view .LVU1884
 6938              	.LBE1561:
 6939              	.LBE1564:
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6940              		.loc 20 670 5 is_stmt 1 view .LVU1885
 6941              	.LBB1565:
 6942              	.LBI1554:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6943              		.loc 8 54 17 view .LVU1886
 6944              	.LBB1556:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 247


 6945              		.loc 8 54 48 view .LVU1887
 6946              	.LBE1556:
 6947              	.LBE1565:
 6948              	.LBB1566:
 6949              	.LBB1567:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6950              		.loc 8 54 63 is_stmt 0 view .LVU1888
 6951 0192 7C61     		str	r4, [r7, #20]	@ float
 6952              	.LBE1567:
 6953              	.LBE1566:
 6954              	.LBB1569:
 6955              	.LBB1557:
 6956 0194 FD60     		str	r5, [r7, #12]	@ float
 6957              	.LVL380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6958              		.loc 8 54 63 view .LVU1889
 6959              	.LBE1557:
 6960              	.LBE1569:
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6961              		.loc 20 671 5 is_stmt 1 view .LVU1890
 6962              	.LBB1570:
 6963              	.LBI1566:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6964              		.loc 8 54 17 view .LVU1891
 6965              	.LBB1568:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6966              		.loc 8 54 48 view .LVU1892
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6967              		.loc 8 54 48 is_stmt 0 view .LVU1893
 6968              	.LBE1568:
 6969              	.LBE1570:
 672:Veno-Echo.cpp **** 
 6970              		.loc 20 672 5 is_stmt 1 view .LVU1894
 6971              	.LBB1571:
 6972              	.LBI1550:
 6973              		.loc 8 58 17 view .LVU1895
 6974              	.LBB1553:
 6975              		.loc 8 58 52 view .LVU1896
 6976              		.loc 8 58 52 is_stmt 0 view .LVU1897
 6977              	.LBE1553:
 6978              	.LBE1571:
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6979              		.loc 20 674 5 is_stmt 1 view .LVU1898
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6980              		.loc 20 674 20 is_stmt 0 view .LVU1899
 6981 0196 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6982              	.LVL381:
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6983              		.loc 20 680 17 view .LVU1900
 6984 019a 774F     		ldr	r7, .L431+56
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6985              		.loc 20 674 20 view .LVU1901
 6986 019c 3046     		mov	r0, r6
 6987 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6988              	.LVL382:
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6989              		.loc 20 675 5 is_stmt 1 view .LVU1902
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 248


 6990              	.LBB1572:
 6991              	.LBI1572:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6992              		.loc 8 54 17 view .LVU1903
 6993              	.LBB1573:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6994              		.loc 8 54 48 view .LVU1904
 6995              	.LBE1573:
 6996              	.LBE1572:
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6997              		.loc 20 680 17 is_stmt 0 view .LVU1905
 6998 01a2 6748     		ldr	r0, .L431
 6999              	.LBB1575:
 7000              	.LBB1576:
 7001              		.loc 8 58 57 view .LVU1906
 7002 01a4 C6ED008A 		vstr.32	s17, [r6]
 7003              	.LBE1576:
 7004              	.LBE1575:
 7005              	.LBB1578:
 7006              	.LBB1574:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7007              		.loc 8 54 63 view .LVU1907
 7008 01a8 B460     		str	r4, [r6, #8]	@ float
 7009              	.LVL383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7010              		.loc 8 54 63 view .LVU1908
 7011              	.LBE1574:
 7012              	.LBE1578:
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7013              		.loc 20 676 5 is_stmt 1 view .LVU1909
 7014              	.LBB1579:
 7015              	.LBI1579:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7016              		.loc 8 54 17 view .LVU1910
 7017              	.LBB1580:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7018              		.loc 8 54 48 view .LVU1911
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7019              		.loc 8 54 63 is_stmt 0 view .LVU1912
 7020 01aa F560     		str	r5, [r6, #12]	@ float
 7021              	.LVL384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7022              		.loc 8 54 63 view .LVU1913
 7023              	.LBE1580:
 7024              	.LBE1579:
 677:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7025              		.loc 20 677 5 is_stmt 1 view .LVU1914
 7026              	.LBB1581:
 7027              	.LBI1581:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7028              		.loc 8 54 17 view .LVU1915
 7029              	.LBB1582:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7030              		.loc 8 54 48 view .LVU1916
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7031              		.loc 8 54 63 is_stmt 0 view .LVU1917
 7032 01ac 7461     		str	r4, [r6, #20]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 249


 7033              	.LVL385:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7034              		.loc 8 54 63 view .LVU1918
 7035              	.LBE1582:
 7036              	.LBE1581:
 678:Veno-Echo.cpp **** 
 7037              		.loc 20 678 5 is_stmt 1 view .LVU1919
 7038              	.LBB1583:
 7039              	.LBI1575:
 7040              		.loc 8 58 17 view .LVU1920
 7041              	.LBB1577:
 7042              		.loc 8 58 52 view .LVU1921
 7043              		.loc 8 58 52 is_stmt 0 view .LVU1922
 7044              	.LBE1577:
 7045              	.LBE1583:
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7046              		.loc 20 680 5 is_stmt 1 view .LVU1923
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7047              		.loc 20 680 17 is_stmt 0 view .LVU1924
 7048 01ae FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7049              	.LVL386:
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7050              		.loc 20 686 17 view .LVU1925
 7051 01b2 724E     		ldr	r6, .L431+60
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7052              		.loc 20 680 17 view .LVU1926
 7053 01b4 3846     		mov	r0, r7
 7054 01b6 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7055              	.LVL387:
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7056              		.loc 20 681 5 is_stmt 1 view .LVU1927
 7057              	.LBB1584:
 7058              	.LBI1584:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7059              		.loc 8 54 17 view .LVU1928
 7060              	.LBB1585:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7061              		.loc 8 54 48 view .LVU1929
 7062              	.LBE1585:
 7063              	.LBE1584:
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7064              		.loc 20 686 17 is_stmt 0 view .LVU1930
 7065 01ba 6148     		ldr	r0, .L431
 7066              	.LBB1587:
 7067              	.LBB1588:
 7068              		.loc 8 58 57 view .LVU1931
 7069 01bc C7ED008A 		vstr.32	s17, [r7]
 7070              	.LBE1588:
 7071              	.LBE1587:
 7072              	.LBB1590:
 7073              	.LBB1586:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7074              		.loc 8 54 63 view .LVU1932
 7075 01c0 BD60     		str	r5, [r7, #8]	@ float
 7076              	.LVL388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7077              		.loc 8 54 63 view .LVU1933
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 250


 7078              	.LBE1586:
 7079              	.LBE1590:
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7080              		.loc 20 682 5 is_stmt 1 view .LVU1934
 7081              	.LBB1591:
 7082              	.LBI1591:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7083              		.loc 8 54 17 view .LVU1935
 7084              	.LBB1592:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7085              		.loc 8 54 48 view .LVU1936
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7086              		.loc 8 54 63 is_stmt 0 view .LVU1937
 7087 01c2 FD60     		str	r5, [r7, #12]	@ float
 7088              	.LVL389:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7089              		.loc 8 54 63 view .LVU1938
 7090              	.LBE1592:
 7091              	.LBE1591:
 683:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7092              		.loc 20 683 5 is_stmt 1 view .LVU1939
 7093              	.LBB1593:
 7094              	.LBI1593:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7095              		.loc 8 54 17 view .LVU1940
 7096              	.LBB1594:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7097              		.loc 8 54 48 view .LVU1941
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7098              		.loc 8 54 63 is_stmt 0 view .LVU1942
 7099 01c4 7D61     		str	r5, [r7, #20]	@ float
 7100              	.LVL390:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7101              		.loc 8 54 63 view .LVU1943
 7102              	.LBE1594:
 7103              	.LBE1593:
 684:Veno-Echo.cpp **** 
 7104              		.loc 20 684 5 is_stmt 1 view .LVU1944
 7105              	.LBB1595:
 7106              	.LBI1587:
 7107              		.loc 8 58 17 view .LVU1945
 7108              	.LBB1589:
 7109              		.loc 8 58 52 view .LVU1946
 7110              		.loc 8 58 52 is_stmt 0 view .LVU1947
 7111              	.LBE1589:
 7112              	.LBE1595:
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7113              		.loc 20 686 5 is_stmt 1 view .LVU1948
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7114              		.loc 20 686 17 is_stmt 0 view .LVU1949
 7115 01c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7116              	.LVL391:
 7117 01ca 3046     		mov	r0, r6
 705:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7118              		.loc 20 705 17 view .LVU1950
 7119 01cc 9FED6C8A 		vldr.32	s16, .L431+64
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 251


 7120              		.loc 20 686 17 view .LVU1951
 7121 01d0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7122              	.LVL392:
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7123              		.loc 20 687 5 is_stmt 1 view .LVU1952
 7124              	.LBB1596:
 7125              	.LBI1596:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7126              		.loc 8 54 17 view .LVU1953
 7127              	.LBB1597:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7128              		.loc 8 54 48 view .LVU1954
 7129              	.LBE1597:
 7130              	.LBE1596:
 7131              	.LBB1599:
 7132              	.LBB1600:
 7133              	.LBB1601:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7134              		.loc 11 45 16 is_stmt 0 view .LVU1955
 7135 01d4 6B49     		ldr	r1, .L431+68
 7136              	.LBE1601:
 7137              	.LBE1600:
 7138              	.LBE1599:
 7139              	.LBB1606:
 7140              	.LBB1607:
 7141              	.LBB1608:
 7142 01d6 6C4A     		ldr	r2, .L431+72
 7143              	.LBE1608:
 7144              	.LBE1607:
 7145              	.LBE1606:
 7146              	.LBB1613:
 7147              	.LBB1614:
 7148              	.LBB1615:
 7149 01d8 6C4B     		ldr	r3, .L431+76
 7150              	.LBE1615:
 7151              	.LBE1614:
 7152              	.LBE1613:
 7153              	.LBB1620:
 7154              	.LBB1604:
 7155              	.LBB1602:
 7156 01da 0C60     		str	r4, [r1]	@ float
 7157              	.LBE1602:
 7158              	.LBE1604:
 7159              	.LBE1620:
 7160              	.LBB1621:
 7161              	.LBB1611:
 7162              	.LBB1609:
 7163 01dc 1460     		str	r4, [r2]	@ float
 7164              	.LBE1609:
 7165              	.LBE1611:
 7166              	.LBE1621:
 7167              	.LBB1622:
 7168              	.LBB1618:
 7169              	.LBB1616:
 7170 01de 1C60     		str	r4, [r3]	@ float
 7171              	.LBE1616:
 7172              	.LBE1618:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 252


 7173              	.LBE1622:
 7174              	.LBB1623:
 7175              	.LBB1548:
 7176              		.loc 11 64 50 view .LVU1956
 7177 01e0 81F80480 		strb	r8, [r1, #4]
 7178              	.LBE1548:
 7179              	.LBE1623:
 7180              	.LBB1624:
 7181              	.LBB1625:
 7182 01e4 82F80480 		strb	r8, [r2, #4]
 7183              	.LBE1625:
 7184              	.LBE1624:
 7185              	.LBB1627:
 7186              	.LBB1628:
 7187 01e8 83F80480 		strb	r8, [r3, #4]
 7188              	.LBE1628:
 7189              	.LBE1627:
 701:Veno-Echo.cpp **** 
 7190              		.loc 20 701 15 view .LVU1957
 7191 01ec 5448     		ldr	r0, .L431
 7192              	.LBB1630:
 7193              	.LBB1631:
 7194              		.loc 8 58 57 view .LVU1958
 7195 01ee C6ED008A 		vstr.32	s17, [r6]
 7196              	.LBE1631:
 7197              	.LBE1630:
 7198              	.LBB1633:
 7199              	.LBB1598:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7200              		.loc 8 54 63 view .LVU1959
 7201 01f2 B560     		str	r5, [r6, #8]	@ float
 7202              	.LVL393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7203              		.loc 8 54 63 view .LVU1960
 7204              	.LBE1598:
 7205              	.LBE1633:
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7206              		.loc 20 688 5 is_stmt 1 view .LVU1961
 7207              	.LBB1634:
 7208              	.LBI1634:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7209              		.loc 8 54 17 view .LVU1962
 7210              	.LBB1635:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7211              		.loc 8 54 48 view .LVU1963
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7212              		.loc 8 54 63 is_stmt 0 view .LVU1964
 7213 01f4 F560     		str	r5, [r6, #12]	@ float
 7214              	.LVL394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7215              		.loc 8 54 63 view .LVU1965
 7216              	.LBE1635:
 7217              	.LBE1634:
 689:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7218              		.loc 20 689 5 is_stmt 1 view .LVU1966
 7219              	.LBB1636:
 7220              	.LBI1636:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 253


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7221              		.loc 8 54 17 view .LVU1967
 7222              	.LBB1637:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7223              		.loc 8 54 48 view .LVU1968
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7224              		.loc 8 54 63 is_stmt 0 view .LVU1969
 7225 01f6 7561     		str	r5, [r6, #20]	@ float
 7226              	.LVL395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7227              		.loc 8 54 63 view .LVU1970
 7228              	.LBE1637:
 7229              	.LBE1636:
 690:Veno-Echo.cpp **** 
 7230              		.loc 20 690 5 is_stmt 1 view .LVU1971
 7231              	.LBB1638:
 7232              	.LBI1630:
 7233              		.loc 8 58 17 view .LVU1972
 7234              	.LBB1632:
 7235              		.loc 8 58 52 view .LVU1973
 7236              		.loc 8 58 52 is_stmt 0 view .LVU1974
 7237              	.LBE1632:
 7238              	.LBE1638:
 693:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7239              		.loc 20 693 5 is_stmt 1 view .LVU1975
 7240              	.LBB1639:
 7241              	.LBI1599:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7242              		.loc 11 51 17 view .LVU1976
 7243              	.LBE1639:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7244              		.loc 11 51 26 view .LVU1977
 7245              	.LBB1640:
 7246              	.LBB1605:
 7247              	.LBI1600:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7248              		.loc 11 43 17 view .LVU1978
 7249              	.LBB1603:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7250              		.loc 11 45 9 view .LVU1979
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7251              		.loc 11 46 9 view .LVU1980
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7252              		.loc 11 46 9 is_stmt 0 view .LVU1981
 7253              	.LBE1603:
 7254              	.LBE1605:
 7255              	.LBE1640:
 694:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7256              		.loc 20 694 5 is_stmt 1 view .LVU1982
 7257              	.LBB1641:
 7258              	.LBI1546:
 7259              		.loc 11 64 17 view .LVU1983
 7260              	.LBB1549:
 7261              		.loc 11 64 43 view .LVU1984
 7262              		.loc 11 64 43 is_stmt 0 view .LVU1985
 7263              	.LBE1549:
 7264              	.LBE1641:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 254


 695:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7265              		.loc 20 695 5 is_stmt 1 view .LVU1986
 7266              	.LBB1642:
 7267              	.LBI1606:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7268              		.loc 11 51 17 view .LVU1987
 7269              	.LBE1642:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7270              		.loc 11 51 26 view .LVU1988
 7271              	.LBB1643:
 7272              	.LBB1612:
 7273              	.LBI1607:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7274              		.loc 11 43 17 view .LVU1989
 7275              	.LBB1610:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7276              		.loc 11 45 9 view .LVU1990
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7277              		.loc 11 46 9 view .LVU1991
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7278              		.loc 11 46 9 is_stmt 0 view .LVU1992
 7279              	.LBE1610:
 7280              	.LBE1612:
 7281              	.LBE1643:
 696:Veno-Echo.cpp **** 
 7282              		.loc 20 696 5 is_stmt 1 view .LVU1993
 7283              	.LBB1644:
 7284              	.LBI1624:
 7285              		.loc 11 64 17 view .LVU1994
 7286              	.LBB1626:
 7287              		.loc 11 64 43 view .LVU1995
 7288              		.loc 11 64 43 is_stmt 0 view .LVU1996
 7289              	.LBE1626:
 7290              	.LBE1644:
 698:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7291              		.loc 20 698 5 is_stmt 1 view .LVU1997
 7292              	.LBB1645:
 7293              	.LBI1613:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7294              		.loc 11 51 17 view .LVU1998
 7295              	.LBE1645:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7296              		.loc 11 51 26 view .LVU1999
 7297              	.LBB1646:
 7298              	.LBB1619:
 7299              	.LBI1614:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7300              		.loc 11 43 17 view .LVU2000
 7301              	.LBB1617:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7302              		.loc 11 45 9 view .LVU2001
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7303              		.loc 11 46 9 view .LVU2002
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7304              		.loc 11 46 9 is_stmt 0 view .LVU2003
 7305              	.LBE1617:
 7306              	.LBE1619:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 255


 7307              	.LBE1646:
 699:Veno-Echo.cpp **** 
 7308              		.loc 20 699 5 is_stmt 1 view .LVU2004
 7309              	.LBB1647:
 7310              	.LBI1627:
 7311              		.loc 11 64 17 view .LVU2005
 7312              	.LBB1629:
 7313              		.loc 11 64 43 view .LVU2006
 7314              		.loc 11 64 43 is_stmt 0 view .LVU2007
 7315              	.LBE1629:
 7316              	.LBE1647:
 701:Veno-Echo.cpp **** 
 7317              		.loc 20 701 5 is_stmt 1 view .LVU2008
 701:Veno-Echo.cpp **** 
 7318              		.loc 20 701 15 is_stmt 0 view .LVU2009
 7319 01f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7320              	.LVL396:
 7321 01fc FFF7FEFF 		bl	_Z10InitDelaysf
 7322              	.LVL397:
 704:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7323              		.loc 20 704 5 is_stmt 1 view .LVU2010
 704:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7324              		.loc 20 704 15 is_stmt 0 view .LVU2011
 7325 0200 4F48     		ldr	r0, .L431
 7326 0202 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7327              	.LVL398:
 7328 0206 6248     		ldr	r0, .L431+80
 7329 0208 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7330              	.LVL399:
 705:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7331              		.loc 20 705 5 is_stmt 1 view .LVU2012
 705:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7332              		.loc 20 705 17 is_stmt 0 view .LVU2013
 7333 020c B0EE480A 		vmov.f32	s0, s16
 7334 0210 5F48     		ldr	r0, .L431+80
 7335 0212 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7336              	.LVL400:
 706:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7337              		.loc 20 706 5 is_stmt 1 view .LVU2014
 706:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7338              		.loc 20 706 18 is_stmt 0 view .LVU2015
 7339 0216 9FED5F0A 		vldr.32	s0, .L431+84
 7340 021a 5D48     		ldr	r0, .L431+80
 7341 021c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7342              	.LVL401:
 707:Veno-Echo.cpp **** 
 7343              		.loc 20 707 5 is_stmt 1 view .LVU2016
 707:Veno-Echo.cpp **** 
 7344              		.loc 20 707 19 is_stmt 0 view .LVU2017
 7345 0220 9FED5D0A 		vldr.32	s0, .L431+88
 7346 0224 5A48     		ldr	r0, .L431+80
 7347 0226 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7348              	.LVL402:
 709:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7349              		.loc 20 709 5 is_stmt 1 view .LVU2018
 709:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7350              		.loc 20 709 15 is_stmt 0 view .LVU2019
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 256


 7351 022a 4548     		ldr	r0, .L431
 7352 022c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7353              	.LVL403:
 7354 0230 5A48     		ldr	r0, .L431+92
 7355 0232 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7356              	.LVL404:
 710:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7357              		.loc 20 710 5 is_stmt 1 view .LVU2020
 710:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7358              		.loc 20 710 17 is_stmt 0 view .LVU2021
 7359 0236 B0EE480A 		vmov.f32	s0, s16
 7360 023a 5848     		ldr	r0, .L431+92
 7361 023c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7362              	.LVL405:
 711:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7363              		.loc 20 711 5 is_stmt 1 view .LVU2022
 711:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7364              		.loc 20 711 18 is_stmt 0 view .LVU2023
 7365 0240 9FED540A 		vldr.32	s0, .L431+84
 7366 0244 5548     		ldr	r0, .L431+92
 7367 0246 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7368              	.LVL406:
 712:Veno-Echo.cpp **** 
 7369              		.loc 20 712 5 is_stmt 1 view .LVU2024
 712:Veno-Echo.cpp **** 
 7370              		.loc 20 712 19 is_stmt 0 view .LVU2025
 7371 024a 9FED530A 		vldr.32	s0, .L431+88
 7372 024e 5348     		ldr	r0, .L431+92
 7373 0250 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7374              	.LVL407:
 715:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7375              		.loc 20 715 5 is_stmt 1 view .LVU2026
 715:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7376              		.loc 20 715 15 is_stmt 0 view .LVU2027
 7377 0254 3A48     		ldr	r0, .L431
 7378 0256 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7379              	.LVL408:
 7380 025a 5148     		ldr	r0, .L431+96
 7381 025c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7382              	.LVL409:
 716:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7383              		.loc 20 716 5 is_stmt 1 view .LVU2028
 716:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7384              		.loc 20 716 17 is_stmt 0 view .LVU2029
 7385 0260 B0EE480A 		vmov.f32	s0, s16
 7386 0264 4E48     		ldr	r0, .L431+96
 7387 0266 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7388              	.LVL410:
 717:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7389              		.loc 20 717 5 is_stmt 1 view .LVU2030
 717:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7390              		.loc 20 717 18 is_stmt 0 view .LVU2031
 7391 026a 9FED530A 		vldr.32	s0, .L431+120
 7392 026e 4C48     		ldr	r0, .L431+96
 7393 0270 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7394              	.LVL411:
 718:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 257


 7395              		.loc 20 718 5 is_stmt 1 view .LVU2032
 718:Veno-Echo.cpp **** 
 7396              		.loc 20 718 19 is_stmt 0 view .LVU2033
 7397 0274 9FED480A 		vldr.32	s0, .L431+88
 7398 0278 4948     		ldr	r0, .L431+96
 7399 027a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7400              	.LVL412:
 720:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7401              		.loc 20 720 5 is_stmt 1 view .LVU2034
 720:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7402              		.loc 20 720 15 is_stmt 0 view .LVU2035
 7403 027e 3048     		ldr	r0, .L431
 7404 0280 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7405              	.LVL413:
 7406 0284 4748     		ldr	r0, .L431+100
 7407 0286 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7408              	.LVL414:
 721:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7409              		.loc 20 721 5 is_stmt 1 view .LVU2036
 721:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7410              		.loc 20 721 17 is_stmt 0 view .LVU2037
 7411 028a B0EE480A 		vmov.f32	s0, s16
 7412 028e 4548     		ldr	r0, .L431+100
 7413 0290 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7414              	.LVL415:
 722:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7415              		.loc 20 722 5 is_stmt 1 view .LVU2038
 722:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7416              		.loc 20 722 18 is_stmt 0 view .LVU2039
 7417 0294 9FED480A 		vldr.32	s0, .L431+120
 7418 0298 4248     		ldr	r0, .L431+100
 7419 029a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7420              	.LVL416:
 723:Veno-Echo.cpp **** 
 7421              		.loc 20 723 5 is_stmt 1 view .LVU2040
 723:Veno-Echo.cpp **** 
 7422              		.loc 20 723 19 is_stmt 0 view .LVU2041
 7423 029e 9FED3E0A 		vldr.32	s0, .L431+88
 7424 02a2 4048     		ldr	r0, .L431+100
 7425 02a4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7426              	.LVL417:
 726:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7427              		.loc 20 726 5 is_stmt 1 view .LVU2042
 726:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7428              		.loc 20 726 20 is_stmt 0 view .LVU2043
 7429 02a8 2548     		ldr	r0, .L431
 7430 02aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7431              	.LVL418:
 7432 02ae 3E48     		ldr	r0, .L431+104
 7433 02b0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7434              	.LVL419:
 727:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7435              		.loc 20 727 5 is_stmt 1 view .LVU2044
 727:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7436              		.loc 20 727 22 is_stmt 0 view .LVU2045
 7437 02b4 B0EE480A 		vmov.f32	s0, s16
 7438 02b8 3B48     		ldr	r0, .L431+104
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 258


 7439 02ba FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7440              	.LVL420:
 728:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7441              		.loc 20 728 5 is_stmt 1 view .LVU2046
 728:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7442              		.loc 20 728 23 is_stmt 0 view .LVU2047
 7443 02be 9FED350A 		vldr.32	s0, .L431+84
 7444 02c2 3948     		ldr	r0, .L431+104
 7445 02c4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7446              	.LVL421:
 729:Veno-Echo.cpp **** 
 7447              		.loc 20 729 5 is_stmt 1 view .LVU2048
 729:Veno-Echo.cpp **** 
 7448              		.loc 20 729 24 is_stmt 0 view .LVU2049
 7449 02c8 9FED330A 		vldr.32	s0, .L431+88
 7450 02cc 3648     		ldr	r0, .L431+104
 7451 02ce FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7452              	.LVL422:
 731:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7453              		.loc 20 731 5 is_stmt 1 view .LVU2050
 731:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7454              		.loc 20 731 20 is_stmt 0 view .LVU2051
 7455 02d2 1B48     		ldr	r0, .L431
 7456 02d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7457              	.LVL423:
 7458 02d8 3448     		ldr	r0, .L431+108
 7459 02da FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7460              	.LVL424:
 732:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7461              		.loc 20 732 5 is_stmt 1 view .LVU2052
 732:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7462              		.loc 20 732 22 is_stmt 0 view .LVU2053
 7463 02de B0EE480A 		vmov.f32	s0, s16
 7464 02e2 3248     		ldr	r0, .L431+108
 7465 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7466              	.LVL425:
 733:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7467              		.loc 20 733 5 is_stmt 1 view .LVU2054
 733:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7468              		.loc 20 733 23 is_stmt 0 view .LVU2055
 7469 02e8 9FED2A0A 		vldr.32	s0, .L431+84
 7470 02ec 2F48     		ldr	r0, .L431+108
 7471 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7472              	.LVL426:
 734:Veno-Echo.cpp **** 
 7473              		.loc 20 734 5 is_stmt 1 view .LVU2056
 734:Veno-Echo.cpp **** 
 7474              		.loc 20 734 24 is_stmt 0 view .LVU2057
 7475 02f2 9FED290A 		vldr.32	s0, .L431+88
 7476 02f6 2D48     		ldr	r0, .L431+108
 7477 02f8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7478              	.LVL427:
 737:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7479              		.loc 20 737 5 is_stmt 1 view .LVU2058
 737:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7480              		.loc 20 737 20 is_stmt 0 view .LVU2059
 7481 02fc 1048     		ldr	r0, .L431
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 259


 7482 02fe FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7483              	.LVL428:
 7484 0302 2B48     		ldr	r0, .L431+112
 7485 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7486              	.LVL429:
 738:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7487              		.loc 20 738 5 is_stmt 1 view .LVU2060
 738:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7488              		.loc 20 738 22 is_stmt 0 view .LVU2061
 7489 0308 B0EE480A 		vmov.f32	s0, s16
 7490 030c 2848     		ldr	r0, .L431+112
 7491 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7492              	.LVL430:
 739:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7493              		.loc 20 739 5 is_stmt 1 view .LVU2062
 739:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7494              		.loc 20 739 23 is_stmt 0 view .LVU2063
 7495 0312 9FED290A 		vldr.32	s0, .L431+120
 7496 0316 2648     		ldr	r0, .L431+112
 7497 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7498              	.LVL431:
 740:Veno-Echo.cpp **** 
 7499              		.loc 20 740 5 is_stmt 1 view .LVU2064
 740:Veno-Echo.cpp **** 
 7500              		.loc 20 740 24 is_stmt 0 view .LVU2065
 7501 031c 9FED1E0A 		vldr.32	s0, .L431+88
 7502 0320 2348     		ldr	r0, .L431+112
 7503 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7504              	.LVL432:
 742:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7505              		.loc 20 742 5 is_stmt 1 view .LVU2066
 742:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7506              		.loc 20 742 20 is_stmt 0 view .LVU2067
 7507 0326 0648     		ldr	r0, .L431
 7508 0328 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7509              	.LVL433:
 7510 032c 2148     		ldr	r0, .L431+116
 7511 032e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7512              	.LVL434:
 743:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7513              		.loc 20 743 5 is_stmt 1 view .LVU2068
 743:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7514              		.loc 20 743 22 is_stmt 0 view .LVU2069
 7515 0332 B0EE480A 		vmov.f32	s0, s16
 7516 0336 1F48     		ldr	r0, .L431+116
 7517 0338 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7518              	.LVL435:
 7519 033c 3EE0     		b	.L432
 7520              	.L433:
 7521 033e 00BF     		.align	2
 7522              	.L431:
 7523 0340 00000000 		.word	.LANCHOR4
 7524 0344 00000000 		.word	.LANCHOR95
 7525 0348 00000000 		.word	.LANCHOR102
 7526 034c 0AD7233C 		.word	1008981770
 7527 0350 00000000 		.word	.LANCHOR103
 7528 0354 00000000 		.word	.LANCHOR96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 260


 7529 0358 00000000 		.word	.LANCHOR93
 7530 035c 00000000 		.word	.LANCHOR94
 7531 0360 00000000 		.word	.LANCHOR97
 7532 0364 00000000 		.word	.LANCHOR98
 7533 0368 00000000 		.word	.LANCHOR99
 7534 036c 00000000 		.word	.LANCHOR100
 7535 0370 00000000 		.word	.LANCHOR101
 7536 0374 00000000 		.word	.LANCHOR89
 7537 0378 00000000 		.word	.LANCHOR104
 7538 037c 00000000 		.word	.LANCHOR105
 7539 0380 00000000 		.word	0
 7540 0384 00000000 		.word	.LANCHOR106
 7541 0388 00000000 		.word	.LANCHOR107
 7542 038c 00000000 		.word	.LANCHOR65
 7543 0390 00000000 		.word	.LANCHOR47
 7544 0394 00803B46 		.word	1178304512
 7545 0398 3333333F 		.word	1060320051
 7546 039c 00000000 		.word	.LANCHOR48
 7547 03a0 00000000 		.word	.LANCHOR35
 7548 03a4 00000000 		.word	.LANCHOR36
 7549 03a8 00000000 		.word	.LANCHOR49
 7550 03ac 00000000 		.word	.LANCHOR50
 7551 03b0 00000000 		.word	.LANCHOR37
 7552 03b4 00000000 		.word	.LANCHOR38
 7553 03b8 00004843 		.word	1128792064
 7554              	.L432:
 744:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7555              		.loc 20 744 5 is_stmt 1 view .LVU2070
 744:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7556              		.loc 20 744 23 is_stmt 0 view .LVU2071
 7557 03bc 1FED020A 		vldr.32	s0, .L431+120
 7558 03c0 9348     		ldr	r0, .L434
 7559 03c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7560              	.LVL436:
 745:Veno-Echo.cpp **** 
 7561              		.loc 20 745 5 is_stmt 1 view .LVU2072
 745:Veno-Echo.cpp **** 
 7562              		.loc 20 745 24 is_stmt 0 view .LVU2073
 7563 03c6 9FED930A 		vldr.32	s0, .L434+4
 7564 03ca 9148     		ldr	r0, .L434
 7565 03cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7566              	.LVL437:
 751:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7567              		.loc 20 751 5 is_stmt 1 view .LVU2074
 751:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7568              		.loc 20 751 13 is_stmt 0 view .LVU2075
 7569 03d0 9148     		ldr	r0, .L434+8
 7570 03d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7571              	.LVL438:
 7572 03d6 F0EE407A 		vmov.f32	s15, s0
 7573              	.LVL439:
 7574              	.LBB1648:
 7575              	.LBI1648:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7576              		.loc 9 42 10 is_stmt 1 view .LVU2076
 7577              	.LBB1649:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 261


 7578              		.loc 9 44 9 view .LVU2077
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7579              		.loc 9 44 20 is_stmt 0 view .LVU2078
 7580 03da 904F     		ldr	r7, .L434+12
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7581              		.loc 9 46 20 view .LVU2079
 7582 03dc 9FED900A 		vldr.32	s0, .L434+16
 7583              	.LVL440:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7584              		.loc 9 45 27 view .LVU2080
 7585 03e0 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7586              		.loc 9 49 34 view .LVU2081
 7587 03e4 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7588              		.loc 9 47 20 view .LVU2082
 7589 03e6 7C60     		str	r4, [r7, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7590              		.loc 9 44 20 view .LVU2083
 7591 03e8 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7592              		.loc 9 45 9 is_stmt 1 view .LVU2084
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7593              		.loc 9 48 20 is_stmt 0 view .LVU2085
 7594 03ec 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7595              		.loc 9 46 20 view .LVU2086
 7596 03f0 87ED020A 		vstr.32	s0, [r7, #8]
 7597 03f4 8B4C     		ldr	r4, .L434+20
 7598 03f6 8C4D     		ldr	r5, .L434+24
 7599 03f8 8C4E     		ldr	r6, .L434+28
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7600              		.loc 9 45 20 view .LVU2087
 7601 03fa 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7602              		.loc 9 46 9 is_stmt 1 view .LVU2088
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7603              		.loc 9 47 9 view .LVU2089
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7604              		.loc 9 48 9 view .LVU2090
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7605              		.loc 9 49 9 view .LVU2091
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7606              		.loc 9 49 34 is_stmt 0 view .LVU2092
 7607 03fe FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7608              	.LVL441:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7609              		.loc 9 52 20 view .LVU2093
 7610 0402 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7611              		.loc 9 49 34 view .LVU2094
 7612 0406 F0EE407A 		vmov.f32	s15, s0
 7613              	.LBE1649:
 7614              	.LBE1648:
 7615              	.LBB1652:
 7616              	.LBB1653:
 7617              		.loc 9 61 34 view .LVU2095
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 262


 7618 040a 3846     		mov	r0, r7
 7619              	.LBE1653:
 7620              	.LBE1652:
 7621              	.LBB1657:
 7622              	.LBB1658:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7623              		.loc 9 72 19 view .LVU2096
 7624 040c 87F80080 		strb	r8, [r7]
 7625              	.LBE1658:
 7626              	.LBE1657:
 7627              	.LBB1660:
 7628              	.LBB1650:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7629              		.loc 9 52 20 view .LVU2097
 7630 0410 BB84     		strh	r3, [r7, #36]	@ movhi
 7631              	.LBE1650:
 7632              	.LBE1660:
 7633              	.LBB1661:
 7634              	.LBB1654:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7635              		.loc 9 61 34 view .LVU2098
 7636 0412 B0EE680A 		vmov.f32	s0, s17
 7637              	.LBE1654:
 7638              	.LBE1661:
 7639              	.LBB1662:
 7640              	.LBB1651:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7641              		.loc 9 49 20 view .LVU2099
 7642 0416 C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7643              		.loc 9 50 9 is_stmt 1 view .LVU2100
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7644              		.loc 9 51 9 view .LVU2101
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7645              		.loc 9 52 9 view .LVU2102
 7646              	.LVL442:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7647              		.loc 9 52 9 is_stmt 0 view .LVU2103
 7648              	.LBE1651:
 7649              	.LBE1662:
 752:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7650              		.loc 20 752 5 is_stmt 1 view .LVU2104
 7651              	.LBB1663:
 7652              	.LBI1657:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7653              		.loc 9 70 17 view .LVU2105
 7654              	.LBB1659:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 263


 7655              		.loc 9 72 9 view .LVU2106
 7656              		.loc 9 72 9 is_stmt 0 view .LVU2107
 7657              	.LBE1659:
 7658              	.LBE1663:
 753:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7659              		.loc 20 753 5 is_stmt 1 view .LVU2108
 7660              	.LBB1664:
 7661              	.LBI1652:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7662              		.loc 9 58 17 view .LVU2109
 7663              	.LBB1655:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7664              		.loc 9 60 9 view .LVU2110
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7665              		.loc 9 61 9 view .LVU2111
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7666              		.loc 9 60 20 is_stmt 0 view .LVU2112
 7667 041a C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7668              		.loc 9 61 34 view .LVU2113
 7669 041e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7670              	.LVL443:
 7671 0422 F0EE407A 		vmov.f32	s15, s0
 7672              	.LBE1655:
 7673              	.LBE1664:
 756:Veno-Echo.cpp **** 
 7674              		.loc 20 756 19 view .LVU2114
 7675 0426 824A     		ldr	r2, .L434+32
 7676 0428 44F62061 		movw	r1, #20000
 7677 042c B7EE040A 		vmov.f32	s0, #1.25e+0
 7678 0430 1823     		movs	r3, #24
 7679 0432 8048     		ldr	r0, .L434+36
 7680              	.LBB1665:
 7681              	.LBB1666:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7682              		.loc 9 67 46 view .LVU2115
 7683 0434 C7ED018A 		vstr.32	s17, [r7, #4]
 7684              	.LBE1666:
 7685              	.LBE1665:
 7686              	.LBB1668:
 7687              	.LBB1656:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7688              		.loc 9 61 20 view .LVU2116
 7689 0438 C7ED067A 		vstr.32	s15, [r7, #24]
 7690              	.LVL444:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7691              		.loc 9 61 20 view .LVU2117
 7692              	.LBE1656:
 7693              	.LBE1668:
 754:Veno-Echo.cpp **** 
 7694              		.loc 20 754 5 is_stmt 1 view .LVU2118
 7695              	.LBB1669:
 7696              	.LBI1665:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7697              		.loc 9 67 17 view .LVU2119
 7698              	.LBB1667:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 264


 7699              		.loc 9 67 41 view .LVU2120
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7700              		.loc 9 67 41 is_stmt 0 view .LVU2121
 7701              	.LBE1667:
 7702              	.LBE1669:
 756:Veno-Echo.cpp **** 
 7703              		.loc 20 756 5 is_stmt 1 view .LVU2122
 756:Veno-Echo.cpp **** 
 7704              		.loc 20 756 19 is_stmt 0 view .LVU2123
 7705 043c FFF7FEFF 		bl	_ZN8Taptempo4initEmmfi
 7706              	.LVL445:
 760:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7707              		.loc 20 760 5 is_stmt 1 view .LVU2124
 760:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7708              		.loc 20 760 23 is_stmt 0 view .LVU2125
 7709 0440 1820     		movs	r0, #24
 771:Veno-Echo.cpp **** 
 7710              		.loc 20 771 17 view .LVU2126
 7711 0442 1CAF     		add	r7, sp, #112
 760:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7712              		.loc 20 760 23 view .LVU2127
 7713 0444 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7714              	.LVL446:
 7715 0448 0346     		mov	r3, r0	@ movhi
 7716 044a 7348     		ldr	r0, .L434+8
 7717 044c ADF84030 		strh	r3, [sp, #64]	@ movhi
 7718 0450 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7719              	.LVL447:
 7720 0454 1099     		ldr	r1, [sp, #64]
 7721 0456 7848     		ldr	r0, .L434+40
 7722 0458 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7723              	.LVL448:
 761:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7724              		.loc 20 761 5 is_stmt 1 view .LVU2128
 761:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7725              		.loc 20 761 27 is_stmt 0 view .LVU2129
 7726 045c 7548     		ldr	r0, .L434+36
 7727 045e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7728              	.LVL449:
 7729 0462 7548     		ldr	r0, .L434+40
 7730 0464 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7731              	.LVL450:
 762:Veno-Echo.cpp **** 
 7732              		.loc 20 762 5 is_stmt 1 view .LVU2130
 762:Veno-Echo.cpp **** 
 7733              		.loc 20 762 29 is_stmt 0 view .LVU2131
 7734 0468 7348     		ldr	r0, .L434+40
 7735 046a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7736              	.LVL451:
 766:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7737              		.loc 20 766 5 is_stmt 1 view .LVU2132
 766:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7738              		.loc 20 766 41 is_stmt 0 view .LVU2133
 7739 046e 1CA8     		add	r0, sp, #112
 7740 0470 FFF7FEFF 		bl	_Z12LoadSettingsv
 7741              	.LVL452:
 770:Veno-Echo.cpp ****     AltControls = SavedSettings;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 265


 7742              		.loc 20 770 5 is_stmt 1 view .LVU2134
 770:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7743              		.loc 20 770 18 is_stmt 0 view .LVU2135
 7744 0474 1CA8     		add	r0, sp, #112
 7745 0476 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7746              	.LVL453:
 771:Veno-Echo.cpp **** 
 7747              		.loc 20 771 5 is_stmt 1 view .LVU2136
 771:Veno-Echo.cpp **** 
 7748              		.loc 20 771 17 is_stmt 0 view .LVU2137
 7749 047a DFF8C8C1 		ldr	ip, .L434+52
 7750 047e 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7751 0480 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7752 0484 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7753 0486 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7754 048a 97E80700 		ldm	r7, {r0, r1, r2}
 7755 048e 8CE80700 		stm	ip, {r0, r1, r2}
 776:Veno-Echo.cpp **** 
 7756              		.loc 20 776 5 is_stmt 1 view .LVU2138
 778:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7757              		.loc 20 778 5 view .LVU2139
 778:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7758              		.loc 20 778 28 is_stmt 0 view .LVU2140
 7759 0492 0F20     		movs	r0, #15
 7760 0494 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7761              	.LVL454:
 7762 0498 0346     		mov	r3, r0	@ movhi
 7763 049a 32A8     		add	r0, sp, #200
 7764 049c ADF84430 		strh	r3, [sp, #68]	@ movhi
 7765 04a0 1199     		ldr	r1, [sp, #68]
 7766 04a2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7767              	.LVL455:
 779:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7768              		.loc 20 779 5 is_stmt 1 view .LVU2141
 779:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7769              		.loc 20 779 28 is_stmt 0 view .LVU2142
 7770 04a6 1020     		movs	r0, #16
 7771 04a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7772              	.LVL456:
 7773 04ac 0346     		mov	r3, r0	@ movhi
 7774 04ae 0DF1D900 		add	r0, sp, #217
 7775 04b2 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7776 04b6 1299     		ldr	r1, [sp, #72]
 7777 04b8 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7778              	.LVL457:
 780:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7779              		.loc 20 780 5 is_stmt 1 view .LVU2143
 780:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7780              		.loc 20 780 28 is_stmt 0 view .LVU2144
 7781 04bc 1120     		movs	r0, #17
 7782 04be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7783              	.LVL458:
 7784 04c2 0346     		mov	r3, r0	@ movhi
 7785 04c4 0DF1EA00 		add	r0, sp, #234
 7786 04c8 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7787 04cc 1399     		ldr	r1, [sp, #76]
 7788 04ce FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 266


 7789              	.LVL459:
 781:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7790              		.loc 20 781 5 is_stmt 1 view .LVU2145
 781:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7791              		.loc 20 781 28 is_stmt 0 view .LVU2146
 7792 04d2 1220     		movs	r0, #18
 7793 04d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7794              	.LVL460:
 7795 04d8 0346     		mov	r3, r0	@ movhi
 7796 04da 0DF1FB00 		add	r0, sp, #251
 7797 04de ADF85030 		strh	r3, [sp, #80]	@ movhi
 7798 04e2 1499     		ldr	r1, [sp, #80]
 7799 04e4 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7800              	.LVL461:
 782:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7801              		.loc 20 782 5 is_stmt 1 view .LVU2147
 782:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7802              		.loc 20 782 28 is_stmt 0 view .LVU2148
 7803 04e8 1320     		movs	r0, #19
 7804 04ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7805              	.LVL462:
 7806 04ee 0346     		mov	r3, r0	@ movhi
 7807 04f0 43A8     		add	r0, sp, #268
 7808 04f2 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7809 04f6 1599     		ldr	r1, [sp, #84]
 7810 04f8 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7811              	.LVL463:
 783:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7812              		.loc 20 783 5 is_stmt 1 view .LVU2149
 783:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7813              		.loc 20 783 28 is_stmt 0 view .LVU2150
 7814 04fc 1420     		movs	r0, #20
 7815 04fe FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7816              	.LVL464:
 7817 0502 0346     		mov	r3, r0	@ movhi
 7818 0504 0DF21D10 		addw	r0, sp, #285
 7819 0508 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7820 050c 1699     		ldr	r1, [sp, #88]
 7821 050e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7822              	.LVL465:
 785:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7823              		.loc 20 785 5 is_stmt 1 view .LVU2151
 785:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7824              		.loc 20 785 28 is_stmt 0 view .LVU2152
 7825 0512 1620     		movs	r0, #22
 7826 0514 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7827              	.LVL466:
 7828 0518 0346     		mov	r3, r0	@ movhi
 7829 051a 0DF59770 		add	r0, sp, #302
 7830 051e ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7831 0522 1799     		ldr	r1, [sp, #92]
 7832 0524 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7833              	.LVL467:
 786:Veno-Echo.cpp **** 
 7834              		.loc 20 786 5 is_stmt 1 view .LVU2153
 786:Veno-Echo.cpp **** 
 7835              		.loc 20 786 25 is_stmt 0 view .LVU2154
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 267


 7836 0528 1920     		movs	r0, #25
 7837 052a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7838              	.LVL468:
 7839 052e 0346     		mov	r3, r0	@ movhi
 7840 0530 0E20     		movs	r0, #14
 7841 0532 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7842 0536 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7843              	.LVL469:
 7844 053a 0346     		mov	r3, r0	@ movhi
 7845 053c 0D20     		movs	r0, #13
 7846 053e ADF86430 		strh	r3, [sp, #100]	@ movhi
 7847 0542 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7848              	.LVL470:
 7849 0546 0346     		mov	r3, r0	@ movhi
 7850 0548 0C20     		movs	r0, #12
 7851 054a ADF86830 		strh	r3, [sp, #104]	@ movhi
 7852 054e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7853              	.LVL471:
 7854 0552 BDF86810 		ldrh	r1, [sp, #104]
 7855 0556 0822     		movs	r2, #8
 7856 0558 199B     		ldr	r3, [sp, #100]
 7857 055a ADF80010 		strh	r1, [sp]	@ movhi
 7858 055e ADF80400 		strh	r0, [sp, #4]	@ movhi
 7859 0562 1899     		ldr	r1, [sp, #96]
 7860 0564 ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7861 0568 0DF23F10 		addw	r0, sp, #319
 7862 056c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7863              	.LVL472:
 789:Veno-Echo.cpp ****     hw.adc.Start();
 7864              		.loc 20 789 5 is_stmt 1 view .LVU2155
 789:Veno-Echo.cpp ****     hw.adc.Start();
 7865              		.loc 20 789 16 is_stmt 0 view .LVU2156
 7866 0570 32A9     		add	r1, sp, #200
 7867 0572 0623     		movs	r3, #6
 7868 0574 0822     		movs	r2, #8
 7869 0576 3148     		ldr	r0, .L434+44
 7870 0578 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7871              	.LVL473:
 790:Veno-Echo.cpp **** 
 7872              		.loc 20 790 5 is_stmt 1 view .LVU2157
 790:Veno-Echo.cpp **** 
 7873              		.loc 20 790 17 is_stmt 0 view .LVU2158
 7874 057c 2F48     		ldr	r0, .L434+44
 7875 057e FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7876              	.LVL474:
 793:Veno-Echo.cpp ****     // start audio callback
 7877              		.loc 20 793 5 is_stmt 1 view .LVU2159
 793:Veno-Echo.cpp ****     // start audio callback
 7878              		.loc 20 793 25 is_stmt 0 view .LVU2160
 7879 0582 4146     		mov	r1, r8
 7880 0584 2448     		ldr	r0, .L434+8
 7881 0586 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7882              	.LVL475:
 795:Veno-Echo.cpp **** 
 7883              		.loc 20 795 5 is_stmt 1 view .LVU2161
 795:Veno-Echo.cpp **** 
 7884              		.loc 20 795 18 is_stmt 0 view .LVU2162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 268


 7885 058a 2D49     		ldr	r1, .L434+48
 7886 058c 2248     		ldr	r0, .L434+8
 7887 058e FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7888              	.LVL476:
 7889              	.L422:
 799:Veno-Echo.cpp ****      {  
 7890              		.loc 20 799 6 is_stmt 1 view .LVU2163
 7891              	.LBB1670:
 802:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 7892              		.loc 20 802 9 view .LVU2164
 805:Veno-Echo.cpp ****         {
 7893              		.loc 20 805 9 view .LVU2165
 7894              	.LBB1671:
 7895              	.LBB1672:
 7896              	.LBI1672:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7897              		.loc 23 87 5 view .LVU2166
 7898              	.LBE1672:
 7899              	.LBE1671:
 7900              	.LBE1670:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7901              		.loc 23 88 7 view .LVU2167
 7902              	.LBB1703:
 7903              	.LBB1700:
 7904              	.LBB1678:
 7905              	.LBB1673:
 7906              	.LBI1673:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7907              		.loc 22 413 7 view .LVU2168
 7908              		.loc 22 413 7 is_stmt 0 view .LVU2169
 7909              	.LBE1673:
 7910              	.LBE1678:
 807:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7911              		.loc 20 807 13 is_stmt 1 view .LVU2170
 7912              	.LBB1679:
 7913              	.LBI1679:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 269


 7914              		.loc 23 80 5 view .LVU2171
 7915              	.LBE1679:
 7916              	.LBE1700:
 7917              	.LBE1703:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7918              		.loc 23 81 7 view .LVU2172
 7919              	.LBB1704:
 7920              	.LBB1701:
 7921              	.LBB1688:
 7922              	.LBB1680:
 7923              	.LBI1680:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7924              		.loc 22 288 7 view .LVU2173
 7925              	.LBB1681:
 7926              	.LBI1681:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7927              		.loc 22 390 7 view .LVU2174
 7928              	.LBE1681:
 7929              	.LBE1680:
 7930              	.LBE1688:
 7931              	.LBB1689:
 814:Veno-Echo.cpp ****            {
 7932              		.loc 20 814 12 view .LVU2175
 7933              	.LBE1689:
 7934              	.LBB1694:
 7935              	.LBB1676:
 7936              	.LBB1674:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7937              		.loc 22 419 24 is_stmt 0 view .LVU2176
 7938 0592 BFF35B8F 		dmb	ish
 7939 0596 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7940              	.LBE1674:
 7941              	.LBE1676:
 7942              	.LBE1694:
 7943              	.LBB1695:
 7944              	.LBB1686:
 7945              	.LBB1684:
 7946              	.LBB1682:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7947              		.loc 22 397 18 view .LVU2177
 7948 0598 0021     		movs	r1, #0
 7949              	.LBE1682:
 7950              	.LBE1684:
 7951              	.LBE1686:
 7952              	.LBE1695:
 808:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7953              		.loc 20 808 23 view .LVU2178
 7954 059a 0122     		movs	r2, #1
 7955              	.LBB1696:
 7956              	.LBB1677:
 7957              	.LBB1675:
 7958              		.loc 22 419 24 view .LVU2179
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 270


 7959 059c BFF35B8F 		dmb	ish
 7960              	.LBE1675:
 7961              	.LBE1677:
 7962              	.LBE1696:
 805:Veno-Echo.cpp ****         {
 7963              		.loc 20 805 9 view .LVU2180
 7964 05a0 4BB1     		cbz	r3, .L423
 7965              	.LBB1697:
 7966              	.LBB1687:
 7967              	.LBB1685:
 7968              	.LBB1683:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7969              		.loc 22 397 18 view .LVU2181
 7970 05a2 BFF35B8F 		dmb	ish
 7971 05a6 2170     		strb	r1, [r4]
 7972 05a8 BFF35B8F 		dmb	ish
 7973              	.LVL477:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7974              		.loc 22 397 18 view .LVU2182
 7975              	.LBE1683:
 7976              	.LBE1685:
 7977              	.LBE1687:
 7978              	.LBE1697:
 808:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7979              		.loc 20 808 13 is_stmt 1 view .LVU2183
 808:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7980              		.loc 20 808 23 is_stmt 0 view .LVU2184
 7981 05ac 2A70     		strb	r2, [r5]
 809:Veno-Echo.cpp ****         }
 7982              		.loc 20 809 13 is_stmt 1 view .LVU2185
 809:Veno-Echo.cpp ****         }
 7983              		.loc 20 809 39 is_stmt 0 view .LVU2186
 7984 05ae FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7985              	.LVL478:
 809:Veno-Echo.cpp ****         }
 7986              		.loc 20 809 23 view .LVU2187
 7987 05b2 3060     		str	r0, [r6]
 7988 05b4 EDE7     		b	.L422
 7989              	.LVL479:
 7990              	.L423:
 7991              	.LBB1698:
 7992              	.LBB1690:
 814:Veno-Echo.cpp ****            {
 7993              		.loc 20 814 25 view .LVU2188
 7994 05b6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 814:Veno-Echo.cpp ****            {
 7995              		.loc 20 814 12 view .LVU2189
 7996 05b8 012B     		cmp	r3, #1
 7997 05ba 0BD0     		beq	.L430
 7998              	.L425:
 7999              	.LBE1690:
 830:Veno-Echo.cpp ****            {
 8000              		.loc 20 830 12 is_stmt 1 view .LVU2190
 8001 05bc 022B     		cmp	r3, #2
 8002 05be E8D1     		bne	.L422
 832:Veno-Echo.cpp ****             {
 8003              		.loc 20 832 13 view .LVU2191
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 271


 832:Veno-Echo.cpp ****             {
 8004              		.loc 20 832 30 is_stmt 0 view .LVU2192
 8005 05c0 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8006              	.LVL480:
 834:Veno-Echo.cpp ****             }
 8007              		.loc 20 834 21 is_stmt 1 view .LVU2193
 832:Veno-Echo.cpp ****             {
 8008              		.loc 20 832 33 is_stmt 0 view .LVU2194
 8009 05c4 3368     		ldr	r3, [r6]
 834:Veno-Echo.cpp ****             }
 8010              		.loc 20 834 31 view .LVU2195
 8011 05c6 0022     		movs	r2, #0
 832:Veno-Echo.cpp ****             {
 8012              		.loc 20 832 33 view .LVU2196
 8013 05c8 C01A     		subs	r0, r0, r3
 832:Veno-Echo.cpp ****             {
 8014              		.loc 20 832 13 view .LVU2197
 8015 05ca B0F5966F 		cmp	r0, #1200
 8016 05ce E0D9     		bls	.L422
 834:Veno-Echo.cpp ****             }
 8017              		.loc 20 834 31 view .LVU2198
 8018 05d0 2A70     		strb	r2, [r5]
 8019 05d2 DEE7     		b	.L422
 8020              	.L430:
 8021              	.LBE1698:
 8022              	.LBE1701:
 8023              	.LBE1704:
 816:Veno-Echo.cpp ****                 {
 8024              		.loc 20 816 16 is_stmt 1 view .LVU2199
 8025              	.LBB1705:
 8026              	.LBB1702:
 8027              	.LBB1699:
 8028              	.LBB1693:
 8029              	.LBB1691:
 816:Veno-Echo.cpp ****                 {
 8030              		.loc 20 816 33 is_stmt 0 view .LVU2200
 8031 05d4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8032              	.LVL481:
 816:Veno-Echo.cpp ****                 {
 8033              		.loc 20 816 36 view .LVU2201
 8034 05d8 3368     		ldr	r3, [r6]
 8035 05da C01A     		subs	r0, r0, r3
 816:Veno-Echo.cpp ****                 {
 8036              		.loc 20 816 16 view .LVU2202
 8037 05dc B0F57A7F 		cmp	r0, #1000
 8038 05e0 01D8     		bhi	.L426
 8039              	.L429:
 8040 05e2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8041 05e4 EAE7     		b	.L425
 8042              	.L426:
 8043              	.LBB1692:
 818:Veno-Echo.cpp ****                     
 8044              		.loc 20 818 21 is_stmt 1 view .LVU2203
 820:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8045              		.loc 20 820 30 is_stmt 0 view .LVU2204
 8046 05e6 DFF85CC0 		ldr	ip, .L434+52
 8047 05ea 27AF     		add	r7, sp, #156
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 272


 818:Veno-Echo.cpp ****                     
 8048              		.loc 20 818 31 view .LVU2205
 8049 05ec 4FF0020E 		mov	lr, #2
 820:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8050              		.loc 20 820 30 view .LVU2206
 8051 05f0 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8052 05f4 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8053 05f6 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8054 05fa 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8055 05fc 9CE80700 		ldm	ip, {r0, r1, r2}
 8056 0600 87E80700 		stm	r7, {r0, r1, r2}
 821:Veno-Echo.cpp ****                     {
 8057              		.loc 20 821 37 view .LVU2207
 8058 0604 27A8     		add	r0, sp, #156
 818:Veno-Echo.cpp ****                     
 8059              		.loc 20 818 31 view .LVU2208
 8060 0606 85F800E0 		strb	lr, [r5]
 820:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8061              		.loc 20 820 21 is_stmt 1 view .LVU2209
 821:Veno-Echo.cpp ****                     {
 8062              		.loc 20 821 21 view .LVU2210
 821:Veno-Echo.cpp ****                     {
 8063              		.loc 20 821 37 is_stmt 0 view .LVU2211
 8064 060a FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 8065              	.LVL482:
 8066 060e E8E7     		b	.L429
 8067              	.L435:
 8068              		.align	2
 8069              	.L434:
 8070 0610 00000000 		.word	.LANCHOR38
 8071 0614 3333333F 		.word	1060320051
 8072 0618 00000000 		.word	.LANCHOR4
 8073 061c 00000000 		.word	.LANCHOR76
 8074 0620 0000C842 		.word	1120403456
 8075 0624 00000000 		.word	.LANCHOR16
 8076 0628 00000000 		.word	.LANCHOR108
 8077 062c 00000000 		.word	.LANCHOR109
 8078 0630 808D5B00 		.word	6000000
 8079 0634 00000000 		.word	.LANCHOR26
 8080 0638 00000000 		.word	.LANCHOR90
 8081 063c 18000000 		.word	.LANCHOR4+24
 8082 0640 00000000 		.word	_ZL13AudioCallbackPfS_j
 8083 0644 00000000 		.word	.LANCHOR15
 8084              	.LBE1692:
 8085              	.LBE1691:
 8086              	.LBE1693:
 8087              	.LBE1699:
 8088              	.LBE1702:
 8089              	.LBE1705:
 8090              		.cfi_endproc
 8091              	.LFE4311:
 8093              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8094              		.align	1
 8095              		.p2align 2,,3
 8096              		.global	_Z13TurnOnAllLEDsv
 8097              		.syntax unified
 8098              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 273


 8099              		.thumb_func
 8100              		.fpu fpv5-d16
 8102              	_Z13TurnOnAllLEDsv:
 8103              	.LFB4334:
1962:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8104              		.loc 20 1962 1 is_stmt 1 view -0
 8105              		.cfi_startproc
 8106              		@ args = 0, pretend = 0, frame = 0
 8107              		@ frame_needed = 0, uses_anonymous_args = 0
1963:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8108              		.loc 20 1963 5 view .LVU2213
1962:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8109              		.loc 20 1962 1 is_stmt 0 view .LVU2214
 8110 0000 08B5     		push	{r3, lr}
 8111              		.cfi_def_cfa_offset 8
 8112              		.cfi_offset 3, -8
 8113              		.cfi_offset 14, -4
1963:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8114              		.loc 20 1963 26 view .LVU2215
 8115 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8116 0006 1148     		ldr	r0, .L438
 8117 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8118              	.LVL483:
1964:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8119              		.loc 20 1964 5 is_stmt 1 view .LVU2216
1964:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8120              		.loc 20 1964 28 is_stmt 0 view .LVU2217
 8121 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8122 0010 0F48     		ldr	r0, .L438+4
 8123 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8124              	.LVL484:
1965:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8125              		.loc 20 1965 5 is_stmt 1 view .LVU2218
1965:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8126              		.loc 20 1965 28 is_stmt 0 view .LVU2219
 8127 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8128 001a 0E48     		ldr	r0, .L438+8
 8129 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8130              	.LVL485:
1966:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8131              		.loc 20 1966 5 is_stmt 1 view .LVU2220
1966:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8132              		.loc 20 1966 21 is_stmt 0 view .LVU2221
 8133 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8134 0024 0C48     		ldr	r0, .L438+12
 8135 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8136              	.LVL486:
1967:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8137              		.loc 20 1967 5 is_stmt 1 view .LVU2222
1967:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8138              		.loc 20 1967 21 is_stmt 0 view .LVU2223
 8139 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8140 002e 0B48     		ldr	r0, .L438+16
 8141 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8142              	.LVL487:
1968:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8143              		.loc 20 1968 5 is_stmt 1 view .LVU2224
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 274


1968:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8144              		.loc 20 1968 19 is_stmt 0 view .LVU2225
 8145 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8146 0038 0948     		ldr	r0, .L438+20
 8147 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8148              	.LVL488:
1969:Veno-Echo.cpp **** }
 8149              		.loc 20 1969 5 is_stmt 1 view .LVU2226
1969:Veno-Echo.cpp **** }
 8150              		.loc 20 1969 19 is_stmt 0 view .LVU2227
 8151 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8152 0042 0848     		ldr	r0, .L438+24
1970:Veno-Echo.cpp **** 
 8153              		.loc 20 1970 1 view .LVU2228
 8154 0044 BDE80840 		pop	{r3, lr}
 8155              		.cfi_restore 14
 8156              		.cfi_restore 3
 8157              		.cfi_def_cfa_offset 0
1969:Veno-Echo.cpp **** }
 8158              		.loc 20 1969 19 view .LVU2229
 8159 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8160              	.LVL489:
 8161              	.L439:
 8162              		.align	2
 8163              	.L438:
 8164 004c 00000000 		.word	.LANCHOR90
 8165 0050 04000000 		.word	.LANCHOR0+4
 8166 0054 04000000 		.word	.LANCHOR1+4
 8167 0058 00000000 		.word	.LANCHOR93
 8168 005c 00000000 		.word	.LANCHOR94
 8169 0060 00000000 		.word	.LANCHOR95
 8170 0064 00000000 		.word	.LANCHOR96
 8171              		.cfi_endproc
 8172              	.LFE4334:
 8174              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8175              		.align	1
 8176              		.p2align 2,,3
 8177              		.global	_Z12ResetAllLEDsv
 8178              		.syntax unified
 8179              		.thumb
 8180              		.thumb_func
 8181              		.fpu fpv5-d16
 8183              	_Z12ResetAllLEDsv:
 8184              	.LFB4335:
1973:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8185              		.loc 20 1973 1 is_stmt 1 view -0
 8186              		.cfi_startproc
 8187              		@ args = 0, pretend = 0, frame = 0
 8188              		@ frame_needed = 0, uses_anonymous_args = 0
1974:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8189              		.loc 20 1974 5 view .LVU2231
1973:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8190              		.loc 20 1973 1 is_stmt 0 view .LVU2232
 8191 0000 08B5     		push	{r3, lr}
 8192              		.cfi_def_cfa_offset 8
 8193              		.cfi_offset 3, -8
 8194              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 275


1974:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8195              		.loc 20 1974 26 view .LVU2233
 8196 0002 9FED1E0A 		vldr.32	s0, .L447
 8197 0006 1E48     		ldr	r0, .L447+4
 8198 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8199              	.LVL490:
1975:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8200              		.loc 20 1975 5 is_stmt 1 view .LVU2234
1975:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8201              		.loc 20 1975 28 is_stmt 0 view .LVU2235
 8202 000c 9FED1B0A 		vldr.32	s0, .L447
 8203 0010 1C48     		ldr	r0, .L447+8
 8204 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8205              	.LVL491:
1976:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8206              		.loc 20 1976 5 is_stmt 1 view .LVU2236
1976:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8207              		.loc 20 1976 28 is_stmt 0 view .LVU2237
 8208 0016 1C48     		ldr	r0, .L447+12
 8209 0018 9FED180A 		vldr.32	s0, .L447
 8210 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8211              	.LVL492:
1977:Veno-Echo.cpp ****     {
 8212              		.loc 20 1977 5 is_stmt 1 view .LVU2238
1977:Veno-Echo.cpp ****     {
 8213              		.loc 20 1977 26 is_stmt 0 view .LVU2239
 8214 0020 1A48     		ldr	r0, .L447+16
 8215 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8216              	.LVL493:
1977:Veno-Echo.cpp ****     {
 8217              		.loc 20 1977 5 view .LVU2240
 8218 0026 C8B9     		cbnz	r0, .L441
1979:Veno-Echo.cpp ****     }
 8219              		.loc 20 1979 9 is_stmt 1 view .LVU2241
1979:Veno-Echo.cpp ****     }
 8220              		.loc 20 1979 25 is_stmt 0 view .LVU2242
 8221 0028 1848     		ldr	r0, .L447+16
 8222 002a 9FED140A 		vldr.32	s0, .L447
 8223 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8224              	.LVL494:
1986:Veno-Echo.cpp ****     {
 8225              		.loc 20 1986 5 is_stmt 1 view .LVU2243
1986:Veno-Echo.cpp ****     {
 8226              		.loc 20 1986 26 is_stmt 0 view .LVU2244
 8227 0032 1748     		ldr	r0, .L447+20
 8228 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8229              	.LVL495:
1986:Veno-Echo.cpp ****     {
 8230              		.loc 20 1986 5 view .LVU2245
 8231 0038 D0B9     		cbnz	r0, .L443
 8232              	.L446:
1988:Veno-Echo.cpp ****     }
 8233              		.loc 20 1988 9 is_stmt 1 view .LVU2246
1988:Veno-Echo.cpp ****     }
 8234              		.loc 20 1988 25 is_stmt 0 view .LVU2247
 8235 003a 9FED100A 		vldr.32	s0, .L447
 8236 003e 1448     		ldr	r0, .L447+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 276


 8237 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8238              	.LVL496:
 8239              	.L444:
1995:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8240              		.loc 20 1995 5 is_stmt 1 view .LVU2248
1995:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8241              		.loc 20 1995 19 is_stmt 0 view .LVU2249
 8242 0044 9FED0D0A 		vldr.32	s0, .L447
 8243 0048 1248     		ldr	r0, .L447+24
 8244 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8245              	.LVL497:
1996:Veno-Echo.cpp **** }
 8246              		.loc 20 1996 5 is_stmt 1 view .LVU2250
1996:Veno-Echo.cpp **** }
 8247              		.loc 20 1996 19 is_stmt 0 view .LVU2251
 8248 004e 9FED0B0A 		vldr.32	s0, .L447
 8249 0052 1148     		ldr	r0, .L447+28
1997:Veno-Echo.cpp **** 
 8250              		.loc 20 1997 1 view .LVU2252
 8251 0054 BDE80840 		pop	{r3, lr}
 8252              		.cfi_remember_state
 8253              		.cfi_restore 14
 8254              		.cfi_restore 3
 8255              		.cfi_def_cfa_offset 0
1996:Veno-Echo.cpp **** }
 8256              		.loc 20 1996 19 view .LVU2253
 8257 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8258              	.LVL498:
 8259              	.L441:
 8260              		.cfi_restore_state
1983:Veno-Echo.cpp ****     }
 8261              		.loc 20 1983 8 is_stmt 1 view .LVU2254
1983:Veno-Echo.cpp ****     }
 8262              		.loc 20 1983 24 is_stmt 0 view .LVU2255
 8263 005c 0B48     		ldr	r0, .L447+16
 8264 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8265 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8266              	.LVL499:
1986:Veno-Echo.cpp ****     {
 8267              		.loc 20 1986 5 is_stmt 1 view .LVU2256
1986:Veno-Echo.cpp ****     {
 8268              		.loc 20 1986 26 is_stmt 0 view .LVU2257
 8269 0066 0A48     		ldr	r0, .L447+20
 8270 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8271              	.LVL500:
1986:Veno-Echo.cpp ****     {
 8272              		.loc 20 1986 5 view .LVU2258
 8273 006c 0028     		cmp	r0, #0
 8274 006e E4D0     		beq	.L446
 8275              	.L443:
1992:Veno-Echo.cpp ****     }
 8276              		.loc 20 1992 9 is_stmt 1 view .LVU2259
1992:Veno-Echo.cpp ****     }
 8277              		.loc 20 1992 25 is_stmt 0 view .LVU2260
 8278 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8279 0074 0648     		ldr	r0, .L447+20
 8280 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 277


 8281              	.LVL501:
 8282 007a E3E7     		b	.L444
 8283              	.L448:
 8284              		.align	2
 8285              	.L447:
 8286 007c 00000000 		.word	0
 8287 0080 00000000 		.word	.LANCHOR90
 8288 0084 04000000 		.word	.LANCHOR0+4
 8289 0088 04000000 		.word	.LANCHOR1+4
 8290 008c 00000000 		.word	.LANCHOR93
 8291 0090 00000000 		.word	.LANCHOR94
 8292 0094 00000000 		.word	.LANCHOR95
 8293 0098 00000000 		.word	.LANCHOR96
 8294              		.cfi_endproc
 8295              	.LFE4335:
 8297              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8298              		.align	1
 8299              		.p2align 2,,3
 8300              		.global	_Z14Update_Buttonsv
 8301              		.syntax unified
 8302              		.thumb
 8303              		.thumb_func
 8304              		.fpu fpv5-d16
 8306              	_Z14Update_Buttonsv:
 8307              	.LFB4329:
1640:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8308              		.loc 20 1640 1 is_stmt 1 view -0
 8309              		.cfi_startproc
 8310              		@ args = 0, pretend = 0, frame = 0
 8311              		@ frame_needed = 0, uses_anonymous_args = 0
1641:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8312              		.loc 20 1641 5 view .LVU2262
1642:Veno-Echo.cpp ****     static int buttonstate{};
 8313              		.loc 20 1642 5 view .LVU2263
1643:Veno-Echo.cpp **** 
 8314              		.loc 20 1643 5 view .LVU2264
1645:Veno-Echo.cpp ****     Rev_R_sw.update();
 8315              		.loc 20 1645 5 view .LVU2265
1640:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8316              		.loc 20 1640 1 is_stmt 0 view .LVU2266
 8317 0000 70B5     		push	{r4, r5, r6, lr}
 8318              		.cfi_def_cfa_offset 16
 8319              		.cfi_offset 4, -16
 8320              		.cfi_offset 5, -12
 8321              		.cfi_offset 6, -8
 8322              		.cfi_offset 14, -4
1645:Veno-Echo.cpp ****     Rev_R_sw.update();
 8323              		.loc 20 1645 20 view .LVU2267
 8324 0002 9848     		ldr	r0, .L504
 8325 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8326              	.LVL502:
1646:Veno-Echo.cpp ****     LPF_sw.update();
 8327              		.loc 20 1646 5 is_stmt 1 view .LVU2268
1646:Veno-Echo.cpp ****     LPF_sw.update();
 8328              		.loc 20 1646 20 is_stmt 0 view .LVU2269
 8329 0008 9748     		ldr	r0, .L504+4
 8330 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 278


 8331              	.LVL503:
1647:Veno-Echo.cpp ****     HPF_sw.update();
 8332              		.loc 20 1647 5 is_stmt 1 view .LVU2270
1647:Veno-Echo.cpp ****     HPF_sw.update();
 8333              		.loc 20 1647 18 is_stmt 0 view .LVU2271
 8334 000e 9748     		ldr	r0, .L504+8
 8335 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8336              	.LVL504:
1648:Veno-Echo.cpp ****     Tap_Button.update();
 8337              		.loc 20 1648 5 is_stmt 1 view .LVU2272
1651:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8338              		.loc 20 1651 26 is_stmt 0 view .LVU2273
 8339 0014 964C     		ldr	r4, .L504+12
1648:Veno-Echo.cpp ****     Tap_Button.update();
 8340              		.loc 20 1648 18 view .LVU2274
 8341 0016 9748     		ldr	r0, .L504+16
 8342 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8343              	.LVL505:
1649:Veno-Echo.cpp **** 
 8344              		.loc 20 1649 5 is_stmt 1 view .LVU2275
1649:Veno-Echo.cpp **** 
 8345              		.loc 20 1649 22 is_stmt 0 view .LVU2276
 8346 001c 9648     		ldr	r0, .L504+20
 8347 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8348              	.LVL506:
1651:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8349              		.loc 20 1651 5 is_stmt 1 view .LVU2277
1651:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8350              		.loc 20 1651 26 is_stmt 0 view .LVU2278
 8351 0022 2046     		mov	r0, r4
 8352 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8353              	.LVL507:
1652:Veno-Echo.cpp ****     //TapButton.Debounce();
 8354              		.loc 20 1652 5 is_stmt 1 view .LVU2279
1652:Veno-Echo.cpp ****     //TapButton.Debounce();
 8355              		.loc 20 1652 26 is_stmt 0 view .LVU2280
 8356 0028 9448     		ldr	r0, .L504+24
 8357 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8358              	.LVL508:
1654:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8359              		.loc 20 1654 5 is_stmt 1 view .LVU2281
1654:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8360              		.loc 20 1654 18 is_stmt 0 view .LVU2282
 8361 002e 9448     		ldr	r0, .L504+28
 8362 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8363              	.LVL509:
1657:Veno-Echo.cpp ****     {
 8364              		.loc 20 1657 5 is_stmt 1 view .LVU2283
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 279


  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 8365              		.loc 1 69 38 view .LVU2284
1657:Veno-Echo.cpp ****     {
 8366              		.loc 20 1657 5 is_stmt 0 view .LVU2285
 8367 0034 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8368 0036 7F2B     		cmp	r3, #127
 8369 0038 00F0DC80 		beq	.L496
 8370              	.L450:
1671:Veno-Echo.cpp ****     {
 8371              		.loc 20 1671 5 is_stmt 1 view .LVU2286
 8372              	.LVL510:
 8373              		.loc 1 69 38 view .LVU2287
1671:Veno-Echo.cpp ****     {
 8374              		.loc 20 1671 32 is_stmt 0 view .LVU2288
 8375 003c 8F4B     		ldr	r3, .L504+24
1671:Veno-Echo.cpp ****     {
 8376              		.loc 20 1671 5 view .LVU2289
 8377 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8378 0040 7F2B     		cmp	r3, #127
 8379 0042 00F0BE80 		beq	.L497
 8380              	.L452:
1687:Veno-Echo.cpp ****     {
 8381              		.loc 20 1687 5 is_stmt 1 view .LVU2290
1687:Veno-Echo.cpp ****     {
 8382              		.loc 20 1687 28 is_stmt 0 view .LVU2291
 8383 0046 8748     		ldr	r0, .L504
1689:Veno-Echo.cpp ****         if (buttonstate == 3)
 8384              		.loc 20 1689 21 view .LVU2292
 8385 0048 8E4C     		ldr	r4, .L504+32
1687:Veno-Echo.cpp ****     {
 8386              		.loc 20 1687 28 view .LVU2293
 8387 004a FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8388              	.LVL511:
1687:Veno-Echo.cpp ****     {
 8389              		.loc 20 1687 5 view .LVU2294
 8390 004e D0B1     		cbz	r0, .L454
1689:Veno-Echo.cpp ****         if (buttonstate == 3)
 8391              		.loc 20 1689 9 is_stmt 1 view .LVU2295
1689:Veno-Echo.cpp ****         if (buttonstate == 3)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 280


 8392              		.loc 20 1689 21 is_stmt 0 view .LVU2296
 8393 0050 2368     		ldr	r3, [r4]
 8394 0052 0133     		adds	r3, r3, #1
1690:Veno-Echo.cpp ****         {
 8395              		.loc 20 1690 9 view .LVU2297
 8396 0054 032B     		cmp	r3, #3
1689:Veno-Echo.cpp ****         if (buttonstate == 3)
 8397              		.loc 20 1689 21 view .LVU2298
 8398 0056 2360     		str	r3, [r4]
1690:Veno-Echo.cpp ****         {
 8399              		.loc 20 1690 9 is_stmt 1 view .LVU2299
 8400 0058 00F0E580 		beq	.L498
 8401              	.L455:
1694:Veno-Echo.cpp ****         {
 8402              		.loc 20 1694 9 view .LVU2300
1694:Veno-Echo.cpp ****         {
 8403              		.loc 20 1694 29 is_stmt 0 view .LVU2301
 8404 005c 8148     		ldr	r0, .L504
 8405 005e FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8406              	.LVL512:
1700:Veno-Echo.cpp ****         }
 8407              		.loc 20 1700 31 view .LVU2302
 8408 0062 F7EE007A 		vmov.f32	s15, #1.0e+0
 8409 0066 9FED887A 		vldr.32	s14, .L504+36
 8410 006a 0028     		cmp	r0, #0
 8411 006c 8749     		ldr	r1, .L504+40
 8412              	.LBB1706:
 8413              	.LBB1707:
 8414              	.LBB1708:
 8415              	.LBB1709:
 8416              	.LBB1710:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8417              		.loc 22 397 18 view .LVU2303
 8418 006e 4FF00102 		mov	r2, #1
 8419 0072 874B     		ldr	r3, .L504+44
 8420              	.LBE1710:
 8421              	.LBE1709:
 8422              	.LBE1708:
 8423              	.LBE1707:
 8424              	.LBE1706:
1700:Veno-Echo.cpp ****         }
 8425              		.loc 20 1700 31 view .LVU2304
 8426 0074 47FE277A 		vseleq.f32	s15, s14, s15
 8427 0078 C1ED097A 		vstr.32	s15, [r1, #36]
1702:Veno-Echo.cpp ****     }
 8428              		.loc 20 1702 9 is_stmt 1 view .LVU2305
 8429              	.LVL513:
 8430              	.LBB1715:
 8431              	.LBI1706:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8432              		.loc 23 80 5 view .LVU2306
 8433              	.LBB1714:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8434              		.loc 23 81 7 view .LVU2307
 8435              	.LBB1713:
 8436              	.LBI1708:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 281


 8437              		.loc 22 288 7 view .LVU2308
 8438              	.LBB1712:
 8439              	.LBI1709:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8440              		.loc 22 390 7 view .LVU2309
 8441              	.LBB1711:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8442              		.loc 22 397 18 is_stmt 0 view .LVU2310
 8443 007c BFF35B8F 		dmb	ish
 8444 0080 1A70     		strb	r2, [r3]
 8445 0082 BFF35B8F 		dmb	ish
 8446              	.LVL514:
 8447              	.L454:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8448              		.loc 22 397 18 view .LVU2311
 8449              	.LBE1711:
 8450              	.LBE1712:
 8451              	.LBE1713:
 8452              	.LBE1714:
 8453              	.LBE1715:
1705:Veno-Echo.cpp ****     {
 8454              		.loc 20 1705 5 is_stmt 1 view .LVU2312
1705:Veno-Echo.cpp ****     {
 8455              		.loc 20 1705 29 is_stmt 0 view .LVU2313
 8456 0086 7748     		ldr	r0, .L504
 8457 0088 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8458              	.LVL515:
1705:Veno-Echo.cpp ****     {
 8459              		.loc 20 1705 5 view .LVU2314
 8460 008c 10B1     		cbz	r0, .L457
1707:Veno-Echo.cpp ****     }
 8461              		.loc 20 1707 9 is_stmt 1 view .LVU2315
1707:Veno-Echo.cpp ****     }
 8462              		.loc 20 1707 21 is_stmt 0 view .LVU2316
 8463 008e 2368     		ldr	r3, [r4]
 8464 0090 013B     		subs	r3, r3, #1
 8465 0092 2360     		str	r3, [r4]
 8466              	.L457:
1710:Veno-Echo.cpp ****     {
 8467              		.loc 20 1710 5 is_stmt 1 view .LVU2317
1710:Veno-Echo.cpp ****     {
 8468              		.loc 20 1710 28 is_stmt 0 view .LVU2318
 8469 0094 7448     		ldr	r0, .L504+4
 8470 0096 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8471              	.LVL516:
1710:Veno-Echo.cpp ****     {
 8472              		.loc 20 1710 5 view .LVU2319
 8473 009a D0B1     		cbz	r0, .L458
1712:Veno-Echo.cpp ****         if (buttonstate == 3)
 8474              		.loc 20 1712 9 is_stmt 1 view .LVU2320
1712:Veno-Echo.cpp ****         if (buttonstate == 3)
 8475              		.loc 20 1712 21 is_stmt 0 view .LVU2321
 8476 009c 2368     		ldr	r3, [r4]
 8477 009e 0133     		adds	r3, r3, #1
1713:Veno-Echo.cpp ****         {
 8478              		.loc 20 1713 9 view .LVU2322
 8479 00a0 032B     		cmp	r3, #3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 282


1712:Veno-Echo.cpp ****         if (buttonstate == 3)
 8480              		.loc 20 1712 21 view .LVU2323
 8481 00a2 2360     		str	r3, [r4]
1713:Veno-Echo.cpp ****         {
 8482              		.loc 20 1713 9 is_stmt 1 view .LVU2324
 8483 00a4 00F0C480 		beq	.L499
 8484              	.L459:
1717:Veno-Echo.cpp ****         {
 8485              		.loc 20 1717 9 view .LVU2325
1717:Veno-Echo.cpp ****         {
 8486              		.loc 20 1717 29 is_stmt 0 view .LVU2326
 8487 00a8 6F48     		ldr	r0, .L504+4
 8488 00aa FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8489              	.LVL517:
1723:Veno-Echo.cpp ****         }
 8490              		.loc 20 1723 31 view .LVU2327
 8491 00ae F7EE007A 		vmov.f32	s15, #1.0e+0
 8492 00b2 9FED757A 		vldr.32	s14, .L504+36
 8493 00b6 0028     		cmp	r0, #0
 8494 00b8 7449     		ldr	r1, .L504+40
 8495              	.LBB1716:
 8496              	.LBB1717:
 8497              	.LBB1718:
 8498              	.LBB1719:
 8499              	.LBB1720:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8500              		.loc 22 397 18 view .LVU2328
 8501 00ba 4FF00102 		mov	r2, #1
 8502 00be 744B     		ldr	r3, .L504+44
 8503              	.LBE1720:
 8504              	.LBE1719:
 8505              	.LBE1718:
 8506              	.LBE1717:
 8507              	.LBE1716:
1723:Veno-Echo.cpp ****         }
 8508              		.loc 20 1723 31 view .LVU2329
 8509 00c0 47FE277A 		vseleq.f32	s15, s14, s15
 8510 00c4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1725:Veno-Echo.cpp ****     }
 8511              		.loc 20 1725 9 is_stmt 1 view .LVU2330
 8512              	.LVL518:
 8513              	.LBB1725:
 8514              	.LBI1716:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8515              		.loc 23 80 5 view .LVU2331
 8516              	.LBB1724:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8517              		.loc 23 81 7 view .LVU2332
 8518              	.LBB1723:
 8519              	.LBI1718:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8520              		.loc 22 288 7 view .LVU2333
 8521              	.LBB1722:
 8522              	.LBI1719:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8523              		.loc 22 390 7 view .LVU2334
 8524              	.LBB1721:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 283


 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8525              		.loc 22 397 18 is_stmt 0 view .LVU2335
 8526 00c8 BFF35B8F 		dmb	ish
 8527 00cc 1A70     		strb	r2, [r3]
 8528 00ce BFF35B8F 		dmb	ish
 8529              	.LVL519:
 8530              	.L458:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8531              		.loc 22 397 18 view .LVU2336
 8532              	.LBE1721:
 8533              	.LBE1722:
 8534              	.LBE1723:
 8535              	.LBE1724:
 8536              	.LBE1725:
1728:Veno-Echo.cpp ****     {
 8537              		.loc 20 1728 5 is_stmt 1 view .LVU2337
1728:Veno-Echo.cpp ****     {
 8538              		.loc 20 1728 29 is_stmt 0 view .LVU2338
 8539 00d2 6548     		ldr	r0, .L504+4
 8540 00d4 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8541              	.LVL520:
1728:Veno-Echo.cpp ****     {
 8542              		.loc 20 1728 5 view .LVU2339
 8543 00d8 10B1     		cbz	r0, .L461
1730:Veno-Echo.cpp ****     }
 8544              		.loc 20 1730 9 is_stmt 1 view .LVU2340
1730:Veno-Echo.cpp ****     }
 8545              		.loc 20 1730 21 is_stmt 0 view .LVU2341
 8546 00da 2368     		ldr	r3, [r4]
 8547 00dc 013B     		subs	r3, r3, #1
 8548 00de 2360     		str	r3, [r4]
 8549              	.L461:
1733:Veno-Echo.cpp ****     {
 8550              		.loc 20 1733 5 is_stmt 1 view .LVU2342
1733:Veno-Echo.cpp ****     {
 8551              		.loc 20 1733 30 is_stmt 0 view .LVU2343
 8552 00e0 6548     		ldr	r0, .L504+20
 8553 00e2 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8554              	.LVL521:
1733:Veno-Echo.cpp ****     {
 8555              		.loc 20 1733 5 view .LVU2344
 8556 00e6 0028     		cmp	r0, #0
 8557 00e8 55D1     		bne	.L500
 8558              	.L463:
1754:Veno-Echo.cpp ****     {
 8559              		.loc 20 1754 5 is_stmt 1 view .LVU2345
1754:Veno-Echo.cpp ****     {
 8560              		.loc 20 1754 31 is_stmt 0 view .LVU2346
 8561 00ea 6348     		ldr	r0, .L504+20
 8562 00ec FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8563              	.LVL522:
1754:Veno-Echo.cpp ****     {
 8564              		.loc 20 1754 5 view .LVU2347
 8565 00f0 38B1     		cbz	r0, .L466
1756:Veno-Echo.cpp ****         buttonstate -= 1;
 8566              		.loc 20 1756 9 is_stmt 1 view .LVU2348
1757:Veno-Echo.cpp ****         mute = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 284


 8567              		.loc 20 1757 21 is_stmt 0 view .LVU2349
 8568 00f2 2368     		ldr	r3, [r4]
1756:Veno-Echo.cpp ****         buttonstate -= 1;
 8569              		.loc 20 1756 15 view .LVU2350
 8570 00f4 0022     		movs	r2, #0
 8571 00f6 6748     		ldr	r0, .L504+48
1757:Veno-Echo.cpp ****         mute = false;
 8572              		.loc 20 1757 21 view .LVU2351
 8573 00f8 013B     		subs	r3, r3, #1
1758:Veno-Echo.cpp ****     }
 8574              		.loc 20 1758 14 view .LVU2352
 8575 00fa 6749     		ldr	r1, .L504+52
1756:Veno-Echo.cpp ****         buttonstate -= 1;
 8576              		.loc 20 1756 15 view .LVU2353
 8577 00fc 0270     		strb	r2, [r0]
1757:Veno-Echo.cpp ****         mute = false;
 8578              		.loc 20 1757 9 is_stmt 1 view .LVU2354
1757:Veno-Echo.cpp ****         mute = false;
 8579              		.loc 20 1757 21 is_stmt 0 view .LVU2355
 8580 00fe 2360     		str	r3, [r4]
1758:Veno-Echo.cpp ****     }
 8581              		.loc 20 1758 9 is_stmt 1 view .LVU2356
1758:Veno-Echo.cpp ****     }
 8582              		.loc 20 1758 14 is_stmt 0 view .LVU2357
 8583 0100 0A70     		strb	r2, [r1]
 8584              	.L466:
1761:Veno-Echo.cpp ****     {
 8585              		.loc 20 1761 5 is_stmt 1 view .LVU2358
1761:Veno-Echo.cpp ****     {
 8586              		.loc 20 1761 28 is_stmt 0 view .LVU2359
 8587 0102 5D48     		ldr	r0, .L504+20
 8588 0104 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8589              	.LVL523:
1761:Veno-Echo.cpp ****     {
 8590              		.loc 20 1761 5 view .LVU2360
 8591 0108 60B9     		cbnz	r0, .L501
 8592              	.L468:
1769:Veno-Echo.cpp ****     {
 8593              		.loc 20 1769 5 is_stmt 1 view .LVU2361
 8594 010a 2368     		ldr	r3, [r4]
 8595 010c 032B     		cmp	r3, #3
 8596 010e 16D0     		beq	.L502
 8597              	.L471:
1786:Veno-Echo.cpp **** }
 8598              		.loc 20 1786 5 view .LVU2362
 8599              	.LBB1726:
 8600              	.LBI1726:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8601              		.loc 1 75 17 view .LVU2363
 8602              	.LVL524:
 8603              	.LBB1727:
 8604              		.loc 1 75 35 view .LVU2364
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 285


 8605              	.LBE1727:
 8606              	.LBE1726:
1786:Veno-Echo.cpp **** }
 8607              		.loc 20 1786 31 is_stmt 0 view .LVU2365
 8608 0110 5B4B     		ldr	r3, .L504+28
1786:Veno-Echo.cpp **** }
 8609              		.loc 20 1786 14 view .LVU2366
 8610 0112 624A     		ldr	r2, .L504+56
 8611              	.LBB1729:
 8612              	.LBB1728:
 8613              		.loc 1 75 52 view .LVU2367
 8614 0114 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8615 0116 A3F1FF03 		sub	r3, #255
 8616 011a B3FA83F3 		clz	r3, r3
 8617 011e 5B09     		lsrs	r3, r3, #5
 8618 0120 1370     		strb	r3, [r2]
 8619              	.LBE1728:
 8620              	.LBE1729:
1787:Veno-Echo.cpp **** 
 8621              		.loc 20 1787 1 view .LVU2368
 8622 0122 70BD     		pop	{r4, r5, r6, pc}
 8623              	.LVL525:
 8624              	.L501:
1763:Veno-Echo.cpp ****         {
 8625              		.loc 20 1763 9 is_stmt 1 view .LVU2369
1763:Veno-Echo.cpp ****         {
 8626              		.loc 20 1763 29 is_stmt 0 view .LVU2370
 8627 0124 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8628              	.LVL526:
1763:Veno-Echo.cpp ****         {
 8629              		.loc 20 1763 32 view .LVU2371
 8630 0128 5D4B     		ldr	r3, .L504+60
 8631 012a 1B68     		ldr	r3, [r3]
 8632 012c C01A     		subs	r0, r0, r3
1763:Veno-Echo.cpp ****         {
 8633              		.loc 20 1763 9 view .LVU2372
 8634 012e 3228     		cmp	r0, #50
 8635 0130 EBD9     		bls	.L468
1765:Veno-Echo.cpp ****         } 
 8636              		.loc 20 1765 13 is_stmt 1 view .LVU2373
1765:Veno-Echo.cpp ****         } 
 8637              		.loc 20 1765 19 is_stmt 0 view .LVU2374
 8638 0132 584B     		ldr	r3, .L504+48
 8639 0134 0122     		movs	r2, #1
 8640 0136 1A70     		strb	r2, [r3]
1769:Veno-Echo.cpp ****     {
 8641              		.loc 20 1769 5 is_stmt 1 view .LVU2375
 8642 0138 2368     		ldr	r3, [r4]
 8643 013a 032B     		cmp	r3, #3
 8644 013c E8D1     		bne	.L471
 8645              	.L502:
1772:Veno-Echo.cpp ****             {
 8646              		.loc 20 1772 13 view .LVU2376
1772:Veno-Echo.cpp ****             {
 8647              		.loc 20 1772 36 is_stmt 0 view .LVU2377
 8648 013e 594E     		ldr	r6, .L504+64
1772:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 286


 8649              		.loc 20 1772 33 view .LVU2378
 8650 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8651              	.LVL527:
1772:Veno-Echo.cpp ****             {
 8652              		.loc 20 1772 13 view .LVU2379
 8653 0144 40F6B833 		movw	r3, #3000
1772:Veno-Echo.cpp ****             {
 8654              		.loc 20 1772 36 view .LVU2380
 8655 0148 3268     		ldr	r2, [r6]
 8656 014a 801A     		subs	r0, r0, r2
1772:Veno-Echo.cpp ****             {
 8657              		.loc 20 1772 13 view .LVU2381
 8658 014c 9842     		cmp	r0, r3
 8659 014e DFD9     		bls	.L471
1774:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8660              		.loc 20 1774 17 is_stmt 1 view .LVU2382
1774:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8661              		.loc 20 1774 32 is_stmt 0 view .LVU2383
 8662 0150 4448     		ldr	r0, .L504
 8663 0152 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8664              	.LVL528:
1775:Veno-Echo.cpp ****                 ResetAllLEDs();
 8665              		.loc 20 1775 17 is_stmt 1 view .LVU2384
1775:Veno-Echo.cpp ****                 ResetAllLEDs();
 8666              		.loc 20 1775 32 is_stmt 0 view .LVU2385
 8667 0156 4448     		ldr	r0, .L504+4
 8668 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8669              	.LVL529:
1776:Veno-Echo.cpp ****                 //don't let reset or shift update
 8670              		.loc 20 1776 17 is_stmt 1 view .LVU2386
1780:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8671              		.loc 20 1780 29 is_stmt 0 view .LVU2387
 8672 015c 524D     		ldr	r5, .L504+68
1776:Veno-Echo.cpp ****                 //don't let reset or shift update
 8673              		.loc 20 1776 29 view .LVU2388
 8674 015e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8675              	.LVL530:
1778:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8676              		.loc 20 1778 17 is_stmt 1 view .LVU2389
1778:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8677              		.loc 20 1778 23 is_stmt 0 view .LVU2390
 8678 0162 4C4B     		ldr	r3, .L504+48
 8679 0164 0022     		movs	r2, #0
1779:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8680              		.loc 20 1779 30 view .LVU2391
 8681 0166 5048     		ldr	r0, .L504+68
1780:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8682              		.loc 20 1780 29 view .LVU2392
 8683 0168 484C     		ldr	r4, .L504+40
1778:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8684              		.loc 20 1778 23 view .LVU2393
 8685 016a 1A70     		strb	r2, [r3]
1779:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8686              		.loc 20 1779 17 is_stmt 1 view .LVU2394
1779:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8687              		.loc 20 1779 30 is_stmt 0 view .LVU2395
 8688 016c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 287


 8689              	.LVL531:
1780:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8690              		.loc 20 1780 17 is_stmt 1 view .LVU2396
1780:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8691              		.loc 20 1780 29 is_stmt 0 view .LVU2397
 8692 0170 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8693 0172 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8694 0174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8695 0176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8696 0178 95E80700 		ldm	r5, {r0, r1, r2}
 8697 017c 84E80700 		stm	r4, {r0, r1, r2}
1781:Veno-Echo.cpp ****                 save_flag = true;
 8698              		.loc 20 1781 17 is_stmt 1 view .LVU2398
1781:Veno-Echo.cpp ****                 save_flag = true;
 8699              		.loc 20 1781 43 is_stmt 0 view .LVU2399
 8700 0180 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8701              	.LVL532:
 8702              	.LBB1730:
 8703              	.LBB1731:
 8704              	.LBB1732:
 8705              	.LBB1733:
 8706              	.LBB1734:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8707              		.loc 22 397 18 view .LVU2400
 8708 0184 424B     		ldr	r3, .L504+44
 8709 0186 0122     		movs	r2, #1
 8710              	.LBE1734:
 8711              	.LBE1733:
 8712              	.LBE1732:
 8713              	.LBE1731:
 8714              	.LBE1730:
1781:Veno-Echo.cpp ****                 save_flag = true;
 8715              		.loc 20 1781 27 view .LVU2401
 8716 0188 3060     		str	r0, [r6]
1782:Veno-Echo.cpp ****             }
 8717              		.loc 20 1782 17 is_stmt 1 view .LVU2402
 8718              	.LVL533:
 8719              	.LBB1739:
 8720              	.LBI1730:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8721              		.loc 23 80 5 view .LVU2403
 8722              	.LBB1738:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8723              		.loc 23 81 7 view .LVU2404
 8724              	.LBB1737:
 8725              	.LBI1732:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8726              		.loc 22 288 7 view .LVU2405
 8727              	.LBB1736:
 8728              	.LBI1733:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8729              		.loc 22 390 7 view .LVU2406
 8730              	.LBB1735:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8731              		.loc 22 397 18 is_stmt 0 view .LVU2407
 8732 018a BFF35B8F 		dmb	ish
 8733 018e 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 288


 8734 0190 BFF35B8F 		dmb	ish
 8735              	.LVL534:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8736              		.loc 22 397 18 view .LVU2408
 8737              	.LBE1735:
 8738              	.LBE1736:
 8739              	.LBE1737:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8740              		.loc 23 81 35 view .LVU2409
 8741 0194 BCE7     		b	.L471
 8742              	.LVL535:
 8743              	.L500:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8744              		.loc 23 81 35 view .LVU2410
 8745              	.LBE1738:
 8746              	.LBE1739:
1735:Veno-Echo.cpp ****         {
 8747              		.loc 20 1735 9 is_stmt 1 view .LVU2411
1735:Veno-Echo.cpp ****         {
 8748              		.loc 20 1735 25 is_stmt 0 view .LVU2412
 8749 0196 4548     		ldr	r0, .L504+72
 8750 0198 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8751              	.LVL536:
1735:Veno-Echo.cpp ****         {
 8752              		.loc 20 1735 9 view .LVU2413
 8753 019c 0028     		cmp	r0, #0
 8754 019e 4CD1     		bne	.L503
 8755              	.L464:
1741:Veno-Echo.cpp ****         
 8756              		.loc 20 1741 9 is_stmt 1 view .LVU2414
1741:Veno-Echo.cpp ****         
 8757              		.loc 20 1741 33 is_stmt 0 view .LVU2415
 8758 01a0 4348     		ldr	r0, .L504+76
 8759 01a2 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8760              	.LVL537:
1744:Veno-Echo.cpp ****         buttonstate += 1;
 8761              		.loc 20 1744 9 is_stmt 1 view .LVU2416
1744:Veno-Echo.cpp ****         buttonstate += 1;
 8762              		.loc 20 1744 35 is_stmt 0 view .LVU2417
 8763 01a6 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8764              	.LVL538:
1745:Veno-Echo.cpp ****         
 8765              		.loc 20 1745 21 view .LVU2418
 8766 01aa 2368     		ldr	r3, [r4]
1744:Veno-Echo.cpp ****         buttonstate += 1;
 8767              		.loc 20 1744 19 view .LVU2419
 8768 01ac 3C4A     		ldr	r2, .L504+60
1745:Veno-Echo.cpp ****         
 8769              		.loc 20 1745 21 view .LVU2420
 8770 01ae 0133     		adds	r3, r3, #1
1744:Veno-Echo.cpp ****         buttonstate += 1;
 8771              		.loc 20 1744 19 view .LVU2421
 8772 01b0 1060     		str	r0, [r2]
1745:Veno-Echo.cpp ****         
 8773              		.loc 20 1745 9 is_stmt 1 view .LVU2422
1747:Veno-Echo.cpp ****         {
 8774              		.loc 20 1747 9 is_stmt 0 view .LVU2423
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 289


 8775 01b2 032B     		cmp	r3, #3
1745:Veno-Echo.cpp ****         
 8776              		.loc 20 1745 21 view .LVU2424
 8777 01b4 2360     		str	r3, [r4]
1747:Veno-Echo.cpp ****         {
 8778              		.loc 20 1747 9 is_stmt 1 view .LVU2425
 8779 01b6 98D1     		bne	.L463
1749:Veno-Echo.cpp ****         }
 8780              		.loc 20 1749 13 view .LVU2426
1749:Veno-Echo.cpp ****         }
 8781              		.loc 20 1749 39 is_stmt 0 view .LVU2427
 8782 01b8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8783              	.LVL539:
1749:Veno-Echo.cpp ****         }
 8784              		.loc 20 1749 23 view .LVU2428
 8785 01bc 394B     		ldr	r3, .L504+64
 8786 01be 1860     		str	r0, [r3]
 8787 01c0 93E7     		b	.L463
 8788              	.L497:
1673:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8789              		.loc 20 1673 9 is_stmt 1 view .LVU2429
1673:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8790              		.loc 20 1673 24 is_stmt 0 view .LVU2430
 8791 01c2 2948     		ldr	r0, .L504+4
 8792 01c4 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8793              	.LVL540:
1674:Veno-Echo.cpp ****         {
 8794              		.loc 20 1674 9 is_stmt 1 view .LVU2431
1674:Veno-Echo.cpp ****         {
 8795              		.loc 20 1674 29 is_stmt 0 view .LVU2432
 8796 01c8 2748     		ldr	r0, .L504+4
 8797 01ca FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8798              	.LVL541:
1680:Veno-Echo.cpp ****         }
 8799              		.loc 20 1680 31 view .LVU2433
 8800 01ce F7EE007A 		vmov.f32	s15, #1.0e+0
 8801 01d2 9FED2D7A 		vldr.32	s14, .L504+36
 8802 01d6 0028     		cmp	r0, #0
 8803 01d8 2C49     		ldr	r1, .L504+40
 8804              	.LBB1740:
 8805              	.LBB1741:
 8806              	.LBB1742:
 8807              	.LBB1743:
 8808              	.LBB1744:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8809              		.loc 22 397 18 view .LVU2434
 8810 01da 4FF00102 		mov	r2, #1
 8811 01de 2C4B     		ldr	r3, .L504+44
 8812              	.LBE1744:
 8813              	.LBE1743:
 8814              	.LBE1742:
 8815              	.LBE1741:
 8816              	.LBE1740:
1680:Veno-Echo.cpp ****         }
 8817              		.loc 20 1680 31 view .LVU2435
 8818 01e0 47FE277A 		vseleq.f32	s15, s14, s15
 8819 01e4 C1ED0A7A 		vstr.32	s15, [r1, #40]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 290


1682:Veno-Echo.cpp ****     }
 8820              		.loc 20 1682 9 is_stmt 1 view .LVU2436
 8821              	.LVL542:
 8822              	.LBB1749:
 8823              	.LBI1740:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8824              		.loc 23 80 5 view .LVU2437
 8825              	.LBB1748:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8826              		.loc 23 81 7 view .LVU2438
 8827              	.LBB1747:
 8828              	.LBI1742:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8829              		.loc 22 288 7 view .LVU2439
 8830              	.LBB1746:
 8831              	.LBI1743:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8832              		.loc 22 390 7 view .LVU2440
 8833              	.LBB1745:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8834              		.loc 22 397 18 is_stmt 0 view .LVU2441
 8835 01e8 BFF35B8F 		dmb	ish
 8836 01ec 1A70     		strb	r2, [r3]
 8837 01ee BFF35B8F 		dmb	ish
 8838              	.LVL543:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8839              		.loc 22 397 18 view .LVU2442
 8840              	.LBE1745:
 8841              	.LBE1746:
 8842              	.LBE1747:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8843              		.loc 23 81 35 view .LVU2443
 8844 01f2 28E7     		b	.L452
 8845              	.LVL544:
 8846              	.L496:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8847              		.loc 23 81 35 view .LVU2444
 8848              	.LBE1748:
 8849              	.LBE1749:
1659:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8850              		.loc 20 1659 9 is_stmt 1 view .LVU2445
1659:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8851              		.loc 20 1659 24 is_stmt 0 view .LVU2446
 8852 01f4 1B48     		ldr	r0, .L504
 8853 01f6 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8854              	.LVL545:
1660:Veno-Echo.cpp ****         {
 8855              		.loc 20 1660 9 is_stmt 1 view .LVU2447
1660:Veno-Echo.cpp ****         {
 8856              		.loc 20 1660 29 is_stmt 0 view .LVU2448
 8857 01fa 1A48     		ldr	r0, .L504
 8858 01fc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8859              	.LVL546:
1666:Veno-Echo.cpp ****         }
 8860              		.loc 20 1666 31 view .LVU2449
 8861 0200 F7EE007A 		vmov.f32	s15, #1.0e+0
 8862 0204 9FED207A 		vldr.32	s14, .L504+36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 291


 8863 0208 0028     		cmp	r0, #0
 8864 020a 2049     		ldr	r1, .L504+40
 8865              	.LBB1750:
 8866              	.LBB1751:
 8867              	.LBB1752:
 8868              	.LBB1753:
 8869              	.LBB1754:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8870              		.loc 22 397 18 view .LVU2450
 8871 020c 4FF00102 		mov	r2, #1
 8872 0210 1F4B     		ldr	r3, .L504+44
 8873              	.LBE1754:
 8874              	.LBE1753:
 8875              	.LBE1752:
 8876              	.LBE1751:
 8877              	.LBE1750:
1666:Veno-Echo.cpp ****         }
 8878              		.loc 20 1666 31 view .LVU2451
 8879 0212 47FE277A 		vseleq.f32	s15, s14, s15
 8880 0216 C1ED097A 		vstr.32	s15, [r1, #36]
1668:Veno-Echo.cpp ****     }
 8881              		.loc 20 1668 9 is_stmt 1 view .LVU2452
 8882              	.LVL547:
 8883              	.LBB1759:
 8884              	.LBI1750:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8885              		.loc 23 80 5 view .LVU2453
 8886              	.LBB1758:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8887              		.loc 23 81 7 view .LVU2454
 8888              	.LBB1757:
 8889              	.LBI1752:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8890              		.loc 22 288 7 view .LVU2455
 8891              	.LBB1756:
 8892              	.LBI1753:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8893              		.loc 22 390 7 view .LVU2456
 8894              	.LBB1755:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8895              		.loc 22 397 18 is_stmt 0 view .LVU2457
 8896 021a BFF35B8F 		dmb	ish
 8897 021e 1A70     		strb	r2, [r3]
 8898 0220 BFF35B8F 		dmb	ish
 8899              	.LVL548:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8900              		.loc 22 397 18 view .LVU2458
 8901              	.LBE1755:
 8902              	.LBE1756:
 8903              	.LBE1757:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8904              		.loc 23 81 35 view .LVU2459
 8905 0224 0AE7     		b	.L450
 8906              	.LVL549:
 8907              	.L498:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8908              		.loc 23 81 35 view .LVU2460
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 292


 8909              	.LBE1758:
 8910              	.LBE1759:
1692:Veno-Echo.cpp ****         }
 8911              		.loc 20 1692 13 is_stmt 1 view .LVU2461
1692:Veno-Echo.cpp ****         }
 8912              		.loc 20 1692 39 is_stmt 0 view .LVU2462
 8913 0226 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8914              	.LVL550:
1692:Veno-Echo.cpp ****         }
 8915              		.loc 20 1692 23 view .LVU2463
 8916 022a 1E4B     		ldr	r3, .L504+64
 8917 022c 1860     		str	r0, [r3]
 8918 022e 15E7     		b	.L455
 8919              	.L499:
1715:Veno-Echo.cpp ****         }
 8920              		.loc 20 1715 13 is_stmt 1 view .LVU2464
1715:Veno-Echo.cpp ****         }
 8921              		.loc 20 1715 39 is_stmt 0 view .LVU2465
 8922 0230 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8923              	.LVL551:
1715:Veno-Echo.cpp ****         }
 8924              		.loc 20 1715 23 view .LVU2466
 8925 0234 1B4B     		ldr	r3, .L504+64
 8926 0236 1860     		str	r0, [r3]
 8927 0238 36E7     		b	.L459
 8928              	.L503:
1737:Veno-Echo.cpp ****             AltControls.tempo = BaseTempo.getTempo();
 8929              		.loc 20 1737 13 is_stmt 1 view .LVU2467
1737:Veno-Echo.cpp ****             AltControls.tempo = BaseTempo.getTempo();
 8930              		.loc 20 1737 35 is_stmt 0 view .LVU2468
 8931 023a 1C48     		ldr	r0, .L504+72
 8932 023c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8933              	.LVL552:
 8934 0240 1B48     		ldr	r0, .L504+76
 8935 0242 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8936              	.LVL553:
1738:Veno-Echo.cpp ****             save_flag = true;
 8937              		.loc 20 1738 13 is_stmt 1 view .LVU2469
1738:Veno-Echo.cpp ****             save_flag = true;
 8938              		.loc 20 1738 51 is_stmt 0 view .LVU2470
 8939 0246 1948     		ldr	r0, .L504+72
 8940 0248 FFF7FEFF 		bl	_ZN8Taptempo8getTempoEv
 8941              	.LVL554:
1738:Veno-Echo.cpp ****             save_flag = true;
 8942              		.loc 20 1738 31 view .LVU2471
 8943 024c 0F49     		ldr	r1, .L504+40
 8944              	.LBB1760:
 8945              	.LBB1761:
 8946              	.LBB1762:
 8947              	.LBB1763:
 8948              	.LBB1764:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8949              		.loc 22 397 18 view .LVU2472
 8950 024e 0122     		movs	r2, #1
 8951 0250 0F4B     		ldr	r3, .L504+44
 8952              	.LBE1764:
 8953              	.LBE1763:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 293


 8954              	.LBE1762:
 8955              	.LBE1761:
 8956              	.LBE1760:
1738:Veno-Echo.cpp ****             save_flag = true;
 8957              		.loc 20 1738 31 view .LVU2473
 8958 0252 81ED080A 		vstr.32	s0, [r1, #32]
1739:Veno-Echo.cpp ****         }
 8959              		.loc 20 1739 13 is_stmt 1 view .LVU2474
 8960              	.LVL555:
 8961              	.LBB1769:
 8962              	.LBI1760:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8963              		.loc 23 80 5 view .LVU2475
 8964              	.LBB1768:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8965              		.loc 23 81 7 view .LVU2476
 8966              	.LBB1767:
 8967              	.LBI1762:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8968              		.loc 22 288 7 view .LVU2477
 8969              	.LBB1766:
 8970              	.LBI1763:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8971              		.loc 22 390 7 view .LVU2478
 8972              	.LBB1765:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8973              		.loc 22 397 18 is_stmt 0 view .LVU2479
 8974 0256 BFF35B8F 		dmb	ish
 8975 025a 1A70     		strb	r2, [r3]
 8976 025c BFF35B8F 		dmb	ish
 8977              	.LVL556:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8978              		.loc 22 397 18 view .LVU2480
 8979              	.LBE1765:
 8980              	.LBE1766:
 8981              	.LBE1767:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8982              		.loc 23 81 35 view .LVU2481
 8983 0260 9EE7     		b	.L464
 8984              	.L505:
 8985 0262 00BF     		.align	2
 8986              	.L504:
 8987 0264 00000000 		.word	.LANCHOR93
 8988 0268 00000000 		.word	.LANCHOR94
 8989 026c 00000000 		.word	.LANCHOR95
 8990 0270 00000000 		.word	.LANCHOR98
 8991 0274 00000000 		.word	.LANCHOR96
 8992 0278 00000000 		.word	.LANCHOR97
 8993 027c 00000000 		.word	.LANCHOR99
 8994 0280 00000000 		.word	.LANCHOR100
 8995 0284 00000000 		.word	.LANCHOR110
 8996 0288 00000000 		.word	0
 8997 028c 00000000 		.word	.LANCHOR15
 8998 0290 00000000 		.word	.LANCHOR16
 8999 0294 00000000 		.word	.LANCHOR7
 9000 0298 00000000 		.word	.LANCHOR113
 9001 029c 00000000 		.word	.LANCHOR12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 294


 9002 02a0 00000000 		.word	.LANCHOR112
 9003 02a4 00000000 		.word	.LANCHOR111
 9004 02a8 00000000 		.word	.LANCHOR114
 9005 02ac 00000000 		.word	.LANCHOR26
 9006 02b0 00000000 		.word	.LANCHOR90
 9007              	.LBE1768:
 9008              	.LBE1769:
 9009              		.cfi_endproc
 9010              	.LFE4329:
 9012              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 9013              		.align	1
 9014              		.p2align 2,,3
 9015              		.syntax unified
 9016              		.thumb
 9017              		.thumb_func
 9018              		.fpu fpv5-d16
 9020              	_ZL13AudioCallbackPfS_j:
 9021              	.LVL557:
 9022              	.LFB4309:
 250:Veno-Echo.cpp **** 
 9023              		.loc 20 250 1 is_stmt 1 view -0
 9024              		.cfi_startproc
 9025              		@ args = 0, pretend = 0, frame = 80
 9026              		@ frame_needed = 0, uses_anonymous_args = 0
 261:Veno-Echo.cpp **** 
 9027              		.loc 20 261 1 view .LVU2483
 279:Veno-Echo.cpp **** 
 9028              		.loc 20 279 1 view .LVU2484
 279:Veno-Echo.cpp **** 
 9029              		.loc 20 279 20 is_stmt 0 view .LVU2485
 9030 0000 DFF890C0 		ldr	ip, .L647+12
 279:Veno-Echo.cpp **** 
 9031              		.loc 20 279 25 view .LVU2486
 9032 0004 204B     		ldr	r3, .L647
 250:Veno-Echo.cpp **** 
 9033              		.loc 20 250 1 view .LVU2487
 9034 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9035              		.cfi_def_cfa_offset 36
 9036              		.cfi_offset 4, -36
 9037              		.cfi_offset 5, -32
 9038              		.cfi_offset 6, -28
 9039              		.cfi_offset 7, -24
 9040              		.cfi_offset 8, -20
 9041              		.cfi_offset 9, -16
 9042              		.cfi_offset 10, -12
 9043              		.cfi_offset 11, -8
 9044              		.cfi_offset 14, -4
 279:Veno-Echo.cpp **** 
 9045              		.loc 20 279 20 view .LVU2488
 9046 000a DCF80040 		ldr	r4, [ip]
 250:Veno-Echo.cpp **** 
 9047              		.loc 20 250 1 view .LVU2489
 9048 000e 1546     		mov	r5, r2
 9049 0010 0646     		mov	r6, r0
 9050 0012 0F46     		mov	r7, r1
 279:Veno-Echo.cpp **** 
 9051              		.loc 20 279 20 view .LVU2490
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 295


 9052 0014 0134     		adds	r4, r4, #1
 279:Veno-Echo.cpp **** 
 9053              		.loc 20 279 25 view .LVU2491
 9054 0016 83FB0432 		smull	r3, r2, r3, r4
 9055              	.LVL558:
 279:Veno-Echo.cpp **** 
 9056              		.loc 20 279 25 view .LVU2492
 9057 001a E317     		asrs	r3, r4, #31
 9058 001c 2244     		add	r2, r2, r4
 9059 001e C3EBE203 		rsb	r3, r3, r2, asr #3
 9060 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9061 0026 E31A     		subs	r3, r4, r3
 250:Veno-Echo.cpp **** 
 9062              		.loc 20 250 1 view .LVU2493
 9063 0028 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 9064              		.cfi_def_cfa_offset 92
 9065              		.cfi_offset 80, -92
 9066              		.cfi_offset 81, -88
 9067              		.cfi_offset 82, -84
 9068              		.cfi_offset 83, -80
 9069              		.cfi_offset 84, -76
 9070              		.cfi_offset 85, -72
 9071              		.cfi_offset 86, -68
 9072              		.cfi_offset 87, -64
 9073              		.cfi_offset 88, -60
 9074              		.cfi_offset 89, -56
 9075              		.cfi_offset 90, -52
 9076              		.cfi_offset 91, -48
 9077              		.cfi_offset 92, -44
 9078              		.cfi_offset 93, -40
 279:Veno-Echo.cpp **** 
 9079              		.loc 20 279 9 view .LVU2494
 9080 002c CCF80030 		str	r3, [ip]
 292:Veno-Echo.cpp ****         {
 9081              		.loc 20 292 9 is_stmt 1 view .LVU2495
 250:Veno-Echo.cpp **** 
 9082              		.loc 20 250 1 is_stmt 0 view .LVU2496
 9083 0030 95B0     		sub	sp, sp, #84
 9084              		.cfi_def_cfa_offset 176
 9085 0032 0E2B     		cmp	r3, #14
 9086 0034 17D8     		bhi	.L507
 9087 0036 DFE813F0 		tbh	[pc, r3, lsl #1]
 9088              	.L509:
 9089 003a 9205     		.2byte	(.L523-.L509)/2
 9090 003c 0F00     		.2byte	(.L522-.L509)/2
 9091 003e 9A05     		.2byte	(.L521-.L509)/2
 9092 0040 A305     		.2byte	(.L520-.L509)/2
 9093 0042 AC05     		.2byte	(.L519-.L509)/2
 9094 0044 ED05     		.2byte	(.L518-.L509)/2
 9095 0046 F605     		.2byte	(.L517-.L509)/2
 9096 0048 FF05     		.2byte	(.L516-.L509)/2
 9097 004a 0806     		.2byte	(.L515-.L509)/2
 9098 004c 1106     		.2byte	(.L514-.L509)/2
 9099 004e 1A06     		.2byte	(.L513-.L509)/2
 9100 0050 2306     		.2byte	(.L512-.L509)/2
 9101 0052 2C06     		.2byte	(.L511-.L509)/2
 9102 0054 3506     		.2byte	(.L510-.L509)/2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 296


 9103 0056 8905     		.2byte	(.L508-.L509)/2
 9104              		.p2align 1
 9105              	.L522:
 301:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9106              		.loc 20 301 13 is_stmt 1 view .LVU2497
 302:Veno-Echo.cpp ****             break;
 9107              		.loc 20 302 17 view .LVU2498
 9108              	.LBB1856:
 9109              	.LBI1856:
 849:Veno-Echo.cpp **** {
 9110              		.loc 20 849 6 view .LVU2499
 9111              	.LBB1857:
 851:Veno-Echo.cpp **** }
 9112              		.loc 20 851 5 view .LVU2500
 851:Veno-Echo.cpp **** }
 9113              		.loc 20 851 36 is_stmt 0 view .LVU2501
 9114 0058 0021     		movs	r1, #0
 9115              	.LVL559:
 851:Veno-Echo.cpp **** }
 9116              		.loc 20 851 36 view .LVU2502
 9117 005a 0C48     		ldr	r0, .L647+4
 9118              	.LVL560:
 851:Veno-Echo.cpp **** }
 9119              		.loc 20 851 36 view .LVU2503
 9120 005c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9121              	.LVL561:
 851:Veno-Echo.cpp **** }
 9122              		.loc 20 851 19 view .LVU2504
 9123 0060 0B4B     		ldr	r3, .L647+8
 9124 0062 83ED000A 		vstr.32	s0, [r3]
 9125              	.L507:
 9126              	.LVL562:
 851:Veno-Echo.cpp **** }
 9127              		.loc 20 851 19 view .LVU2505
 9128              	.LBE1857:
 9129              	.LBE1856:
 9130              	.LBB1858:
 382:Veno-Echo.cpp ****     {   
 9131              		.loc 20 382 25 is_stmt 1 discriminator 1 view .LVU2506
 9132 0066 002D     		cmp	r5, #0
 9133 0068 00F05285 		beq	.L506
 382:Veno-Echo.cpp ****     {   
 9134              		.loc 20 382 25 is_stmt 0 view .LVU2507
 9135 006c 0023     		movs	r3, #0
 9136 006e 013D     		subs	r5, r5, #1
 9137              	.LVL563:
 382:Veno-Echo.cpp ****     {   
 9138              		.loc 20 382 25 view .LVU2508
 9139 0070 DFF82480 		ldr	r8, .L647+16
 9140 0074 B346     		mov	fp, r6
 9141 0076 0293     		str	r3, [sp, #8]
 9142 0078 25F00103 		bic	r3, r5, #1
 9143 007c DFF81C90 		ldr	r9, .L647+20
 9144 0080 0097     		str	r7, [sp]
 9145 0082 0593     		str	r3, [sp, #20]
 9146 0084 5AE1     		b	.L579
 9147              	.L648:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 297


 9148 0086 00BF     		.align	2
 9149              	.L647:
 9150 0088 89888888 		.word	-2004318071
 9151 008c 18000000 		.word	.LANCHOR4+24
 9152 0090 00000000 		.word	.LANCHOR5
 9153 0094 00000000 		.word	.LANCHOR115
 9154 0098 00000000 		.word	.LANCHOR130
 9155 009c 00000000 		.word	.LANCHOR131
 9156              	.LVL564:
 9157              	.L646:
 9158              	.LBB1859:
 9159              	.LBB1860:
 9160              	.LBB1861:
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9161              		.loc 20 2004 10 is_stmt 1 view .LVU2509
 9162 00a0 B8EE007A 		vmov.f32	s14, #-2.0e+0
2005:Veno-Echo.cpp ****     else
 9163              		.loc 20 2005 19 is_stmt 0 view .LVU2510
 9164 00a4 F4EE477A 		vcmp.f32	s15, s14
 9165 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9166 00ac 48BF     		it	mi
 9167 00ae F0EE477A 		vmovmi.f32	s15, s14
 9168              	.LVL565:
 9169              	.L545:
2009:Veno-Echo.cpp **** }
 9170              		.loc 20 2009 5 is_stmt 1 view .LVU2511
2009:Veno-Echo.cpp **** }
 9171              		.loc 20 2009 5 is_stmt 0 view .LVU2512
 9172              	.LBE1861:
 9173              	.LBE1860:
 9174              	.LBB1864:
 9175              	.LBB1865:
2002:Veno-Echo.cpp ****         returnval = limit;
 9176              		.loc 20 2002 5 view .LVU2513
 9177 00b2 B0EE007A 		vmov.f32	s14, #2.0e+0
 9178              	.LBE1865:
 9179              	.LBE1864:
 438:Veno-Echo.cpp **** 
 9180              		.loc 20 438 34 view .LVU2514
 9181 00b6 9DED090A 		vldr.32	s0, [sp, #36]
 437:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9182              		.loc 20 437 23 view .LVU2515
 9183 00ba CDED087A 		vstr.32	s15, [sp, #32]
 438:Veno-Echo.cpp **** 
 9184              		.loc 20 438 9 is_stmt 1 view .LVU2516
 9185              	.LVL566:
 9186              	.LBB1869:
 9187              	.LBI1864:
1999:Veno-Echo.cpp **** {
 9188              		.loc 20 1999 7 view .LVU2517
 9189              	.LBB1866:
2001:Veno-Echo.cpp ****     if (input > limit)
 9190              		.loc 20 2001 5 view .LVU2518
2002:Veno-Echo.cpp ****         returnval = limit;
 9191              		.loc 20 2002 5 view .LVU2519
 9192 00be B4EEC70A 		vcmpe.f32	s0, s14
 9193 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 298


 9194 00c6 00F36284 		bgt	.L583
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9195              		.loc 20 2004 10 view .LVU2520
 9196 00ca B8EE007A 		vmov.f32	s14, #-2.0e+0
 9197              	.LBE1866:
 9198              	.LBE1869:
 9199              	.LBB1870:
 440:Veno-Echo.cpp **** {
 9200              		.loc 20 440 1 is_stmt 0 view .LVU2521
 9201 00ce DD4B     		ldr	r3, .L649
 9202 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9203              	.LBE1870:
 9204              	.LBB1892:
 9205              	.LBB1867:
2005:Veno-Echo.cpp ****     else
 9206              		.loc 20 2005 19 view .LVU2522
 9207 00d2 B4EE470A 		vcmp.f32	s0, s14
 9208 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9209 00da 48BF     		it	mi
 9210 00dc B0EE470A 		vmovmi.f32	s0, s14
 9211              	.LVL567:
2009:Veno-Echo.cpp **** }
 9212              		.loc 20 2009 5 is_stmt 1 view .LVU2523
2009:Veno-Echo.cpp **** }
 9213              		.loc 20 2009 5 is_stmt 0 view .LVU2524
 9214              	.LBE1867:
 9215              	.LBE1892:
 438:Veno-Echo.cpp **** 
 9216              		.loc 20 438 23 view .LVU2525
 9217 00e0 8DED090A 		vstr.32	s0, [sp, #36]
 440:Veno-Echo.cpp **** {
 9218              		.loc 20 440 1 is_stmt 1 view .LVU2526
 9219              	.LBB1893:
 9220 00e4 002B     		cmp	r3, #0
 9221 00e6 00F05B84 		beq	.L643
 9222              	.L549:
 9223              	.LBE1893:
 484:Veno-Echo.cpp ****         static float RNegFB{};
 9224              		.loc 20 484 9 view .LVU2527
 485:Veno-Echo.cpp **** 
 9225              		.loc 20 485 9 view .LVU2528
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9226              		.loc 20 488 9 view .LVU2529
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9227              		.loc 20 488 22 is_stmt 0 view .LVU2530
 9228 00ea D74B     		ldr	r3, .L649+4
 9229              	.LBB1894:
 9230              	.LBB1895:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9231              		.loc 12 57 16 view .LVU2531
 9232 00ec D8ED042A 		vldr.32	s5, [r8, #16]
 9233              	.LBE1895:
 9234              	.LBE1894:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 299


 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9235              		.loc 20 488 22 view .LVU2532
 9236 00f0 D3ED004A 		vldr.32	s9, [r3]
 9237 00f4 D54B     		ldr	r3, .L649+8
 9238              	.LBB1907:
 9239              	.LBB1896:
 9240              		.loc 12 57 37 view .LVU2533
 9241 00f6 98ED006A 		vldr.32	s12, [r8]
 9242              	.LBE1896:
 9243              	.LBE1907:
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9244              		.loc 20 488 22 view .LVU2534
 9245 00fa 93ED007A 		vldr.32	s14, [r3]
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9246              		.loc 20 491 22 view .LVU2535
 9247 00fe D44B     		ldr	r3, .L649+12
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9248              		.loc 20 488 9 view .LVU2536
 9249 0100 F4EEC74A 		vcmpe.f32	s9, s14
 9250              	.LBB1908:
 9251              	.LBB1909:
 9252              		.loc 12 57 16 view .LVU2537
 9253 0104 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9254              		.loc 12 65 20 view .LVU2538
 9255 0108 99ED054A 		vldr.32	s8, [r9, #20]
 9256              		.loc 12 65 53 view .LVU2539
 9257 010c 99ED032A 		vldr.32	s4, [r9, #12]
 9258              	.LBE1909:
 9259              	.LBE1908:
 488:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9260              		.loc 20 488 9 view .LVU2540
 9261 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9262              	.LBB1918:
 9263              	.LBB1897:
 9264              		.loc 12 65 20 view .LVU2541
 9265 0114 98ED053A 		vldr.32	s6, [r8, #20]
 9266              		.loc 12 65 53 view .LVU2542
 9267 0118 98ED031A 		vldr.32	s2, [r8, #12]
 9268              	.LBE1897:
 9269              	.LBE1918:
 507:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9270              		.loc 20 507 13 view .LVU2543
 9271 011c DFEDCD1A 		vldr.32	s3, .L649+16
 9272 0120 58BF     		it	pl
 9273 0122 74EEC74A 		vsubpl.f32	s9, s9, s14
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9274              		.loc 20 491 9 is_stmt 1 view .LVU2544
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9275              		.loc 20 491 22 is_stmt 0 view .LVU2545
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 300


 9276 0126 93ED007A 		vldr.32	s14, [r3]
 9277 012a CB4B     		ldr	r3, .L649+20
 9278 012c D3ED006A 		vldr.32	s13, [r3]
 494:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9279              		.loc 20 494 15 view .LVU2546
 9280 0130 67EEA44A 		vmul.f32	s9, s15, s9
 9281              	.LBB1919:
 9282              	.LBB1910:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9283              		.loc 12 57 37 view .LVU2547
 9284 0134 D9ED007A 		vldr.32	s15, [r9]
 9285              	.LBE1910:
 9286              	.LBE1919:
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9287              		.loc 20 491 9 view .LVU2548
 9288 0138 B4EEE67A 		vcmpe.f32	s14, s13
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9289              		.loc 20 498 36 view .LVU2549
 9290 013c C74B     		ldr	r3, .L649+24
 491:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9291              		.loc 20 491 9 view .LVU2550
 9292 013e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9293 0142 58BF     		it	pl
 9294 0144 37EE667A 		vsubpl.f32	s14, s14, s13
 494:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9295              		.loc 20 494 9 is_stmt 1 view .LVU2551
 9296              	.LVL568:
 495:Veno-Echo.cpp **** 
 9297              		.loc 20 495 9 view .LVU2552
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9298              		.loc 20 498 36 is_stmt 0 view .LVU2553
 9299 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 495:Veno-Echo.cpp **** 
 9300              		.loc 20 495 15 view .LVU2554
 9301 014c 20EE070A 		vmul.f32	s0, s0, s14
 9302              	.LVL569:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9303              		.loc 20 498 9 is_stmt 1 view .LVU2555
 9304              	.LBB1920:
 9305              	.LBB1898:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9306              		.loc 12 57 33 is_stmt 0 view .LVU2556
 9307 0150 36EEE25A 		vsub.f32	s10, s13, s5
 9308              	.LBE1898:
 9309              	.LBE1920:
 9310              	.LBB1921:
 9311              	.LBB1911:
 9312 0154 76EEE35A 		vsub.f32	s11, s13, s7
 9313              	.LBE1911:
 9314              	.LBE1921:
 9315              	.LBB1922:
 9316              	.LBB1899:
 9317              		.loc 12 65 45 view .LVU2557
 9318 0158 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9319              		.loc 12 57 37 view .LVU2558
 9320 015c 25EE065A 		vmul.f32	s10, s10, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 301


 9321              	.LBE1899:
 9322              	.LBE1922:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9323              		.loc 20 498 36 view .LVU2559
 9324 0160 93ED006A 		vldr.32	s12, [r3]
 9325              	.LBB1923:
 9326              	.LBB1912:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9327              		.loc 12 57 37 view .LVU2560
 9328 0164 65EEA75A 		vmul.f32	s11, s11, s15
 9329              		.loc 12 65 45 view .LVU2561
 9330 0168 76EEC47A 		vsub.f32	s15, s13, s8
 9331              	.LBE1912:
 9332              	.LBE1923:
 9333              	.LBB1924:
 9334              	.LBB1900:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9335              		.loc 12 57 28 view .LVU2562
 9336 016c A4EEA25A 		vfma.f32	s10, s9, s5
 9337              	.LBE1900:
 9338              	.LBE1924:
 9339              	.LBB1925:
 9340              	.LBB1913:
 9341 0170 E0EE235A 		vfma.f32	s11, s0, s7
 9342              		.loc 12 65 53 view .LVU2563
 9343 0174 67EE827A 		vmul.f32	s15, s15, s4
 9344              	.LBE1913:
 9345              	.LBE1925:
 9346              	.LBB1926:
 9347              	.LBB1901:
 9348 0178 27EE017A 		vmul.f32	s14, s14, s2
 9349              	.LBE1901:
 9350              	.LBE1926:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9351              		.loc 20 498 36 view .LVU2564
 9352 017c 76EEC66A 		vsub.f32	s13, s13, s12
 9353              	.LBB1927:
 9354              	.LBB1902:
  58:envFollow.h   **** 
 9355              		.loc 12 58 30 view .LVU2565
 9356 0180 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9357              		.loc 12 57 13 view .LVU2566
 9358 0184 88ED005A 		vstr.32	s10, [r8]
 9359              	.LBE1902:
 9360              	.LBE1927:
 9361              	.LBB1928:
 9362              	.LBB1914:
  58:envFollow.h   **** 
 9363              		.loc 12 58 30 view .LVU2567
 9364 0188 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9365              		.loc 12 57 13 view .LVU2568
 9366 018c C9ED005A 		vstr.32	s11, [r9]
 9367              	.LBE1914:
 9368              	.LBE1928:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 302


 9369              		.loc 20 498 89 view .LVU2569
 9370 0190 66EE005A 		vmul.f32	s11, s12, s0
 9371              	.LBB1929:
 9372              	.LBB1903:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9373              		.loc 12 61 27 view .LVU2570
 9374 0194 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9375              		.loc 12 58 21 view .LVU2571
 9376 0198 88ED022A 		vstr.32	s4, [r8, #8]
 9377              	.LBE1903:
 9378              	.LBE1929:
 9379              	.LBB1930:
 9380              	.LBB1915:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9381              		.loc 12 61 27 view .LVU2572
 9382 019c B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9383              		.loc 12 58 21 view .LVU2573
 9384 01a0 C9ED022A 		vstr.32	s5, [r9, #8]
 9385              	.LBE1915:
 9386              	.LBE1930:
 499:Veno-Echo.cpp **** 
 9387              		.loc 20 499 89 view .LVU2574
 9388 01a4 26EE246A 		vmul.f32	s12, s12, s9
 9389              	.LBB1931:
 9390              	.LBB1904:
 9391              		.loc 12 65 40 view .LVU2575
 9392 01a8 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9393              		.loc 12 61 20 view .LVU2576
 9394 01ac C8ED013A 		vstr.32	s7, [r8, #4]
 9395              	.LBE1904:
 9396              	.LBE1931:
 9397              	.LBB1932:
 9398              	.LBB1916:
 9399              		.loc 12 65 40 view .LVU2577
 9400 01b0 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9401              		.loc 12 61 20 view .LVU2578
 9402 01b4 89ED015A 		vstr.32	s10, [r9, #4]
 9403              	.LBE1916:
 9404              	.LBE1932:
 498:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9405              		.loc 20 498 15 view .LVU2579
 9406 01b8 E6EEA45A 		vfma.f32	s11, s13, s9
 9407              	.LVL570:
 499:Veno-Echo.cpp **** 
 9408              		.loc 20 499 9 is_stmt 1 view .LVU2580
 499:Veno-Echo.cpp **** 
 9409              		.loc 20 499 15 is_stmt 0 view .LVU2581
 9410 01bc A6EE806A 		vfma.f32	s12, s13, s0
 9411              	.LVL571:
 503:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9412              		.loc 20 503 9 is_stmt 1 view .LVU2582
 9413              	.LBB1933:
 9414              	.LBI1894:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 303


  54:envFollow.h   ****     {
 9415              		.loc 12 54 11 view .LVU2583
 9416              	.LBB1905:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9417              		.loc 12 57 9 view .LVU2584
  58:envFollow.h   **** 
 9418              		.loc 12 58 9 view .LVU2585
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9419              		.loc 12 61 9 view .LVU2586
 9420              		.loc 12 65 9 view .LVU2587
 9421              	.LBE1905:
 9422              	.LBE1933:
 507:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9423              		.loc 20 507 13 is_stmt 0 view .LVU2588
 9424 01c0 B4EEE17A 		vcmpe.f32	s14, s3
 9425              	.LBB1934:
 9426              	.LBB1906:
 9427              		.loc 12 65 17 view .LVU2589
 9428 01c4 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9429              		.loc 12 67 9 is_stmt 1 view .LVU2590
 9430              	.LVL572:
 9431              		.loc 12 67 9 is_stmt 0 view .LVU2591
 9432              	.LBE1906:
 9433              	.LBE1934:
 504:Veno-Echo.cpp **** 
 9434              		.loc 20 504 9 is_stmt 1 view .LVU2592
 9435              	.LBB1935:
 9436              	.LBI1908:
  54:envFollow.h   ****     {
 9437              		.loc 12 54 11 view .LVU2593
 9438              	.LBB1917:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9439              		.loc 12 57 9 view .LVU2594
  58:envFollow.h   **** 
 9440              		.loc 12 58 9 view .LVU2595
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9441              		.loc 12 61 9 view .LVU2596
  65:envFollow.h   **** 
 9442              		.loc 12 65 9 view .LVU2597
  65:envFollow.h   **** 
 9443              		.loc 12 65 17 is_stmt 0 view .LVU2598
 9444 01c8 C9ED037A 		vstr.32	s15, [r9, #12]
 9445              		.loc 12 67 9 is_stmt 1 view .LVU2599
 9446              	.LVL573:
 9447              		.loc 12 67 9 is_stmt 0 view .LVU2600
 9448              	.LBE1917:
 9449              	.LBE1935:
 507:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9450              		.loc 20 507 13 is_stmt 1 view .LVU2601
 9451 01cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9452 01d0 C0F2DA83 		blt	.L635
 508:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9453              		.loc 20 508 17 view .LVU2602
 508:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9454              		.loc 20 508 32 is_stmt 0 view .LVU2603
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 304


 9455 01d4 37EE617A 		vsub.f32	s14, s14, s3
 9456              	.LVL574:
 508:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9457              		.loc 20 508 47 view .LVU2604
 9458 01d8 F0EE086A 		vmov.f32	s13, #3.0e+0
 9459 01dc 27EE267A 		vmul.f32	s14, s14, s13
 9460              	.L555:
 512:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9461              		.loc 20 512 13 view .LVU2605
 9462 01e0 DFED9C6A 		vldr.32	s13, .L649+16
 9463 01e4 994B     		ldr	r3, .L649+8
 9464 01e6 F4EEE67A 		vcmpe.f32	s15, s13
 9465 01ea 83ED007A 		vstr.32	s14, [r3]
 512:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9466              		.loc 20 512 13 is_stmt 1 view .LVU2606
 9467 01ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9468 01f2 C0F2C683 		blt	.L636
 513:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9469              		.loc 20 513 17 view .LVU2607
 513:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9470              		.loc 20 513 32 is_stmt 0 view .LVU2608
 9471 01f6 77EEE67A 		vsub.f32	s15, s15, s13
 9472              	.LVL575:
 513:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9473              		.loc 20 513 47 view .LVU2609
 9474 01fa B0EE087A 		vmov.f32	s14, #3.0e+0
 9475 01fe 67EE877A 		vmul.f32	s15, s15, s14
 9476              	.L557:
 9477 0202 954B     		ldr	r3, .L649+20
 517:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9478              		.loc 20 517 42 view .LVU2610
 9479 0204 78EEA58A 		vadd.f32	s17, s17, s11
 9480              	.LVL576:
 518:Veno-Echo.cpp ****  
 9481              		.loc 20 518 42 view .LVU2611
 9482 0208 38EE066A 		vadd.f32	s12, s16, s12
 9483              	.LVL577:
 518:Veno-Echo.cpp ****  
 9484              		.loc 20 518 42 view .LVU2612
 9485 020c C3ED007A 		vstr.32	s15, [r3]
 517:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9486              		.loc 20 517 9 is_stmt 1 view .LVU2613
 518:Veno-Echo.cpp ****  
 9487              		.loc 20 518 9 view .LVU2614
 521:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9488              		.loc 20 521 9 view .LVU2615
 9489              	.LVL578:
 9490              	.LBB1936:
 9491              	.LBI1936:
1999:Veno-Echo.cpp **** {
 9492              		.loc 20 1999 7 view .LVU2616
 9493              	.LBB1937:
2001:Veno-Echo.cpp ****     if (input > limit)
 9494              		.loc 20 2001 5 view .LVU2617
2002:Veno-Echo.cpp ****         returnval = limit;
 9495              		.loc 20 2002 5 view .LVU2618
 9496 0210 F0EE007A 		vmov.f32	s15, #2.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 305


 9497 0214 F4EEE78A 		vcmpe.f32	s17, s15
 9498 0218 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9499 021c 00F35384 		bgt	.L589
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9500              		.loc 20 2004 10 view .LVU2619
 9501 0220 F8EE007A 		vmov.f32	s15, #-2.0e+0
2005:Veno-Echo.cpp ****     else
 9502              		.loc 20 2005 19 is_stmt 0 view .LVU2620
 9503 0224 F4EE678A 		vcmp.f32	s17, s15
 9504 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9505 022c 48BF     		it	mi
 9506 022e F0EE678A 		vmovmi.f32	s17, s15
 9507              	.LVL579:
 9508              	.L559:
2009:Veno-Echo.cpp **** }
 9509              		.loc 20 2009 5 is_stmt 1 view .LVU2621
2009:Veno-Echo.cpp **** }
 9510              		.loc 20 2009 5 is_stmt 0 view .LVU2622
 9511              	.LBE1937:
 9512              	.LBE1936:
 9513              	.LBB1939:
 9514              	.LBB1940:
2002:Veno-Echo.cpp ****         returnval = limit;
 9515              		.loc 20 2002 5 view .LVU2623
 9516 0232 F0EE007A 		vmov.f32	s15, #2.0e+0
 9517              	.LBE1940:
 9518              	.LBE1939:
 521:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9519              		.loc 20 521 19 view .LVU2624
 9520 0236 CDED0A8A 		vstr.32	s17, [sp, #40]
 522:Veno-Echo.cpp **** 
 9521              		.loc 20 522 9 is_stmt 1 view .LVU2625
 9522              	.LVL580:
 9523              	.LBB1943:
 9524              	.LBI1939:
1999:Veno-Echo.cpp **** {
 9525              		.loc 20 1999 7 view .LVU2626
 9526              	.LBB1941:
2001:Veno-Echo.cpp ****     if (input > limit)
 9527              		.loc 20 2001 5 view .LVU2627
2002:Veno-Echo.cpp ****         returnval = limit;
 9528              		.loc 20 2002 5 view .LVU2628
 9529 023a B4EEE76A 		vcmpe.f32	s12, s15
 9530 023e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9531 0242 00F33C84 		bgt	.L590
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9532              		.loc 20 2004 10 view .LVU2629
 9533 0246 F8EE007A 		vmov.f32	s15, #-2.0e+0
2005:Veno-Echo.cpp ****     else
 9534              		.loc 20 2005 19 is_stmt 0 view .LVU2630
 9535 024a B4EE676A 		vcmp.f32	s12, s15
 9536 024e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9537 0252 48BF     		it	mi
 9538 0254 B0EE676A 		vmovmi.f32	s12, s15
 9539              	.LVL581:
 9540              	.L561:
2009:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 306


 9541              		.loc 20 2009 5 is_stmt 1 view .LVU2631
2009:Veno-Echo.cpp **** }
 9542              		.loc 20 2009 5 is_stmt 0 view .LVU2632
 9543              	.LBE1941:
 9544              	.LBE1943:
 524:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9545              		.loc 20 524 21 view .LVU2633
 9546 0258 0AA9     		add	r1, sp, #40
 9547 025a 8148     		ldr	r0, .L649+28
 522:Veno-Echo.cpp **** 
 9548              		.loc 20 522 19 view .LVU2634
 9549 025c 8DED0B6A 		vstr.32	s12, [sp, #44]
 524:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9550              		.loc 20 524 9 is_stmt 1 view .LVU2635
 524:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9551              		.loc 20 524 21 is_stmt 0 view .LVU2636
 9552 0260 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9553              	.LVL582:
 525:Veno-Echo.cpp **** 
 9554              		.loc 20 525 9 is_stmt 1 view .LVU2637
 525:Veno-Echo.cpp **** 
 9555              		.loc 20 525 21 is_stmt 0 view .LVU2638
 9556 0264 0BA9     		add	r1, sp, #44
 9557 0266 7F48     		ldr	r0, .L649+32
 9558 0268 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9559              	.LVL583:
 528:Veno-Echo.cpp ****         float mixR;
 9560              		.loc 20 528 9 is_stmt 1 view .LVU2639
 529:Veno-Echo.cpp **** 
 9561              		.loc 20 529 9 view .LVU2640
 531:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9562              		.loc 20 531 9 view .LVU2641
 531:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9563              		.loc 20 531 53 is_stmt 0 view .LVU2642
 9564 026c 09AA     		add	r2, sp, #36
 9565 026e 08A9     		add	r1, sp, #32
 9566 0270 7D48     		ldr	r0, .L649+36
 9567 0272 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9568              	.LVL584:
 532:Veno-Echo.cpp **** 
 9569              		.loc 20 532 53 view .LVU2643
 9570 0276 08AA     		add	r2, sp, #32
 9571 0278 09A9     		add	r1, sp, #36
 9572 027a 7B48     		ldr	r0, .L649+36
 531:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9573              		.loc 20 531 81 view .LVU2644
 9574 027c 8DED0C0A 		vstr.32	s0, [sp, #48]
 532:Veno-Echo.cpp **** 
 9575              		.loc 20 532 9 is_stmt 1 view .LVU2645
 532:Veno-Echo.cpp **** 
 9576              		.loc 20 532 53 is_stmt 0 view .LVU2646
 9577 0280 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9578              	.LVL585:
 9579              	.LBB1944:
 9580              	.LBB1945:
2002:Veno-Echo.cpp ****         returnval = limit;
 9581              		.loc 20 2002 5 view .LVU2647
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 307


 9582 0284 B0EE007A 		vmov.f32	s14, #2.0e+0
 9583              	.LBE1945:
 9584              	.LBE1944:
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9585              		.loc 20 535 38 view .LVU2648
 9586 0288 DDED0C7A 		vldr.32	s15, [sp, #48]
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9587              		.loc 20 535 9 is_stmt 1 view .LVU2649
 9588              	.LVL586:
 9589              	.LBB1948:
 9590              	.LBI1944:
1999:Veno-Echo.cpp **** {
 9591              		.loc 20 1999 7 view .LVU2650
 9592              	.LBB1946:
2001:Veno-Echo.cpp ****     if (input > limit)
 9593              		.loc 20 2001 5 view .LVU2651
2002:Veno-Echo.cpp ****         returnval = limit;
 9594              		.loc 20 2002 5 view .LVU2652
 9595 028c F4EEC77A 		vcmpe.f32	s15, s14
 9596 0290 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9597 0294 00F31B84 		bgt	.L591
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9598              		.loc 20 2004 10 view .LVU2653
 9599 0298 B8EE007A 		vmov.f32	s14, #-2.0e+0
2005:Veno-Echo.cpp ****     else
 9600              		.loc 20 2005 19 is_stmt 0 view .LVU2654
 9601 029c F4EE477A 		vcmp.f32	s15, s14
 9602 02a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9603 02a4 48BF     		it	mi
 9604 02a6 F0EE477A 		vmovmi.f32	s15, s14
 9605              	.LVL587:
 9606              	.L563:
2009:Veno-Echo.cpp **** }
 9607              		.loc 20 2009 5 is_stmt 1 view .LVU2655
2009:Veno-Echo.cpp **** }
 9608              		.loc 20 2009 5 is_stmt 0 view .LVU2656
 9609              	.LBE1946:
 9610              	.LBE1948:
 9611              	.LBB1949:
 9612              	.LBB1950:
2002:Veno-Echo.cpp ****         returnval = limit;
 9613              		.loc 20 2002 5 view .LVU2657
 9614 02aa B0EE007A 		vmov.f32	s14, #2.0e+0
 9615              	.LBE1950:
 9616              	.LBE1949:
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9617              		.loc 20 535 27 view .LVU2658
 9618 02ae CDED0C7A 		vstr.32	s15, [sp, #48]
 536:Veno-Echo.cpp **** 
 9619              		.loc 20 536 9 is_stmt 1 view .LVU2659
 9620              	.LVL588:
 9621              	.LBB1954:
 9622              	.LBI1949:
1999:Veno-Echo.cpp **** {
 9623              		.loc 20 1999 7 view .LVU2660
 9624              	.LBB1951:
2001:Veno-Echo.cpp ****     if (input > limit)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 308


 9625              		.loc 20 2001 5 view .LVU2661
2002:Veno-Echo.cpp ****         returnval = limit;
 9626              		.loc 20 2002 5 view .LVU2662
 9627 02b2 B4EEC70A 		vcmpe.f32	s0, s14
 9628 02b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9629 02ba 00F3C982 		bgt	.L592
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9630              		.loc 20 2004 10 view .LVU2663
 9631 02be B8EE007A 		vmov.f32	s14, #-2.0e+0
 9632              	.LBE1951:
 9633              	.LBE1954:
 9634              	.LBB1955:
 538:Veno-Echo.cpp **** {
 9635              		.loc 20 538 1 is_stmt 0 view .LVU2664
 9636 02c2 604B     		ldr	r3, .L649
 9637 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9638              	.LBE1955:
 9639              	.LBB1978:
 9640              	.LBB1952:
2005:Veno-Echo.cpp ****     else
 9641              		.loc 20 2005 19 view .LVU2665
 9642 02c6 B4EE470A 		vcmp.f32	s0, s14
 9643 02ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9644 02ce 48BF     		it	mi
 9645 02d0 B0EE470A 		vmovmi.f32	s0, s14
 9646              	.LVL589:
2009:Veno-Echo.cpp **** }
 9647              		.loc 20 2009 5 is_stmt 1 view .LVU2666
2009:Veno-Echo.cpp **** }
 9648              		.loc 20 2009 5 is_stmt 0 view .LVU2667
 9649              	.LBE1952:
 9650              	.LBE1978:
 536:Veno-Echo.cpp **** 
 9651              		.loc 20 536 27 view .LVU2668
 9652 02d4 8DED0D0A 		vstr.32	s0, [sp, #52]
 538:Veno-Echo.cpp **** {
 9653              		.loc 20 538 1 is_stmt 1 view .LVU2669
 9654              	.LBB1979:
 9655 02d8 002B     		cmp	r3, #0
 9656 02da 40F0C282 		bne	.L644
 9657              	.LVL590:
 9658              	.L567:
 538:Veno-Echo.cpp **** {
 9659              		.loc 20 538 1 is_stmt 0 view .LVU2670
 9660              	.LBE1979:
 579:Veno-Echo.cpp ****         {
 9661              		.loc 20 579 9 is_stmt 1 view .LVU2671
 579:Veno-Echo.cpp ****         {
 9662              		.loc 20 579 19 is_stmt 0 view .LVU2672
 9663 02de 634B     		ldr	r3, .L649+40
 579:Veno-Echo.cpp ****         {
 9664              		.loc 20 579 9 view .LVU2673
 9665 02e0 F6EE006A 		vmov.f32	s13, #5.0e-1
 579:Veno-Echo.cpp ****         {
 9666              		.loc 20 579 19 view .LVU2674
 9667 02e4 93ED007A 		vldr.32	s14, [r3]
 579:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 309


 9668              		.loc 20 579 9 view .LVU2675
 9669 02e8 B4EEE67A 		vcmpe.f32	s14, s13
 9670 02ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9671 02f0 40F18582 		bpl	.L637
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9672              		.loc 20 581 13 is_stmt 1 view .LVU2676
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9673              		.loc 20 581 34 is_stmt 0 view .LVU2677
 9674 02f4 37EE077A 		vadd.f32	s14, s14, s14
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9675              		.loc 20 581 18 view .LVU2678
 9676 02f8 9BED006A 		vldr.32	s12, [fp]
 582:Veno-Echo.cpp ****         }
 9677              		.loc 20 582 18 view .LVU2679
 9678 02fc DBED016A 		vldr.32	s13, [fp, #4]
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9679              		.loc 20 581 18 view .LVU2680
 9680 0300 A7EE276A 		vfma.f32	s12, s14, s15
 582:Veno-Echo.cpp ****         }
 9681              		.loc 20 582 18 view .LVU2681
 9682 0304 E7EE006A 		vfma.f32	s13, s14, s0
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9683              		.loc 20 581 18 view .LVU2682
 9684 0308 F0EE467A 		vmov.f32	s15, s12
 9685              	.LVL591:
 582:Veno-Echo.cpp ****         }
 9686              		.loc 20 582 13 is_stmt 1 view .LVU2683
 582:Veno-Echo.cpp ****         }
 9687              		.loc 20 582 18 is_stmt 0 view .LVU2684
 9688 030c B0EE660A 		vmov.f32	s0, s13
 9689              	.LVL592:
 9690              	.L573:
 596:Veno-Echo.cpp ****         {
 9691              		.loc 20 596 9 is_stmt 1 view .LVU2685
 9692 0310 574B     		ldr	r3, .L649+44
 9693 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9694 0314 002B     		cmp	r3, #0
 9695 0316 00F06C82 		beq	.L576
 598:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9696              		.loc 20 598 13 view .LVU2686
 598:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9697              		.loc 20 598 20 is_stmt 0 view .LVU2687
 9698 031a 0023     		movs	r3, #0
 9699 031c 009A     		ldr	r2, [sp]
 9700 031e 1360     		str	r3, [r2]	@ float
 599:Veno-Echo.cpp ****         }
 9701              		.loc 20 599 13 is_stmt 1 view .LVU2688
 599:Veno-Echo.cpp ****         }
 9702              		.loc 20 599 22 is_stmt 0 view .LVU2689
 9703 0320 5360     		str	r3, [r2, #4]	@ float
 9704              	.L577:
 9705              	.LBE1859:
 382:Veno-Echo.cpp ****     {   
 9706              		.loc 20 382 5 is_stmt 1 discriminator 2 view .LVU2690
 9707 0322 009B     		ldr	r3, [sp]
 9708 0324 0BF1080B 		add	fp, fp, #8
 382:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 310


 9709              		.loc 20 382 35 is_stmt 0 discriminator 2 view .LVU2691
 9710 0328 029A     		ldr	r2, [sp, #8]
 382:Veno-Echo.cpp ****     {   
 9711              		.loc 20 382 25 discriminator 2 view .LVU2692
 9712 032a 0599     		ldr	r1, [sp, #20]
 9713 032c 0833     		adds	r3, r3, #8
 9714 032e 8A42     		cmp	r2, r1
 9715 0330 0093     		str	r3, [sp]
 382:Veno-Echo.cpp ****     {   
 9716              		.loc 20 382 35 discriminator 2 view .LVU2693
 9717 0332 02F10203 		add	r3, r2, #2
 9718              	.LVL593:
 382:Veno-Echo.cpp ****     {   
 9719              		.loc 20 382 25 is_stmt 1 discriminator 2 view .LVU2694
 9720 0336 00F0EB83 		beq	.L506
 9721 033a 0293     		str	r3, [sp, #8]
 9722              	.LVL594:
 9723              	.L579:
 9724              	.LBB2244:
 384:Veno-Echo.cpp ****         Update_Mod();
 9725              		.loc 20 384 9 view .LVU2695
 384:Veno-Echo.cpp ****         Update_Mod();
 9726              		.loc 20 384 20 is_stmt 0 view .LVU2696
 9727 033c FFF7FEFF 		bl	_Z11UpdateClockv
 9728              	.LVL595:
 385:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9729              		.loc 20 385 9 is_stmt 1 view .LVU2697
 9730              	.LBB1980:
 9731              	.LBB1981:
 9732              	.LBB1982:
 9733              	.LBB1983:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 311


 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 312


 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9734              		.loc 19 174 71 is_stmt 0 view .LVU2698
 9735 0340 DFF89CA1 		ldr	r10, .L649+156
 9736              	.LBE1983:
 9737              	.LBE1982:
 9738              	.LBE1981:
 9739              	.LBE1980:
 385:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9740              		.loc 20 385 19 view .LVU2699
 9741 0344 FFF7FEFF 		bl	_Z10Update_Modv
 9742              	.LVL596:
 386:Veno-Echo.cpp **** 
 9743              		.loc 20 386 9 is_stmt 1 view .LVU2700
 9744              	.LBB2038:
 9745              	.LBB2020:
 9746              	.LBB2002:
 9747              	.LBB1984:
 9748              		.loc 19 174 46 is_stmt 0 view .LVU2701
 9749 0348 9FED4AAA 		vldr.32	s20, .L649+48
 9750              	.LBE1984:
 9751              	.LBE2002:
 9752              	.LBE2020:
 9753              	.LBE2038:
 386:Veno-Echo.cpp **** 
 9754              		.loc 20 386 30 view .LVU2702
 9755 034c FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 9756              	.LVL597:
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9757              		.loc 20 389 9 is_stmt 1 view .LVU2703
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9758              		.loc 20 389 51 is_stmt 0 view .LVU2704
 9759 0350 4948     		ldr	r0, .L649+52
 9760 0352 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9761              	.LVL598:
 9762 0356 0146     		mov	r1, r0
 9763 0358 4848     		ldr	r0, .L649+56
 9764              	.LBB2039:
 9765              	.LBB2021:
 9766              	.LBB2003:
 9767              	.LBB1985:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 313


 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9768              		.loc 19 175 77 view .LVU2705
 9769 035a F7EE00AA 		vmov.f32	s21, #1.0e+0
 9770              	.LBE1985:
 9771              	.LBE2003:
 9772              	.LBE2021:
 9773              	.LBE2039:
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9774              		.loc 20 389 51 view .LVU2706
 9775 035e FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9776              	.LVL599:
 390:Veno-Echo.cpp ****         
 9777              		.loc 20 390 51 view .LVU2707
 9778 0362 4748     		ldr	r0, .L649+60
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9779              		.loc 20 389 51 view .LVU2708
 9780 0364 F0EE40BA 		vmov.f32	s23, s0
 9781              	.LVL600:
 390:Veno-Echo.cpp ****         
 9782              		.loc 20 390 9 is_stmt 1 view .LVU2709
 390:Veno-Echo.cpp ****         
 9783              		.loc 20 390 51 is_stmt 0 view .LVU2710
 9784 0368 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9785              	.LVL601:
 390:Veno-Echo.cpp ****         
 9786              		.loc 20 390 51 view .LVU2711
 9787 036c 0146     		mov	r1, r0
 9788 036e 4548     		ldr	r0, .L649+64
 9789 0370 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9790              	.LVL602:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9791              		.loc 20 392 44 view .LVU2712
 9792 0374 4448     		ldr	r0, .L649+68
 390:Veno-Echo.cpp ****         
 9793              		.loc 20 390 51 view .LVU2713
 9794 0376 B0EE409A 		vmov.f32	s18, s0
 9795              	.LVL603:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9796              		.loc 20 392 9 is_stmt 1 view .LVU2714
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9797              		.loc 20 392 44 is_stmt 0 view .LVU2715
 9798 037a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9799              	.LVL604:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9800              		.loc 20 392 44 view .LVU2716
 9801 037e 0146     		mov	r1, r0
 9802 0380 4248     		ldr	r0, .L649+72
 9803 0382 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9804              	.LVL605:
 393:Veno-Echo.cpp **** 
 9805              		.loc 20 393 44 view .LVU2717
 9806 0386 4248     		ldr	r0, .L649+76
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9807              		.loc 20 392 44 view .LVU2718
 9808 0388 B0EE408A 		vmov.f32	s16, s0
 9809              	.LVL606:
 393:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 314


 9810              		.loc 20 393 9 is_stmt 1 view .LVU2719
 393:Veno-Echo.cpp **** 
 9811              		.loc 20 393 44 is_stmt 0 view .LVU2720
 9812 038c FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9813              	.LVL607:
 393:Veno-Echo.cpp **** 
 9814              		.loc 20 393 44 view .LVU2721
 9815 0390 0146     		mov	r1, r0
 9816 0392 4048     		ldr	r0, .L649+80
 9817 0394 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9818              	.LVL608:
 9819              	.LBB2040:
 9820              	.LBB2041:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9821              		.loc 11 60 42 view .LVU2722
 9822 0398 3F48     		ldr	r0, .L649+84
 9823              	.LBE2041:
 9824              	.LBE2040:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9825              		.loc 20 416 49 view .LVU2723
 9826 039a 404B     		ldr	r3, .L649+88
 393:Veno-Echo.cpp **** 
 9827              		.loc 20 393 44 view .LVU2724
 9828 039c F0EE407A 		vmov.f32	s15, s0
 9829              	.LVL609:
 396:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9830              		.loc 20 396 9 is_stmt 1 view .LVU2725
 9831              	.LBB2043:
 9832              	.LBI2040:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9833              		.loc 11 60 17 view .LVU2726
 9834              	.LBB2042:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9835              		.loc 11 60 37 view .LVU2727
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9836              		.loc 11 60 42 is_stmt 0 view .LVU2728
 9837 03a0 C0ED00BA 		vstr.32	s23, [r0]
 9838              	.LVL610:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9839              		.loc 11 60 42 view .LVU2729
 9840              	.LBE2042:
 9841              	.LBE2043:
 397:Veno-Echo.cpp ****         
 9842              		.loc 20 397 9 is_stmt 1 view .LVU2730
 9843              	.LBB2044:
 9844              	.LBI2044:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9845              		.loc 11 60 17 view .LVU2731
 9846              	.LBB2045:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9847              		.loc 11 60 37 view .LVU2732
 9848              	.LBE2045:
 9849              	.LBE2044:
 9850              	.LBB2048:
 9851              	.LBB2022:
 9852              	.LBB2004:
 9853              	.LBB1986:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 315


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9854              		.loc 19 174 82 is_stmt 0 view .LVU2733
 9855 03a4 F6EE028A 		vmov.f32	s17, #5.625e-1
 9856              	.LBE1986:
 9857              	.LBE2004:
 9858              	.LBE2022:
 9859              	.LBE2048:
 9860              	.LBB2049:
 9861              	.LBB2046:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9862              		.loc 11 60 42 view .LVU2734
 9863 03a8 3D48     		ldr	r0, .L649+92
 9864              	.LBE2046:
 9865              	.LBE2049:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9866              		.loc 20 416 49 view .LVU2735
 9867 03aa 1D68     		ldr	r5, [r3]
 9868              	.LBB2050:
 9869              	.LBB2047:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9870              		.loc 11 60 42 view .LVU2736
 9871 03ac 80ED009A 		vstr.32	s18, [r0]
 9872              	.LVL611:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9873              		.loc 11 60 42 view .LVU2737
 9874              	.LBE2047:
 9875              	.LBE2050:
 399:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9876              		.loc 20 399 9 is_stmt 1 view .LVU2738
 9877              	.LBB2051:
 9878              	.LBI2051:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9879              		.loc 11 60 17 view .LVU2739
 9880              	.LBB2052:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9881              		.loc 11 60 37 view .LVU2740
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9882              		.loc 11 60 42 is_stmt 0 view .LVU2741
 9883 03b0 3C48     		ldr	r0, .L649+96
 9884              	.LBE2052:
 9885              	.LBE2051:
 9886              	.LBB2054:
 9887              	.LBB2023:
 9888              	.LBB2005:
 9889              	.LBB1987:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9890              		.loc 19 174 71 view .LVU2742
 9891 03b2 05EB0A02 		add	r2, r5, r10
 9892              	.LBE1987:
 9893              	.LBE2005:
 9894              	.LBE2023:
 9895              	.LBE2054:
 409:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9896              		.loc 20 409 27 view .LVU2743
 9897 03b6 3C4B     		ldr	r3, .L649+100
 9898              	.LBB2055:
 9899              	.LBB2053:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 316


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9900              		.loc 11 60 42 view .LVU2744
 9901 03b8 80ED008A 		vstr.32	s16, [r0]
 9902              	.LVL612:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9903              		.loc 11 60 42 view .LVU2745
 9904              	.LBE2053:
 9905              	.LBE2055:
 400:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9906              		.loc 20 400 9 is_stmt 1 view .LVU2746
 9907              	.LBB2056:
 9908              	.LBI2056:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9909              		.loc 11 60 17 view .LVU2747
 9910              	.LBB2057:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9911              		.loc 11 60 37 view .LVU2748
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9912              		.loc 11 60 42 is_stmt 0 view .LVU2749
 9913 03bc 3B48     		ldr	r0, .L649+104
 9914              	.LBE2057:
 9915              	.LBE2056:
 9916              	.LBB2059:
 9917              	.LBB2024:
 9918              	.LBB2006:
 9919              	.LBB1988:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9920              		.loc 19 174 71 view .LVU2750
 9921 03be 92ED00BA 		vldr.32	s22, [r2]
 9922              	.LBE1988:
 9923              	.LBE2006:
 9924              	.LBE2024:
 9925              	.LBE2059:
 9926              	.LBB2060:
 9927              	.LBB2058:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9928              		.loc 11 60 42 view .LVU2751
 9929 03c2 80ED008A 		vstr.32	s16, [r0]
 9930              	.LVL613:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9931              		.loc 11 60 42 view .LVU2752
 9932              	.LBE2058:
 9933              	.LBE2060:
 401:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9934              		.loc 20 401 9 is_stmt 1 view .LVU2753
 9935              	.LBB2061:
 9936              	.LBI2061:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9937              		.loc 11 60 17 view .LVU2754
 9938              	.LBB2062:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9939              		.loc 11 60 37 view .LVU2755
 9940              	.LBE2062:
 9941              	.LBE2061:
 9942              	.LBB2065:
 9943              	.LBB2066:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 317


 9944              		.loc 11 60 42 is_stmt 0 view .LVU2756
 9945 03c6 3A48     		ldr	r0, .L649+108
 9946              	.LBE2066:
 9947              	.LBE2065:
 9948              	.LBB2069:
 9949              	.LBB2025:
 9950              	.LBB2007:
 9951              	.LBB1989:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9952              		.loc 19 174 46 view .LVU2757
 9953 03c8 2BEE0A0A 		vmul.f32	s0, s22, s20
 9954              	.LVL614:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9955              		.loc 19 174 71 view .LVU2758
 9956 03cc 0492     		str	r2, [sp, #16]
 9957              		.loc 19 175 77 view .LVU2759
 9958 03ce 3AEECBCA 		vsub.f32	s24, s21, s22
 9959              	.LBE1989:
 9960              	.LBE2007:
 9961              	.LBE2025:
 9962              	.LBE2069:
 9963              	.LBB2070:
 9964              	.LBB2067:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9965              		.loc 11 60 42 view .LVU2760
 9966 03d2 80ED008A 		vstr.32	s16, [r0]
 9967              	.LBE2067:
 9968              	.LBE2070:
 9969              	.LBB2071:
 9970              	.LBB2072:
 9971 03d6 3748     		ldr	r0, .L649+112
 9972              	.LBE2072:
 9973              	.LBE2071:
 409:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9974              		.loc 20 409 27 view .LVU2761
 9975 03d8 1B68     		ldr	r3, [r3]	@ float
 9976              	.LBB2075:
 9977              	.LBB2073:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9978              		.loc 11 60 42 view .LVU2762
 9979 03da 80ED008A 		vstr.32	s16, [r0]
 9980              	.LBE2073:
 9981              	.LBE2075:
 9982              	.LBB2076:
 9983              	.LBB2063:
 9984 03de 3648     		ldr	r0, .L649+116
 9985              	.LBE2063:
 9986              	.LBE2076:
 9987              	.LBB2077:
 9988              	.LBB2026:
 9989              	.LBB2008:
 9990              	.LBB1990:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9991              		.loc 19 174 103 view .LVU2763
 9992 03e0 DFED369A 		vldr.32	s19, .L649+120
 9993              	.LBE1990:
 9994              	.LBE2008:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 318


 9995              	.LBE2026:
 9996              	.LBE2077:
 9997              	.LBB2078:
 9998              	.LBB2064:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9999              		.loc 11 60 42 view .LVU2764
 10000 03e4 C0ED007A 		vstr.32	s15, [r0]
 10001              	.LVL615:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10002              		.loc 11 60 42 view .LVU2765
 10003              	.LBE2064:
 10004              	.LBE2078:
 402:Veno-Echo.cpp **** 
 10005              		.loc 20 402 9 is_stmt 1 view .LVU2766
 10006              	.LBB2079:
 10007              	.LBI2079:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10008              		.loc 11 60 17 view .LVU2767
 10009              	.LBB2080:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10010              		.loc 11 60 37 view .LVU2768
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10011              		.loc 11 60 42 is_stmt 0 view .LVU2769
 10012 03e8 3548     		ldr	r0, .L649+124
 10013              	.LBE2080:
 10014              	.LBE2079:
 10015              	.LBB2082:
 10016              	.LBB2027:
 10017              	.LBB2009:
 10018              	.LBB1991:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10019              		.loc 19 174 98 view .LVU2770
 10020 03ea 9FED369A 		vldr.32	s18, .L649+128
 10021              	.LVL616:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10022              		.loc 19 174 98 view .LVU2771
 10023              	.LBE1991:
 10024              	.LBE2009:
 10025              	.LBE2027:
 10026              	.LBE2082:
 10027              	.LBB2083:
 10028              	.LBB2081:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10029              		.loc 11 60 42 view .LVU2772
 10030 03ee C0ED007A 		vstr.32	s15, [r0]
 10031              	.LVL617:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10032              		.loc 11 60 42 view .LVU2773
 10033              	.LBE2081:
 10034              	.LBE2083:
 404:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10035              		.loc 20 404 9 is_stmt 1 view .LVU2774
 10036              	.LBB2084:
 10037              	.LBI2065:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10038              		.loc 11 60 17 view .LVU2775
 10039              	.LBB2068:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 319


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10040              		.loc 11 60 37 view .LVU2776
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10041              		.loc 11 60 37 is_stmt 0 view .LVU2777
 10042              	.LBE2068:
 10043              	.LBE2084:
 405:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10044              		.loc 20 405 9 is_stmt 1 view .LVU2778
 10045              	.LBB2085:
 10046              	.LBI2071:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10047              		.loc 11 60 17 view .LVU2779
 10048              	.LBB2074:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10049              		.loc 11 60 37 view .LVU2780
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10050              		.loc 11 60 37 is_stmt 0 view .LVU2781
 10051              	.LBE2074:
 10052              	.LBE2085:
 406:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10053              		.loc 20 406 9 is_stmt 1 view .LVU2782
 10054              	.LBB2086:
 10055              	.LBI2086:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10056              		.loc 11 60 17 view .LVU2783
 10057              	.LBB2087:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10058              		.loc 11 60 37 view .LVU2784
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10059              		.loc 11 60 42 is_stmt 0 view .LVU2785
 10060 03f2 3548     		ldr	r0, .L649+132
 10061              	.LBE2087:
 10062              	.LBE2086:
 10063              	.LBB2089:
 10064              	.LBB2028:
 10065              	.LBB2010:
 10066              	.LBB1992:
 162:delayline_reverse.h **** 
 10067              		.loc 19 162 23 view .LVU2786
 10068 03f4 D5E90267 		ldrd	r6, r7, [r5, #8]
 10069              	.LBE1992:
 10070              	.LBE2010:
 10071              	.LBE2028:
 10072              	.LBE2089:
 10073              	.LBB2090:
 10074              	.LBB2088:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10075              		.loc 11 60 42 view .LVU2787
 10076 03f8 C0ED007A 		vstr.32	s15, [r0]
 10077              	.LVL618:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10078              		.loc 11 60 42 view .LVU2788
 10079              	.LBE2088:
 10080              	.LBE2090:
 407:Veno-Echo.cpp **** 
 10081              		.loc 20 407 9 is_stmt 1 view .LVU2789
 10082              	.LBB2091:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 320


 10083              	.LBI2091:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10084              		.loc 11 60 17 view .LVU2790
 10085              	.LBB2092:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10086              		.loc 11 60 37 view .LVU2791
 10087              	.LBE2092:
 10088              	.LBE2091:
 10089              	.LBB2095:
 10090              	.LBB2029:
 10091              	.LBB2011:
 10092              	.LBB1993:
 162:delayline_reverse.h **** 
 10093              		.loc 19 162 11 is_stmt 0 view .LVU2792
 10094 03fc 05EB8702 		add	r2, r5, r7, lsl #2
 10095              	.LBE1993:
 10096              	.LBE2011:
 10097              	.LBE2029:
 10098              	.LBE2095:
 10099              	.LBB2096:
 10100              	.LBB2093:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10101              		.loc 11 60 42 view .LVU2793
 10102 0400 3248     		ldr	r0, .L649+136
 10103              	.LBE2093:
 10104              	.LBE2096:
 10105              	.LBB2097:
 10106              	.LBB2030:
 10107              	.LBB2012:
 10108              	.LBB1994:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10109              		.loc 19 161 11 view .LVU2794
 10110 0402 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 10111              		.loc 19 162 11 view .LVU2795
 10112 0406 D2ED06DA 		vldr.32	s27, [r2, #24]
 10113              	.LBE1994:
 10114              	.LBE2012:
 10115              	.LBE2030:
 10116              	.LBE2097:
 10117              	.LBB2098:
 10118              	.LBB2099:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10119              		.loc 11 60 42 view .LVU2796
 10120 040a 314A     		ldr	r2, .L649+140
 10121              	.LBE2099:
 10122              	.LBE2098:
 10123              	.LBB2101:
 10124              	.LBB2094:
 10125 040c C0ED007A 		vstr.32	s15, [r0]
 10126              	.LVL619:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10127              		.loc 11 60 42 view .LVU2797
 10128              	.LBE2094:
 10129              	.LBE2101:
 409:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10130              		.loc 20 409 9 is_stmt 1 view .LVU2798
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 321


 10131              	.LBB2102:
 10132              	.LBI2098:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10133              		.loc 11 60 17 view .LVU2799
 10134              	.LBB2100:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10135              		.loc 11 60 37 view .LVU2800
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10136              		.loc 11 60 42 is_stmt 0 view .LVU2801
 10137 0410 1360     		str	r3, [r2]	@ float
 10138              	.LVL620:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10139              		.loc 11 60 42 view .LVU2802
 10140              	.LBE2100:
 10141              	.LBE2102:
 410:Veno-Echo.cpp **** 
 10142              		.loc 20 410 9 is_stmt 1 view .LVU2803
 10143              	.LBB2103:
 10144              	.LBI2103:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10145              		.loc 11 60 17 view .LVU2804
 10146              	.LBB2104:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10147              		.loc 11 60 37 view .LVU2805
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10148              		.loc 11 60 42 is_stmt 0 view .LVU2806
 10149 0412 304A     		ldr	r2, .L649+144
 10150              	.LBE2104:
 10151              	.LBE2103:
 10152              	.LBB2106:
 10153              	.LBB2031:
 10154              	.LBB2013:
 10155              	.LBB1995:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10156              		.loc 19 161 11 view .LVU2807
 10157 0414 91ED06EA 		vldr.32	s28, [r1, #24]
 10158              	.LBE1995:
 10159              	.LBE2013:
 10160              	.LBE2031:
 10161              	.LBE2106:
 10162              	.LBB2107:
 10163              	.LBB2105:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10164              		.loc 11 60 42 view .LVU2808
 10165 0418 1360     		str	r3, [r2]	@ float
 10166              	.LVL621:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10167              		.loc 11 60 42 view .LVU2809
 10168              	.LBE2105:
 10169              	.LBE2107:
 412:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10170              		.loc 20 412 9 is_stmt 1 view .LVU2810
 10171              	.LBB2108:
 10172              	.LBI2108:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10173              		.loc 11 60 17 view .LVU2811
 10174              	.LBB2109:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 322


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10175              		.loc 11 60 37 view .LVU2812
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10176              		.loc 11 60 42 is_stmt 0 view .LVU2813
 10177 041a 2F4A     		ldr	r2, .L649+148
 10178 041c 1360     		str	r3, [r2]	@ float
 10179              	.LVL622:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10180              		.loc 11 60 42 view .LVU2814
 10181              	.LBE2109:
 10182              	.LBE2108:
 413:Veno-Echo.cpp **** 
 10183              		.loc 20 413 9 is_stmt 1 view .LVU2815
 10184              	.LBB2110:
 10185              	.LBI2110:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10186              		.loc 11 60 17 view .LVU2816
 10187              	.LBB2111:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10188              		.loc 11 60 37 view .LVU2817
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10189              		.loc 11 60 42 is_stmt 0 view .LVU2818
 10190 041e 2F4A     		ldr	r2, .L649+152
 10191 0420 1360     		str	r3, [r2]	@ float
 10192              	.LVL623:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10193              		.loc 11 60 42 view .LVU2819
 10194              	.LBE2111:
 10195              	.LBE2110:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10196              		.loc 20 416 9 is_stmt 1 view .LVU2820
 10197              	.LBB2112:
 10198              	.LBI1980:
  79:Veno-Echo.cpp ****     {
 10199              		.loc 20 79 11 view .LVU2821
 10200              	.LBB2032:
  82:Veno-Echo.cpp ****         return read;
 10201              		.loc 20 82 9 view .LVU2822
 10202              	.LBB2014:
 10203              	.LBI1982:
 159:delayline_reverse.h ****     {
 10204              		.loc 19 159 20 view .LVU2823
 10205              	.LBB1996:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10206              		.loc 19 174 46 is_stmt 0 view .LVU2824
 10207 0422 FFF7FEFF 		bl	sinf
 10208              	.LVL624:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10209              		.loc 19 174 46 view .LVU2825
 10210 0426 F0EE40BA 		vmov.f32	s23, s0
 10211              	.LVL625:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10212              		.loc 19 174 103 view .LVU2826
 10213 042a 2BEE290A 		vmul.f32	s0, s22, s19
 10214 042e FFF7FEFF 		bl	sinf
 10215              	.LVL626:
 10216 0432 B0EE408A 		vmov.f32	s16, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 323


 10217              	.LVL627:
 10218              		.loc 19 175 46 view .LVU2827
 10219 0436 2CEE0A0A 		vmul.f32	s0, s24, s20
 10220 043a FFF7FEFF 		bl	sinf
 10221              	.LVL628:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10222              		.loc 19 174 98 view .LVU2828
 10223 043e 28EE098A 		vmul.f32	s16, s16, s18
 10224 0442 4FE0     		b	.L650
 10225              	.L651:
 10226              		.align	2
 10227              	.L649:
 10228 0444 00000000 		.word	.LANCHOR83
 10229 0448 00000000 		.word	.LANCHOR32
 10230 044c 00000000 		.word	.LANCHOR128
 10231 0450 00000000 		.word	.LANCHOR44
 10232 0454 CDCCCC3E 		.word	1053609165
 10233 0458 00000000 		.word	.LANCHOR129
 10234 045c 00000000 		.word	.LANCHOR72
 10235 0460 00000000 		.word	.LANCHOR0
 10236 0464 00000000 		.word	.LANCHOR1
 10237 0468 00000000 		.word	.LANCHOR65
 10238 046c 00000000 		.word	.LANCHOR56
 10239 0470 00000000 		.word	.LANCHOR113
 10240 0474 DB0FC93F 		.word	1070141403
 10241 0478 00000000 		.word	.LANCHOR93
 10242 047c 00000000 		.word	.LANCHOR102
 10243 0480 00000000 		.word	.LANCHOR94
 10244 0484 00000000 		.word	.LANCHOR103
 10245 0488 00000000 		.word	.LANCHOR96
 10246 048c 00000000 		.word	.LANCHOR105
 10247 0490 00000000 		.word	.LANCHOR95
 10248 0494 00000000 		.word	.LANCHOR104
 10249 0498 00000000 		.word	.LANCHOR106
 10250 049c 00000000 		.word	.LANCHOR2
 10251 04a0 00000000 		.word	.LANCHOR107
 10252 04a4 00000000 		.word	.LANCHOR116
 10253 04a8 00000000 		.word	.LANCHOR80
 10254 04ac 00000000 		.word	.LANCHOR117
 10255 04b0 00000000 		.word	.LANCHOR120
 10256 04b4 00000000 		.word	.LANCHOR121
 10257 04b8 00000000 		.word	.LANCHOR118
 10258 04bc E4CB9640 		.word	1083624420
 10259 04c0 00000000 		.word	.LANCHOR119
 10260 04c4 0000803D 		.word	1031798784
 10261 04c8 00000000 		.word	.LANCHOR122
 10262 04cc 00000000 		.word	.LANCHOR123
 10263 04d0 00000000 		.word	.LANCHOR124
 10264 04d4 00000000 		.word	.LANCHOR125
 10265 04d8 00000000 		.word	.LANCHOR126
 10266 04dc 00000000 		.word	.LANCHOR127
 10267 04e0 209F2400 		.word	2400032
 10268              	.L650:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10269              		.loc 19 174 82 view .LVU2829
 10270 04e4 ABEEA88A 		vfma.f32	s16, s23, s17
 10271              	.LVL629:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 324


 10272              		.loc 19 175 46 view .LVU2830
 10273 04e8 F0EE40BA 		vmov.f32	s23, s0
 10274              		.loc 19 175 112 view .LVU2831
 10275 04ec 2CEE290A 		vmul.f32	s0, s24, s19
 10276 04f0 FFF7FEFF 		bl	sinf
 10277              	.LVL630:
 10278              		.loc 19 175 107 view .LVU2832
 10279 04f4 60EE097A 		vmul.f32	s15, s0, s18
 10280              	.LBE1996:
 10281              	.LBE2014:
 10282              	.LBE2032:
 10283              	.LBE2112:
 417:Veno-Echo.cpp **** 
 10284              		.loc 20 417 49 view .LVU2833
 10285 04f8 C94B     		ldr	r3, .L652
 10286              	.LBB2113:
 10287              	.LBB2033:
 10288              	.LBB2015:
 10289              	.LBB1997:
 10290              		.loc 19 175 91 view .LVU2834
 10291 04fa EBEEA87A 		vfma.f32	s15, s23, s17
 10292              	.LVL631:
 10293              		.loc 19 175 91 view .LVU2835
 10294              	.LBE1997:
 10295              	.LBE2015:
 10296              	.LBE2033:
 10297              	.LBE2113:
 417:Veno-Echo.cpp **** 
 10298              		.loc 20 417 49 view .LVU2836
 10299 04fe 1C68     		ldr	r4, [r3]
 10300              	.LBB2114:
 10301              	.LBB2034:
 10302              	.LBB2016:
 10303              	.LBB1998:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10304              		.loc 19 174 9 view .LVU2837
 10305 0500 38EE088A 		vadd.f32	s16, s16, s16
 10306              	.LVL632:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10307              		.loc 19 174 9 view .LVU2838
 10308              	.LBE1998:
 10309              	.LBE2016:
 10310              	.LBE2034:
 10311              	.LBE2114:
 10312              	.LBB2115:
 10313              	.LBB2116:
 10314              	.LBB2117:
 10315              	.LBB2118:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10316              		.loc 19 174 71 view .LVU2839
 10317 0504 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 10318              		.loc 19 162 11 view .LVU2840
 10319 0508 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10320              		.loc 19 174 71 view .LVU2841
 10321 050c 91ED00CA 		vldr.32	s24, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 325


 10322              	.LBE2118:
 10323              	.LBE2117:
 10324              	.LBE2116:
 10325              	.LBE2115:
 10326              	.LBB2149:
 10327              	.LBB2035:
 10328              	.LBB2017:
 10329              	.LBB1999:
 10330              		.loc 19 175 9 view .LVU2842
 10331 0510 77EEA77A 		vadd.f32	s15, s15, s15
 10332              	.LVL633:
 10333              		.loc 19 175 9 view .LVU2843
 10334              	.LBE1999:
 10335              	.LBE2017:
 10336              	.LBE2035:
 10337              	.LBE2149:
 10338              	.LBB2150:
 10339              	.LBB2139:
 10340              	.LBB2129:
 10341              	.LBB2119:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10342              		.loc 19 161 11 view .LVU2844
 10343 0514 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10344              		.loc 19 162 11 view .LVU2845
 10345 0518 04EB8303 		add	r3, r4, r3, lsl #2
 10346              		.loc 19 175 77 view .LVU2846
 10347 051c 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10348              		.loc 19 174 46 view .LVU2847
 10349 0520 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10350              		.loc 19 161 11 view .LVU2848
 10351 0524 92ED06DA 		vldr.32	s26, [r2, #24]
 10352              	.LBE2119:
 10353              	.LBE2129:
 10354              	.LBE2139:
 10355              	.LBE2150:
 10356              	.LBB2151:
 10357              	.LBB2036:
 10358              	.LBB2018:
 10359              	.LBB2000:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10360              		.loc 19 177 44 view .LVU2849
 10361 0528 67EE8E7A 		vmul.f32	s15, s15, s28
 10362              	.LVL634:
 10363              		.loc 19 177 44 view .LVU2850
 10364              	.LBE2000:
 10365              	.LBE2018:
 10366              	.LBE2036:
 10367              	.LBE2151:
 10368              	.LBB2152:
 10369              	.LBB2140:
 10370              	.LBB2130:
 10371              	.LBB2120:
 162:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 326


 10372              		.loc 19 162 11 view .LVU2851
 10373 052c D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10374              		.loc 19 174 71 view .LVU2852
 10375 0530 0391     		str	r1, [sp, #12]
 10376              	.LBE2120:
 10377              	.LBE2130:
 10378              	.LBE2140:
 10379              	.LBE2152:
 10380              	.LBB2153:
 10381              	.LBB2037:
 10382              	.LBB2019:
 10383              	.LBB2001:
 10384              		.loc 19 177 54 view .LVU2853
 10385 0532 EDEE887A 		vfma.f32	s15, s27, s16
 10386              	.LVL635:
 10387              		.loc 19 177 54 view .LVU2854
 10388              	.LBE2001:
 10389              	.LBE2019:
  83:Veno-Echo.cpp ****     }
 10390              		.loc 20 83 9 is_stmt 1 view .LVU2855
  83:Veno-Echo.cpp ****     }
 10391              		.loc 20 83 9 is_stmt 0 view .LVU2856
 10392              	.LBE2037:
 10393              	.LBE2153:
 416:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10394              		.loc 20 416 50 view .LVU2857
 10395 0536 CDED067A 		vstr.32	s15, [sp, #24]
 417:Veno-Echo.cpp **** 
 10396              		.loc 20 417 9 is_stmt 1 view .LVU2858
 10397              	.LVL636:
 10398              	.LBB2154:
 10399              	.LBI2115:
  79:Veno-Echo.cpp ****     {
 10400              		.loc 20 79 11 view .LVU2859
 10401              	.LBB2141:
  82:Veno-Echo.cpp ****         return read;
 10402              		.loc 20 82 9 view .LVU2860
 10403              	.LBB2131:
 10404              	.LBI2117:
 159:delayline_reverse.h ****     {
 10405              		.loc 19 159 20 view .LVU2861
 10406              	.LBB2121:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10407              		.loc 19 174 46 is_stmt 0 view .LVU2862
 10408 053a FFF7FEFF 		bl	sinf
 10409              	.LVL637:
 10410 053e F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10411              		.loc 19 174 103 view .LVU2863
 10412 0542 2CEE290A 		vmul.f32	s0, s24, s19
 10413 0546 FFF7FEFF 		bl	sinf
 10414              	.LVL638:
 10415 054a B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10416              		.loc 19 175 46 view .LVU2864
 10417 054e 2AEE8A0A 		vmul.f32	s0, s21, s20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 327


 10418 0552 FFF7FEFF 		bl	sinf
 10419              	.LVL639:
 10420 0556 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10421              		.loc 19 175 112 view .LVU2865
 10422 055a 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10423              		.loc 19 174 98 view .LVU2866
 10424 055e 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10425              		.loc 19 175 46 view .LVU2867
 10426 0562 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 10427              		.loc 19 175 112 view .LVU2868
 10428 0566 FFF7FEFF 		bl	sinf
 10429              	.LVL640:
 10430              	.LBE2121:
 10431              	.LBE2131:
 10432              	.LBE2141:
 10433              	.LBE2154:
 10434              	.LBB2155:
 10435              	.LBB2156:
 10436              	.LBB2157:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10437              		.loc 19 98 38 view .LVU2869
 10438 056a AE48     		ldr	r0, .L652+4
 10439              	.LBE2157:
 10440              	.LBE2156:
 10441              	.LBE2155:
 10442              	.LBB2180:
 10443              	.LBB2142:
 10444              	.LBB2132:
 10445              	.LBB2122:
 175:delayline_reverse.h **** 
 10446              		.loc 19 175 107 view .LVU2870
 10447 056c 60EE097A 		vmul.f32	s15, s0, s18
 10448              	.LBE2122:
 10449              	.LBE2132:
 10450              	.LBE2142:
 10451              	.LBE2180:
 10452              	.LBB2181:
 10453              	.LBB2169:
 10454              	.LBB2158:
  92:delayline_reverse.h ****         
 10455              		.loc 19 92 57 view .LVU2871
 10456 0570 AD4B     		ldr	r3, .L652+8
 10457              	.LBE2158:
 10458              	.LBE2169:
 10459              	.LBE2181:
 10460              	.LBB2182:
 10461              	.LBB2143:
 10462              	.LBB2133:
 10463              	.LBB2123:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10464              		.loc 19 174 82 view .LVU2872
 10465 0572 ABEEA88A 		vfma.f32	s16, s23, s17
 10466              	.LVL641:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 328


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10467              		.loc 19 174 82 view .LVU2873
 10468              	.LBE2123:
 10469              	.LBE2133:
 10470              	.LBE2143:
 10471              	.LBE2182:
 10472              	.LBB2183:
 10473              	.LBB2170:
 10474              	.LBB2159:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10475              		.loc 19 98 38 view .LVU2874
 10476 0576 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10477              		.loc 19 90 15 view .LVU2875
 10478 0578 D5F804E0 		ldr	lr, [r5, #4]
 10479              	.LBE2159:
 10480              	.LBE2170:
 10481              	.LBE2183:
 10482              	.LBB2184:
 10483              	.LBB2144:
 10484              	.LBB2134:
 10485              	.LBB2124:
 175:delayline_reverse.h **** 
 10486              		.loc 19 175 91 view .LVU2876
 10487 057c E9EEA87A 		vfma.f32	s15, s19, s17
 10488              	.LVL642:
 175:delayline_reverse.h **** 
 10489              		.loc 19 175 91 view .LVU2877
 10490              	.LBE2124:
 10491              	.LBE2134:
 10492              	.LBE2144:
 10493              	.LBE2184:
 10494              	.LBB2185:
 10495              	.LBB2171:
 10496              	.LBB2160:
  99:delayline_reverse.h ****  
 10497              		.loc 19 99 38 view .LVU2878
 10498 0580 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10499              		.loc 19 98 50 view .LVU2879
 10500 0582 A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 10501              		.loc 19 92 57 view .LVU2880
 10502 0586 DFF8C4C2 		ldr	ip, .L652+44
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10503              		.loc 19 90 9 view .LVU2881
 10504 058a 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10505              		.loc 19 98 50 view .LVU2882
 10506 058e 890C     		lsrs	r1, r1, #18
 10507              	.LBE2160:
 10508              	.LBE2171:
 10509              	.LBE2185:
 10510              	.LBB2186:
 10511              	.LBB2145:
 10512              	.LBB2135:
 10513              	.LBB2125:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 329


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10514              		.loc 19 174 9 view .LVU2883
 10515 0590 38EE088A 		vadd.f32	s16, s16, s16
 10516              	.LVL643:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10517              		.loc 19 174 9 view .LVU2884
 10518              	.LBE2125:
 10519              	.LBE2135:
 10520              	.LBE2145:
 10521              	.LBE2186:
 10522              	.LBB2187:
 10523              	.LBB2172:
 10524              	.LBB2161:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10525              		.loc 19 98 50 view .LVU2885
 10526 0594 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 10527              		.loc 19 92 45 view .LVU2886
 10528 0598 A44E     		ldr	r6, .L652+12
 10529              	.LBE2161:
 10530              	.LBE2172:
 10531              	.LBE2187:
 10532              	.LBB2188:
 10533              	.LBB2146:
 10534              	.LBB2136:
 10535              	.LBB2126:
 175:delayline_reverse.h **** 
 10536              		.loc 19 175 9 view .LVU2887
 10537 059a 37EEA70A 		vadd.f32	s0, s15, s15
 10538              	.LVL644:
 175:delayline_reverse.h **** 
 10539              		.loc 19 175 9 view .LVU2888
 10540              	.LBE2126:
 10541              	.LBE2136:
 10542              	.LBE2146:
 10543              	.LBE2188:
 420:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10544              		.loc 20 420 26 view .LVU2889
 10545 059e DBED007A 		vldr.32	s15, [fp]
 10546              	.LBB2189:
 10547              	.LBB2173:
 10548              	.LBB2162:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10549              		.loc 19 98 50 view .LVU2890
 10550 05a2 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10551              		.loc 19 92 45 view .LVU2891
 10552 05a4 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 10553              		.loc 19 99 50 view .LVU2892
 10554 05a6 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 10555              		.loc 19 92 57 view .LVU2893
 10556 05aa A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10557              		.loc 19 98 9 view .LVU2894
 10558 05ae 0199     		ldr	r1, [sp, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 330


  99:delayline_reverse.h ****  
 10559              		.loc 19 99 50 view .LVU2895
 10560 05b0 4FEA9E4E 		lsr	lr, lr, #18
 10561              	.LBE2162:
 10562              	.LBE2173:
 10563              	.LBE2189:
 10564              	.LBB2190:
 10565              	.LBB2147:
 10566              	.LBB2137:
 10567              	.LBB2127:
 10568              		.loc 19 177 44 view .LVU2896
 10569 05b4 20EE0D0A 		vmul.f32	s0, s0, s26
 10570              	.LVL645:
 10571              		.loc 19 177 44 view .LVU2897
 10572              	.LBE2127:
 10573              	.LBE2137:
 10574              	.LBE2147:
 10575              	.LBE2190:
 10576              	.LBB2191:
 10577              	.LBB2174:
 10578              	.LBB2163:
  92:delayline_reverse.h ****         
 10579              		.loc 19 92 57 view .LVU2898
 10580 05b8 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 10581              		.loc 19 99 50 view .LVU2899
 10582 05ba 0CFB1E00 		mls	r0, ip, lr, r0
 10583              	.LBE2163:
 10584              	.LBE2174:
 10585              	.LBE2191:
 10586              	.LBB2192:
 10587              	.LBB2148:
 10588              	.LBB2138:
 10589              	.LBB2128:
 10590              		.loc 19 177 54 view .LVU2900
 10591 05be ACEE880A 		vfma.f32	s0, s25, s16
 10592              	.LVL646:
 10593              		.loc 19 177 54 view .LVU2901
 10594              	.LBE2128:
 10595              	.LBE2138:
  83:Veno-Echo.cpp ****     }
 10596              		.loc 20 83 9 is_stmt 1 view .LVU2902
  83:Veno-Echo.cpp ****     }
 10597              		.loc 20 83 9 is_stmt 0 view .LVU2903
 10598              	.LBE2148:
 10599              	.LBE2192:
 10600              	.LBB2193:
 10601              	.LBB2175:
 10602              	.LBB2164:
  92:delayline_reverse.h ****         
 10603              		.loc 19 92 57 view .LVU2904
 10604 05c2 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 10605              		.loc 19 95 43 view .LVU2905
 10606 05c6 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10607              		.loc 19 90 9 view .LVU2906
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 331


 10608 05ca CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 10609              		.loc 19 95 43 view .LVU2907
 10610 05ce 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 10611              		.loc 19 101 36 view .LVU2908
 10612 05d0 DFF864A2 		ldr	r10, .L652+24
  95:delayline_reverse.h **** 
 10613              		.loc 19 95 43 view .LVU2909
 10614 05d4 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 10615              		.loc 19 101 36 view .LVU2910
 10616 05d6 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 10617              		.loc 19 101 45 view .LVU2911
 10618 05da 07F1FF3A 		add	r10, r7, #-1
 10619              	.LBE2164:
 10620              	.LBE2175:
 10621              	.LBE2193:
 417:Veno-Echo.cpp **** 
 10622              		.loc 20 417 50 view .LVU2912
 10623 05de 8DED070A 		vstr.32	s0, [sp, #28]
 420:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10624              		.loc 20 420 9 is_stmt 1 view .LVU2913
 10625              	.LVL647:
 10626              	.LBB2194:
 10627              	.LBI2155:
  92:Veno-Echo.cpp ****     {
 10628              		.loc 20 92 10 view .LVU2914
  92:Veno-Echo.cpp ****     {
 10629              		.loc 20 92 10 is_stmt 0 view .LVU2915
 10630              	.LBE2194:
 10631              	.LBE2244:
 10632              	.LBE1858:
  94:Veno-Echo.cpp ****     }
 10633              		.loc 20 94 9 is_stmt 1 view .LVU2916
 10634              	.LBB2256:
 10635              	.LBB2245:
 10636              	.LBB2195:
 10637              	.LBB2176:
 10638              	.LBI2156:
  88:delayline_reverse.h ****     {
 10639              		.loc 19 88 17 view .LVU2917
 10640              	.LBB2165:
  99:delayline_reverse.h ****  
 10641              		.loc 19 99 9 is_stmt 0 view .LVU2918
 10642 05e2 C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 10643              		.loc 19 95 54 view .LVU2919
 10644 05e6 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 10645              		.loc 19 101 45 view .LVU2920
 10646 05ea AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 10647              		.loc 19 95 54 view .LVU2921
 10648 05ee 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 332


 10649              		.loc 19 92 9 view .LVU2922
 10650 05f2 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 10651              		.loc 19 101 9 view .LVU2923
 10652 05f4 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 10653              		.loc 19 95 9 view .LVU2924
 10654 05f6 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 10655              		.loc 19 101 9 view .LVU2925
 10656 05f8 40F2DA80 		bls	.L525
 103:delayline_reverse.h ****             {
 10657              		.loc 19 103 17 view .LVU2926
 10658 05fc 8C49     		ldr	r1, .L652+16
 103:delayline_reverse.h ****             {
 10659              		.loc 19 103 13 view .LVU2927
 10660 05fe 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10661              		.loc 19 103 17 view .LVU2928
 10662 0600 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 10663              		.loc 19 103 13 view .LVU2929
 10664 0602 0028     		cmp	r0, #0
 10665 0604 40F0DA80 		bne	.L640
 107:delayline_reverse.h ****                 {
 10666              		.loc 19 107 21 view .LVU2930
 10667 0608 8A48     		ldr	r0, .L652+20
 105:delayline_reverse.h ****                 
 10668              		.loc 19 105 17 view .LVU2931
 10669 060a 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10670              		.loc 19 110 45 view .LVU2932
 10671 060c 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 10672              		.loc 19 107 17 view .LVU2933
 10673 060e 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10674              		.loc 19 107 21 view .LVU2934
 10675 0610 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 10676              		.loc 19 105 17 view .LVU2935
 10677 0612 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 10678              		.loc 19 107 17 view .LVU2936
 10679 0614 002E     		cmp	r6, #0
 10680 0616 40F07782 		bne	.L527
 110:delayline_reverse.h ****                 }
 10681              		.loc 19 110 21 view .LVU2937
 10682 061a EB60     		str	r3, [r5, #12]
 10683              	.L528:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10684              		.loc 19 130 45 view .LVU2938
 10685 061c 07EE90EA 		vmov	s15, lr	@ int
 10686              	.LVL648:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10687              		.loc 19 130 45 view .LVU2939
 10688 0620 B7EE007A 		vmov.f32	s14, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 333


 10689 0624 F8EE676A 		vcvt.f32.u32	s13, s15
 10690 0628 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10691              		.loc 19 130 37 view .LVU2940
 10692 062c 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10693              		.loc 19 131 17 view .LVU2941
 10694 0630 B4EEC7BA 		vcmpe.f32	s22, s14
 10695 0634 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10696 0638 40F3D780 		ble	.L641
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10697              		.loc 19 133 21 view .LVU2942
 10698 063c 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10699              		.loc 19 134 21 view .LVU2943
 10700 063e 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10701              		.loc 19 133 21 view .LVU2944
 10702 0640 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 10703              		.loc 19 135 21 view .LVU2945
 10704 0644 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10705              		.loc 19 134 21 view .LVU2946
 10706 0646 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 10707              		.loc 19 135 21 view .LVU2947
 10708 0648 0370     		strb	r3, [r0]
 10709              	.LVL649:
 10710              	.L531:
 135:delayline_reverse.h ****                 }
 10711              		.loc 19 135 21 view .LVU2948
 10712              	.LBE2165:
 10713              	.LBE2176:
 10714              	.LBE2195:
 421:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10715              		.loc 20 421 9 is_stmt 1 view .LVU2949
 10716              	.LBB2196:
 10717              	.LBB2197:
 10718              	.LBB2198:
  95:delayline_reverse.h **** 
 10719              		.loc 19 95 45 is_stmt 0 view .LVU2950
 10720 064a 2169     		ldr	r1, [r4, #16]
 10721 064c 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10722              		.loc 19 95 43 view .LVU2951
 10723 0650 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10724              		.loc 19 90 15 view .LVU2952
 10725 0652 6568     		ldr	r5, [r4, #4]
 10726 0654 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10727              		.loc 19 95 43 view .LVU2953
 10728 0658 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10729              		.loc 19 92 45 view .LVU2954
 10730 065a 744F     		ldr	r7, .L652+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 334


  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10731              		.loc 19 90 9 view .LVU2955
 10732 065c 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10733              		.loc 19 98 38 view .LVU2956
 10734 0660 704B     		ldr	r3, .L652+4
  95:delayline_reverse.h **** 
 10735              		.loc 19 95 43 view .LVU2957
 10736 0662 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10737              		.loc 19 92 45 view .LVU2958
 10738 0664 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 10739              		.loc 19 101 45 view .LVU2959
 10740 0666 01F1FF3C 		add	ip, r1, #-1
 10741              	.LBE2198:
 10742              	.LBE2197:
 10743              	.LBE2196:
 421:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10744              		.loc 20 421 26 view .LVU2960
 10745 066a DBED017A 		vldr.32	s15, [fp, #4]
 10746              	.LVL650:
 10747              	.LBB2209:
 10748              	.LBI2196:
  92:Veno-Echo.cpp ****     {
 10749              		.loc 20 92 10 is_stmt 1 view .LVU2961
  92:Veno-Echo.cpp ****     {
 10750              		.loc 20 92 10 is_stmt 0 view .LVU2962
 10751              	.LBE2209:
 10752              	.LBE2245:
 10753              	.LBE2256:
  94:Veno-Echo.cpp ****     }
 10754              		.loc 20 94 9 is_stmt 1 view .LVU2963
 10755              	.LBB2257:
 10756              	.LBB2246:
 10757              	.LBB2210:
 10758              	.LBB2204:
 10759              	.LBI2197:
  88:delayline_reverse.h ****     {
 10760              		.loc 19 88 17 view .LVU2964
 10761              	.LBB2199:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10762              		.loc 19 98 38 is_stmt 0 view .LVU2965
 10763 066e D4E90205 		ldrd	r0, r5, [r4, #8]
 10764 0672 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10765              		.loc 19 99 38 view .LVU2966
 10766 0676 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10767              		.loc 19 92 57 view .LVU2967
 10768 0678 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10769              		.loc 19 95 54 view .LVU2968
 10770 067c B2FBF1F0 		udiv	r0, r2, r1
 10771 0680 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 10772              		.loc 19 101 36 view .LVU2969
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 335


 10773 0684 6C49     		ldr	r1, .L652+24
  92:delayline_reverse.h ****         
 10774              		.loc 19 92 57 view .LVU2970
 10775 0686 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 10776              		.loc 19 101 36 view .LVU2971
 10777 068a 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10778              		.loc 19 92 57 view .LVU2972
 10779 068c A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10780              		.loc 19 90 9 view .LVU2973
 10781 0690 CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 10782              		.loc 19 101 36 view .LVU2974
 10783 0694 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10784              		.loc 19 92 57 view .LVU2975
 10785 0696 A3FB0762 		umull	r6, r2, r3, r7
 10786 069a DFF8B0E1 		ldr	lr, .L652+44
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10787              		.loc 19 98 50 view .LVU2976
 10788 069e A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10789              		.loc 19 99 50 view .LVU2977
 10790 06a2 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10791              		.loc 19 101 45 view .LVU2978
 10792 06a6 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10793              		.loc 19 92 57 view .LVU2979
 10794 06a8 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10795              		.loc 19 95 9 view .LVU2980
 10796 06aa 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10797              		.loc 19 98 50 view .LVU2981
 10798 06ac 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 10799              		.loc 19 101 45 view .LVU2982
 10800 06ae ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10801              		.loc 19 99 50 view .LVU2983
 10802 06b2 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10803              		.loc 19 92 57 view .LVU2984
 10804 06b4 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10805              		.loc 19 98 50 view .LVU2985
 10806 06b8 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10807              		.loc 19 101 9 view .LVU2986
 10808 06bc 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10809              		.loc 19 99 50 view .LVU2987
 10810 06be 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 336


 10811              		.loc 19 98 9 view .LVU2988
 10812 06c2 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10813              		.loc 19 99 9 view .LVU2989
 10814 06c6 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10815              		.loc 19 101 9 view .LVU2990
 10816 06c8 51D9     		bls	.L535
 103:delayline_reverse.h ****             {
 10817              		.loc 19 103 17 view .LVU2991
 10818 06ca 5949     		ldr	r1, .L652+16
 103:delayline_reverse.h ****             {
 10819              		.loc 19 103 13 view .LVU2992
 10820 06cc 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10821              		.loc 19 103 17 view .LVU2993
 10822 06ce 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10823              		.loc 19 103 13 view .LVU2994
 10824 06d0 0028     		cmp	r0, #0
 10825 06d2 51D1     		bne	.L642
 107:delayline_reverse.h ****                 {
 10826              		.loc 19 107 21 view .LVU2995
 10827 06d4 5748     		ldr	r0, .L652+20
 105:delayline_reverse.h ****                 
 10828              		.loc 19 105 17 view .LVU2996
 10829 06d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10830              		.loc 19 110 45 view .LVU2997
 10831 06d8 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10832              		.loc 19 107 17 view .LVU2998
 10833 06da 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10834              		.loc 19 107 21 view .LVU2999
 10835 06dc 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10836              		.loc 19 105 17 view .LVU3000
 10837 06de 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 10838              		.loc 19 107 17 view .LVU3001
 10839 06e0 002D     		cmp	r5, #0
 10840 06e2 40F01382 		bne	.L537
 110:delayline_reverse.h ****                 }
 10841              		.loc 19 110 21 view .LVU3002
 10842 06e6 E260     		str	r2, [r4, #12]
 10843              	.L538:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10844              		.loc 19 130 45 view .LVU3003
 10845 06e8 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10846              	.LVL651:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10847              		.loc 19 130 45 view .LVU3004
 10848 06ec B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10849              		.loc 19 130 37 view .LVU3005
 10850 06f0 039A     		ldr	r2, [sp, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 337


 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10851              		.loc 19 130 45 view .LVU3006
 10852 06f2 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10853              		.loc 19 130 37 view .LVU3007
 10854 06f6 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10855              		.loc 19 130 45 view .LVU3008
 10856 06fa C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10857              		.loc 19 130 37 view .LVU3009
 10858 06fe 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10859              		.loc 19 131 17 view .LVU3010
 10860 0702 F4EEC77A 		vcmpe.f32	s15, s14
 10861 0706 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10862 070a 40F31282 		ble	.L645
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10863              		.loc 19 133 21 view .LVU3011
 10864 070e 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10865              		.loc 19 134 21 view .LVU3012
 10866 0710 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10867              		.loc 19 133 21 view .LVU3013
 10868 0712 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10869              		.loc 19 135 21 view .LVU3014
 10870 0716 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10871              		.loc 19 134 21 view .LVU3015
 10872 0718 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10873              		.loc 19 135 21 view .LVU3016
 10874 071a 0270     		strb	r2, [r0]
 10875              	.LVL652:
 10876              	.L541:
 135:delayline_reverse.h ****                 }
 10877              		.loc 19 135 21 view .LVU3017
 10878              	.LBE2199:
 10879              	.LBE2204:
 10880              	.LBE2210:
 426:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10881              		.loc 20 426 9 is_stmt 1 view .LVU3018
 426:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10882              		.loc 20 426 56 is_stmt 0 view .LVU3019
 10883 071c 06AA     		add	r2, sp, #24
 10884 071e 5946     		mov	r1, fp
 10885 0720 4648     		ldr	r0, .L652+28
 10886 0722 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10887              	.LVL653:
 427:Veno-Echo.cpp **** 
 10888              		.loc 20 427 56 view .LVU3020
 10889 0726 18EE101A 		vmov	r1, s16	@ int
 10890 072a 07AA     		add	r2, sp, #28
 10891 072c 4448     		ldr	r0, .L652+32
 426:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 338


 10892              		.loc 20 426 56 view .LVU3021
 10893 072e F0EE408A 		vmov.f32	s17, s0
 10894              	.LVL654:
 427:Veno-Echo.cpp **** 
 10895              		.loc 20 427 9 is_stmt 1 view .LVU3022
 427:Veno-Echo.cpp **** 
 10896              		.loc 20 427 56 is_stmt 0 view .LVU3023
 10897 0732 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10898              	.LVL655:
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10899              		.loc 20 430 46 view .LVU3024
 10900 0736 4348     		ldr	r0, .L652+36
 427:Veno-Echo.cpp **** 
 10901              		.loc 20 427 56 view .LVU3025
 10902 0738 B0EE408A 		vmov.f32	s16, s0
 10903              	.LVL656:
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10904              		.loc 20 430 9 is_stmt 1 view .LVU3026
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10905              		.loc 20 430 46 is_stmt 0 view .LVU3027
 10906 073c FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10907              	.LVL657:
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10908              		.loc 20 430 46 view .LVU3028
 10909 0740 0346     		mov	r3, r0
 431:Veno-Echo.cpp **** 
 10910              		.loc 20 431 46 view .LVU3029
 10911 0742 4148     		ldr	r0, .L652+40
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10912              		.loc 20 430 45 view .LVU3030
 10913 0744 1B68     		ldr	r3, [r3]	@ float
 430:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10914              		.loc 20 430 47 view .LVU3031
 10915 0746 0893     		str	r3, [sp, #32]	@ float
 431:Veno-Echo.cpp **** 
 10916              		.loc 20 431 9 is_stmt 1 view .LVU3032
 431:Veno-Echo.cpp **** 
 10917              		.loc 20 431 46 is_stmt 0 view .LVU3033
 10918 0748 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10919              	.LVL658:
 431:Veno-Echo.cpp **** 
 10920              		.loc 20 431 45 view .LVU3034
 10921 074c 0368     		ldr	r3, [r0]	@ float
 431:Veno-Echo.cpp **** 
 10922              		.loc 20 431 47 view .LVU3035
 10923 074e 0993     		str	r3, [sp, #36]	@ float
 434:Veno-Echo.cpp **** 
 10924              		.loc 20 434 9 is_stmt 1 view .LVU3036
 434:Veno-Echo.cpp **** 
 10925              		.loc 20 434 28 is_stmt 0 view .LVU3037
 10926 0750 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10927              	.LVL659:
 437:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10928              		.loc 20 437 9 is_stmt 1 view .LVU3038
 10929              	.LBB2211:
 10930              	.LBB1862:
2002:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 339


 10931              		.loc 20 2002 5 is_stmt 0 view .LVU3039
 10932 0754 B0EE007A 		vmov.f32	s14, #2.0e+0
 10933              	.LBE1862:
 10934              	.LBE2211:
 437:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10935              		.loc 20 437 34 view .LVU3040
 10936 0758 DDED087A 		vldr.32	s15, [sp, #32]
 10937              	.LVL660:
 10938              	.LBB2212:
 10939              	.LBI1860:
1999:Veno-Echo.cpp **** {
 10940              		.loc 20 1999 7 is_stmt 1 view .LVU3041
 10941              	.LBB1863:
2001:Veno-Echo.cpp ****     if (input > limit)
 10942              		.loc 20 2001 5 view .LVU3042
2002:Veno-Echo.cpp ****         returnval = limit;
 10943              		.loc 20 2002 5 view .LVU3043
 10944 075c F4EEC77A 		vcmpe.f32	s15, s14
 10945 0760 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10946 0764 7FF79CAC 		ble	.L646
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10947              		.loc 20 2003 19 is_stmt 0 view .LVU3044
 10948 0768 F0EE477A 		vmov.f32	s15, s14
 10949              	.LVL661:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10950              		.loc 20 2003 19 view .LVU3045
 10951 076c A1E4     		b	.L545
 10952              	.LVL662:
 10953              	.L535:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10954              		.loc 20 2003 19 view .LVU3046
 10955              	.LBE1863:
 10956              	.LBE2212:
 10957              	.LBB2213:
 10958              	.LBB2205:
 10959              	.LBB2200:
 126:delayline_reverse.h ****         {
 10960              		.loc 19 126 12 view .LVU3047
 10961 076e 304B     		ldr	r3, .L652+16
 126:delayline_reverse.h ****         {
 10962              		.loc 19 126 9 view .LVU3048
 10963 0770 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10964              		.loc 19 126 12 view .LVU3049
 10965 0772 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10966              		.loc 19 126 9 view .LVU3050
 10967 0774 002A     		cmp	r2, #0
 10968 0776 D1D0     		beq	.L541
 10969              	.L642:
 126:delayline_reverse.h ****         {
 10970              		.loc 19 126 9 view .LVU3051
 10971 0778 2E4A     		ldr	r2, .L652+20
 10972 077a A018     		adds	r0, r4, r2
 10973 077c A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10974              		.loc 19 128 13 view .LVU3052
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 340


 10975 077e 002A     		cmp	r2, #0
 10976 0780 B2D0     		beq	.L538
 10977              	.L539:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10978              		.loc 19 141 45 view .LVU3053
 10979 0782 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10980              	.LVL663:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10981              		.loc 19 141 45 view .LVU3054
 10982 0786 B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10983              		.loc 19 141 37 view .LVU3055
 10984 078a 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10985              		.loc 19 142 17 view .LVU3056
 10986 078c 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10987              		.loc 19 141 45 view .LVU3057
 10988 078e F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10989              		.loc 19 141 37 view .LVU3058
 10990 0792 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10991              		.loc 19 141 45 view .LVU3059
 10992 0796 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10993              		.loc 19 141 37 view .LVU3060
 10994 079a 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10995              		.loc 19 142 17 view .LVU3061
 10996 079e F5EEC07A 		vcmpe.f32	s15, #0
 10997 07a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10998 07a6 00F1B881 		bmi	.L544
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10999              		.loc 19 141 17 view .LVU3062
 11000 07aa C1ED007A 		vstr.32	s15, [r1]
 11001 07ae B5E7     		b	.L541
 11002              	.LVL664:
 11003              	.L525:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11004              		.loc 19 141 17 view .LVU3063
 11005              	.LBE2200:
 11006              	.LBE2205:
 11007              	.LBE2213:
 11008              	.LBB2214:
 11009              	.LBB2177:
 11010              	.LBB2166:
 126:delayline_reverse.h ****         {
 11011              		.loc 19 126 12 view .LVU3064
 11012 07b0 1F4A     		ldr	r2, .L652+16
 126:delayline_reverse.h ****         {
 11013              		.loc 19 126 9 view .LVU3065
 11014 07b2 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11015              		.loc 19 126 12 view .LVU3066
 11016 07b4 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 341


 11017              		.loc 19 126 9 view .LVU3067
 11018 07b6 002B     		cmp	r3, #0
 11019 07b8 3FF447AF 		beq	.L531
 11020              	.L640:
 126:delayline_reverse.h ****         {
 11021              		.loc 19 126 9 view .LVU3068
 11022 07bc 1D4B     		ldr	r3, .L652+20
 11023 07be E818     		adds	r0, r5, r3
 11024 07c0 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11025              		.loc 19 128 13 view .LVU3069
 11026 07c2 002B     		cmp	r3, #0
 11027 07c4 3FF42AAF 		beq	.L528
 11028              	.L529:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11029              		.loc 19 141 45 view .LVU3070
 11030 07c8 07EE90EA 		vmov	s15, lr	@ int
 11031              	.LVL665:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11032              		.loc 19 141 45 view .LVU3071
 11033 07cc F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 11034              		.loc 19 142 17 view .LVU3072
 11035 07d0 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11036              		.loc 19 141 45 view .LVU3073
 11037 07d2 B8EE677A 		vcvt.f32.u32	s14, s15
 11038 07d6 C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11039              		.loc 19 141 37 view .LVU3074
 11040 07da 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11041              		.loc 19 142 17 view .LVU3075
 11042 07de B5EEC0BA 		vcmpe.f32	s22, #0
 11043 07e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11044 07e6 00F19E81 		bmi	.L534
 11045              	.L641:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11046              		.loc 19 141 17 view .LVU3076
 11047 07ea 049B     		ldr	r3, [sp, #16]
 11048 07ec 83ED00BA 		vstr.32	s22, [r3]
 11049 07f0 2BE7     		b	.L531
 11050              	.LVL666:
 11051              	.L576:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11052              		.loc 19 141 17 view .LVU3077
 11053              	.LBE2166:
 11054              	.LBE2177:
 11055              	.LBE2214:
 603:Veno-Echo.cpp ****             out[i+1] = mixR;
 11056              		.loc 20 603 13 is_stmt 1 view .LVU3078
 603:Veno-Echo.cpp ****             out[i+1] = mixR;
 11057              		.loc 20 603 20 is_stmt 0 view .LVU3079
 11058 07f2 009B     		ldr	r3, [sp]
 11059 07f4 C3ED007A 		vstr.32	s15, [r3]
 604:Veno-Echo.cpp ****         }
 11060              		.loc 20 604 13 is_stmt 1 view .LVU3080
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 342


 604:Veno-Echo.cpp ****         }
 11061              		.loc 20 604 22 is_stmt 0 view .LVU3081
 11062 07f8 83ED010A 		vstr.32	s0, [r3, #4]
 11063 07fc 91E5     		b	.L577
 11064              	.LVL667:
 11065              	.L637:
 584:Veno-Echo.cpp ****         {
 11066              		.loc 20 584 14 is_stmt 1 view .LVU3082
 11067 07fe 40F36A81 		ble	.L638
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11068              		.loc 20 586 13 view .LVU3083
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11069              		.loc 20 586 24 is_stmt 0 view .LVU3084
 11070 0802 F7EE006A 		vmov.f32	s13, #1.0e+0
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11071              		.loc 20 586 18 view .LVU3085
 11072 0806 DBED005A 		vldr.32	s11, [fp]
 587:Veno-Echo.cpp ****         }
 11073              		.loc 20 587 18 view .LVU3086
 11074 080a 9BED016A 		vldr.32	s12, [fp, #4]
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11075              		.loc 20 586 24 view .LVU3087
 11076 080e 36EEC77A 		vsub.f32	s14, s13, s14
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11077              		.loc 20 586 33 view .LVU3088
 11078 0812 37EE077A 		vadd.f32	s14, s14, s14
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11079              		.loc 20 586 18 view .LVU3089
 11080 0816 E7EE257A 		vfma.f32	s15, s14, s11
 11081              	.LVL668:
 587:Veno-Echo.cpp ****         }
 11082              		.loc 20 587 13 is_stmt 1 view .LVU3090
 587:Veno-Echo.cpp ****         }
 11083              		.loc 20 587 18 is_stmt 0 view .LVU3091
 11084 081a A7EE060A 		vfma.f32	s0, s14, s12
 11085              	.LVL669:
 587:Veno-Echo.cpp ****         }
 11086              		.loc 20 587 18 view .LVU3092
 11087 081e 77E5     		b	.L573
 11088              	.L653:
 11089              		.align	2
 11090              	.L652:
 11091 0820 00000000 		.word	.LANCHOR3
 11092 0824 BF270900 		.word	599999
 11093 0828 851DD96F 		.word	1876499845
 11094 082c C1270900 		.word	600001
 11095 0830 249F2400 		.word	2400036
 11096 0834 1C9F2400 		.word	2400028
 11097 0838 189F2400 		.word	2400024
 11098 083c 00000000 		.word	.LANCHOR106
 11099 0840 00000000 		.word	.LANCHOR107
 11100 0844 00000000 		.word	.LANCHOR0
 11101 0848 00000000 		.word	.LANCHOR1
 11102 084c C0270900 		.word	600000
 11103              	.LVL670:
 11104              	.L592:
 11105              	.LBB2215:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 343


 538:Veno-Echo.cpp **** {
 11106              		.loc 20 538 1 view .LVU3093
 11107 0850 D44B     		ldr	r3, .L654
 11108              	.LBE2215:
 11109              	.LBB2216:
 11110              	.LBB1953:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11111              		.loc 20 2003 19 view .LVU3094
 11112 0852 B0EE470A 		vmov.f32	s0, s14
 11113              	.LVL671:
2009:Veno-Echo.cpp **** }
 11114              		.loc 20 2009 5 is_stmt 1 view .LVU3095
2009:Veno-Echo.cpp **** }
 11115              		.loc 20 2009 5 is_stmt 0 view .LVU3096
 11116              	.LBE1953:
 11117              	.LBE2216:
 11118              	.LBB2217:
 538:Veno-Echo.cpp **** {
 11119              		.loc 20 538 1 view .LVU3097
 11120 0856 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11121              	.LBE2217:
 536:Veno-Echo.cpp **** 
 11122              		.loc 20 536 27 view .LVU3098
 11123 0858 8DED0D0A 		vstr.32	s0, [sp, #52]
 538:Veno-Echo.cpp **** {
 11124              		.loc 20 538 1 is_stmt 1 view .LVU3099
 11125              	.LBB2218:
 11126 085c 002B     		cmp	r3, #0
 11127 085e 3FF43EAD 		beq	.L567
 11128              	.L644:
 11129              	.LBB1956:
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11130              		.loc 20 544 9 view .LVU3100
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11131              		.loc 20 544 27 is_stmt 0 view .LVU3101
 11132 0862 9FEDD18A 		vldr.32	s16, .L654+4
 11133              	.LVL672:
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11134              		.loc 20 544 27 view .LVU3102
 11135 0866 D14D     		ldr	r5, .L654+8
 11136 0868 27EE880A 		vmul.f32	s0, s15, s16
 545:Veno-Echo.cpp **** 
 11137              		.loc 20 545 27 view .LVU3103
 11138 086c D04C     		ldr	r4, .L654+12
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11139              		.loc 20 544 27 view .LVU3104
 11140 086e 2846     		mov	r0, r5
 11141 0870 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11142              	.LVL673:
 545:Veno-Echo.cpp **** 
 11143              		.loc 20 545 9 is_stmt 1 view .LVU3105
 545:Veno-Echo.cpp **** 
 11144              		.loc 20 545 27 is_stmt 0 view .LVU3106
 11145 0874 9DED0D0A 		vldr.32	s0, [sp, #52]
 11146 0878 2046     		mov	r0, r4
 11147 087a 20EE080A 		vmul.f32	s0, s0, s16
 11148 087e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 344


 11149              	.LVL674:
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11150              		.loc 20 548 9 is_stmt 1 view .LVU3107
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11151              		.loc 20 548 9 is_stmt 0 view .LVU3108
 11152              	.LBE1956:
 11153              	.LBE2218:
 11154              	.LBE2246:
 11155              	.LBE2257:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 11156              		.loc 10 52 26 is_stmt 1 view .LVU3109
 11157              	.LBB2258:
 11158              	.LBB2247:
 11159              	.LBB2219:
 11160              	.LBB1971:
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11161              		.loc 20 548 50 is_stmt 0 view .LVU3110
 11162 0882 F2EE046A 		vmov.f32	s13, #1.0e+1
 11163 0886 95ED0C7A 		vldr.32	s14, [r5, #48]
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11164              		.loc 20 552 59 view .LVU3111
 11165 088a 0CA9     		add	r1, sp, #48
 549:Veno-Echo.cpp ****         
 11166              		.loc 20 549 50 view .LVU3112
 11167 088c D4ED0C7A 		vldr.32	s15, [r4, #48]
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11168              		.loc 20 552 59 view .LVU3113
 11169 0890 0EAA     		add	r2, sp, #56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 345


 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11170              		.loc 20 548 50 view .LVU3114
 11171 0892 27EE267A 		vmul.f32	s14, s14, s13
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11172              		.loc 20 552 59 view .LVU3115
 11173 0896 C748     		ldr	r0, .L654+16
 549:Veno-Echo.cpp ****         
 11174              		.loc 20 549 50 view .LVU3116
 11175 0898 67EEA67A 		vmul.f32	s15, s15, s13
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11176              		.loc 20 548 57 view .LVU3117
 11177 089c 8DED0E7A 		vstr.32	s14, [sp, #56]
 549:Veno-Echo.cpp ****         
 11178              		.loc 20 549 9 is_stmt 1 view .LVU3118
 11179              	.LVL675:
 549:Veno-Echo.cpp ****         
 11180              		.loc 20 549 9 is_stmt 0 view .LVU3119
 11181              	.LBE1971:
 11182              	.LBE2219:
 11183              	.LBE2247:
 11184              	.LBE2258:
 11185              		.loc 10 52 26 is_stmt 1 view .LVU3120
 11186              	.LBB2259:
 11187              	.LBB2248:
 11188              	.LBB2220:
 11189              	.LBB1972:
 549:Veno-Echo.cpp ****         
 11190              		.loc 20 549 57 is_stmt 0 view .LVU3121
 11191 08a0 CDED0F7A 		vstr.32	s15, [sp, #60]
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11192              		.loc 20 552 9 is_stmt 1 view .LVU3122
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11193              		.loc 20 552 59 is_stmt 0 view .LVU3123
 11194 08a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11195              	.LVL676:
 553:Veno-Echo.cpp **** 
 11196              		.loc 20 553 59 view .LVU3124
 11197 08a8 0DA9     		add	r1, sp, #52
 11198 08aa 0FAA     		add	r2, sp, #60
 11199 08ac C248     		ldr	r0, .L654+20
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11200              		.loc 20 552 97 view .LVU3125
 11201 08ae 8DED100A 		vstr.32	s0, [sp, #64]
 553:Veno-Echo.cpp **** 
 11202              		.loc 20 553 9 is_stmt 1 view .LVU3126
 553:Veno-Echo.cpp **** 
 11203              		.loc 20 553 59 is_stmt 0 view .LVU3127
 11204 08b2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11205              	.LVL677:
 11206              	.LBB1957:
 11207              	.LBB1958:
2002:Veno-Echo.cpp ****         returnval = limit;
 11208              		.loc 20 2002 5 view .LVU3128
 11209 08b6 F0EE006A 		vmov.f32	s13, #2.0e+0
 11210              	.LBE1958:
 11211              	.LBE1957:
 556:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 346


 11212              		.loc 20 556 41 view .LVU3129
 11213 08ba 9DED107A 		vldr.32	s14, [sp, #64]
 553:Veno-Echo.cpp **** 
 11214              		.loc 20 553 59 view .LVU3130
 11215 08be F0EE407A 		vmov.f32	s15, s0
 556:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11216              		.loc 20 556 9 is_stmt 1 view .LVU3131
 11217              	.LVL678:
 11218              	.LBB1962:
 11219              	.LBI1957:
1999:Veno-Echo.cpp **** {
 11220              		.loc 20 1999 7 view .LVU3132
 11221              	.LBB1959:
2001:Veno-Echo.cpp ****     if (input > limit)
 11222              		.loc 20 2001 5 view .LVU3133
2002:Veno-Echo.cpp ****         returnval = limit;
 11223              		.loc 20 2002 5 view .LVU3134
 11224 08c2 B4EEE67A 		vcmpe.f32	s14, s13
 11225 08c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11226 08ca 00F30D81 		bgt	.L593
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11227              		.loc 20 2004 10 view .LVU3135
 11228 08ce F8EE006A 		vmov.f32	s13, #-2.0e+0
 11229 08d2 B4EEE67A 		vcmpe.f32	s14, s13
 11230 08d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11231 08da 00F12D81 		bmi	.L594
 11232 08de 27EE080A 		vmul.f32	s0, s14, s16
 11233              	.LVL679:
 11234              	.L568:
2009:Veno-Echo.cpp **** }
 11235              		.loc 20 2009 5 view .LVU3136
2009:Veno-Echo.cpp **** }
 11236              		.loc 20 2009 5 is_stmt 0 view .LVU3137
 11237              	.LBE1959:
 11238              	.LBE1962:
 11239              	.LBB1963:
 11240              	.LBB1964:
2002:Veno-Echo.cpp ****         returnval = limit;
 11241              		.loc 20 2002 5 view .LVU3138
 11242 08e2 F0EE006A 		vmov.f32	s13, #2.0e+0
 11243              	.LBE1964:
 11244              	.LBE1963:
 556:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11245              		.loc 20 556 30 view .LVU3139
 11246 08e6 8DED107A 		vstr.32	s14, [sp, #64]
 557:Veno-Echo.cpp **** 
 11247              		.loc 20 557 9 is_stmt 1 view .LVU3140
 11248              	.LVL680:
 11249              	.LBB1967:
 11250              	.LBI1963:
1999:Veno-Echo.cpp **** {
 11251              		.loc 20 1999 7 view .LVU3141
 11252              	.LBB1965:
2001:Veno-Echo.cpp ****     if (input > limit)
 11253              		.loc 20 2001 5 view .LVU3142
2002:Veno-Echo.cpp ****         returnval = limit;
 11254              		.loc 20 2002 5 view .LVU3143
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 347


 11255 08ea F4EEE67A 		vcmpe.f32	s15, s13
 11256 08ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11257 08f2 00F30681 		bgt	.L595
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11258              		.loc 20 2004 10 view .LVU3144
 11259 08f6 B8EE007A 		vmov.f32	s14, #-2.0e+0
2005:Veno-Echo.cpp ****     else
 11260              		.loc 20 2005 19 is_stmt 0 view .LVU3145
 11261 08fa F4EE477A 		vcmp.f32	s15, s14
 11262 08fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11263 0902 48BF     		it	mi
 11264 0904 F0EE477A 		vmovmi.f32	s15, s14
 11265              	.LVL681:
 11266              	.L569:
2009:Veno-Echo.cpp **** }
 11267              		.loc 20 2009 5 is_stmt 1 view .LVU3146
2009:Veno-Echo.cpp **** }
 11268              		.loc 20 2009 5 is_stmt 0 view .LVU3147
 11269              	.LBE1965:
 11270              	.LBE1967:
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11271              		.loc 20 560 27 view .LVU3148
 11272 0908 AC4D     		ldr	r5, .L654+24
 561:Veno-Echo.cpp **** 
 11273              		.loc 20 561 27 view .LVU3149
 11274 090a AD4C     		ldr	r4, .L654+28
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11275              		.loc 20 560 27 view .LVU3150
 11276 090c 2846     		mov	r0, r5
 557:Veno-Echo.cpp **** 
 11277              		.loc 20 557 30 view .LVU3151
 11278 090e CDED117A 		vstr.32	s15, [sp, #68]
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11279              		.loc 20 560 9 is_stmt 1 view .LVU3152
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11280              		.loc 20 560 27 is_stmt 0 view .LVU3153
 11281 0912 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11282              	.LVL682:
 561:Veno-Echo.cpp **** 
 11283              		.loc 20 561 9 is_stmt 1 view .LVU3154
 561:Veno-Echo.cpp **** 
 11284              		.loc 20 561 27 is_stmt 0 view .LVU3155
 11285 0916 DFEDA47A 		vldr.32	s15, .L654+4
 11286 091a 9DED110A 		vldr.32	s0, [sp, #68]
 11287 091e 2046     		mov	r0, r4
 11288 0920 20EE270A 		vmul.f32	s0, s0, s15
 11289 0924 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11290              	.LVL683:
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11291              		.loc 20 563 9 is_stmt 1 view .LVU3156
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11292              		.loc 20 563 9 is_stmt 0 view .LVU3157
 11293              	.LBE1972:
 11294              	.LBE2220:
 11295              	.LBE2248:
 11296              	.LBE2259:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 348


  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11297              		.loc 10 56 27 is_stmt 1 view .LVU3158
 11298              	.LBB2260:
 11299              	.LBB2249:
 11300              	.LBB2221:
 11301              	.LBB1973:
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11302              		.loc 20 563 51 is_stmt 0 view .LVU3159
 11303 0928 F2EE046A 		vmov.f32	s13, #1.0e+1
 11304 092c 95ED0D7A 		vldr.32	s14, [r5, #52]
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11305              		.loc 20 566 55 view .LVU3160
 11306 0930 10A9     		add	r1, sp, #64
 564:Veno-Echo.cpp **** 
 11307              		.loc 20 564 51 view .LVU3161
 11308 0932 D4ED0D7A 		vldr.32	s15, [r4, #52]
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11309              		.loc 20 566 55 view .LVU3162
 11310 0936 12AA     		add	r2, sp, #72
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11311              		.loc 20 563 51 view .LVU3163
 11312 0938 27EE267A 		vmul.f32	s14, s14, s13
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11313              		.loc 20 566 55 view .LVU3164
 11314 093c A148     		ldr	r0, .L654+32
 564:Veno-Echo.cpp **** 
 11315              		.loc 20 564 51 view .LVU3165
 11316 093e 67EEA67A 		vmul.f32	s15, s15, s13
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11317              		.loc 20 563 58 view .LVU3166
 11318 0942 8DED127A 		vstr.32	s14, [sp, #72]
 564:Veno-Echo.cpp **** 
 11319              		.loc 20 564 9 is_stmt 1 view .LVU3167
 11320              	.LVL684:
 564:Veno-Echo.cpp **** 
 11321              		.loc 20 564 9 is_stmt 0 view .LVU3168
 11322              	.LBE1973:
 11323              	.LBE2221:
 11324              	.LBE2249:
 11325              	.LBE2260:
 11326              		.loc 10 56 27 is_stmt 1 view .LVU3169
 11327              	.LBB2261:
 11328              	.LBB2250:
 11329              	.LBB2222:
 11330              	.LBB1974:
 564:Veno-Echo.cpp **** 
 11331              		.loc 20 564 58 is_stmt 0 view .LVU3170
 11332 0946 CDED137A 		vstr.32	s15, [sp, #76]
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11333              		.loc 20 566 9 is_stmt 1 view .LVU3171
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11334              		.loc 20 566 55 is_stmt 0 view .LVU3172
 11335 094a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11336              	.LVL685:
 567:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 349


 11337              		.loc 20 567 55 view .LVU3173
 11338 094e 11A9     		add	r1, sp, #68
 11339 0950 13AA     		add	r2, sp, #76
 11340 0952 9D48     		ldr	r0, .L654+36
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11341              		.loc 20 566 30 view .LVU3174
 11342 0954 8DED100A 		vstr.32	s0, [sp, #64]
 567:Veno-Echo.cpp **** 
 11343              		.loc 20 567 9 is_stmt 1 view .LVU3175
 567:Veno-Echo.cpp **** 
 11344              		.loc 20 567 55 is_stmt 0 view .LVU3176
 11345 0958 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11346              	.LVL686:
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11347              		.loc 20 570 53 view .LVU3177
 11348 095c 10AA     		add	r2, sp, #64
 11349 095e 0CA9     		add	r1, sp, #48
 11350 0960 9A48     		ldr	r0, .L654+40
 567:Veno-Echo.cpp **** 
 11351              		.loc 20 567 30 view .LVU3178
 11352 0962 8DED110A 		vstr.32	s0, [sp, #68]
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11353              		.loc 20 570 9 is_stmt 1 view .LVU3179
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11354              		.loc 20 570 53 is_stmt 0 view .LVU3180
 11355 0966 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11356              	.LVL687:
 571:Veno-Echo.cpp **** 
 11357              		.loc 20 571 53 view .LVU3181
 11358 096a 11AA     		add	r2, sp, #68
 11359 096c 0DA9     		add	r1, sp, #52
 11360 096e 9848     		ldr	r0, .L654+44
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11361              		.loc 20 570 27 view .LVU3182
 11362 0970 8DED0C0A 		vstr.32	s0, [sp, #48]
 571:Veno-Echo.cpp **** 
 11363              		.loc 20 571 9 is_stmt 1 view .LVU3183
 571:Veno-Echo.cpp **** 
 11364              		.loc 20 571 53 is_stmt 0 view .LVU3184
 11365 0974 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11366              	.LVL688:
 11367 0978 DDED0C7A 		vldr.32	s15, [sp, #48]
 571:Veno-Echo.cpp **** 
 11368              		.loc 20 571 27 view .LVU3185
 11369 097c 8DED0D0A 		vstr.32	s0, [sp, #52]
 11370              	.LBE1974:
 11371 0980 ADE4     		b	.L567
 11372              	.LVL689:
 11373              	.L636:
 571:Veno-Echo.cpp **** 
 11374              		.loc 20 571 27 view .LVU3186
 11375              	.LBE2222:
 514:Veno-Echo.cpp **** 
 11376              		.loc 20 514 25 view .LVU3187
 11377 0982 DFED947A 		vldr.32	s15, .L654+48
 11378              	.LVL690:
 514:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 350


 11379              		.loc 20 514 25 view .LVU3188
 11380 0986 3CE4     		b	.L557
 11381              	.LVL691:
 11382              	.L635:
 510:Veno-Echo.cpp ****             
 11383              		.loc 20 510 25 view .LVU3189
 11384 0988 9FED927A 		vldr.32	s14, .L654+48
 11385              	.LVL692:
 510:Veno-Echo.cpp ****             
 11386              		.loc 20 510 25 view .LVU3190
 11387 098c 28E4     		b	.L555
 11388              	.LVL693:
 11389              	.L583:
 11390              	.LBB2223:
 440:Veno-Echo.cpp **** {
 11391              		.loc 20 440 1 view .LVU3191
 11392 098e 854B     		ldr	r3, .L654
 11393              	.LBE2223:
 11394              	.LBB2224:
 11395              	.LBB1868:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11396              		.loc 20 2003 19 view .LVU3192
 11397 0990 B0EE470A 		vmov.f32	s0, s14
 11398              	.LVL694:
2009:Veno-Echo.cpp **** }
 11399              		.loc 20 2009 5 is_stmt 1 view .LVU3193
2009:Veno-Echo.cpp **** }
 11400              		.loc 20 2009 5 is_stmt 0 view .LVU3194
 11401              	.LBE1868:
 11402              	.LBE2224:
 11403              	.LBB2225:
 440:Veno-Echo.cpp **** {
 11404              		.loc 20 440 1 view .LVU3195
 11405 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11406              	.LBE2225:
 438:Veno-Echo.cpp **** 
 11407              		.loc 20 438 23 view .LVU3196
 11408 0996 8DED090A 		vstr.32	s0, [sp, #36]
 440:Veno-Echo.cpp **** {
 11409              		.loc 20 440 1 is_stmt 1 view .LVU3197
 11410              	.LBB2226:
 11411 099a 002B     		cmp	r3, #0
 11412 099c 7FF4A5AB 		bne	.L549
 11413              	.L643:
 11414              	.LBB1871:
 446:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11415              		.loc 20 446 9 view .LVU3198
 446:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11416              		.loc 20 446 22 is_stmt 0 view .LVU3199
 11417 09a0 9FED819A 		vldr.32	s18, .L654+4
 11418 09a4 8C4D     		ldr	r5, .L654+52
 11419 09a6 27EE890A 		vmul.f32	s0, s15, s18
 447:Veno-Echo.cpp **** 
 11420              		.loc 20 447 22 view .LVU3200
 11421 09aa 8C4C     		ldr	r4, .L654+56
 446:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11422              		.loc 20 446 22 view .LVU3201
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 351


 11423 09ac 2846     		mov	r0, r5
 11424 09ae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11425              	.LVL695:
 447:Veno-Echo.cpp **** 
 11426              		.loc 20 447 9 is_stmt 1 view .LVU3202
 447:Veno-Echo.cpp **** 
 11427              		.loc 20 447 22 is_stmt 0 view .LVU3203
 11428 09b2 9DED090A 		vldr.32	s0, [sp, #36]
 11429 09b6 2046     		mov	r0, r4
 11430 09b8 20EE090A 		vmul.f32	s0, s0, s18
 11431 09bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11432              	.LVL696:
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11433              		.loc 20 450 9 is_stmt 1 view .LVU3204
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11434              		.loc 20 450 9 is_stmt 0 view .LVU3205
 11435              	.LBE1871:
 11436              	.LBE2226:
 11437              	.LBE2250:
 11438              	.LBE2261:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11439              		.loc 10 52 26 is_stmt 1 view .LVU3206
 11440              	.LBB2262:
 11441              	.LBB2251:
 11442              	.LBB2227:
 11443              	.LBB1886:
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11444              		.loc 20 450 40 is_stmt 0 view .LVU3207
 11445 09c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 11446 09c4 95ED0C7A 		vldr.32	s14, [r5, #48]
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11447              		.loc 20 454 49 view .LVU3208
 11448 09c8 0EAA     		add	r2, sp, #56
 451:Veno-Echo.cpp ****         
 11449              		.loc 20 451 40 view .LVU3209
 11450 09ca D4ED0C7A 		vldr.32	s15, [r4, #48]
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11451              		.loc 20 454 49 view .LVU3210
 11452 09ce 08A9     		add	r1, sp, #32
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11453              		.loc 20 450 40 view .LVU3211
 11454 09d0 27EE267A 		vmul.f32	s14, s14, s13
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11455              		.loc 20 454 49 view .LVU3212
 11456 09d4 8248     		ldr	r0, .L654+60
 451:Veno-Echo.cpp ****         
 11457              		.loc 20 451 40 view .LVU3213
 11458 09d6 67EEA67A 		vmul.f32	s15, s15, s13
 450:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11459              		.loc 20 450 47 view .LVU3214
 11460 09da 8DED0E7A 		vstr.32	s14, [sp, #56]
 451:Veno-Echo.cpp ****         
 11461              		.loc 20 451 9 is_stmt 1 view .LVU3215
 11462              	.LVL697:
 451:Veno-Echo.cpp ****         
 11463              		.loc 20 451 9 is_stmt 0 view .LVU3216
 11464              	.LBE1886:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 352


 11465              	.LBE2227:
 11466              	.LBE2251:
 11467              	.LBE2262:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11468              		.loc 10 52 26 is_stmt 1 view .LVU3217
 11469              	.LBB2263:
 11470              	.LBB2252:
 11471              	.LBB2228:
 11472              	.LBB1887:
 451:Veno-Echo.cpp ****         
 11473              		.loc 20 451 47 is_stmt 0 view .LVU3218
 11474 09de CDED0F7A 		vstr.32	s15, [sp, #60]
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11475              		.loc 20 454 9 is_stmt 1 view .LVU3219
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11476              		.loc 20 454 49 is_stmt 0 view .LVU3220
 11477 09e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11478              	.LVL698:
 455:Veno-Echo.cpp **** 
 11479              		.loc 20 455 49 view .LVU3221
 11480 09e6 0FAA     		add	r2, sp, #60
 11481 09e8 09A9     		add	r1, sp, #36
 11482 09ea 7E48     		ldr	r0, .L654+64
 454:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11483              		.loc 20 454 78 view .LVU3222
 11484 09ec 8DED100A 		vstr.32	s0, [sp, #64]
 455:Veno-Echo.cpp **** 
 11485              		.loc 20 455 9 is_stmt 1 view .LVU3223
 455:Veno-Echo.cpp **** 
 11486              		.loc 20 455 49 is_stmt 0 view .LVU3224
 11487 09f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11488              	.LVL699:
 11489              	.LBB1872:
 11490              	.LBB1873:
2002:Veno-Echo.cpp ****         returnval = limit;
 11491              		.loc 20 2002 5 view .LVU3225
 11492 09f4 F0EE006A 		vmov.f32	s13, #2.0e+0
 11493              	.LBE1873:
 11494              	.LBE1872:
 458:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11495              		.loc 20 458 36 view .LVU3226
 11496 09f8 9DED107A 		vldr.32	s14, [sp, #64]
 455:Veno-Echo.cpp **** 
 11497              		.loc 20 455 49 view .LVU3227
 11498 09fc F0EE407A 		vmov.f32	s15, s0
 458:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11499              		.loc 20 458 9 is_stmt 1 view .LVU3228
 11500              	.LVL700:
 11501              	.LBB1877:
 11502              	.LBI1872:
1999:Veno-Echo.cpp **** {
 11503              		.loc 20 1999 7 view .LVU3229
 11504              	.LBB1874:
2001:Veno-Echo.cpp ****     if (input > limit)
 11505              		.loc 20 2001 5 view .LVU3230
2002:Veno-Echo.cpp ****         returnval = limit;
 11506              		.loc 20 2002 5 view .LVU3231
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 353


 11507 0a00 B4EEE67A 		vcmpe.f32	s14, s13
 11508 0a04 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11509 0a08 76DC     		bgt	.L584
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11510              		.loc 20 2004 10 view .LVU3232
 11511 0a0a F8EE006A 		vmov.f32	s13, #-2.0e+0
 11512 0a0e B4EEE67A 		vcmpe.f32	s14, s13
 11513 0a12 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11514 0a16 00F19480 		bmi	.L585
 11515 0a1a 27EE090A 		vmul.f32	s0, s14, s18
 11516              	.LVL701:
 11517              	.L550:
2009:Veno-Echo.cpp **** }
 11518              		.loc 20 2009 5 view .LVU3233
2009:Veno-Echo.cpp **** }
 11519              		.loc 20 2009 5 is_stmt 0 view .LVU3234
 11520              	.LBE1874:
 11521              	.LBE1877:
 11522              	.LBB1878:
 11523              	.LBB1879:
2002:Veno-Echo.cpp ****         returnval = limit;
 11524              		.loc 20 2002 5 view .LVU3235
 11525 0a1e F0EE006A 		vmov.f32	s13, #2.0e+0
 11526              	.LBE1879:
 11527              	.LBE1878:
 458:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11528              		.loc 20 458 25 view .LVU3236
 11529 0a22 8DED107A 		vstr.32	s14, [sp, #64]
 459:Veno-Echo.cpp **** 
 11530              		.loc 20 459 9 is_stmt 1 view .LVU3237
 11531              	.LVL702:
 11532              	.LBB1882:
 11533              	.LBI1878:
1999:Veno-Echo.cpp **** {
 11534              		.loc 20 1999 7 view .LVU3238
 11535              	.LBB1880:
2001:Veno-Echo.cpp ****     if (input > limit)
 11536              		.loc 20 2001 5 view .LVU3239
2002:Veno-Echo.cpp ****         returnval = limit;
 11537              		.loc 20 2002 5 view .LVU3240
 11538 0a26 F4EEE67A 		vcmpe.f32	s15, s13
 11539 0a2a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11540 0a2e 60DC     		bgt	.L586
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11541              		.loc 20 2004 10 view .LVU3241
 11542 0a30 B8EE007A 		vmov.f32	s14, #-2.0e+0
2005:Veno-Echo.cpp ****     else
 11543              		.loc 20 2005 19 is_stmt 0 view .LVU3242
 11544 0a34 F4EE477A 		vcmp.f32	s15, s14
 11545 0a38 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11546 0a3c 48BF     		it	mi
 11547 0a3e F0EE477A 		vmovmi.f32	s15, s14
 11548              	.LVL703:
 11549              	.L551:
2009:Veno-Echo.cpp **** }
 11550              		.loc 20 2009 5 is_stmt 1 view .LVU3243
2009:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 354


 11551              		.loc 20 2009 5 is_stmt 0 view .LVU3244
 11552              	.LBE1880:
 11553              	.LBE1882:
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11554              		.loc 20 462 22 view .LVU3245
 11555 0a42 694D     		ldr	r5, .L654+68
 463:Veno-Echo.cpp **** 
 11556              		.loc 20 463 22 view .LVU3246
 11557 0a44 694C     		ldr	r4, .L654+72
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11558              		.loc 20 462 22 view .LVU3247
 11559 0a46 2846     		mov	r0, r5
 459:Veno-Echo.cpp **** 
 11560              		.loc 20 459 25 view .LVU3248
 11561 0a48 CDED117A 		vstr.32	s15, [sp, #68]
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11562              		.loc 20 462 9 is_stmt 1 view .LVU3249
 462:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11563              		.loc 20 462 22 is_stmt 0 view .LVU3250
 11564 0a4c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11565              	.LVL704:
 463:Veno-Echo.cpp **** 
 11566              		.loc 20 463 9 is_stmt 1 view .LVU3251
 463:Veno-Echo.cpp **** 
 11567              		.loc 20 463 22 is_stmt 0 view .LVU3252
 11568 0a50 DFED557A 		vldr.32	s15, .L654+4
 11569 0a54 9DED110A 		vldr.32	s0, [sp, #68]
 11570 0a58 2046     		mov	r0, r4
 11571 0a5a 20EE270A 		vmul.f32	s0, s0, s15
 11572 0a5e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11573              	.LVL705:
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11574              		.loc 20 465 9 is_stmt 1 view .LVU3253
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11575              		.loc 20 465 9 is_stmt 0 view .LVU3254
 11576              	.LBE1887:
 11577              	.LBE2228:
 11578              	.LBE2252:
 11579              	.LBE2263:
 11580              		.loc 10 56 27 is_stmt 1 view .LVU3255
 11581              	.LBB2264:
 11582              	.LBB2253:
 11583              	.LBB2229:
 11584              	.LBB1888:
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11585              		.loc 20 465 41 is_stmt 0 view .LVU3256
 11586 0a62 F2EE046A 		vmov.f32	s13, #1.0e+1
 11587 0a66 95ED0D7A 		vldr.32	s14, [r5, #52]
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11588              		.loc 20 468 45 view .LVU3257
 11589 0a6a 10A9     		add	r1, sp, #64
 466:Veno-Echo.cpp **** 
 11590              		.loc 20 466 41 view .LVU3258
 11591 0a6c D4ED0D7A 		vldr.32	s15, [r4, #52]
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11592              		.loc 20 468 45 view .LVU3259
 11593 0a70 12AA     		add	r2, sp, #72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 355


 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11594              		.loc 20 465 41 view .LVU3260
 11595 0a72 27EE267A 		vmul.f32	s14, s14, s13
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11596              		.loc 20 468 45 view .LVU3261
 11597 0a76 5E48     		ldr	r0, .L654+76
 466:Veno-Echo.cpp **** 
 11598              		.loc 20 466 41 view .LVU3262
 11599 0a78 67EEA67A 		vmul.f32	s15, s15, s13
 465:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11600              		.loc 20 465 48 view .LVU3263
 11601 0a7c 8DED127A 		vstr.32	s14, [sp, #72]
 466:Veno-Echo.cpp **** 
 11602              		.loc 20 466 9 is_stmt 1 view .LVU3264
 11603              	.LVL706:
 466:Veno-Echo.cpp **** 
 11604              		.loc 20 466 9 is_stmt 0 view .LVU3265
 11605              	.LBE1888:
 11606              	.LBE2229:
 11607              	.LBE2253:
 11608              	.LBE2264:
 11609              		.loc 10 56 27 is_stmt 1 view .LVU3266
 11610              	.LBB2265:
 11611              	.LBB2254:
 11612              	.LBB2230:
 11613              	.LBB1889:
 466:Veno-Echo.cpp **** 
 11614              		.loc 20 466 48 is_stmt 0 view .LVU3267
 11615 0a80 CDED137A 		vstr.32	s15, [sp, #76]
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11616              		.loc 20 468 9 is_stmt 1 view .LVU3268
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11617              		.loc 20 468 45 is_stmt 0 view .LVU3269
 11618 0a84 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11619              	.LVL707:
 469:Veno-Echo.cpp **** 
 11620              		.loc 20 469 45 view .LVU3270
 11621 0a88 11A9     		add	r1, sp, #68
 11622 0a8a 13AA     		add	r2, sp, #76
 11623 0a8c 5948     		ldr	r0, .L654+80
 468:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11624              		.loc 20 468 25 view .LVU3271
 11625 0a8e 8DED100A 		vstr.32	s0, [sp, #64]
 469:Veno-Echo.cpp **** 
 11626              		.loc 20 469 9 is_stmt 1 view .LVU3272
 469:Veno-Echo.cpp **** 
 11627              		.loc 20 469 45 is_stmt 0 view .LVU3273
 11628 0a92 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11629              	.LVL708:
 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11630              		.loc 20 473 44 view .LVU3274
 11631 0a96 10AA     		add	r2, sp, #64
 11632 0a98 08A9     		add	r1, sp, #32
 11633 0a9a 5748     		ldr	r0, .L654+84
 469:Veno-Echo.cpp **** 
 11634              		.loc 20 469 25 view .LVU3275
 11635 0a9c 8DED110A 		vstr.32	s0, [sp, #68]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 356


 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11636              		.loc 20 473 9 is_stmt 1 view .LVU3276
 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11637              		.loc 20 473 44 is_stmt 0 view .LVU3277
 11638 0aa0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11639              	.LVL709:
 474:Veno-Echo.cpp **** 
 11640              		.loc 20 474 44 view .LVU3278
 11641 0aa4 11AA     		add	r2, sp, #68
 11642 0aa6 09A9     		add	r1, sp, #36
 11643 0aa8 5448     		ldr	r0, .L654+88
 473:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11644              		.loc 20 473 23 view .LVU3279
 11645 0aaa 8DED080A 		vstr.32	s0, [sp, #32]
 474:Veno-Echo.cpp **** 
 11646              		.loc 20 474 9 is_stmt 1 view .LVU3280
 474:Veno-Echo.cpp **** 
 11647              		.loc 20 474 44 is_stmt 0 view .LVU3281
 11648 0aae FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11649              	.LVL710:
 11650 0ab2 DDED087A 		vldr.32	s15, [sp, #32]
 474:Veno-Echo.cpp **** 
 11651              		.loc 20 474 23 view .LVU3282
 11652 0ab6 8DED090A 		vstr.32	s0, [sp, #36]
 11653              	.LBE1889:
 11654 0aba FFF716BB 		b	.L549
 11655              	.LVL711:
 11656              	.L590:
 474:Veno-Echo.cpp **** 
 11657              		.loc 20 474 23 view .LVU3283
 11658              	.LBE2230:
 11659              	.LBB2231:
 11660              	.LBB1942:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11661              		.loc 20 2003 19 view .LVU3284
 11662 0abe B0EE676A 		vmov.f32	s12, s15
 11663              	.LVL712:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11664              		.loc 20 2003 19 view .LVU3285
 11665 0ac2 FFF7C9BB 		b	.L561
 11666              	.LVL713:
 11667              	.L589:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11668              		.loc 20 2003 19 view .LVU3286
 11669              	.LBE1942:
 11670              	.LBE2231:
 11671              	.LBB2232:
 11672              	.LBB1938:
 11673 0ac6 F0EE678A 		vmov.f32	s17, s15
 11674              	.LVL714:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11675              		.loc 20 2003 19 view .LVU3287
 11676 0aca FFF7B2BB 		b	.L559
 11677              	.LVL715:
 11678              	.L591:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11679              		.loc 20 2003 19 view .LVU3288
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 357


 11680              	.LBE1938:
 11681              	.LBE2232:
 11682              	.LBB2233:
 11683              	.LBB1947:
 11684 0ace F0EE477A 		vmov.f32	s15, s14
 11685              	.LVL716:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11686              		.loc 20 2003 19 view .LVU3289
 11687 0ad2 FFF7EABB 		b	.L563
 11688              	.LVL717:
 11689              	.L638:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11690              		.loc 20 2003 19 view .LVU3290
 11691              	.LBE1947:
 11692              	.LBE2233:
 591:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11693              		.loc 20 591 13 is_stmt 1 view .LVU3291
 591:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11694              		.loc 20 591 18 is_stmt 0 view .LVU3292
 11695 0ad6 DBED006A 		vldr.32	s13, [fp]
 592:Veno-Echo.cpp ****         }
 11696              		.loc 20 592 18 view .LVU3293
 11697 0ada 9BED017A 		vldr.32	s14, [fp, #4]
 591:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11698              		.loc 20 591 18 view .LVU3294
 11699 0ade 77EEA67A 		vadd.f32	s15, s15, s13
 11700              	.LVL718:
 592:Veno-Echo.cpp ****         }
 11701              		.loc 20 592 13 is_stmt 1 view .LVU3295
 592:Veno-Echo.cpp ****         }
 11702              		.loc 20 592 18 is_stmt 0 view .LVU3296
 11703 0ae2 30EE070A 		vadd.f32	s0, s0, s14
 11704              	.LVL719:
 592:Veno-Echo.cpp ****         }
 11705              		.loc 20 592 18 view .LVU3297
 11706 0ae6 13E4     		b	.L573
 11707              	.LVL720:
 11708              	.L593:
 11709              	.LBB2234:
 11710              	.LBB1975:
 11711              	.LBB1968:
 11712              	.LBB1960:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11713              		.loc 20 2003 19 view .LVU3298
 11714 0ae8 B0EE667A 		vmov.f32	s14, s13
 11715              	.LVL721:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11716              		.loc 20 2003 19 view .LVU3299
 11717 0aec 9FED440A 		vldr.32	s0, .L654+92
 11718 0af0 F7E6     		b	.L568
 11719              	.LVL722:
 11720              	.L586:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11721              		.loc 20 2003 19 view .LVU3300
 11722              	.LBE1960:
 11723              	.LBE1968:
 11724              	.LBE1975:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 358


 11725              	.LBE2234:
 11726              	.LBB2235:
 11727              	.LBB1890:
 11728              	.LBB1883:
 11729              	.LBB1881:
 11730 0af2 F0EE667A 		vmov.f32	s15, s13
 11731              	.LVL723:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11732              		.loc 20 2003 19 view .LVU3301
 11733 0af6 A4E7     		b	.L551
 11734              	.LVL724:
 11735              	.L584:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11736              		.loc 20 2003 19 view .LVU3302
 11737              	.LBE1881:
 11738              	.LBE1883:
 11739              	.LBB1884:
 11740              	.LBB1875:
 11741 0af8 B0EE667A 		vmov.f32	s14, s13
 11742              	.LVL725:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11743              		.loc 20 2003 19 view .LVU3303
 11744 0afc 9FED400A 		vldr.32	s0, .L654+92
 11745 0b00 8DE7     		b	.L550
 11746              	.LVL726:
 11747              	.L595:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11748              		.loc 20 2003 19 view .LVU3304
 11749              	.LBE1875:
 11750              	.LBE1884:
 11751              	.LBE1890:
 11752              	.LBE2235:
 11753              	.LBB2236:
 11754              	.LBB1976:
 11755              	.LBB1969:
 11756              	.LBB1966:
 11757 0b02 F0EE667A 		vmov.f32	s15, s13
 11758              	.LVL727:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11759              		.loc 20 2003 19 view .LVU3305
 11760 0b06 FFE6     		b	.L569
 11761              	.LVL728:
 11762              	.L527:
2003:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11763              		.loc 20 2003 19 view .LVU3306
 11764              	.LBE1966:
 11765              	.LBE1969:
 11766              	.LBE1976:
 11767              	.LBE2236:
 11768              	.LBB2237:
 11769              	.LBB2178:
 11770              	.LBB2167:
 116:delayline_reverse.h ****                 }
 11771              		.loc 19 116 21 view .LVU3307
 11772 0b08 AB60     		str	r3, [r5, #8]
 11773 0b0a 5DE6     		b	.L529
 11774              	.LVL729:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 359


 11775              	.L537:
 116:delayline_reverse.h ****                 }
 11776              		.loc 19 116 21 view .LVU3308
 11777              	.LBE2167:
 11778              	.LBE2178:
 11779              	.LBE2237:
 11780              	.LBB2238:
 11781              	.LBB2206:
 11782              	.LBB2201:
 11783 0b0c A260     		str	r2, [r4, #8]
 11784 0b0e 38E6     		b	.L539
 11785              	.LVL730:
 11786              	.L506:
 116:delayline_reverse.h ****                 }
 11787              		.loc 19 116 21 view .LVU3309
 11788              	.LBE2201:
 11789              	.LBE2206:
 11790              	.LBE2238:
 11791              	.LBE2254:
 11792              	.LBE2265:
 612:Veno-Echo.cpp **** 
 11793              		.loc 20 612 1 view .LVU3310
 11794 0b10 15B0     		add	sp, sp, #84
 11795              		.cfi_remember_state
 11796              		.cfi_def_cfa_offset 92
 11797              		@ sp needed
 11798 0b12 BDEC0E8B 		vldm	sp!, {d8-d14}
 11799              		.cfi_restore 92
 11800              		.cfi_restore 93
 11801              		.cfi_restore 90
 11802              		.cfi_restore 91
 11803              		.cfi_restore 88
 11804              		.cfi_restore 89
 11805              		.cfi_restore 86
 11806              		.cfi_restore 87
 11807              		.cfi_restore 84
 11808              		.cfi_restore 85
 11809              		.cfi_restore 82
 11810              		.cfi_restore 83
 11811              		.cfi_restore 80
 11812              		.cfi_restore 81
 11813              		.cfi_def_cfa_offset 36
 11814 0b16 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11815              	.LVL731:
 11816              	.L544:
 11817              		.cfi_restore_state
 11818              	.LBB2266:
 11819              	.LBB2255:
 11820              	.LBB2239:
 11821              	.LBB2207:
 11822              	.LBB2202:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11823              		.loc 19 145 21 view .LVU3311
 11824 0b1a 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11825              		.loc 19 144 21 view .LVU3312
 11826 0b1c 039C     		ldr	r4, [sp, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 360


 11827              	.LVL732:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11828              		.loc 19 144 21 view .LVU3313
 11829 0b1e 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11830              		.loc 19 145 21 view .LVU3314
 11831 0b20 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11832              		.loc 19 146 21 view .LVU3315
 11833 0b22 0170     		strb	r1, [r0]
 11834 0b24 FAE5     		b	.L541
 11835              	.LVL733:
 11836              	.L534:
 146:delayline_reverse.h ****                 }
 11837              		.loc 19 146 21 view .LVU3316
 11838              	.LBE2202:
 11839              	.LBE2207:
 11840              	.LBE2239:
 11841              	.LBB2240:
 11842              	.LBB2179:
 11843              	.LBB2168:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11844              		.loc 19 145 21 view .LVU3317
 11845 0b26 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11846              		.loc 19 144 21 view .LVU3318
 11847 0b28 049D     		ldr	r5, [sp, #16]
 11848              	.LVL734:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11849              		.loc 19 144 21 view .LVU3319
 11850 0b2a 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11851              		.loc 19 145 21 view .LVU3320
 11852 0b2c 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11853              		.loc 19 146 21 view .LVU3321
 11854 0b2e 0170     		strb	r1, [r0]
 11855 0b30 8BE5     		b	.L531
 11856              	.LVL735:
 11857              	.L645:
 146:delayline_reverse.h ****                 }
 11858              		.loc 19 146 21 view .LVU3322
 11859              	.LBE2168:
 11860              	.LBE2179:
 11861              	.LBE2240:
 11862              	.LBB2241:
 11863              	.LBB2208:
 11864              	.LBB2203:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11865              		.loc 19 130 17 view .LVU3323
 11866 0b32 C2ED007A 		vstr.32	s15, [r2]
 11867 0b36 F1E5     		b	.L541
 11868              	.LVL736:
 11869              	.L594:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11870              		.loc 19 130 17 view .LVU3324
 11871              	.LBE2203:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 361


 11872              	.LBE2208:
 11873              	.LBE2241:
 11874              	.LBB2242:
 11875              	.LBB1977:
 11876              	.LBB1970:
 11877              	.LBB1961:
2005:Veno-Echo.cpp ****     else
 11878              		.loc 20 2005 19 view .LVU3325
 11879 0b38 B0EE667A 		vmov.f32	s14, s13
 11880              	.LVL737:
2005:Veno-Echo.cpp ****     else
 11881              		.loc 20 2005 19 view .LVU3326
 11882 0b3c 9FED310A 		vldr.32	s0, .L654+96
 11883 0b40 CFE6     		b	.L568
 11884              	.LVL738:
 11885              	.L585:
2005:Veno-Echo.cpp ****     else
 11886              		.loc 20 2005 19 view .LVU3327
 11887              	.LBE1961:
 11888              	.LBE1970:
 11889              	.LBE1977:
 11890              	.LBE2242:
 11891              	.LBB2243:
 11892              	.LBB1891:
 11893              	.LBB1885:
 11894              	.LBB1876:
 11895 0b42 B0EE667A 		vmov.f32	s14, s13
 11896              	.LVL739:
2005:Veno-Echo.cpp ****     else
 11897              		.loc 20 2005 19 view .LVU3328
 11898 0b46 9FED2F0A 		vldr.32	s0, .L654+96
 11899 0b4a 68E7     		b	.L550
 11900              	.LVL740:
 11901              	.L508:
2005:Veno-Echo.cpp ****     else
 11902              		.loc 20 2005 19 view .LVU3329
 11903              	.LBE1876:
 11904              	.LBE1885:
 11905              	.LBE1891:
 11906              	.LBE2243:
 11907              	.LBE2255:
 11908              	.LBE2266:
 374:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11909              		.loc 20 374 13 is_stmt 1 view .LVU3330
 375:Veno-Echo.cpp ****                 {
 11910              		.loc 20 375 17 view .LVU3331
 375:Veno-Echo.cpp ****                 {
 11911              		.loc 20 375 30 is_stmt 0 view .LVU3332
 11912 0b4c 2E4B     		ldr	r3, .L654+100
 375:Veno-Echo.cpp ****                 {
 11913              		.loc 20 375 17 view .LVU3333
 11914 0b4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11915 0b50 022B     		cmp	r3, #2
 11916 0b52 3FF488AA 		beq	.L507
 377:Veno-Echo.cpp ****                 }
 11917              		.loc 20 377 21 is_stmt 1 view .LVU3334
 377:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 362


 11918              		.loc 20 377 39 is_stmt 0 view .LVU3335
 11919 0b56 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11920              	.LVL741:
 377:Veno-Echo.cpp ****                 }
 11921              		.loc 20 377 39 view .LVU3336
 11922 0b5a FFF784BA 		b	.L507
 11923              	.LVL742:
 11924              	.L523:
 294:Veno-Echo.cpp ****                 Update_Buttons();
 11925              		.loc 20 294 13 is_stmt 1 view .LVU3337
 295:Veno-Echo.cpp ****                 GetModCV();
 11926              		.loc 20 295 17 view .LVU3338
 295:Veno-Echo.cpp ****                 GetModCV();
 11927              		.loc 20 295 31 is_stmt 0 view .LVU3339
 11928 0b5e FFF7FEFF 		bl	_Z14Update_Buttonsv
 11929              	.LVL743:
 296:Veno-Echo.cpp ****                 
 11930              		.loc 20 296 17 is_stmt 1 view .LVU3340
 296:Veno-Echo.cpp ****                 
 11931              		.loc 20 296 25 is_stmt 0 view .LVU3341
 11932 0b62 FFF7FEFF 		bl	_Z8GetModCVv
 11933              	.LVL744:
 298:Veno-Echo.cpp ****             break;
 11934              		.loc 20 298 17 is_stmt 1 view .LVU3342
 298:Veno-Echo.cpp ****             break;
 11935              		.loc 20 298 38 is_stmt 0 view .LVU3343
 11936 0b66 FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11937              	.LVL745:
 299:Veno-Echo.cpp **** 
 11938              		.loc 20 299 13 is_stmt 1 view .LVU3344
 11939 0b6a FFF77CBA 		b	.L507
 11940              	.LVL746:
 11941              	.L521:
 305:Veno-Echo.cpp ****                 if(saveState != SAVING)
 11942              		.loc 20 305 13 view .LVU3345
 306:Veno-Echo.cpp ****                 {
 11943              		.loc 20 306 17 view .LVU3346
 306:Veno-Echo.cpp ****                 {
 11944              		.loc 20 306 30 is_stmt 0 view .LVU3347
 11945 0b6e 264B     		ldr	r3, .L654+100
 306:Veno-Echo.cpp ****                 {
 11946              		.loc 20 306 17 view .LVU3348
 11947 0b70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11948 0b72 022B     		cmp	r3, #2
 11949 0b74 3FF477AA 		beq	.L507
 308:Veno-Echo.cpp ****                 }
 11950              		.loc 20 308 21 is_stmt 1 view .LVU3349
 308:Veno-Echo.cpp ****                 }
 11951              		.loc 20 308 38 is_stmt 0 view .LVU3350
 11952 0b78 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11953              	.LVL747:
 308:Veno-Echo.cpp ****                 }
 11954              		.loc 20 308 38 view .LVU3351
 11955 0b7c FFF773BA 		b	.L507
 11956              	.LVL748:
 11957              	.L520:
 312:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 363


 11958              		.loc 20 312 13 is_stmt 1 view .LVU3352
 313:Veno-Echo.cpp ****             break;
 11959              		.loc 20 313 17 view .LVU3353
 11960              	.LBB2267:
 11961              	.LBI2267:
 948:Veno-Echo.cpp **** {
 11962              		.loc 20 948 6 view .LVU3354
 11963              	.LBB2268:
 950:Veno-Echo.cpp **** }
 11964              		.loc 20 950 5 view .LVU3355
 950:Veno-Echo.cpp **** }
 11965              		.loc 20 950 36 is_stmt 0 view .LVU3356
 11966 0b80 0121     		movs	r1, #1
 11967              	.LVL749:
 950:Veno-Echo.cpp **** }
 11968              		.loc 20 950 36 view .LVU3357
 11969 0b82 2248     		ldr	r0, .L654+104
 11970              	.LVL750:
 950:Veno-Echo.cpp **** }
 11971              		.loc 20 950 36 view .LVU3358
 11972 0b84 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11973              	.LVL751:
 950:Veno-Echo.cpp **** }
 11974              		.loc 20 950 19 view .LVU3359
 11975 0b88 214B     		ldr	r3, .L654+108
 11976 0b8a 83ED000A 		vstr.32	s0, [r3]
 951:Veno-Echo.cpp **** 
 11977              		.loc 20 951 1 view .LVU3360
 11978 0b8e FFF76ABA 		b	.L507
 11979              	.LVL752:
 11980              	.L519:
 951:Veno-Echo.cpp **** 
 11981              		.loc 20 951 1 view .LVU3361
 11982              	.LBE2268:
 11983              	.LBE2267:
 316:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11984              		.loc 20 316 13 is_stmt 1 view .LVU3362
 317:Veno-Echo.cpp ****                 {
 11985              		.loc 20 317 17 view .LVU3363
 317:Veno-Echo.cpp ****                 {
 11986              		.loc 20 317 30 is_stmt 0 view .LVU3364
 11987 0b92 1D4B     		ldr	r3, .L654+100
 317:Veno-Echo.cpp ****                 {
 11988              		.loc 20 317 17 view .LVU3365
 11989 0b94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11990 0b96 022B     		cmp	r3, #2
 11991 0b98 3FF465AA 		beq	.L507
 319:Veno-Echo.cpp ****                 }
 11992              		.loc 20 319 21 is_stmt 1 view .LVU3366
 319:Veno-Echo.cpp ****                 }
 11993              		.loc 20 319 38 is_stmt 0 view .LVU3367
 11994 0b9c FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11995              	.LVL753:
 319:Veno-Echo.cpp ****                 }
 11996              		.loc 20 319 38 view .LVU3368
 11997 0ba0 FFF761BA 		b	.L507
 11998              	.L655:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 364


 11999              		.align	2
 12000              	.L654:
 12001 0ba4 00000000 		.word	.LANCHOR83
 12002 0ba8 CDCCCC3D 		.word	1036831949
 12003 0bac 00000000 		.word	.LANCHOR49
 12004 0bb0 00000000 		.word	.LANCHOR50
 12005 0bb4 00000000 		.word	.LANCHOR122
 12006 0bb8 00000000 		.word	.LANCHOR123
 12007 0bbc 00000000 		.word	.LANCHOR37
 12008 0bc0 00000000 		.word	.LANCHOR38
 12009 0bc4 00000000 		.word	.LANCHOR120
 12010 0bc8 00000000 		.word	.LANCHOR121
 12011 0bcc 00000000 		.word	.LANCHOR126
 12012 0bd0 00000000 		.word	.LANCHOR127
 12013 0bd4 00000000 		.word	0
 12014 0bd8 00000000 		.word	.LANCHOR47
 12015 0bdc 00000000 		.word	.LANCHOR48
 12016 0be0 00000000 		.word	.LANCHOR118
 12017 0be4 00000000 		.word	.LANCHOR119
 12018 0be8 00000000 		.word	.LANCHOR35
 12019 0bec 00000000 		.word	.LANCHOR36
 12020 0bf0 00000000 		.word	.LANCHOR116
 12021 0bf4 00000000 		.word	.LANCHOR117
 12022 0bf8 00000000 		.word	.LANCHOR124
 12023 0bfc 00000000 		.word	.LANCHOR125
 12024 0c00 CDCC4C3E 		.word	1045220557
 12025 0c04 CDCC4CBE 		.word	3192704205
 12026 0c08 00000000 		.word	.LANCHOR108
 12027 0c0c 18000000 		.word	.LANCHOR4+24
 12028 0c10 00000000 		.word	.LANCHOR17
 12029              	.LVL754:
 12030              	.L518:
 323:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 12031              		.loc 20 323 13 is_stmt 1 view .LVU3369
 324:Veno-Echo.cpp ****             break;
 12032              		.loc 20 324 17 view .LVU3370
 12033              	.LBB2269:
 12034              	.LBI2269:
1047:Veno-Echo.cpp **** {
 12035              		.loc 20 1047 6 view .LVU3371
 12036              	.LBB2270:
1049:Veno-Echo.cpp **** }
 12037              		.loc 20 1049 5 view .LVU3372
1049:Veno-Echo.cpp **** }
 12038              		.loc 20 1049 35 is_stmt 0 view .LVU3373
 12039 0c14 0221     		movs	r1, #2
 12040              	.LVL755:
1049:Veno-Echo.cpp **** }
 12041              		.loc 20 1049 35 view .LVU3374
 12042 0c16 2848     		ldr	r0, .L656
 12043              	.LVL756:
1049:Veno-Echo.cpp **** }
 12044              		.loc 20 1049 35 view .LVU3375
 12045 0c18 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12046              	.LVL757:
1049:Veno-Echo.cpp **** }
 12047              		.loc 20 1049 18 view .LVU3376
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 365


 12048 0c1c 274B     		ldr	r3, .L656+4
 12049 0c1e 83ED000A 		vstr.32	s0, [r3]
1050:Veno-Echo.cpp **** void Update_feedbackL()
 12050              		.loc 20 1050 1 view .LVU3377
 12051 0c22 FFF720BA 		b	.L507
 12052              	.LVL758:
 12053              	.L517:
1050:Veno-Echo.cpp **** void Update_feedbackL()
 12054              		.loc 20 1050 1 view .LVU3378
 12055              	.LBE2270:
 12056              	.LBE2269:
 327:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12057              		.loc 20 327 13 is_stmt 1 view .LVU3379
 328:Veno-Echo.cpp ****                 {
 12058              		.loc 20 328 17 view .LVU3380
 328:Veno-Echo.cpp ****                 {
 12059              		.loc 20 328 30 is_stmt 0 view .LVU3381
 12060 0c26 264B     		ldr	r3, .L656+8
 328:Veno-Echo.cpp ****                 {
 12061              		.loc 20 328 17 view .LVU3382
 12062 0c28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12063 0c2a 022B     		cmp	r3, #2
 12064 0c2c 3FF41BAA 		beq	.L507
 330:Veno-Echo.cpp ****                 }
 12065              		.loc 20 330 21 is_stmt 1 view .LVU3383
 330:Veno-Echo.cpp ****                 }
 12066              		.loc 20 330 37 is_stmt 0 view .LVU3384
 12067 0c30 FFF7FEFF 		bl	_Z16Update_feedbackLv
 12068              	.LVL759:
 330:Veno-Echo.cpp ****                 }
 12069              		.loc 20 330 37 view .LVU3385
 12070 0c34 FFF717BA 		b	.L507
 12071              	.LVL760:
 12072              	.L516:
 334:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 12073              		.loc 20 334 13 is_stmt 1 view .LVU3386
 335:Veno-Echo.cpp ****             break;
 12074              		.loc 20 335 17 view .LVU3387
 12075              	.LBB2271:
 12076              	.LBI2271:
1136:Veno-Echo.cpp **** {
 12077              		.loc 20 1136 6 view .LVU3388
 12078              	.LBB2272:
1138:Veno-Echo.cpp **** }
 12079              		.loc 20 1138 5 view .LVU3389
1138:Veno-Echo.cpp **** }
 12080              		.loc 20 1138 35 is_stmt 0 view .LVU3390
 12081 0c38 0321     		movs	r1, #3
 12082              	.LVL761:
1138:Veno-Echo.cpp **** }
 12083              		.loc 20 1138 35 view .LVU3391
 12084 0c3a 1F48     		ldr	r0, .L656
 12085              	.LVL762:
1138:Veno-Echo.cpp **** }
 12086              		.loc 20 1138 35 view .LVU3392
 12087 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12088              	.LVL763:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 366


1138:Veno-Echo.cpp **** }
 12089              		.loc 20 1138 18 view .LVU3393
 12090 0c40 204B     		ldr	r3, .L656+12
 12091 0c42 83ED000A 		vstr.32	s0, [r3]
1139:Veno-Echo.cpp **** 
 12092              		.loc 20 1139 1 view .LVU3394
 12093 0c46 FFF70EBA 		b	.L507
 12094              	.LVL764:
 12095              	.L515:
1139:Veno-Echo.cpp **** 
 12096              		.loc 20 1139 1 view .LVU3395
 12097              	.LBE2272:
 12098              	.LBE2271:
 338:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12099              		.loc 20 338 13 is_stmt 1 view .LVU3396
 339:Veno-Echo.cpp ****                 {
 12100              		.loc 20 339 17 view .LVU3397
 339:Veno-Echo.cpp ****                 {
 12101              		.loc 20 339 30 is_stmt 0 view .LVU3398
 12102 0c4a 1D4B     		ldr	r3, .L656+8
 339:Veno-Echo.cpp ****                 {
 12103              		.loc 20 339 17 view .LVU3399
 12104 0c4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12105 0c4e 022B     		cmp	r3, #2
 12106 0c50 3FF409AA 		beq	.L507
 341:Veno-Echo.cpp ****                 }
 12107              		.loc 20 341 21 is_stmt 1 view .LVU3400
 341:Veno-Echo.cpp ****                 }
 12108              		.loc 20 341 37 is_stmt 0 view .LVU3401
 12109 0c54 FFF7FEFF 		bl	_Z16Update_feedbackRv
 12110              	.LVL765:
 341:Veno-Echo.cpp ****                 }
 12111              		.loc 20 341 37 view .LVU3402
 12112 0c58 FFF705BA 		b	.L507
 12113              	.LVL766:
 12114              	.L514:
 345:Veno-Echo.cpp ****                 Update_drywet_CV();
 12115              		.loc 20 345 13 is_stmt 1 view .LVU3403
 346:Veno-Echo.cpp ****             break;
 12116              		.loc 20 346 17 view .LVU3404
 12117              	.LBB2273:
 12118              	.LBI2273:
1226:Veno-Echo.cpp **** {
 12119              		.loc 20 1226 6 view .LVU3405
 12120              	.LBB2274:
1228:Veno-Echo.cpp **** }
 12121              		.loc 20 1228 5 view .LVU3406
1228:Veno-Echo.cpp **** }
 12122              		.loc 20 1228 32 is_stmt 0 view .LVU3407
 12123 0c5c 0421     		movs	r1, #4
 12124              	.LVL767:
1228:Veno-Echo.cpp **** }
 12125              		.loc 20 1228 32 view .LVU3408
 12126 0c5e 1648     		ldr	r0, .L656
 12127              	.LVL768:
1228:Veno-Echo.cpp **** }
 12128              		.loc 20 1228 32 view .LVU3409
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 367


 12129 0c60 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12130              	.LVL769:
1228:Veno-Echo.cpp **** }
 12131              		.loc 20 1228 15 view .LVU3410
 12132 0c64 184B     		ldr	r3, .L656+16
 12133 0c66 83ED000A 		vstr.32	s0, [r3]
1229:Veno-Echo.cpp **** 
 12134              		.loc 20 1229 1 view .LVU3411
 12135 0c6a FFF7FCB9 		b	.L507
 12136              	.LVL770:
 12137              	.L513:
1229:Veno-Echo.cpp **** 
 12138              		.loc 20 1229 1 view .LVU3412
 12139              	.LBE2274:
 12140              	.LBE2273:
 349:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12141              		.loc 20 349 13 is_stmt 1 view .LVU3413
 350:Veno-Echo.cpp ****                 {
 12142              		.loc 20 350 17 view .LVU3414
 350:Veno-Echo.cpp ****                 {
 12143              		.loc 20 350 30 is_stmt 0 view .LVU3415
 12144 0c6e 144B     		ldr	r3, .L656+8
 350:Veno-Echo.cpp ****                 {
 12145              		.loc 20 350 17 view .LVU3416
 12146 0c70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12147 0c72 022B     		cmp	r3, #2
 12148 0c74 3FF4F7A9 		beq	.L507
 352:Veno-Echo.cpp ****                 }
 12149              		.loc 20 352 21 is_stmt 1 view .LVU3417
 352:Veno-Echo.cpp ****                 }
 12150              		.loc 20 352 34 is_stmt 0 view .LVU3418
 12151 0c78 FFF7FEFF 		bl	_Z13Update_drywetv
 12152              	.LVL771:
 352:Veno-Echo.cpp ****                 }
 12153              		.loc 20 352 34 view .LVU3419
 12154 0c7c FFF7F3B9 		b	.L507
 12155              	.LVL772:
 12156              	.L512:
 356:Veno-Echo.cpp ****                 Update_width_CV();
 12157              		.loc 20 356 13 is_stmt 1 view .LVU3420
 357:Veno-Echo.cpp ****             break;
 12158              		.loc 20 357 17 view .LVU3421
 12159              	.LBB2275:
 12160              	.LBI2275:
1341:Veno-Echo.cpp **** {
 12161              		.loc 20 1341 6 view .LVU3422
 12162              	.LBB2276:
1343:Veno-Echo.cpp **** }
 12163              		.loc 20 1343 5 view .LVU3423
1343:Veno-Echo.cpp **** }
 12164              		.loc 20 1343 30 is_stmt 0 view .LVU3424
 12165 0c80 0521     		movs	r1, #5
 12166              	.LVL773:
1343:Veno-Echo.cpp **** }
 12167              		.loc 20 1343 30 view .LVU3425
 12168 0c82 0D48     		ldr	r0, .L656
 12169              	.LVL774:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 368


1343:Veno-Echo.cpp **** }
 12170              		.loc 20 1343 30 view .LVU3426
 12171 0c84 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12172              	.LVL775:
1343:Veno-Echo.cpp **** }
 12173              		.loc 20 1343 13 view .LVU3427
 12174 0c88 104B     		ldr	r3, .L656+20
 12175 0c8a 83ED000A 		vstr.32	s0, [r3]
1344:Veno-Echo.cpp **** 
 12176              		.loc 20 1344 1 view .LVU3428
 12177 0c8e FFF7EAB9 		b	.L507
 12178              	.LVL776:
 12179              	.L511:
1344:Veno-Echo.cpp **** 
 12180              		.loc 20 1344 1 view .LVU3429
 12181              	.LBE2276:
 12182              	.LBE2275:
 360:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12183              		.loc 20 360 13 is_stmt 1 view .LVU3430
 361:Veno-Echo.cpp ****                 {
 12184              		.loc 20 361 17 view .LVU3431
 361:Veno-Echo.cpp ****                 {
 12185              		.loc 20 361 30 is_stmt 0 view .LVU3432
 12186 0c92 0B4B     		ldr	r3, .L656+8
 361:Veno-Echo.cpp ****                 {
 12187              		.loc 20 361 17 view .LVU3433
 12188 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12189 0c96 022B     		cmp	r3, #2
 12190 0c98 3FF4E5A9 		beq	.L507
 363:Veno-Echo.cpp ****                 }
 12191              		.loc 20 363 21 is_stmt 1 view .LVU3434
 363:Veno-Echo.cpp ****                 }
 12192              		.loc 20 363 33 is_stmt 0 view .LVU3435
 12193 0c9c FFF7FEFF 		bl	_Z12Update_widthv
 12194              	.LVL777:
 363:Veno-Echo.cpp ****                 }
 12195              		.loc 20 363 33 view .LVU3436
 12196 0ca0 FFF7E1B9 		b	.L507
 12197              	.LVL778:
 12198              	.L510:
 367:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12199              		.loc 20 367 13 is_stmt 1 view .LVU3437
 368:Veno-Echo.cpp ****                 {
 12200              		.loc 20 368 17 view .LVU3438
 368:Veno-Echo.cpp ****                 {
 12201              		.loc 20 368 30 is_stmt 0 view .LVU3439
 12202 0ca4 064B     		ldr	r3, .L656+8
 368:Veno-Echo.cpp ****                 {
 12203              		.loc 20 368 17 view .LVU3440
 12204 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12205 0ca8 022B     		cmp	r3, #2
 12206 0caa 3FF4DCA9 		beq	.L507
 370:Veno-Echo.cpp ****                 }
 12207              		.loc 20 370 21 is_stmt 1 view .LVU3441
 370:Veno-Echo.cpp ****                 }
 12208              		.loc 20 370 41 is_stmt 0 view .LVU3442
 12209 0cae FFF7FEFF 		bl	_Z20Update_crossfeedbackv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 369


 12210              	.LVL779:
 370:Veno-Echo.cpp ****                 }
 12211              		.loc 20 370 41 view .LVU3443
 12212 0cb2 FFF7D8B9 		b	.L507
 12213              	.L657:
 12214 0cb6 00BF     		.align	2
 12215              	.L656:
 12216 0cb8 18000000 		.word	.LANCHOR4+24
 12217 0cbc 00000000 		.word	.LANCHOR27
 12218 0cc0 00000000 		.word	.LANCHOR108
 12219 0cc4 00000000 		.word	.LANCHOR39
 12220 0cc8 00000000 		.word	.LANCHOR51
 12221 0ccc 00000000 		.word	.LANCHOR59
 12222              		.cfi_endproc
 12223              	.LFE4309:
 12225              		.section	.text._Z9HardLimitff,"ax",%progbits
 12226              		.align	1
 12227              		.p2align 2,,3
 12228              		.global	_Z9HardLimitff
 12229              		.syntax unified
 12230              		.thumb
 12231              		.thumb_func
 12232              		.fpu fpv5-d16
 12234              	_Z9HardLimitff:
 12235              	.LVL780:
 12236              	.LFB4336:
2000:Veno-Echo.cpp ****     float returnval{};
 12237              		.loc 20 2000 1 is_stmt 1 view -0
 12238              		.cfi_startproc
 12239              		@ args = 0, pretend = 0, frame = 0
 12240              		@ frame_needed = 0, uses_anonymous_args = 0
 12241              		@ link register save eliminated.
2001:Veno-Echo.cpp ****     if (input > limit)
 12242              		.loc 20 2001 5 view .LVU3445
2002:Veno-Echo.cpp ****         returnval = limit;
 12243              		.loc 20 2002 5 view .LVU3446
 12244 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12245 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12246 0008 07DC     		bgt	.L659
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12247              		.loc 20 2004 10 view .LVU3447
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12248              		.loc 20 2004 28 is_stmt 0 view .LVU3448
 12249 000a F1EE600A 		vneg.f32	s1, s1
 12250              	.LVL781:
2004:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12251              		.loc 20 2004 10 view .LVU3449
 12252 000e F4EEC00A 		vcmpe.f32	s1, s0
 12253 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2007:Veno-Echo.cpp **** 
 12254              		.loc 20 2007 19 view .LVU3450
 12255 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12256              	.L659:
 12257              	.LVL782:
2009:Veno-Echo.cpp **** }
 12258              		.loc 20 2009 5 is_stmt 1 view .LVU3451
2010:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 370


 12259              		.loc 20 2010 1 is_stmt 0 view .LVU3452
 12260 001a B0EE600A 		vmov.f32	s0, s1
 12261              	.LVL783:
2010:Veno-Echo.cpp **** 
 12262              		.loc 20 2010 1 view .LVU3453
 12263 001e 7047     		bx	lr
 12264              		.cfi_endproc
 12265              	.LFE4336:
 12267              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12268              		.align	1
 12269              		.p2align 2,,3
 12270              		.global	_Z10PotCVComboff
 12271              		.syntax unified
 12272              		.thumb
 12273              		.thumb_func
 12274              		.fpu fpv5-d16
 12276              	_Z10PotCVComboff:
 12277              	.LVL784:
 12278              	.LFB4337:
2013:Veno-Echo.cpp ****     float output{};
 12279              		.loc 20 2013 1 is_stmt 1 view -0
 12280              		.cfi_startproc
 12281              		@ args = 0, pretend = 0, frame = 0
 12282              		@ frame_needed = 0, uses_anonymous_args = 0
 12283              		@ link register save eliminated.
2014:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12284              		.loc 20 2014 5 view .LVU3455
2015:Veno-Echo.cpp **** 
 12285              		.loc 20 2015 5 view .LVU3456
2015:Veno-Echo.cpp **** 
 12286              		.loc 20 2015 39 is_stmt 0 view .LVU3457
 12287 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2015:Veno-Echo.cpp **** 
 12288              		.loc 20 2015 49 view .LVU3458
 12289 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2015:Veno-Echo.cpp **** 
 12290              		.loc 20 2015 12 view .LVU3459
 12291 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2015:Veno-Echo.cpp **** 
 12292              		.loc 20 2015 39 view .LVU3460
 12293 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12294              	.LVL785:
2015:Veno-Echo.cpp **** 
 12295              		.loc 20 2015 49 view .LVU3461
 12296 0010 70EEE60A 		vsub.f32	s1, s1, s13
2015:Veno-Echo.cpp **** 
 12297              		.loc 20 2015 12 view .LVU3462
 12298 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12299              	.LVL786:
2017:Veno-Echo.cpp ****     {
 12300              		.loc 20 2017 5 is_stmt 1 view .LVU3463
 12301 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12302 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12303 0020 06D4     		bmi	.L665
2022:Veno-Echo.cpp ****     {
 12304              		.loc 20 2022 5 view .LVU3464
2024:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 371


 12305              		.loc 20 2024 16 is_stmt 0 view .LVU3465
 12306 0022 B4EE670A 		vcmp.f32	s0, s15
 12307 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12308 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12309              	.LVL787:
2024:Veno-Echo.cpp ****     }
 12310              		.loc 20 2024 16 view .LVU3466
 12311 002e 7047     		bx	lr
 12312              	.LVL788:
 12313              	.L665:
2019:Veno-Echo.cpp ****     }
 12314              		.loc 20 2019 16 view .LVU3467
 12315 0030 9FED010A 		vldr.32	s0, .L667
 12316              	.LVL789:
2027:Veno-Echo.cpp **** }
 12317              		.loc 20 2027 5 is_stmt 1 view .LVU3468
2028:Veno-Echo.cpp **** 
 12318              		.loc 20 2028 1 is_stmt 0 view .LVU3469
 12319 0034 7047     		bx	lr
 12320              	.L668:
 12321 0036 00BF     		.align	2
 12322              	.L667:
 12323 0038 00000000 		.word	0
 12324              		.cfi_endproc
 12325              	.LFE4337:
 12327              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12328              		.align	1
 12329              		.p2align 2,,3
 12330              		.global	_Z16checkPickupStateffbb
 12331              		.syntax unified
 12332              		.thumb
 12333              		.thumb_func
 12334              		.fpu fpv5-d16
 12336              	_Z16checkPickupStateffbb:
 12337              	.LVL790:
 12338              	.LFB4338:
2032:Veno-Echo.cpp ****     bool retval{};
 12339              		.loc 20 2032 1 is_stmt 1 view -0
 12340              		.cfi_startproc
 12341              		@ args = 0, pretend = 0, frame = 0
 12342              		@ frame_needed = 0, uses_anonymous_args = 0
 12343              		@ link register save eliminated.
2033:Veno-Echo.cpp ****     
 12344              		.loc 20 2033 5 view .LVU3471
2035:Veno-Echo.cpp ****     {
 12345              		.loc 20 2035 5 view .LVU3472
 12346 0000 69B1     		cbz	r1, .L670
2037:Veno-Echo.cpp ****         {
 12347              		.loc 20 2037 9 view .LVU3473
 12348              	.LVL791:
 12349              	.LBB2277:
 12350              	.LBI2277:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12351              		.loc 21 75 3 view .LVU3474
 12352              	.LBB2278:
 12353              		.loc 21 76 5 view .LVU3475
 12354              		.loc 21 76 5 is_stmt 0 view .LVU3476
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 372


 12355              	.LBE2278:
 12356              	.LBE2277:
2037:Veno-Echo.cpp ****         {
 12357              		.loc 20 2037 15 view .LVU3477
 12358 0002 70EE600A 		vsub.f32	s1, s0, s1
 12359              	.LVL792:
2037:Veno-Echo.cpp ****         {
 12360              		.loc 20 2037 9 view .LVU3478
 12361 0006 DFED0D7A 		vldr.32	s15, .L673
 12362              	.LBB2280:
 12363              	.LBB2279:
 12364              		.loc 21 76 31 view .LVU3479
 12365 000a B0EEE00A 		vabs.f32	s0, s1
 12366              	.LVL793:
 12367              		.loc 21 76 31 view .LVU3480
 12368              	.LBE2279:
 12369              	.LBE2280:
2037:Veno-Echo.cpp ****         {
 12370              		.loc 20 2037 9 view .LVU3481
 12371 000e B4EEE70A 		vcmpe.f32	s0, s15
 12372 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12373 0016 D4BF     		ite	le
 12374 0018 0120     		movle	r0, #1
 12375              	.LVL794:
2037:Veno-Echo.cpp ****         {
 12376              		.loc 20 2037 9 view .LVU3482
 12377 001a 0020     		movgt	r0, #0
 12378 001c 7047     		bx	lr
 12379              	.LVL795:
 12380              	.L670:
2049:Veno-Echo.cpp ****     {
 12381              		.loc 20 2049 5 is_stmt 1 view .LVU3483
 12382 001e 60B9     		cbnz	r0, .L671
2051:Veno-Echo.cpp ****         {
 12383              		.loc 20 2051 9 view .LVU3484
 12384              	.LVL796:
 12385              	.LBB2281:
 12386              	.LBI2281:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12387              		.loc 21 75 3 view .LVU3485
 12388              	.LBB2282:
 12389              		.loc 21 76 5 view .LVU3486
 12390              		.loc 21 76 5 is_stmt 0 view .LVU3487
 12391              	.LBE2282:
 12392              	.LBE2281:
2051:Veno-Echo.cpp ****         {
 12393              		.loc 20 2051 15 view .LVU3488
 12394 0020 30EE600A 		vsub.f32	s0, s0, s1
 12395              	.LVL797:
2051:Veno-Echo.cpp ****         {
 12396              		.loc 20 2051 9 view .LVU3489
 12397 0024 DFED057A 		vldr.32	s15, .L673
 12398              	.LBB2284:
 12399              	.LBB2283:
 12400              		.loc 21 76 31 view .LVU3490
 12401 0028 B0EEC00A 		vabs.f32	s0, s0
 12402              	.LBE2283:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 373


 12403              	.LBE2284:
2051:Veno-Echo.cpp ****         {
 12404              		.loc 20 2051 9 view .LVU3491
 12405 002c B4EEE70A 		vcmpe.f32	s0, s15
 12406 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12407 0034 CCBF     		ite	gt
 12408 0036 0120     		movgt	r0, #1
 12409              	.LVL798:
2051:Veno-Echo.cpp ****         {
 12410              		.loc 20 2051 9 view .LVU3492
 12411 0038 0020     		movle	r0, #0
 12412              	.L671:
 12413              	.LVL799:
2068:Veno-Echo.cpp **** 
 12414              		.loc 20 2068 5 is_stmt 1 view .LVU3493
2070:Veno-Echo.cpp **** 
 12415              		.loc 20 2070 1 is_stmt 0 view .LVU3494
 12416 003a 7047     		bx	lr
 12417              	.L674:
 12418              		.align	2
 12419              	.L673:
 12420 003c 0AD7A33B 		.word	1000593162
 12421              		.cfi_endproc
 12422              	.LFE4338:
 12424              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12425              		.align	1
 12426              		.p2align 2,,3
 12427              		.global	_Z20checkPickupState_altff11pickupStateb
 12428              		.syntax unified
 12429              		.thumb
 12430              		.thumb_func
 12431              		.fpu fpv5-d16
 12433              	_Z20checkPickupState_altff11pickupStateb:
 12434              	.LVL800:
 12435              	.LFB4339:
2074:Veno-Echo.cpp ****     pickupState retval{};
 12436              		.loc 20 2074 1 is_stmt 1 view -0
 12437              		.cfi_startproc
 12438              		@ args = 0, pretend = 0, frame = 0
 12439              		@ frame_needed = 0, uses_anonymous_args = 0
 12440              		@ link register save eliminated.
2075:Veno-Echo.cpp **** 
 12441              		.loc 20 2075 5 view .LVU3496
2077:Veno-Echo.cpp ****     {
 12442              		.loc 20 2077 5 view .LVU3497
 12443 0000 A1B1     		cbz	r1, .L676
2079:Veno-Echo.cpp ****         {
 12444              		.loc 20 2079 9 view .LVU3498
2079:Veno-Echo.cpp ****         {
 12445              		.loc 20 2079 31 is_stmt 0 view .LVU3499
 12446 0002 DFED1A7A 		vldr.32	s15, .L693
 12447 0006 30EEE77A 		vsub.f32	s14, s1, s15
2079:Veno-Echo.cpp ****         {
 12448              		.loc 20 2079 9 view .LVU3500
 12449 000a B4EEC07A 		vcmpe.f32	s14, s0
 12450 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12451 0012 01DD     		ble	.L691
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 374


 12452 0014 0020     		movs	r0, #0
 12453              	.LVL801:
2079:Veno-Echo.cpp ****         {
 12454              		.loc 20 2079 9 view .LVU3501
 12455 0016 7047     		bx	lr
 12456              	.LVL802:
 12457              	.L691:
2084:Veno-Echo.cpp ****         {
 12458              		.loc 20 2084 14 is_stmt 1 view .LVU3502
2084:Veno-Echo.cpp ****         {
 12459              		.loc 20 2084 36 is_stmt 0 view .LVU3503
 12460 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12461              	.LVL803:
2084:Veno-Echo.cpp ****         {
 12462              		.loc 20 2084 14 view .LVU3504
 12463 001c F4EEC00A 		vcmpe.f32	s1, s0
 12464 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2091:Veno-Echo.cpp ****         }
 12465              		.loc 20 2091 20 view .LVU3505
 12466 0024 4CBF     		ite	mi
 12467 0026 0120     		movmi	r0, #1
 12468              	.LVL804:
2091:Veno-Echo.cpp ****         }
 12469              		.loc 20 2091 20 view .LVU3506
 12470 0028 0220     		movpl	r0, #2
 12471 002a 7047     		bx	lr
 12472              	.LVL805:
 12473              	.L676:
2097:Veno-Echo.cpp ****         {
 12474              		.loc 20 2097 9 is_stmt 1 view .LVU3507
 12475 002c 0128     		cmp	r0, #1
 12476 002e 04D0     		beq	.L679
 12477 0030 0228     		cmp	r0, #2
 12478 0032 01D0     		beq	.L677
 12479 0034 68B1     		cbz	r0, .L692
 12480 0036 0846     		mov	r0, r1
 12481              	.LVL806:
 12482              	.L677:
2118:Veno-Echo.cpp **** }
 12483              		.loc 20 2118 5 view .LVU3508
2119:Veno-Echo.cpp **** 
 12484              		.loc 20 2119 1 is_stmt 0 view .LVU3509
 12485 0038 7047     		bx	lr
 12486              	.LVL807:
 12487              	.L679:
2106:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12488              		.loc 20 2106 13 is_stmt 1 view .LVU3510
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12489              		.loc 20 2107 13 view .LVU3511
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12490              		.loc 20 2107 35 is_stmt 0 view .LVU3512
 12491 003a DFED0C7A 		vldr.32	s15, .L693
 12492 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12493              	.LVL808:
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12494              		.loc 20 2107 13 view .LVU3513
 12495 0042 F4EEC00A 		vcmpe.f32	s1, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 375


 12496 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12497 004a CCBF     		ite	gt
 12498 004c 0220     		movgt	r0, #2
 12499              	.LVL809:
2107:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12500              		.loc 20 2107 13 view .LVU3514
 12501 004e 0120     		movle	r0, #1
 12502 0050 7047     		bx	lr
 12503              	.LVL810:
 12504              	.L692:
2099:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12505              		.loc 20 2099 13 is_stmt 1 view .LVU3515
2100:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12506              		.loc 20 2100 13 view .LVU3516
2100:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12507              		.loc 20 2100 35 is_stmt 0 view .LVU3517
 12508 0052 DFED067A 		vldr.32	s15, .L693
 12509 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12510              	.LVL811:
2100:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12511              		.loc 20 2100 13 view .LVU3518
 12512 005a F4EEC00A 		vcmpe.f32	s1, s0
 12513 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12514 0062 4CBF     		ite	mi
 12515 0064 0220     		movmi	r0, #2
 12516              	.LVL812:
2100:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12517              		.loc 20 2100 13 view .LVU3519
 12518 0066 0020     		movpl	r0, #0
 12519 0068 7047     		bx	lr
 12520              	.L694:
 12521 006a 00BF     		.align	2
 12522              	.L693:
 12523 006c 0AD7A33B 		.word	1000593162
 12524              		.cfi_endproc
 12525              	.LFE4339:
 12527              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12528              		.align	1
 12529              		.p2align 2,,3
 12530              		.global	_Z11GetTapRatio9TapRatios
 12531              		.syntax unified
 12532              		.thumb
 12533              		.thumb_func
 12534              		.fpu fpv5-d16
 12536              	_Z11GetTapRatio9TapRatios:
 12537              	.LVL813:
 12538              	.LFB4340:
2122:Veno-Echo.cpp **** double retVal{};
 12539              		.loc 20 2122 1 is_stmt 1 view -0
 12540              		.cfi_startproc
 12541              		@ args = 0, pretend = 0, frame = 0
 12542              		@ frame_needed = 0, uses_anonymous_args = 0
 12543              		@ link register save eliminated.
2123:Veno-Echo.cpp ****     switch(ratio)
 12544              		.loc 20 2123 1 view .LVU3521
2124:Veno-Echo.cpp ****     {
 12545              		.loc 20 2124 5 view .LVU3522
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 376


 12546 0000 0138     		subs	r0, r0, #1
 12547              	.LVL814:
2124:Veno-Echo.cpp ****     {
 12548              		.loc 20 2124 5 is_stmt 0 view .LVU3523
 12549 0002 C0B2     		uxtb	r0, r0
 12550 0004 0228     		cmp	r0, #2
 12551 0006 05D8     		bhi	.L697
 12552 0008 044B     		ldr	r3, .L698
 12553 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12554 000e 90ED000B 		vldr.64	d0, [r0]
 12555 0012 7047     		bx	lr
 12556              	.L697:
2122:Veno-Echo.cpp **** double retVal{};
 12557              		.loc 20 2122 1 view .LVU3524
 12558 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12559              	.LVL815:
 12560              		.loc 20 2147 1 is_stmt 1 view .LVU3525
2148:Veno-Echo.cpp **** }
 12561              		.loc 20 2148 1 is_stmt 0 view .LVU3526
 12562 0018 7047     		bx	lr
 12563              	.L699:
 12564 001a 00BF     		.align	2
 12565              	.L698:
 12566 001c 00000000 		.word	.LANCHOR25
 12567              		.cfi_endproc
 12568              	.LFE4340:
 12570              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12571              		.align	1
 12572              		.p2align 2,,3
 12573              		.syntax unified
 12574              		.thumb
 12575              		.thumb_func
 12576              		.fpu fpv5-d16
 12578              	_GLOBAL__sub_I_delMemsL:
 12579              	.LFB4919:
 12580              		.loc 20 2148 1 is_stmt 1 view -0
 12581              		.cfi_startproc
 12582              		@ args = 0, pretend = 0, frame = 0
 12583              		@ frame_needed = 0, uses_anonymous_args = 0
 12584              	.LBB2437:
 12585              	.LBI2437:
 12586              		.loc 20 2148 1 view .LVU3528
 12587              	.LVL816:
 12588              	.LBB2438:
 12589              	.LBB2439:
 12590              	.LBI2439:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12591              		.loc 3 21 5 view .LVU3529
 12592              	.LBB2440:
 12593              	.LBB2441:
 12594              	.LBI2441:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12595              		.loc 7 36 5 view .LVU3530
 12596              	.LBE2441:
 12597              	.LBE2440:
 12598              	.LBE2439:
 12599              	.LBE2438:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 377


 12600              	.LBE2437:
 12601              		.loc 20 2148 1 is_stmt 0 view .LVU3531
 12602 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12603              		.cfi_def_cfa_offset 24
 12604              		.cfi_offset 4, -24
 12605              		.cfi_offset 5, -20
 12606              		.cfi_offset 6, -16
 12607              		.cfi_offset 7, -12
 12608              		.cfi_offset 8, -8
 12609              		.cfi_offset 14, -4
 12610              	.LBB2561:
 12611              	.LBB2557:
 12612              	.LBB2456:
 12613              	.LBB2454:
 12614              	.LBB2446:
 12615              	.LBB2442:
 12616              	.LBB2443:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12617              		.loc 7 36 35 view .LVU3532
 12618 0004 9748     		ldr	r0, .L702
 12619 0006 0026     		movs	r6, #0
 12620              	.LBE2443:
 12621              	.LBE2442:
 12622              	.LBE2446:
 12623              	.LBE2454:
 12624              	.LBE2456:
 12625              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 378


  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12626              		.loc 26 33 18 view .LVU3533
 12627 0008 974C     		ldr	r4, .L702+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12628              		.loc 20 40 12 view .LVU3534
 12629 000a 984D     		ldr	r5, .L702+8
 12630              		.loc 26 33 18 view .LVU3535
 12631 000c 2246     		mov	r2, r4
 12632 000e 9849     		ldr	r1, .L702+12
 12633              	.LBB2457:
 12634              	.LBB2455:
 12635              	.LBB2447:
 12636              	.LBB2445:
 12637              	.LBB2444:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12638              		.loc 7 36 35 view .LVU3536
 12639 0010 4661     		str	r6, [r0, #20]
 12640              	.LVL817:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12641              		.loc 7 36 35 view .LVU3537
 12642              	.LBE2444:
 12643              	.LBE2445:
 12644              	.LBE2447:
 12645              	.LBB2448:
 12646              	.LBI2448:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12647              		.loc 6 84 5 is_stmt 1 view .LVU3538
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12648              		.loc 6 84 5 is_stmt 0 view .LVU3539
 12649              	.LBE2448:
 12650              	.LBB2449:
 12651              	.LBI2449:
 12652              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 379


  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 380


  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12653              		.loc 27 83 5 is_stmt 1 view .LVU3540
 12654              	.LBB2450:
 12655              	.LBB2451:
 12656              		.loc 27 83 33 is_stmt 0 view .LVU3541
 12657 0012 0662     		str	r6, [r0, #32]
 12658              	.LVL818:
 12659              		.loc 27 83 33 view .LVU3542
 12660              	.LBE2451:
 12661              	.LBE2450:
 12662              	.LBE2449:
 12663              	.LBB2452:
 12664              	.LBI2452:
  40:../libdaisy/src/hid/usb.h **** 
 12665              		.loc 5 40 5 is_stmt 1 view .LVU3543
  40:../libdaisy/src/hid/usb.h **** 
 12666              		.loc 5 40 5 is_stmt 0 view .LVU3544
 12667              	.LBE2452:
 12668              	.LBB2453:
 12669              	.LBI2453:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12670              		.loc 4 56 5 is_stmt 1 view .LVU3545
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12671              		.loc 4 56 5 is_stmt 0 view .LVU3546
 12672              	.LBE2453:
 12673              	.LBE2455:
 12674              	.LBE2457:
 12675              		.loc 26 33 18 view .LVU3547
 12676 0014 FFF7FEFF 		bl	__aeabi_atexit
 12677              	.LVL819:
 12678              	.LBB2458:
 12679              	.LBI2458:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12680              		.loc 10 21 5 is_stmt 1 view .LVU3548
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12681              		.loc 10 21 5 is_stmt 0 view .LVU3549
 12682              	.LBE2458:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12683              		.loc 20 40 12 view .LVU3550
 12684 0018 2246     		mov	r2, r4
 12685 001a 2946     		mov	r1, r5
 12686 001c 9548     		ldr	r0, .L702+16
 12687 001e FFF7FEFF 		bl	__aeabi_atexit
 12688              	.LVL820:
 12689              	.LBB2459:
 12690              	.LBI2459:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12691              		.loc 10 21 5 is_stmt 1 view .LVU3551
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12692              		.loc 10 21 5 is_stmt 0 view .LVU3552
 12693              	.LBE2459:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12694              		.loc 20 41 12 view .LVU3553
 12695 0022 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 381


 12696 0024 2946     		mov	r1, r5
 12697 0026 9448     		ldr	r0, .L702+20
 12698 0028 FFF7FEFF 		bl	__aeabi_atexit
 12699              	.LVL821:
 12700              	.LBB2460:
 12701              	.LBI2460:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12702              		.loc 10 21 5 is_stmt 1 view .LVU3554
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12703              		.loc 10 21 5 is_stmt 0 view .LVU3555
 12704              	.LBE2460:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12705              		.loc 20 42 12 view .LVU3556
 12706 002c 2246     		mov	r2, r4
 12707 002e 2946     		mov	r1, r5
 12708 0030 9248     		ldr	r0, .L702+24
 12709 0032 FFF7FEFF 		bl	__aeabi_atexit
 12710              	.LVL822:
 12711              	.LBB2461:
 12712              	.LBI2461:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12713              		.loc 10 21 5 is_stmt 1 view .LVU3557
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12714              		.loc 10 21 5 is_stmt 0 view .LVU3558
 12715              	.LBE2461:
  43:Veno-Echo.cpp **** 
 12716              		.loc 20 43 12 view .LVU3559
 12717 0036 2246     		mov	r2, r4
 12718 0038 2946     		mov	r1, r5
 12719 003a 9148     		ldr	r0, .L702+28
 12720 003c FFF7FEFF 		bl	__aeabi_atexit
 12721              	.LVL823:
 12722              	.LBB2462:
 12723              	.LBI2462:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12724              		.loc 10 21 5 is_stmt 1 view .LVU3560
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12725              		.loc 10 21 5 is_stmt 0 view .LVU3561
 12726              	.LBE2462:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12727              		.loc 20 45 12 view .LVU3562
 12728 0040 2246     		mov	r2, r4
 12729 0042 2946     		mov	r1, r5
 12730 0044 8F48     		ldr	r0, .L702+32
 12731 0046 FFF7FEFF 		bl	__aeabi_atexit
 12732              	.LVL824:
 12733              	.LBB2463:
 12734              	.LBI2463:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12735              		.loc 10 21 5 is_stmt 1 view .LVU3563
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12736              		.loc 10 21 5 is_stmt 0 view .LVU3564
 12737              	.LBE2463:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12738              		.loc 20 46 12 view .LVU3565
 12739 004a 2246     		mov	r2, r4
 12740 004c 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 382


 12741 004e 8E48     		ldr	r0, .L702+36
 12742 0050 FFF7FEFF 		bl	__aeabi_atexit
 12743              	.LVL825:
 12744              	.LBB2464:
 12745              	.LBI2464:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12746              		.loc 10 21 5 is_stmt 1 view .LVU3566
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12747              		.loc 10 21 5 is_stmt 0 view .LVU3567
 12748              	.LBE2464:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12749              		.loc 20 47 12 view .LVU3568
 12750 0054 2246     		mov	r2, r4
 12751 0056 2946     		mov	r1, r5
 12752 0058 8C48     		ldr	r0, .L702+40
 12753 005a FFF7FEFF 		bl	__aeabi_atexit
 12754              	.LVL826:
 12755              	.LBB2465:
 12756              	.LBI2465:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12757              		.loc 10 21 5 is_stmt 1 view .LVU3569
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12758              		.loc 10 21 5 is_stmt 0 view .LVU3570
 12759              	.LBE2465:
  48:Veno-Echo.cpp **** 
 12760              		.loc 20 48 12 view .LVU3571
 12761 005e 2246     		mov	r2, r4
 12762 0060 2946     		mov	r1, r5
 12763 0062 8B48     		ldr	r0, .L702+44
 12764 0064 FFF7FEFF 		bl	__aeabi_atexit
 12765              	.LVL827:
 12766              	.LBB2466:
 12767              	.LBI2466:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12768              		.loc 9 15 5 is_stmt 1 view .LVU3572
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12769              		.loc 9 15 5 is_stmt 0 view .LVU3573
 12770              	.LBE2466:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12771              		.loc 20 50 19 view .LVU3574
 12772 0068 2246     		mov	r2, r4
 12773 006a 8A49     		ldr	r1, .L702+48
 12774              	.LBB2467:
 12775              	.LBB2468:
 12776              	.LBB2469:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12777              		.loc 12 45 13 view .LVU3575
 12778 006c 0025     		movs	r5, #0
 12779              	.LBE2469:
 12780              	.LBE2468:
 12781              	.LBE2467:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12782              		.loc 20 50 19 view .LVU3576
 12783 006e 8A48     		ldr	r0, .L702+52
 12784 0070 FFF7FEFF 		bl	__aeabi_atexit
 12785              	.LVL828:
 12786              	.LBB2474:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 383


 12787              	.LBI2467:
  43:envFollow.h   ****     {
 12788              		.loc 12 43 5 is_stmt 1 view .LVU3577
 12789              	.LBB2472:
 12790              	.LBB2470:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12791              		.loc 12 45 9 view .LVU3578
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12792              		.loc 12 48 11 is_stmt 0 view .LVU3579
 12793 0074 894F     		ldr	r7, .L702+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12794              		.loc 12 45 13 view .LVU3580
 12795 0076 8A48     		ldr	r0, .L702+60
 12796              	.LBE2470:
 12797              	.LBE2472:
 12798              	.LBE2474:
  51:Veno-Echo.cpp **** 
 12799              		.loc 20 51 18 view .LVU3581
 12800 0078 2246     		mov	r2, r4
 12801 007a 8A49     		ldr	r1, .L702+64
 12802              	.LBB2475:
 12803              	.LBB2473:
 12804              	.LBB2471:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12805              		.loc 12 45 13 view .LVU3582
 12806 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12807              		.loc 12 46 9 is_stmt 1 view .LVU3583
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12808              		.loc 12 46 20 is_stmt 0 view .LVU3584
 12809 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12810              		.loc 12 47 9 is_stmt 1 view .LVU3585
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12811              		.loc 12 47 17 is_stmt 0 view .LVU3586
 12812 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12813              		.loc 12 48 9 is_stmt 1 view .LVU3587
  50:envFollow.h   ****     }  
 12814              		.loc 12 50 21 is_stmt 0 view .LVU3588
 12815 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12816              		.loc 12 48 11 view .LVU3589
 12817 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12818              		.loc 12 49 9 is_stmt 1 view .LVU3590
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12819              		.loc 12 49 15 is_stmt 0 view .LVU3591
 12820 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12821              		.loc 12 50 9 is_stmt 1 view .LVU3592
 12822              	.LVL829:
  50:envFollow.h   ****     }  
 12823              		.loc 12 50 9 is_stmt 0 view .LVU3593
 12824              	.LBE2471:
 12825              	.LBE2473:
 12826              	.LBE2475:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 384


  51:Veno-Echo.cpp **** 
 12827              		.loc 20 51 18 view .LVU3594
 12828 0088 FFF7FEFF 		bl	__aeabi_atexit
 12829              	.LVL830:
 12830              	.LBB2476:
 12831              	.LBI2476:
  43:envFollow.h   ****     {
 12832              		.loc 12 43 5 is_stmt 1 view .LVU3595
 12833              	.LBB2477:
 12834              	.LBB2478:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12835              		.loc 12 45 9 view .LVU3596
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12836              		.loc 12 45 13 is_stmt 0 view .LVU3597
 12837 008c 8648     		ldr	r0, .L702+68
 12838              	.LBE2478:
 12839              	.LBE2477:
 12840              	.LBE2476:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12841              		.loc 20 56 76 view .LVU3598
 12842 008e DFF8D882 		ldr	r8, .L702+260
  51:Veno-Echo.cpp **** 
 12843              		.loc 20 51 27 view .LVU3599
 12844 0092 2246     		mov	r2, r4
 12845 0094 8349     		ldr	r1, .L702+64
 12846              	.LBB2481:
 12847              	.LBB2480:
 12848              	.LBB2479:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12849              		.loc 12 45 13 view .LVU3600
 12850 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12851              		.loc 12 46 9 is_stmt 1 view .LVU3601
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12852              		.loc 12 46 20 is_stmt 0 view .LVU3602
 12853 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12854              		.loc 12 47 9 is_stmt 1 view .LVU3603
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12855              		.loc 12 47 17 is_stmt 0 view .LVU3604
 12856 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12857              		.loc 12 48 9 is_stmt 1 view .LVU3605
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12858              		.loc 12 48 11 is_stmt 0 view .LVU3606
 12859 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12860              		.loc 12 49 9 is_stmt 1 view .LVU3607
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12861              		.loc 12 49 15 is_stmt 0 view .LVU3608
 12862 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12863              		.loc 12 50 9 is_stmt 1 view .LVU3609
  50:envFollow.h   ****     }  
 12864              		.loc 12 50 21 is_stmt 0 view .LVU3610
 12865 00a0 8560     		str	r5, [r0, #8]	@ float
 12866              	.LVL831:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 385


  50:envFollow.h   ****     }  
 12867              		.loc 12 50 21 view .LVU3611
 12868              	.LBE2479:
 12869              	.LBE2480:
 12870              	.LBE2481:
  51:Veno-Echo.cpp **** 
 12871              		.loc 20 51 27 view .LVU3612
 12872 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12873              	.LVL832:
 12874              	.LBB2482:
 12875              	.LBI2482:
  48:delayline_multitap.h ****     {
 12876              		.loc 18 48 5 is_stmt 1 view .LVU3613
  48:delayline_multitap.h ****     {
 12877              		.loc 18 48 5 is_stmt 0 view .LVU3614
 12878              	.LBE2482:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12879              		.loc 20 59 80 view .LVU3615
 12880 00a6 814D     		ldr	r5, .L702+72
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12881              		.loc 20 56 76 view .LVU3616
 12882 00a8 2246     		mov	r2, r4
 12883 00aa 4146     		mov	r1, r8
 12884 00ac 8048     		ldr	r0, .L702+76
 12885 00ae FFF7FEFF 		bl	__aeabi_atexit
 12886              	.LVL833:
 12887              	.LBB2483:
 12888              	.LBI2483:
  48:delayline_multitap.h ****     {
 12889              		.loc 18 48 5 is_stmt 1 view .LVU3617
  48:delayline_multitap.h ****     {
 12890              		.loc 18 48 5 is_stmt 0 view .LVU3618
 12891              	.LBE2483:
  57:Veno-Echo.cpp **** 
 12892              		.loc 20 57 76 view .LVU3619
 12893 00b2 2246     		mov	r2, r4
 12894 00b4 4146     		mov	r1, r8
 12895 00b6 7F48     		ldr	r0, .L702+80
 12896 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12897              	.LVL834:
 12898              	.LBB2484:
 12899              	.LBI2484:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12900              		.loc 19 38 5 is_stmt 1 view .LVU3620
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12901              		.loc 19 38 5 is_stmt 0 view .LVU3621
 12902              	.LBE2484:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12903              		.loc 20 98 12 view .LVU3622
 12904 00bc 7E4F     		ldr	r7, .L702+84
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12905              		.loc 20 59 80 view .LVU3623
 12906 00be 2246     		mov	r2, r4
 12907 00c0 2946     		mov	r1, r5
 12908 00c2 7E48     		ldr	r0, .L702+88
 12909 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12910              	.LVL835:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 386


 12911              	.LBB2485:
 12912              	.LBI2485:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12913              		.loc 19 38 5 is_stmt 1 view .LVU3624
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12914              		.loc 19 38 5 is_stmt 0 view .LVU3625
 12915              	.LBE2485:
  60:Veno-Echo.cpp **** 
 12916              		.loc 20 60 80 view .LVU3626
 12917 00c8 2246     		mov	r2, r4
 12918 00ca 2946     		mov	r1, r5
 12919 00cc 7C48     		ldr	r0, .L702+92
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12920              		.loc 20 102 11 view .LVU3627
 12921 00ce 7D4D     		ldr	r5, .L702+96
  60:Veno-Echo.cpp **** 
 12922              		.loc 20 60 80 view .LVU3628
 12923 00d0 FFF7FEFF 		bl	__aeabi_atexit
 12924              	.LVL836:
 12925              	.LBB2486:
 12926              	.LBI2486:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12927              		.loc 17 49 1 is_stmt 1 view .LVU3629
 12928              	.LBB2487:
 12929              	.LBB2488:
 12930              	.LBI2488:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12931              		.loc 14 47 1 view .LVU3630
 12932              	.LBB2489:
 12933              	.LBB2490:
 12934              	.LBI2490:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12935              		.loc 16 24 5 view .LVU3631
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12936              		.loc 16 24 5 is_stmt 0 view .LVU3632
 12937              	.LBE2490:
 12938              	.LBB2491:
 12939              	.LBI2491:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12940              		.loc 15 15 5 is_stmt 1 view .LVU3633
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12941              		.loc 15 15 5 is_stmt 0 view .LVU3634
 12942              	.LBE2491:
 12943              	.LBE2489:
 12944              	.LBE2488:
 12945              	.LBE2487:
 12946              	.LBE2486:
 12947              	.LBE2557:
 12948              	.LBE2561:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12949              		.loc 17 49 14 is_stmt 1 view .LVU3635
  49:DelayMulti.h  **** ~DelayMulti() {}
 12950              		.loc 17 49 14 view .LVU3636
 12951              	.LBB2562:
 12952              	.LBB2558:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12953              		.loc 20 98 12 is_stmt 0 view .LVU3637
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 387


 12954 00d4 2246     		mov	r2, r4
 12955 00d6 3946     		mov	r1, r7
 12956 00d8 7B48     		ldr	r0, .L702+100
 12957 00da FFF7FEFF 		bl	__aeabi_atexit
 12958              	.LVL837:
 12959              	.LBB2492:
 12960              	.LBI2492:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12961              		.loc 17 49 1 is_stmt 1 view .LVU3638
 12962              	.LBB2493:
 12963              	.LBB2494:
 12964              	.LBI2494:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12965              		.loc 14 47 1 view .LVU3639
 12966              	.LBB2495:
 12967              	.LBB2496:
 12968              	.LBI2496:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12969              		.loc 16 24 5 view .LVU3640
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12970              		.loc 16 24 5 is_stmt 0 view .LVU3641
 12971              	.LBE2496:
 12972              	.LBB2497:
 12973              	.LBI2497:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12974              		.loc 15 15 5 is_stmt 1 view .LVU3642
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12975              		.loc 15 15 5 is_stmt 0 view .LVU3643
 12976              	.LBE2497:
 12977              	.LBE2495:
 12978              	.LBE2494:
 12979              	.LBE2493:
 12980              	.LBE2492:
 12981              	.LBE2558:
 12982              	.LBE2562:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12983              		.loc 17 49 14 is_stmt 1 view .LVU3644
  49:DelayMulti.h  **** ~DelayMulti() {}
 12984              		.loc 17 49 14 view .LVU3645
 12985              	.LBB2563:
 12986              	.LBB2559:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12987              		.loc 20 98 19 is_stmt 0 view .LVU3646
 12988 00de 2246     		mov	r2, r4
 12989 00e0 3946     		mov	r1, r7
 12990 00e2 7A48     		ldr	r0, .L702+104
 12991 00e4 FFF7FEFF 		bl	__aeabi_atexit
 12992              	.LVL838:
 12993              	.LBB2498:
 12994              	.LBI2498:
  78:LEDs.h        ****     ~ButtonLED() {}
 12995              		.loc 14 78 5 is_stmt 1 view .LVU3647
 12996              	.LBB2499:
 12997              	.LBB2500:
 12998              	.LBI2500:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12999              		.loc 1 40 5 view .LVU3648
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 388


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13000              		.loc 1 40 5 is_stmt 0 view .LVU3649
 13001              	.LBE2500:
 13002              	.LBB2501:
 13003              	.LBI2501:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13004              		.loc 16 24 5 is_stmt 1 view .LVU3650
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13005              		.loc 16 24 5 is_stmt 0 view .LVU3651
 13006              	.LBE2501:
 13007              	.LBE2499:
 13008              	.LBE2498:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13009              		.loc 20 102 11 view .LVU3652
 13010 00e8 2246     		mov	r2, r4
 13011 00ea 2946     		mov	r1, r5
 13012 00ec 7848     		ldr	r0, .L702+108
 13013 00ee FFF7FEFF 		bl	__aeabi_atexit
 13014              	.LVL839:
 13015              	.LBB2502:
 13016              	.LBI2502:
  78:LEDs.h        ****     ~ButtonLED() {}
 13017              		.loc 14 78 5 is_stmt 1 view .LVU3653
 13018              	.LBB2503:
 13019              	.LBB2504:
 13020              	.LBI2504:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13021              		.loc 1 40 5 view .LVU3654
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13022              		.loc 1 40 5 is_stmt 0 view .LVU3655
 13023              	.LBE2504:
 13024              	.LBB2505:
 13025              	.LBI2505:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13026              		.loc 16 24 5 is_stmt 1 view .LVU3656
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13027              		.loc 16 24 5 is_stmt 0 view .LVU3657
 13028              	.LBE2505:
 13029              	.LBE2503:
 13030              	.LBE2502:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13031              		.loc 20 102 18 view .LVU3658
 13032 00f2 2246     		mov	r2, r4
 13033 00f4 2946     		mov	r1, r5
 13034 00f6 7748     		ldr	r0, .L702+112
 13035 00f8 FFF7FEFF 		bl	__aeabi_atexit
 13036              	.LVL840:
 13037              	.LBB2506:
 13038              	.LBI2506:
  78:LEDs.h        ****     ~ButtonLED() {}
 13039              		.loc 14 78 5 is_stmt 1 view .LVU3659
 13040              	.LBB2507:
 13041              	.LBB2508:
 13042              	.LBI2508:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13043              		.loc 1 40 5 view .LVU3660
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 389


 13044              		.loc 1 40 5 is_stmt 0 view .LVU3661
 13045              	.LBE2508:
 13046              	.LBB2509:
 13047              	.LBI2509:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13048              		.loc 16 24 5 is_stmt 1 view .LVU3662
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13049              		.loc 16 24 5 is_stmt 0 view .LVU3663
 13050              	.LBE2509:
 13051              	.LBE2507:
 13052              	.LBE2506:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13053              		.loc 20 102 25 view .LVU3664
 13054 00fc 2246     		mov	r2, r4
 13055 00fe 2946     		mov	r1, r5
 13056 0100 7548     		ldr	r0, .L702+116
 13057 0102 FFF7FEFF 		bl	__aeabi_atexit
 13058              	.LVL841:
 13059              	.LBB2510:
 13060              	.LBI2510:
  78:LEDs.h        ****     ~ButtonLED() {}
 13061              		.loc 14 78 5 is_stmt 1 view .LVU3665
 13062              	.LBB2511:
 13063              	.LBB2512:
 13064              	.LBI2512:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13065              		.loc 1 40 5 view .LVU3666
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13066              		.loc 1 40 5 is_stmt 0 view .LVU3667
 13067              	.LBE2512:
 13068              	.LBB2513:
 13069              	.LBI2513:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13070              		.loc 16 24 5 is_stmt 1 view .LVU3668
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13071              		.loc 16 24 5 is_stmt 0 view .LVU3669
 13072              	.LBE2513:
 13073              	.LBE2511:
 13074              	.LBE2510:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13075              		.loc 20 102 34 view .LVU3670
 13076 0106 2246     		mov	r2, r4
 13077 0108 2946     		mov	r1, r5
 13078 010a 7448     		ldr	r0, .L702+120
 13079 010c FFF7FEFF 		bl	__aeabi_atexit
 13080              	.LVL842:
 13081              	.LBB2514:
 13082              	.LBI2514:
  78:LEDs.h        ****     ~ButtonLED() {}
 13083              		.loc 14 78 5 is_stmt 1 view .LVU3671
 13084              	.LBB2515:
 13085              	.LBB2516:
 13086              	.LBI2516:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13087              		.loc 1 40 5 view .LVU3672
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13088              		.loc 1 40 5 is_stmt 0 view .LVU3673
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 390


 13089              	.LBE2516:
 13090              	.LBB2517:
 13091              	.LBI2517:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13092              		.loc 16 24 5 is_stmt 1 view .LVU3674
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13093              		.loc 16 24 5 is_stmt 0 view .LVU3675
 13094              	.LBE2517:
 13095              	.LBE2515:
 13096              	.LBE2514:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13097              		.loc 20 150 13 view .LVU3676
 13098 0110 734F     		ldr	r7, .L702+124
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13099              		.loc 20 102 44 view .LVU3677
 13100 0112 2246     		mov	r2, r4
 13101 0114 2946     		mov	r1, r5
 13102 0116 7348     		ldr	r0, .L702+128
 13103 0118 FFF7FEFF 		bl	__aeabi_atexit
 13104              	.LVL843:
 13105              	.LBB2518:
 13106              	.LBI2518:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13107              		.loc 14 47 1 is_stmt 1 view .LVU3678
 13108              	.LBB2519:
 13109              	.LBB2520:
 13110              	.LBI2520:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13111              		.loc 16 24 5 view .LVU3679
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13112              		.loc 16 24 5 is_stmt 0 view .LVU3680
 13113              	.LBE2520:
 13114              	.LBB2521:
 13115              	.LBI2521:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13116              		.loc 15 15 5 is_stmt 1 view .LVU3681
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13117              		.loc 15 15 5 is_stmt 0 view .LVU3682
 13118              	.LBE2521:
 13119              	.LBE2519:
 13120              	.LBE2518:
 103:Veno-Echo.cpp **** 
 13121              		.loc 20 103 10 view .LVU3683
 13122 011c 2246     		mov	r2, r4
 13123 011e 7249     		ldr	r1, .L702+132
 13124 0120 7248     		ldr	r0, .L702+136
 13125 0122 FFF7FEFF 		bl	__aeabi_atexit
 13126              	.LVL844:
 13127              	.LBB2522:
 13128              	.LBI2522:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13129              		.loc 8 38 5 is_stmt 1 view .LVU3684
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13130              		.loc 8 38 5 is_stmt 0 view .LVU3685
 13131              	.LBE2522:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13132              		.loc 20 150 13 view .LVU3686
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 391


 13133 0126 2246     		mov	r2, r4
 13134 0128 3946     		mov	r1, r7
 13135 012a 7148     		ldr	r0, .L702+140
 13136 012c FFF7FEFF 		bl	__aeabi_atexit
 13137              	.LVL845:
 13138              	.LBB2523:
 13139              	.LBI2523:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13140              		.loc 8 38 5 is_stmt 1 view .LVU3687
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13141              		.loc 8 38 5 is_stmt 0 view .LVU3688
 13142              	.LBE2523:
 151:Veno-Echo.cpp **** 
 13143              		.loc 20 151 13 view .LVU3689
 13144 0130 2246     		mov	r2, r4
 13145 0132 3946     		mov	r1, r7
 13146 0134 6F48     		ldr	r0, .L702+144
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13147              		.loc 20 156 18 view .LVU3690
 13148 0136 704D     		ldr	r5, .L702+148
 151:Veno-Echo.cpp **** 
 13149              		.loc 20 151 13 view .LVU3691
 13150 0138 FFF7FEFF 		bl	__aeabi_atexit
 13151              	.LVL846:
 13152              	.LBB2524:
 13153              	.LBI2524:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13154              		.loc 8 38 5 is_stmt 1 view .LVU3692
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13155              		.loc 8 38 5 is_stmt 0 view .LVU3693
 13156              	.LBE2524:
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 13157              		.loc 20 153 13 view .LVU3694
 13158 013c 2246     		mov	r2, r4
 13159 013e 3946     		mov	r1, r7
 13160 0140 6E48     		ldr	r0, .L702+152
 13161 0142 FFF7FEFF 		bl	__aeabi_atexit
 13162              	.LVL847:
 13163              	.LBB2525:
 13164              	.LBI2525:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13165              		.loc 8 38 5 is_stmt 1 view .LVU3695
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13166              		.loc 8 38 5 is_stmt 0 view .LVU3696
 13167              	.LBE2525:
 154:Veno-Echo.cpp **** 
 13168              		.loc 20 154 13 view .LVU3697
 13169 0146 2246     		mov	r2, r4
 13170 0148 3946     		mov	r1, r7
 13171 014a 6D48     		ldr	r0, .L702+156
 13172 014c FFF7FEFF 		bl	__aeabi_atexit
 13173              	.LVL848:
 13174              	.LBB2526:
 13175              	.LBI2526:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13176              		.loc 11 36 5 is_stmt 1 view .LVU3698
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 392


 13177              		.loc 11 36 5 is_stmt 0 view .LVU3699
 13178              	.LBE2526:
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13179              		.loc 20 156 18 view .LVU3700
 13180 0150 2246     		mov	r2, r4
 13181 0152 2946     		mov	r1, r5
 13182 0154 6B48     		ldr	r0, .L702+160
 13183 0156 FFF7FEFF 		bl	__aeabi_atexit
 13184              	.LVL849:
 13185              	.LBB2527:
 13186              	.LBI2527:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13187              		.loc 11 36 5 is_stmt 1 view .LVU3701
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13188              		.loc 11 36 5 is_stmt 0 view .LVU3702
 13189              	.LBE2527:
 157:Veno-Echo.cpp **** 
 13190              		.loc 20 157 18 view .LVU3703
 13191 015a 2246     		mov	r2, r4
 13192 015c 2946     		mov	r1, r5
 13193 015e 6A48     		ldr	r0, .L702+164
 13194 0160 FFF7FEFF 		bl	__aeabi_atexit
 13195              	.LVL850:
 13196              	.LBB2528:
 13197              	.LBI2528:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13198              		.loc 11 36 5 is_stmt 1 view .LVU3704
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13199              		.loc 11 36 5 is_stmt 0 view .LVU3705
 13200              	.LBE2528:
 159:Veno-Echo.cpp **** 
 13201              		.loc 20 159 18 view .LVU3706
 13202 0164 2246     		mov	r2, r4
 13203 0166 2946     		mov	r1, r5
 13204 0168 6848     		ldr	r0, .L702+168
 13205 016a FFF7FEFF 		bl	__aeabi_atexit
 13206              	.LVL851:
 13207              	.LBB2529:
 13208              	.LBI2529:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13209              		.loc 11 36 5 is_stmt 1 view .LVU3707
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13210              		.loc 11 36 5 is_stmt 0 view .LVU3708
 13211              	.LBE2529:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13212              		.loc 20 162 18 view .LVU3709
 13213 016e 2246     		mov	r2, r4
 13214 0170 2946     		mov	r1, r5
 13215 0172 6748     		ldr	r0, .L702+172
 13216 0174 FFF7FEFF 		bl	__aeabi_atexit
 13217              	.LVL852:
 13218              	.LBB2530:
 13219              	.LBI2530:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13220              		.loc 11 36 5 is_stmt 1 view .LVU3710
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13221              		.loc 11 36 5 is_stmt 0 view .LVU3711
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 393


 13222              	.LBE2530:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13223              		.loc 20 163 18 view .LVU3712
 13224 0178 2246     		mov	r2, r4
 13225 017a 2946     		mov	r1, r5
 13226 017c 6548     		ldr	r0, .L702+176
 13227 017e FFF7FEFF 		bl	__aeabi_atexit
 13228              	.LVL853:
 13229              	.LBB2531:
 13230              	.LBI2531:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13231              		.loc 11 36 5 is_stmt 1 view .LVU3713
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13232              		.loc 11 36 5 is_stmt 0 view .LVU3714
 13233              	.LBE2531:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13234              		.loc 20 164 18 view .LVU3715
 13235 0182 2246     		mov	r2, r4
 13236 0184 2946     		mov	r1, r5
 13237 0186 6448     		ldr	r0, .L702+180
 13238 0188 FFF7FEFF 		bl	__aeabi_atexit
 13239              	.LVL854:
 13240              	.LBB2532:
 13241              	.LBI2532:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13242              		.loc 11 36 5 is_stmt 1 view .LVU3716
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13243              		.loc 11 36 5 is_stmt 0 view .LVU3717
 13244              	.LBE2532:
 165:Veno-Echo.cpp **** 
 13245              		.loc 20 165 18 view .LVU3718
 13246 018c 2246     		mov	r2, r4
 13247 018e 2946     		mov	r1, r5
 13248 0190 6248     		ldr	r0, .L702+184
 13249 0192 FFF7FEFF 		bl	__aeabi_atexit
 13250              	.LVL855:
 13251              	.LBB2533:
 13252              	.LBI2533:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13253              		.loc 11 36 5 is_stmt 1 view .LVU3719
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13254              		.loc 11 36 5 is_stmt 0 view .LVU3720
 13255              	.LBE2533:
 168:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13256              		.loc 20 168 18 view .LVU3721
 13257 0196 2246     		mov	r2, r4
 13258 0198 2946     		mov	r1, r5
 13259 019a 6148     		ldr	r0, .L702+188
 13260 019c FFF7FEFF 		bl	__aeabi_atexit
 13261              	.LVL856:
 13262              	.LBB2534:
 13263              	.LBI2534:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13264              		.loc 11 36 5 is_stmt 1 view .LVU3722
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13265              		.loc 11 36 5 is_stmt 0 view .LVU3723
 13266              	.LBE2534:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 394


 169:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13267              		.loc 20 169 18 view .LVU3724
 13268 01a0 2246     		mov	r2, r4
 13269 01a2 2946     		mov	r1, r5
 13270 01a4 5F48     		ldr	r0, .L702+192
 13271 01a6 FFF7FEFF 		bl	__aeabi_atexit
 13272              	.LVL857:
 13273              	.LBB2535:
 13274              	.LBI2535:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13275              		.loc 11 36 5 is_stmt 1 view .LVU3725
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13276              		.loc 11 36 5 is_stmt 0 view .LVU3726
 13277              	.LBE2535:
 170:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13278              		.loc 20 170 18 view .LVU3727
 13279 01aa 2246     		mov	r2, r4
 13280 01ac 2946     		mov	r1, r5
 13281 01ae 5E48     		ldr	r0, .L702+196
 13282 01b0 FFF7FEFF 		bl	__aeabi_atexit
 13283              	.LVL858:
 13284              	.LBB2536:
 13285              	.LBI2536:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13286              		.loc 11 36 5 is_stmt 1 view .LVU3728
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13287              		.loc 11 36 5 is_stmt 0 view .LVU3729
 13288              	.LBE2536:
 171:Veno-Echo.cpp **** 
 13289              		.loc 20 171 18 view .LVU3730
 13290 01b4 2246     		mov	r2, r4
 13291 01b6 2946     		mov	r1, r5
 13292 01b8 5C48     		ldr	r0, .L702+200
 13293 01ba FFF7FEFF 		bl	__aeabi_atexit
 13294              	.LVL859:
 13295              	.LBB2537:
 13296              	.LBI2537:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13297              		.loc 11 36 5 is_stmt 1 view .LVU3731
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13298              		.loc 11 36 5 is_stmt 0 view .LVU3732
 13299              	.LBE2537:
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13300              		.loc 20 174 18 view .LVU3733
 13301 01be 2246     		mov	r2, r4
 13302 01c0 2946     		mov	r1, r5
 13303 01c2 5B48     		ldr	r0, .L702+204
 13304 01c4 FFF7FEFF 		bl	__aeabi_atexit
 13305              	.LVL860:
 13306              	.LBB2538:
 13307              	.LBI2538:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13308              		.loc 11 36 5 is_stmt 1 view .LVU3734
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13309              		.loc 11 36 5 is_stmt 0 view .LVU3735
 13310              	.LBE2538:
 175:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 395


 13311              		.loc 20 175 18 view .LVU3736
 13312 01c8 2246     		mov	r2, r4
 13313 01ca 2946     		mov	r1, r5
 13314 01cc 5948     		ldr	r0, .L702+208
 13315 01ce FFF7FEFF 		bl	__aeabi_atexit
 13316              	.LVL861:
 13317              	.LBB2539:
 13318              	.LBI2539:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13319              		.loc 11 36 5 is_stmt 1 view .LVU3737
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13320              		.loc 11 36 5 is_stmt 0 view .LVU3738
 13321              	.LBE2539:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13322              		.loc 20 181 8 view .LVU3739
 13323 01d2 594F     		ldr	r7, .L702+212
 177:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13324              		.loc 20 177 18 view .LVU3740
 13325 01d4 2246     		mov	r2, r4
 13326 01d6 2946     		mov	r1, r5
 13327 01d8 5848     		ldr	r0, .L702+216
 13328 01da FFF7FEFF 		bl	__aeabi_atexit
 13329              	.LVL862:
 13330              	.LBB2540:
 13331              	.LBI2540:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13332              		.loc 11 36 5 is_stmt 1 view .LVU3741
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13333              		.loc 11 36 5 is_stmt 0 view .LVU3742
 13334              	.LBE2540:
 178:Veno-Echo.cpp **** 
 13335              		.loc 20 178 18 view .LVU3743
 13336 01de 2246     		mov	r2, r4
 13337 01e0 2946     		mov	r1, r5
 13338 01e2 5748     		ldr	r0, .L702+220
 13339 01e4 FFF7FEFF 		bl	__aeabi_atexit
 13340              	.LVL863:
 13341              	.LBB2541:
 13342              	.LBI2541:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13343              		.loc 1 40 5 is_stmt 1 view .LVU3744
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13344              		.loc 1 40 5 is_stmt 0 view .LVU3745
 13345              	.LBE2541:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13346              		.loc 20 181 8 view .LVU3746
 13347 01e8 2246     		mov	r2, r4
 13348 01ea 3946     		mov	r1, r7
 13349 01ec 5548     		ldr	r0, .L702+224
 13350 01ee FFF7FEFF 		bl	__aeabi_atexit
 13351              	.LVL864:
 13352              	.LBB2542:
 13353              	.LBI2542:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13354              		.loc 1 40 5 is_stmt 1 view .LVU3747
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13355              		.loc 1 40 5 is_stmt 0 view .LVU3748
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 396


 13356              	.LBE2542:
 182:Veno-Echo.cpp **** 
 13357              		.loc 20 182 8 view .LVU3749
 13358 01f2 2246     		mov	r2, r4
 13359 01f4 3946     		mov	r1, r7
 13360 01f6 5448     		ldr	r0, .L702+228
 13361 01f8 FFF7FEFF 		bl	__aeabi_atexit
 13362              	.LVL865:
 13363              	.LBB2543:
 13364              	.LBI2543:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13365              		.loc 1 40 5 is_stmt 1 view .LVU3750
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13366              		.loc 1 40 5 is_stmt 0 view .LVU3751
 13367              	.LBE2543:
 185:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 13368              		.loc 20 185 8 view .LVU3752
 13369 01fc 2246     		mov	r2, r4
 13370 01fe 3946     		mov	r1, r7
 13371 0200 5248     		ldr	r0, .L702+232
 13372 0202 FFF7FEFF 		bl	__aeabi_atexit
 13373              	.LVL866:
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13374              		.loc 20 186 34 view .LVU3753
 13375 0206 0520     		movs	r0, #5
 13376 0208 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 13377              	.LVL867:
 13378 020c 504B     		ldr	r3, .L702+236
 13379 020e 0546     		mov	r5, r0	@ movhi
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13380              		.loc 20 187 8 view .LVU3754
 13381 0210 2246     		mov	r2, r4
 13382 0212 5049     		ldr	r1, .L702+240
 13383              	.LBB2544:
 13384              	.LBB2545:
 13385              	.LBB2546:
  55:taptempo.h    ****         clockLength_ = 0;
 13386              		.loc 13 55 19 view .LVU3755
 13387 0214 4FF07E57 		mov	r7, #1065353216
 13388              	.LBE2546:
 13389              	.LBE2545:
 13390              	.LBE2544:
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13391              		.loc 20 187 8 view .LVU3756
 13392 0218 4F48     		ldr	r0, .L702+244
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13393              		.loc 20 186 34 view .LVU3757
 13394 021a 1D80     		strh	r5, [r3]	@ movhi
 13395              	.LVL868:
 13396              	.LBB2553:
 13397              	.LBI2553:
  21:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13398              		.loc 2 21 5 is_stmt 1 view .LVU3758
  21:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13399              		.loc 2 21 5 is_stmt 0 view .LVU3759
 13400              	.LBE2553:
 187:Veno-Echo.cpp **** //Switch ClockIn;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 397


 13401              		.loc 20 187 8 view .LVU3760
 13402 021c FFF7FEFF 		bl	__aeabi_atexit
 13403              	.LVL869:
 13404              	.LBB2554:
 13405              	.LBI2544:
  45:taptempo.h    ****     {
 13406              		.loc 13 45 5 is_stmt 1 view .LVU3761
 13407              	.LBB2550:
 13408              	.LBB2547:
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13409              		.loc 13 47 9 view .LVU3762
  48:taptempo.h    ****         maxtap_ = 6000000;
 13410              		.loc 13 48 24 is_stmt 0 view .LVU3763
 13411 0220 DFF84881 		ldr	r8, .L702+264
  50:taptempo.h    ****         lastTapLength_ = 0;
 13412              		.loc 13 50 17 view .LVU3764
 13413 0224 44F6206E 		movw	lr, #20000
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13414              		.loc 13 47 18 view .LVU3765
 13415 0228 4C48     		ldr	r0, .L702+248
  58:taptempo.h    ****         PPQN_ = 24;
 13416              		.loc 13 58 22 view .LVU3766
 13417 022a 42F21075 		movw	r5, #10000
  49:taptempo.h    ****         mintap_ = 20000;
 13418              		.loc 13 49 17 view .LVU3767
 13419 022e 4C49     		ldr	r1, .L702+252
  59:taptempo.h    ****     }
 13420              		.loc 13 59 15 view .LVU3768
 13421 0230 1823     		movs	r3, #24
  52:taptempo.h    ****         lastTime_ = 0;
 13422              		.loc 13 52 16 view .LVU3769
 13423 0232 DFF83CC1 		ldr	ip, .L702+268
 13424              	.LBE2547:
 13425              	.LBE2550:
 13426              	.LBE2554:
 191:Veno-Echo.cpp **** 
 13427              		.loc 20 191 10 view .LVU3770
 13428 0236 2246     		mov	r2, r4
 13429              	.LBB2555:
 13430              	.LBB2551:
 13431              	.LBB2548:
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13432              		.loc 13 47 18 view .LVU3771
 13433 0238 80F83460 		strb	r6, [r0, #52]
  48:taptempo.h    ****         maxtap_ = 6000000;
 13434              		.loc 13 48 9 is_stmt 1 view .LVU3772
  54:taptempo.h    ****         tapRatio_ = 1.0f;
 13435              		.loc 13 54 22 is_stmt 0 view .LVU3773
 13436 023c 0661     		str	r6, [r0, #16]
  48:taptempo.h    ****         maxtap_ = 6000000;
 13437              		.loc 13 48 24 view .LVU3774
 13438 023e C0F83880 		str	r8, [r0, #56]	@ float
  49:taptempo.h    ****         mintap_ = 20000;
 13439              		.loc 13 49 9 is_stmt 1 view .LVU3775
  49:taptempo.h    ****         mintap_ = 20000;
 13440              		.loc 13 49 17 is_stmt 0 view .LVU3776
 13441 0242 4160     		str	r1, [r0, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 398


  50:taptempo.h    ****         lastTapLength_ = 0;
 13442              		.loc 13 50 9 is_stmt 1 view .LVU3777
  50:taptempo.h    ****         lastTapLength_ = 0;
 13443              		.loc 13 50 17 is_stmt 0 view .LVU3778
 13444 0244 C0F800E0 		str	lr, [r0]
  51:taptempo.h    ****         tempo_ = 500000.0f;
 13445              		.loc 13 51 9 is_stmt 1 view .LVU3779
  52:taptempo.h    ****         lastTime_ = 0;
 13446              		.loc 13 52 9 view .LVU3780
  55:taptempo.h    ****         clockLength_ = 0;
 13447              		.loc 13 55 19 is_stmt 0 view .LVU3781
 13448 0248 0764     		str	r7, [r0, #64]	@ float
  58:taptempo.h    ****         PPQN_ = 24;
 13449              		.loc 13 58 22 view .LVU3782
 13450 024a 8562     		str	r5, [r0, #40]
 13451              	.LBE2548:
 13452              	.LBE2551:
 13453              	.LBE2555:
 191:Veno-Echo.cpp **** 
 13454              		.loc 20 191 10 view .LVU3783
 13455 024c 4549     		ldr	r1, .L702+256
 13456              	.LBB2556:
 13457              	.LBB2552:
 13458              	.LBB2549:
  52:taptempo.h    ****         lastTime_ = 0;
 13459              		.loc 13 52 16 view .LVU3784
 13460 024e C0F83CC0 		str	ip, [r0, #60]	@ float
  53:taptempo.h    ****         currentTime_ = 0;
 13461              		.loc 13 53 9 is_stmt 1 view .LVU3785
  54:taptempo.h    ****         tapRatio_ = 1.0f;
 13462              		.loc 13 54 9 view .LVU3786
  55:taptempo.h    ****         clockLength_ = 0;
 13463              		.loc 13 55 9 view .LVU3787
  56:taptempo.h    ****         lastClockLength_ = 0;
 13464              		.loc 13 56 9 view .LVU3788
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13465              		.loc 13 57 9 view .LVU3789
  58:taptempo.h    ****         PPQN_ = 24;
 13466              		.loc 13 58 9 view .LVU3790
  59:taptempo.h    ****     }
 13467              		.loc 13 59 9 view .LVU3791
  59:taptempo.h    ****     }
 13468              		.loc 13 59 15 is_stmt 0 view .LVU3792
 13469 0252 4364     		str	r3, [r0, #68]
 13470              	.LVL870:
  53:taptempo.h    ****         currentTime_ = 0;
 13471              		.loc 13 53 19 view .LVU3793
 13472 0254 C0E90566 		strd	r6, r6, [r0, #20]
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13473              		.loc 13 57 26 view .LVU3794
 13474 0258 C0E90866 		strd	r6, r6, [r0, #32]
 13475              	.LBE2549:
 13476              	.LBE2552:
 13477              	.LBE2556:
 13478              	.LBE2559:
 13479              	.LBE2563:
 13480              		.loc 20 2148 1 view .LVU3795
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 399


 13481 025c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13482              		.cfi_restore 14
 13483              		.cfi_restore 8
 13484              		.cfi_restore 7
 13485              		.cfi_restore 6
 13486              		.cfi_restore 5
 13487              		.cfi_restore 4
 13488              		.cfi_def_cfa_offset 0
 13489              	.LBB2564:
 13490              	.LBB2560:
 191:Veno-Echo.cpp **** 
 13491              		.loc 20 191 10 view .LVU3796
 13492 0260 FFF7FEBF 		b	__aeabi_atexit
 13493              	.LVL871:
 13494              	.L703:
 13495              		.align	2
 13496              	.L702:
 13497 0264 00000000 		.word	.LANCHOR4
 13498 0268 00000000 		.word	__dso_handle
 13499 026c 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13500 0270 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13501 0274 00000000 		.word	.LANCHOR47
 13502 0278 00000000 		.word	.LANCHOR48
 13503 027c 00000000 		.word	.LANCHOR35
 13504 0280 00000000 		.word	.LANCHOR36
 13505 0284 00000000 		.word	.LANCHOR49
 13506 0288 00000000 		.word	.LANCHOR50
 13507 028c 00000000 		.word	.LANCHOR37
 13508 0290 00000000 		.word	.LANCHOR38
 13509 0294 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13510 0298 00000000 		.word	.LANCHOR76
 13511 029c 17B7D138 		.word	953267991
 13512 02a0 00000000 		.word	.LANCHOR130
 13513 02a4 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13514 02a8 00000000 		.word	.LANCHOR131
 13515 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13516 02b0 00000000 		.word	delMemsL
 13517 02b4 00000000 		.word	delMemsR
 13518 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
 13519 02bc 00000000 		.word	delMemsL_REV
 13520 02c0 00000000 		.word	delMemsR_REV
 13521 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 13522 02c8 00000000 		.word	.LANCHOR0
 13523 02cc 00000000 		.word	.LANCHOR1
 13524 02d0 00000000 		.word	.LANCHOR95
 13525 02d4 00000000 		.word	.LANCHOR96
 13526 02d8 00000000 		.word	.LANCHOR93
 13527 02dc 00000000 		.word	.LANCHOR94
 13528 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13529 02e4 00000000 		.word	.LANCHOR97
 13530 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 13531 02ec 00000000 		.word	.LANCHOR90
 13532 02f0 00000000 		.word	.LANCHOR102
 13533 02f4 00000000 		.word	.LANCHOR103
 13534 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13535 02fc 00000000 		.word	.LANCHOR104
 13536 0300 00000000 		.word	.LANCHOR105
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 400


 13537 0304 00000000 		.word	.LANCHOR106
 13538 0308 00000000 		.word	.LANCHOR107
 13539 030c 00000000 		.word	.LANCHOR65
 13540 0310 00000000 		.word	.LANCHOR118
 13541 0314 00000000 		.word	.LANCHOR119
 13542 0318 00000000 		.word	.LANCHOR116
 13543 031c 00000000 		.word	.LANCHOR117
 13544 0320 00000000 		.word	.LANCHOR122
 13545 0324 00000000 		.word	.LANCHOR123
 13546 0328 00000000 		.word	.LANCHOR120
 13547 032c 00000000 		.word	.LANCHOR121
 13548 0330 00000000 		.word	.LANCHOR124
 13549 0334 00000000 		.word	.LANCHOR125
 13550 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13551 033c 00000000 		.word	.LANCHOR126
 13552 0340 00000000 		.word	.LANCHOR127
 13553 0344 00000000 		.word	.LANCHOR98
 13554 0348 00000000 		.word	.LANCHOR99
 13555 034c 00000000 		.word	.LANCHOR100
 13556 0350 00000000 		.word	.LANCHOR101
 13557 0354 00000000 		.word	_ZN5daisy6GateInD1Ev
 13558 0358 00000000 		.word	.LANCHOR89
 13559 035c 00000000 		.word	.LANCHOR26
 13560 0360 808D5B00 		.word	6000000
 13561 0364 00000000 		.word	_ZN8TaptempoD1Ev
 13562 0368 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13563 036c 0000A03F 		.word	1067450368
 13564 0370 0024F448 		.word	1223959552
 13565              	.LBE2560:
 13566              	.LBE2564:
 13567              		.cfi_endproc
 13568              	.LFE4919:
 13570              		.section	.init_array,"aw",%init_array
 13571              		.align	2
 13572 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13573              		.global	AltControls
 13574              		.global	BaseTempo
 13575              		.global	ClockIn
 13576              		.global	ClockPin
 13577              		.global	Sync
 13578              		.global	ReverseGateR
 13579              		.global	ReverseGateL
 13580              		.global	CLOCK_DEBUG
 13581              		.global	PHASE_DEBUG
 13582              		.global	DELAYR_DEBUG
 13583              		.global	DELAYL_DEBUG
 13584              		.global	saveState
 13585              		.global	save_flag
 13586              		.global	PostFilters
 13587              		.global	ClockInFlag
 13588              		.global	mute
 13589              		.global	shift
 13590              		.global	syncMode
 13591              		.global	modulation_CV_Raw
 13592              		.global	ModDepth
 13593              		.global	filterXfade
 13594              		.global	width_CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 401


 13595              		.global	width
 13596              		.global	drywet_CV
 13597              		.global	drywet
 13598              		.global	crossfeedback_CV
 13599              		.global	crossfeedback
 13600              		.global	feedbackR_CV
 13601              		.global	feedbackR
 13602              		.global	feedbackL_CV
 13603              		.global	feedbackL
 13604              		.global	delayTimeR_CV
 13605              		.global	delayTimeL_CV
 13606              		.global	tempoLED_BASE
 13607              		.global	Tap_Button
 13608              		.global	Rev_R_sw
 13609              		.global	Rev_L_sw
 13610              		.global	HPF_sw
 13611              		.global	LPF_sw
 13612              		.global	delaysR_REV
 13613              		.global	delaysL_REV
 13614              		.global	delayR
 13615              		.global	delayL
 13616              		.global	delMemsR_REV
 13617              		.global	delMemsL_REV
 13618              		.global	delMemsR
 13619              		.global	delMemsL
 13620              		.section	.bss.AltControls,"aw",%nobits
 13621              		.align	2
 13622              		.set	.LANCHOR15,. + 0
 13625              	AltControls:
 13626 0000 00000000 		.space	44
 13626      00000000 
 13626      00000000 
 13626      00000000 
 13626      00000000 
 13627              		.section	.bss.BaseTempo,"aw",%nobits
 13628              		.align	2
 13629              		.set	.LANCHOR26,. + 0
 13632              	BaseTempo:
 13633 0000 00000000 		.space	72
 13633      00000000 
 13633      00000000 
 13633      00000000 
 13633      00000000 
 13634              		.section	.bss.CLOCK_DEBUG,"aw",%nobits
 13635              		.align	2
 13638              	CLOCK_DEBUG:
 13639 0000 00000000 		.space	4
 13640              		.section	.bss.ClockIn,"aw",%nobits
 13641              		.align	2
 13642              		.set	.LANCHOR89,. + 0
 13645              	ClockIn:
 13646 0000 00000000 		.space	6
 13646      0000
 13647              		.section	.bss.ClockInFlag,"aw",%nobits
 13650              	ClockInFlag:
 13651 0000 00       		.space	1
 13652              		.section	.bss.ClockPin,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 402


 13653              		.align	2
 13654              		.set	.LANCHOR101,. + 0
 13657              	ClockPin:
 13658 0000 0000     		.space	2
 13659              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 13660              		.align	2
 13663              	DELAYL_DEBUG:
 13664 0000 00000000 		.space	4
 13665              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13666              		.align	2
 13669              	DELAYR_DEBUG:
 13670 0000 00000000 		.space	4
 13671              		.section	.bss.HPF_sw,"aw",%nobits
 13672              		.align	2
 13673              		.set	.LANCHOR96,. + 0
 13676              	HPF_sw:
 13677 0000 00000000 		.space	52
 13677      00000000 
 13677      00000000 
 13677      00000000 
 13677      00000000 
 13678              		.section	.bss.LPF_sw,"aw",%nobits
 13679              		.align	2
 13680              		.set	.LANCHOR95,. + 0
 13683              	LPF_sw:
 13684 0000 00000000 		.space	52
 13684      00000000 
 13684      00000000 
 13684      00000000 
 13684      00000000 
 13685              		.section	.bss.ModDepth,"aw",%nobits
 13686              		.align	2
 13687              		.set	.LANCHOR68,. + 0
 13690              	ModDepth:
 13691 0000 00000000 		.space	4
 13692              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13693              		.align	2
 13694              		.set	.LANCHOR92,. + 0
 13697              	PHASE_DEBUG:
 13698 0000 00000000 		.space	4
 13699              		.section	.bss.PostFilters,"aw",%nobits
 13700              		.set	.LANCHOR83,. + 0
 13703              	PostFilters:
 13704 0000 00       		.space	1
 13705              		.section	.bss.Rev_L_sw,"aw",%nobits
 13706              		.align	2
 13707              		.set	.LANCHOR93,. + 0
 13710              	Rev_L_sw:
 13711 0000 00000000 		.space	52
 13711      00000000 
 13711      00000000 
 13711      00000000 
 13711      00000000 
 13712              		.section	.bss.Rev_R_sw,"aw",%nobits
 13713              		.align	2
 13714              		.set	.LANCHOR94,. + 0
 13717              	Rev_R_sw:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 403


 13718 0000 00000000 		.space	52
 13718      00000000 
 13718      00000000 
 13718      00000000 
 13718      00000000 
 13719              		.section	.bss.ReverseGateL,"aw",%nobits
 13720              		.align	2
 13721              		.set	.LANCHOR98,. + 0
 13724              	ReverseGateL:
 13725 0000 00000000 		.space	16
 13725      00000000 
 13725      00000000 
 13725      00000000 
 13726              		.section	.bss.ReverseGateR,"aw",%nobits
 13727              		.align	2
 13728              		.set	.LANCHOR99,. + 0
 13731              	ReverseGateR:
 13732 0000 00000000 		.space	16
 13732      00000000 
 13732      00000000 
 13732      00000000 
 13733              		.section	.bss.Sync,"aw",%nobits
 13734              		.align	2
 13735              		.set	.LANCHOR100,. + 0
 13738              	Sync:
 13739 0000 00000000 		.space	16
 13739      00000000 
 13739      00000000 
 13739      00000000 
 13740              		.section	.bss.Tap_Button,"aw",%nobits
 13741              		.align	2
 13742              		.set	.LANCHOR97,. + 0
 13745              	Tap_Button:
 13746 0000 00000000 		.space	52
 13746      00000000 
 13746      00000000 
 13746      00000000 
 13746      00000000 
 13747              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13748              		.align	2
 13749              		.set	.LANCHOR102,. + 0
 13752              	_ZL10FwdRevLEnv:
 13753 0000 00000000 		.space	56
 13753      00000000 
 13753      00000000 
 13753      00000000 
 13753      00000000 
 13754              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13755              		.align	2
 13756              		.set	.LANCHOR103,. + 0
 13759              	_ZL10FwdRevREnv:
 13760 0000 00000000 		.space	56
 13760      00000000 
 13760      00000000 
 13760      00000000 
 13760      00000000 
 13761              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 404


 13762              		.align	2
 13763              		.set	.LANCHOR116,. + 0
 13766              	_ZL10HPF_LXfade:
 13767 0000 00000000 		.space	8
 13767      00000000 
 13768              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13769              		.align	2
 13770              		.set	.LANCHOR37,. + 0
 13773              	_ZL10HPF_L_post:
 13774 0000 00000000 		.space	76
 13774      00000000 
 13774      00000000 
 13774      00000000 
 13774      00000000 
 13775              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13776              		.align	2
 13777              		.set	.LANCHOR117,. + 0
 13780              	_ZL10HPF_RXfade:
 13781 0000 00000000 		.space	8
 13781      00000000 
 13782              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13783              		.align	2
 13784              		.set	.LANCHOR38,. + 0
 13787              	_ZL10HPF_R_post:
 13788 0000 00000000 		.space	76
 13788      00000000 
 13788      00000000 
 13788      00000000 
 13788      00000000 
 13789              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13790              		.align	2
 13791              		.set	.LANCHOR118,. + 0
 13794              	_ZL10LPF_LXfade:
 13795 0000 00000000 		.space	8
 13795      00000000 
 13796              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13797              		.align	2
 13798              		.set	.LANCHOR49,. + 0
 13801              	_ZL10LPF_L_post:
 13802 0000 00000000 		.space	76
 13802      00000000 
 13802      00000000 
 13802      00000000 
 13802      00000000 
 13803              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13804              		.align	2
 13805              		.set	.LANCHOR119,. + 0
 13808              	_ZL10LPF_RXfade:
 13809 0000 00000000 		.space	8
 13809      00000000 
 13810              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13811              		.align	2
 13812              		.set	.LANCHOR50,. + 0
 13815              	_ZL10LPF_R_post:
 13816 0000 00000000 		.space	76
 13816      00000000 
 13816      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 405


 13816      00000000 
 13816      00000000 
 13817              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13818              		.align	2
 13819              		.set	.LANCHOR65,. + 0
 13822              	_ZL10WidthXfade:
 13823 0000 00000000 		.space	8
 13823      00000000 
 13824              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13825              		.align	2
 13826              		.set	.LANCHOR124,. + 0
 13829              	_ZL11FilterMix_L:
 13830 0000 00000000 		.space	8
 13830      00000000 
 13831              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13832              		.align	2
 13833              		.set	.LANCHOR125,. + 0
 13836              	_ZL11FilterMix_R:
 13837 0000 00000000 		.space	8
 13837      00000000 
 13838              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13839              		.align	2
 13840              		.set	.LANCHOR106,. + 0
 13843              	_ZL12FwdRevLXfade:
 13844 0000 00000000 		.space	8
 13844      00000000 
 13845              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13846              		.align	2
 13847              		.set	.LANCHOR107,. + 0
 13850              	_ZL12FwdRevRXfade:
 13851 0000 00000000 		.space	8
 13851      00000000 
 13852              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13853              		.align	2
 13854              		.set	.LANCHOR120,. + 0
 13857              	_ZL15HPF_LXfade_post:
 13858 0000 00000000 		.space	8
 13858      00000000 
 13859              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13860              		.align	2
 13861              		.set	.LANCHOR121,. + 0
 13864              	_ZL15HPF_RXfade_post:
 13865 0000 00000000 		.space	8
 13865      00000000 
 13866              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13867              		.align	2
 13868              		.set	.LANCHOR122,. + 0
 13871              	_ZL15LPF_LXfade_post:
 13872 0000 00000000 		.space	8
 13872      00000000 
 13873              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13874              		.align	2
 13875              		.set	.LANCHOR123,. + 0
 13878              	_ZL15LPF_RXfade_post:
 13879 0000 00000000 		.space	8
 13879      00000000 
 13880              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 406


 13881              		.align	2
 13882              		.set	.LANCHOR126,. + 0
 13885              	_ZL16FilterMix_L_post:
 13886 0000 00000000 		.space	8
 13886      00000000 
 13887              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13888              		.align	2
 13889              		.set	.LANCHOR127,. + 0
 13892              	_ZL16FilterMix_R_post:
 13893 0000 00000000 		.space	8
 13893      00000000 
 13894              		.section	.bss._ZL2hw,"aw",%nobits
 13895              		.align	2
 13896              		.set	.LANCHOR4,. + 0
 13899              	_ZL2hw:
 13900 0000 00000000 		.space	60
 13900      00000000 
 13900      00000000 
 13900      00000000 
 13900      00000000 
 13901              		.section	.bss._ZL3lfo,"aw",%nobits
 13902              		.align	2
 13903              		.set	.LANCHOR76,. + 0
 13906              	_ZL3lfo:
 13907 0000 00000000 		.space	40
 13907      00000000 
 13907      00000000 
 13907      00000000 
 13907      00000000 
 13908              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13909              		.align	2
 13910              		.set	.LANCHOR35,. + 0
 13913              	_ZL5HPF_L:
 13914 0000 00000000 		.space	76
 13914      00000000 
 13914      00000000 
 13914      00000000 
 13914      00000000 
 13915              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13916              		.align	2
 13917              		.set	.LANCHOR36,. + 0
 13920              	_ZL5HPF_R:
 13921 0000 00000000 		.space	76
 13921      00000000 
 13921      00000000 
 13921      00000000 
 13921      00000000 
 13922              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13923              		.align	2
 13924              		.set	.LANCHOR47,. + 0
 13927              	_ZL5LPF_L:
 13928 0000 00000000 		.space	76
 13928      00000000 
 13928      00000000 
 13928      00000000 
 13928      00000000 
 13929              		.section	.bss._ZL5LPF_R,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 407


 13930              		.align	2
 13931              		.set	.LANCHOR48,. + 0
 13934              	_ZL5LPF_R:
 13935 0000 00000000 		.space	76
 13935      00000000 
 13935      00000000 
 13935      00000000 
 13935      00000000 
 13936              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13937              		.align	2
 13938              		.set	.LANCHOR105,. + 0
 13941              	_ZL7HPF_Env:
 13942 0000 00000000 		.space	56
 13942      00000000 
 13942      00000000 
 13942      00000000 
 13942      00000000 
 13943              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13944              		.align	2
 13945              		.set	.LANCHOR104,. + 0
 13948              	_ZL7LPF_Env:
 13949 0000 00000000 		.space	56
 13949      00000000 
 13949      00000000 
 13949      00000000 
 13949      00000000 
 13950              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13951              		.align	2
 13952              		.set	.LANCHOR130,. + 0
 13955              	_ZL7LeftEnv:
 13956 0000 00000000 		.space	24
 13956      00000000 
 13956      00000000 
 13956      00000000 
 13956      00000000 
 13957              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13958              		.align	2
 13959              		.set	.LANCHOR131,. + 0
 13962              	_ZL8RightEnv:
 13963 0000 00000000 		.space	24
 13963      00000000 
 13963      00000000 
 13963      00000000 
 13963      00000000 
 13964              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13965              		.align	2
 13966              		.set	.LANCHOR86,. + 0
 13969              	_ZZ10Update_ModvE13modulation_CV:
 13970 0000 00000000 		.space	4
 13971              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13972              		.align	2
 13973              		.set	.LANCHOR87,. + 0
 13976              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13977 0000 00000000 		.space	4
 13978              		.section	.bss._ZZ11UpdateClockvE12ClockCounter,"aw",%nobits
 13979              		.align	2
 13980              		.set	.LANCHOR88,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 408


 13983              	_ZZ11UpdateClockvE12ClockCounter:
 13984 0000 00000000 		.space	4
 13985              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 13986              		.align	2
 13987              		.set	.LANCHOR63,. + 0
 13990              	_ZZ12Update_widthvE10width_Last:
 13991 0000 00000000 		.space	4
 13992              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 13993              		.align	2
 13994              		.set	.LANCHOR67,. + 0
 13997              	_ZZ12Update_widthvE12ModDepth_new:
 13998 0000 00000000 		.space	4
 13999              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 14000              		.set	.LANCHOR61,. + 0
 14003              	_ZZ12Update_widthvE12width_pickup:
 14004 0000 00       		.space	1
 14005              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 14006              		.set	.LANCHOR66,. + 0
 14009              	_ZZ12Update_widthvE15ModDepth_pickup:
 14010 0000 00       		.space	1
 14011              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 14012              		.set	.LANCHOR60,. + 0
 14015              	_ZZ12Update_widthvE9lastShift:
 14016 0000 00       		.space	1
 14017              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 14018              		.align	2
 14019              		.set	.LANCHOR62,. + 0
 14022              	_ZZ12Update_widthvE9width_new:
 14023 0000 00000000 		.space	4
 14024              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 14025              		.set	.LANCHOR57,. + 0
 14028              	_ZZ13Update_drywetvE10Res_pickup:
 14029 0000 00       		.space	1
 14030              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 14031              		.align	2
 14032              		.set	.LANCHOR54,. + 0
 14035              	_ZZ13Update_drywetvE10drywet_new:
 14036 0000 00000000 		.space	4
 14037              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 14038              		.align	2
 14039              		.set	.LANCHOR55,. + 0
 14042              	_ZZ13Update_drywetvE11drywet_Last:
 14043 0000 00000000 		.space	4
 14044              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 14045              		.set	.LANCHOR53,. + 0
 14048              	_ZZ13Update_drywetvE13drywet_pickup:
 14049 0000 00       		.space	1
 14050              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14051              		.align	2
 14052              		.set	.LANCHOR58,. + 0
 14055              	_ZZ13Update_drywetvE7Res_new:
 14056 0000 00000000 		.space	4
 14057              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 14058              		.set	.LANCHOR52,. + 0
 14061              	_ZZ13Update_drywetvE9lastShift:
 14062 0000 00       		.space	1
 14063              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 409


 14064              		.align	2
 14065              		.set	.LANCHOR110,. + 0
 14068              	_ZZ14Update_ButtonsvE11buttonstate:
 14069 0000 00000000 		.space	4
 14070              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 14071              		.align	2
 14072              		.set	.LANCHOR111,. + 0
 14075              	_ZZ14Update_ButtonsvE9resetTime:
 14076 0000 00000000 		.space	4
 14077              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14078              		.align	2
 14079              		.set	.LANCHOR112,. + 0
 14082              	_ZZ14Update_ButtonsvE9shiftTime:
 14083 0000 00000000 		.space	4
 14084              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14085              		.align	2
 14086              		.set	.LANCHOR34,. + 0
 14089              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14090 0000 00000000 		.space	4
 14091              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14092              		.align	2
 14093              		.set	.LANCHOR30,. + 0
 14096              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14097 0000 00000000 		.space	4
 14098              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14099              		.align	2
 14100              		.set	.LANCHOR31,. + 0
 14103              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14104 0000 00000000 		.space	4
 14105              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14106              		.set	.LANCHOR33,. + 0
 14109              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14110 0000 00       		.space	1
 14111              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14112              		.set	.LANCHOR29,. + 0
 14115              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14116 0000 00       		.space	1
 14117              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14118              		.set	.LANCHOR28,. + 0
 14121              	_ZZ16Update_feedbackLvE9lastShift:
 14122 0000 00       		.space	1
 14123              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14124              		.align	2
 14125              		.set	.LANCHOR46,. + 0
 14128              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14129 0000 00000000 		.space	4
 14130              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14131              		.align	2
 14132              		.set	.LANCHOR42,. + 0
 14135              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14136 0000 00000000 		.space	4
 14137              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14138              		.align	2
 14139              		.set	.LANCHOR43,. + 0
 14142              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14143 0000 00000000 		.space	4
 14144              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 410


 14145              		.set	.LANCHOR45,. + 0
 14148              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14149 0000 00       		.space	1
 14150              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 14151              		.set	.LANCHOR41,. + 0
 14154              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 14155 0000 00       		.space	1
 14156              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14157              		.set	.LANCHOR40,. + 0
 14160              	_ZZ16Update_feedbackRvE9lastShift:
 14161 0000 00       		.space	1
 14162              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14163              		.align	2
 14164              		.set	.LANCHOR10,. + 0
 14167              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14168 0000 00000000 		.space	4
 14169              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14170              		.align	2
 14171              		.set	.LANCHOR11,. + 0
 14174              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14175 0000 00000000 		.space	4
 14176              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14177              		.align	2
 14178              		.set	.LANCHOR14,. + 0
 14181              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14182 0000 00000000 		.space	4
 14183              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14184              		.set	.LANCHOR9,. + 0
 14187              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14188 0000 00       		.space	1
 14189              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14190              		.set	.LANCHOR13,. + 0
 14193              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14194 0000 00       		.space	1
 14195              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 14196              		.align	2
 14197              		.set	.LANCHOR6,. + 0
 14200              	_ZZ17Update_DelayTimeLvE8counterL:
 14201 0000 00000000 		.space	4
 14202              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14203              		.set	.LANCHOR8,. + 0
 14206              	_ZZ17Update_DelayTimeLvE9lastShift:
 14207 0000 00       		.space	1
 14208              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 14209              		.align	2
 14210              		.set	.LANCHOR24,. + 0
 14213              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14214 0000 00000000 		.space	4
 14215              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14216              		.align	2
 14217              		.set	.LANCHOR21,. + 0
 14220              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14221 0000 00000000 		.space	4
 14222              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14223              		.align	2
 14224              		.set	.LANCHOR22,. + 0
 14227              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 411


 14228 0000 00000000 		.space	4
 14229              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14230              		.set	.LANCHOR23,. + 0
 14233              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 14234 0000 00       		.space	1
 14235              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 14236              		.set	.LANCHOR20,. + 0
 14239              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14240 0000 00       		.space	1
 14241              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14242              		.align	2
 14243              		.set	.LANCHOR18,. + 0
 14246              	_ZZ17Update_DelayTimeRvE8counterR:
 14247 0000 00000000 		.space	4
 14248              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14249              		.set	.LANCHOR19,. + 0
 14252              	_ZZ17Update_DelayTimeRvE9lastShift:
 14253 0000 00       		.space	1
 14254              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14255              		.align	2
 14256              		.set	.LANCHOR82,. + 0
 14259              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14260 0000 00000000 		.space	4
 14261              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14262              		.align	2
 14263              		.set	.LANCHOR79,. + 0
 14266              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14267 0000 00000000 		.space	4
 14268              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14269              		.align	2
 14270              		.set	.LANCHOR84,. + 0
 14273              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14274 0000 00000000 		.space	4
 14275              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14276              		.set	.LANCHOR81,. + 0
 14279              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14280 0000 00       		.space	1
 14281              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14282              		.set	.LANCHOR78,. + 0
 14285              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14286 0000 00       		.space	1
 14287              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14288              		.set	.LANCHOR77,. + 0
 14291              	_ZZ18Update_filterXfadevE9lastShift:
 14292 0000 00       		.space	1
 14293              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14294              		.align	2
 14295              		.set	.LANCHOR91,. + 0
 14298              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14299 0000 00000000 		.space	4
 14300              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14301              		.align	2
 14302              		.set	.LANCHOR74,. + 0
 14305              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14306 0000 00000000 		.space	4
 14307              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14308              		.set	.LANCHOR73,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 412


 14311              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14312 0000 00       		.space	1
 14313              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14314              		.align	2
 14315              		.set	.LANCHOR71,. + 0
 14318              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 14319 0000 00000000 		.space	4
 14320              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14321              		.align	2
 14322              		.set	.LANCHOR75,. + 0
 14325              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14326 0000 00000000 		.space	4
 14327              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 14328              		.set	.LANCHOR70,. + 0
 14331              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14332 0000 00       		.space	1
 14333              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14334              		.set	.LANCHOR69,. + 0
 14337              	_ZZ20Update_crossfeedbackvE9lastShift:
 14338 0000 00       		.space	1
 14339              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14340              		.align	2
 14341              		.set	.LANCHOR109,. + 0
 14344              	_ZZ4mainE9saveTimer:
 14345 0000 00000000 		.space	4
 14346              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 14347              		.align	2
 14348              		.set	.LANCHOR128,. + 0
 14351              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 14352 0000 00000000 		.space	4
 14353              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 14354              		.align	2
 14355              		.set	.LANCHOR129,. + 0
 14358              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 14359 0000 00000000 		.space	4
 14360              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 14361              		.align	2
 14362              		.set	.LANCHOR115,. + 0
 14365              	_ZZL13AudioCallbackPfS_jE7Counter:
 14366 0000 00000000 		.space	4
 14367              		.section	.bss.crossfeedback,"aw",%nobits
 14368              		.align	2
 14369              		.set	.LANCHOR72,. + 0
 14372              	crossfeedback:
 14373 0000 00000000 		.space	4
 14374              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14375              		.align	2
 14378              	crossfeedback_CV:
 14379 0000 00000000 		.space	4
 14380              		.section	.bss.delayL,"aw",%nobits
 14381              		.align	2
 14382              		.set	.LANCHOR0,. + 0
 14385              	delayL:
 14386 0000 00000000 		.space	296
 14386      00000000 
 14386      00000000 
 14386      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 413


 14386      00000000 
 14387              		.section	.bss.delayR,"aw",%nobits
 14388              		.align	2
 14389              		.set	.LANCHOR1,. + 0
 14392              	delayR:
 14393 0000 00000000 		.space	296
 14393      00000000 
 14393      00000000 
 14393      00000000 
 14393      00000000 
 14394              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14395              		.align	2
 14396              		.set	.LANCHOR5,. + 0
 14399              	delayTimeL_CV:
 14400 0000 00000000 		.space	4
 14401              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14402              		.align	2
 14403              		.set	.LANCHOR17,. + 0
 14406              	delayTimeR_CV:
 14407 0000 00000000 		.space	4
 14408              		.section	.bss.delaysL_REV,"aw",%nobits
 14409              		.align	2
 14410              		.set	.LANCHOR2,. + 0
 14413              	delaysL_REV:
 14414 0000 00000000 		.space	8
 14414      00000000 
 14415              		.section	.bss.delaysR_REV,"aw",%nobits
 14416              		.align	2
 14417              		.set	.LANCHOR3,. + 0
 14420              	delaysR_REV:
 14421 0000 00000000 		.space	8
 14421      00000000 
 14422              		.section	.bss.drywet_CV,"aw",%nobits
 14423              		.align	2
 14424              		.set	.LANCHOR51,. + 0
 14427              	drywet_CV:
 14428 0000 00000000 		.space	4
 14429              		.section	.bss.feedbackL,"aw",%nobits
 14430              		.align	2
 14431              		.set	.LANCHOR32,. + 0
 14434              	feedbackL:
 14435 0000 00000000 		.space	4
 14436              		.section	.bss.feedbackL_CV,"aw",%nobits
 14437              		.align	2
 14438              		.set	.LANCHOR27,. + 0
 14441              	feedbackL_CV:
 14442 0000 00000000 		.space	4
 14443              		.section	.bss.feedbackR,"aw",%nobits
 14444              		.align	2
 14445              		.set	.LANCHOR44,. + 0
 14448              	feedbackR:
 14449 0000 00000000 		.space	4
 14450              		.section	.bss.feedbackR_CV,"aw",%nobits
 14451              		.align	2
 14452              		.set	.LANCHOR39,. + 0
 14455              	feedbackR_CV:
 14456 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 414


 14457              		.section	.bss.filterXfade,"aw",%nobits
 14458              		.align	2
 14459              		.set	.LANCHOR80,. + 0
 14462              	filterXfade:
 14463 0000 00000000 		.space	4
 14464              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 14465              		.align	2
 14466              		.set	.LANCHOR85,. + 0
 14469              	modulation_CV_Raw:
 14470 0000 00000000 		.space	4
 14471              		.section	.bss.mute,"aw",%nobits
 14472              		.set	.LANCHOR113,. + 0
 14475              	mute:
 14476 0000 00       		.space	1
 14477              		.section	.bss.saveState,"aw",%nobits
 14478              		.set	.LANCHOR108,. + 0
 14481              	saveState:
 14482 0000 00       		.space	1
 14483              		.section	.bss.save_flag,"aw",%nobits
 14484              		.align	2
 14485              		.set	.LANCHOR16,. + 0
 14488              	save_flag:
 14489 0000 00       		.space	1
 14490              		.section	.bss.shift,"aw",%nobits
 14491              		.set	.LANCHOR7,. + 0
 14494              	shift:
 14495 0000 00       		.space	1
 14496              		.section	.bss.syncMode,"aw",%nobits
 14497              		.set	.LANCHOR12,. + 0
 14500              	syncMode:
 14501 0000 00       		.space	1
 14502              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14503              		.align	2
 14504              		.set	.LANCHOR90,. + 0
 14507              	tempoLED_BASE:
 14508 0000 00000000 		.space	72
 14508      00000000 
 14508      00000000 
 14508      00000000 
 14508      00000000 
 14509              		.section	.bss.width_CV,"aw",%nobits
 14510              		.align	2
 14511              		.set	.LANCHOR59,. + 0
 14514              	width_CV:
 14515 0000 00000000 		.space	4
 14516              		.section	.data.drywet,"aw"
 14517              		.align	2
 14518              		.set	.LANCHOR56,. + 0
 14521              	drywet:
 14522 0000 0000003F 		.word	1056964608
 14523              		.section	.data.width,"aw"
 14524              		.align	2
 14525              		.set	.LANCHOR64,. + 0
 14528              	width:
 14529 0000 0000803F 		.word	1065353216
 14530              		.section	.rodata.CSWTCH.371,"a"
 14531              		.align	3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 415


 14532              		.set	.LANCHOR25,. + 0
 14535              	CSWTCH.371:
 14536 0000 00000000 		.word	0
 14537 0004 0000F83F 		.word	1073217536
 14538 0008 00000000 		.word	0
 14539 000c 00000040 		.word	1073741824
 14540 0010 00000000 		.word	0
 14541 0014 00000840 		.word	1074266112
 14542              		.section	.rodata._ZL18defaultAltControls,"a"
 14543              		.align	2
 14544              		.set	.LANCHOR114,. + 0
 14547              	_ZL18defaultAltControls:
 14548 0000 00650148 		.word	1208050944
 14549 0004 0000803F 		.word	1065353216
 14550 0008 00000000 		.word	0
 14551 000c 9A99A140 		.word	1084332442
 14552 0010 00004843 		.word	1128792064
 14553 0014 00803B46 		.word	1178304512
 14554 0018 00000000 		.word	0
 14555 001c 00000000 		.word	0
 14556 0020 0080BB46 		.word	1186693120
 14557 0024 00000000 		.word	0
 14558 0028 00000000 		.word	0
 14559              		.section	.sdram_bss,"aw"
 14560              		.align	2
 14563              	delMemsR_REV:
 14564 0000 00000000 		.space	2400040
 14564      00000000 
 14564      00000000 
 14564      00000000 
 14564      00000000 
 14567              	delMemsL_REV:
 14568 249f28 00000000 		.space	2400040
 14568      00000000 
 14568      00000000 
 14568      00000000 
 14568      00000000 
 14571              	delMemsR:
 14572 493e50 00000000 		.space	6912136
 14572      00000000 
 14572      00000000 
 14572      00000000 
 14572      00000000 
 14575              	delMemsL:
 14576 b2b6d8 00000000 		.space	6912136
 14576      00000000 
 14576      00000000 
 14576      00000000 
 14576      00000000 
 14577              		.text
 14578              	.Letext0:
 14579              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14580              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 14581              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14582              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 14583              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14584              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 416


 14585              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14586              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14587              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14588              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14589              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14590              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14591              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14592              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14593              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14594              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14595              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14596              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14597              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14598              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14599              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14600              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14601              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14602              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14603              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14604              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14605              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14606              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14607              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14608              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14609              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14610              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14611              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14612              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14613              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14614              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14615              		.file 64 "../libdaisy/src/daisy_core.h"
 14616              		.file 65 "../libdaisy/src/per/tim.h"
 14617              		.file 66 "../libdaisy/src/per/sai.h"
 14618              		.file 67 "../libdaisy/src/util/wav_format.h"
 14619              		.file 68 "../libdaisy/src/per/qspi.h"
 14620              		.file 69 "../libdaisy/src/per/gpio.h"
 14621              		.file 70 "../libdaisy/src/dev/sdram.h"
 14622              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14623              		.file 72 "<built-in>"
 14624              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14625              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14626              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 14627              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 14628              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 14629              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 14630              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 14631              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 14632              		.file 81 "../libdaisy/src/sys/fatfs.h"
 14633              		.file 82 "../DaisySP/Source/Control/adenv.h"
 14634              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14635              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14636              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14637              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14638              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14639              		.file 88 "QSPI_Settings.h"
 14640              		.file 89 "scale.h"
 14641              		.file 90 "constants.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 417


 14642              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 418


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:43     .text._ZN5daisy6GateInD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:68     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:117    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:142    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:167    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:192    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14575  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14571  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14567  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14563  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1636   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 419


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1666   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1674   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1705   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:1713   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2202   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2229   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2237   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2268   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2276   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2731   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2760   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2768   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2799   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:2807   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3261   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3290   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3298   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3323   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3329   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3337   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3846   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3883   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3891   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3916   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3922   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:3930   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:4403   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:4429   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:4437   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:4798   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:4818   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:4826   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5163   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5186   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5194   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5224   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5232   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5240   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5397   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5409   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5417   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5529   .text._Z11UpdateClockv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5543   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5551   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5603   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5610   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5618   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5651   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5658   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5666   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5788   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5799   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:5807   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:6509   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 420


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:6550   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:6629   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:6643   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:6651   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:7523   .text.startup.main:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:7557   .text.startup.main:00000000000003bc $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8070   .text.startup.main:0000000000000610 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:9020   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8094   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8102   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8164   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8175   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8183   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8286   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8298   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8306   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:8987   .text._Z14Update_Buttonsv:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:9013   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:9089   .text._ZL13AudioCallbackPfS_j:000000000000003a $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:9104   .text._ZL13AudioCallbackPfS_j:0000000000000058 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:9150   .text._ZL13AudioCallbackPfS_j:0000000000000088 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:9162   .text._ZL13AudioCallbackPfS_j:00000000000000a0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:10228  .text._ZL13AudioCallbackPfS_j:0000000000000444 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:10270  .text._ZL13AudioCallbackPfS_j:00000000000004e4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:11091  .text._ZL13AudioCallbackPfS_j:0000000000000820 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:11107  .text._ZL13AudioCallbackPfS_j:0000000000000850 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12001  .text._ZL13AudioCallbackPfS_j:0000000000000ba4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12039  .text._ZL13AudioCallbackPfS_j:0000000000000c14 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12216  .text._ZL13AudioCallbackPfS_j:0000000000000cb8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12226  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12234  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12268  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12276  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12323  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12328  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12336  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12420  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12425  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12433  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12523  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12528  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12536  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12566  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12571  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:12578  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13497  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13571  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13625  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13632  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13645  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13657  .bss.ClockPin:0000000000000000 ClockPin
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13738  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13731  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13724  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13638  .bss.CLOCK_DEBUG:0000000000000000 CLOCK_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13697  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13669  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 421


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13663  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14481  .bss.saveState:0000000000000000 saveState
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14488  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13703  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13650  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14475  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14494  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14500  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14469  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13690  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14462  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14514  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14528  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14427  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14521  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14378  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14372  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14455  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14448  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14441  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14434  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14406  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14399  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14507  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13745  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13717  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13710  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13676  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13683  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14420  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14413  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14392  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14385  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13621  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13628  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13635  .bss.CLOCK_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13641  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13651  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13653  .bss.ClockPin:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13660  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13666  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13672  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13679  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13686  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13693  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13704  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13706  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13713  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13720  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13727  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13734  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13741  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13748  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13752  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13755  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13759  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13762  .bss._ZL10HPF_LXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 422


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13766  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13769  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13773  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13776  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13780  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13783  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13787  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13790  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13794  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13797  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13801  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13804  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13808  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13811  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13815  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13818  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13822  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13825  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13829  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13832  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13836  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13839  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13843  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13846  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13850  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13853  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13857  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13860  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13864  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13867  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13871  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13874  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13878  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13881  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13885  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13888  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13892  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13895  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13899  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13902  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13906  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13909  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13913  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13916  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13920  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13923  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13927  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13930  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13934  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13937  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13941  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13944  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13948  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13951  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13955  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13958  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13962  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 423


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13965  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13969  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13972  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13976  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13979  .bss._ZZ11UpdateClockvE12ClockCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13983  .bss._ZZ11UpdateClockvE12ClockCounter:0000000000000000 _ZZ11UpdateClockvE12ClockCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13986  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13990  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13993  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:13997  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14003  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14004  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14009  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14010  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14015  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14016  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14018  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14022  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14028  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14029  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14031  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14035  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14038  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14042  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14048  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14049  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14051  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14055  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14061  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14062  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14064  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14068  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14071  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14075  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14078  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14082  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14085  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14089  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14092  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14096  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14099  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14103  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14109  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14110  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14115  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14116  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14121  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14122  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14124  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14128  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14131  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14135  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14138  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14142  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14148  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14149  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14154  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 424


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14155  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14160  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14161  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14163  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14167  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14170  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14174  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14177  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14181  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14187  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14188  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14193  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14194  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14196  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14200  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14206  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14207  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14209  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14213  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14216  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14220  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14223  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14227  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14233  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14234  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14239  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14240  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14242  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14246  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14252  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14253  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14255  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14259  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14262  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14266  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14269  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14273  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14279  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14280  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14285  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14286  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14291  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14292  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14294  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14298  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14301  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14305  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14311  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14312  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14314  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14318  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14321  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14325  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14331  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14332  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14337  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14338  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 425


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14340  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14344  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14347  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14351  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14354  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14358  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14361  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14365  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14368  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14375  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14381  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14388  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14395  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14402  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14409  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14416  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14423  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14430  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14437  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14444  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14451  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14458  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14465  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14476  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14482  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14484  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14495  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14501  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14503  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14510  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14517  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14524  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14531  .rodata.CSWTCH.371:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14535  .rodata.CSWTCH.371:0000000000000000 CSWTCH.371
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14543  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14547  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s:14560  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy6GateInD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 426


_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6GateIn4TrigEv
_ZN8Taptempo5clockEm
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo8getTempoEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo8setTempoEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN8Taptempo4initEmmfi
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN5daisy6Switch8DebounceEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN8Taptempo3tapEv
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnKRRNP.s 			page 427


__dso_handle
