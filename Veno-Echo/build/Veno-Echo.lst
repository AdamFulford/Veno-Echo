ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB779:
  61              	.LBI779:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE779:
  66              	.LBB780:
  67              	.LBI780:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE780:
  72              	.LBB781:
  73              	.LBI781:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE781:
  78              	.LBB782:
  79              	.LBI782:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE782:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         bool tapflag_;
  37:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  38:taptempo.h    **** 
  39:taptempo.h    ****     public:
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 14


  41:taptempo.h    ****     Taptempo()  //default constructor
  42:taptempo.h    ****     {
  43:taptempo.h    ****         tapflag_ = false;
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
  45:taptempo.h    ****         maxtap_ = 2000;
  46:taptempo.h    ****         mintap_ = 80;
  47:taptempo.h    ****         lastTapLength_ = 0;
  48:taptempo.h    ****         tempo_ = 500.0f;
  49:taptempo.h    ****         lastTime_ = 0;
  50:taptempo.h    ****         currentTime_ = 0;
  51:taptempo.h    ****         tapRatio_ = 1.0f;
  52:taptempo.h    **** 
  53:taptempo.h    ****     }
  54:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 54 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 54 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3953:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 15


  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** 
  29:LEDs.h        **** using namespace daisysp;
  30:LEDs.h        **** using namespace daisy;
  31:LEDs.h        **** 
  32:LEDs.h        **** class TempoLED
  33:LEDs.h        **** {
  34:LEDs.h        **** 
  35:LEDs.h        **** Led led;
  36:LEDs.h        **** Oscillator blink;
  37:LEDs.h        **** 
  38:LEDs.h        **** public:
  39:LEDs.h        **** 
  40:LEDs.h        **** TempoLED(){}
  41:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 41 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB783:
 285              	.LBI783:
 286              		.loc 8 16 5 view .LVU27
 287              		.loc 8 16 5 is_stmt 0 view .LVU28
 288              	.LBE783:
 289              	.LBB784:
 290              	.LBI784:
 291              		.file 15 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 16


  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 292              		.loc 15 25 5 is_stmt 1 view .LVU29
 293              		.loc 15 25 5 is_stmt 0 view .LVU30
 294              	.LBE784:
 295              		.loc 14 41 13 view .LVU31
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE3953:
 300              		.weak	_ZN8TempoLEDD1Ev
 301              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 302 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 303              		.align	1
 304              		.p2align 2,,3
 305              		.weak	_ZN9ButtonLEDD2Ev
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	_ZN9ButtonLEDD2Ev:
 312              	.LVL10:
 313              	.LFB3959:
  42:LEDs.h        **** 
  43:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  44:LEDs.h        **** 
  45:LEDs.h        **** void setTempo(float tempo);
  46:LEDs.h        **** 
  47:LEDs.h        **** void resetPhase();
  48:LEDs.h        **** 
  49:LEDs.h        **** void update();
  50:LEDs.h        **** 
  51:LEDs.h        **** void LED_set(float brightness);
  52:LEDs.h        **** 
  53:LEDs.h        **** bool isEOC();
  54:LEDs.h        **** 
  55:LEDs.h        **** };
  56:LEDs.h        **** 
  57:LEDs.h        **** class ButtonLED    //button with status LED
  58:LEDs.h        **** {
  59:LEDs.h        ****     public:
  60:LEDs.h        ****     ButtonLED() {}
  61:LEDs.h        ****     ~ButtonLED() {}
 314              		.loc 14 61 5 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LBB785:
 320              	.LBI785:
 321              		.loc 15 25 5 view .LVU33
 322              		.loc 15 25 5 is_stmt 0 view .LVU34
 323              	.LBE785:
 324              	.LBB786:
 325              	.LBI786:
 326              		.loc 1 41 5 is_stmt 1 view .LVU35
 327              		.loc 1 41 5 is_stmt 0 view .LVU36
 328              	.LBE786:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 17


 329              		.loc 14 61 19 view .LVU37
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE3959:
 334              		.weak	_ZN9ButtonLEDD1Ev
 335              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 336 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN10DelayMultiD2Ev
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	_ZN10DelayMultiD2Ev:
 346              	.LVL11:
 347              	.LFB3965:
 348              		.file 16 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 18


  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 349              		.loc 16 50 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LBB787:
 355              	.LBI787:
  41:LEDs.h        **** 
 356              		.loc 14 41 1 view .LVU39
 357              	.LBB788:
 358              	.LBI788:
 359              		.loc 8 16 5 view .LVU40
 360              		.loc 8 16 5 is_stmt 0 view .LVU41
 361              	.LBE788:
 362              	.LBB789:
 363              	.LBI789:
 364              		.loc 15 25 5 is_stmt 1 view .LVU42
 365              		.loc 15 25 5 is_stmt 0 view .LVU43
 366              	.LBE789:
 367              	.LBE787:
 368              		.loc 16 50 16 view .LVU44
 369 0000 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE3965:
 373              		.weak	_ZN10DelayMultiD1Ev
 374              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 375 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 376              		.align	1
 377              		.p2align 2,,3
 378              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 385              	.LVL12:
 386              	.LFB4892:
 387              		.file 17 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 19


   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 388              		.loc 17 52 5 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              		.loc 17 52 27 is_stmt 0 view .LVU46
 394 0000 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE4892:
 398              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 399              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 400 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 401              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 20


 402              		.p2align 2,,3
 403              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv5-d16
 409              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 410              	.LVL13:
 411              	.LFB4895:
 412              		.file 18 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 413              		.loc 18 39 5 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              		.loc 18 39 26 is_stmt 0 view .LVU48
 419 0000 7047     		bx	lr
 420              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 21


 421              	.LFE4895:
 423              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 424              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 425 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 426              		.align	1
 427              		.p2align 2,,3
 428              		.global	_Z10InitDelaysf
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv5-d16
 434              	_Z10InitDelaysf:
 435              	.LVL14:
 436              	.LFB4289:
 437              		.file 19 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 22


  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 23


 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV;
 107:Veno-Echo.cpp **** float delayTimeR_CV;
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** bool delayL_flag{true};
 143:Veno-Echo.cpp **** bool delayR_flag{true};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 24


 157:Veno-Echo.cpp **** 
 158:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 163:Veno-Echo.cpp **** 
 164:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 169:Veno-Echo.cpp **** 
 170:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** //Gate inputs
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Switch TapButton;
 182:Veno-Echo.cpp **** Switch Sync;
 183:Veno-Echo.cpp **** Switch ClockIn;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Tap tempo
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f
 203:Veno-Echo.cpp **** };
 204:Veno-Echo.cpp **** 
 205:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 206:Veno-Echo.cpp **** void Update_DelayTimeL();
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeR();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_feedbackL_CV();
 212:Veno-Echo.cpp **** void Update_feedbackL();
 213:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 25


 214:Veno-Echo.cpp **** void Update_feedbackR_CV();
 215:Veno-Echo.cpp **** void Update_feedbackR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_drywet_CV();
 218:Veno-Echo.cpp **** void Update_drywet();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_width_CV();
 221:Veno-Echo.cpp **** void Update_width();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_crossfeedback();
 224:Veno-Echo.cpp **** void Update_filterXfade();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_Buttons();
 227:Veno-Echo.cpp **** void Update_BaseTempoLED();
 228:Veno-Echo.cpp **** void Update_Mod();
 229:Veno-Echo.cpp **** void GetModCV();
 230:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 231:Veno-Echo.cpp **** void UpdateClock();
 232:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 233:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 234:Veno-Echo.cpp **** void TurnOnAllLEDs();
 235:Veno-Echo.cpp **** void ResetAllLEDs();
 236:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 237:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 238:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 239:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 240:Veno-Echo.cpp **** 
 241:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 242:Veno-Echo.cpp **** {
 243:Veno-Echo.cpp **** 
 244:Veno-Echo.cpp **** /*
 245:Veno-Echo.cpp **** static uint32_t funcLength{};
 246:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 247:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 248:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 249:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 250:Veno-Echo.cpp **** 
 251:Veno-Echo.cpp **** */
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** static int Counter{};
 254:Veno-Echo.cpp **** 
 255:Veno-Echo.cpp **** /*
 256:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 257:Veno-Echo.cpp **** 
 258:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 259:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 260:Veno-Echo.cpp ****     {
 261:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 262:Veno-Echo.cpp ****     }
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 265:Veno-Echo.cpp ****     {
 266:Veno-Echo.cpp ****         minFuncLength = funcLength;
 267:Veno-Echo.cpp ****     }
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp **** */
 270:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 26


 271:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 272:Veno-Echo.cpp **** 
 273:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 274:Veno-Echo.cpp **** {
 275:Veno-Echo.cpp ****     /*
 276:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 277:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 278:Veno-Echo.cpp ****         //init timeofCall as current time
 279:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****         //wait for random Dither time
 282:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 283:Veno-Echo.cpp ****         {}
 284:Veno-Echo.cpp ****     */
 285:Veno-Echo.cpp **** 
 286:Veno-Echo.cpp ****         switch (Counter)
 287:Veno-Echo.cpp ****         {
 288:Veno-Echo.cpp ****             case 0:
 289:Veno-Echo.cpp ****                 Update_Buttons();
 290:Veno-Echo.cpp ****                 GetModCV();
 291:Veno-Echo.cpp ****             break;
 292:Veno-Echo.cpp **** 
 293:Veno-Echo.cpp ****             case 1:
 294:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 295:Veno-Echo.cpp ****             break;
 296:Veno-Echo.cpp **** 
 297:Veno-Echo.cpp ****             case 2:
 298:Veno-Echo.cpp ****                 Update_DelayTimeL();
 299:Veno-Echo.cpp ****             break;
 300:Veno-Echo.cpp **** 
 301:Veno-Echo.cpp ****             case 3:
 302:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 303:Veno-Echo.cpp ****             break;
 304:Veno-Echo.cpp **** 
 305:Veno-Echo.cpp ****             case 4:
 306:Veno-Echo.cpp ****                 Update_DelayTimeR();
 307:Veno-Echo.cpp ****             break;
 308:Veno-Echo.cpp **** 
 309:Veno-Echo.cpp ****             case 5:
 310:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 6:
 314:Veno-Echo.cpp ****                 Update_feedbackL();
 315:Veno-Echo.cpp ****             break;
 316:Veno-Echo.cpp **** 
 317:Veno-Echo.cpp ****             case 7:
 318:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 319:Veno-Echo.cpp ****             break;
 320:Veno-Echo.cpp **** 
 321:Veno-Echo.cpp ****             case 8:
 322:Veno-Echo.cpp ****                 Update_feedbackR();
 323:Veno-Echo.cpp ****             break;
 324:Veno-Echo.cpp **** 
 325:Veno-Echo.cpp ****             case 9:
 326:Veno-Echo.cpp ****                 Update_drywet_CV();
 327:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 27


 328:Veno-Echo.cpp **** 
 329:Veno-Echo.cpp ****             case 10:
 330:Veno-Echo.cpp ****                 Update_drywet();
 331:Veno-Echo.cpp ****             break;
 332:Veno-Echo.cpp **** 
 333:Veno-Echo.cpp ****             case 11:
 334:Veno-Echo.cpp ****                 Update_width_CV();
 335:Veno-Echo.cpp ****             break;
 336:Veno-Echo.cpp **** 
 337:Veno-Echo.cpp ****             case 12:
 338:Veno-Echo.cpp ****                 Update_width();
 339:Veno-Echo.cpp ****             break;
 340:Veno-Echo.cpp **** 
 341:Veno-Echo.cpp ****             case 13:
 342:Veno-Echo.cpp ****                 Update_crossfeedback();
 343:Veno-Echo.cpp ****             break;
 344:Veno-Echo.cpp **** 
 345:Veno-Echo.cpp ****             case 14:
 346:Veno-Echo.cpp ****                 Update_filterXfade();
 347:Veno-Echo.cpp ****             break;
 348:Veno-Echo.cpp ****         }
 349:Veno-Echo.cpp **** }
 350:Veno-Echo.cpp **** 
 351:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 352:Veno-Echo.cpp ****     {   
 353:Veno-Echo.cpp ****         UpdateClock(); 
 354:Veno-Echo.cpp ****         Update_Mod();
 355:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 356:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 357:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 358:Veno-Echo.cpp ****         
 359:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 360:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 361:Veno-Echo.cpp **** 
 362:Veno-Echo.cpp ****         //set xfade positions      
 363:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 364:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 365:Veno-Echo.cpp ****         
 366:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 367:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 368:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 369:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 370:Veno-Echo.cpp **** 
 371:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 372:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 373:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 374:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 375:Veno-Echo.cpp **** 
 376:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 377:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 378:Veno-Echo.cpp **** 
 379:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 380:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 383:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 384:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 28


 385:Veno-Echo.cpp **** 
 386:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 387:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 388:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 389:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 390:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 391:Veno-Echo.cpp **** 
 392:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 393:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 394:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 395:Veno-Echo.cpp **** 
 396:Veno-Echo.cpp ****         //Get combined output from all delay heads
 397:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 398:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 399:Veno-Echo.cpp ****         //Update Base Tempo LED
 400:Veno-Echo.cpp ****         Update_BaseTempoLED();
 401:Veno-Echo.cpp **** 
 402:Veno-Echo.cpp ****         //hard limit
 403:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 404:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 405:Veno-Echo.cpp **** 
 406:Veno-Echo.cpp **** if(!PostFilters)
 407:Veno-Echo.cpp **** {
 408:Veno-Echo.cpp **** //****************************************************************************************
 409:Veno-Echo.cpp ****         //pre filters
 410:Veno-Echo.cpp ****         //process LPF
 411:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 412:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 413:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 416:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 418:Veno-Echo.cpp ****         
 419:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 420:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 422:Veno-Echo.cpp **** 
 423:Veno-Echo.cpp ****         //hard limit
 424:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 425:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 426:Veno-Echo.cpp **** 
 427:Veno-Echo.cpp ****         //process HPF
 428:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 429:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 430:Veno-Echo.cpp **** 
 431:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 433:Veno-Echo.cpp **** 
 434:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 438:Veno-Echo.cpp **** 
 439:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 440:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 441:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 29


 442:Veno-Echo.cpp **** //****************************************************************************************
 443:Veno-Echo.cpp **** }
 444:Veno-Echo.cpp **** 
 445:Veno-Echo.cpp **** else
 446:Veno-Echo.cpp **** {
 447:Veno-Echo.cpp ****     /* code */
 448:Veno-Echo.cpp **** }
 449:Veno-Echo.cpp **** 
 450:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 451:Veno-Echo.cpp ****         static float RNegFB{};
 452:Veno-Echo.cpp **** 
 453:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 454:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 456:Veno-Echo.cpp ****         
 457:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 459:Veno-Echo.cpp **** 
 460:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 461:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 462:Veno-Echo.cpp **** 
 463:Veno-Echo.cpp ****         //crossfeedback:
 464:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp ****         //get envelopes for feedback signals
 469:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 470:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 471:Veno-Echo.cpp **** 
 472:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 473:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 474:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 475:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 476:Veno-Echo.cpp ****             else LNegFB = 0.0;
 477:Veno-Echo.cpp ****             
 478:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 479:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 480:Veno-Echo.cpp ****             else RNegFB = 0.0;
 481:Veno-Echo.cpp **** 
 482:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 483:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 484:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 485:Veno-Echo.cpp ****  
 486:Veno-Echo.cpp ****         //hard limit
 487:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 488:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 489:Veno-Echo.cpp **** 
 490:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 492:Veno-Echo.cpp **** 
 493:Veno-Echo.cpp ****         // floats for wet dry mix
 494:Veno-Echo.cpp ****         float mixL;
 495:Veno-Echo.cpp ****         float mixR;
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 498:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 30


 499:Veno-Echo.cpp **** 
 500:Veno-Echo.cpp ****         //hard limit
 501:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 502:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 503:Veno-Echo.cpp **** 
 504:Veno-Echo.cpp **** if(PostFilters)
 505:Veno-Echo.cpp **** {
 506:Veno-Echo.cpp ****     //****************************************************************************************
 507:Veno-Echo.cpp ****         //post filters
 508:Veno-Echo.cpp ****         //process LPF
 509:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 510:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 511:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 512:Veno-Echo.cpp **** 
 513:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 514:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 516:Veno-Echo.cpp ****         
 517:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 518:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 520:Veno-Echo.cpp **** 
 521:Veno-Echo.cpp ****         //hard limit
 522:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 523:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 524:Veno-Echo.cpp **** 
 525:Veno-Echo.cpp ****         //process HPF
 526:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 527:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 528:Veno-Echo.cpp **** 
 529:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 531:Veno-Echo.cpp **** 
 532:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 534:Veno-Echo.cpp **** 
 535:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 536:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 538:Veno-Echo.cpp **** 
 539:Veno-Echo.cpp ****     //****************************************************************************************
 540:Veno-Echo.cpp **** }
 541:Veno-Echo.cpp **** else
 542:Veno-Echo.cpp **** {
 543:Veno-Echo.cpp ****     /* code */
 544:Veno-Echo.cpp **** }
 545:Veno-Echo.cpp ****         if(drywet < 0.5f)
 546:Veno-Echo.cpp ****         {
 547:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 549:Veno-Echo.cpp ****         }
 550:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 551:Veno-Echo.cpp ****         {
 552:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 554:Veno-Echo.cpp ****         }
 555:Veno-Echo.cpp ****         else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 31


 556:Veno-Echo.cpp ****         {
 557:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 558:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 559:Veno-Echo.cpp ****         }
 560:Veno-Echo.cpp **** 
 561:Veno-Echo.cpp ****         //send mixes to outputs
 562:Veno-Echo.cpp ****         if(mute)
 563:Veno-Echo.cpp ****         {
 564:Veno-Echo.cpp ****             out[i] = 0.0f;
 565:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 566:Veno-Echo.cpp ****         }
 567:Veno-Echo.cpp ****         else
 568:Veno-Echo.cpp ****         {
 569:Veno-Echo.cpp ****             out[i] = mixL;
 570:Veno-Echo.cpp ****             out[i+1] = mixR;
 571:Veno-Echo.cpp ****         }
 572:Veno-Echo.cpp **** 
 573:Veno-Echo.cpp ****         //write to DAC for debug
 574:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 575:Veno-Echo.cpp **** 
 576:Veno-Echo.cpp ****     }
 577:Veno-Echo.cpp **** 
 578:Veno-Echo.cpp **** }
 579:Veno-Echo.cpp **** 
 580:Veno-Echo.cpp **** void InitDelays(float samplerate)
 581:Veno-Echo.cpp **** {
 438              		.loc 19 581 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 16
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Veno-Echo.cpp **** 
 583:Veno-Echo.cpp ****     //Init fwd delays
 584:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 442              		.loc 19 584 5 view .LVU50
 443              	.LBB790:
 444              	.LBI790:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 445              		.loc 17 56 10 view .LVU51
 446              	.LBB791:
 447              	.LBB792:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 448              		.loc 17 58 29 view .LVU52
 449 0000 624B     		ldr	r3, .L36
 450 0002 6349     		ldr	r1, .L36+4
 451              	.LBE792:
 452              	.LBE791:
 453              	.LBE790:
 581:Veno-Echo.cpp **** 
 454              		.loc 19 581 1 is_stmt 0 view .LVU53
 455 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 456              		.cfi_def_cfa_offset 20
 457              		.cfi_offset 4, -20
 458              		.cfi_offset 5, -16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 32


 459              		.cfi_offset 6, -12
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0006 A3F18405 		sub	r5, r3, #132
 463 000a 85B0     		sub	sp, sp, #20
 464              		.cfi_def_cfa_offset 40
 465 000c 2846     		mov	r0, r5
 466              	.LVL15:
 467              	.L17:
 468              	.LBB797:
 469              	.LBB796:
 470              	.LBB793:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 471              		.loc 17 60 13 view .LVU54
 472 000e 0022     		movs	r2, #0
 473 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 474              		.loc 17 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 475              		.loc 17 58 29 view .LVU56
 476 0014 8B42     		cmp	r3, r1
 477 0016 FAD1     		bne	.L17
 478              	.LBE793:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 479              		.loc 17 63 9 is_stmt 0 view .LVU57
 480 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 481              		.loc 17 64 9 view .LVU58
 482 001a 5E4C     		ldr	r4, .L36+8
 483 001c 0226     		movs	r6, #2
 484              	.LBB794:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 485              		.loc 17 66 21 view .LVU59
 486 001e 1346     		mov	r3, r2
 487              	.LBE794:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 488              		.loc 17 63 9 view .LVU60
 489 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 490              		.loc 17 64 9 view .LVU61
 491 0022 2E51     		str	r6, [r5, r4]
 492              	.LVL16:
 493              	.LBB795:
 494              		.loc 17 66 31 is_stmt 1 view .LVU62
 495              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 496              		.loc 17 68 13 is_stmt 0 view .LVU63
 497 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 498              		.loc 17 66 9 view .LVU64
 499 0026 0133     		adds	r3, r3, #1
 500              	.LVL17:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 33


  69:delayline_multitap.h ****             frac_[i] = 0;
 501              		.loc 17 69 13 view .LVU65
 502 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 503              		.loc 17 68 13 view .LVU66
 504 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 505              		.loc 17 66 31 view .LVU67
 506 002e 0A68     		ldr	r2, [r1]
 507              		.loc 17 69 13 view .LVU68
 508 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 509              		.loc 17 66 9 is_stmt 1 view .LVU69
 510              	.LVL18:
  66:delayline_multitap.h ****         {
 511              		.loc 17 66 31 view .LVU70
 512 0032 9A42     		cmp	r2, r3
 513 0034 F6D8     		bhi	.L18
 514 0036 584B     		ldr	r3, .L36+12
 515              	.LVL19:
  66:delayline_multitap.h ****         {
 516              		.loc 17 66 31 is_stmt 0 view .LVU71
 517 0038 5849     		ldr	r1, .L36+16
 518 003a A3F18406 		sub	r6, r3, #132
 519 003e 3046     		mov	r0, r6
 520              	.LVL20:
 521              	.L19:
  66:delayline_multitap.h ****         {
 522              		.loc 17 66 31 view .LVU72
 523              	.LBE795:
 524              	.LBE796:
 525              	.LBE797:
 526              	.LBB798:
 527              	.LBB799:
 528              	.LBB800:
  60:delayline_multitap.h ****         }
 529              		.loc 17 60 13 view .LVU73
 530 0040 0022     		movs	r2, #0
 531 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 532              		.loc 17 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 533              		.loc 17 58 29 view .LVU75
 534 0046 8B42     		cmp	r3, r1
 535 0048 FAD1     		bne	.L19
 536              	.LBE800:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 537              		.loc 17 63 9 is_stmt 0 view .LVU76
 538 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 539              		.loc 17 64 9 view .LVU77
 540 004c 514C     		ldr	r4, .L36+8
 541 004e 0227     		movs	r7, #2
 542              	.LBB801:
  66:delayline_multitap.h ****         {
 543              		.loc 17 66 21 view .LVU78
 544 0050 1346     		mov	r3, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 34


 545              	.LBE801:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 546              		.loc 17 63 9 view .LVU79
 547 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 548              		.loc 17 64 9 view .LVU80
 549 0054 3751     		str	r7, [r6, r4]
 550              	.LVL21:
 551              	.LBB802:
  66:delayline_multitap.h ****         {
 552              		.loc 17 66 31 is_stmt 1 view .LVU81
 553              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 554              		.loc 17 68 13 is_stmt 0 view .LVU82
 555 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 556              		.loc 17 66 9 view .LVU83
 557 0058 0133     		adds	r3, r3, #1
 558              	.LVL22:
 559              		.loc 17 69 13 view .LVU84
 560 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 561              		.loc 17 68 13 view .LVU85
 562 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 563              		.loc 17 66 31 view .LVU86
 564 0060 0A68     		ldr	r2, [r1]
 565              		.loc 17 69 13 view .LVU87
 566 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 567              		.loc 17 66 9 is_stmt 1 view .LVU88
 568              	.LVL23:
  66:delayline_multitap.h ****         {
 569              		.loc 17 66 31 view .LVU89
 570 0064 9A42     		cmp	r2, r3
 571 0066 F6D8     		bhi	.L20
 572              	.LVL24:
  66:delayline_multitap.h ****         {
 573              		.loc 17 66 31 is_stmt 0 view .LVU90
 574              	.LBE802:
 575              	.LBE799:
 576              	.LBE798:
 585:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 586:Veno-Echo.cpp **** 
 587:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 588:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 577              		.loc 19 588 5 is_stmt 1 view .LVU91
 589:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 578              		.loc 19 589 16 is_stmt 0 view .LVU92
 579 0068 4D4C     		ldr	r4, .L36+20
 590:Veno-Echo.cpp **** 
 591:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 580              		.loc 19 591 16 view .LVU93
 581 006a 0820     		movs	r0, #8
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 582              		.loc 19 588 16 view .LVU94
 583 006c 4D4F     		ldr	r7, .L36+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 35


 584 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 585 0072 3D60     		str	r5, [r7]
 589:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 586              		.loc 19 589 5 is_stmt 1 view .LVU95
 587              	.LBB803:
 588              	.LBB804:
 589              	.LBB805:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 590              		.loc 18 51 9 is_stmt 0 view .LVU96
 591 0074 46F2A815 		movw	r5, #25000
 592              	.LBE805:
 593              	.LBE804:
 594              	.LBE803:
 589:Veno-Echo.cpp **** 
 595              		.loc 19 589 16 view .LVU97
 596 0078 2660     		str	r6, [r4]
 597              		.loc 19 591 5 is_stmt 1 view .LVU98
 598              		.loc 19 591 16 is_stmt 0 view .LVU99
 599 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 600              	.LVL25:
 601              		.loc 19 591 16 view .LVU100
 602 007e 0346     		mov	r3, r0	@ movhi
 603 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 604 0084 3846     		mov	r0, r7
 605 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 606 008a 0299     		ldr	r1, [sp, #8]
 607 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 608              	.LVL26:
 592:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 609              		.loc 19 592 5 is_stmt 1 view .LVU101
 610              		.loc 19 592 16 is_stmt 0 view .LVU102
 611 0090 0920     		movs	r0, #9
 612 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 613              	.LVL27:
 614 0096 0346     		mov	r3, r0	@ movhi
 615 0098 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 616 009c 2046     		mov	r0, r4
 617 009e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 618 00a2 0399     		ldr	r1, [sp, #12]
 619 00a4 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 620              	.LVL28:
 593:Veno-Echo.cpp **** 
 594:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 621              		.loc 19 594 5 is_stmt 1 view .LVU103
 622              		.loc 19 594 24 is_stmt 0 view .LVU104
 623 00a8 9FED3F0A 		vldr.32	s0, .L36+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 36


 624 00ac 3846     		mov	r0, r7
 625 00ae FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 626              	.LVL29:
 595:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 627              		.loc 19 595 5 is_stmt 1 view .LVU105
 628              		.loc 19 595 24 is_stmt 0 view .LVU106
 629 00b2 2046     		mov	r0, r4
 630              	.LBB817:
 631              	.LBB812:
 632              	.LBB807:
 633              		.loc 18 51 9 view .LVU107
 634 00b4 3D4C     		ldr	r4, .L36+32
 635              	.LBE807:
 636              	.LBE812:
 637              	.LBE817:
 638              		.loc 19 595 24 view .LVU108
 639 00b6 9FED3C0A 		vldr.32	s0, .L36+28
 640 00ba FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 641              	.LVL30:
 596:Veno-Echo.cpp **** 
 597:Veno-Echo.cpp ****     //Init rev delays
 598:Veno-Echo.cpp ****     delMemsL_REV.Init();
 642              		.loc 19 598 5 is_stmt 1 view .LVU109
 643              	.LBB818:
 644              	.LBI803:
  42:delayline_reverse.h ****     { 
 645              		.loc 18 42 10 view .LVU110
 646              	.LBB813:
 647              	.LBI804:
  48:delayline_reverse.h ****     {
 648              		.loc 18 48 10 view .LVU111
 649              	.LBB808:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 650              		.loc 18 52 9 is_stmt 0 view .LVU112
 651 00be 3C4A     		ldr	r2, .L36+36
 652 00c0 45F6C050 		movw	r0, #24000
 653 00c4 04F11803 		add	r3, r4, #24
 654 00c8 3A49     		ldr	r1, .L36+40
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 655              		.loc 18 51 9 view .LVU113
 656 00ca 2561     		str	r5, [r4, #16]
 657              		.loc 18 52 9 view .LVU114
 658 00cc A050     		str	r0, [r4, r2]
 659              	.LVL31:
 660              	.LBB806:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 661              		.loc 18 54 29 is_stmt 1 view .LVU115
 662              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 663              		.loc 18 56 13 is_stmt 0 view .LVU116
 664 00ce 0022     		movs	r2, #0
 665 00d0 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 666              		.loc 18 54 9 is_stmt 1 view .LVU117
  54:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 37


 667              		.loc 18 54 29 view .LVU118
 668 00d4 8B42     		cmp	r3, r1
 669 00d6 FAD1     		bne	.L21
 670              	.LBE806:
 671              	.LBE808:
 672              	.LBE813:
 673              	.LBE818:
 674              	.LBB819:
 675              	.LBB820:
 676              	.LBB821:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 677              		.loc 18 51 9 is_stmt 0 view .LVU119
 678 00d8 3748     		ldr	r0, .L36+44
 679 00da 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 680              		.loc 18 52 9 view .LVU120
 681 00de 344D     		ldr	r5, .L36+36
 682 00e0 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 683              		.loc 18 51 9 view .LVU121
 684 00e4 0161     		str	r1, [r0, #16]
 685              	.LBE821:
 686              	.LBE820:
 687              	.LBE819:
 688              	.LBB844:
 689              	.LBB814:
 690              	.LBB809:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 691              		.loc 18 58 9 view .LVU122
 692 00e6 0021     		movs	r1, #0
 693              	.LBE809:
 694              	.LBE814:
 695              	.LBE844:
 696              	.LBB845:
 697              	.LBB834:
 698              	.LBB824:
  52:delayline_reverse.h ****         
 699              		.loc 18 52 9 view .LVU123
 700 00e8 4651     		str	r6, [r0, r5]
 701              	.LBE824:
 702              	.LBE834:
 703              	.LBE845:
 704              	.LBB846:
 705              	.LBB815:
 706              	.LBB810:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 18 62 9 view .LVU124
 708 00ea 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 709              		.loc 18 64 9 view .LVU125
 710 00ec 334E     		ldr	r6, .L36+48
 711 00ee 00F11803 		add	r3, r0, #24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 38


  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 712              		.loc 18 62 9 view .LVU126
 713 00f2 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 714              		.loc 18 60 9 view .LVU127
 715 00f4 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 716              		.loc 18 63 9 view .LVU128
 717 00f6 324D     		ldr	r5, .L36+52
  61:delayline_reverse.h ****         playinghead_ = false;
 718              		.loc 18 61 9 view .LVU129
 719 00f8 6161     		str	r1, [r4, #20]
 720              		.loc 18 64 9 view .LVU130
 721 00fa A155     		strb	r1, [r4, r6]
 722              	.LVL32:
 723              		.loc 18 64 9 view .LVU131
 724              	.LBE810:
 725              	.LBE815:
 726              	.LBE846:
 599:Veno-Echo.cpp ****     delMemsR_REV.Init();
 727              		.loc 19 599 5 is_stmt 1 view .LVU132
 728              	.LBB847:
 729              	.LBI819:
  42:delayline_reverse.h ****     { 
 730              		.loc 18 42 10 view .LVU133
 731              	.LBB835:
 732              	.LBI820:
  48:delayline_reverse.h ****     {
 733              		.loc 18 48 10 view .LVU134
 734              	.LBB825:
 735              	.LBB822:
  54:delayline_reverse.h ****         {
 736              		.loc 18 54 29 view .LVU135
 737              	.LBE822:
 738              	.LBE825:
 739              	.LBE835:
 740              	.LBE847:
 741              	.LBB848:
 742              	.LBB816:
 743              	.LBB811:
  63:delayline_reverse.h ****         fading_ = false;
 744              		.loc 18 63 9 is_stmt 0 view .LVU136
 745 00fc 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 746              		.loc 18 59 9 view .LVU137
 747 00fe C4E90111 		strd	r1, r1, [r4, #4]
 748 0102 3049     		ldr	r1, .L36+56
 749              	.LVL33:
 750              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 751              		.loc 18 59 9 view .LVU138
 752              	.LBE811:
 753              	.LBE816:
 754              	.LBE848:
 755              	.LBB849:
 756              	.LBB836:
 757              	.LBB826:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 39


 758              	.LBB823:
  56:delayline_reverse.h ****         }
 759              		.loc 18 56 13 view .LVU139
 760 0104 0022     		movs	r2, #0
 761 0106 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 762              		.loc 18 54 9 is_stmt 1 view .LVU140
  54:delayline_reverse.h ****         {
 763              		.loc 18 54 29 view .LVU141
 764 010a 8B42     		cmp	r3, r1
 765 010c FAD1     		bne	.L22
 766              	.LBE823:
 767              	.LBE826:
 768              	.LBE836:
 769              	.LBE849:
 600:Veno-Echo.cpp **** 
 601:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 602:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 770              		.loc 19 602 21 is_stmt 0 view .LVU142
 771 010e 2E49     		ldr	r1, .L36+60
 772              	.LBB850:
 773              	.LBB837:
 774              	.LBB827:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 775              		.loc 18 58 9 view .LVU143
 776 0110 0023     		movs	r3, #0
 777              	.LBE827:
 778              	.LBE837:
 779              	.LBE850:
 780              	.LBB851:
 781              	.LBB852:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 782              		.loc 19 70 15 view .LVU144
 783 0112 DFED2E6A 		vldr.32	s13, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 784              		.loc 19 70 28 view .LVU145
 785 0116 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 786              		.loc 19 70 53 view .LVU146
 787 011a 9FED2D6A 		vldr.32	s12, .L36+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 788              		.loc 19 70 15 view .LVU147
 789 011e 36EEE77A 		vsub.f32	s14, s13, s15
 790              	.LBE852:
 791              	.LBE851:
 792              	.LBB866:
 793              	.LBB838:
 794              	.LBB828:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 795              		.loc 18 62 9 view .LVU148
 796 0122 2C4D     		ldr	r5, .L36+72
 797              	.LBE828:
 798              	.LBE838:
 799              	.LBE866:
 800              	.LBB867:
 801              	.LBB861:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 40


 802              		.loc 19 70 53 view .LVU149
 803 0124 67EE867A 		vmul.f32	s15, s15, s12
 804              	.LBE861:
 805              	.LBE867:
 806              	.LBB868:
 807              	.LBB839:
 808              	.LBB829:
 809              		.loc 18 64 9 view .LVU150
 810 0128 244E     		ldr	r6, .L36+48
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 811              		.loc 18 62 9 view .LVU151
 812 012a 4355     		strb	r3, [r0, r5]
 813              	.LBE829:
 814              	.LBE839:
 815              	.LBE868:
 816              	.LBB869:
 817              	.LBB862:
 818              	.LBB853:
 819              	.LBB854:
 820              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 41


  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 821              		.loc 20 76 31 view .LVU152
 822 012c B0EEC77A 		vabs.f32	s14, s14
 823              	.LBE854:
 824              	.LBE853:
 825              	.LBE862:
 826              	.LBE869:
 827              	.LBB870:
 828              	.LBB840:
 829              	.LBB830:
  63:delayline_reverse.h ****         fading_ = false;
 830              		.loc 18 63 9 view .LVU153
 831 0130 294D     		ldr	r5, .L36+76
  60:delayline_reverse.h ****         headDiff_ = 0;
 832              		.loc 18 60 9 view .LVU154
 833 0132 C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 834              		.loc 18 61 9 view .LVU155
 835 0134 4361     		str	r3, [r0, #20]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 42


 836              	.LBE830:
 837              	.LBE840:
 838              	.LBE870:
 839              	.LBB871:
 840              	.LBB863:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 841              		.loc 19 70 9 view .LVU156
 842 0136 B4EEE77A 		vcmpe.f32	s14, s15
 843              	.LBE863:
 844              	.LBE871:
 845              	.LBB872:
 846              	.LBB841:
 847              	.LBB831:
 848              		.loc 18 64 9 view .LVU157
 849 013a 8355     		strb	r3, [r0, r6]
 850              	.LVL34:
 851              		.loc 18 64 9 view .LVU158
 852              	.LBE831:
 853              	.LBE841:
 854              	.LBE872:
 855              		.loc 19 602 5 is_stmt 1 view .LVU159
 603:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 856              		.loc 19 603 5 view .LVU160
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 857              		.loc 19 602 21 is_stmt 0 view .LVU161
 858 013c 0C60     		str	r4, [r1]
 859              	.LBB873:
 860              	.LBB842:
 861              	.LBB832:
  63:delayline_reverse.h ****         fading_ = false;
 862              		.loc 18 63 9 view .LVU162
 863 013e 2A60     		str	r2, [r5]	@ float
 864              	.LBE832:
 865              	.LBE842:
 866              	.LBE873:
 867              	.LBB874:
 868              	.LBB864:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 869              		.loc 19 70 9 view .LVU163
 870 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 871              	.LBE864:
 872              	.LBE874:
 873              	.LBB875:
 874              	.LBB843:
 875              	.LBB833:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 876              		.loc 18 59 9 view .LVU164
 877 0144 C0E90133 		strd	r3, r3, [r0, #4]
 878              	.LBE833:
 879              	.LBE843:
 880              	.LBE875:
 881              		.loc 19 603 21 view .LVU165
 882 0148 244B     		ldr	r3, .L36+80
 883 014a 1860     		str	r0, [r3]
 604:Veno-Echo.cpp **** 
 605:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 606:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 43


 884              		.loc 19 606 5 is_stmt 1 view .LVU166
 885              	.LVL35:
 886              	.LBB876:
 887              	.LBI851:
  68:Veno-Echo.cpp ****     {
 888              		.loc 19 68 10 view .LVU167
 889              	.LBB865:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 890              		.loc 19 70 9 view .LVU168
 891              	.LBB856:
 892              	.LBI853:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 893              		.loc 20 75 3 view .LVU169
 894              	.LBB855:
 895              		.loc 20 76 5 view .LVU170
 896              		.loc 20 76 5 is_stmt 0 view .LVU171
 897              	.LBE855:
 898              	.LBE856:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 899              		.loc 19 70 9 view .LVU172
 900 014c 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 901              		.loc 19 73 13 is_stmt 1 view .LVU173
 902              	.LBB857:
 903              	.LBB858:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 904              		.loc 18 72 9 is_stmt 0 view .LVU174
 905 014e 244D     		ldr	r5, .L36+84
 906              	.LBE858:
 907              	.LBE857:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 908              		.loc 19 73 27 view .LVU175
 909 0150 C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 910              		.loc 19 74 13 is_stmt 1 view .LVU176
 911              	.LVL36:
 912              	.LBB860:
 913              	.LBI857:
  69:delayline_reverse.h ****     {
 914              		.loc 18 69 17 view .LVU177
 915              	.LBB859:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 916              		.loc 18 71 9 is_stmt 0 view .LVU178
 917 0154 2260     		str	r2, [r4]	@ float
 918              		.loc 18 72 9 view .LVU179
 919 0156 2561     		str	r5, [r4, #16]
 920              	.LVL37:
 921              	.L23:
 922              		.loc 18 72 9 view .LVU180
 923              	.LBE859:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 44


 924              	.LBE860:
 925              	.LBE865:
 926              	.LBE876:
 607:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 927              		.loc 19 607 5 is_stmt 1 view .LVU181
 928              	.LBB877:
 929              	.LBI877:
  68:Veno-Echo.cpp ****     {
 930              		.loc 19 68 10 view .LVU182
 931              	.LBB878:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 932              		.loc 19 70 9 view .LVU183
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 19 70 28 is_stmt 0 view .LVU184
 934 0158 D3ED017A 		vldr.32	s15, [r3, #4]
 935              	.LVL38:
 936              	.LBB879:
 937              	.LBI879:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 938              		.loc 20 75 3 is_stmt 1 view .LVU185
 939              	.LBB880:
 940              		.loc 20 76 5 view .LVU186
 941              		.loc 20 76 5 is_stmt 0 view .LVU187
 942              	.LBE880:
 943              	.LBE879:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 944              		.loc 19 70 15 view .LVU188
 945 015c DFED1B6A 		vldr.32	s13, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 946              		.loc 19 70 53 view .LVU189
 947 0160 9FED1B6A 		vldr.32	s12, .L36+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 948              		.loc 19 70 15 view .LVU190
 949 0164 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 950              		.loc 19 70 53 view .LVU191
 951 0168 67EE867A 		vmul.f32	s15, s15, s12
 952              	.LBB882:
 953              	.LBB881:
 954              		.loc 20 76 31 view .LVU192
 955 016c B0EEC77A 		vabs.f32	s14, s14
 956              	.LBE881:
 957              	.LBE882:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 958              		.loc 19 70 9 view .LVU193
 959 0170 B4EEE77A 		vcmpe.f32	s14, s15
 960 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 961 0178 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 962              		.loc 19 73 13 is_stmt 1 view .LVU194
 963              	.LBB883:
 964              	.LBB884:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 965              		.loc 18 71 9 is_stmt 0 view .LVU195
 966 017a 0021     		movs	r1, #0
 967              		.loc 18 72 9 view .LVU196
 968 017c 184A     		ldr	r2, .L36+84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 45


 969              	.LBE884:
 970              	.LBE883:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 971              		.loc 19 73 27 view .LVU197
 972 017e C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 973              		.loc 19 74 13 is_stmt 1 view .LVU198
 974              	.LVL39:
 975              	.LBB886:
 976              	.LBI883:
  69:delayline_reverse.h ****     {
 977              		.loc 18 69 17 view .LVU199
 978              	.LBB885:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 979              		.loc 18 71 9 is_stmt 0 view .LVU200
 980 0182 0160     		str	r1, [r0]	@ float
 981              		.loc 18 72 9 view .LVU201
 982 0184 0261     		str	r2, [r0, #16]
 983              	.LVL40:
 984              	.L16:
 985              		.loc 18 72 9 view .LVU202
 986              	.LBE885:
 987              	.LBE886:
 988              	.LBE878:
 989              	.LBE877:
 608:Veno-Echo.cpp **** 
 609:Veno-Echo.cpp **** }
 990              		.loc 19 609 1 view .LVU203
 991 0186 05B0     		add	sp, sp, #20
 992              		.cfi_def_cfa_offset 20
 993              		@ sp needed
 994 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 995              	.L37:
 996 018a 00BF     		.align	2
 997              	.L36:
 998 018c 84000000 		.word	delMemsL+132
 999 0190 84786900 		.word	delMemsL+6912132
 1000 0194 84786900 		.word	6912132
 1001 0198 84000000 		.word	delMemsR+132
 1002 019c 84786900 		.word	delMemsR+6912132
 1003 01a0 00000000 		.word	.LANCHOR1
 1004 01a4 00000000 		.word	.LANCHOR0
 1005 01a8 0000FA43 		.word	1140457472
 1006 01ac 00000000 		.word	delMemsL_REV
 1007 01b0 189F2400 		.word	2400024
 1008 01b4 189F2400 		.word	delMemsL_REV+2400024
 1009 01b8 00000000 		.word	delMemsR_REV
 1010 01bc 249F2400 		.word	2400036
 1011 01c0 209F2400 		.word	delMemsL_REV+2400032
 1012 01c4 189F2400 		.word	delMemsR_REV+2400024
 1013 01c8 00000000 		.word	.LANCHOR2
 1014 01cc 00409C47 		.word	1201422336
 1015 01d0 0AD7A33B 		.word	1000593162
 1016 01d4 1C9F2400 		.word	2400028
 1017 01d8 209F2400 		.word	delMemsR_REV+2400032
 1018 01dc 00000000 		.word	.LANCHOR3
 1019 01e0 80380100 		.word	80000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 46


 1020              		.cfi_endproc
 1021              	.LFE4289:
 1023              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1024              		.align	1
 1025              		.p2align 2,,3
 1026              		.global	_Z20Update_DelayTimeL_CVv
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu fpv5-d16
 1032              	_Z20Update_DelayTimeL_CVv:
 1033              	.LFB4291:
 610:Veno-Echo.cpp **** 
 611:Veno-Echo.cpp **** int main(void)
 612:Veno-Echo.cpp **** {
 613:Veno-Echo.cpp ****     // initialize hardware.
 614:Veno-Echo.cpp ****     hw.Configure();
 615:Veno-Echo.cpp ****     hw.Init();
 616:Veno-Echo.cpp ****     
 617:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 618:Veno-Echo.cpp **** 
 619:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 624:Veno-Echo.cpp **** 
 625:Veno-Echo.cpp ****     //Gates
 626:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 628:Veno-Echo.cpp **** 
 629:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 630:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 632:Veno-Echo.cpp ****     
 633:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 638:Veno-Echo.cpp **** 
 639:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 642:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 643:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 644:Veno-Echo.cpp **** 
 645:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 648:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 649:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 650:Veno-Echo.cpp **** 
 651:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 654:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 47


 655:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 656:Veno-Echo.cpp **** 
 657:Veno-Echo.cpp ****     // set params for CrossFade objects
 658:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 659:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 660:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 661:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 662:Veno-Echo.cpp **** 
 663:Veno-Echo.cpp ****     WidthXfade.Init();
 664:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 665:Veno-Echo.cpp **** 
 666:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 667:Veno-Echo.cpp **** 
 668:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 669:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 670:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 671:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 672:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 673:Veno-Echo.cpp **** 
 674:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 675:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 676:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 677:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 678:Veno-Echo.cpp **** 
 679:Veno-Echo.cpp ****     //setup L and R High Pass filters
 680:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 681:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 682:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 683:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 684:Veno-Echo.cpp **** 
 685:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 686:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 687:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 688:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 689:Veno-Echo.cpp **** 
 690:Veno-Echo.cpp ****     //post filters
 691:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 692:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 693:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 694:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 695:Veno-Echo.cpp **** 
 696:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 697:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 698:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 699:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 700:Veno-Echo.cpp **** 
 701:Veno-Echo.cpp ****     //setup L and R High Pass filters
 702:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 703:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 704:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 705:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 706:Veno-Echo.cpp **** 
 707:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 708:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 709:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 710:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 711:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 48


 712:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 713:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 714:Veno-Echo.cpp **** 
 715:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 716:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 717:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 718:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 719:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 720:Veno-Echo.cpp **** 
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp ****     //timers: used to limit time between updates to delay time parameters
 723:Veno-Echo.cpp ****     //dsy_tim_init(); //start timer
 724:Veno-Echo.cpp ****     //dsy_tim_start();
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 727:Veno-Echo.cpp **** 
 728:Veno-Echo.cpp ****     //setup tempo indicators
 729:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 730:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 731:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 732:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp ****     //load settings from flash
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 737:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 738:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 739:Veno-Echo.cpp **** 
 740:Veno-Echo.cpp ****     //initialize DAC
 741:Veno-Echo.cpp ****     //dsy_dac_init(&hw.dac_handle, DSY_DAC_CHN_BOTH);
 742:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN1, 0);
 743:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN2, 0);
 744:Veno-Echo.cpp **** 
 745:Veno-Echo.cpp ****     //ADC
 746:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 747:Veno-Echo.cpp **** 
 748:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 749:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 750:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 751:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 752:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 753:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 754:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 755:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 756:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 760:Veno-Echo.cpp ****     hw.adc.Start();
 761:Veno-Echo.cpp **** 
 762:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 763:Veno-Echo.cpp ****     // start audio callback
 764:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 765:Veno-Echo.cpp **** 
 766:Veno-Echo.cpp ****     
 767:Veno-Echo.cpp **** 
 768:Veno-Echo.cpp ****      for(;;)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 49


 769:Veno-Echo.cpp ****      {
 770:Veno-Echo.cpp **** 
 771:Veno-Echo.cpp **** /*
 772:Veno-Echo.cpp ****         if(save_flag)
 773:Veno-Echo.cpp ****         {
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 776:Veno-Echo.cpp ****             {
 777:Veno-Echo.cpp ****                 //reset flag
 778:Veno-Echo.cpp ****                 //System::Delay(1000);
 779:Veno-Echo.cpp ****                 save_flag = false;
 780:Veno-Echo.cpp ****             }
 781:Veno-Echo.cpp ****         }
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp **** */
 784:Veno-Echo.cpp ****      }
 785:Veno-Echo.cpp **** 
 786:Veno-Echo.cpp **** }
 787:Veno-Echo.cpp **** 
 788:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 789:Veno-Echo.cpp **** {
 1034              		.loc 19 789 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 790:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1038              		.loc 19 790 5 view .LVU205
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1039              		.loc 19 789 1 is_stmt 0 view .LVU206
 1040 0000 08B5     		push	{r3, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 1044              		.loc 19 790 36 view .LVU207
 1045 0002 0021     		movs	r1, #0
 1046 0004 0348     		ldr	r0, .L40
 1047 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1048              	.LVL41:
 1049              		.loc 19 790 19 view .LVU208
 1050 000a 034B     		ldr	r3, .L40+4
 1051 000c 83ED000A 		vstr.32	s0, [r3]
 791:Veno-Echo.cpp **** }
 1052              		.loc 19 791 1 view .LVU209
 1053 0010 08BD     		pop	{r3, pc}
 1054              	.L41:
 1055 0012 00BF     		.align	2
 1056              	.L40:
 1057 0014 18000000 		.word	.LANCHOR4+24
 1058 0018 00000000 		.word	.LANCHOR5
 1059              		.cfi_endproc
 1060              	.LFE4291:
 1062              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1063              		.align	1
 1064              		.p2align 2,,3
 1065              		.global	_Z20Update_DelayTimeR_CVv
 1066              		.syntax unified
 1067              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 50


 1068              		.thumb_func
 1069              		.fpu fpv5-d16
 1071              	_Z20Update_DelayTimeR_CVv:
 1072              	.LFB4293:
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp **** void Update_DelayTimeL()
 794:Veno-Echo.cpp **** {
 795:Veno-Echo.cpp ****     static bool lastShift{};
 796:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 797:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 798:Veno-Echo.cpp ****     
 799:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 800:Veno-Echo.cpp **** 
 801:Veno-Echo.cpp ****     //update pot values
 802:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 803:Veno-Echo.cpp **** 
 804:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 805:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 806:Veno-Echo.cpp ****     static int counterL{};
 807:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 808:Veno-Echo.cpp **** 
 809:Veno-Echo.cpp ****     if (!shift) //default control
 810:Veno-Echo.cpp ****     {
 811:Veno-Echo.cpp ****         static float delayTimeL_new{};
 812:Veno-Echo.cpp ****         //udpate pickup
 813:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 814:Veno-Echo.cpp ****         {
 815:Veno-Echo.cpp ****             lastShift = shift;
 816:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 817:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 818:Veno-Echo.cpp ****         } 
 819:Veno-Echo.cpp ****         else    //not a recent shift change
 820:Veno-Echo.cpp ****         {
 821:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 822:Veno-Echo.cpp ****             {
 823:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 824:Veno-Echo.cpp ****                 {
 825:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 826:Veno-Echo.cpp ****                 }
 827:Veno-Echo.cpp ****             }
 828:Veno-Echo.cpp ****         }
 829:Veno-Echo.cpp **** 
 830:Veno-Echo.cpp ****         float delayTimeL{};
 831:Veno-Echo.cpp **** 
 832:Veno-Echo.cpp ****     if(delayTimeL_pickup)
 833:Veno-Echo.cpp ****     {
 834:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 835:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 836:Veno-Echo.cpp ****     }
 837:Veno-Echo.cpp **** 
 838:Veno-Echo.cpp ****     else
 839:Veno-Echo.cpp ****     {
 840:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 841:Veno-Echo.cpp ****     }
 842:Veno-Echo.cpp **** 
 843:Veno-Echo.cpp ****     if (!syncMode)
 844:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 51


 845:Veno-Echo.cpp ****         if (counterL == 0)
 846:Veno-Echo.cpp ****         {
 847:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
 848:Veno-Echo.cpp ****         }
 849:Veno-Echo.cpp ****     }
 850:Veno-Echo.cpp ****     else    //syncmode
 851:Veno-Echo.cpp ****     {
 852:Veno-Echo.cpp **** 
 853:Veno-Echo.cpp ****         if (counterL == 0)
 854:Veno-Echo.cpp ****         {
 855:Veno-Echo.cpp ****             //float div_L_Input{DelayTimeL};
 856:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 857:Veno-Echo.cpp ****             {
 858:Veno-Echo.cpp ****                 delayL_flag = true;
 859:Veno-Echo.cpp ****             }
 860:Veno-Echo.cpp ****         }
 861:Veno-Echo.cpp ****     }
 862:Veno-Echo.cpp **** }   //not shift mode
 863:Veno-Echo.cpp **** 
 864:Veno-Echo.cpp **** else    //shift mode
 865:Veno-Echo.cpp **** {
 866:Veno-Echo.cpp ****     static float Rev_DelayTime_new{};
 867:Veno-Echo.cpp **** 
 868:Veno-Echo.cpp ****     if (shift != lastShift) //recent shift change
 869:Veno-Echo.cpp ****     {
 870:Veno-Echo.cpp ****         lastShift = shift;
 871:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 872:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 873:Veno-Echo.cpp ****     }
 874:Veno-Echo.cpp **** 
 875:Veno-Echo.cpp ****     else    //not a recent shift change
 876:Veno-Echo.cpp ****     {
 877:Veno-Echo.cpp ****         if(!Rev_DelayTime_pickup) //not picked up
 878:Veno-Echo.cpp ****         {
 879:Veno-Echo.cpp ****             if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 880:Veno-Echo.cpp ****             {
 881:Veno-Echo.cpp ****                 Rev_DelayTime_pickup = true;   //set picked up
 882:Veno-Echo.cpp ****             }
 883:Veno-Echo.cpp ****         }
 884:Veno-Echo.cpp ****     }
 885:Veno-Echo.cpp **** 
 886:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup)
 887:Veno-Echo.cpp ****     {
 888:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 889:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 890:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 891:Veno-Echo.cpp ****         //save setting:
 892:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 893:Veno-Echo.cpp ****     }
 894:Veno-Echo.cpp **** }
 895:Veno-Echo.cpp ****     
 896:Veno-Echo.cpp **** }
 897:Veno-Echo.cpp **** 
 898:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 899:Veno-Echo.cpp **** {
 1073              		.loc 19 899 1 is_stmt 1 view -0
 1074              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 52


 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 900:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1077              		.loc 19 900 5 view .LVU211
 899:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1078              		.loc 19 899 1 is_stmt 0 view .LVU212
 1079 0000 08B5     		push	{r3, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 3, -8
 1082              		.cfi_offset 14, -4
 1083              		.loc 19 900 36 view .LVU213
 1084 0002 0121     		movs	r1, #1
 1085 0004 0348     		ldr	r0, .L44
 1086 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1087              	.LVL42:
 1088              		.loc 19 900 19 view .LVU214
 1089 000a 034B     		ldr	r3, .L44+4
 1090 000c 83ED000A 		vstr.32	s0, [r3]
 901:Veno-Echo.cpp **** }
 1091              		.loc 19 901 1 view .LVU215
 1092 0010 08BD     		pop	{r3, pc}
 1093              	.L45:
 1094 0012 00BF     		.align	2
 1095              	.L44:
 1096 0014 18000000 		.word	.LANCHOR4+24
 1097 0018 00000000 		.word	.LANCHOR6
 1098              		.cfi_endproc
 1099              	.LFE4293:
 1101              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 1102              		.align	1
 1103              		.p2align 2,,3
 1104              		.global	_Z19Update_feedbackL_CVv
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv5-d16
 1110              	_Z19Update_feedbackL_CVv:
 1111              	.LFB4295:
 902:Veno-Echo.cpp **** 
 903:Veno-Echo.cpp **** void Update_DelayTimeR()
 904:Veno-Echo.cpp **** {
 905:Veno-Echo.cpp ****     static bool lastShift{};
 906:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 907:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 908:Veno-Echo.cpp ****     
 909:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 910:Veno-Echo.cpp **** 
 911:Veno-Echo.cpp ****     //update pot values
 912:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 913:Veno-Echo.cpp **** 
 914:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 915:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 916:Veno-Echo.cpp ****     static int counterR{};
 917:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 918:Veno-Echo.cpp **** 
 919:Veno-Echo.cpp ****     if (!shift) //default control
 920:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 53


 921:Veno-Echo.cpp ****         static float delayTimeR_new{};
 922:Veno-Echo.cpp ****         //udpate pickup
 923:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 924:Veno-Echo.cpp ****         {
 925:Veno-Echo.cpp ****             lastShift = shift;
 926:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 927:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 928:Veno-Echo.cpp ****         } 
 929:Veno-Echo.cpp ****         else    //not a default shift change
 930:Veno-Echo.cpp ****         {
 931:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 932:Veno-Echo.cpp ****             {
 933:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 934:Veno-Echo.cpp ****                 {
 935:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 936:Veno-Echo.cpp ****                 }
 937:Veno-Echo.cpp ****             }
 938:Veno-Echo.cpp ****         }
 939:Veno-Echo.cpp **** 
 940:Veno-Echo.cpp ****         float delayTimeR{};
 941:Veno-Echo.cpp **** 
 942:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 943:Veno-Echo.cpp ****         {
 944:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 945:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 946:Veno-Echo.cpp ****         }
 947:Veno-Echo.cpp **** 
 948:Veno-Echo.cpp ****         else
 949:Veno-Echo.cpp ****         {
 950:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 951:Veno-Echo.cpp ****         }
 952:Veno-Echo.cpp **** 
 953:Veno-Echo.cpp ****         if (!syncMode)
 954:Veno-Echo.cpp ****         {
 955:Veno-Echo.cpp ****             if (counterR == 0)
 956:Veno-Echo.cpp ****             {
 957:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 958:Veno-Echo.cpp ****             }
 959:Veno-Echo.cpp **** 
 960:Veno-Echo.cpp ****         }
 961:Veno-Echo.cpp ****         else    //syncmode
 962:Veno-Echo.cpp ****         {
 963:Veno-Echo.cpp ****             if (counterR == 0)
 964:Veno-Echo.cpp ****             {
 965:Veno-Echo.cpp ****                 //float div_R_Input{1.0f - delayTimeR}; //invert pot range
 966:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 967:Veno-Echo.cpp ****                 {
 968:Veno-Echo.cpp ****                     delayR_flag = true;
 969:Veno-Echo.cpp ****                 }
 970:Veno-Echo.cpp ****             }
 971:Veno-Echo.cpp ****         }
 972:Veno-Echo.cpp ****     }   //not shift mode
 973:Veno-Echo.cpp **** 
 974:Veno-Echo.cpp ****     else    //shift mode
 975:Veno-Echo.cpp ****     {
 976:Veno-Echo.cpp **** 
 977:Veno-Echo.cpp ****         static float tapRatio_new{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 54


 978:Veno-Echo.cpp **** 
 979:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 980:Veno-Echo.cpp ****         {
 981:Veno-Echo.cpp ****             lastShift = shift;
 982:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 983:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 984:Veno-Echo.cpp ****         }
 985:Veno-Echo.cpp **** 
 986:Veno-Echo.cpp ****         else    //not a recent shift change
 987:Veno-Echo.cpp ****         {
 988:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 989:Veno-Echo.cpp ****             {
 990:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 991:Veno-Echo.cpp ****                 {
 992:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 993:Veno-Echo.cpp ****                 }
 994:Veno-Echo.cpp ****             }
 995:Veno-Echo.cpp ****         }
 996:Veno-Echo.cpp **** 
 997:Veno-Echo.cpp ****         if(tapRatio_pickup)
 998:Veno-Echo.cpp ****         {
 999:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1000:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1001:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1002:Veno-Echo.cpp ****             //save setting:
1003:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1004:Veno-Echo.cpp ****         }
1005:Veno-Echo.cpp ****     }
1006:Veno-Echo.cpp ****     
1007:Veno-Echo.cpp **** }
1008:Veno-Echo.cpp **** void Update_feedbackL_CV()
1009:Veno-Echo.cpp **** {
 1112              		.loc 19 1009 1 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
1010:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1116              		.loc 19 1010 5 view .LVU217
1009:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1117              		.loc 19 1009 1 is_stmt 0 view .LVU218
 1118 0000 08B5     		push	{r3, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 3, -8
 1121              		.cfi_offset 14, -4
 1122              		.loc 19 1010 35 view .LVU219
 1123 0002 0221     		movs	r1, #2
 1124 0004 0348     		ldr	r0, .L48
 1125 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1126              	.LVL43:
 1127              		.loc 19 1010 18 view .LVU220
 1128 000a 034B     		ldr	r3, .L48+4
 1129 000c 83ED000A 		vstr.32	s0, [r3]
1011:Veno-Echo.cpp **** }
 1130              		.loc 19 1011 1 view .LVU221
 1131 0010 08BD     		pop	{r3, pc}
 1132              	.L49:
 1133 0012 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 55


 1134              	.L48:
 1135 0014 18000000 		.word	.LANCHOR4+24
 1136 0018 00000000 		.word	.LANCHOR7
 1137              		.cfi_endproc
 1138              	.LFE4295:
 1140              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 1141              		.align	1
 1142              		.p2align 2,,3
 1143              		.global	_Z16Update_feedbackLv
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv5-d16
 1149              	_Z16Update_feedbackLv:
 1150              	.LFB4296:
1012:Veno-Echo.cpp **** void Update_feedbackL()
1013:Veno-Echo.cpp **** {
 1151              		.loc 19 1013 1 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
1014:Veno-Echo.cpp ****     static bool lastShift{};
 1155              		.loc 19 1014 5 view .LVU223
1015:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 1156              		.loc 19 1015 5 view .LVU224
1016:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 1157              		.loc 19 1016 5 view .LVU225
1017:Veno-Echo.cpp **** 
1018:Veno-Echo.cpp ****     static float feedbackL_Last{};
 1158              		.loc 19 1018 5 view .LVU226
1019:Veno-Echo.cpp **** 
1020:Veno-Echo.cpp ****     //get pot values:
1021:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1022:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1159              		.loc 19 1022 5 view .LVU227
 1160              		.loc 19 1022 43 is_stmt 0 view .LVU228
 1161 0000 0122     		movs	r2, #1
 1162 0002 0721     		movs	r1, #7
 1163 0004 6248     		ldr	r0, .L78
1013:Veno-Echo.cpp ****     static bool lastShift{};
 1164              		.loc 19 1013 1 view .LVU229
 1165 0006 10B5     		push	{r4, lr}
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 4, -8
 1168              		.cfi_offset 14, -4
 1169 0008 2DED028B 		vpush.64	{d8}
 1170              		.cfi_def_cfa_offset 16
 1171              		.cfi_offset 80, -16
 1172              		.cfi_offset 81, -12
 1173              		.loc 19 1022 43 view .LVU230
 1174 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1175              	.LVL44:
 1176              	.LBB887:
1023:Veno-Echo.cpp **** 
1024:Veno-Echo.cpp ****     if (!shift) //default controls
 1177              		.loc 19 1024 9 view .LVU231
 1178 0010 604B     		ldr	r3, .L78+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 56


 1179              	.LVL45:
 1180              		.loc 19 1024 9 view .LVU232
 1181              	.LBE887:
 1182              		.loc 19 1024 5 is_stmt 1 view .LVU233
 1183              	.LBB923:
 1184              	.LBB888:
1025:Veno-Echo.cpp ****     {   
1026:Veno-Echo.cpp ****         static float feedbackL_new{};
1027:Veno-Echo.cpp ****         //update pickup
1028:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1185              		.loc 19 1028 19 is_stmt 0 view .LVU234
 1186 0012 614A     		ldr	r2, .L78+8
 1187              	.LBE888:
1024:Veno-Echo.cpp ****     {   
 1188              		.loc 19 1024 5 view .LVU235
 1189 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1190 0016 002B     		cmp	r3, #0
 1191 0018 3DD1     		bne	.L51
 1192              	.LBB911:
1026:Veno-Echo.cpp ****         //update pickup
 1193              		.loc 19 1026 9 is_stmt 1 view .LVU236
 1194              		.loc 19 1028 9 view .LVU237
 1195 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1196 001c 0029     		cmp	r1, #0
 1197 001e 47D0     		beq	.L52
1029:Veno-Echo.cpp ****         {
1030:Veno-Echo.cpp ****             lastShift = shift;
 1198              		.loc 19 1030 13 view .LVU238
1031:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1199              		.loc 19 1031 30 is_stmt 0 view .LVU239
 1200 0020 5E48     		ldr	r0, .L78+12
1032:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 1201              		.loc 19 1032 27 view .LVU240
 1202 0022 5F49     		ldr	r1, .L78+16
1030:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1203              		.loc 19 1030 23 view .LVU241
 1204 0024 1370     		strb	r3, [r2]
1031:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1205              		.loc 19 1031 13 is_stmt 1 view .LVU242
1031:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1206              		.loc 19 1031 30 is_stmt 0 view .LVU243
 1207 0026 0370     		strb	r3, [r0]
 1208              		.loc 19 1032 13 is_stmt 1 view .LVU244
 1209              		.loc 19 1032 27 is_stmt 0 view .LVU245
 1210 0028 81ED000A 		vstr.32	s0, [r1]
 1211              	.L53:
1033:Veno-Echo.cpp ****         } 
1034:Veno-Echo.cpp ****         else    //not a default shift change
1035:Veno-Echo.cpp ****         {
1036:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1037:Veno-Echo.cpp ****             {
1038:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1039:Veno-Echo.cpp ****                 {
1040:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1041:Veno-Echo.cpp ****                 }
1042:Veno-Echo.cpp ****             }
1043:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 57


1044:Veno-Echo.cpp **** 
1045:Veno-Echo.cpp ****         float feedbackL_combo{};
 1212              		.loc 19 1045 9 is_stmt 1 view .LVU246
 1213              	.LVL46:
1046:Veno-Echo.cpp **** 
1047:Veno-Echo.cpp ****         if(feedbackL_pickup)
 1214              		.loc 19 1047 9 view .LVU247
1048:Veno-Echo.cpp ****         {
1049:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1050:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1051:Veno-Echo.cpp ****         }
1052:Veno-Echo.cpp **** 
1053:Veno-Echo.cpp ****         else
1054:Veno-Echo.cpp ****         {
1055:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
 1215              		.loc 19 1055 13 view .LVU248
 1216              	.LBB889:
 1217              	.LBI889:
1056:Veno-Echo.cpp ****         }
1057:Veno-Echo.cpp ****   
1058:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1059:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1060:Veno-Echo.cpp ****     }
1061:Veno-Echo.cpp ****     else    //alternate controls
1062:Veno-Echo.cpp ****     {
1063:Veno-Echo.cpp ****         static float HPCutoff_new{};
1064:Veno-Echo.cpp **** 
1065:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1066:Veno-Echo.cpp ****         {
1067:Veno-Echo.cpp ****             lastShift = shift;
1068:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1069:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1070:Veno-Echo.cpp ****         }
1071:Veno-Echo.cpp **** 
1072:Veno-Echo.cpp ****         else    //not a recent shift change
1073:Veno-Echo.cpp ****         {
1074:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1075:Veno-Echo.cpp ****             {
1076:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1077:Veno-Echo.cpp ****                 {
1078:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1079:Veno-Echo.cpp ****                 }
1080:Veno-Echo.cpp ****             }
1081:Veno-Echo.cpp ****         }
1082:Veno-Echo.cpp **** 
1083:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1084:Veno-Echo.cpp ****         {
1085:Veno-Echo.cpp ****             float HPCutoff{};
1086:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1087:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1088:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1089:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1090:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1091:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1092:Veno-Echo.cpp ****         }
1093:Veno-Echo.cpp ****     }
1094:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 58


1095:Veno-Echo.cpp **** 
1096:Veno-Echo.cpp **** void Update_feedbackR_CV()
1097:Veno-Echo.cpp **** {
1098:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1099:Veno-Echo.cpp **** }
1100:Veno-Echo.cpp **** 
1101:Veno-Echo.cpp **** void Update_feedbackR()
1102:Veno-Echo.cpp **** {
1103:Veno-Echo.cpp ****     static bool lastShift{};
1104:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1105:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1106:Veno-Echo.cpp **** 
1107:Veno-Echo.cpp ****     static float feedbackR_Last{};
1108:Veno-Echo.cpp **** 
1109:Veno-Echo.cpp ****     //get pot values:
1110:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1111:Veno-Echo.cpp **** 
1112:Veno-Echo.cpp ****     if (!shift) //default controls
1113:Veno-Echo.cpp ****     {   
1114:Veno-Echo.cpp ****         static float feedbackR_new{};
1115:Veno-Echo.cpp ****         //update pickup
1116:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1117:Veno-Echo.cpp ****         {
1118:Veno-Echo.cpp ****             lastShift = shift;
1119:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1120:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1121:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1122:Veno-Echo.cpp ****         } 
1123:Veno-Echo.cpp ****         else    //not a recent shift change
1124:Veno-Echo.cpp ****         {
1125:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1126:Veno-Echo.cpp ****             {
1127:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1128:Veno-Echo.cpp ****                 {
1129:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1130:Veno-Echo.cpp ****                 }
1131:Veno-Echo.cpp ****             }
1132:Veno-Echo.cpp ****         }
1133:Veno-Echo.cpp **** 
1134:Veno-Echo.cpp ****         float feedbackR_combo{};
1135:Veno-Echo.cpp ****         
1136:Veno-Echo.cpp ****         if(feedbackR_pickup)
1137:Veno-Echo.cpp ****         {
1138:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1139:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1140:Veno-Echo.cpp ****         }
1141:Veno-Echo.cpp **** 
1142:Veno-Echo.cpp ****         else
1143:Veno-Echo.cpp ****         {
1144:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1145:Veno-Echo.cpp ****         }
1146:Veno-Echo.cpp **** 
1147:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1148:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1149:Veno-Echo.cpp ****     }
1150:Veno-Echo.cpp ****     else    //alternate controls
1151:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 59


1152:Veno-Echo.cpp **** 
1153:Veno-Echo.cpp ****         static float LPCutoff_new{};
1154:Veno-Echo.cpp **** 
1155:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1156:Veno-Echo.cpp ****         {
1157:Veno-Echo.cpp ****             lastShift = shift;
1158:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1159:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1160:Veno-Echo.cpp ****         }
1161:Veno-Echo.cpp **** 
1162:Veno-Echo.cpp ****         else    //not a recent shift change
1163:Veno-Echo.cpp ****         {
1164:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1165:Veno-Echo.cpp ****             {
1166:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1167:Veno-Echo.cpp ****                 {
1168:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1169:Veno-Echo.cpp ****                 }
1170:Veno-Echo.cpp ****             }
1171:Veno-Echo.cpp ****         }
1172:Veno-Echo.cpp **** 
1173:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1174:Veno-Echo.cpp ****         {
1175:Veno-Echo.cpp ****             float LPCutoff{};
1176:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1177:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1178:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1179:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1180:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1181:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1182:Veno-Echo.cpp ****         }
1183:Veno-Echo.cpp ****     }
1184:Veno-Echo.cpp **** }
1185:Veno-Echo.cpp **** 
1186:Veno-Echo.cpp **** void Update_drywet_CV()
1187:Veno-Echo.cpp **** {
1188:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1189:Veno-Echo.cpp **** }
1190:Veno-Echo.cpp **** 
1191:Veno-Echo.cpp **** void Update_drywet()
1192:Veno-Echo.cpp **** {
1193:Veno-Echo.cpp ****     static bool lastShift{};
1194:Veno-Echo.cpp ****     static bool drywet_pickup{};
1195:Veno-Echo.cpp ****     static bool Res_pickup{};
1196:Veno-Echo.cpp **** 
1197:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1198:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1199:Veno-Echo.cpp **** 
1200:Veno-Echo.cpp ****     //get pot values:
1201:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1202:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1203:Veno-Echo.cpp **** 
1204:Veno-Echo.cpp ****     if (!shift) //default controls
1205:Veno-Echo.cpp ****     {   
1206:Veno-Echo.cpp **** 
1207:Veno-Echo.cpp ****         static float drywet_new{};
1208:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 60


1209:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1210:Veno-Echo.cpp ****         {
1211:Veno-Echo.cpp ****             lastShift = shift;
1212:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1213:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1214:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1215:Veno-Echo.cpp ****         } 
1216:Veno-Echo.cpp ****         
1217:Veno-Echo.cpp ****         else    //not a recent shift change
1218:Veno-Echo.cpp ****         {
1219:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1220:Veno-Echo.cpp ****             {
1221:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1222:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1223:Veno-Echo.cpp ****                 {
1224:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1225:Veno-Echo.cpp ****                 }
1226:Veno-Echo.cpp ****             }
1227:Veno-Echo.cpp **** 
1228:Veno-Echo.cpp ****         }
1229:Veno-Echo.cpp ****         
1230:Veno-Echo.cpp ****         float drywetcombo{};
1231:Veno-Echo.cpp **** 
1232:Veno-Echo.cpp ****         if (drywet_pickup)
1233:Veno-Echo.cpp ****         {
1234:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1235:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1236:Veno-Echo.cpp ****         }
1237:Veno-Echo.cpp **** 
1238:Veno-Echo.cpp ****         else
1239:Veno-Echo.cpp ****         {
1240:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1241:Veno-Echo.cpp ****         }
1242:Veno-Echo.cpp **** 
1243:Veno-Echo.cpp ****         float drywetTarget{};
1244:Veno-Echo.cpp **** 
1245:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1246:Veno-Echo.cpp ****         {
1247:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1248:Veno-Echo.cpp ****         }
1249:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1250:Veno-Echo.cpp ****         {
1251:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1252:Veno-Echo.cpp ****         }
1253:Veno-Echo.cpp ****         else
1254:Veno-Echo.cpp ****         {
1255:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
1256:Veno-Echo.cpp ****         }
1257:Veno-Echo.cpp **** 
1258:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1259:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1260:Veno-Echo.cpp ****     }
1261:Veno-Echo.cpp ****     else    //alternate controls
1262:Veno-Echo.cpp ****     {
1263:Veno-Echo.cpp ****         static float Res_new{};
1264:Veno-Echo.cpp **** 
1265:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 61


1266:Veno-Echo.cpp ****         {
1267:Veno-Echo.cpp ****             lastShift = shift;
1268:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1269:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1270:Veno-Echo.cpp ****         }
1271:Veno-Echo.cpp **** 
1272:Veno-Echo.cpp ****         else    //not a recent shift change
1273:Veno-Echo.cpp ****         {
1274:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1275:Veno-Echo.cpp ****             {
1276:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1277:Veno-Echo.cpp ****                 {
1278:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1279:Veno-Echo.cpp ****                 }
1280:Veno-Echo.cpp ****             }
1281:Veno-Echo.cpp ****         }
1282:Veno-Echo.cpp **** 
1283:Veno-Echo.cpp ****         if(Res_pickup)
1284:Veno-Echo.cpp ****         {
1285:Veno-Echo.cpp ****             float Res{};
1286:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1287:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1288:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1289:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1290:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1291:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1292:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1293:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1294:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1295:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1296:Veno-Echo.cpp ****         }
1297:Veno-Echo.cpp ****     }
1298:Veno-Echo.cpp **** }
1299:Veno-Echo.cpp **** 
1300:Veno-Echo.cpp **** void Update_width_CV()
1301:Veno-Echo.cpp **** {
1302:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1303:Veno-Echo.cpp **** }
1304:Veno-Echo.cpp **** 
1305:Veno-Echo.cpp **** void Update_width()
1306:Veno-Echo.cpp **** {
1307:Veno-Echo.cpp ****     static bool lastShift{};
1308:Veno-Echo.cpp ****     static bool width_pickup{};
1309:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1310:Veno-Echo.cpp **** 
1311:Veno-Echo.cpp ****     static float width_Last{};
1312:Veno-Echo.cpp **** 
1313:Veno-Echo.cpp ****     //get pot values:
1314:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1315:Veno-Echo.cpp **** 
1316:Veno-Echo.cpp ****     if (!shift) //default controls
1317:Veno-Echo.cpp ****     {   
1318:Veno-Echo.cpp ****         static float width_new{};
1319:Veno-Echo.cpp ****         //update pickup
1320:Veno-Echo.cpp ****         if (shift != lastShift)
1321:Veno-Echo.cpp ****         {
1322:Veno-Echo.cpp ****             lastShift = shift;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 62


1323:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1324:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1325:Veno-Echo.cpp ****         }
1326:Veno-Echo.cpp **** 
1327:Veno-Echo.cpp ****         else
1328:Veno-Echo.cpp ****         {
1329:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1330:Veno-Echo.cpp ****             {
1331:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1332:Veno-Echo.cpp ****                 {
1333:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1334:Veno-Echo.cpp ****                 }
1335:Veno-Echo.cpp ****             }
1336:Veno-Echo.cpp **** 
1337:Veno-Echo.cpp ****         }
1338:Veno-Echo.cpp **** 
1339:Veno-Echo.cpp ****         float widthTarget{};
1340:Veno-Echo.cpp **** 
1341:Veno-Echo.cpp ****         if(width_pickup)
1342:Veno-Echo.cpp ****         {
1343:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1344:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1345:Veno-Echo.cpp ****         }
1346:Veno-Echo.cpp **** 
1347:Veno-Echo.cpp ****         else
1348:Veno-Echo.cpp ****         {        
1349:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1350:Veno-Echo.cpp ****         }
1351:Veno-Echo.cpp ****             
1352:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1353:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1354:Veno-Echo.cpp ****     }
1355:Veno-Echo.cpp **** 
1356:Veno-Echo.cpp ****     else    //alternate controls
1357:Veno-Echo.cpp ****     {
1358:Veno-Echo.cpp ****         static float ModDepth_new{};
1359:Veno-Echo.cpp **** 
1360:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1361:Veno-Echo.cpp ****         {
1362:Veno-Echo.cpp ****             lastShift = shift;
1363:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1364:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1365:Veno-Echo.cpp ****         }
1366:Veno-Echo.cpp **** 
1367:Veno-Echo.cpp ****         else    //not a recent shift change
1368:Veno-Echo.cpp ****         {
1369:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1370:Veno-Echo.cpp ****             {
1371:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1372:Veno-Echo.cpp ****                 {
1373:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1374:Veno-Echo.cpp ****                 }
1375:Veno-Echo.cpp ****             }
1376:Veno-Echo.cpp ****         }
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****         if(ModDepth_pickup)
1379:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 63


1380:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1381:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1382:Veno-Echo.cpp ****         }
1383:Veno-Echo.cpp ****     }
1384:Veno-Echo.cpp **** }
1385:Veno-Echo.cpp **** 
1386:Veno-Echo.cpp **** void Update_crossfeedback()
1387:Veno-Echo.cpp **** {
1388:Veno-Echo.cpp ****     static bool lastShift{};
1389:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1390:Veno-Echo.cpp ****     static bool modRate_pickup{};
1391:Veno-Echo.cpp **** 
1392:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1393:Veno-Echo.cpp **** 
1394:Veno-Echo.cpp ****     //get pot values:
1395:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****     if (!shift) //default controls
1398:Veno-Echo.cpp ****     {   
1399:Veno-Echo.cpp ****         static float crossfeedback_new{};
1400:Veno-Echo.cpp ****         //update pickup
1401:Veno-Echo.cpp ****         if (shift != lastShift)
1402:Veno-Echo.cpp ****         {
1403:Veno-Echo.cpp ****             lastShift = shift;
1404:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1405:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1406:Veno-Echo.cpp ****         }
1407:Veno-Echo.cpp **** 
1408:Veno-Echo.cpp ****         else
1409:Veno-Echo.cpp ****         {
1410:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1411:Veno-Echo.cpp ****             {
1412:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1413:Veno-Echo.cpp ****                 {
1414:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1415:Veno-Echo.cpp ****                 }
1416:Veno-Echo.cpp ****             }
1417:Veno-Echo.cpp ****         }
1418:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1419:Veno-Echo.cpp **** 
1420:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1421:Veno-Echo.cpp ****         {
1422:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1423:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1424:Veno-Echo.cpp ****         }
1425:Veno-Echo.cpp **** 
1426:Veno-Echo.cpp ****         else
1427:Veno-Echo.cpp ****         {
1428:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1429:Veno-Echo.cpp ****         }
1430:Veno-Echo.cpp **** 
1431:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1432:Veno-Echo.cpp ****     }
1433:Veno-Echo.cpp ****     else    //alternate controls
1434:Veno-Echo.cpp ****     {
1435:Veno-Echo.cpp ****         static float modRate_new{};
1436:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 64


1437:Veno-Echo.cpp ****         if (shift != lastShift)
1438:Veno-Echo.cpp ****         {
1439:Veno-Echo.cpp ****             lastShift = shift;
1440:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1441:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1442:Veno-Echo.cpp ****         }
1443:Veno-Echo.cpp **** 
1444:Veno-Echo.cpp ****         else
1445:Veno-Echo.cpp ****         {
1446:Veno-Echo.cpp ****             if(!modRate_pickup)
1447:Veno-Echo.cpp ****             {
1448:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1449:Veno-Echo.cpp ****                 {
1450:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1451:Veno-Echo.cpp ****                 }
1452:Veno-Echo.cpp ****             }
1453:Veno-Echo.cpp ****         }
1454:Veno-Echo.cpp **** 
1455:Veno-Echo.cpp ****         if(modRate_pickup)
1456:Veno-Echo.cpp ****         {
1457:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1458:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1459:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1460:Veno-Echo.cpp ****         }
1461:Veno-Echo.cpp ****     }
1462:Veno-Echo.cpp **** }
1463:Veno-Echo.cpp **** 
1464:Veno-Echo.cpp **** void Update_filterXfade()
1465:Veno-Echo.cpp **** {
1466:Veno-Echo.cpp ****     static bool lastShift{};
1467:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1468:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1469:Veno-Echo.cpp **** 
1470:Veno-Echo.cpp ****     static float filterXfade_last{};
1471:Veno-Echo.cpp **** 
1472:Veno-Echo.cpp ****     //get pot values:
1473:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1474:Veno-Echo.cpp **** 
1475:Veno-Echo.cpp ****     if (!shift) //default controls
1476:Veno-Echo.cpp ****     {   
1477:Veno-Echo.cpp ****         static float filterXfade_new{};
1478:Veno-Echo.cpp ****         //update pickup
1479:Veno-Echo.cpp ****         if (shift != lastShift)
1480:Veno-Echo.cpp ****         {
1481:Veno-Echo.cpp ****             lastShift = shift;
1482:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1483:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1484:Veno-Echo.cpp ****         }
1485:Veno-Echo.cpp **** 
1486:Veno-Echo.cpp ****         else
1487:Veno-Echo.cpp ****         {
1488:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1489:Veno-Echo.cpp ****             {
1490:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1491:Veno-Echo.cpp ****                 {
1492:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1493:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 65


1494:Veno-Echo.cpp ****             }
1495:Veno-Echo.cpp ****         }
1496:Veno-Echo.cpp **** 
1497:Veno-Echo.cpp ****         float filterXfadeTarget{};
1498:Veno-Echo.cpp **** 
1499:Veno-Echo.cpp ****         if(filterXfade_pickup)
1500:Veno-Echo.cpp ****         {
1501:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1502:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1503:Veno-Echo.cpp ****         }
1504:Veno-Echo.cpp **** 
1505:Veno-Echo.cpp ****         else
1506:Veno-Echo.cpp ****         {
1507:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1508:Veno-Echo.cpp ****         }
1509:Veno-Echo.cpp **** 
1510:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1511:Veno-Echo.cpp ****     }
1512:Veno-Echo.cpp ****     else    //alternate controls
1513:Veno-Echo.cpp ****     {
1514:Veno-Echo.cpp **** 
1515:Veno-Echo.cpp ****         static float PostFilters_new{};
1516:Veno-Echo.cpp **** 
1517:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1518:Veno-Echo.cpp ****         {
1519:Veno-Echo.cpp ****             lastShift = shift;
1520:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1521:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1522:Veno-Echo.cpp ****         }
1523:Veno-Echo.cpp **** 
1524:Veno-Echo.cpp ****         else    //not a recent shift change
1525:Veno-Echo.cpp ****         {
1526:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1527:Veno-Echo.cpp ****             {
1528:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1529:Veno-Echo.cpp ****                 {
1530:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1531:Veno-Echo.cpp ****                 }
1532:Veno-Echo.cpp ****             }
1533:Veno-Echo.cpp ****         }
1534:Veno-Echo.cpp ****         
1535:Veno-Echo.cpp ****         if(PostFilters_pickup)
1536:Veno-Echo.cpp ****         {
1537:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1538:Veno-Echo.cpp ****             {
1539:Veno-Echo.cpp ****                 PostFilters = false;
1540:Veno-Echo.cpp ****             }
1541:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1542:Veno-Echo.cpp ****             {
1543:Veno-Echo.cpp ****                 PostFilters = true;
1544:Veno-Echo.cpp ****             }
1545:Veno-Echo.cpp ****             else
1546:Veno-Echo.cpp ****             {
1547:Veno-Echo.cpp ****               //do nothing
1548:Veno-Echo.cpp ****             }
1549:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1550:Veno-Echo.cpp ****         }  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 66


1551:Veno-Echo.cpp ****     }
1552:Veno-Echo.cpp **** }
1553:Veno-Echo.cpp **** 
1554:Veno-Echo.cpp **** void GetModCV()
1555:Veno-Echo.cpp **** {
1556:Veno-Echo.cpp ****     //get modulation CV input
1557:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1558:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1559:Veno-Echo.cpp **** }
1560:Veno-Echo.cpp **** 
1561:Veno-Echo.cpp **** void Update_Mod()
1562:Veno-Echo.cpp **** {    
1563:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1564:Veno-Echo.cpp ****     static float modulation_CV{};
1565:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1566:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1567:Veno-Echo.cpp ****     //calculate InternalMod
1568:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1569:Veno-Echo.cpp ****     //apply modulation to delay lines
1570:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1571:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1572:Veno-Echo.cpp **** }
1573:Veno-Echo.cpp **** 
1574:Veno-Echo.cpp **** void UpdateClock()
1575:Veno-Echo.cpp **** {
1576:Veno-Echo.cpp ****     static int divCounter{};
1577:Veno-Echo.cpp ****     ClockIn.Debounce();
1578:Veno-Echo.cpp **** 
1579:Veno-Echo.cpp ****     //if clock in pulse received
1580:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1581:Veno-Echo.cpp ****     {   
1582:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1583:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1584:Veno-Echo.cpp ****         if(divCounter == 0)
1585:Veno-Echo.cpp ****         {
1586:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1587:Veno-Echo.cpp ****             {
1588:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1589:Veno-Echo.cpp ****                 
1590:Veno-Echo.cpp ****                 //shouldn't need to do this
1591:Veno-Echo.cpp ****                 //any clock tempo change or ratio change will trigger 
1592:Veno-Echo.cpp ****                 //a phase reset of both sides
1593:Veno-Echo.cpp ****                 if(syncMode)
1594:Veno-Echo.cpp ****                 {
1595:Veno-Echo.cpp ****                     if(div_L <= UNITY)
1596:Veno-Echo.cpp ****                     {
1597:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
1598:Veno-Echo.cpp ****                     }
1599:Veno-Echo.cpp **** 
1600:Veno-Echo.cpp ****                     if(div_R <= UNITY)
1601:Veno-Echo.cpp ****                     {
1602:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
1603:Veno-Echo.cpp ****                     }
1604:Veno-Echo.cpp ****                 }
1605:Veno-Echo.cpp ****                 
1606:Veno-Echo.cpp ****             }
1607:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 67


1608:Veno-Echo.cpp ****     }
1609:Veno-Echo.cpp ****     
1610:Veno-Echo.cpp **** }
1611:Veno-Echo.cpp **** 
1612:Veno-Echo.cpp **** void Update_Buttons()
1613:Veno-Echo.cpp **** {  
1614:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1615:Veno-Echo.cpp ****     static uint32_t resetTime{};
1616:Veno-Echo.cpp ****     static int buttonstate{};
1617:Veno-Echo.cpp **** 
1618:Veno-Echo.cpp ****     Rev_L_sw.update();
1619:Veno-Echo.cpp ****     Rev_R_sw.update();
1620:Veno-Echo.cpp ****     LPF_sw.update();
1621:Veno-Echo.cpp ****     HPF_sw.update();
1622:Veno-Echo.cpp ****     Tap_Button.update();
1623:Veno-Echo.cpp **** 
1624:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1625:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1626:Veno-Echo.cpp ****     //TapButton.Debounce();
1627:Veno-Echo.cpp ****     Sync.Debounce();
1628:Veno-Echo.cpp ****     ClockIn.Debounce();
1629:Veno-Echo.cpp ****     //gate inputs
1630:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1631:Veno-Echo.cpp ****     {
1632:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1633:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1634:Veno-Echo.cpp ****     }
1635:Veno-Echo.cpp **** 
1636:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1637:Veno-Echo.cpp ****     {
1638:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1639:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1640:Veno-Echo.cpp ****     }
1641:Veno-Echo.cpp **** 
1642:Veno-Echo.cpp ****     //buttons
1643:Veno-Echo.cpp **** 
1644:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1645:Veno-Echo.cpp ****     {
1646:Veno-Echo.cpp ****         buttonstate += 1;
1647:Veno-Echo.cpp ****         if (buttonstate == 3)
1648:Veno-Echo.cpp ****         {
1649:Veno-Echo.cpp ****             resetTime = System::GetNow();
1650:Veno-Echo.cpp ****         }
1651:Veno-Echo.cpp ****     }
1652:Veno-Echo.cpp **** 
1653:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1654:Veno-Echo.cpp ****     {
1655:Veno-Echo.cpp ****         buttonstate -= 1;
1656:Veno-Echo.cpp ****     }
1657:Veno-Echo.cpp **** 
1658:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1659:Veno-Echo.cpp ****     {
1660:Veno-Echo.cpp ****         buttonstate += 1;
1661:Veno-Echo.cpp ****         if (buttonstate == 3)
1662:Veno-Echo.cpp ****         {
1663:Veno-Echo.cpp ****             resetTime = System::GetNow();
1664:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 68


1665:Veno-Echo.cpp ****     }
1666:Veno-Echo.cpp **** 
1667:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1668:Veno-Echo.cpp ****     {
1669:Veno-Echo.cpp ****         buttonstate -= 1;
1670:Veno-Echo.cpp ****     }
1671:Veno-Echo.cpp **** 
1672:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1673:Veno-Echo.cpp ****     {
1674:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1675:Veno-Echo.cpp ****         {
1676:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1677:Veno-Echo.cpp ****         }
1678:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1679:Veno-Echo.cpp ****         
1680:Veno-Echo.cpp ****         if(syncMode)
1681:Veno-Echo.cpp ****         {
1682:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1683:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1684:Veno-Echo.cpp ****         }
1685:Veno-Echo.cpp **** 
1686:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1687:Veno-Echo.cpp ****         buttonstate += 1;
1688:Veno-Echo.cpp ****         
1689:Veno-Echo.cpp ****         if (buttonstate == 3)
1690:Veno-Echo.cpp ****         {
1691:Veno-Echo.cpp ****             resetTime = System::GetNow();
1692:Veno-Echo.cpp ****         }
1693:Veno-Echo.cpp **** 
1694:Veno-Echo.cpp ****     }
1695:Veno-Echo.cpp **** 
1696:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1697:Veno-Echo.cpp ****     {
1698:Veno-Echo.cpp ****         shift = false;
1699:Veno-Echo.cpp ****         buttonstate -= 1;
1700:Veno-Echo.cpp ****         mute = false;
1701:Veno-Echo.cpp ****     }
1702:Veno-Echo.cpp **** 
1703:Veno-Echo.cpp ****     if (Tap_Button.getState())
1704:Veno-Echo.cpp ****     {
1705:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1706:Veno-Echo.cpp ****         {
1707:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1708:Veno-Echo.cpp ****         } 
1709:Veno-Echo.cpp ****     }
1710:Veno-Echo.cpp **** 
1711:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1712:Veno-Echo.cpp ****     {
1713:Veno-Echo.cpp ****         /*
1714:Veno-Echo.cpp ****             if(!save_flag)
1715:Veno-Echo.cpp ****             {
1716:Veno-Echo.cpp ****                 save_flag = true; 
1717:Veno-Echo.cpp ****             }
1718:Veno-Echo.cpp ****         */
1719:Veno-Echo.cpp **** 
1720:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1721:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 69


1722:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1723:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1724:Veno-Echo.cpp ****                 ResetAllLEDs();
1725:Veno-Echo.cpp ****                 //don't let reset or shift update
1726:Veno-Echo.cpp ****                 shift = false;
1727:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1728:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1729:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1730:Veno-Echo.cpp ****             }
1731:Veno-Echo.cpp ****     } 
1732:Veno-Echo.cpp **** 
1733:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1734:Veno-Echo.cpp **** 
1735:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
1736:Veno-Echo.cpp ****     {
1737:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1738:Veno-Echo.cpp ****         //delayL.tempoled.resetPhase();
1739:Veno-Echo.cpp ****         //delayR.tempoled.resetPhase();
1740:Veno-Echo.cpp ****         delayL_flag = true;
1741:Veno-Echo.cpp ****         delayR_flag = true;
1742:Veno-Echo.cpp ****     }
1743:Veno-Echo.cpp **** 
1744:Veno-Echo.cpp **** }
1745:Veno-Echo.cpp **** 
1746:Veno-Echo.cpp **** void Update_BaseTempoLED()
1747:Veno-Echo.cpp **** {
1748:Veno-Echo.cpp ****     tempoLED_BASE.update();
1749:Veno-Echo.cpp **** 
1750:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
1751:Veno-Echo.cpp ****     {
1752:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
1753:Veno-Echo.cpp ****         {
1754:Veno-Echo.cpp ****             //reset both sides
1755:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1756:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1757:Veno-Echo.cpp ****             delayL_flag = false;
1758:Veno-Echo.cpp ****         }
1759:Veno-Echo.cpp **** 
1760:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
1761:Veno-Echo.cpp ****         {
1762:Veno-Echo.cpp ****             //rest both sides
1763:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1764:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1765:Veno-Echo.cpp ****             delayR_flag = false;
1766:Veno-Echo.cpp ****         }
1767:Veno-Echo.cpp **** 
1768:Veno-Echo.cpp ****     }
1769:Veno-Echo.cpp **** }
1770:Veno-Echo.cpp **** 
1771:Veno-Echo.cpp **** //input a float (range 0 to 1) and address of TempoDivs to update
1772:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
1773:Veno-Echo.cpp **** {
1774:Veno-Echo.cpp **** 
1775:Veno-Echo.cpp ****     float retVal{};
1776:Veno-Echo.cpp **** 
1777:Veno-Echo.cpp ****     if (input < 0.0909f)
1778:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 70


1779:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
1780:Veno-Echo.cpp ****         *div = DIV6;
1781:Veno-Echo.cpp ****     }
1782:Veno-Echo.cpp **** 
1783:Veno-Echo.cpp ****     else if (input < 0.1818f)
1784:Veno-Echo.cpp ****     {
1785:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
1786:Veno-Echo.cpp ****        *div = DIV5;
1787:Veno-Echo.cpp ****     }
1788:Veno-Echo.cpp **** 
1789:Veno-Echo.cpp ****     else if (input < 0.2727f)
1790:Veno-Echo.cpp ****     {
1791:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
1792:Veno-Echo.cpp ****         *div = DIV4;
1793:Veno-Echo.cpp ****     }
1794:Veno-Echo.cpp **** 
1795:Veno-Echo.cpp ****     else if (input < 0.3636f)
1796:Veno-Echo.cpp ****     {
1797:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
1798:Veno-Echo.cpp ****         *div = DIV3;
1799:Veno-Echo.cpp ****     }
1800:Veno-Echo.cpp **** 
1801:Veno-Echo.cpp ****     else if (input < 0.4545f)
1802:Veno-Echo.cpp ****     {
1803:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
1804:Veno-Echo.cpp ****         *div = DIV2;
1805:Veno-Echo.cpp ****     }
1806:Veno-Echo.cpp **** 
1807:Veno-Echo.cpp ****     else if (input <  0.5455f)
1808:Veno-Echo.cpp ****     {
1809:Veno-Echo.cpp ****         retVal = (1.0f);
1810:Veno-Echo.cpp ****         *div = UNITY;
1811:Veno-Echo.cpp ****     }
1812:Veno-Echo.cpp **** 
1813:Veno-Echo.cpp ****     else if (input < 0.6364f)
1814:Veno-Echo.cpp ****     {
1815:Veno-Echo.cpp ****         retVal = 2.0f;
1816:Veno-Echo.cpp ****         *div = MULT2;
1817:Veno-Echo.cpp ****     }
1818:Veno-Echo.cpp **** 
1819:Veno-Echo.cpp ****     else if (input < 0.7273f)
1820:Veno-Echo.cpp ****     {
1821:Veno-Echo.cpp ****         retVal = 3.0f;
1822:Veno-Echo.cpp ****         *div = MULT3;
1823:Veno-Echo.cpp ****     }
1824:Veno-Echo.cpp **** 
1825:Veno-Echo.cpp ****     else if (input < 0.8182f)
1826:Veno-Echo.cpp ****     {
1827:Veno-Echo.cpp ****         retVal = 4.0f;
1828:Veno-Echo.cpp ****         *div = MULT4;
1829:Veno-Echo.cpp ****     }
1830:Veno-Echo.cpp ****     
1831:Veno-Echo.cpp ****     else if (input < 0.9091f)
1832:Veno-Echo.cpp ****     {
1833:Veno-Echo.cpp ****         retVal = 5.0f;
1834:Veno-Echo.cpp ****         *div = MULT5;
1835:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 71


1836:Veno-Echo.cpp **** 
1837:Veno-Echo.cpp ****     else if (input <= 1.0f)
1838:Veno-Echo.cpp ****     {
1839:Veno-Echo.cpp ****        retVal = 6.0f; 
1840:Veno-Echo.cpp ****        *div = MULT6;
1841:Veno-Echo.cpp ****     }
1842:Veno-Echo.cpp ****     else
1843:Veno-Echo.cpp ****     {
1844:Veno-Echo.cpp ****         retVal = 1.0f; 
1845:Veno-Echo.cpp ****        *div = UNITY;
1846:Veno-Echo.cpp ****     }
1847:Veno-Echo.cpp ****     
1848:Veno-Echo.cpp **** return retVal;
1849:Veno-Echo.cpp **** 
1850:Veno-Echo.cpp **** }
1851:Veno-Echo.cpp **** 
1852:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
1853:Veno-Echo.cpp **** {
1854:Veno-Echo.cpp ****     float retVal{};
1855:Veno-Echo.cpp ****     switch(ratio)
1856:Veno-Echo.cpp ****     {
1857:Veno-Echo.cpp ****         case QUARTER:
1858:Veno-Echo.cpp ****         retVal = 1.0f;
1859:Veno-Echo.cpp ****         break;
1860:Veno-Echo.cpp **** 
1861:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1862:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1863:Veno-Echo.cpp ****         break;
1864:Veno-Echo.cpp **** 
1865:Veno-Echo.cpp ****         case EIGHT:
1866:Veno-Echo.cpp ****         retVal = 2.0f;
1867:Veno-Echo.cpp ****         break;
1868:Veno-Echo.cpp **** 
1869:Veno-Echo.cpp ****         case TWELVE:
1870:Veno-Echo.cpp ****         retVal = 3.0f;
1871:Veno-Echo.cpp ****         break;
1872:Veno-Echo.cpp **** 
1873:Veno-Echo.cpp ****         default:
1874:Veno-Echo.cpp ****         retVal = 1.0f;
1875:Veno-Echo.cpp ****         break;
1876:Veno-Echo.cpp ****     }
1877:Veno-Echo.cpp **** 
1878:Veno-Echo.cpp **** return retVal;
1879:Veno-Echo.cpp **** }
1880:Veno-Echo.cpp **** 
1881:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1882:Veno-Echo.cpp **** {
1883:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1884:Veno-Echo.cpp ****     {
1885:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1886:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1887:Veno-Echo.cpp ****     }
1888:Veno-Echo.cpp ****     else
1889:Veno-Echo.cpp ****     {
1890:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1891:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1892:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 72


1893:Veno-Echo.cpp **** 
1894:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1895:Veno-Echo.cpp ****     {
1896:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1897:Veno-Echo.cpp ****     }
1898:Veno-Echo.cpp ****     else
1899:Veno-Echo.cpp ****     {
1900:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1901:Veno-Echo.cpp ****     }
1902:Veno-Echo.cpp **** 
1903:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1904:Veno-Echo.cpp ****     {
1905:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1906:Veno-Echo.cpp ****     }
1907:Veno-Echo.cpp ****     else
1908:Veno-Echo.cpp ****     {
1909:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1910:Veno-Echo.cpp ****     }
1911:Veno-Echo.cpp **** 
1912:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1913:Veno-Echo.cpp ****     {
1914:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1915:Veno-Echo.cpp ****     }
1916:Veno-Echo.cpp ****     else
1917:Veno-Echo.cpp ****     {
1918:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1919:Veno-Echo.cpp ****     }
1920:Veno-Echo.cpp **** 
1921:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1922:Veno-Echo.cpp ****     {
1923:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1924:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1925:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1926:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1927:Veno-Echo.cpp ****     }
1928:Veno-Echo.cpp ****     else
1929:Veno-Echo.cpp ****     {
1930:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1931:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1932:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1933:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1934:Veno-Echo.cpp ****     }
1935:Veno-Echo.cpp ****     
1936:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1937:Veno-Echo.cpp ****     {
1938:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1939:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1940:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1941:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1942:Veno-Echo.cpp ****     }
1943:Veno-Echo.cpp ****     else
1944:Veno-Echo.cpp ****     {
1945:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1946:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1947:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1948:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1949:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 73


1950:Veno-Echo.cpp ****     }
1951:Veno-Echo.cpp **** 
1952:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1953:Veno-Echo.cpp ****     {
1954:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1955:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1956:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1957:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1958:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1959:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1960:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1961:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1962:Veno-Echo.cpp ****     }
1963:Veno-Echo.cpp **** 
1964:Veno-Echo.cpp ****     else
1965:Veno-Echo.cpp ****     {
1966:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1967:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1968:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1969:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1970:Veno-Echo.cpp ****     }
1971:Veno-Echo.cpp **** 
1972:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1973:Veno-Echo.cpp ****     {
1974:Veno-Echo.cpp ****         PostFilters = false;
1975:Veno-Echo.cpp ****     }
1976:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1977:Veno-Echo.cpp ****     {
1978:Veno-Echo.cpp ****         PostFilters = true;
1979:Veno-Echo.cpp ****     }
1980:Veno-Echo.cpp ****     else
1981:Veno-Echo.cpp ****     {
1982:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1983:Veno-Echo.cpp ****     }
1984:Veno-Echo.cpp **** 
1985:Veno-Echo.cpp **** }
1986:Veno-Echo.cpp **** 
1987:Veno-Echo.cpp **** void TurnOnAllLEDs()
1988:Veno-Echo.cpp **** {
1989:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1990:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1991:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1992:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1993:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1994:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1995:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1996:Veno-Echo.cpp **** }
1997:Veno-Echo.cpp **** 
1998:Veno-Echo.cpp **** void ResetAllLEDs()
1999:Veno-Echo.cpp **** {
2000:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
2001:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
2002:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
2003:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
2004:Veno-Echo.cpp ****     {
2005:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
2006:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 74


2007:Veno-Echo.cpp ****     else
2008:Veno-Echo.cpp ****     {
2009:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
2010:Veno-Echo.cpp ****     }
2011:Veno-Echo.cpp **** 
2012:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
2013:Veno-Echo.cpp ****     {
2014:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
2015:Veno-Echo.cpp ****     }
2016:Veno-Echo.cpp ****     else
2017:Veno-Echo.cpp ****     {
2018:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
2019:Veno-Echo.cpp ****     }
2020:Veno-Echo.cpp ****     
2021:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
2022:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
2023:Veno-Echo.cpp **** }
2024:Veno-Echo.cpp **** 
2025:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2026:Veno-Echo.cpp **** {
2027:Veno-Echo.cpp ****     float returnval{};
2028:Veno-Echo.cpp ****     if (input > limit)
2029:Veno-Echo.cpp ****         returnval = limit;
2030:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2031:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2032:Veno-Echo.cpp ****     else
2033:Veno-Echo.cpp ****         returnval = input;
2034:Veno-Echo.cpp **** 
2035:Veno-Echo.cpp ****     return returnval;   
2036:Veno-Echo.cpp **** }
2037:Veno-Echo.cpp **** 
2038:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1218              		.loc 19 2038 7 view .LVU249
 1219              	.LBB890:
2039:Veno-Echo.cpp **** {
2040:Veno-Echo.cpp ****     float output{};
 1220              		.loc 19 2040 5 view .LVU250
2041:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1221              		.loc 19 2041 5 view .LVU251
 1222              	.LBE890:
 1223              	.LBE889:
1055:Veno-Echo.cpp ****         }
 1224              		.loc 19 1055 41 is_stmt 0 view .LVU252
 1225 002c 5D4A     		ldr	r2, .L78+20
 1226              	.LBB894:
 1227              	.LBB891:
 1228              		.loc 19 2041 39 view .LVU253
 1229 002e F7EE006A 		vmov.f32	s13, #1.0e+0
 1230              		.loc 19 2041 49 view .LVU254
 1231 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 1232              	.LBE891:
 1233              	.LBE894:
1055:Veno-Echo.cpp ****         }
 1234              		.loc 19 1055 41 view .LVU255
 1235 0036 5C4B     		ldr	r3, .L78+24
 1236              	.LBB895:
 1237              	.LBB892:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 75


 1238              		.loc 19 2041 39 view .LVU256
 1239 0038 92ED007A 		vldr.32	s14, [r2]
 1240              		.loc 19 2041 12 view .LVU257
 1241 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 1242 0040 D3ED007A 		vldr.32	s15, [r3]
 1243              		.loc 19 2041 39 view .LVU258
 1244 0044 36EEC77A 		vsub.f32	s14, s13, s14
 1245              		.loc 19 2041 49 view .LVU259
 1246 0048 37EE657A 		vsub.f32	s14, s14, s11
 1247              		.loc 19 2041 12 view .LVU260
 1248 004c E7EE067A 		vfma.f32	s15, s14, s12
 1249              	.LVL47:
2042:Veno-Echo.cpp **** 
2043:Veno-Echo.cpp ****     if(output < 0.0f)
 1250              		.loc 19 2043 5 is_stmt 1 view .LVU261
 1251 0050 F5EEC07A 		vcmpe.f32	s15, #0
 1252 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1253 0058 00F19380 		bmi	.L76
2044:Veno-Echo.cpp ****     {
2045:Veno-Echo.cpp ****         output = 0.0f;
2046:Veno-Echo.cpp ****     }
2047:Veno-Echo.cpp **** 
2048:Veno-Echo.cpp ****     if(output > 1.0f)
 1254              		.loc 19 2048 5 view .LVU262
2049:Veno-Echo.cpp ****     {
2050:Veno-Echo.cpp ****         output = 1.0f;
 1255              		.loc 19 2050 16 is_stmt 0 view .LVU263
 1256 005c F4EE667A 		vcmp.f32	s15, s13
 1257 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1258 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 1259              	.LVL48:
 1260              	.L58:
 1261              		.loc 19 2050 16 view .LVU264
 1262              	.LBE892:
 1263              	.LBE895:
1058:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1264              		.loc 19 1058 9 is_stmt 1 view .LVU265
1058:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1265              		.loc 19 1058 37 is_stmt 0 view .LVU266
 1266 0068 B0EE670A 		vmov.f32	s0, s15
 1267              	.LVL49:
1058:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1268              		.loc 19 1058 37 view .LVU267
 1269 006c 0020     		movs	r0, #0
 1270 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 1271 0072 DFED4E0A 		vldr.32	s1, .L78+28
 1272 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1273              	.LVL50:
1059:Veno-Echo.cpp ****     }
 1274              		.loc 19 1059 9 is_stmt 1 view .LVU268
 1275              	.LBB896:
 1276              	.LBI896:
 1277              		.file 21 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 76


   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 77


  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 78


 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1278              		.loc 21 135 13 view .LVU269
 1279              	.LBB897:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 1280              		.loc 21 137 5 view .LVU270
 1281              		.loc 21 137 9 is_stmt 0 view .LVU271
 1282 007a 4D4B     		ldr	r3, .L78+32
 1283 007c 9FED4D7A 		vldr.32	s14, .L78+36
 1284 0080 D3ED007A 		vldr.32	s15, [r3]
 1285              		.loc 21 137 24 view .LVU272
 1286 0084 30EE670A 		vsub.f32	s0, s0, s15
 1287              	.LVL51:
 1288              		.loc 21 137 24 view .LVU273
 1289              	.LBE897:
 1290              	.LBE896:
 1291              	.LBE911:
 1292              	.LBE923:
1094:Veno-Echo.cpp **** 
 1293              		.loc 19 1094 1 view .LVU274
 1294 0088 BDEC028B 		vldm	sp!, {d8}
 1295              		.cfi_remember_state
 1296              		.cfi_restore 80
 1297              		.cfi_restore 81
 1298              		.cfi_def_cfa_offset 8
 1299              	.LBB924:
 1300              	.LBB912:
 1301              	.LBB899:
 1302              	.LBB898:
 1303              		.loc 21 137 9 view .LVU275
 1304 008c E0EE077A 		vfma.f32	s15, s0, s14
 1305 0090 C3ED007A 		vstr.32	s15, [r3]
 1306              	.LBE898:
 1307              	.LBE899:
 1308              	.LBE912:
 1309              	.LBE924:
1094:Veno-Echo.cpp **** 
 1310              		.loc 19 1094 1 view .LVU276
 1311 0094 10BD     		pop	{r4, pc}
 1312              	.LVL52:
 1313              	.L51:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 79


 1314              		.cfi_restore_state
 1315              	.LBB925:
 1316              	.LBB913:
1063:Veno-Echo.cpp **** 
 1317              		.loc 19 1063 9 is_stmt 1 view .LVU277
1065:Veno-Echo.cpp ****         {
 1318              		.loc 19 1065 9 view .LVU278
 1319 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1320 0098 002B     		cmp	r3, #0
 1321 009a 3ED1     		bne	.L61
1067:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 1322              		.loc 19 1067 13 view .LVU279
1067:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 1323              		.loc 19 1067 23 is_stmt 0 view .LVU280
 1324 009c 0124     		movs	r4, #1
1068:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 1325              		.loc 19 1068 29 view .LVU281
 1326 009e 4648     		ldr	r0, .L78+40
1069:Veno-Echo.cpp ****         }
 1327              		.loc 19 1069 26 view .LVU282
 1328 00a0 4649     		ldr	r1, .L78+44
1067:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 1329              		.loc 19 1067 23 view .LVU283
 1330 00a2 1470     		strb	r4, [r2]
1068:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 1331              		.loc 19 1068 13 is_stmt 1 view .LVU284
1068:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 1332              		.loc 19 1068 29 is_stmt 0 view .LVU285
 1333 00a4 0370     		strb	r3, [r0]
1069:Veno-Echo.cpp ****         }
 1334              		.loc 19 1069 13 is_stmt 1 view .LVU286
1069:Veno-Echo.cpp ****         }
 1335              		.loc 19 1069 26 is_stmt 0 view .LVU287
 1336 00a6 81ED000A 		vstr.32	s0, [r1]
 1337              	.L50:
1069:Veno-Echo.cpp ****         }
 1338              		.loc 19 1069 26 view .LVU288
 1339              	.LBE913:
 1340              	.LBE925:
1094:Veno-Echo.cpp **** 
 1341              		.loc 19 1094 1 view .LVU289
 1342 00aa BDEC028B 		vldm	sp!, {d8}
 1343              		.cfi_remember_state
 1344              		.cfi_restore 80
 1345              		.cfi_restore 81
 1346              		.cfi_def_cfa_offset 8
 1347 00ae 10BD     		pop	{r4, pc}
 1348              	.L52:
 1349              		.cfi_restore_state
 1350              	.LBB926:
 1351              	.LBB920:
1036:Veno-Echo.cpp ****             {
 1352              		.loc 19 1036 13 is_stmt 1 view .LVU290
1036:Veno-Echo.cpp ****             {
 1353              		.loc 19 1036 16 is_stmt 0 view .LVU291
 1354 00b0 3A4B     		ldr	r3, .L78+12
1036:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 80


 1355              		.loc 19 1036 13 view .LVU292
 1356 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1357 00b4 7AB9     		cbnz	r2, .L54
1038:Veno-Echo.cpp ****                 {
 1358              		.loc 19 1038 17 is_stmt 1 view .LVU293
 1359              	.LVL53:
 1360              	.LBB900:
 1361              	.LBI900:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1362              		.loc 20 75 3 view .LVU294
 1363              	.LBB901:
 1364              		.loc 20 76 5 view .LVU295
 1365              		.loc 20 76 5 is_stmt 0 view .LVU296
 1366              	.LBE901:
 1367              	.LBE900:
1038:Veno-Echo.cpp ****                 {
 1368              		.loc 19 1038 23 view .LVU297
 1369 00b6 3A4A     		ldr	r2, .L78+16
1038:Veno-Echo.cpp ****                 {
 1370              		.loc 19 1038 17 view .LVU298
 1371 00b8 9FED417A 		vldr.32	s14, .L78+48
1038:Veno-Echo.cpp ****                 {
 1372              		.loc 19 1038 23 view .LVU299
 1373 00bc D2ED007A 		vldr.32	s15, [r2]
 1374 00c0 70EE677A 		vsub.f32	s15, s0, s15
 1375              	.LBB903:
 1376              	.LBB902:
 1377              		.loc 20 76 31 view .LVU300
 1378 00c4 F0EEE77A 		vabs.f32	s15, s15
 1379              	.LBE902:
 1380              	.LBE903:
1038:Veno-Echo.cpp ****                 {
 1381              		.loc 19 1038 17 view .LVU301
 1382 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 1383 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1384 00d0 ACDD     		ble	.L53
1040:Veno-Echo.cpp ****                 }
 1385              		.loc 19 1040 21 is_stmt 1 view .LVU302
1040:Veno-Echo.cpp ****                 }
 1386              		.loc 19 1040 38 is_stmt 0 view .LVU303
 1387 00d2 0122     		movs	r2, #1
 1388 00d4 1A70     		strb	r2, [r3]
 1389              	.L54:
1045:Veno-Echo.cpp **** 
 1390              		.loc 19 1045 9 is_stmt 1 view .LVU304
 1391              	.LVL54:
1047:Veno-Echo.cpp ****         {
 1392              		.loc 19 1047 9 view .LVU305
1049:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1393              		.loc 19 1049 13 view .LVU306
 1394              	.LBB904:
 1395              	.LBI904:
2038:Veno-Echo.cpp **** {
 1396              		.loc 19 2038 7 view .LVU307
 1397              	.LBB905:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1398              		.loc 19 2040 5 view .LVU308
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 81


2041:Veno-Echo.cpp **** 
 1399              		.loc 19 2041 5 view .LVU309
 1400              	.LBE905:
 1401              	.LBE904:
1049:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1402              		.loc 19 1049 41 is_stmt 0 view .LVU310
 1403 00d6 334B     		ldr	r3, .L78+20
 1404              	.LBB908:
 1405              	.LBB906:
2041:Veno-Echo.cpp **** 
 1406              		.loc 19 2041 39 view .LVU311
 1407 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 1408              		.loc 19 2041 49 view .LVU312
 1409 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2041:Veno-Echo.cpp **** 
 1410              		.loc 19 2041 39 view .LVU313
 1411 00e0 D3ED007A 		vldr.32	s15, [r3]
2041:Veno-Echo.cpp **** 
 1412              		.loc 19 2041 12 view .LVU314
 1413 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2041:Veno-Echo.cpp **** 
 1414              		.loc 19 2041 39 view .LVU315
 1415 00e8 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 1416              		.loc 19 2041 49 view .LVU316
 1417 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 1418              		.loc 19 2041 12 view .LVU317
 1419 00f0 B0EE406A 		vmov.f32	s12, s0
 1420 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2043:Veno-Echo.cpp ****     {
 1421              		.loc 19 2043 5 view .LVU318
 1422 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2041:Veno-Echo.cpp **** 
 1423              		.loc 19 2041 12 view .LVU319
 1424 00fc F0EE467A 		vmov.f32	s15, s12
 1425              	.LVL55:
2043:Veno-Echo.cpp ****     {
 1426              		.loc 19 2043 5 is_stmt 1 view .LVU320
 1427 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1428 0104 40D4     		bmi	.L77
2048:Veno-Echo.cpp ****     {
 1429              		.loc 19 2048 5 view .LVU321
 1430              		.loc 19 2050 16 is_stmt 0 view .LVU322
 1431 0106 F4EE477A 		vcmp.f32	s15, s14
 1432 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1433 010e 77FE277A 		vselgt.f32	s15, s14, s15
 1434              	.L56:
 1435              	.LVL56:
2051:Veno-Echo.cpp ****     }
2052:Veno-Echo.cpp **** 
2053:Veno-Echo.cpp ****     return output;
 1436              		.loc 19 2053 5 is_stmt 1 view .LVU323
 1437              		.loc 19 2053 5 is_stmt 0 view .LVU324
 1438              	.LBE906:
 1439              	.LBE908:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 82


1050:Veno-Echo.cpp ****         }
 1440              		.loc 19 1050 13 is_stmt 1 view .LVU325
1050:Veno-Echo.cpp ****         }
 1441              		.loc 19 1050 28 is_stmt 0 view .LVU326
 1442 0112 254B     		ldr	r3, .L78+24
 1443 0114 83ED000A 		vstr.32	s0, [r3]
 1444 0118 A6E7     		b	.L58
 1445              	.LVL57:
 1446              	.L61:
1050:Veno-Echo.cpp ****         }
 1447              		.loc 19 1050 28 view .LVU327
 1448              	.LBE920:
 1449              	.LBB921:
1074:Veno-Echo.cpp ****             {
 1450              		.loc 19 1074 13 is_stmt 1 view .LVU328
1074:Veno-Echo.cpp ****             {
 1451              		.loc 19 1074 16 is_stmt 0 view .LVU329
 1452 011a 274B     		ldr	r3, .L78+40
1074:Veno-Echo.cpp ****             {
 1453              		.loc 19 1074 13 view .LVU330
 1454 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1455 011e 7AB9     		cbnz	r2, .L63
1076:Veno-Echo.cpp ****                 {
 1456              		.loc 19 1076 17 is_stmt 1 view .LVU331
 1457              	.LVL58:
 1458              	.LBB914:
 1459              	.LBI914:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1460              		.loc 20 75 3 view .LVU332
 1461              	.LBB915:
 1462              		.loc 20 76 5 view .LVU333
 1463              		.loc 20 76 5 is_stmt 0 view .LVU334
 1464              	.LBE915:
 1465              	.LBE914:
1076:Veno-Echo.cpp ****                 {
 1466              		.loc 19 1076 23 view .LVU335
 1467 0120 264A     		ldr	r2, .L78+44
1076:Veno-Echo.cpp ****                 {
 1468              		.loc 19 1076 17 view .LVU336
 1469 0122 9FED277A 		vldr.32	s14, .L78+48
1076:Veno-Echo.cpp ****                 {
 1470              		.loc 19 1076 23 view .LVU337
 1471 0126 D2ED007A 		vldr.32	s15, [r2]
 1472 012a 70EE677A 		vsub.f32	s15, s0, s15
 1473              	.LBB917:
 1474              	.LBB916:
 1475              		.loc 20 76 31 view .LVU338
 1476 012e F0EEE77A 		vabs.f32	s15, s15
 1477              	.LBE916:
 1478              	.LBE917:
1076:Veno-Echo.cpp ****                 {
 1479              		.loc 19 1076 17 view .LVU339
 1480 0132 F4EEC77A 		vcmpe.f32	s15, s14
 1481 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1482 013a B6DD     		ble	.L50
1078:Veno-Echo.cpp ****                 }
 1483              		.loc 19 1078 21 is_stmt 1 view .LVU340
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 83


1078:Veno-Echo.cpp ****                 }
 1484              		.loc 19 1078 37 is_stmt 0 view .LVU341
 1485 013c 0122     		movs	r2, #1
 1486 013e 1A70     		strb	r2, [r3]
 1487              	.L63:
1083:Veno-Echo.cpp ****         {
 1488              		.loc 19 1083 9 is_stmt 1 view .LVU342
 1489              	.LBB918:
 1490              	.LBB919:
1085:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1491              		.loc 19 1085 13 view .LVU343
 1492              	.LVL59:
1086:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1493              		.loc 19 1086 13 view .LVU344
1086:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1494              		.loc 19 1086 29 is_stmt 0 view .LVU345
 1495 0140 9FED201A 		vldr.32	s2, .L78+52
 1496 0144 0120     		movs	r0, #1
 1497 0146 DFED200A 		vldr.32	s1, .L78+56
 1498 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1499              	.LVL60:
1086:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1500              		.loc 19 1086 29 view .LVU346
 1501 014e B0EE408A 		vmov.f32	s16, s0
 1502              	.LVL61:
1087:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1503              		.loc 19 1087 13 is_stmt 1 view .LVU347
1087:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1504              		.loc 19 1087 26 is_stmt 0 view .LVU348
 1505 0152 1E48     		ldr	r0, .L78+60
 1506 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1507              	.LVL62:
1088:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1508              		.loc 19 1088 13 is_stmt 1 view .LVU349
1088:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1509              		.loc 19 1088 26 is_stmt 0 view .LVU350
 1510 0158 1D48     		ldr	r0, .L78+64
 1511 015a B0EE480A 		vmov.f32	s0, s16
 1512 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1513              	.LVL63:
1089:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1514              		.loc 19 1089 13 is_stmt 1 view .LVU351
1089:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1515              		.loc 19 1089 31 is_stmt 0 view .LVU352
 1516 0162 B0EE480A 		vmov.f32	s0, s16
 1517 0166 1B48     		ldr	r0, .L78+68
 1518 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1519              	.LVL64:
1090:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1520              		.loc 19 1090 13 is_stmt 1 view .LVU353
1090:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1521              		.loc 19 1090 31 is_stmt 0 view .LVU354
 1522 016c B0EE480A 		vmov.f32	s0, s16
 1523 0170 1948     		ldr	r0, .L78+72
 1524 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1525              	.LVL65:
1091:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 84


 1526              		.loc 19 1091 13 is_stmt 1 view .LVU355
1091:Veno-Echo.cpp ****         }
 1527              		.loc 19 1091 35 is_stmt 0 view .LVU356
 1528 0176 194B     		ldr	r3, .L78+76
 1529 0178 83ED048A 		vstr.32	s16, [r3, #16]
 1530              	.LBE919:
 1531              	.LBE918:
 1532              	.LBE921:
 1533              	.LBE926:
1094:Veno-Echo.cpp **** 
 1534              		.loc 19 1094 1 view .LVU357
 1535 017c BDEC028B 		vldm	sp!, {d8}
 1536              		.cfi_remember_state
 1537              		.cfi_restore 80
 1538              		.cfi_restore 81
 1539              		.cfi_def_cfa_offset 8
 1540              	.LVL66:
1094:Veno-Echo.cpp **** 
 1541              		.loc 19 1094 1 view .LVU358
 1542 0180 10BD     		pop	{r4, pc}
 1543              	.LVL67:
 1544              	.L76:
 1545              		.cfi_restore_state
 1546              	.LBB927:
 1547              	.LBB922:
 1548              	.LBB909:
 1549              	.LBB893:
2045:Veno-Echo.cpp ****     }
 1550              		.loc 19 2045 16 view .LVU359
 1551 0182 DFED0A7A 		vldr.32	s15, .L78+28
 1552              	.LVL68:
2045:Veno-Echo.cpp ****     }
 1553              		.loc 19 2045 16 view .LVU360
 1554 0186 6FE7     		b	.L58
 1555              	.LVL69:
 1556              	.L77:
2045:Veno-Echo.cpp ****     }
 1557              		.loc 19 2045 16 view .LVU361
 1558              	.LBE893:
 1559              	.LBE909:
 1560              	.LBB910:
 1561              	.LBB907:
 1562 0188 DFED087A 		vldr.32	s15, .L78+28
 1563 018c C1E7     		b	.L56
 1564              	.L79:
 1565 018e 00BF     		.align	2
 1566              	.L78:
 1567 0190 18000000 		.word	.LANCHOR4+24
 1568 0194 00000000 		.word	.LANCHOR8
 1569 0198 00000000 		.word	.LANCHOR9
 1570 019c 00000000 		.word	.LANCHOR10
 1571 01a0 00000000 		.word	.LANCHOR11
 1572 01a4 00000000 		.word	.LANCHOR7
 1573 01a8 00000000 		.word	.LANCHOR12
 1574 01ac 00000000 		.word	0
 1575 01b0 00000000 		.word	.LANCHOR13
 1576 01b4 6F12033D 		.word	1023611503
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 85


 1577 01b8 00000000 		.word	.LANCHOR14
 1578 01bc 00000000 		.word	.LANCHOR15
 1579 01c0 0AD7A33B 		.word	1000593162
 1580 01c4 00004844 		.word	1145569280
 1581 01c8 0000C842 		.word	1120403456
 1582 01cc 00000000 		.word	.LANCHOR16
 1583 01d0 00000000 		.word	.LANCHOR17
 1584 01d4 00000000 		.word	.LANCHOR18
 1585 01d8 00000000 		.word	.LANCHOR19
 1586 01dc 00000000 		.word	.LANCHOR20
 1587              	.LBE907:
 1588              	.LBE910:
 1589              	.LBE922:
 1590              	.LBE927:
 1591              		.cfi_endproc
 1592              	.LFE4296:
 1594              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 1595              		.align	1
 1596              		.p2align 2,,3
 1597              		.global	_Z19Update_feedbackR_CVv
 1598              		.syntax unified
 1599              		.thumb
 1600              		.thumb_func
 1601              		.fpu fpv5-d16
 1603              	_Z19Update_feedbackR_CVv:
 1604              	.LFB4297:
1097:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1605              		.loc 19 1097 1 is_stmt 1 view -0
 1606              		.cfi_startproc
 1607              		@ args = 0, pretend = 0, frame = 0
 1608              		@ frame_needed = 0, uses_anonymous_args = 0
1098:Veno-Echo.cpp **** }
 1609              		.loc 19 1098 5 view .LVU363
1097:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1610              		.loc 19 1097 1 is_stmt 0 view .LVU364
 1611 0000 08B5     		push	{r3, lr}
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 3, -8
 1614              		.cfi_offset 14, -4
1098:Veno-Echo.cpp **** }
 1615              		.loc 19 1098 35 view .LVU365
 1616 0002 0321     		movs	r1, #3
 1617 0004 0348     		ldr	r0, .L82
 1618 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1619              	.LVL70:
1098:Veno-Echo.cpp **** }
 1620              		.loc 19 1098 18 view .LVU366
 1621 000a 034B     		ldr	r3, .L82+4
 1622 000c 83ED000A 		vstr.32	s0, [r3]
1099:Veno-Echo.cpp **** 
 1623              		.loc 19 1099 1 view .LVU367
 1624 0010 08BD     		pop	{r3, pc}
 1625              	.L83:
 1626 0012 00BF     		.align	2
 1627              	.L82:
 1628 0014 18000000 		.word	.LANCHOR4+24
 1629 0018 00000000 		.word	.LANCHOR21
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 86


 1630              		.cfi_endproc
 1631              	.LFE4297:
 1633              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 1634              		.align	1
 1635              		.p2align 2,,3
 1636              		.global	_Z16Update_feedbackRv
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu fpv5-d16
 1642              	_Z16Update_feedbackRv:
 1643              	.LFB4298:
1102:Veno-Echo.cpp ****     static bool lastShift{};
 1644              		.loc 19 1102 1 is_stmt 1 view -0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
1103:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 1648              		.loc 19 1103 5 view .LVU369
1104:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 1649              		.loc 19 1104 5 view .LVU370
1105:Veno-Echo.cpp **** 
 1650              		.loc 19 1105 5 view .LVU371
1107:Veno-Echo.cpp **** 
 1651              		.loc 19 1107 5 view .LVU372
1110:Veno-Echo.cpp **** 
 1652              		.loc 19 1110 5 view .LVU373
1110:Veno-Echo.cpp **** 
 1653              		.loc 19 1110 43 is_stmt 0 view .LVU374
 1654 0000 0422     		movs	r2, #4
 1655 0002 0721     		movs	r1, #7
 1656 0004 6548     		ldr	r0, .L114
1102:Veno-Echo.cpp ****     static bool lastShift{};
 1657              		.loc 19 1102 1 view .LVU375
 1658 0006 10B5     		push	{r4, lr}
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 4, -8
 1661              		.cfi_offset 14, -4
 1662 0008 2DED028B 		vpush.64	{d8}
 1663              		.cfi_def_cfa_offset 16
 1664              		.cfi_offset 80, -16
 1665              		.cfi_offset 81, -12
1110:Veno-Echo.cpp **** 
 1666              		.loc 19 1110 43 view .LVU376
 1667 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1668              	.LVL71:
 1669              	.LBB928:
1112:Veno-Echo.cpp ****     {   
 1670              		.loc 19 1112 9 view .LVU377
 1671 0010 634B     		ldr	r3, .L114+4
 1672              	.LVL72:
1112:Veno-Echo.cpp ****     {   
 1673              		.loc 19 1112 9 view .LVU378
 1674              	.LBE928:
1112:Veno-Echo.cpp ****     {   
 1675              		.loc 19 1112 5 is_stmt 1 view .LVU379
 1676              	.LBB962:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 87


 1677              	.LBB929:
1116:Veno-Echo.cpp ****         {
 1678              		.loc 19 1116 19 is_stmt 0 view .LVU380
 1679 0012 644A     		ldr	r2, .L114+8
 1680              	.LBE929:
1112:Veno-Echo.cpp ****     {   
 1681              		.loc 19 1112 5 view .LVU381
 1682 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 0016 002B     		cmp	r3, #0
 1684 0018 3FD1     		bne	.L85
 1685              	.LBB950:
1114:Veno-Echo.cpp ****         //update pickup
 1686              		.loc 19 1114 9 is_stmt 1 view .LVU382
1116:Veno-Echo.cpp ****         {
 1687              		.loc 19 1116 9 view .LVU383
 1688 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1689 001c 0029     		cmp	r1, #0
 1690 001e 49D0     		beq	.L86
1118:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 1691              		.loc 19 1118 13 view .LVU384
1119:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1692              		.loc 19 1119 30 is_stmt 0 view .LVU385
 1693 0020 614C     		ldr	r4, .L114+12
1120:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 1694              		.loc 19 1120 28 view .LVU386
 1695 0022 6248     		ldr	r0, .L114+16
1121:Veno-Echo.cpp ****         } 
 1696              		.loc 19 1121 27 view .LVU387
 1697 0024 6249     		ldr	r1, .L114+20
1118:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 1698              		.loc 19 1118 23 view .LVU388
 1699 0026 1370     		strb	r3, [r2]
1119:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1700              		.loc 19 1119 13 is_stmt 1 view .LVU389
1119:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1701              		.loc 19 1119 30 is_stmt 0 view .LVU390
 1702 0028 2370     		strb	r3, [r4]
1120:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 1703              		.loc 19 1120 13 is_stmt 1 view .LVU391
1120:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 1704              		.loc 19 1120 28 is_stmt 0 view .LVU392
 1705 002a 80ED000A 		vstr.32	s0, [r0]
1121:Veno-Echo.cpp ****         } 
 1706              		.loc 19 1121 13 is_stmt 1 view .LVU393
1121:Veno-Echo.cpp ****         } 
 1707              		.loc 19 1121 27 is_stmt 0 view .LVU394
 1708 002e 81ED000A 		vstr.32	s0, [r1]
 1709              	.LVL73:
 1710              	.L87:
1134:Veno-Echo.cpp ****         
 1711              		.loc 19 1134 9 is_stmt 1 view .LVU395
1136:Veno-Echo.cpp ****         {
 1712              		.loc 19 1136 9 view .LVU396
1144:Veno-Echo.cpp ****         }
 1713              		.loc 19 1144 13 view .LVU397
 1714              	.LBB930:
 1715              	.LBI930:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 88


2038:Veno-Echo.cpp **** {
 1716              		.loc 19 2038 7 view .LVU398
 1717              	.LBB931:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1718              		.loc 19 2040 5 view .LVU399
2041:Veno-Echo.cpp **** 
 1719              		.loc 19 2041 5 view .LVU400
 1720              	.LBE931:
 1721              	.LBE930:
1144:Veno-Echo.cpp ****         }
 1722              		.loc 19 1144 41 is_stmt 0 view .LVU401
 1723 0032 604B     		ldr	r3, .L114+24
 1724              	.LBB934:
 1725              	.LBB932:
2041:Veno-Echo.cpp **** 
 1726              		.loc 19 2041 39 view .LVU402
 1727 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 1728              		.loc 19 2041 49 view .LVU403
 1729 0038 B6EE006A 		vmov.f32	s12, #5.0e-1
2041:Veno-Echo.cpp **** 
 1730              		.loc 19 2041 39 view .LVU404
 1731 003c D3ED007A 		vldr.32	s15, [r3]
2041:Veno-Echo.cpp **** 
 1732              		.loc 19 2041 12 view .LVU405
 1733 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
2041:Veno-Echo.cpp **** 
 1734              		.loc 19 2041 39 view .LVU406
 1735 0044 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 1736              		.loc 19 2041 49 view .LVU407
 1737 0048 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 1738              		.loc 19 2041 12 view .LVU408
 1739 004c A7EEA60A 		vfma.f32	s0, s15, s13
2043:Veno-Echo.cpp ****     {
 1740              		.loc 19 2043 5 view .LVU409
 1741 0050 B5EEC00A 		vcmpe.f32	s0, #0
2041:Veno-Echo.cpp **** 
 1742              		.loc 19 2041 12 view .LVU410
 1743 0054 F0EE407A 		vmov.f32	s15, s0
 1744              	.LVL74:
2043:Veno-Echo.cpp ****     {
 1745              		.loc 19 2043 5 is_stmt 1 view .LVU411
 1746 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1747 005c 00F19380 		bmi	.L112
2048:Veno-Echo.cpp ****     {
 1748              		.loc 19 2048 5 view .LVU412
2050:Veno-Echo.cpp ****     }
 1749              		.loc 19 2050 16 is_stmt 0 view .LVU413
 1750 0060 F4EE477A 		vcmp.f32	s15, s14
 1751 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1752 0068 77FE277A 		vselgt.f32	s15, s14, s15
 1753              	.LVL75:
 1754              	.L93:
2050:Veno-Echo.cpp ****     }
 1755              		.loc 19 2050 16 view .LVU414
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 89


 1756              	.LBE932:
 1757              	.LBE934:
1147:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1758              		.loc 19 1147 9 is_stmt 1 view .LVU415
1147:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1759              		.loc 19 1147 37 is_stmt 0 view .LVU416
 1760 006c B0EE670A 		vmov.f32	s0, s15
 1761 0070 0020     		movs	r0, #0
 1762 0072 B7EE041A 		vmov.f32	s2, #1.25e+0
 1763 0076 DFED500A 		vldr.32	s1, .L114+28
 1764 007a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1765              	.LVL76:
1148:Veno-Echo.cpp ****     }
 1766              		.loc 19 1148 9 is_stmt 1 view .LVU417
 1767              	.LBB935:
 1768              	.LBI935:
 135:../DaisySP/Source/Utility/dsp.h **** {
 1769              		.loc 21 135 13 view .LVU418
 1770              	.LBB936:
 1771              		.loc 21 137 5 view .LVU419
 1772              		.loc 21 137 9 is_stmt 0 view .LVU420
 1773 007e 4F4B     		ldr	r3, .L114+32
 1774 0080 9FED4F7A 		vldr.32	s14, .L114+36
 1775 0084 D3ED007A 		vldr.32	s15, [r3]
 1776              		.loc 21 137 24 view .LVU421
 1777 0088 30EE670A 		vsub.f32	s0, s0, s15
 1778              	.LVL77:
 1779              		.loc 21 137 24 view .LVU422
 1780              	.LBE936:
 1781              	.LBE935:
 1782              	.LBE950:
 1783              	.LBE962:
1184:Veno-Echo.cpp **** 
 1784              		.loc 19 1184 1 view .LVU423
 1785 008c BDEC028B 		vldm	sp!, {d8}
 1786              		.cfi_remember_state
 1787              		.cfi_restore 80
 1788              		.cfi_restore 81
 1789              		.cfi_def_cfa_offset 8
 1790              	.LBB963:
 1791              	.LBB951:
 1792              	.LBB938:
 1793              	.LBB937:
 1794              		.loc 21 137 9 view .LVU424
 1795 0090 E0EE077A 		vfma.f32	s15, s0, s14
 1796 0094 C3ED007A 		vstr.32	s15, [r3]
 1797              	.LBE937:
 1798              	.LBE938:
 1799              	.LBE951:
 1800              	.LBE963:
1184:Veno-Echo.cpp **** 
 1801              		.loc 19 1184 1 view .LVU425
 1802 0098 10BD     		pop	{r4, pc}
 1803              	.LVL78:
 1804              	.L85:
 1805              		.cfi_restore_state
 1806              	.LBB964:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 90


 1807              	.LBB952:
1153:Veno-Echo.cpp **** 
 1808              		.loc 19 1153 9 is_stmt 1 view .LVU426
1155:Veno-Echo.cpp ****         {
 1809              		.loc 19 1155 10 view .LVU427
 1810 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1811 009c 002B     		cmp	r3, #0
 1812 009e 3ED1     		bne	.L96
1157:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 1813              		.loc 19 1157 13 view .LVU428
1157:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 1814              		.loc 19 1157 23 is_stmt 0 view .LVU429
 1815 00a0 0124     		movs	r4, #1
1158:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 1816              		.loc 19 1158 29 view .LVU430
 1817 00a2 4848     		ldr	r0, .L114+40
1159:Veno-Echo.cpp ****         }
 1818              		.loc 19 1159 26 view .LVU431
 1819 00a4 4849     		ldr	r1, .L114+44
1157:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 1820              		.loc 19 1157 23 view .LVU432
 1821 00a6 1470     		strb	r4, [r2]
1158:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 1822              		.loc 19 1158 13 is_stmt 1 view .LVU433
1158:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 1823              		.loc 19 1158 29 is_stmt 0 view .LVU434
 1824 00a8 0370     		strb	r3, [r0]
1159:Veno-Echo.cpp ****         }
 1825              		.loc 19 1159 13 is_stmt 1 view .LVU435
1159:Veno-Echo.cpp ****         }
 1826              		.loc 19 1159 26 is_stmt 0 view .LVU436
 1827 00aa 81ED000A 		vstr.32	s0, [r1]
 1828              	.L84:
1159:Veno-Echo.cpp ****         }
 1829              		.loc 19 1159 26 view .LVU437
 1830              	.LBE952:
 1831              	.LBE964:
1184:Veno-Echo.cpp **** 
 1832              		.loc 19 1184 1 view .LVU438
 1833 00ae BDEC028B 		vldm	sp!, {d8}
 1834              		.cfi_remember_state
 1835              		.cfi_restore 80
 1836              		.cfi_restore 81
 1837              		.cfi_def_cfa_offset 8
 1838 00b2 10BD     		pop	{r4, pc}
 1839              	.L86:
 1840              		.cfi_restore_state
 1841              	.LBB965:
 1842              	.LBB959:
1125:Veno-Echo.cpp ****             {
 1843              		.loc 19 1125 13 is_stmt 1 view .LVU439
1125:Veno-Echo.cpp ****             {
 1844              		.loc 19 1125 16 is_stmt 0 view .LVU440
 1845 00b4 3C4B     		ldr	r3, .L114+12
1125:Veno-Echo.cpp ****             {
 1846              		.loc 19 1125 13 view .LVU441
 1847 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 91


 1848 00b8 7AB9     		cbnz	r2, .L88
1127:Veno-Echo.cpp ****                 {
 1849              		.loc 19 1127 17 is_stmt 1 view .LVU442
 1850              	.LVL79:
 1851              	.LBB939:
 1852              	.LBI939:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1853              		.loc 20 75 3 view .LVU443
 1854              	.LBB940:
 1855              		.loc 20 76 5 view .LVU444
 1856              		.loc 20 76 5 is_stmt 0 view .LVU445
 1857              	.LBE940:
 1858              	.LBE939:
1127:Veno-Echo.cpp ****                 {
 1859              		.loc 19 1127 23 view .LVU446
 1860 00ba 3D4A     		ldr	r2, .L114+20
1127:Veno-Echo.cpp ****                 {
 1861              		.loc 19 1127 17 view .LVU447
 1862 00bc 9FED437A 		vldr.32	s14, .L114+48
1127:Veno-Echo.cpp ****                 {
 1863              		.loc 19 1127 23 view .LVU448
 1864 00c0 D2ED007A 		vldr.32	s15, [r2]
 1865 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1866              	.LBB942:
 1867              	.LBB941:
 1868              		.loc 20 76 31 view .LVU449
 1869 00c8 F0EEE77A 		vabs.f32	s15, s15
 1870              	.LBE941:
 1871              	.LBE942:
1127:Veno-Echo.cpp ****                 {
 1872              		.loc 19 1127 17 view .LVU450
 1873 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1874 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1875 00d4 5DDD     		ble	.L108
1129:Veno-Echo.cpp ****                 }
 1876              		.loc 19 1129 21 is_stmt 1 view .LVU451
1129:Veno-Echo.cpp ****                 }
 1877              		.loc 19 1129 38 is_stmt 0 view .LVU452
 1878 00d6 0122     		movs	r2, #1
 1879 00d8 1A70     		strb	r2, [r3]
 1880              	.L88:
1134:Veno-Echo.cpp ****         
 1881              		.loc 19 1134 9 is_stmt 1 view .LVU453
 1882              	.LVL80:
1136:Veno-Echo.cpp ****         {
 1883              		.loc 19 1136 9 view .LVU454
1138:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 1884              		.loc 19 1138 13 view .LVU455
 1885              	.LBB943:
 1886              	.LBI943:
2038:Veno-Echo.cpp **** {
 1887              		.loc 19 2038 7 view .LVU456
 1888              	.LBB944:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1889              		.loc 19 2040 5 view .LVU457
2041:Veno-Echo.cpp **** 
 1890              		.loc 19 2041 5 view .LVU458
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 92


 1891              	.LBE944:
 1892              	.LBE943:
1138:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 1893              		.loc 19 1138 41 is_stmt 0 view .LVU459
 1894 00da 364B     		ldr	r3, .L114+24
 1895              	.LBB947:
 1896              	.LBB945:
2041:Veno-Echo.cpp **** 
 1897              		.loc 19 2041 39 view .LVU460
 1898 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 1899              		.loc 19 2041 49 view .LVU461
 1900 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2041:Veno-Echo.cpp **** 
 1901              		.loc 19 2041 39 view .LVU462
 1902 00e4 D3ED007A 		vldr.32	s15, [r3]
2041:Veno-Echo.cpp **** 
 1903              		.loc 19 2041 12 view .LVU463
 1904 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2041:Veno-Echo.cpp **** 
 1905              		.loc 19 2041 39 view .LVU464
 1906 00ec 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 1907              		.loc 19 2041 49 view .LVU465
 1908 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 1909              		.loc 19 2041 12 view .LVU466
 1910 00f4 B0EE406A 		vmov.f32	s12, s0
 1911 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2043:Veno-Echo.cpp ****     {
 1912              		.loc 19 2043 5 view .LVU467
 1913 00fc B5EEC06A 		vcmpe.f32	s12, #0
2041:Veno-Echo.cpp **** 
 1914              		.loc 19 2041 12 view .LVU468
 1915 0100 F0EE467A 		vmov.f32	s15, s12
 1916              	.LVL81:
2043:Veno-Echo.cpp ****     {
 1917              		.loc 19 2043 5 is_stmt 1 view .LVU469
 1918 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1919 0108 40D4     		bmi	.L113
2048:Veno-Echo.cpp ****     {
 1920              		.loc 19 2048 5 view .LVU470
2050:Veno-Echo.cpp ****     }
 1921              		.loc 19 2050 16 is_stmt 0 view .LVU471
 1922 010a F4EE477A 		vcmp.f32	s15, s14
 1923 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1924 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1925              	.L91:
 1926              	.LVL82:
 1927              		.loc 19 2053 5 is_stmt 1 view .LVU472
 1928              		.loc 19 2053 5 is_stmt 0 view .LVU473
 1929              	.LBE945:
 1930              	.LBE947:
1139:Veno-Echo.cpp ****         }
 1931              		.loc 19 1139 13 is_stmt 1 view .LVU474
1139:Veno-Echo.cpp ****         }
 1932              		.loc 19 1139 28 is_stmt 0 view .LVU475
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 93


 1933 0116 254B     		ldr	r3, .L114+16
 1934 0118 83ED000A 		vstr.32	s0, [r3]
 1935 011c A6E7     		b	.L93
 1936              	.LVL83:
 1937              	.L96:
1139:Veno-Echo.cpp ****         }
 1938              		.loc 19 1139 28 view .LVU476
 1939              	.LBE959:
 1940              	.LBB960:
1164:Veno-Echo.cpp ****             {
 1941              		.loc 19 1164 13 is_stmt 1 view .LVU477
1164:Veno-Echo.cpp ****             {
 1942              		.loc 19 1164 16 is_stmt 0 view .LVU478
 1943 011e 294B     		ldr	r3, .L114+40
1164:Veno-Echo.cpp ****             {
 1944              		.loc 19 1164 13 view .LVU479
 1945 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1946 0122 7AB9     		cbnz	r2, .L98
1166:Veno-Echo.cpp ****                 {
 1947              		.loc 19 1166 17 is_stmt 1 view .LVU480
 1948              	.LVL84:
 1949              	.LBB953:
 1950              	.LBI953:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1951              		.loc 20 75 3 view .LVU481
 1952              	.LBB954:
 1953              		.loc 20 76 5 view .LVU482
 1954              		.loc 20 76 5 is_stmt 0 view .LVU483
 1955              	.LBE954:
 1956              	.LBE953:
1166:Veno-Echo.cpp ****                 {
 1957              		.loc 19 1166 23 view .LVU484
 1958 0124 284A     		ldr	r2, .L114+44
1166:Veno-Echo.cpp ****                 {
 1959              		.loc 19 1166 17 view .LVU485
 1960 0126 9FED297A 		vldr.32	s14, .L114+48
1166:Veno-Echo.cpp ****                 {
 1961              		.loc 19 1166 23 view .LVU486
 1962 012a D2ED007A 		vldr.32	s15, [r2]
 1963 012e 70EE677A 		vsub.f32	s15, s0, s15
 1964              	.LBB956:
 1965              	.LBB955:
 1966              		.loc 20 76 31 view .LVU487
 1967 0132 F0EEE77A 		vabs.f32	s15, s15
 1968              	.LBE955:
 1969              	.LBE956:
1166:Veno-Echo.cpp ****                 {
 1970              		.loc 19 1166 17 view .LVU488
 1971 0136 F4EEC77A 		vcmpe.f32	s15, s14
 1972 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1973 013e B6DD     		ble	.L84
1168:Veno-Echo.cpp ****                 }
 1974              		.loc 19 1168 21 is_stmt 1 view .LVU489
1168:Veno-Echo.cpp ****                 }
 1975              		.loc 19 1168 37 is_stmt 0 view .LVU490
 1976 0140 0122     		movs	r2, #1
 1977 0142 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 94


 1978              	.L98:
1173:Veno-Echo.cpp ****         {
 1979              		.loc 19 1173 9 is_stmt 1 view .LVU491
 1980              	.LBB957:
 1981              	.LBB958:
1175:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 1982              		.loc 19 1175 13 view .LVU492
 1983              	.LVL85:
1176:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1984              		.loc 19 1176 13 view .LVU493
1176:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1985              		.loc 19 1176 29 is_stmt 0 view .LVU494
 1986 0144 9FED221A 		vldr.32	s2, .L114+52
 1987 0148 0120     		movs	r0, #1
 1988 014a DFED220A 		vldr.32	s1, .L114+56
 1989 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 1990              	.LVL86:
1176:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1991              		.loc 19 1176 29 view .LVU495
 1992 0152 B0EE408A 		vmov.f32	s16, s0
 1993              	.LVL87:
1177:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1994              		.loc 19 1177 13 is_stmt 1 view .LVU496
1177:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1995              		.loc 19 1177 26 is_stmt 0 view .LVU497
 1996 0156 2048     		ldr	r0, .L114+60
 1997 0158 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1998              	.LVL88:
1178:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 1999              		.loc 19 1178 13 is_stmt 1 view .LVU498
1178:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2000              		.loc 19 1178 26 is_stmt 0 view .LVU499
 2001 015c 1F48     		ldr	r0, .L114+64
 2002 015e B0EE480A 		vmov.f32	s0, s16
 2003 0162 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2004              	.LVL89:
1179:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2005              		.loc 19 1179 13 is_stmt 1 view .LVU500
1179:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2006              		.loc 19 1179 31 is_stmt 0 view .LVU501
 2007 0166 B0EE480A 		vmov.f32	s0, s16
 2008 016a 1D48     		ldr	r0, .L114+68
 2009 016c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2010              	.LVL90:
1180:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2011              		.loc 19 1180 13 is_stmt 1 view .LVU502
1180:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2012              		.loc 19 1180 31 is_stmt 0 view .LVU503
 2013 0170 B0EE480A 		vmov.f32	s0, s16
 2014 0174 1B48     		ldr	r0, .L114+72
 2015 0176 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2016              	.LVL91:
1181:Veno-Echo.cpp ****         }
 2017              		.loc 19 1181 13 is_stmt 1 view .LVU504
1181:Veno-Echo.cpp ****         }
 2018              		.loc 19 1181 35 is_stmt 0 view .LVU505
 2019 017a 1B4B     		ldr	r3, .L114+76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 95


 2020 017c 83ED058A 		vstr.32	s16, [r3, #20]
 2021              	.LBE958:
 2022              	.LBE957:
 2023              	.LBE960:
 2024              	.LBE965:
1184:Veno-Echo.cpp **** 
 2025              		.loc 19 1184 1 view .LVU506
 2026 0180 BDEC028B 		vldm	sp!, {d8}
 2027              		.cfi_remember_state
 2028              		.cfi_restore 80
 2029              		.cfi_restore 81
 2030              		.cfi_def_cfa_offset 8
 2031              	.LVL92:
1184:Veno-Echo.cpp **** 
 2032              		.loc 19 1184 1 view .LVU507
 2033 0184 10BD     		pop	{r4, pc}
 2034              	.LVL93:
 2035              	.L112:
 2036              		.cfi_restore_state
 2037              	.LBB966:
 2038              	.LBB961:
 2039              	.LBB948:
 2040              	.LBB933:
2045:Veno-Echo.cpp ****     }
 2041              		.loc 19 2045 16 view .LVU508
 2042 0186 DFED0C7A 		vldr.32	s15, .L114+28
 2043 018a 6FE7     		b	.L93
 2044              	.LVL94:
 2045              	.L113:
2045:Veno-Echo.cpp ****     }
 2046              		.loc 19 2045 16 view .LVU509
 2047              	.LBE933:
 2048              	.LBE948:
 2049              	.LBB949:
 2050              	.LBB946:
 2051 018c DFED0A7A 		vldr.32	s15, .L114+28
 2052 0190 C1E7     		b	.L91
 2053              	.LVL95:
 2054              	.L108:
2045:Veno-Echo.cpp ****     }
 2055              		.loc 19 2045 16 view .LVU510
 2056 0192 064B     		ldr	r3, .L114+16
 2057 0194 93ED000A 		vldr.32	s0, [r3]
 2058              	.LVL96:
2045:Veno-Echo.cpp ****     }
 2059              		.loc 19 2045 16 view .LVU511
 2060 0198 4BE7     		b	.L87
 2061              	.L115:
 2062 019a 00BF     		.align	2
 2063              	.L114:
 2064 019c 18000000 		.word	.LANCHOR4+24
 2065 01a0 00000000 		.word	.LANCHOR8
 2066 01a4 00000000 		.word	.LANCHOR22
 2067 01a8 00000000 		.word	.LANCHOR23
 2068 01ac 00000000 		.word	.LANCHOR24
 2069 01b0 00000000 		.word	.LANCHOR25
 2070 01b4 00000000 		.word	.LANCHOR21
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 96


 2071 01b8 00000000 		.word	0
 2072 01bc 00000000 		.word	.LANCHOR26
 2073 01c0 6F12033D 		.word	1023611503
 2074 01c4 00000000 		.word	.LANCHOR27
 2075 01c8 00000000 		.word	.LANCHOR28
 2076 01cc 0AD7A33B 		.word	1000593162
 2077 01d0 00803B46 		.word	1178304512
 2078 01d4 0080BB44 		.word	1153138688
 2079 01d8 00000000 		.word	.LANCHOR29
 2080 01dc 00000000 		.word	.LANCHOR30
 2081 01e0 00000000 		.word	.LANCHOR31
 2082 01e4 00000000 		.word	.LANCHOR32
 2083 01e8 00000000 		.word	.LANCHOR20
 2084              	.LBE946:
 2085              	.LBE949:
 2086              	.LBE961:
 2087              	.LBE966:
 2088              		.cfi_endproc
 2089              	.LFE4298:
 2091              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 2092              		.align	1
 2093              		.p2align 2,,3
 2094              		.global	_Z16Update_drywet_CVv
 2095              		.syntax unified
 2096              		.thumb
 2097              		.thumb_func
 2098              		.fpu fpv5-d16
 2100              	_Z16Update_drywet_CVv:
 2101              	.LFB4299:
1187:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2102              		.loc 19 1187 1 is_stmt 1 view -0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 0
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
1188:Veno-Echo.cpp **** }
 2106              		.loc 19 1188 5 view .LVU513
1187:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2107              		.loc 19 1187 1 is_stmt 0 view .LVU514
 2108 0000 08B5     		push	{r3, lr}
 2109              		.cfi_def_cfa_offset 8
 2110              		.cfi_offset 3, -8
 2111              		.cfi_offset 14, -4
1188:Veno-Echo.cpp **** }
 2112              		.loc 19 1188 32 view .LVU515
 2113 0002 0421     		movs	r1, #4
 2114 0004 0348     		ldr	r0, .L118
 2115 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2116              	.LVL97:
1188:Veno-Echo.cpp **** }
 2117              		.loc 19 1188 15 view .LVU516
 2118 000a 034B     		ldr	r3, .L118+4
 2119 000c 83ED000A 		vstr.32	s0, [r3]
1189:Veno-Echo.cpp **** 
 2120              		.loc 19 1189 1 view .LVU517
 2121 0010 08BD     		pop	{r3, pc}
 2122              	.L119:
 2123 0012 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 97


 2124              	.L118:
 2125 0014 18000000 		.word	.LANCHOR4+24
 2126 0018 00000000 		.word	.LANCHOR33
 2127              		.cfi_endproc
 2128              	.LFE4299:
 2130              		.section	.text._Z13Update_drywetv,"ax",%progbits
 2131              		.align	1
 2132              		.p2align 2,,3
 2133              		.global	_Z13Update_drywetv
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu fpv5-d16
 2139              	_Z13Update_drywetv:
 2140              	.LFB4300:
1192:Veno-Echo.cpp ****     static bool lastShift{};
 2141              		.loc 19 1192 1 is_stmt 1 view -0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 0
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
1193:Veno-Echo.cpp ****     static bool drywet_pickup{};
 2145              		.loc 19 1193 5 view .LVU519
1194:Veno-Echo.cpp ****     static bool Res_pickup{};
 2146              		.loc 19 1194 5 view .LVU520
1195:Veno-Echo.cpp **** 
 2147              		.loc 19 1195 5 view .LVU521
1197:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 2148              		.loc 19 1197 5 view .LVU522
1202:Veno-Echo.cpp **** 
 2149              		.loc 19 1202 5 view .LVU523
1202:Veno-Echo.cpp **** 
 2150              		.loc 19 1202 40 is_stmt 0 view .LVU524
 2151 0000 0522     		movs	r2, #5
 2152 0002 0721     		movs	r1, #7
 2153 0004 8048     		ldr	r0, .L153+24
1192:Veno-Echo.cpp ****     static bool lastShift{};
 2154              		.loc 19 1192 1 view .LVU525
 2155 0006 10B5     		push	{r4, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 4, -8
 2158              		.cfi_offset 14, -4
 2159 0008 2DED028B 		vpush.64	{d8}
 2160              		.cfi_def_cfa_offset 16
 2161              		.cfi_offset 80, -16
 2162              		.cfi_offset 81, -12
1202:Veno-Echo.cpp **** 
 2163              		.loc 19 1202 40 view .LVU526
 2164 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2165              	.LVL98:
 2166              	.LBB967:
1204:Veno-Echo.cpp ****     {   
 2167              		.loc 19 1204 9 view .LVU527
 2168 0010 7E4B     		ldr	r3, .L153+28
 2169              	.LVL99:
1204:Veno-Echo.cpp ****     {   
 2170              		.loc 19 1204 9 view .LVU528
 2171              	.LBE967:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 98


1204:Veno-Echo.cpp ****     {   
 2172              		.loc 19 1204 5 is_stmt 1 view .LVU529
 2173              	.LBB1001:
 2174              	.LBB968:
1209:Veno-Echo.cpp ****         {
 2175              		.loc 19 1209 19 is_stmt 0 view .LVU530
 2176 0012 7F4A     		ldr	r2, .L153+32
 2177              	.LBE968:
1204:Veno-Echo.cpp ****     {   
 2178              		.loc 19 1204 5 view .LVU531
 2179 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2180 0016 B3BB     		cbnz	r3, .L121
 2181              	.LBB989:
1207:Veno-Echo.cpp **** 
 2182              		.loc 19 1207 9 is_stmt 1 view .LVU532
1209:Veno-Echo.cpp ****         {
 2183              		.loc 19 1209 9 view .LVU533
 2184 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2185 001a 0029     		cmp	r1, #0
 2186 001c 40D0     		beq	.L122
1211:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2187              		.loc 19 1211 13 view .LVU534
1213:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2188              		.loc 19 1213 27 is_stmt 0 view .LVU535
 2189 001e 7D48     		ldr	r0, .L153+36
1214:Veno-Echo.cpp ****         } 
 2190              		.loc 19 1214 24 view .LVU536
 2191 0020 7D49     		ldr	r1, .L153+40
1211:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2192              		.loc 19 1211 23 view .LVU537
 2193 0022 1370     		strb	r3, [r2]
1213:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2194              		.loc 19 1213 13 is_stmt 1 view .LVU538
1213:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2195              		.loc 19 1213 27 is_stmt 0 view .LVU539
 2196 0024 0370     		strb	r3, [r0]
1214:Veno-Echo.cpp ****         } 
 2197              		.loc 19 1214 13 is_stmt 1 view .LVU540
1214:Veno-Echo.cpp ****         } 
 2198              		.loc 19 1214 24 is_stmt 0 view .LVU541
 2199 0026 81ED000A 		vstr.32	s0, [r1]
 2200              	.L123:
1230:Veno-Echo.cpp **** 
 2201              		.loc 19 1230 9 is_stmt 1 view .LVU542
 2202              	.LVL100:
1232:Veno-Echo.cpp ****         {
 2203              		.loc 19 1232 9 view .LVU543
1240:Veno-Echo.cpp ****         }
 2204              		.loc 19 1240 13 view .LVU544
 2205              	.LBB969:
 2206              	.LBI969:
2038:Veno-Echo.cpp **** {
 2207              		.loc 19 2038 7 view .LVU545
 2208              	.LBB970:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2209              		.loc 19 2040 5 view .LVU546
2041:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 99


 2210              		.loc 19 2041 5 view .LVU547
 2211              	.LBE970:
 2212              	.LBE969:
1240:Veno-Echo.cpp ****         }
 2213              		.loc 19 1240 37 is_stmt 0 view .LVU548
 2214 002a 7C4A     		ldr	r2, .L153+44
 2215              	.LBB973:
 2216              	.LBB971:
2041:Veno-Echo.cpp **** 
 2217              		.loc 19 2041 39 view .LVU549
 2218 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2041:Veno-Echo.cpp **** 
 2219              		.loc 19 2041 49 view .LVU550
 2220 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 2221              	.LBE971:
 2222              	.LBE973:
1240:Veno-Echo.cpp ****         }
 2223              		.loc 19 1240 37 view .LVU551
 2224 0034 7A4B     		ldr	r3, .L153+48
 2225              	.LBB974:
 2226              	.LBB972:
2041:Veno-Echo.cpp **** 
 2227              		.loc 19 2041 39 view .LVU552
 2228 0036 92ED007A 		vldr.32	s14, [r2]
2041:Veno-Echo.cpp **** 
 2229              		.loc 19 2041 12 view .LVU553
 2230 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 2231 003e D3ED007A 		vldr.32	s15, [r3]
2041:Veno-Echo.cpp **** 
 2232              		.loc 19 2041 39 view .LVU554
 2233 0042 36EEC77A 		vsub.f32	s14, s13, s14
2041:Veno-Echo.cpp **** 
 2234              		.loc 19 2041 49 view .LVU555
 2235 0046 37EE657A 		vsub.f32	s14, s14, s11
2041:Veno-Echo.cpp **** 
 2236              		.loc 19 2041 12 view .LVU556
 2237 004a E7EE067A 		vfma.f32	s15, s14, s12
 2238              	.LVL101:
2043:Veno-Echo.cpp ****     {
 2239              		.loc 19 2043 5 is_stmt 1 view .LVU557
 2240 004e F5EEC07A 		vcmpe.f32	s15, #0
 2241 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2242 0056 00F1BA80 		bmi	.L140
2048:Veno-Echo.cpp ****     {
 2243              		.loc 19 2048 5 view .LVU558
 2244 005a F4EEE67A 		vcmpe.f32	s15, s13
 2245 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2246 0062 40F3BF80 		ble	.L146
 2247              	.LVL102:
 2248              	.L131:
2048:Veno-Echo.cpp ****     {
 2249              		.loc 19 2048 5 is_stmt 0 view .LVU559
 2250              	.LBE972:
 2251              	.LBE974:
1247:Veno-Echo.cpp ****         }
 2252              		.loc 19 1247 26 view .LVU560
 2253 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 100


 2254              	.LVL103:
 2255              	.L130:
1259:Veno-Echo.cpp ****     }
 2256              		.loc 19 1259 9 is_stmt 1 view .LVU561
 2257              	.LBB975:
 2258              	.LBI975:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2259              		.loc 21 135 13 view .LVU562
 2260              	.LBB976:
 2261              		.loc 21 137 5 view .LVU563
 2262              		.loc 21 137 9 is_stmt 0 view .LVU564
 2263 006a 6E4B     		ldr	r3, .L153+52
 2264 006c 9FED6E7A 		vldr.32	s14, .L153+56
 2265 0070 D3ED007A 		vldr.32	s15, [r3]
 2266              		.loc 21 137 24 view .LVU565
 2267 0074 30EE670A 		vsub.f32	s0, s0, s15
 2268              	.LVL104:
 2269              		.loc 21 137 24 view .LVU566
 2270              	.LBE976:
 2271              	.LBE975:
 2272              	.LBE989:
 2273              	.LBE1001:
1298:Veno-Echo.cpp **** 
 2274              		.loc 19 1298 1 view .LVU567
 2275 0078 BDEC028B 		vldm	sp!, {d8}
 2276              		.cfi_remember_state
 2277              		.cfi_restore 80
 2278              		.cfi_restore 81
 2279              		.cfi_def_cfa_offset 8
 2280              	.LBB1002:
 2281              	.LBB990:
 2282              	.LBB978:
 2283              	.LBB977:
 2284              		.loc 21 137 9 view .LVU568
 2285 007c E0EE077A 		vfma.f32	s15, s0, s14
 2286 0080 C3ED007A 		vstr.32	s15, [r3]
 2287              	.LBE977:
 2288              	.LBE978:
 2289              	.LBE990:
 2290              	.LBE1002:
1298:Veno-Echo.cpp **** 
 2291              		.loc 19 1298 1 view .LVU569
 2292 0084 10BD     		pop	{r4, pc}
 2293              	.LVL105:
 2294              	.L121:
 2295              		.cfi_restore_state
 2296              	.LBB1003:
 2297              	.LBB991:
1263:Veno-Echo.cpp **** 
 2298              		.loc 19 1263 9 is_stmt 1 view .LVU570
1265:Veno-Echo.cpp ****         {
 2299              		.loc 19 1265 9 view .LVU571
 2300 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2301 0088 002B     		cmp	r3, #0
 2302 008a 58D1     		bne	.L135
1267:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 2303              		.loc 19 1267 13 view .LVU572
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 101


1267:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 2304              		.loc 19 1267 23 is_stmt 0 view .LVU573
 2305 008c 0124     		movs	r4, #1
1268:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 2306              		.loc 19 1268 24 view .LVU574
 2307 008e 6748     		ldr	r0, .L153+60
1269:Veno-Echo.cpp ****         }
 2308              		.loc 19 1269 21 view .LVU575
 2309 0090 6749     		ldr	r1, .L153+64
1267:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 2310              		.loc 19 1267 23 view .LVU576
 2311 0092 1470     		strb	r4, [r2]
1268:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 2312              		.loc 19 1268 13 is_stmt 1 view .LVU577
1268:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 2313              		.loc 19 1268 24 is_stmt 0 view .LVU578
 2314 0094 0370     		strb	r3, [r0]
1269:Veno-Echo.cpp ****         }
 2315              		.loc 19 1269 13 is_stmt 1 view .LVU579
1269:Veno-Echo.cpp ****         }
 2316              		.loc 19 1269 21 is_stmt 0 view .LVU580
 2317 0096 81ED000A 		vstr.32	s0, [r1]
 2318              	.L120:
1269:Veno-Echo.cpp ****         }
 2319              		.loc 19 1269 21 view .LVU581
 2320              	.LBE991:
 2321              	.LBE1003:
1298:Veno-Echo.cpp **** 
 2322              		.loc 19 1298 1 view .LVU582
 2323 009a BDEC028B 		vldm	sp!, {d8}
 2324              		.cfi_remember_state
 2325              		.cfi_restore 80
 2326              		.cfi_restore 81
 2327              		.cfi_def_cfa_offset 8
 2328 009e 10BD     		pop	{r4, pc}
 2329              	.L122:
 2330              		.cfi_restore_state
 2331              	.LBB1004:
 2332              	.LBB998:
1219:Veno-Echo.cpp ****             {
 2333              		.loc 19 1219 13 is_stmt 1 view .LVU583
1219:Veno-Echo.cpp ****             {
 2334              		.loc 19 1219 16 is_stmt 0 view .LVU584
 2335 00a0 5C4B     		ldr	r3, .L153+36
1219:Veno-Echo.cpp ****             {
 2336              		.loc 19 1219 13 view .LVU585
 2337 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2338 00a4 7AB9     		cbnz	r2, .L124
1222:Veno-Echo.cpp ****                 {
 2339              		.loc 19 1222 17 is_stmt 1 view .LVU586
 2340              	.LVL106:
 2341              	.LBB979:
 2342              	.LBI979:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2343              		.loc 20 75 3 view .LVU587
 2344              	.LBB980:
 2345              		.loc 20 76 5 view .LVU588
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 102


 2346              		.loc 20 76 5 is_stmt 0 view .LVU589
 2347              	.LBE980:
 2348              	.LBE979:
1222:Veno-Echo.cpp ****                 {
 2349              		.loc 19 1222 23 view .LVU590
 2350 00a6 5C4A     		ldr	r2, .L153+40
1222:Veno-Echo.cpp ****                 {
 2351              		.loc 19 1222 17 view .LVU591
 2352 00a8 9FED627A 		vldr.32	s14, .L153+68
1222:Veno-Echo.cpp ****                 {
 2353              		.loc 19 1222 23 view .LVU592
 2354 00ac D2ED007A 		vldr.32	s15, [r2]
 2355 00b0 70EE677A 		vsub.f32	s15, s0, s15
 2356              	.LBB982:
 2357              	.LBB981:
 2358              		.loc 20 76 31 view .LVU593
 2359 00b4 F0EEE77A 		vabs.f32	s15, s15
 2360              	.LBE981:
 2361              	.LBE982:
1222:Veno-Echo.cpp ****                 {
 2362              		.loc 19 1222 17 view .LVU594
 2363 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 2364 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2365 00c0 B3DD     		ble	.L123
1224:Veno-Echo.cpp ****                 }
 2366              		.loc 19 1224 21 is_stmt 1 view .LVU595
1224:Veno-Echo.cpp ****                 }
 2367              		.loc 19 1224 35 is_stmt 0 view .LVU596
 2368 00c2 0122     		movs	r2, #1
 2369 00c4 1A70     		strb	r2, [r3]
 2370              	.L124:
1230:Veno-Echo.cpp **** 
 2371              		.loc 19 1230 9 is_stmt 1 view .LVU597
 2372              	.LVL107:
1232:Veno-Echo.cpp ****         {
 2373              		.loc 19 1232 9 view .LVU598
1234:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2374              		.loc 19 1234 13 view .LVU599
 2375              	.LBB983:
 2376              	.LBI983:
2038:Veno-Echo.cpp **** {
 2377              		.loc 19 2038 7 view .LVU600
 2378              	.LBB984:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2379              		.loc 19 2040 5 view .LVU601
2041:Veno-Echo.cpp **** 
 2380              		.loc 19 2041 5 view .LVU602
 2381              	.LBE984:
 2382              	.LBE983:
1234:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2383              		.loc 19 1234 37 is_stmt 0 view .LVU603
 2384 00c6 554B     		ldr	r3, .L153+44
 2385              	.LBB987:
 2386              	.LBB985:
2041:Veno-Echo.cpp **** 
 2387              		.loc 19 2041 39 view .LVU604
 2388 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 103


2041:Veno-Echo.cpp **** 
 2389              		.loc 19 2041 49 view .LVU605
 2390 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2041:Veno-Echo.cpp **** 
 2391              		.loc 19 2041 39 view .LVU606
 2392 00d0 D3ED007A 		vldr.32	s15, [r3]
2041:Veno-Echo.cpp **** 
 2393              		.loc 19 2041 12 view .LVU607
 2394 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2041:Veno-Echo.cpp **** 
 2395              		.loc 19 2041 39 view .LVU608
 2396 00d8 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 2397              		.loc 19 2041 49 view .LVU609
 2398 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 2399              		.loc 19 2041 12 view .LVU610
 2400 00e0 B0EE406A 		vmov.f32	s12, s0
 2401 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2043:Veno-Echo.cpp ****     {
 2402              		.loc 19 2043 5 view .LVU611
 2403 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2041:Veno-Echo.cpp **** 
 2404              		.loc 19 2041 12 view .LVU612
 2405 00ec F0EE467A 		vmov.f32	s15, s12
 2406              	.LVL108:
2043:Veno-Echo.cpp ****     {
 2407              		.loc 19 2043 5 is_stmt 1 view .LVU613
 2408 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2409 00f4 6ED4     		bmi	.L151
2048:Veno-Echo.cpp ****     {
 2410              		.loc 19 2048 5 view .LVU614
 2411 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 2412 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2413 00fe 6EDD     		ble	.L152
2050:Veno-Echo.cpp ****     }
 2414              		.loc 19 2050 16 is_stmt 0 view .LVU615
 2415 0100 F0EE477A 		vmov.f32	s15, s14
 2416 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 2417              	.LVL109:
 2418              	.L126:
 2419              		.loc 19 2053 5 is_stmt 1 view .LVU616
 2420              		.loc 19 2053 5 is_stmt 0 view .LVU617
 2421              	.LBE985:
 2422              	.LBE987:
1235:Veno-Echo.cpp ****         }
 2423              		.loc 19 1235 13 is_stmt 1 view .LVU618
1235:Veno-Echo.cpp ****         }
 2424              		.loc 19 1235 25 is_stmt 0 view .LVU619
 2425 0108 454B     		ldr	r3, .L153+48
 2426 010a 83ED000A 		vstr.32	s0, [r3]
 2427              	.LVL110:
 2428              	.L127:
1243:Veno-Echo.cpp **** 
 2429              		.loc 19 1243 9 is_stmt 1 view .LVU620
1245:Veno-Echo.cpp ****         {
 2430              		.loc 19 1245 9 view .LVU621
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 104


 2431 010e 9FED385B 		vldr.64	d5, .L153
 2432 0112 B4EEC56B 		vcmpe.f64	d6, d5
 2433 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2434 011a A4DA     		bge	.L131
1249:Veno-Echo.cpp ****         {
 2435              		.loc 19 1249 14 view .LVU622
 2436 011c 9FED365B 		vldr.64	d5, .L153+8
 2437 0120 B4EEC56B 		vcmpe.f64	d6, d5
 2438 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2439 0128 51D9     		bls	.L140
1255:Veno-Echo.cpp ****         }
 2440              		.loc 19 1255 13 view .LVU623
1255:Veno-Echo.cpp ****         }
 2441              		.loc 19 1255 33 is_stmt 0 view .LVU624
 2442 012a B0EE670A 		vmov.f32	s0, s15
 2443              	.LVL111:
1255:Veno-Echo.cpp ****         }
 2444              		.loc 19 1255 33 view .LVU625
 2445 012e 0120     		movs	r0, #1
 2446 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 2447 0134 DFED400A 		vldr.32	s1, .L153+72
 2448 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2449              	.LVL112:
1255:Veno-Echo.cpp ****         }
 2450              		.loc 19 1255 33 view .LVU626
 2451 013c 95E7     		b	.L130
 2452              	.LVL113:
 2453              	.L135:
1255:Veno-Echo.cpp ****         }
 2454              		.loc 19 1255 33 view .LVU627
 2455              	.LBE998:
 2456              	.LBB999:
1274:Veno-Echo.cpp ****             {
 2457              		.loc 19 1274 13 is_stmt 1 view .LVU628
1274:Veno-Echo.cpp ****             {
 2458              		.loc 19 1274 16 is_stmt 0 view .LVU629
 2459 013e 3B4B     		ldr	r3, .L153+60
1274:Veno-Echo.cpp ****             {
 2460              		.loc 19 1274 13 view .LVU630
 2461 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2462 0142 7AB9     		cbnz	r2, .L137
1276:Veno-Echo.cpp ****                 {
 2463              		.loc 19 1276 17 is_stmt 1 view .LVU631
 2464              	.LVL114:
 2465              	.LBB992:
 2466              	.LBI992:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2467              		.loc 20 75 3 view .LVU632
 2468              	.LBB993:
 2469              		.loc 20 76 5 view .LVU633
 2470              		.loc 20 76 5 is_stmt 0 view .LVU634
 2471              	.LBE993:
 2472              	.LBE992:
1276:Veno-Echo.cpp ****                 {
 2473              		.loc 19 1276 23 view .LVU635
 2474 0144 3A4A     		ldr	r2, .L153+64
1276:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 105


 2475              		.loc 19 1276 17 view .LVU636
 2476 0146 9FED3B7A 		vldr.32	s14, .L153+68
1276:Veno-Echo.cpp ****                 {
 2477              		.loc 19 1276 23 view .LVU637
 2478 014a D2ED007A 		vldr.32	s15, [r2]
 2479 014e 70EE677A 		vsub.f32	s15, s0, s15
 2480              	.LBB995:
 2481              	.LBB994:
 2482              		.loc 20 76 31 view .LVU638
 2483 0152 F0EEE77A 		vabs.f32	s15, s15
 2484              	.LBE994:
 2485              	.LBE995:
1276:Veno-Echo.cpp ****                 {
 2486              		.loc 19 1276 17 view .LVU639
 2487 0156 F4EEC77A 		vcmpe.f32	s15, s14
 2488 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2489 015e 9CDD     		ble	.L120
1278:Veno-Echo.cpp ****                 }
 2490              		.loc 19 1278 21 is_stmt 1 view .LVU640
1278:Veno-Echo.cpp ****                 }
 2491              		.loc 19 1278 32 is_stmt 0 view .LVU641
 2492 0160 0122     		movs	r2, #1
 2493 0162 1A70     		strb	r2, [r3]
 2494              	.L137:
1283:Veno-Echo.cpp ****         {
 2495              		.loc 19 1283 9 is_stmt 1 view .LVU642
 2496              	.LBB996:
 2497              	.LBB997:
1285:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2498              		.loc 19 1285 13 view .LVU643
 2499              	.LVL115:
1286:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2500              		.loc 19 1286 13 view .LVU644
1286:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2501              		.loc 19 1286 24 is_stmt 0 view .LVU645
 2502 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 2503 0168 DFED330A 		vldr.32	s1, .L153+72
 2504 016c 0020     		movs	r0, #0
 2505 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2506              	.LVL116:
1286:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2507              		.loc 19 1286 24 view .LVU646
 2508 0172 B0EE408A 		vmov.f32	s16, s0
 2509              	.LVL117:
1287:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2510              		.loc 19 1287 13 is_stmt 1 view .LVU647
1287:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2511              		.loc 19 1287 25 is_stmt 0 view .LVU648
 2512 0176 3148     		ldr	r0, .L153+76
 2513 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2514              	.LVL118:
1288:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2515              		.loc 19 1288 13 is_stmt 1 view .LVU649
1288:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2516              		.loc 19 1288 25 is_stmt 0 view .LVU650
 2517 017c 3048     		ldr	r0, .L153+80
 2518 017e B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 106


 2519 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2520              	.LVL119:
1289:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2521              		.loc 19 1289 13 is_stmt 1 view .LVU651
1289:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2522              		.loc 19 1289 25 is_stmt 0 view .LVU652
 2523 0186 B0EE480A 		vmov.f32	s0, s16
 2524 018a 2E48     		ldr	r0, .L153+84
 2525 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2526              	.LVL120:
1290:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2527              		.loc 19 1290 13 is_stmt 1 view .LVU653
1290:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2528              		.loc 19 1290 25 is_stmt 0 view .LVU654
 2529 0190 B0EE480A 		vmov.f32	s0, s16
 2530 0194 2C48     		ldr	r0, .L153+88
 2531 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2532              	.LVL121:
1291:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2533              		.loc 19 1291 13 is_stmt 1 view .LVU655
1291:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2534              		.loc 19 1291 30 is_stmt 0 view .LVU656
 2535 019a B0EE480A 		vmov.f32	s0, s16
 2536 019e 2B48     		ldr	r0, .L153+92
 2537 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2538              	.LVL122:
1292:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2539              		.loc 19 1292 13 is_stmt 1 view .LVU657
1292:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2540              		.loc 19 1292 30 is_stmt 0 view .LVU658
 2541 01a4 B0EE480A 		vmov.f32	s0, s16
 2542 01a8 2948     		ldr	r0, .L153+96
 2543 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2544              	.LVL123:
1293:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2545              		.loc 19 1293 13 is_stmt 1 view .LVU659
1293:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2546              		.loc 19 1293 30 is_stmt 0 view .LVU660
 2547 01ae B0EE480A 		vmov.f32	s0, s16
 2548 01b2 2848     		ldr	r0, .L153+100
 2549 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2550              	.LVL124:
1294:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2551              		.loc 19 1294 13 is_stmt 1 view .LVU661
1294:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2552              		.loc 19 1294 30 is_stmt 0 view .LVU662
 2553 01b8 B0EE480A 		vmov.f32	s0, s16
 2554 01bc 2648     		ldr	r0, .L153+104
 2555 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2556              	.LVL125:
1295:Veno-Echo.cpp ****         }
 2557              		.loc 19 1295 13 is_stmt 1 view .LVU663
1295:Veno-Echo.cpp ****         }
 2558              		.loc 19 1295 35 is_stmt 0 view .LVU664
 2559 01c2 264B     		ldr	r3, .L153+108
 2560 01c4 83ED068A 		vstr.32	s16, [r3, #24]
 2561              	.LBE997:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 107


 2562              	.LBE996:
 2563              	.LBE999:
 2564              	.LBE1004:
1298:Veno-Echo.cpp **** 
 2565              		.loc 19 1298 1 view .LVU665
 2566 01c8 BDEC028B 		vldm	sp!, {d8}
 2567              		.cfi_remember_state
 2568              		.cfi_restore 80
 2569              		.cfi_restore 81
 2570              		.cfi_def_cfa_offset 8
 2571              	.LVL126:
1298:Veno-Echo.cpp **** 
 2572              		.loc 19 1298 1 view .LVU666
 2573 01cc 10BD     		pop	{r4, pc}
 2574              	.LVL127:
 2575              	.L140:
 2576              		.cfi_restore_state
 2577              	.LBB1005:
 2578              	.LBB1000:
1251:Veno-Echo.cpp ****         }
 2579              		.loc 19 1251 26 view .LVU667
 2580 01ce 9FED1A0A 		vldr.32	s0, .L153+72
 2581              	.LVL128:
1251:Veno-Echo.cpp ****         }
 2582              		.loc 19 1251 26 view .LVU668
 2583 01d2 4AE7     		b	.L130
 2584              	.LVL129:
 2585              	.L151:
 2586              	.LBB988:
 2587              	.LBB986:
1251:Veno-Echo.cpp ****         }
 2588              		.loc 19 1251 26 view .LVU669
 2589 01d4 9FED0A6B 		vldr.64	d6, .L153+16
 2590              	.LVL130:
2045:Veno-Echo.cpp ****     }
 2591              		.loc 19 2045 16 view .LVU670
 2592 01d8 DFED177A 		vldr.32	s15, .L153+72
 2593              	.LVL131:
2045:Veno-Echo.cpp ****     }
 2594              		.loc 19 2045 16 view .LVU671
 2595 01dc 94E7     		b	.L126
 2596              	.LVL132:
 2597              	.L152:
2045:Veno-Echo.cpp ****     }
 2598              		.loc 19 2045 16 view .LVU672
 2599 01de B7EEE76A 		vcvt.f64.f32	d6, s15
 2600              	.LVL133:
2045:Veno-Echo.cpp ****     }
 2601              		.loc 19 2045 16 view .LVU673
 2602 01e2 91E7     		b	.L126
 2603              	.LVL134:
 2604              	.L146:
2045:Veno-Echo.cpp ****     }
 2605              		.loc 19 2045 16 view .LVU674
 2606 01e4 B7EEE76A 		vcvt.f64.f32	d6, s15
 2607 01e8 91E7     		b	.L127
 2608              	.L154:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 108


 2609 01ea 00BFAFF3 		.align	3
 2609      0080
 2610              	.L153:
 2611 01f0 5C8FC2F5 		.word	4123168604
 2612 01f4 285CEF3F 		.word	1072651304
 2613 01f8 7B14AE47 		.word	1202590843
 2614 01fc E17A943F 		.word	1066695393
 2615 0200 00000000 		.word	0
 2616 0204 00000000 		.word	0
 2617 0208 18000000 		.word	.LANCHOR4+24
 2618 020c 00000000 		.word	.LANCHOR8
 2619 0210 00000000 		.word	.LANCHOR34
 2620 0214 00000000 		.word	.LANCHOR35
 2621 0218 00000000 		.word	.LANCHOR36
 2622 021c 00000000 		.word	.LANCHOR33
 2623 0220 00000000 		.word	.LANCHOR37
 2624 0224 00000000 		.word	.LANCHOR38
 2625 0228 6F12833C 		.word	1015222895
 2626 022c 00000000 		.word	.LANCHOR39
 2627 0230 00000000 		.word	.LANCHOR40
 2628 0234 0AD7A33B 		.word	1000593162
 2629 0238 00000000 		.word	0
 2630 023c 00000000 		.word	.LANCHOR29
 2631 0240 00000000 		.word	.LANCHOR30
 2632 0244 00000000 		.word	.LANCHOR16
 2633 0248 00000000 		.word	.LANCHOR17
 2634 024c 00000000 		.word	.LANCHOR31
 2635 0250 00000000 		.word	.LANCHOR32
 2636 0254 00000000 		.word	.LANCHOR18
 2637 0258 00000000 		.word	.LANCHOR19
 2638 025c 00000000 		.word	.LANCHOR20
 2639              	.LBE986:
 2640              	.LBE988:
 2641              	.LBE1000:
 2642              	.LBE1005:
 2643              		.cfi_endproc
 2644              	.LFE4300:
 2646              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 2647              		.align	1
 2648              		.p2align 2,,3
 2649              		.global	_Z15Update_width_CVv
 2650              		.syntax unified
 2651              		.thumb
 2652              		.thumb_func
 2653              		.fpu fpv5-d16
 2655              	_Z15Update_width_CVv:
 2656              	.LFB4301:
1301:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2657              		.loc 19 1301 1 is_stmt 1 view -0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
1302:Veno-Echo.cpp **** }
 2661              		.loc 19 1302 5 view .LVU676
1301:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2662              		.loc 19 1301 1 is_stmt 0 view .LVU677
 2663 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 109


 2664              		.cfi_def_cfa_offset 8
 2665              		.cfi_offset 3, -8
 2666              		.cfi_offset 14, -4
1302:Veno-Echo.cpp **** }
 2667              		.loc 19 1302 30 view .LVU678
 2668 0002 0521     		movs	r1, #5
 2669 0004 0348     		ldr	r0, .L157
 2670 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2671              	.LVL135:
1302:Veno-Echo.cpp **** }
 2672              		.loc 19 1302 13 view .LVU679
 2673 000a 034B     		ldr	r3, .L157+4
 2674 000c 83ED000A 		vstr.32	s0, [r3]
1303:Veno-Echo.cpp **** 
 2675              		.loc 19 1303 1 view .LVU680
 2676 0010 08BD     		pop	{r3, pc}
 2677              	.L158:
 2678 0012 00BF     		.align	2
 2679              	.L157:
 2680 0014 18000000 		.word	.LANCHOR4+24
 2681 0018 00000000 		.word	.LANCHOR41
 2682              		.cfi_endproc
 2683              	.LFE4301:
 2685              		.section	.text._Z12Update_widthv,"ax",%progbits
 2686              		.align	1
 2687              		.p2align 2,,3
 2688              		.global	_Z12Update_widthv
 2689              		.syntax unified
 2690              		.thumb
 2691              		.thumb_func
 2692              		.fpu fpv5-d16
 2694              	_Z12Update_widthv:
 2695              	.LFB4302:
1306:Veno-Echo.cpp ****     static bool lastShift{};
 2696              		.loc 19 1306 1 is_stmt 1 view -0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
1307:Veno-Echo.cpp ****     static bool width_pickup{};
 2700              		.loc 19 1307 5 view .LVU682
1308:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 2701              		.loc 19 1308 5 view .LVU683
1309:Veno-Echo.cpp **** 
 2702              		.loc 19 1309 5 view .LVU684
1311:Veno-Echo.cpp **** 
 2703              		.loc 19 1311 5 view .LVU685
1314:Veno-Echo.cpp **** 
 2704              		.loc 19 1314 5 view .LVU686
1314:Veno-Echo.cpp **** 
 2705              		.loc 19 1314 39 is_stmt 0 view .LVU687
 2706 0000 0722     		movs	r2, #7
 2707 0002 5F48     		ldr	r0, .L188
 2708 0004 1146     		mov	r1, r2
1306:Veno-Echo.cpp ****     static bool lastShift{};
 2709              		.loc 19 1306 1 view .LVU688
 2710 0006 10B5     		push	{r4, lr}
 2711              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 110


 2712              		.cfi_offset 4, -8
 2713              		.cfi_offset 14, -4
 2714 0008 2DED028B 		vpush.64	{d8}
 2715              		.cfi_def_cfa_offset 16
 2716              		.cfi_offset 80, -16
 2717              		.cfi_offset 81, -12
1314:Veno-Echo.cpp **** 
 2718              		.loc 19 1314 39 view .LVU689
 2719 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2720              	.LVL136:
 2721              	.LBB1006:
1316:Veno-Echo.cpp ****     {   
 2722              		.loc 19 1316 9 view .LVU690
 2723 0010 5C4B     		ldr	r3, .L188+4
 2724              	.LBE1006:
1314:Veno-Echo.cpp **** 
 2725              		.loc 19 1314 39 view .LVU691
 2726 0012 B0EE408A 		vmov.f32	s16, s0
 2727              	.LVL137:
1316:Veno-Echo.cpp ****     {   
 2728              		.loc 19 1316 5 is_stmt 1 view .LVU692
 2729              	.LBB1046:
 2730              	.LBB1007:
1320:Veno-Echo.cpp ****         {
 2731              		.loc 19 1320 19 is_stmt 0 view .LVU693
 2732 0016 5C4A     		ldr	r2, .L188+8
 2733              	.LBE1007:
1316:Veno-Echo.cpp ****     {   
 2734              		.loc 19 1316 5 view .LVU694
 2735 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2736 001a 002B     		cmp	r3, #0
 2737 001c 3ED1     		bne	.L160
 2738              	.LBB1036:
1318:Veno-Echo.cpp ****         //update pickup
 2739              		.loc 19 1318 9 is_stmt 1 view .LVU695
1320:Veno-Echo.cpp ****         {
 2740              		.loc 19 1320 9 view .LVU696
 2741 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2742 0020 0029     		cmp	r1, #0
 2743 0022 48D0     		beq	.L161
1322:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 2744              		.loc 19 1322 13 view .LVU697
1323:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 2745              		.loc 19 1323 26 is_stmt 0 view .LVU698
 2746 0024 5948     		ldr	r0, .L188+12
1324:Veno-Echo.cpp ****         }
 2747              		.loc 19 1324 23 view .LVU699
 2748 0026 5A49     		ldr	r1, .L188+16
1322:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 2749              		.loc 19 1322 23 view .LVU700
 2750 0028 1370     		strb	r3, [r2]
1323:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 2751              		.loc 19 1323 13 is_stmt 1 view .LVU701
1323:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 2752              		.loc 19 1323 26 is_stmt 0 view .LVU702
 2753 002a 0370     		strb	r3, [r0]
1324:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 111


 2754              		.loc 19 1324 13 is_stmt 1 view .LVU703
1324:Veno-Echo.cpp ****         }
 2755              		.loc 19 1324 23 is_stmt 0 view .LVU704
 2756 002c 81ED000A 		vstr.32	s0, [r1]
 2757              	.L162:
1339:Veno-Echo.cpp **** 
 2758              		.loc 19 1339 9 is_stmt 1 view .LVU705
 2759              	.LVL138:
1341:Veno-Echo.cpp ****         {
 2760              		.loc 19 1341 9 view .LVU706
1349:Veno-Echo.cpp ****         }
 2761              		.loc 19 1349 13 view .LVU707
 2762              	.LBB1008:
 2763              	.LBI1008:
2038:Veno-Echo.cpp **** {
 2764              		.loc 19 2038 7 view .LVU708
 2765              	.LBB1009:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2766              		.loc 19 2040 5 view .LVU709
2041:Veno-Echo.cpp **** 
 2767              		.loc 19 2041 5 view .LVU710
 2768              	.LBE1009:
 2769              	.LBE1008:
1349:Veno-Echo.cpp ****         }
 2770              		.loc 19 1349 32 is_stmt 0 view .LVU711
 2771 0030 584A     		ldr	r2, .L188+20
 2772              	.LBB1013:
 2773              	.LBB1010:
2041:Veno-Echo.cpp **** 
 2774              		.loc 19 2041 39 view .LVU712
 2775 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 2776              		.loc 19 2041 49 view .LVU713
 2777 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 2778              	.LBE1010:
 2779              	.LBE1013:
1349:Veno-Echo.cpp ****         }
 2780              		.loc 19 1349 32 view .LVU714
 2781 003a 574B     		ldr	r3, .L188+24
 2782              	.LBB1014:
 2783              	.LBB1011:
2041:Veno-Echo.cpp **** 
 2784              		.loc 19 2041 39 view .LVU715
 2785 003c D2ED007A 		vldr.32	s15, [r2]
2041:Veno-Echo.cpp **** 
 2786              		.loc 19 2041 12 view .LVU716
 2787 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 2788 0044 93ED000A 		vldr.32	s0, [r3]
 2789              	.LVL139:
2041:Veno-Echo.cpp **** 
 2790              		.loc 19 2041 39 view .LVU717
 2791 0048 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 2792              		.loc 19 2041 49 view .LVU718
 2793 004c 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 2794              		.loc 19 2041 12 view .LVU719
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 112


 2795 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 2796              	.LVL140:
2043:Veno-Echo.cpp ****     {
 2797              		.loc 19 2043 5 is_stmt 1 view .LVU720
 2798 0054 B5EEC00A 		vcmpe.f32	s0, #0
 2799 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2800 005c 00F18A80 		bmi	.L186
2048:Veno-Echo.cpp ****     {
 2801              		.loc 19 2048 5 view .LVU721
2050:Veno-Echo.cpp ****     }
 2802              		.loc 19 2050 16 is_stmt 0 view .LVU722
 2803 0060 B4EE470A 		vcmp.f32	s0, s14
 2804 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2805 0068 37FE000A 		vselgt.f32	s0, s14, s0
 2806              	.LVL141:
 2807              	.L168:
 2808              		.loc 19 2053 5 is_stmt 1 view .LVU723
 2809              		.loc 19 2053 5 is_stmt 0 view .LVU724
 2810              	.LBE1011:
 2811              	.LBE1014:
1349:Veno-Echo.cpp ****         }
 2812              		.loc 19 1349 32 view .LVU725
 2813 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 2814 0070 0020     		movs	r0, #0
 2815 0072 9FED4A1A 		vldr.32	s2, .L188+28
 2816 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2817              	.LVL142:
 2818              	.L167:
1352:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 2819              		.loc 19 1352 13 is_stmt 1 view .LVU726
 2820              	.LBB1015:
 2821              	.LBI1015:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2822              		.loc 21 135 13 view .LVU727
 2823              	.LBB1016:
 2824              		.loc 21 137 5 view .LVU728
 2825              		.loc 21 137 9 is_stmt 0 view .LVU729
 2826 007a 494B     		ldr	r3, .L188+32
 2827 007c 9FED497A 		vldr.32	s14, .L188+36
 2828 0080 D3ED007A 		vldr.32	s15, [r3]
 2829              	.LBE1016:
 2830              	.LBE1015:
 2831              	.LBB1019:
 2832              	.LBB1020:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 113


  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 2833              		.loc 10 60 42 view .LVU730
 2834 0084 484A     		ldr	r2, .L188+40
 2835              	.LBE1020:
 2836              	.LBE1019:
 2837              	.LBB1022:
 2838              	.LBB1017:
 2839              		.loc 21 137 24 view .LVU731
 2840 0086 30EE670A 		vsub.f32	s0, s0, s15
 2841              	.LVL143:
 2842              		.loc 21 137 24 view .LVU732
 2843              	.LBE1017:
 2844              	.LBE1022:
 2845              	.LBE1036:
 2846              	.LBE1046:
1384:Veno-Echo.cpp **** 
 2847              		.loc 19 1384 1 view .LVU733
 2848 008a BDEC028B 		vldm	sp!, {d8}
 2849              		.cfi_remember_state
 2850              		.cfi_restore 80
 2851              		.cfi_restore 81
 2852              		.cfi_def_cfa_offset 8
 2853              	.LVL144:
 2854              	.LBB1047:
 2855              	.LBB1037:
 2856              	.LBB1023:
 2857              	.LBB1018:
 2858              		.loc 21 137 9 view .LVU734
 2859 008e E0EE077A 		vfma.f32	s15, s0, s14
 2860 0092 C3ED007A 		vstr.32	s15, [r3]
 2861              	.LVL145:
 2862              		.loc 21 137 9 view .LVU735
 2863              	.LBE1018:
 2864              	.LBE1023:
1353:Veno-Echo.cpp ****     }
 2865              		.loc 19 1353 13 is_stmt 1 view .LVU736
 2866              	.LBB1024:
 2867              	.LBI1019:
 2868              		.loc 10 60 17 view .LVU737
 2869              	.LBB1021:
 2870              		.loc 10 60 37 view .LVU738
 2871              		.loc 10 60 42 is_stmt 0 view .LVU739
 2872 0096 C2ED007A 		vstr.32	s15, [r2]
 2873              	.LBE1021:
 2874              	.LBE1024:
 2875              	.LBE1037:
 2876              	.LBE1047:
1384:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 114


 2877              		.loc 19 1384 1 view .LVU740
 2878 009a 10BD     		pop	{r4, pc}
 2879              	.LVL146:
 2880              	.L160:
 2881              		.cfi_restore_state
 2882              	.LBB1048:
 2883              	.LBB1038:
1358:Veno-Echo.cpp **** 
 2884              		.loc 19 1358 9 is_stmt 1 view .LVU741
1360:Veno-Echo.cpp ****         {
 2885              		.loc 19 1360 9 view .LVU742
 2886 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2887 009e 002B     		cmp	r3, #0
 2888 00a0 43D1     		bne	.L171
1362:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 2889              		.loc 19 1362 13 view .LVU743
1362:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 2890              		.loc 19 1362 23 is_stmt 0 view .LVU744
 2891 00a2 0124     		movs	r4, #1
1363:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 2892              		.loc 19 1363 29 view .LVU745
 2893 00a4 4148     		ldr	r0, .L188+44
1364:Veno-Echo.cpp ****         }
 2894              		.loc 19 1364 26 view .LVU746
 2895 00a6 4249     		ldr	r1, .L188+48
1362:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 2896              		.loc 19 1362 23 view .LVU747
 2897 00a8 1470     		strb	r4, [r2]
1363:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 2898              		.loc 19 1363 13 is_stmt 1 view .LVU748
1363:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 2899              		.loc 19 1363 29 is_stmt 0 view .LVU749
 2900 00aa 0370     		strb	r3, [r0]
1364:Veno-Echo.cpp ****         }
 2901              		.loc 19 1364 13 is_stmt 1 view .LVU750
1364:Veno-Echo.cpp ****         }
 2902              		.loc 19 1364 26 is_stmt 0 view .LVU751
 2903 00ac 81ED000A 		vstr.32	s0, [r1]
 2904              	.L159:
1364:Veno-Echo.cpp ****         }
 2905              		.loc 19 1364 26 view .LVU752
 2906              	.LBE1038:
 2907              	.LBE1048:
1384:Veno-Echo.cpp **** 
 2908              		.loc 19 1384 1 view .LVU753
 2909 00b0 BDEC028B 		vldm	sp!, {d8}
 2910              		.cfi_remember_state
 2911              		.cfi_restore 80
 2912              		.cfi_restore 81
 2913              		.cfi_def_cfa_offset 8
 2914 00b4 10BD     		pop	{r4, pc}
 2915              	.L161:
 2916              		.cfi_restore_state
 2917              	.LBB1049:
 2918              	.LBB1043:
1329:Veno-Echo.cpp ****             {
 2919              		.loc 19 1329 13 is_stmt 1 view .LVU754
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 115


1329:Veno-Echo.cpp ****             {
 2920              		.loc 19 1329 16 is_stmt 0 view .LVU755
 2921 00b6 354B     		ldr	r3, .L188+12
1329:Veno-Echo.cpp ****             {
 2922              		.loc 19 1329 13 view .LVU756
 2923 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2924 00ba 7AB9     		cbnz	r2, .L163
1331:Veno-Echo.cpp ****                 {
 2925              		.loc 19 1331 17 is_stmt 1 view .LVU757
 2926              	.LVL147:
 2927              	.LBB1025:
 2928              	.LBI1025:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2929              		.loc 20 75 3 view .LVU758
 2930              	.LBB1026:
 2931              		.loc 20 76 5 view .LVU759
 2932              		.loc 20 76 5 is_stmt 0 view .LVU760
 2933              	.LBE1026:
 2934              	.LBE1025:
1331:Veno-Echo.cpp ****                 {
 2935              		.loc 19 1331 23 view .LVU761
 2936 00bc 344A     		ldr	r2, .L188+16
1331:Veno-Echo.cpp ****                 {
 2937              		.loc 19 1331 17 view .LVU762
 2938 00be 9FED3D7A 		vldr.32	s14, .L188+52
1331:Veno-Echo.cpp ****                 {
 2939              		.loc 19 1331 23 view .LVU763
 2940 00c2 D2ED007A 		vldr.32	s15, [r2]
 2941 00c6 70EE677A 		vsub.f32	s15, s0, s15
 2942              	.LBB1028:
 2943              	.LBB1027:
 2944              		.loc 20 76 31 view .LVU764
 2945 00ca F0EEE77A 		vabs.f32	s15, s15
 2946              	.LBE1027:
 2947              	.LBE1028:
1331:Veno-Echo.cpp ****                 {
 2948              		.loc 19 1331 17 view .LVU765
 2949 00ce F4EEC77A 		vcmpe.f32	s15, s14
 2950 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2951 00d6 ABDD     		ble	.L162
1333:Veno-Echo.cpp ****                 }
 2952              		.loc 19 1333 21 is_stmt 1 view .LVU766
1333:Veno-Echo.cpp ****                 }
 2953              		.loc 19 1333 34 is_stmt 0 view .LVU767
 2954 00d8 0122     		movs	r2, #1
 2955 00da 1A70     		strb	r2, [r3]
 2956              	.L163:
1339:Veno-Echo.cpp **** 
 2957              		.loc 19 1339 9 is_stmt 1 view .LVU768
 2958              	.LVL148:
1341:Veno-Echo.cpp ****         {
 2959              		.loc 19 1341 9 view .LVU769
1343:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 2960              		.loc 19 1343 13 view .LVU770
 2961              	.LBB1029:
 2962              	.LBI1029:
2038:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 116


 2963              		.loc 19 2038 7 view .LVU771
 2964              	.LBB1030:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2965              		.loc 19 2040 5 view .LVU772
2041:Veno-Echo.cpp **** 
 2966              		.loc 19 2041 5 view .LVU773
 2967              	.LBE1030:
 2968              	.LBE1029:
1343:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 2969              		.loc 19 1343 32 is_stmt 0 view .LVU774
 2970 00dc 2D4B     		ldr	r3, .L188+20
 2971              	.LBB1033:
 2972              	.LBB1031:
2041:Veno-Echo.cpp **** 
 2973              		.loc 19 2041 39 view .LVU775
 2974 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 2975              		.loc 19 2041 49 view .LVU776
 2976 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2041:Veno-Echo.cpp **** 
 2977              		.loc 19 2041 39 view .LVU777
 2978 00e6 D3ED007A 		vldr.32	s15, [r3]
2041:Veno-Echo.cpp **** 
 2979              		.loc 19 2041 12 view .LVU778
 2980 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 2981 00ee B0EE480A 		vmov.f32	s0, s16
 2982              	.LVL149:
2041:Veno-Echo.cpp **** 
 2983              		.loc 19 2041 39 view .LVU779
 2984 00f2 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 2985              		.loc 19 2041 49 view .LVU780
 2986 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 2987              		.loc 19 2041 12 view .LVU781
 2988 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 2989              	.LVL150:
2043:Veno-Echo.cpp ****     {
 2990              		.loc 19 2043 5 is_stmt 1 view .LVU782
 2991 00fe B5EEC00A 		vcmpe.f32	s0, #0
 2992 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2993 0106 38D4     		bmi	.L187
2048:Veno-Echo.cpp ****     {
 2994              		.loc 19 2048 5 view .LVU783
2050:Veno-Echo.cpp ****     }
 2995              		.loc 19 2050 16 is_stmt 0 view .LVU784
 2996 0108 B4EE470A 		vcmp.f32	s0, s14
 2997 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2998 0110 37FE000A 		vselgt.f32	s0, s14, s0
 2999              	.LVL151:
 3000              	.L165:
 3001              		.loc 19 2053 5 is_stmt 1 view .LVU785
 3002              		.loc 19 2053 5 is_stmt 0 view .LVU786
 3003              	.LBE1031:
 3004              	.LBE1033:
1343:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 3005              		.loc 19 1343 32 view .LVU787
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 117


 3006 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 3007 0118 0020     		movs	r0, #0
 3008 011a 9FED201A 		vldr.32	s2, .L188+28
 3009 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3010              	.LVL152:
1344:Veno-Echo.cpp ****         }
 3011              		.loc 19 1344 24 view .LVU788
 3012 0122 1D4B     		ldr	r3, .L188+24
 3013              	.LVL153:
1344:Veno-Echo.cpp ****         }
 3014              		.loc 19 1344 13 is_stmt 1 view .LVU789
1344:Veno-Echo.cpp ****         }
 3015              		.loc 19 1344 24 is_stmt 0 view .LVU790
 3016 0124 83ED008A 		vstr.32	s16, [r3]
 3017 0128 A7E7     		b	.L167
 3018              	.LVL154:
 3019              	.L171:
1344:Veno-Echo.cpp ****         }
 3020              		.loc 19 1344 24 view .LVU791
 3021              	.LBE1043:
 3022              	.LBB1044:
1369:Veno-Echo.cpp ****             {
 3023              		.loc 19 1369 13 is_stmt 1 view .LVU792
1369:Veno-Echo.cpp ****             {
 3024              		.loc 19 1369 16 is_stmt 0 view .LVU793
 3025 012a 204B     		ldr	r3, .L188+44
1369:Veno-Echo.cpp ****             {
 3026              		.loc 19 1369 13 view .LVU794
 3027 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3028 012e 7AB9     		cbnz	r2, .L173
1371:Veno-Echo.cpp ****                 {
 3029              		.loc 19 1371 17 is_stmt 1 view .LVU795
 3030              	.LVL155:
 3031              	.LBB1039:
 3032              	.LBI1039:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3033              		.loc 20 75 3 view .LVU796
 3034              	.LBB1040:
 3035              		.loc 20 76 5 view .LVU797
 3036              		.loc 20 76 5 is_stmt 0 view .LVU798
 3037              	.LBE1040:
 3038              	.LBE1039:
1371:Veno-Echo.cpp ****                 {
 3039              		.loc 19 1371 23 view .LVU799
 3040 0130 1F4A     		ldr	r2, .L188+48
1371:Veno-Echo.cpp ****                 {
 3041              		.loc 19 1371 17 view .LVU800
 3042 0132 9FED207A 		vldr.32	s14, .L188+52
1371:Veno-Echo.cpp ****                 {
 3043              		.loc 19 1371 23 view .LVU801
 3044 0136 D2ED007A 		vldr.32	s15, [r2]
 3045 013a 70EE677A 		vsub.f32	s15, s0, s15
 3046              	.LBB1042:
 3047              	.LBB1041:
 3048              		.loc 20 76 31 view .LVU802
 3049 013e F0EEE77A 		vabs.f32	s15, s15
 3050              	.LBE1041:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 118


 3051              	.LBE1042:
1371:Veno-Echo.cpp ****                 {
 3052              		.loc 19 1371 17 view .LVU803
 3053 0142 F4EEC77A 		vcmpe.f32	s15, s14
 3054 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3055 014a B1DD     		ble	.L159
1373:Veno-Echo.cpp ****                 }
 3056              		.loc 19 1373 21 is_stmt 1 view .LVU804
1373:Veno-Echo.cpp ****                 }
 3057              		.loc 19 1373 37 is_stmt 0 view .LVU805
 3058 014c 0122     		movs	r2, #1
 3059 014e 1A70     		strb	r2, [r3]
 3060              	.L173:
1378:Veno-Echo.cpp ****         {
 3061              		.loc 19 1378 9 is_stmt 1 view .LVU806
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3062              		.loc 19 1380 13 view .LVU807
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3063              		.loc 19 1380 29 is_stmt 0 view .LVU808
 3064 0150 B0EE480A 		vmov.f32	s0, s16
 3065              	.LVL156:
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3066              		.loc 19 1380 29 view .LVU809
 3067 0154 0020     		movs	r0, #0
 3068 0156 9FED181A 		vldr.32	s2, .L188+56
 3069 015a DFED100A 		vldr.32	s1, .L188+28
 3070 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3071              	.LVL157:
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3072              		.loc 19 1380 22 view .LVU810
 3073 0162 164A     		ldr	r2, .L188+60
1381:Veno-Echo.cpp ****         }
 3074              		.loc 19 1381 34 view .LVU811
 3075 0164 164B     		ldr	r3, .L188+64
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3076              		.loc 19 1380 22 view .LVU812
 3077 0166 82ED000A 		vstr.32	s0, [r2]
1381:Veno-Echo.cpp ****         }
 3078              		.loc 19 1381 13 is_stmt 1 view .LVU813
1381:Veno-Echo.cpp ****         }
 3079              		.loc 19 1381 34 is_stmt 0 view .LVU814
 3080 016a 83ED020A 		vstr.32	s0, [r3, #8]
 3081              	.LBE1044:
 3082              	.LBE1049:
1384:Veno-Echo.cpp **** 
 3083              		.loc 19 1384 1 view .LVU815
 3084 016e BDEC028B 		vldm	sp!, {d8}
 3085              		.cfi_remember_state
 3086              		.cfi_restore 80
 3087              		.cfi_restore 81
 3088              		.cfi_def_cfa_offset 8
 3089              	.LVL158:
1384:Veno-Echo.cpp **** 
 3090              		.loc 19 1384 1 view .LVU816
 3091 0172 10BD     		pop	{r4, pc}
 3092              	.LVL159:
 3093              	.L186:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 119


 3094              		.cfi_restore_state
 3095              	.LBB1050:
 3096              	.LBB1045:
 3097              	.LBB1034:
 3098              	.LBB1012:
2045:Veno-Echo.cpp ****     }
 3099              		.loc 19 2045 16 view .LVU817
 3100 0174 9FED090A 		vldr.32	s0, .L188+28
 3101              	.LVL160:
2045:Veno-Echo.cpp ****     }
 3102              		.loc 19 2045 16 view .LVU818
 3103 0178 78E7     		b	.L168
 3104              	.LVL161:
 3105              	.L187:
2045:Veno-Echo.cpp ****     }
 3106              		.loc 19 2045 16 view .LVU819
 3107              	.LBE1012:
 3108              	.LBE1034:
 3109              	.LBB1035:
 3110              	.LBB1032:
 3111 017a 9FED080A 		vldr.32	s0, .L188+28
 3112              	.LVL162:
2045:Veno-Echo.cpp ****     }
 3113              		.loc 19 2045 16 view .LVU820
 3114 017e C9E7     		b	.L165
 3115              	.L189:
 3116              		.align	2
 3117              	.L188:
 3118 0180 18000000 		.word	.LANCHOR4+24
 3119 0184 00000000 		.word	.LANCHOR8
 3120 0188 00000000 		.word	.LANCHOR42
 3121 018c 00000000 		.word	.LANCHOR43
 3122 0190 00000000 		.word	.LANCHOR44
 3123 0194 00000000 		.word	.LANCHOR41
 3124 0198 00000000 		.word	.LANCHOR45
 3125 019c 00000000 		.word	0
 3126 01a0 00000000 		.word	.LANCHOR46
 3127 01a4 6F12033D 		.word	1023611503
 3128 01a8 00000000 		.word	.LANCHOR47
 3129 01ac 00000000 		.word	.LANCHOR48
 3130 01b0 00000000 		.word	.LANCHOR49
 3131 01b4 0AD7A33B 		.word	1000593162
 3132 01b8 0000FA43 		.word	1140457472
 3133 01bc 00000000 		.word	.LANCHOR50
 3134 01c0 00000000 		.word	.LANCHOR20
 3135              	.LBE1032:
 3136              	.LBE1035:
 3137              	.LBE1045:
 3138              	.LBE1050:
 3139              		.cfi_endproc
 3140              	.LFE4302:
 3142              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 3143              		.align	1
 3144              		.p2align 2,,3
 3145              		.global	_Z20Update_crossfeedbackv
 3146              		.syntax unified
 3147              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 120


 3148              		.thumb_func
 3149              		.fpu fpv5-d16
 3151              	_Z20Update_crossfeedbackv:
 3152              	.LFB4303:
1387:Veno-Echo.cpp ****     static bool lastShift{};
 3153              		.loc 19 1387 1 is_stmt 1 view -0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
1388:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 3157              		.loc 19 1388 5 view .LVU822
1389:Veno-Echo.cpp ****     static bool modRate_pickup{};
 3158              		.loc 19 1389 5 view .LVU823
1390:Veno-Echo.cpp **** 
 3159              		.loc 19 1390 5 view .LVU824
1392:Veno-Echo.cpp **** 
 3160              		.loc 19 1392 5 view .LVU825
1395:Veno-Echo.cpp **** 
 3161              		.loc 19 1395 5 view .LVU826
1395:Veno-Echo.cpp **** 
 3162              		.loc 19 1395 47 is_stmt 0 view .LVU827
 3163 0000 0022     		movs	r2, #0
 3164 0002 0721     		movs	r1, #7
 3165 0004 4148     		ldr	r0, .L205
1387:Veno-Echo.cpp ****     static bool lastShift{};
 3166              		.loc 19 1387 1 view .LVU828
 3167 0006 10B5     		push	{r4, lr}
 3168              		.cfi_def_cfa_offset 8
 3169              		.cfi_offset 4, -8
 3170              		.cfi_offset 14, -4
 3171 0008 2DED028B 		vpush.64	{d8}
 3172              		.cfi_def_cfa_offset 16
 3173              		.cfi_offset 80, -16
 3174              		.cfi_offset 81, -12
1395:Veno-Echo.cpp **** 
 3175              		.loc 19 1395 47 view .LVU829
 3176 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3177              	.LVL163:
 3178              	.LBB1051:
1397:Veno-Echo.cpp ****     {   
 3179              		.loc 19 1397 9 view .LVU830
 3180 0010 3F4B     		ldr	r3, .L205+4
 3181              	.LBE1051:
1395:Veno-Echo.cpp **** 
 3182              		.loc 19 1395 47 view .LVU831
 3183 0012 B0EE408A 		vmov.f32	s16, s0
 3184              	.LVL164:
1397:Veno-Echo.cpp ****     {   
 3185              		.loc 19 1397 5 is_stmt 1 view .LVU832
 3186              	.LBB1080:
 3187              	.LBB1052:
1401:Veno-Echo.cpp ****         {
 3188              		.loc 19 1401 19 is_stmt 0 view .LVU833
 3189 0016 3F4A     		ldr	r2, .L205+8
 3190              	.LBE1052:
1397:Veno-Echo.cpp ****     {   
 3191              		.loc 19 1397 5 view .LVU834
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 121


 3192 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3193 001a FBB9     		cbnz	r3, .L191
 3194              	.LBB1061:
1399:Veno-Echo.cpp ****         //update pickup
 3195              		.loc 19 1399 9 is_stmt 1 view .LVU835
1401:Veno-Echo.cpp ****         {
 3196              		.loc 19 1401 9 view .LVU836
 3197 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3198 001e 49B3     		cbz	r1, .L192
1403:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 3199              		.loc 19 1403 13 view .LVU837
1404:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 3200              		.loc 19 1404 34 is_stmt 0 view .LVU838
 3201 0020 3D48     		ldr	r0, .L205+12
1405:Veno-Echo.cpp ****         }
 3202              		.loc 19 1405 31 view .LVU839
 3203 0022 3E49     		ldr	r1, .L205+16
1403:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 3204              		.loc 19 1403 23 view .LVU840
 3205 0024 1370     		strb	r3, [r2]
1404:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 3206              		.loc 19 1404 13 is_stmt 1 view .LVU841
1404:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 3207              		.loc 19 1404 34 is_stmt 0 view .LVU842
 3208 0026 0370     		strb	r3, [r0]
1405:Veno-Echo.cpp ****         }
 3209              		.loc 19 1405 13 is_stmt 1 view .LVU843
1405:Veno-Echo.cpp ****         }
 3210              		.loc 19 1405 31 is_stmt 0 view .LVU844
 3211 0028 81ED000A 		vstr.32	s0, [r1]
 3212              	.L193:
1418:Veno-Echo.cpp **** 
 3213              		.loc 19 1418 9 is_stmt 1 view .LVU845
 3214              	.LVL165:
1420:Veno-Echo.cpp ****         {
 3215              		.loc 19 1420 9 view .LVU846
1428:Veno-Echo.cpp ****         }
 3216              		.loc 19 1428 13 view .LVU847
1428:Veno-Echo.cpp ****         }
 3217              		.loc 19 1428 40 is_stmt 0 view .LVU848
 3218 002c 3C4B     		ldr	r3, .L205+20
 3219 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 3220 0032 0020     		movs	r0, #0
 3221 0034 DFED3B0A 		vldr.32	s1, .L205+24
 3222 0038 93ED000A 		vldr.32	s0, [r3]
 3223              	.LVL166:
1428:Veno-Echo.cpp ****         }
 3224              		.loc 19 1428 40 view .LVU849
 3225 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 3226              	.LVL167:
 3227              	.L201:
1431:Veno-Echo.cpp ****     }
 3228              		.loc 19 1431 9 is_stmt 1 view .LVU850
 3229              	.LBB1053:
 3230              	.LBI1053:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3231              		.loc 21 135 13 view .LVU851
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 122


 3232              	.LBB1054:
 3233              		.loc 21 137 5 view .LVU852
 3234              		.loc 21 137 9 is_stmt 0 view .LVU853
 3235 0040 394B     		ldr	r3, .L205+28
 3236 0042 9FED3A7A 		vldr.32	s14, .L205+32
 3237 0046 D3ED007A 		vldr.32	s15, [r3]
 3238              		.loc 21 137 24 view .LVU854
 3239 004a 30EE670A 		vsub.f32	s0, s0, s15
 3240              	.LVL168:
 3241              		.loc 21 137 24 view .LVU855
 3242              	.LBE1054:
 3243              	.LBE1053:
 3244              	.LBE1061:
 3245              	.LBE1080:
1462:Veno-Echo.cpp **** 
 3246              		.loc 19 1462 1 view .LVU856
 3247 004e BDEC028B 		vldm	sp!, {d8}
 3248              		.cfi_remember_state
 3249              		.cfi_restore 80
 3250              		.cfi_restore 81
 3251              		.cfi_def_cfa_offset 8
 3252              	.LVL169:
 3253              	.LBB1081:
 3254              	.LBB1062:
 3255              	.LBB1056:
 3256              	.LBB1055:
 3257              		.loc 21 137 9 view .LVU857
 3258 0052 E0EE077A 		vfma.f32	s15, s0, s14
 3259 0056 C3ED007A 		vstr.32	s15, [r3]
 3260              	.LBE1055:
 3261              	.LBE1056:
 3262              	.LBE1062:
 3263              	.LBE1081:
1462:Veno-Echo.cpp **** 
 3264              		.loc 19 1462 1 view .LVU858
 3265 005a 10BD     		pop	{r4, pc}
 3266              	.LVL170:
 3267              	.L191:
 3268              		.cfi_restore_state
 3269              	.LBB1082:
 3270              	.LBB1063:
1435:Veno-Echo.cpp **** 
 3271              		.loc 19 1435 9 is_stmt 1 view .LVU859
1437:Veno-Echo.cpp ****         {
 3272              		.loc 19 1437 9 view .LVU860
 3273 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3274 005e 4BBB     		cbnz	r3, .L197
1439:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 3275              		.loc 19 1439 13 view .LVU861
1439:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 3276              		.loc 19 1439 23 is_stmt 0 view .LVU862
 3277 0060 0124     		movs	r4, #1
1440:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 3278              		.loc 19 1440 28 view .LVU863
 3279 0062 3348     		ldr	r0, .L205+36
1441:Veno-Echo.cpp ****         }
 3280              		.loc 19 1441 25 view .LVU864
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 123


 3281 0064 3349     		ldr	r1, .L205+40
1439:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 3282              		.loc 19 1439 23 view .LVU865
 3283 0066 1470     		strb	r4, [r2]
1440:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 3284              		.loc 19 1440 13 is_stmt 1 view .LVU866
1440:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 3285              		.loc 19 1440 28 is_stmt 0 view .LVU867
 3286 0068 0370     		strb	r3, [r0]
1441:Veno-Echo.cpp ****         }
 3287              		.loc 19 1441 13 is_stmt 1 view .LVU868
1441:Veno-Echo.cpp ****         }
 3288              		.loc 19 1441 25 is_stmt 0 view .LVU869
 3289 006a 81ED000A 		vstr.32	s0, [r1]
 3290              	.L190:
1441:Veno-Echo.cpp ****         }
 3291              		.loc 19 1441 25 view .LVU870
 3292              	.LBE1063:
 3293              	.LBE1082:
1462:Veno-Echo.cpp **** 
 3294              		.loc 19 1462 1 view .LVU871
 3295 006e BDEC028B 		vldm	sp!, {d8}
 3296              		.cfi_remember_state
 3297              		.cfi_restore 80
 3298              		.cfi_restore 81
 3299              		.cfi_def_cfa_offset 8
 3300 0072 10BD     		pop	{r4, pc}
 3301              	.L192:
 3302              		.cfi_restore_state
 3303              	.LBB1083:
 3304              	.LBB1078:
1410:Veno-Echo.cpp ****             {
 3305              		.loc 19 1410 13 is_stmt 1 view .LVU872
1410:Veno-Echo.cpp ****             {
 3306              		.loc 19 1410 16 is_stmt 0 view .LVU873
 3307 0074 284B     		ldr	r3, .L205+12
1410:Veno-Echo.cpp ****             {
 3308              		.loc 19 1410 13 view .LVU874
 3309 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3310 0078 7AB9     		cbnz	r2, .L194
1412:Veno-Echo.cpp ****                 {
 3311              		.loc 19 1412 17 is_stmt 1 view .LVU875
 3312              	.LVL171:
 3313              	.LBB1057:
 3314              	.LBI1057:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3315              		.loc 20 75 3 view .LVU876
 3316              	.LBB1058:
 3317              		.loc 20 76 5 view .LVU877
 3318              		.loc 20 76 5 is_stmt 0 view .LVU878
 3319              	.LBE1058:
 3320              	.LBE1057:
1412:Veno-Echo.cpp ****                 {
 3321              		.loc 19 1412 23 view .LVU879
 3322 007a 284A     		ldr	r2, .L205+16
1412:Veno-Echo.cpp ****                 {
 3323              		.loc 19 1412 17 view .LVU880
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 124


 3324 007c 9FED2E7A 		vldr.32	s14, .L205+44
1412:Veno-Echo.cpp ****                 {
 3325              		.loc 19 1412 23 view .LVU881
 3326 0080 D2ED007A 		vldr.32	s15, [r2]
 3327 0084 70EE677A 		vsub.f32	s15, s0, s15
 3328              	.LBB1060:
 3329              	.LBB1059:
 3330              		.loc 20 76 31 view .LVU882
 3331 0088 F0EEE77A 		vabs.f32	s15, s15
 3332              	.LBE1059:
 3333              	.LBE1060:
1412:Veno-Echo.cpp ****                 {
 3334              		.loc 19 1412 17 view .LVU883
 3335 008c F4EEC77A 		vcmpe.f32	s15, s14
 3336 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3337 0094 CADD     		ble	.L193
1414:Veno-Echo.cpp ****                 }
 3338              		.loc 19 1414 21 is_stmt 1 view .LVU884
1414:Veno-Echo.cpp ****                 }
 3339              		.loc 19 1414 42 is_stmt 0 view .LVU885
 3340 0096 0122     		movs	r2, #1
 3341 0098 1A70     		strb	r2, [r3]
 3342              	.L194:
1418:Veno-Echo.cpp **** 
 3343              		.loc 19 1418 9 is_stmt 1 view .LVU886
 3344              	.LVL172:
1420:Veno-Echo.cpp ****         {
 3345              		.loc 19 1420 9 view .LVU887
1422:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 3346              		.loc 19 1422 13 view .LVU888
1422:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 3347              		.loc 19 1422 40 is_stmt 0 view .LVU889
 3348 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 3349 009e 0020     		movs	r0, #0
 3350 00a0 B0EE480A 		vmov.f32	s0, s16
 3351              	.LVL173:
1422:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 3352              		.loc 19 1422 40 view .LVU890
 3353 00a4 DFED1F0A 		vldr.32	s1, .L205+24
 3354 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3355              	.LVL174:
1423:Veno-Echo.cpp ****         }
 3356              		.loc 19 1423 32 view .LVU891
 3357 00ac 1C4B     		ldr	r3, .L205+20
 3358              	.LVL175:
1423:Veno-Echo.cpp ****         }
 3359              		.loc 19 1423 13 is_stmt 1 view .LVU892
1423:Veno-Echo.cpp ****         }
 3360              		.loc 19 1423 32 is_stmt 0 view .LVU893
 3361 00ae 83ED008A 		vstr.32	s16, [r3]
 3362 00b2 C5E7     		b	.L201
 3363              	.LVL176:
 3364              	.L197:
1423:Veno-Echo.cpp ****         }
 3365              		.loc 19 1423 32 view .LVU894
 3366              	.LBE1078:
 3367              	.LBB1079:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 125


1446:Veno-Echo.cpp ****             {
 3368              		.loc 19 1446 13 is_stmt 1 view .LVU895
1446:Veno-Echo.cpp ****             {
 3369              		.loc 19 1446 16 is_stmt 0 view .LVU896
 3370 00b4 1E4B     		ldr	r3, .L205+36
1446:Veno-Echo.cpp ****             {
 3371              		.loc 19 1446 13 view .LVU897
 3372 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3373 00b8 7AB9     		cbnz	r2, .L199
1448:Veno-Echo.cpp ****                 {
 3374              		.loc 19 1448 17 is_stmt 1 view .LVU898
 3375              	.LVL177:
 3376              	.LBB1064:
 3377              	.LBI1064:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3378              		.loc 20 75 3 view .LVU899
 3379              	.LBB1065:
 3380              		.loc 20 76 5 view .LVU900
 3381              		.loc 20 76 5 is_stmt 0 view .LVU901
 3382              	.LBE1065:
 3383              	.LBE1064:
1448:Veno-Echo.cpp ****                 {
 3384              		.loc 19 1448 23 view .LVU902
 3385 00ba 1E4A     		ldr	r2, .L205+40
1448:Veno-Echo.cpp ****                 {
 3386              		.loc 19 1448 17 view .LVU903
 3387 00bc 9FED1E7A 		vldr.32	s14, .L205+44
1448:Veno-Echo.cpp ****                 {
 3388              		.loc 19 1448 23 view .LVU904
 3389 00c0 D2ED007A 		vldr.32	s15, [r2]
 3390 00c4 70EE677A 		vsub.f32	s15, s0, s15
 3391              	.LBB1067:
 3392              	.LBB1066:
 3393              		.loc 20 76 31 view .LVU905
 3394 00c8 F0EEE77A 		vabs.f32	s15, s15
 3395              	.LBE1066:
 3396              	.LBE1067:
1448:Veno-Echo.cpp ****                 {
 3397              		.loc 19 1448 17 view .LVU906
 3398 00cc F4EEC77A 		vcmpe.f32	s15, s14
 3399 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3400 00d4 CBDD     		ble	.L190
1450:Veno-Echo.cpp ****                 }
 3401              		.loc 19 1450 21 is_stmt 1 view .LVU907
1450:Veno-Echo.cpp ****                 }
 3402              		.loc 19 1450 36 is_stmt 0 view .LVU908
 3403 00d6 0122     		movs	r2, #1
 3404 00d8 1A70     		strb	r2, [r3]
 3405              	.L199:
1455:Veno-Echo.cpp ****         {
 3406              		.loc 19 1455 9 is_stmt 1 view .LVU909
 3407              	.LBB1068:
 3408              	.LBB1069:
1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3409              		.loc 19 1457 13 view .LVU910
 3410              	.LBB1070:
 3411              	.LBB1071:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 126


  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 3412              		.loc 8 60 20 is_stmt 0 view .LVU911
 3413 00da 184C     		ldr	r4, .L205+48
 3414              	.LBE1071:
 3415              	.LBE1070:
1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3416              		.loc 19 1457 32 view .LVU912
 3417 00dc B0EE480A 		vmov.f32	s0, s16
 3418              	.LVL178:
1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3419              		.loc 19 1457 32 view .LVU913
 3420 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 3421 00e4 0020     		movs	r0, #0
 3422 00e6 DFED160A 		vldr.32	s1, .L205+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 127


 3423 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 3424              	.LVL179:
 3425              	.LBB1075:
 3426              	.LBB1072:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3427              		.loc 8 61 34 view .LVU914
 3428 00ee 2046     		mov	r0, r4
 3429              	.LBE1072:
 3430              	.LBE1075:
1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3431              		.loc 19 1457 32 view .LVU915
 3432 00f0 B0EE408A 		vmov.f32	s16, s0
 3433              	.LVL180:
1458:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 3434              		.loc 19 1458 13 is_stmt 1 view .LVU916
 3435              	.LBB1076:
 3436              	.LBI1070:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 3437              		.loc 8 58 17 view .LVU917
 3438              	.LBB1073:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3439              		.loc 8 60 9 view .LVU918
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3440              		.loc 8 60 20 is_stmt 0 view .LVU919
 3441 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 3442              		.loc 8 61 9 is_stmt 1 view .LVU920
 3443              		.loc 8 61 34 is_stmt 0 view .LVU921
 3444 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 3445              	.LVL181:
 3446              		.loc 8 61 34 view .LVU922
 3447              	.LBE1073:
 3448              	.LBE1076:
1459:Veno-Echo.cpp ****         }
 3449              		.loc 19 1459 33 view .LVU923
 3450 00fc 114B     		ldr	r3, .L205+56
 3451              	.LBB1077:
 3452              	.LBB1074:
 3453              		.loc 8 61 20 view .LVU924
 3454 00fe 84ED060A 		vstr.32	s0, [r4, #24]
 3455              	.LVL182:
 3456              		.loc 8 61 20 view .LVU925
 3457              	.LBE1074:
 3458              	.LBE1077:
1459:Veno-Echo.cpp ****         }
 3459              		.loc 19 1459 13 is_stmt 1 view .LVU926
1459:Veno-Echo.cpp ****         }
 3460              		.loc 19 1459 33 is_stmt 0 view .LVU927
 3461 0102 83ED038A 		vstr.32	s16, [r3, #12]
 3462              	.LBE1069:
 3463              	.LBE1068:
 3464              	.LBE1079:
 3465              	.LBE1083:
1462:Veno-Echo.cpp **** 
 3466              		.loc 19 1462 1 view .LVU928
 3467 0106 BDEC028B 		vldm	sp!, {d8}
 3468              		.cfi_restore 80
 3469              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 128


 3470              		.cfi_def_cfa_offset 8
 3471              	.LVL183:
1462:Veno-Echo.cpp **** 
 3472              		.loc 19 1462 1 view .LVU929
 3473 010a 10BD     		pop	{r4, pc}
 3474              	.L206:
 3475              		.align	2
 3476              	.L205:
 3477 010c 18000000 		.word	.LANCHOR4+24
 3478 0110 00000000 		.word	.LANCHOR8
 3479 0114 00000000 		.word	.LANCHOR51
 3480 0118 00000000 		.word	.LANCHOR52
 3481 011c 00000000 		.word	.LANCHOR53
 3482 0120 00000000 		.word	.LANCHOR57
 3483 0124 00000000 		.word	0
 3484 0128 00000000 		.word	.LANCHOR54
 3485 012c 6F12033D 		.word	1023611503
 3486 0130 00000000 		.word	.LANCHOR55
 3487 0134 00000000 		.word	.LANCHOR56
 3488 0138 0AD7A33B 		.word	1000593162
 3489 013c 00000000 		.word	.LANCHOR58
 3490 0140 CDCCCC3D 		.word	1036831949
 3491 0144 00000000 		.word	.LANCHOR20
 3492              		.cfi_endproc
 3493              	.LFE4303:
 3495              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 3496              		.align	1
 3497              		.p2align 2,,3
 3498              		.global	_Z18Update_filterXfadev
 3499              		.syntax unified
 3500              		.thumb
 3501              		.thumb_func
 3502              		.fpu fpv5-d16
 3504              	_Z18Update_filterXfadev:
 3505              	.LFB4304:
1465:Veno-Echo.cpp ****     static bool lastShift{};
 3506              		.loc 19 1465 1 is_stmt 1 view -0
 3507              		.cfi_startproc
 3508              		@ args = 0, pretend = 0, frame = 0
 3509              		@ frame_needed = 0, uses_anonymous_args = 0
1466:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 3510              		.loc 19 1466 5 view .LVU931
1467:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 3511              		.loc 19 1467 5 view .LVU932
1468:Veno-Echo.cpp **** 
 3512              		.loc 19 1468 5 view .LVU933
1470:Veno-Echo.cpp **** 
 3513              		.loc 19 1470 5 view .LVU934
1473:Veno-Echo.cpp **** 
 3514              		.loc 19 1473 5 view .LVU935
1473:Veno-Echo.cpp **** 
 3515              		.loc 19 1473 45 is_stmt 0 view .LVU936
 3516 0000 0322     		movs	r2, #3
 3517 0002 0721     		movs	r1, #7
 3518 0004 4248     		ldr	r0, .L229
1465:Veno-Echo.cpp ****     static bool lastShift{};
 3519              		.loc 19 1465 1 view .LVU937
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 129


 3520 0006 10B5     		push	{r4, lr}
 3521              		.cfi_def_cfa_offset 8
 3522              		.cfi_offset 4, -8
 3523              		.cfi_offset 14, -4
 3524 0008 2DED028B 		vpush.64	{d8}
 3525              		.cfi_def_cfa_offset 16
 3526              		.cfi_offset 80, -16
 3527              		.cfi_offset 81, -12
1473:Veno-Echo.cpp **** 
 3528              		.loc 19 1473 45 view .LVU938
 3529 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3530              	.LVL184:
 3531              	.LBB1084:
1475:Veno-Echo.cpp ****     {   
 3532              		.loc 19 1475 9 view .LVU939
 3533 0010 404B     		ldr	r3, .L229+4
 3534              	.LBE1084:
1473:Veno-Echo.cpp **** 
 3535              		.loc 19 1473 45 view .LVU940
 3536 0012 B0EE408A 		vmov.f32	s16, s0
 3537              	.LVL185:
1475:Veno-Echo.cpp ****     {   
 3538              		.loc 19 1475 5 is_stmt 1 view .LVU941
 3539              	.LBB1104:
 3540              	.LBB1085:
1479:Veno-Echo.cpp ****         {
 3541              		.loc 19 1479 19 is_stmt 0 view .LVU942
 3542 0016 404A     		ldr	r2, .L229+8
 3543              	.LBE1085:
1475:Veno-Echo.cpp ****     {   
 3544              		.loc 19 1475 5 view .LVU943
 3545 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3546 001a FBB9     		cbnz	r3, .L208
 3547              	.LBB1094:
1477:Veno-Echo.cpp ****         //update pickup
 3548              		.loc 19 1477 9 is_stmt 1 view .LVU944
1479:Veno-Echo.cpp ****         {
 3549              		.loc 19 1479 9 view .LVU945
 3550 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3551 001e 49B3     		cbz	r1, .L209
1481:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 3552              		.loc 19 1481 13 view .LVU946
1482:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 3553              		.loc 19 1482 32 is_stmt 0 view .LVU947
 3554 0020 3E48     		ldr	r0, .L229+12
1483:Veno-Echo.cpp ****         }
 3555              		.loc 19 1483 29 view .LVU948
 3556 0022 3F49     		ldr	r1, .L229+16
1481:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 3557              		.loc 19 1481 23 view .LVU949
 3558 0024 1370     		strb	r3, [r2]
1482:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 3559              		.loc 19 1482 13 is_stmt 1 view .LVU950
1482:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 3560              		.loc 19 1482 32 is_stmt 0 view .LVU951
 3561 0026 0370     		strb	r3, [r0]
1483:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 130


 3562              		.loc 19 1483 13 is_stmt 1 view .LVU952
1483:Veno-Echo.cpp ****         }
 3563              		.loc 19 1483 29 is_stmt 0 view .LVU953
 3564 0028 81ED000A 		vstr.32	s0, [r1]
 3565              	.L210:
1497:Veno-Echo.cpp **** 
 3566              		.loc 19 1497 9 is_stmt 1 view .LVU954
 3567              	.LVL186:
1499:Veno-Echo.cpp ****         {
 3568              		.loc 19 1499 9 view .LVU955
1507:Veno-Echo.cpp ****         }
 3569              		.loc 19 1507 13 view .LVU956
1507:Veno-Echo.cpp ****         }
 3570              		.loc 19 1507 38 is_stmt 0 view .LVU957
 3571 002c 3D4B     		ldr	r3, .L229+20
 3572 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 3573 0032 0120     		movs	r0, #1
 3574 0034 DFED3C0A 		vldr.32	s1, .L229+24
 3575 0038 93ED000A 		vldr.32	s0, [r3]
 3576              	.LVL187:
1507:Veno-Echo.cpp ****         }
 3577              		.loc 19 1507 38 view .LVU958
 3578 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 3579              	.LVL188:
 3580              	.L220:
1510:Veno-Echo.cpp ****     }
 3581              		.loc 19 1510 9 is_stmt 1 view .LVU959
 3582              	.LBB1086:
 3583              	.LBI1086:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3584              		.loc 21 135 13 view .LVU960
 3585              	.LBB1087:
 3586              		.loc 21 137 5 view .LVU961
 3587              		.loc 21 137 9 is_stmt 0 view .LVU962
 3588 0040 3A4B     		ldr	r3, .L229+28
 3589 0042 9FED3B7A 		vldr.32	s14, .L229+32
 3590 0046 D3ED007A 		vldr.32	s15, [r3]
 3591              		.loc 21 137 24 view .LVU963
 3592 004a 30EE670A 		vsub.f32	s0, s0, s15
 3593              	.LVL189:
 3594              		.loc 21 137 24 view .LVU964
 3595              	.LBE1087:
 3596              	.LBE1086:
 3597              	.LBE1094:
 3598              	.LBE1104:
1552:Veno-Echo.cpp **** 
 3599              		.loc 19 1552 1 view .LVU965
 3600 004e BDEC028B 		vldm	sp!, {d8}
 3601              		.cfi_remember_state
 3602              		.cfi_restore 80
 3603              		.cfi_restore 81
 3604              		.cfi_def_cfa_offset 8
 3605              	.LVL190:
 3606              	.LBB1105:
 3607              	.LBB1095:
 3608              	.LBB1089:
 3609              	.LBB1088:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 131


 3610              		.loc 21 137 9 view .LVU966
 3611 0052 E0EE077A 		vfma.f32	s15, s0, s14
 3612 0056 C3ED007A 		vstr.32	s15, [r3]
 3613              	.LBE1088:
 3614              	.LBE1089:
 3615              	.LBE1095:
 3616              	.LBE1105:
1552:Veno-Echo.cpp **** 
 3617              		.loc 19 1552 1 view .LVU967
 3618 005a 10BD     		pop	{r4, pc}
 3619              	.LVL191:
 3620              	.L208:
 3621              		.cfi_restore_state
 3622              	.LBB1106:
 3623              	.LBB1096:
1515:Veno-Echo.cpp **** 
 3624              		.loc 19 1515 9 is_stmt 1 view .LVU968
1517:Veno-Echo.cpp ****         {
 3625              		.loc 19 1517 9 view .LVU969
 3626 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3627 005e 4BBB     		cbnz	r3, .L214
1519:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 3628              		.loc 19 1519 13 view .LVU970
1519:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 3629              		.loc 19 1519 23 is_stmt 0 view .LVU971
 3630 0060 0124     		movs	r4, #1
1520:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 3631              		.loc 19 1520 32 view .LVU972
 3632 0062 3448     		ldr	r0, .L229+36
1521:Veno-Echo.cpp ****         }
 3633              		.loc 19 1521 29 view .LVU973
 3634 0064 3449     		ldr	r1, .L229+40
1519:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 3635              		.loc 19 1519 23 view .LVU974
 3636 0066 1470     		strb	r4, [r2]
1520:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 3637              		.loc 19 1520 13 is_stmt 1 view .LVU975
1520:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 3638              		.loc 19 1520 32 is_stmt 0 view .LVU976
 3639 0068 0370     		strb	r3, [r0]
1521:Veno-Echo.cpp ****         }
 3640              		.loc 19 1521 13 is_stmt 1 view .LVU977
1521:Veno-Echo.cpp ****         }
 3641              		.loc 19 1521 29 is_stmt 0 view .LVU978
 3642 006a 81ED000A 		vstr.32	s0, [r1]
 3643              	.L207:
1521:Veno-Echo.cpp ****         }
 3644              		.loc 19 1521 29 view .LVU979
 3645              	.LBE1096:
 3646              	.LBE1106:
1552:Veno-Echo.cpp **** 
 3647              		.loc 19 1552 1 view .LVU980
 3648 006e BDEC028B 		vldm	sp!, {d8}
 3649              		.cfi_remember_state
 3650              		.cfi_restore 80
 3651              		.cfi_restore 81
 3652              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 132


 3653 0072 10BD     		pop	{r4, pc}
 3654              	.L209:
 3655              		.cfi_restore_state
 3656              	.LBB1107:
 3657              	.LBB1101:
1488:Veno-Echo.cpp ****             {
 3658              		.loc 19 1488 13 is_stmt 1 view .LVU981
1488:Veno-Echo.cpp ****             {
 3659              		.loc 19 1488 16 is_stmt 0 view .LVU982
 3660 0074 294B     		ldr	r3, .L229+12
1488:Veno-Echo.cpp ****             {
 3661              		.loc 19 1488 13 view .LVU983
 3662 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3663 0078 7AB9     		cbnz	r2, .L211
1490:Veno-Echo.cpp ****                 {
 3664              		.loc 19 1490 17 is_stmt 1 view .LVU984
 3665              	.LVL192:
 3666              	.LBB1090:
 3667              	.LBI1090:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3668              		.loc 20 75 3 view .LVU985
 3669              	.LBB1091:
 3670              		.loc 20 76 5 view .LVU986
 3671              		.loc 20 76 5 is_stmt 0 view .LVU987
 3672              	.LBE1091:
 3673              	.LBE1090:
1490:Veno-Echo.cpp ****                 {
 3674              		.loc 19 1490 23 view .LVU988
 3675 007a 294A     		ldr	r2, .L229+16
1490:Veno-Echo.cpp ****                 {
 3676              		.loc 19 1490 17 view .LVU989
 3677 007c 9FED2F7A 		vldr.32	s14, .L229+44
1490:Veno-Echo.cpp ****                 {
 3678              		.loc 19 1490 23 view .LVU990
 3679 0080 D2ED007A 		vldr.32	s15, [r2]
 3680 0084 70EE677A 		vsub.f32	s15, s0, s15
 3681              	.LBB1093:
 3682              	.LBB1092:
 3683              		.loc 20 76 31 view .LVU991
 3684 0088 F0EEE77A 		vabs.f32	s15, s15
 3685              	.LBE1092:
 3686              	.LBE1093:
1490:Veno-Echo.cpp ****                 {
 3687              		.loc 19 1490 17 view .LVU992
 3688 008c F4EEC77A 		vcmpe.f32	s15, s14
 3689 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3690 0094 CADD     		ble	.L210
1492:Veno-Echo.cpp ****                 }
 3691              		.loc 19 1492 21 is_stmt 1 view .LVU993
1492:Veno-Echo.cpp ****                 }
 3692              		.loc 19 1492 40 is_stmt 0 view .LVU994
 3693 0096 0122     		movs	r2, #1
 3694 0098 1A70     		strb	r2, [r3]
 3695              	.L211:
1497:Veno-Echo.cpp **** 
 3696              		.loc 19 1497 9 is_stmt 1 view .LVU995
 3697              	.LVL193:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 133


1499:Veno-Echo.cpp ****         {
 3698              		.loc 19 1499 9 view .LVU996
1501:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 3699              		.loc 19 1501 13 view .LVU997
1501:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 3700              		.loc 19 1501 38 is_stmt 0 view .LVU998
 3701 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 3702 009e 0120     		movs	r0, #1
 3703 00a0 B0EE480A 		vmov.f32	s0, s16
 3704              	.LVL194:
1501:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 3705              		.loc 19 1501 38 view .LVU999
 3706 00a4 DFED200A 		vldr.32	s1, .L229+24
 3707 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3708              	.LVL195:
1502:Veno-Echo.cpp ****         }
 3709              		.loc 19 1502 30 view .LVU1000
 3710 00ac 1D4B     		ldr	r3, .L229+20
 3711              	.LVL196:
1502:Veno-Echo.cpp ****         }
 3712              		.loc 19 1502 13 is_stmt 1 view .LVU1001
1502:Veno-Echo.cpp ****         }
 3713              		.loc 19 1502 30 is_stmt 0 view .LVU1002
 3714 00ae 83ED008A 		vstr.32	s16, [r3]
 3715 00b2 C5E7     		b	.L220
 3716              	.LVL197:
 3717              	.L214:
1502:Veno-Echo.cpp ****         }
 3718              		.loc 19 1502 30 view .LVU1003
 3719              	.LBE1101:
 3720              	.LBB1102:
1526:Veno-Echo.cpp ****             {
 3721              		.loc 19 1526 13 is_stmt 1 view .LVU1004
1526:Veno-Echo.cpp ****             {
 3722              		.loc 19 1526 16 is_stmt 0 view .LVU1005
 3723 00b4 1F4B     		ldr	r3, .L229+36
1526:Veno-Echo.cpp ****             {
 3724              		.loc 19 1526 13 view .LVU1006
 3725 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3726 00b8 7AB9     		cbnz	r2, .L216
1528:Veno-Echo.cpp ****                 {
 3727              		.loc 19 1528 17 is_stmt 1 view .LVU1007
 3728              	.LVL198:
 3729              	.LBB1097:
 3730              	.LBI1097:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3731              		.loc 20 75 3 view .LVU1008
 3732              	.LBB1098:
 3733              		.loc 20 76 5 view .LVU1009
 3734              		.loc 20 76 5 is_stmt 0 view .LVU1010
 3735              	.LBE1098:
 3736              	.LBE1097:
1528:Veno-Echo.cpp ****                 {
 3737              		.loc 19 1528 23 view .LVU1011
 3738 00ba 1F4A     		ldr	r2, .L229+40
1528:Veno-Echo.cpp ****                 {
 3739              		.loc 19 1528 17 view .LVU1012
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 134


 3740 00bc 9FED1F7A 		vldr.32	s14, .L229+44
1528:Veno-Echo.cpp ****                 {
 3741              		.loc 19 1528 23 view .LVU1013
 3742 00c0 D2ED007A 		vldr.32	s15, [r2]
 3743 00c4 70EE677A 		vsub.f32	s15, s0, s15
 3744              	.LBB1100:
 3745              	.LBB1099:
 3746              		.loc 20 76 31 view .LVU1014
 3747 00c8 F0EEE77A 		vabs.f32	s15, s15
 3748              	.LBE1099:
 3749              	.LBE1100:
1528:Veno-Echo.cpp ****                 {
 3750              		.loc 19 1528 17 view .LVU1015
 3751 00cc F4EEC77A 		vcmpe.f32	s15, s14
 3752 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3753 00d4 CBDD     		ble	.L207
1530:Veno-Echo.cpp ****                 }
 3754              		.loc 19 1530 21 is_stmt 1 view .LVU1016
1530:Veno-Echo.cpp ****                 }
 3755              		.loc 19 1530 40 is_stmt 0 view .LVU1017
 3756 00d6 0122     		movs	r2, #1
 3757 00d8 1A70     		strb	r2, [r3]
 3758              	.L216:
1535:Veno-Echo.cpp ****         {
 3759              		.loc 19 1535 9 is_stmt 1 view .LVU1018
1537:Veno-Echo.cpp ****             {
 3760              		.loc 19 1537 13 view .LVU1019
 3761 00da DFED197A 		vldr.32	s15, .L229+48
 3762 00de B4EEE78A 		vcmpe.f32	s16, s15
 3763 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3764 00e6 08D5     		bpl	.L228
1539:Veno-Echo.cpp ****             }
 3765              		.loc 19 1539 17 view .LVU1020
1539:Veno-Echo.cpp ****             }
 3766              		.loc 19 1539 29 is_stmt 0 view .LVU1021
 3767 00e8 164B     		ldr	r3, .L229+52
 3768 00ea 0022     		movs	r2, #0
 3769 00ec 1A70     		strb	r2, [r3]
 3770              	.L218:
1549:Veno-Echo.cpp ****         }  
 3771              		.loc 19 1549 13 is_stmt 1 view .LVU1022
1549:Veno-Echo.cpp ****         }  
 3772              		.loc 19 1549 39 is_stmt 0 view .LVU1023
 3773 00ee 164B     		ldr	r3, .L229+56
 3774 00f0 83ED078A 		vstr.32	s16, [r3, #28]
 3775              	.LBE1102:
 3776              	.LBE1107:
1552:Veno-Echo.cpp **** 
 3777              		.loc 19 1552 1 view .LVU1024
 3778 00f4 BDEC028B 		vldm	sp!, {d8}
 3779              		.cfi_remember_state
 3780              		.cfi_restore 80
 3781              		.cfi_restore 81
 3782              		.cfi_def_cfa_offset 8
 3783 00f8 10BD     		pop	{r4, pc}
 3784              	.L228:
 3785              		.cfi_restore_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 135


 3786              	.LBB1108:
 3787              	.LBB1103:
1541:Veno-Echo.cpp ****             {
 3788              		.loc 19 1541 18 is_stmt 1 view .LVU1025
 3789 00fa DFED147A 		vldr.32	s15, .L229+60
 3790 00fe B4EEE78A 		vcmpe.f32	s16, s15
 3791 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3792 0106 F2DD     		ble	.L218
1543:Veno-Echo.cpp ****             }
 3793              		.loc 19 1543 17 view .LVU1026
1543:Veno-Echo.cpp ****             }
 3794              		.loc 19 1543 29 is_stmt 0 view .LVU1027
 3795 0108 0E4B     		ldr	r3, .L229+52
 3796 010a 0122     		movs	r2, #1
 3797 010c 1A70     		strb	r2, [r3]
 3798 010e EEE7     		b	.L218
 3799              	.L230:
 3800              		.align	2
 3801              	.L229:
 3802 0110 18000000 		.word	.LANCHOR4+24
 3803 0114 00000000 		.word	.LANCHOR8
 3804 0118 00000000 		.word	.LANCHOR59
 3805 011c 00000000 		.word	.LANCHOR60
 3806 0120 00000000 		.word	.LANCHOR61
 3807 0124 00000000 		.word	.LANCHOR66
 3808 0128 00000000 		.word	0
 3809 012c 00000000 		.word	.LANCHOR62
 3810 0130 6F12033D 		.word	1023611503
 3811 0134 00000000 		.word	.LANCHOR63
 3812 0138 00000000 		.word	.LANCHOR64
 3813 013c 0AD7A33B 		.word	1000593162
 3814 0140 6666E63E 		.word	1055286886
 3815 0144 00000000 		.word	.LANCHOR65
 3816 0148 00000000 		.word	.LANCHOR20
 3817 014c CDCC0C3F 		.word	1057803469
 3818              	.LBE1103:
 3819              	.LBE1108:
 3820              		.cfi_endproc
 3821              	.LFE4304:
 3823              		.section	.text._Z8GetModCVv,"ax",%progbits
 3824              		.align	1
 3825              		.p2align 2,,3
 3826              		.global	_Z8GetModCVv
 3827              		.syntax unified
 3828              		.thumb
 3829              		.thumb_func
 3830              		.fpu fpv5-d16
 3832              	_Z8GetModCVv:
 3833              	.LFB4305:
1555:Veno-Echo.cpp ****     //get modulation CV input
 3834              		.loc 19 1555 1 is_stmt 1 view -0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 0
 3837              		@ frame_needed = 0, uses_anonymous_args = 0
1557:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3838              		.loc 19 1557 5 view .LVU1029
1555:Veno-Echo.cpp ****     //get modulation CV input
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 136


 3839              		.loc 19 1555 1 is_stmt 0 view .LVU1030
 3840 0000 08B5     		push	{r3, lr}
 3841              		.cfi_def_cfa_offset 8
 3842              		.cfi_offset 3, -8
 3843              		.cfi_offset 14, -4
1557:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3844              		.loc 19 1557 30 view .LVU1031
 3845 0002 0621     		movs	r1, #6
 3846 0004 0648     		ldr	r0, .L233
 3847 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3848              	.LVL199:
 3849 000a 0020     		movs	r0, #0
 3850 000c 9FED051A 		vldr.32	s2, .L233+4
 3851 0010 DFED050A 		vldr.32	s1, .L233+8
 3852 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3853              	.LVL200:
1557:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3854              		.loc 19 1557 23 view .LVU1032
 3855 0018 044B     		ldr	r3, .L233+12
 3856 001a 83ED000A 		vstr.32	s0, [r3]
1559:Veno-Echo.cpp **** 
 3857              		.loc 19 1559 1 view .LVU1033
 3858 001e 08BD     		pop	{r3, pc}
 3859              	.L234:
 3860              		.align	2
 3861              	.L233:
 3862 0020 18000000 		.word	.LANCHOR4+24
 3863 0024 00004843 		.word	1128792064
 3864 0028 000048C3 		.word	3276275712
 3865 002c 00000000 		.word	.LANCHOR67
 3866              		.cfi_endproc
 3867              	.LFE4305:
 3869              		.section	.text._Z10Update_Modv,"ax",%progbits
 3870              		.align	1
 3871              		.p2align 2,,3
 3872              		.global	_Z10Update_Modv
 3873              		.syntax unified
 3874              		.thumb
 3875              		.thumb_func
 3876              		.fpu fpv5-d16
 3878              	_Z10Update_Modv:
 3879              	.LFB4306:
1562:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3880              		.loc 19 1562 1 is_stmt 1 view -0
 3881              		.cfi_startproc
 3882              		@ args = 0, pretend = 0, frame = 8
 3883              		@ frame_needed = 0, uses_anonymous_args = 0
1563:Veno-Echo.cpp ****     static float modulation_CV{};
 3884              		.loc 19 1563 5 view .LVU1035
1564:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 3885              		.loc 19 1564 5 view .LVU1036
1565:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3886              		.loc 19 1565 5 view .LVU1037
 3887              	.LVL201:
 3888              	.LBB1109:
 3889              	.LBI1109:
 135:../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 137


 3890              		.loc 21 135 13 view .LVU1038
 3891              	.LBB1110:
 3892              		.loc 21 137 5 view .LVU1039
 3893              	.LBE1110:
 3894              	.LBE1109:
1562:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3895              		.loc 19 1562 1 is_stmt 0 view .LVU1040
 3896 0000 30B5     		push	{r4, r5, lr}
 3897              		.cfi_def_cfa_offset 12
 3898              		.cfi_offset 4, -12
 3899              		.cfi_offset 5, -8
 3900              		.cfi_offset 14, -4
1565:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3901              		.loc 19 1565 13 view .LVU1041
 3902 0002 1E4A     		ldr	r2, .L237
 3903              	.LBB1116:
 3904              	.LBB1111:
 3905              		.loc 21 137 9 view .LVU1042
 3906 0004 1E4C     		ldr	r4, .L237+4
 3907              	.LBE1111:
 3908              	.LBE1116:
1566:Veno-Echo.cpp ****     //calculate InternalMod
 3909              		.loc 19 1566 13 view .LVU1043
 3910 0006 1F4B     		ldr	r3, .L237+8
 3911              	.LBB1117:
 3912              	.LBB1118:
 3913              		.loc 21 137 9 view .LVU1044
 3914 0008 1F4D     		ldr	r5, .L237+12
 3915              	.LBE1118:
 3916              	.LBE1117:
 3917              	.LBB1123:
 3918              	.LBB1112:
 3919 000a 94ED007A 		vldr.32	s14, [r4]
 3920              		.loc 21 137 24 view .LVU1045
 3921 000e 92ED006A 		vldr.32	s12, [r2]
 3922              	.LBE1112:
 3923              	.LBE1123:
 3924              	.LBB1124:
 3925              	.LBB1119:
 3926              		.loc 21 137 9 view .LVU1046
 3927 0012 D5ED007A 		vldr.32	s15, [r5]
 3928              		.loc 21 137 24 view .LVU1047
 3929 0016 D3ED006A 		vldr.32	s13, [r3]
 3930              	.LBE1119:
 3931              	.LBE1124:
 3932              	.LBB1125:
 3933              	.LBB1113:
 3934 001a 36EE476A 		vsub.f32	s12, s12, s14
 3935              		.loc 21 137 9 view .LVU1048
 3936 001e DFED1B5A 		vldr.32	s11, .L237+16
 3937              	.LBE1113:
 3938              	.LBE1125:
 3939              	.LBB1126:
 3940              	.LBB1120:
 3941              		.loc 21 137 24 view .LVU1049
 3942 0022 76EEE76A 		vsub.f32	s13, s13, s15
 3943              	.LBE1120:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 138


 3944              	.LBE1126:
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3945              		.loc 19 1568 34 view .LVU1050
 3946 0026 1A48     		ldr	r0, .L237+20
 3947              	.LBB1127:
 3948              	.LBB1114:
 3949              		.loc 21 137 9 view .LVU1051
 3950 0028 A6EE257A 		vfma.f32	s14, s12, s11
 3951              	.LBE1114:
 3952              	.LBE1127:
 3953              	.LBB1128:
 3954              	.LBB1121:
 3955 002c E6EEA57A 		vfma.f32	s15, s13, s11
 3956              	.LBE1121:
 3957              	.LBE1128:
1562:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3958              		.loc 19 1562 1 view .LVU1052
 3959 0030 2DED028B 		vpush.64	{d8}
 3960              		.cfi_def_cfa_offset 20
 3961              		.cfi_offset 80, -20
 3962              		.cfi_offset 81, -16
 3963 0034 83B0     		sub	sp, sp, #12
 3964              		.cfi_def_cfa_offset 32
 3965              	.LBB1129:
 3966              	.LBB1115:
 3967              		.loc 21 137 9 view .LVU1053
 3968 0036 84ED007A 		vstr.32	s14, [r4]
 3969              	.LVL202:
 3970              		.loc 21 137 9 view .LVU1054
 3971              	.LBE1115:
 3972              	.LBE1129:
1566:Veno-Echo.cpp ****     //calculate InternalMod
 3973              		.loc 19 1566 5 is_stmt 1 view .LVU1055
 3974              	.LBB1130:
 3975              	.LBI1117:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3976              		.loc 21 135 13 view .LVU1056
 3977              	.LBB1122:
 3978              		.loc 21 137 5 view .LVU1057
 3979              		.loc 21 137 9 is_stmt 0 view .LVU1058
 3980 003a C5ED007A 		vstr.32	s15, [r5]
 3981              	.LVL203:
 3982              		.loc 21 137 9 view .LVU1059
 3983              	.LBE1122:
 3984              	.LBE1130:
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3985              		.loc 19 1568 5 is_stmt 1 view .LVU1060
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3986              		.loc 19 1568 34 is_stmt 0 view .LVU1061
 3987 003e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 3988              	.LVL204:
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3989              		.loc 19 1568 37 view .LVU1062
 3990 0042 D5ED008A 		vldr.32	s17, [r5]
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3991              		.loc 19 1568 34 view .LVU1063
 3992 0046 B0EE408A 		vmov.f32	s16, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 139


 3993              	.LVL205:
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3994              		.loc 19 1570 5 is_stmt 1 view .LVU1064
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3995              		.loc 19 1570 40 is_stmt 0 view .LVU1065
 3996 004a D4ED007A 		vldr.32	s15, [r4]
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3997              		.loc 19 1570 25 view .LVU1066
 3998 004e 01A9     		add	r1, sp, #4
 3999 0050 1048     		ldr	r0, .L237+24
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4000              		.loc 19 1570 40 view .LVU1067
 4001 0052 E0EE287A 		vfma.f32	s15, s0, s17
 4002 0056 CDED017A 		vstr.32	s15, [sp, #4]
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4003              		.loc 19 1570 25 view .LVU1068
 4004 005a FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 4005              	.LVL206:
1571:Veno-Echo.cpp **** }
 4006              		.loc 19 1571 5 is_stmt 1 view .LVU1069
1571:Veno-Echo.cpp **** }
 4007              		.loc 19 1571 40 is_stmt 0 view .LVU1070
 4008 005e D4ED007A 		vldr.32	s15, [r4]
1571:Veno-Echo.cpp **** }
 4009              		.loc 19 1571 25 view .LVU1071
 4010 0062 01A9     		add	r1, sp, #4
 4011 0064 0C48     		ldr	r0, .L237+28
1571:Veno-Echo.cpp **** }
 4012              		.loc 19 1571 40 view .LVU1072
 4013 0066 E8EE287A 		vfma.f32	s15, s16, s17
 4014 006a CDED017A 		vstr.32	s15, [sp, #4]
1571:Veno-Echo.cpp **** }
 4015              		.loc 19 1571 25 view .LVU1073
 4016 006e FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 4017              	.LVL207:
1572:Veno-Echo.cpp **** 
 4018              		.loc 19 1572 1 view .LVU1074
 4019 0072 03B0     		add	sp, sp, #12
 4020              		.cfi_def_cfa_offset 20
 4021              		@ sp needed
 4022 0074 BDEC028B 		vldm	sp!, {d8}
 4023              		.cfi_restore 80
 4024              		.cfi_restore 81
 4025              		.cfi_def_cfa_offset 12
 4026              	.LVL208:
1572:Veno-Echo.cpp **** 
 4027              		.loc 19 1572 1 view .LVU1075
 4028 0078 30BD     		pop	{r4, r5, pc}
 4029              	.L238:
 4030 007a 00BF     		.align	2
 4031              	.L237:
 4032 007c 00000000 		.word	.LANCHOR67
 4033 0080 00000000 		.word	.LANCHOR68
 4034 0084 00000000 		.word	.LANCHOR50
 4035 0088 00000000 		.word	.LANCHOR69
 4036 008c 0AD7233C 		.word	1008981770
 4037 0090 00000000 		.word	.LANCHOR58
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 140


 4038 0094 00000000 		.word	.LANCHOR0
 4039 0098 00000000 		.word	.LANCHOR1
 4040              		.cfi_endproc
 4041              	.LFE4306:
 4043              		.section	.text._Z11UpdateClockv,"ax",%progbits
 4044              		.align	1
 4045              		.p2align 2,,3
 4046              		.global	_Z11UpdateClockv
 4047              		.syntax unified
 4048              		.thumb
 4049              		.thumb_func
 4050              		.fpu fpv5-d16
 4052              	_Z11UpdateClockv:
 4053              	.LFB4307:
1575:Veno-Echo.cpp ****     static int divCounter{};
 4054              		.loc 19 1575 1 is_stmt 1 view -0
 4055              		.cfi_startproc
 4056              		@ args = 0, pretend = 0, frame = 0
 4057              		@ frame_needed = 0, uses_anonymous_args = 0
1576:Veno-Echo.cpp ****     ClockIn.Debounce();
 4058              		.loc 19 1576 5 view .LVU1077
1577:Veno-Echo.cpp **** 
 4059              		.loc 19 1577 5 view .LVU1078
1575:Veno-Echo.cpp ****     static int divCounter{};
 4060              		.loc 19 1575 1 is_stmt 0 view .LVU1079
 4061 0000 10B5     		push	{r4, lr}
 4062              		.cfi_def_cfa_offset 8
 4063              		.cfi_offset 4, -8
 4064              		.cfi_offset 14, -4
1577:Veno-Echo.cpp **** 
 4065              		.loc 19 1577 21 view .LVU1080
 4066 0002 184C     		ldr	r4, .L253
 4067 0004 2046     		mov	r0, r4
 4068 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 4069              	.LVL209:
1580:Veno-Echo.cpp ****     {   
 4070              		.loc 19 1580 5 is_stmt 1 view .LVU1081
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 141


  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 4071              		.loc 1 69 38 view .LVU1082
1580:Veno-Echo.cpp ****     {   
 4072              		.loc 19 1580 5 is_stmt 0 view .LVU1083
 4073 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4074 000c 7F2B     		cmp	r3, #127
 4075 000e 00D0     		beq	.L251
 4076              	.L239:
1610:Veno-Echo.cpp **** 
 4077              		.loc 19 1610 1 view .LVU1084
 4078 0010 10BD     		pop	{r4, pc}
 4079              	.L251:
1582:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4080              		.loc 19 1582 9 is_stmt 1 view .LVU1085
1582:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4081              		.loc 19 1582 20 is_stmt 0 view .LVU1086
 4082 0012 0023     		movs	r3, #0
 4083 0014 144C     		ldr	r4, .L253+4
1583:Veno-Echo.cpp ****         if(divCounter == 0)
 4084              		.loc 19 1583 33 view .LVU1087
 4085 0016 1548     		ldr	r0, .L253+8
1582:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4086              		.loc 19 1582 20 view .LVU1088
 4087 0018 2360     		str	r3, [r4]
1583:Veno-Echo.cpp ****         if(divCounter == 0)
 4088              		.loc 19 1583 9 is_stmt 1 view .LVU1089
1583:Veno-Echo.cpp ****         if(divCounter == 0)
 4089              		.loc 19 1583 33 is_stmt 0 view .LVU1090
 4090 001a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4091              	.LVL210:
1584:Veno-Echo.cpp ****         {
 4092              		.loc 19 1584 9 is_stmt 1 view .LVU1091
 4093 001e 2368     		ldr	r3, [r4]
 4094 0020 002B     		cmp	r3, #0
 4095 0022 F5D1     		bne	.L239
1586:Veno-Echo.cpp ****             {
 4096              		.loc 19 1586 13 view .LVU1092
1586:Veno-Echo.cpp ****             {
 4097              		.loc 19 1586 29 is_stmt 0 view .LVU1093
 4098 0024 1248     		ldr	r0, .L253+12
 4099 0026 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 4100              	.LVL211:
1586:Veno-Echo.cpp ****             {
 4101              		.loc 19 1586 13 view .LVU1094
 4102 002a 0028     		cmp	r0, #0
 4103 002c F0D0     		beq	.L239
1588:Veno-Echo.cpp ****                 
 4104              		.loc 19 1588 17 is_stmt 1 view .LVU1095
1588:Veno-Echo.cpp ****                 
 4105              		.loc 19 1588 39 is_stmt 0 view .LVU1096
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 142


 4106 002e 1048     		ldr	r0, .L253+12
 4107 0030 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 4108              	.LVL212:
 4109 0034 0D48     		ldr	r0, .L253+8
 4110 0036 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 4111              	.LVL213:
1593:Veno-Echo.cpp ****                 {
 4112              		.loc 19 1593 17 is_stmt 1 view .LVU1097
 4113 003a 0E4B     		ldr	r3, .L253+16
 4114 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4115 003e 002B     		cmp	r3, #0
 4116 0040 E6D0     		beq	.L239
 4117              	.LBB1135:
 4118              	.LBI1135:
1574:Veno-Echo.cpp **** {
 4119              		.loc 19 1574 6 view .LVU1098
 4120              	.LBB1136:
1595:Veno-Echo.cpp ****                     {
 4121              		.loc 19 1595 21 view .LVU1099
1595:Veno-Echo.cpp ****                     {
 4122              		.loc 19 1595 30 is_stmt 0 view .LVU1100
 4123 0042 0D4B     		ldr	r3, .L253+20
1595:Veno-Echo.cpp ****                     {
 4124              		.loc 19 1595 21 view .LVU1101
 4125 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 0046 052B     		cmp	r3, #5
 4127 0048 08D9     		bls	.L252
 4128              	.L243:
1600:Veno-Echo.cpp ****                     {
 4129              		.loc 19 1600 21 is_stmt 1 view .LVU1102
1600:Veno-Echo.cpp ****                     {
 4130              		.loc 19 1600 30 is_stmt 0 view .LVU1103
 4131 004a 0C4B     		ldr	r3, .L253+24
1600:Veno-Echo.cpp ****                     {
 4132              		.loc 19 1600 21 view .LVU1104
 4133 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4134 004e 052B     		cmp	r3, #5
 4135 0050 DED8     		bhi	.L239
1602:Veno-Echo.cpp ****                     }
 4136              		.loc 19 1602 25 is_stmt 1 view .LVU1105
1602:Veno-Echo.cpp ****                     }
 4137              		.loc 19 1602 51 is_stmt 0 view .LVU1106
 4138 0052 0B48     		ldr	r0, .L253+28
 4139              	.LBE1136:
 4140              	.LBE1135:
1610:Veno-Echo.cpp **** 
 4141              		.loc 19 1610 1 view .LVU1107
 4142 0054 BDE81040 		pop	{r4, lr}
 4143              		.cfi_remember_state
 4144              		.cfi_restore 14
 4145              		.cfi_restore 4
 4146              		.cfi_def_cfa_offset 0
 4147              	.LBB1138:
 4148              	.LBB1137:
1602:Veno-Echo.cpp ****                     }
 4149              		.loc 19 1602 51 view .LVU1108
 4150 0058 FFF7FEBF 		b	_ZN8TempoLED10resetPhaseEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 143


 4151              	.LVL214:
 4152              	.L252:
 4153              		.cfi_restore_state
1597:Veno-Echo.cpp ****                     }
 4154              		.loc 19 1597 25 is_stmt 1 view .LVU1109
1597:Veno-Echo.cpp ****                     }
 4155              		.loc 19 1597 51 is_stmt 0 view .LVU1110
 4156 005c 0948     		ldr	r0, .L253+32
 4157 005e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4158              	.LVL215:
 4159 0062 F2E7     		b	.L243
 4160              	.L254:
 4161              		.align	2
 4162              	.L253:
 4163 0064 00000000 		.word	.LANCHOR70
 4164 0068 00000000 		.word	.LANCHOR71
 4165 006c 00000000 		.word	.LANCHOR72
 4166 0070 00000000 		.word	.LANCHOR73
 4167 0074 00000000 		.word	.LANCHOR74
 4168 0078 00000000 		.word	.LANCHOR75
 4169 007c 00000000 		.word	.LANCHOR76
 4170 0080 04000000 		.word	.LANCHOR1+4
 4171 0084 04000000 		.word	.LANCHOR0+4
 4172              	.LBE1137:
 4173              	.LBE1138:
 4174              		.cfi_endproc
 4175              	.LFE4307:
 4177              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 4178              		.align	1
 4179              		.p2align 2,,3
 4180              		.global	_Z19Update_BaseTempoLEDv
 4181              		.syntax unified
 4182              		.thumb
 4183              		.thumb_func
 4184              		.fpu fpv5-d16
 4186              	_Z19Update_BaseTempoLEDv:
 4187              	.LFB4309:
1747:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4188              		.loc 19 1747 1 is_stmt 1 view -0
 4189              		.cfi_startproc
 4190              		@ args = 0, pretend = 0, frame = 0
 4191              		@ frame_needed = 0, uses_anonymous_args = 0
1748:Veno-Echo.cpp **** 
 4192              		.loc 19 1748 5 view .LVU1112
1748:Veno-Echo.cpp **** 
 4193              		.loc 19 1748 25 is_stmt 0 view .LVU1113
 4194 0000 1248     		ldr	r0, .L269
1747:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4195              		.loc 19 1747 1 view .LVU1114
 4196 0002 10B5     		push	{r4, lr}
 4197              		.cfi_def_cfa_offset 8
 4198              		.cfi_offset 4, -8
 4199              		.cfi_offset 14, -4
1748:Veno-Echo.cpp **** 
 4200              		.loc 19 1748 25 view .LVU1115
 4201 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 4202              	.LVL216:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 144


1750:Veno-Echo.cpp ****     {
 4203              		.loc 19 1750 5 is_stmt 1 view .LVU1116
1750:Veno-Echo.cpp ****     {
 4204              		.loc 19 1750 27 is_stmt 0 view .LVU1117
 4205 0008 1048     		ldr	r0, .L269
 4206 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 4207              	.LVL217:
1750:Veno-Echo.cpp ****     {
 4208              		.loc 19 1750 5 view .LVU1118
 4209 000e 28B1     		cbz	r0, .L255
1752:Veno-Echo.cpp ****         {
 4210              		.loc 19 1752 9 is_stmt 1 view .LVU1119
 4211 0010 0F4C     		ldr	r4, .L269+4
 4212 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4213 0014 63B9     		cbnz	r3, .L267
1760:Veno-Echo.cpp ****         {
 4214              		.loc 19 1760 9 view .LVU1120
 4215 0016 0F4C     		ldr	r4, .L269+8
 4216 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4217 001a 03B9     		cbnz	r3, .L268
 4218              	.L255:
1769:Veno-Echo.cpp **** 
 4219              		.loc 19 1769 1 is_stmt 0 view .LVU1121
 4220 001c 10BD     		pop	{r4, pc}
 4221              	.L268:
 4222              	.LBB1141:
 4223              	.LBI1141:
1746:Veno-Echo.cpp **** {
 4224              		.loc 19 1746 6 is_stmt 1 view .LVU1122
 4225              	.LBB1142:
1763:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 4226              		.loc 19 1763 13 view .LVU1123
1763:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 4227              		.loc 19 1763 39 is_stmt 0 view .LVU1124
 4228 001e 0E48     		ldr	r0, .L269+12
 4229 0020 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4230              	.LVL218:
1764:Veno-Echo.cpp ****             delayR_flag = false;
 4231              		.loc 19 1764 13 is_stmt 1 view .LVU1125
1764:Veno-Echo.cpp ****             delayR_flag = false;
 4232              		.loc 19 1764 39 is_stmt 0 view .LVU1126
 4233 0024 0D48     		ldr	r0, .L269+16
 4234 0026 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4235              	.LVL219:
1765:Veno-Echo.cpp ****         }
 4236              		.loc 19 1765 13 is_stmt 1 view .LVU1127
1765:Veno-Echo.cpp ****         }
 4237              		.loc 19 1765 25 is_stmt 0 view .LVU1128
 4238 002a 0023     		movs	r3, #0
 4239 002c 2370     		strb	r3, [r4]
 4240              	.LBE1142:
 4241              	.LBE1141:
1769:Veno-Echo.cpp **** 
 4242              		.loc 19 1769 1 view .LVU1129
 4243 002e 10BD     		pop	{r4, pc}
 4244              	.L267:
1755:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 145


 4245              		.loc 19 1755 13 is_stmt 1 view .LVU1130
1755:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 4246              		.loc 19 1755 39 is_stmt 0 view .LVU1131
 4247 0030 0948     		ldr	r0, .L269+12
 4248 0032 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4249              	.LVL220:
1756:Veno-Echo.cpp ****             delayL_flag = false;
 4250              		.loc 19 1756 13 is_stmt 1 view .LVU1132
1756:Veno-Echo.cpp ****             delayL_flag = false;
 4251              		.loc 19 1756 39 is_stmt 0 view .LVU1133
 4252 0036 0948     		ldr	r0, .L269+16
 4253 0038 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4254              	.LVL221:
1757:Veno-Echo.cpp ****         }
 4255              		.loc 19 1757 13 is_stmt 1 view .LVU1134
1757:Veno-Echo.cpp ****         }
 4256              		.loc 19 1757 25 is_stmt 0 view .LVU1135
 4257 003c 0023     		movs	r3, #0
 4258 003e 2370     		strb	r3, [r4]
1760:Veno-Echo.cpp ****         {
 4259              		.loc 19 1760 9 is_stmt 1 view .LVU1136
 4260 0040 044C     		ldr	r4, .L269+8
 4261 0042 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4262 0044 002B     		cmp	r3, #0
 4263 0046 E9D0     		beq	.L255
 4264 0048 E9E7     		b	.L268
 4265              	.L270:
 4266 004a 00BF     		.align	2
 4267              	.L269:
 4268 004c 00000000 		.word	.LANCHOR72
 4269 0050 00000000 		.word	.LANCHOR77
 4270 0054 00000000 		.word	.LANCHOR78
 4271 0058 04000000 		.word	.LANCHOR0+4
 4272 005c 04000000 		.word	.LANCHOR1+4
 4273              		.cfi_endproc
 4274              	.LFE4309:
 4276              		.section	.text._Z11SetTempoDivfP9TempoDivs,"ax",%progbits
 4277              		.align	1
 4278              		.p2align 2,,3
 4279              		.global	_Z11SetTempoDivfP9TempoDivs
 4280              		.syntax unified
 4281              		.thumb
 4282              		.thumb_func
 4283              		.fpu fpv5-d16
 4285              	_Z11SetTempoDivfP9TempoDivs:
 4286              	.LVL222:
 4287              	.LFB4310:
1773:Veno-Echo.cpp **** 
 4288              		.loc 19 1773 1 view -0
 4289              		.cfi_startproc
 4290              		@ args = 0, pretend = 0, frame = 0
 4291              		@ frame_needed = 0, uses_anonymous_args = 0
 4292              		@ link register save eliminated.
1775:Veno-Echo.cpp **** 
 4293              		.loc 19 1775 5 view .LVU1138
1777:Veno-Echo.cpp ****     {
 4294              		.loc 19 1777 5 view .LVU1139
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 146


 4295 0000 DFED417A 		vldr.32	s15, .L317
 4296 0004 B4EEE70A 		vcmpe.f32	s0, s15
 4297 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4298 000c 04D5     		bpl	.L305
1779:Veno-Echo.cpp ****         *div = DIV6;
 4299              		.loc 19 1779 9 view .LVU1140
 4300              	.LVL223:
1780:Veno-Echo.cpp ****     }
 4301              		.loc 19 1780 9 view .LVU1141
1780:Veno-Echo.cpp ****     }
 4302              		.loc 19 1780 14 is_stmt 0 view .LVU1142
 4303 000e 0023     		movs	r3, #0
1779:Veno-Echo.cpp ****         *div = DIV6;
 4304              		.loc 19 1779 16 view .LVU1143
 4305 0010 9FED3E0A 		vldr.32	s0, .L317+4
 4306              	.LVL224:
1780:Veno-Echo.cpp ****     }
 4307              		.loc 19 1780 14 view .LVU1144
 4308 0014 0370     		strb	r3, [r0]
 4309 0016 7047     		bx	lr
 4310              	.LVL225:
 4311              	.L305:
1783:Veno-Echo.cpp ****     {
 4312              		.loc 19 1783 10 is_stmt 1 view .LVU1145
 4313 0018 DFED3D7A 		vldr.32	s15, .L317+8
 4314 001c B4EEE70A 		vcmpe.f32	s0, s15
 4315 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4316 0024 04D5     		bpl	.L306
1785:Veno-Echo.cpp ****        *div = DIV5;
 4317              		.loc 19 1785 8 view .LVU1146
 4318              	.LVL226:
1786:Veno-Echo.cpp ****     }
 4319              		.loc 19 1786 8 view .LVU1147
1786:Veno-Echo.cpp ****     }
 4320              		.loc 19 1786 13 is_stmt 0 view .LVU1148
 4321 0026 0123     		movs	r3, #1
1785:Veno-Echo.cpp ****        *div = DIV5;
 4322              		.loc 19 1785 15 view .LVU1149
 4323 0028 9FED3A0A 		vldr.32	s0, .L317+12
 4324              	.LVL227:
1786:Veno-Echo.cpp ****     }
 4325              		.loc 19 1786 13 view .LVU1150
 4326 002c 0370     		strb	r3, [r0]
 4327 002e 7047     		bx	lr
 4328              	.LVL228:
 4329              	.L306:
1789:Veno-Echo.cpp ****     {
 4330              		.loc 19 1789 10 is_stmt 1 view .LVU1151
 4331 0030 DFED397A 		vldr.32	s15, .L317+16
 4332 0034 B4EEE70A 		vcmpe.f32	s0, s15
 4333 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4334 003c 0BD4     		bmi	.L315
1795:Veno-Echo.cpp ****     {
 4335              		.loc 19 1795 10 view .LVU1152
 4336 003e DFED377A 		vldr.32	s15, .L317+20
 4337 0042 B4EEE70A 		vcmpe.f32	s0, s15
 4338 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 147


 4339 004a 09D5     		bpl	.L308
1797:Veno-Echo.cpp ****         *div = DIV3;
 4340              		.loc 19 1797 9 view .LVU1153
 4341              	.LVL229:
1798:Veno-Echo.cpp ****     }
 4342              		.loc 19 1798 9 view .LVU1154
1798:Veno-Echo.cpp ****     }
 4343              		.loc 19 1798 14 is_stmt 0 view .LVU1155
 4344 004c 0323     		movs	r3, #3
1797:Veno-Echo.cpp ****         *div = DIV3;
 4345              		.loc 19 1797 16 view .LVU1156
 4346 004e 9FED340A 		vldr.32	s0, .L317+24
 4347              	.LVL230:
1798:Veno-Echo.cpp ****     }
 4348              		.loc 19 1798 14 view .LVU1157
 4349 0052 0370     		strb	r3, [r0]
 4350 0054 7047     		bx	lr
 4351              	.LVL231:
 4352              	.L315:
1791:Veno-Echo.cpp ****         *div = DIV4;
 4353              		.loc 19 1791 9 is_stmt 1 view .LVU1158
1792:Veno-Echo.cpp ****     }
 4354              		.loc 19 1792 9 view .LVU1159
1792:Veno-Echo.cpp ****     }
 4355              		.loc 19 1792 14 is_stmt 0 view .LVU1160
 4356 0056 0223     		movs	r3, #2
1791:Veno-Echo.cpp ****         *div = DIV4;
 4357              		.loc 19 1791 16 view .LVU1161
 4358 0058 B5EE000A 		vmov.f32	s0, #2.5e-1
 4359              	.LVL232:
1792:Veno-Echo.cpp ****     }
 4360              		.loc 19 1792 14 view .LVU1162
 4361 005c 0370     		strb	r3, [r0]
 4362 005e 7047     		bx	lr
 4363              	.LVL233:
 4364              	.L308:
1801:Veno-Echo.cpp ****     {
 4365              		.loc 19 1801 10 is_stmt 1 view .LVU1163
 4366 0060 DFED307A 		vldr.32	s15, .L317+28
 4367 0064 B4EEE70A 		vcmpe.f32	s0, s15
 4368 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4369 006c 0BD4     		bmi	.L316
1807:Veno-Echo.cpp ****     {
 4370              		.loc 19 1807 10 view .LVU1164
 4371 006e DFED2E7A 		vldr.32	s15, .L317+32
 4372 0072 B4EEE70A 		vcmpe.f32	s0, s15
 4373 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4374 007a 09D5     		bpl	.L310
 4375              	.L293:
1809:Veno-Echo.cpp ****         *div = UNITY;
 4376              		.loc 19 1809 9 view .LVU1165
 4377              	.LVL234:
1810:Veno-Echo.cpp ****     }
 4378              		.loc 19 1810 9 view .LVU1166
1810:Veno-Echo.cpp ****     }
 4379              		.loc 19 1810 14 is_stmt 0 view .LVU1167
 4380 007c 0523     		movs	r3, #5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 148


1809:Veno-Echo.cpp ****         *div = UNITY;
 4381              		.loc 19 1809 16 view .LVU1168
 4382 007e B7EE000A 		vmov.f32	s0, #1.0e+0
 4383              	.LVL235:
1810:Veno-Echo.cpp ****     }
 4384              		.loc 19 1810 14 view .LVU1169
 4385 0082 0370     		strb	r3, [r0]
 4386 0084 7047     		bx	lr
 4387              	.LVL236:
 4388              	.L316:
1803:Veno-Echo.cpp ****         *div = DIV2;
 4389              		.loc 19 1803 9 is_stmt 1 view .LVU1170
1804:Veno-Echo.cpp ****     }
 4390              		.loc 19 1804 9 view .LVU1171
1804:Veno-Echo.cpp ****     }
 4391              		.loc 19 1804 14 is_stmt 0 view .LVU1172
 4392 0086 0423     		movs	r3, #4
1803:Veno-Echo.cpp ****         *div = DIV2;
 4393              		.loc 19 1803 16 view .LVU1173
 4394 0088 B6EE000A 		vmov.f32	s0, #5.0e-1
 4395              	.LVL237:
1804:Veno-Echo.cpp ****     }
 4396              		.loc 19 1804 14 view .LVU1174
 4397 008c 0370     		strb	r3, [r0]
 4398 008e 7047     		bx	lr
 4399              	.LVL238:
 4400              	.L310:
1813:Veno-Echo.cpp ****     {
 4401              		.loc 19 1813 10 is_stmt 1 view .LVU1175
 4402 0090 DFED267A 		vldr.32	s15, .L317+36
 4403 0094 B4EEE70A 		vcmpe.f32	s0, s15
 4404 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4405 009c 04D5     		bpl	.L311
1815:Veno-Echo.cpp ****         *div = MULT2;
 4406              		.loc 19 1815 9 view .LVU1176
 4407              	.LVL239:
1816:Veno-Echo.cpp ****     }
 4408              		.loc 19 1816 9 view .LVU1177
1816:Veno-Echo.cpp ****     }
 4409              		.loc 19 1816 14 is_stmt 0 view .LVU1178
 4410 009e 0623     		movs	r3, #6
1815:Veno-Echo.cpp ****         *div = MULT2;
 4411              		.loc 19 1815 16 view .LVU1179
 4412 00a0 B0EE000A 		vmov.f32	s0, #2.0e+0
 4413              	.LVL240:
1816:Veno-Echo.cpp ****     }
 4414              		.loc 19 1816 14 view .LVU1180
 4415 00a4 0370     		strb	r3, [r0]
 4416 00a6 7047     		bx	lr
 4417              	.LVL241:
 4418              	.L311:
1819:Veno-Echo.cpp ****     {
 4419              		.loc 19 1819 10 is_stmt 1 view .LVU1181
 4420 00a8 DFED217A 		vldr.32	s15, .L317+40
 4421 00ac B4EEE70A 		vcmpe.f32	s0, s15
 4422 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4423 00b4 04D5     		bpl	.L312
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 149


1821:Veno-Echo.cpp ****         *div = MULT3;
 4424              		.loc 19 1821 9 view .LVU1182
 4425              	.LVL242:
1822:Veno-Echo.cpp ****     }
 4426              		.loc 19 1822 9 view .LVU1183
1822:Veno-Echo.cpp ****     }
 4427              		.loc 19 1822 14 is_stmt 0 view .LVU1184
 4428 00b6 0723     		movs	r3, #7
1821:Veno-Echo.cpp ****         *div = MULT3;
 4429              		.loc 19 1821 16 view .LVU1185
 4430 00b8 B0EE080A 		vmov.f32	s0, #3.0e+0
 4431              	.LVL243:
1822:Veno-Echo.cpp ****     }
 4432              		.loc 19 1822 14 view .LVU1186
 4433 00bc 0370     		strb	r3, [r0]
 4434 00be 7047     		bx	lr
 4435              	.LVL244:
 4436              	.L312:
1825:Veno-Echo.cpp ****     {
 4437              		.loc 19 1825 10 is_stmt 1 view .LVU1187
 4438 00c0 DFED1C7A 		vldr.32	s15, .L317+44
 4439 00c4 B4EEE70A 		vcmpe.f32	s0, s15
 4440 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4441 00cc 04D5     		bpl	.L313
1827:Veno-Echo.cpp ****         *div = MULT4;
 4442              		.loc 19 1827 9 view .LVU1188
 4443              	.LVL245:
1828:Veno-Echo.cpp ****     }
 4444              		.loc 19 1828 9 view .LVU1189
1828:Veno-Echo.cpp ****     }
 4445              		.loc 19 1828 14 is_stmt 0 view .LVU1190
 4446 00ce 0823     		movs	r3, #8
1827:Veno-Echo.cpp ****         *div = MULT4;
 4447              		.loc 19 1827 16 view .LVU1191
 4448 00d0 B1EE000A 		vmov.f32	s0, #4.0e+0
 4449              	.LVL246:
1828:Veno-Echo.cpp ****     }
 4450              		.loc 19 1828 14 view .LVU1192
 4451 00d4 0370     		strb	r3, [r0]
 4452 00d6 7047     		bx	lr
 4453              	.LVL247:
 4454              	.L313:
 4455              	.LBB1145:
 4456              	.LBI1145:
1772:Veno-Echo.cpp **** {
 4457              		.loc 19 1772 7 is_stmt 1 view .LVU1193
 4458              	.LBB1146:
1831:Veno-Echo.cpp ****     {
 4459              		.loc 19 1831 10 view .LVU1194
 4460 00d8 DFED177A 		vldr.32	s15, .L317+48
 4461 00dc B4EEE70A 		vcmpe.f32	s0, s15
 4462 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4463 00e4 04D5     		bpl	.L314
1833:Veno-Echo.cpp ****         *div = MULT5;
 4464              		.loc 19 1833 9 view .LVU1195
 4465              	.LVL248:
1834:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 150


 4466              		.loc 19 1834 9 view .LVU1196
1834:Veno-Echo.cpp ****     }
 4467              		.loc 19 1834 14 is_stmt 0 view .LVU1197
 4468 00e6 0923     		movs	r3, #9
1833:Veno-Echo.cpp ****         *div = MULT5;
 4469              		.loc 19 1833 16 view .LVU1198
 4470 00e8 B1EE040A 		vmov.f32	s0, #5.0e+0
 4471              	.LVL249:
1834:Veno-Echo.cpp ****     }
 4472              		.loc 19 1834 14 view .LVU1199
 4473 00ec 0370     		strb	r3, [r0]
 4474 00ee 7047     		bx	lr
 4475              	.LVL250:
 4476              	.L314:
1837:Veno-Echo.cpp ****     {
 4477              		.loc 19 1837 10 is_stmt 1 view .LVU1200
 4478 00f0 F7EE007A 		vmov.f32	s15, #1.0e+0
 4479 00f4 B4EEE70A 		vcmpe.f32	s0, s15
 4480 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4481 00fc BED8     		bhi	.L293
1839:Veno-Echo.cpp ****        *div = MULT6;
 4482              		.loc 19 1839 8 view .LVU1201
 4483              	.LVL251:
1840:Veno-Echo.cpp ****     }
 4484              		.loc 19 1840 8 view .LVU1202
1840:Veno-Echo.cpp ****     }
 4485              		.loc 19 1840 13 is_stmt 0 view .LVU1203
 4486 00fe 0A23     		movs	r3, #10
1839:Veno-Echo.cpp ****        *div = MULT6;
 4487              		.loc 19 1839 15 view .LVU1204
 4488 0100 B1EE080A 		vmov.f32	s0, #6.0e+0
 4489              	.LVL252:
1839:Veno-Echo.cpp ****        *div = MULT6;
 4490              		.loc 19 1839 15 view .LVU1205
 4491              	.LBE1146:
 4492              	.LBE1145:
1848:Veno-Echo.cpp **** 
 4493              		.loc 19 1848 1 is_stmt 1 view .LVU1206
 4494              	.LBB1148:
 4495              	.LBB1147:
1840:Veno-Echo.cpp ****     }
 4496              		.loc 19 1840 13 is_stmt 0 view .LVU1207
 4497 0104 0370     		strb	r3, [r0]
 4498              	.LBE1147:
 4499              	.LBE1148:
1850:Veno-Echo.cpp **** 
 4500              		.loc 19 1850 1 view .LVU1208
 4501 0106 7047     		bx	lr
 4502              	.L318:
 4503              		.align	2
 4504              	.L317:
 4505 0108 C729BA3D 		.word	1035610567
 4506 010c ABAA2A3E 		.word	1042983595
 4507 0110 C7293A3E 		.word	1043999175
 4508 0114 CDCC4C3E 		.word	1045220557
 4509 0118 569F8B3E 		.word	1049337686
 4510 011c C729BA3E 		.word	1052387783
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 151


 4511 0120 ABAAAA3E 		.word	1051372203
 4512 0124 39B4E83E 		.word	1055437881
 4513 0128 E3A50B3F 		.word	1057727971
 4514 012c 1CEB223F 		.word	1059253020
 4515 0130 55303A3F 		.word	1060778069
 4516 0134 8E75513F 		.word	1062303118
 4517 0138 C7BA683F 		.word	1063828167
 4518              		.cfi_endproc
 4519              	.LFE4310:
 4521              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 4522              		.align	1
 4523              		.p2align 2,,3
 4524              		.global	_Z17Update_DelayTimeRv
 4525              		.syntax unified
 4526              		.thumb
 4527              		.thumb_func
 4528              		.fpu fpv5-d16
 4530              	_Z17Update_DelayTimeRv:
 4531              	.LFB4294:
 904:Veno-Echo.cpp ****     static bool lastShift{};
 4532              		.loc 19 904 1 is_stmt 1 view -0
 4533              		.cfi_startproc
 4534              		@ args = 0, pretend = 0, frame = 0
 4535              		@ frame_needed = 0, uses_anonymous_args = 0
 905:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 4536              		.loc 19 905 5 view .LVU1210
 906:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 4537              		.loc 19 906 5 view .LVU1211
 907:Veno-Echo.cpp ****     
 4538              		.loc 19 907 5 view .LVU1212
 909:Veno-Echo.cpp **** 
 4539              		.loc 19 909 5 view .LVU1213
 912:Veno-Echo.cpp **** 
 4540              		.loc 19 912 5 view .LVU1214
 904:Veno-Echo.cpp ****     static bool lastShift{};
 4541              		.loc 19 904 1 is_stmt 0 view .LVU1215
 4542 0000 10B5     		push	{r4, lr}
 4543              		.cfi_def_cfa_offset 8
 4544              		.cfi_offset 4, -8
 4545              		.cfi_offset 14, -4
 912:Veno-Echo.cpp **** 
 4546              		.loc 19 912 44 view .LVU1216
 4547 0002 0622     		movs	r2, #6
 4548 0004 0721     		movs	r1, #7
 4549 0006 7548     		ldr	r0, .L354
 904:Veno-Echo.cpp ****     static bool lastShift{};
 4550              		.loc 19 904 1 view .LVU1217
 4551 0008 2DED028B 		vpush.64	{d8}
 4552              		.cfi_def_cfa_offset 16
 4553              		.cfi_offset 80, -16
 4554              		.cfi_offset 81, -12
 912:Veno-Echo.cpp **** 
 4555              		.loc 19 912 44 view .LVU1218
 4556 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4557              	.LVL253:
 917:Veno-Echo.cpp **** 
 4558              		.loc 19 917 26 view .LVU1219
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 152


 4559 0010 7349     		ldr	r1, .L354+4
 917:Veno-Echo.cpp **** 
 4560              		.loc 19 917 31 view .LVU1220
 4561 0012 744B     		ldr	r3, .L354+8
 4562              	.LVL254:
 916:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4563              		.loc 19 916 5 is_stmt 1 view .LVU1221
 917:Veno-Echo.cpp **** 
 4564              		.loc 19 917 5 view .LVU1222
 917:Veno-Echo.cpp **** 
 4565              		.loc 19 917 26 is_stmt 0 view .LVU1223
 4566 0014 0A68     		ldr	r2, [r1]
 4567              	.LBB1149:
 919:Veno-Echo.cpp ****     {
 4568              		.loc 19 919 9 view .LVU1224
 4569 0016 7448     		ldr	r0, .L354+12
 4570              	.LBE1149:
 917:Veno-Echo.cpp **** 
 4571              		.loc 19 917 26 view .LVU1225
 4572 0018 0132     		adds	r2, r2, #1
 4573              	.LBB1191:
 919:Veno-Echo.cpp ****     {
 4574              		.loc 19 919 5 view .LVU1226
 4575 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4576              	.LBE1191:
 917:Veno-Echo.cpp **** 
 4577              		.loc 19 917 31 view .LVU1227
 4578 001c 83FB0243 		smull	r4, r3, r3, r2
 4579 0020 D417     		asrs	r4, r2, #31
 4580 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 4581 0026 03EB4303 		add	r3, r3, r3, lsl #1
 4582 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 4583              	.LBB1192:
 4584              	.LBB1150:
 923:Veno-Echo.cpp ****         {
 4585              		.loc 19 923 19 view .LVU1228
 4586 002e 6F4A     		ldr	r2, .L354+16
 4587              	.LBE1150:
 4588              	.LBE1192:
 917:Veno-Echo.cpp **** 
 4589              		.loc 19 917 14 view .LVU1229
 4590 0030 0B60     		str	r3, [r1]
 919:Veno-Echo.cpp ****     {
 4591              		.loc 19 919 5 is_stmt 1 view .LVU1230
 4592              	.LBB1193:
 4593 0032 0028     		cmp	r0, #0
 4594 0034 40F08880 		bne	.L320
 4595              	.LBB1171:
 921:Veno-Echo.cpp ****         //udpate pickup
 4596              		.loc 19 921 9 view .LVU1231
 923:Veno-Echo.cpp ****         {
 4597              		.loc 19 923 9 view .LVU1232
 4598 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4599 003a 0029     		cmp	r1, #0
 4600 003c 41D0     		beq	.L321
 925:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 4601              		.loc 19 925 13 view .LVU1233
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 153


 926:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 4602              		.loc 19 926 31 is_stmt 0 view .LVU1234
 4603 003e 6C4C     		ldr	r4, .L354+20
 927:Veno-Echo.cpp ****         } 
 4604              		.loc 19 927 28 view .LVU1235
 4605 0040 6C49     		ldr	r1, .L354+24
 925:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 4606              		.loc 19 925 23 view .LVU1236
 4607 0042 1070     		strb	r0, [r2]
 926:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 4608              		.loc 19 926 13 is_stmt 1 view .LVU1237
 926:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 4609              		.loc 19 926 31 is_stmt 0 view .LVU1238
 4610 0044 2070     		strb	r0, [r4]
 927:Veno-Echo.cpp ****         } 
 4611              		.loc 19 927 13 is_stmt 1 view .LVU1239
 927:Veno-Echo.cpp ****         } 
 4612              		.loc 19 927 28 is_stmt 0 view .LVU1240
 4613 0046 81ED000A 		vstr.32	s0, [r1]
 4614              	.L322:
 940:Veno-Echo.cpp **** 
 4615              		.loc 19 940 9 is_stmt 1 view .LVU1241
 4616              	.LVL255:
 942:Veno-Echo.cpp ****         {
 4617              		.loc 19 942 9 view .LVU1242
 950:Veno-Echo.cpp ****         }
 4618              		.loc 19 950 13 view .LVU1243
 4619              	.LBB1151:
 4620              	.LBI1151:
2038:Veno-Echo.cpp **** {
 4621              		.loc 19 2038 7 view .LVU1244
 4622              	.LBB1152:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4623              		.loc 19 2040 5 view .LVU1245
2041:Veno-Echo.cpp **** 
 4624              		.loc 19 2041 5 view .LVU1246
 4625              	.LBE1152:
 4626              	.LBE1151:
 950:Veno-Echo.cpp ****         }
 4627              		.loc 19 950 36 is_stmt 0 view .LVU1247
 4628 004a 6B49     		ldr	r1, .L354+28
 4629              	.LBB1157:
 4630              	.LBB1153:
2041:Veno-Echo.cpp **** 
 4631              		.loc 19 2041 39 view .LVU1248
 4632 004c B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 4633              		.loc 19 2041 49 view .LVU1249
 4634 0050 B6EE006A 		vmov.f32	s12, #5.0e-1
 4635              	.LBE1153:
 4636              	.LBE1157:
 950:Veno-Echo.cpp ****         }
 4637              		.loc 19 950 36 view .LVU1250
 4638 0054 694A     		ldr	r2, .L354+32
 4639              	.LBB1158:
 4640              	.LBB1154:
2041:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 154


 4641              		.loc 19 2041 39 view .LVU1251
 4642 0056 D1ED007A 		vldr.32	s15, [r1]
2041:Veno-Echo.cpp **** 
 4643              		.loc 19 2041 12 view .LVU1252
 4644 005a F0EE006A 		vmov.f32	s13, #2.0e+0
 4645 005e 92ED008A 		vldr.32	s16, [r2]
2041:Veno-Echo.cpp **** 
 4646              		.loc 19 2041 39 view .LVU1253
 4647 0062 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 4648              		.loc 19 2041 49 view .LVU1254
 4649 0066 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 4650              		.loc 19 2041 12 view .LVU1255
 4651 006a A7EEA68A 		vfma.f32	s16, s15, s13
 4652              	.LVL256:
2043:Veno-Echo.cpp ****     {
 4653              		.loc 19 2043 5 is_stmt 1 view .LVU1256
 4654 006e B5EEC08A 		vcmpe.f32	s16, #0
 4655 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4656 0076 76D4     		bmi	.L351
2048:Veno-Echo.cpp ****     {
 4657              		.loc 19 2048 5 view .LVU1257
2050:Veno-Echo.cpp ****     }
 4658              		.loc 19 2050 16 is_stmt 0 view .LVU1258
 4659 0078 B4EE478A 		vcmp.f32	s16, s14
 4660              	.LBE1154:
 4661              	.LBE1158:
 953:Veno-Echo.cpp ****         {
 4662              		.loc 19 953 13 view .LVU1259
 4663 007c 604A     		ldr	r2, .L354+36
 953:Veno-Echo.cpp ****         {
 4664              		.loc 19 953 9 view .LVU1260
 4665 007e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4666              	.LBB1159:
 4667              	.LBB1155:
2050:Veno-Echo.cpp ****     }
 4668              		.loc 19 2050 16 view .LVU1261
 4669 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4670 0084 37FE088A 		vselgt.f32	s16, s14, s16
 4671              	.LVL257:
2050:Veno-Echo.cpp ****     }
 4672              		.loc 19 2050 16 view .LVU1262
 4673              	.LBE1155:
 4674              	.LBE1159:
 953:Veno-Echo.cpp ****         {
 4675              		.loc 19 953 9 is_stmt 1 view .LVU1263
 4676 0088 002A     		cmp	r2, #0
 4677 008a 50D0     		beq	.L352
 4678              	.L329:
 963:Veno-Echo.cpp ****             {
 4679              		.loc 19 963 13 view .LVU1264
 4680 008c 002B     		cmp	r3, #0
 4681 008e 64D1     		bne	.L319
 966:Veno-Echo.cpp ****                 {
 4682              		.loc 19 966 17 view .LVU1265
 966:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 155


 4683              		.loc 19 966 62 is_stmt 0 view .LVU1266
 4684 0090 5C48     		ldr	r0, .L354+40
 4685 0092 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 4686              	.LVL258:
 966:Veno-Echo.cpp ****                 {
 4687              		.loc 19 966 86 view .LVU1267
 4688 0096 5C48     		ldr	r0, .L354+44
 966:Veno-Echo.cpp ****                 {
 4689              		.loc 19 966 62 view .LVU1268
 4690 0098 B0EE407A 		vmov.f32	s14, s0
 966:Veno-Echo.cpp ****                 {
 4691              		.loc 19 966 86 view .LVU1269
 4692 009c B0EE480A 		vmov.f32	s0, s16
 4693 00a0 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 4694              	.LVL259:
 966:Veno-Echo.cpp ****                 {
 4695              		.loc 19 966 65 view .LVU1270
 4696 00a4 DFED597A 		vldr.32	s15, .L354+48
 966:Veno-Echo.cpp ****                 {
 4697              		.loc 19 966 39 view .LVU1271
 4698 00a8 5948     		ldr	r0, .L354+52
 966:Veno-Echo.cpp ****                 {
 4699              		.loc 19 966 65 view .LVU1272
 4700 00aa 27EE277A 		vmul.f32	s14, s14, s15
 966:Veno-Echo.cpp ****                 {
 4701              		.loc 19 966 39 view .LVU1273
 4702 00ae 27EE000A 		vmul.f32	s0, s14, s0
 4703 00b2 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 4704              	.LVL260:
 966:Veno-Echo.cpp ****                 {
 4705              		.loc 19 966 17 view .LVU1274
 4706 00b6 0028     		cmp	r0, #0
 4707 00b8 4FD0     		beq	.L319
 968:Veno-Echo.cpp ****                 }
 4708              		.loc 19 968 21 is_stmt 1 view .LVU1275
 968:Veno-Echo.cpp ****                 }
 4709              		.loc 19 968 33 is_stmt 0 view .LVU1276
 4710 00ba 564B     		ldr	r3, .L354+56
 4711 00bc 0122     		movs	r2, #1
 4712 00be 1A70     		strb	r2, [r3]
 4713 00c0 4BE0     		b	.L319
 4714              	.LVL261:
 4715              	.L321:
 931:Veno-Echo.cpp ****             {
 4716              		.loc 19 931 13 is_stmt 1 view .LVU1277
 931:Veno-Echo.cpp ****             {
 4717              		.loc 19 931 16 is_stmt 0 view .LVU1278
 4718 00c2 4B4A     		ldr	r2, .L354+20
 931:Veno-Echo.cpp ****             {
 4719              		.loc 19 931 13 view .LVU1279
 4720 00c4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4721 00c6 79B9     		cbnz	r1, .L323
 933:Veno-Echo.cpp ****                 {
 4722              		.loc 19 933 17 is_stmt 1 view .LVU1280
 4723              	.LVL262:
 4724              	.LBB1160:
 4725              	.LBI1160:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 156


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4726              		.loc 20 75 3 view .LVU1281
 4727              	.LBB1161:
 4728              		.loc 20 76 5 view .LVU1282
 4729              		.loc 20 76 5 is_stmt 0 view .LVU1283
 4730              	.LBE1161:
 4731              	.LBE1160:
 933:Veno-Echo.cpp ****                 {
 4732              		.loc 19 933 23 view .LVU1284
 4733 00c8 4A49     		ldr	r1, .L354+24
 933:Veno-Echo.cpp ****                 {
 4734              		.loc 19 933 17 view .LVU1285
 4735 00ca 9FED537A 		vldr.32	s14, .L354+60
 933:Veno-Echo.cpp ****                 {
 4736              		.loc 19 933 23 view .LVU1286
 4737 00ce D1ED007A 		vldr.32	s15, [r1]
 4738 00d2 70EE677A 		vsub.f32	s15, s0, s15
 4739              	.LBB1163:
 4740              	.LBB1162:
 4741              		.loc 20 76 31 view .LVU1287
 4742 00d6 F0EEE77A 		vabs.f32	s15, s15
 4743              	.LBE1162:
 4744              	.LBE1163:
 933:Veno-Echo.cpp ****                 {
 4745              		.loc 19 933 17 view .LVU1288
 4746 00da F4EEC77A 		vcmpe.f32	s15, s14
 4747 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4748 00e2 B2DD     		ble	.L322
 935:Veno-Echo.cpp ****                 }
 4749              		.loc 19 935 21 is_stmt 1 view .LVU1289
 935:Veno-Echo.cpp ****                 }
 4750              		.loc 19 935 39 is_stmt 0 view .LVU1290
 4751 00e4 0121     		movs	r1, #1
 4752 00e6 1170     		strb	r1, [r2]
 4753              	.L323:
 940:Veno-Echo.cpp **** 
 4754              		.loc 19 940 9 is_stmt 1 view .LVU1291
 4755              	.LVL263:
 942:Veno-Echo.cpp ****         {
 4756              		.loc 19 942 9 view .LVU1292
 944:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 4757              		.loc 19 944 13 view .LVU1293
 4758              	.LBB1164:
 4759              	.LBI1164:
2038:Veno-Echo.cpp **** {
 4760              		.loc 19 2038 7 view .LVU1294
 4761              	.LBB1165:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4762              		.loc 19 2040 5 view .LVU1295
2041:Veno-Echo.cpp **** 
 4763              		.loc 19 2041 5 view .LVU1296
 4764              	.LBE1165:
 4765              	.LBE1164:
 944:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 4766              		.loc 19 944 36 is_stmt 0 view .LVU1297
 4767 00e8 434A     		ldr	r2, .L354+28
 4768              	.LBB1168:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 157


 4769              	.LBB1166:
2041:Veno-Echo.cpp **** 
 4770              		.loc 19 2041 39 view .LVU1298
 4771 00ea B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 4772              		.loc 19 2041 49 view .LVU1299
 4773 00ee B6EE006A 		vmov.f32	s12, #5.0e-1
2041:Veno-Echo.cpp **** 
 4774              		.loc 19 2041 39 view .LVU1300
 4775 00f2 D2ED007A 		vldr.32	s15, [r2]
2041:Veno-Echo.cpp **** 
 4776              		.loc 19 2041 12 view .LVU1301
 4777 00f6 F0EE006A 		vmov.f32	s13, #2.0e+0
 4778 00fa B0EE408A 		vmov.f32	s16, s0
2041:Veno-Echo.cpp **** 
 4779              		.loc 19 2041 39 view .LVU1302
 4780 00fe 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 4781              		.loc 19 2041 49 view .LVU1303
 4782 0102 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 4783              		.loc 19 2041 12 view .LVU1304
 4784 0106 A7EEA68A 		vfma.f32	s16, s15, s13
 4785              	.LVL264:
2043:Veno-Echo.cpp ****     {
 4786              		.loc 19 2043 5 is_stmt 1 view .LVU1305
 4787 010a B5EEC08A 		vcmpe.f32	s16, #0
 4788 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4789 0112 25D4     		bmi	.L353
2048:Veno-Echo.cpp ****     {
 4790              		.loc 19 2048 5 view .LVU1306
2050:Veno-Echo.cpp ****     }
 4791              		.loc 19 2050 16 is_stmt 0 view .LVU1307
 4792 0114 B4EE478A 		vcmp.f32	s16, s14
 4793 0118 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4794 011c 37FE088A 		vselgt.f32	s16, s14, s16
 4795              	.LVL265:
 4796              	.L325:
 4797              		.loc 19 2053 5 is_stmt 1 view .LVU1308
 4798              		.loc 19 2053 5 is_stmt 0 view .LVU1309
 4799              	.LBE1166:
 4800              	.LBE1168:
 945:Veno-Echo.cpp ****         }
 4801              		.loc 19 945 13 is_stmt 1 view .LVU1310
 945:Veno-Echo.cpp ****         }
 4802              		.loc 19 945 29 is_stmt 0 view .LVU1311
 4803 0120 364A     		ldr	r2, .L354+32
 4804 0122 82ED000A 		vstr.32	s0, [r2]
 4805              	.LVL266:
 4806              	.L327:
 953:Veno-Echo.cpp ****         {
 4807              		.loc 19 953 9 is_stmt 1 view .LVU1312
 953:Veno-Echo.cpp ****         {
 4808              		.loc 19 953 13 is_stmt 0 view .LVU1313
 4809 0126 364A     		ldr	r2, .L354+36
 953:Veno-Echo.cpp ****         {
 4810              		.loc 19 953 9 view .LVU1314
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 158


 4811 0128 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4812 012a 002A     		cmp	r2, #0
 4813 012c AED1     		bne	.L329
 4814              	.L352:
 955:Veno-Echo.cpp ****             {
 4815              		.loc 19 955 13 is_stmt 1 view .LVU1315
 4816 012e A3B9     		cbnz	r3, .L319
 957:Veno-Echo.cpp ****             }
 4817              		.loc 19 957 17 view .LVU1316
 957:Veno-Echo.cpp ****             }
 4818              		.loc 19 957 40 is_stmt 0 view .LVU1317
 4819 0130 B7EE000A 		vmov.f32	s0, #1.0e+0
 4820              	.LVL267:
 957:Veno-Echo.cpp ****             }
 4821              		.loc 19 957 40 view .LVU1318
 4822 0134 0121     		movs	r1, #1
 4823 0136 3648     		ldr	r0, .L354+52
 4824 0138 30EE480A 		vsub.f32	s0, s0, s16
 4825              	.LBE1171:
 4826              	.LBE1193:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4827              		.loc 19 1007 1 view .LVU1319
 4828 013c BDEC028B 		vldm	sp!, {d8}
 4829              		.cfi_remember_state
 4830              		.cfi_restore 80
 4831              		.cfi_restore 81
 4832              		.cfi_def_cfa_offset 8
 4833              	.LVL268:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4834              		.loc 19 1007 1 view .LVU1320
 4835 0140 BDE81040 		pop	{r4, lr}
 4836              		.cfi_restore 14
 4837              		.cfi_restore 4
 4838              		.cfi_def_cfa_offset 0
 4839              	.LBB1194:
 4840              	.LBB1172:
 957:Veno-Echo.cpp ****             }
 4841              		.loc 19 957 40 view .LVU1321
 4842 0144 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 4843              	.LVL269:
 4844              	.L320:
 4845              		.cfi_restore_state
 957:Veno-Echo.cpp ****             }
 4846              		.loc 19 957 40 view .LVU1322
 4847              	.LBE1172:
 4848              	.LBB1173:
 977:Veno-Echo.cpp **** 
 4849              		.loc 19 977 9 is_stmt 1 view .LVU1323
 979:Veno-Echo.cpp ****         {
 4850              		.loc 19 979 9 view .LVU1324
 4851 0148 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4852 014a 7BB9     		cbnz	r3, .L332
 981:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 4853              		.loc 19 981 13 view .LVU1325
 981:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 4854              		.loc 19 981 23 is_stmt 0 view .LVU1326
 4855 014c 0124     		movs	r4, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 159


 982:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 4856              		.loc 19 982 29 view .LVU1327
 4857 014e 3348     		ldr	r0, .L354+64
 983:Veno-Echo.cpp ****         }
 4858              		.loc 19 983 26 view .LVU1328
 4859 0150 3349     		ldr	r1, .L354+68
 981:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 4860              		.loc 19 981 23 view .LVU1329
 4861 0152 1470     		strb	r4, [r2]
 982:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 4862              		.loc 19 982 13 is_stmt 1 view .LVU1330
 982:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 4863              		.loc 19 982 29 is_stmt 0 view .LVU1331
 4864 0154 0370     		strb	r3, [r0]
 983:Veno-Echo.cpp ****         }
 4865              		.loc 19 983 13 is_stmt 1 view .LVU1332
 983:Veno-Echo.cpp ****         }
 4866              		.loc 19 983 26 is_stmt 0 view .LVU1333
 4867 0156 81ED000A 		vstr.32	s0, [r1]
 4868              	.LVL270:
 4869              	.L319:
 983:Veno-Echo.cpp ****         }
 4870              		.loc 19 983 26 view .LVU1334
 4871              	.LBE1173:
 4872              	.LBE1194:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4873              		.loc 19 1007 1 view .LVU1335
 4874 015a BDEC028B 		vldm	sp!, {d8}
 4875              		.cfi_remember_state
 4876              		.cfi_restore 80
 4877              		.cfi_restore 81
 4878              		.cfi_def_cfa_offset 8
 4879 015e 10BD     		pop	{r4, pc}
 4880              	.LVL271:
 4881              	.L353:
 4882              		.cfi_restore_state
 4883              	.LBB1195:
 4884              	.LBB1188:
 4885              	.LBB1169:
 4886              	.LBB1167:
2045:Veno-Echo.cpp ****     }
 4887              		.loc 19 2045 16 view .LVU1336
 4888 0160 9FED308A 		vldr.32	s16, .L354+72
 4889              	.LVL272:
2045:Veno-Echo.cpp ****     }
 4890              		.loc 19 2045 16 view .LVU1337
 4891 0164 DCE7     		b	.L325
 4892              	.LVL273:
 4893              	.L351:
2045:Veno-Echo.cpp ****     }
 4894              		.loc 19 2045 16 view .LVU1338
 4895              	.LBE1167:
 4896              	.LBE1169:
 4897              	.LBB1170:
 4898              	.LBB1156:
 4899 0166 9FED2F8A 		vldr.32	s16, .L354+72
 4900              	.LVL274:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 160


2045:Veno-Echo.cpp ****     }
 4901              		.loc 19 2045 16 view .LVU1339
 4902 016a DCE7     		b	.L327
 4903              	.LVL275:
 4904              	.L332:
2045:Veno-Echo.cpp ****     }
 4905              		.loc 19 2045 16 view .LVU1340
 4906              	.LBE1156:
 4907              	.LBE1170:
 4908              	.LBE1188:
 4909              	.LBB1189:
 988:Veno-Echo.cpp ****             {
 4910              		.loc 19 988 13 is_stmt 1 view .LVU1341
 988:Veno-Echo.cpp ****             {
 4911              		.loc 19 988 16 is_stmt 0 view .LVU1342
 4912 016c 2B4B     		ldr	r3, .L354+64
 988:Veno-Echo.cpp ****             {
 4913              		.loc 19 988 13 view .LVU1343
 4914 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4915 0170 7AB9     		cbnz	r2, .L333
 990:Veno-Echo.cpp ****                 {
 4916              		.loc 19 990 17 is_stmt 1 view .LVU1344
 4917              	.LVL276:
 4918              	.LBB1174:
 4919              	.LBI1174:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4920              		.loc 20 75 3 view .LVU1345
 4921              	.LBB1175:
 4922              		.loc 20 76 5 view .LVU1346
 4923              		.loc 20 76 5 is_stmt 0 view .LVU1347
 4924              	.LBE1175:
 4925              	.LBE1174:
 990:Veno-Echo.cpp ****                 {
 4926              		.loc 19 990 23 view .LVU1348
 4927 0172 2B4A     		ldr	r2, .L354+68
 990:Veno-Echo.cpp ****                 {
 4928              		.loc 19 990 17 view .LVU1349
 4929 0174 9FED287A 		vldr.32	s14, .L354+60
 990:Veno-Echo.cpp ****                 {
 4930              		.loc 19 990 23 view .LVU1350
 4931 0178 D2ED007A 		vldr.32	s15, [r2]
 4932 017c 70EE677A 		vsub.f32	s15, s0, s15
 4933              	.LBB1177:
 4934              	.LBB1176:
 4935              		.loc 20 76 31 view .LVU1351
 4936 0180 F0EEE77A 		vabs.f32	s15, s15
 4937              	.LBE1176:
 4938              	.LBE1177:
 990:Veno-Echo.cpp ****                 {
 4939              		.loc 19 990 17 view .LVU1352
 4940 0184 F4EEC77A 		vcmpe.f32	s15, s14
 4941 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4942 018c E5DD     		ble	.L319
 992:Veno-Echo.cpp ****                 }
 4943              		.loc 19 992 21 is_stmt 1 view .LVU1353
 992:Veno-Echo.cpp ****                 }
 4944              		.loc 19 992 37 is_stmt 0 view .LVU1354
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 161


 4945 018e 0122     		movs	r2, #1
 4946 0190 1A70     		strb	r2, [r3]
 4947              	.L333:
 997:Veno-Echo.cpp ****         {
 4948              		.loc 19 997 9 is_stmt 1 view .LVU1355
 4949              	.LBB1178:
 4950              	.LBB1179:
 999:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 4951              		.loc 19 999 13 view .LVU1356
 4952              	.LVL277:
1000:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4953              		.loc 19 1000 13 view .LVU1357
1000:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4954              		.loc 19 1000 61 is_stmt 0 view .LVU1358
 4955 0192 F0EE080A 		vmov.f32	s1, #3.0e+0
 4956 0196 0020     		movs	r0, #0
 4957 0198 9FED221A 		vldr.32	s2, .L354+72
 4958 019c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4959              	.LVL278:
 4960              	.LBB1180:
 4961              	.LBI1180:
 4962              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 162


  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 163


  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 164


 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 165


 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 166


 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 167


 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 168


 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 169


 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 170


 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 171


 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 172


 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 173


 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 174


 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 175


 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 176


 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 177


 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 178


 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 179


1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 180


1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 181


1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 182


1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 183


1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 184


1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 185


1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 186


1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 187


1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 188


1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 189


1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 190


1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 191


1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 192


1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 4963              		.loc 22 1756 3 is_stmt 1 view .LVU1359
 4964              	.LBB1181:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 4965              		.loc 22 1757 5 view .LVU1360
 4966              		.loc 22 1757 28 is_stmt 0 view .LVU1361
 4967 01a0 B8FE400A 		vrinta.f32	s0, s0
 4968              	.LVL279:
 4969              		.loc 22 1757 28 view .LVU1362
 4970              	.LBE1181:
 4971              	.LBE1180:
1001:Veno-Echo.cpp ****             //save setting:
 4972              		.loc 19 1001 13 is_stmt 1 view .LVU1363
 4973              	.LBB1182:
 4974              	.LBI1182:
1852:Veno-Echo.cpp **** {
 4975              		.loc 19 1852 7 view .LVU1364
 4976              	.LBB1183:
1854:Veno-Echo.cpp ****     switch(ratio)
 4977              		.loc 19 1854 5 view .LVU1365
1855:Veno-Echo.cpp ****     {
 4978              		.loc 19 1855 5 view .LVU1366
 4979              	.LBE1183:
 4980              	.LBE1182:
1000:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4981              		.loc 19 1000 130 is_stmt 0 view .LVU1367
 4982 01a4 FCEEC07A 		vcvt.u32.f32	s15, s0
 4983 01a8 17EE903A 		vmov	r3, s15	@ int
 4984 01ac 013B     		subs	r3, r3, #1
 4985 01ae DBB2     		uxtb	r3, r3
 4986 01b0 022B     		cmp	r3, #2
 4987 01b2 0CD9     		bls	.L337
 4988 01b4 B7EE008A 		vmov.f32	s16, #1.0e+0
 4989              	.L338:
 4990              	.LVL280:
 4991              	.LBB1185:
 4992              	.LBB1184:
1878:Veno-Echo.cpp **** }
 4993              		.loc 19 1878 1 is_stmt 1 view .LVU1368
1878:Veno-Echo.cpp **** }
 4994              		.loc 19 1878 1 is_stmt 0 view .LVU1369
 4995              	.LBE1184:
 4996              	.LBE1185:
1001:Veno-Echo.cpp ****             //save setting:
 4997              		.loc 19 1001 34 view .LVU1370
 4998 01b8 B0EE480A 		vmov.f32	s0, s16
 4999              	.LVL281:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 193


1001:Veno-Echo.cpp ****             //save setting:
 5000              		.loc 19 1001 34 view .LVU1371
 5001 01bc 1148     		ldr	r0, .L354+40
 5002 01be FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5003              	.LVL282:
1003:Veno-Echo.cpp ****         }
 5004              		.loc 19 1003 13 is_stmt 1 view .LVU1372
1003:Veno-Echo.cpp ****         }
 5005              		.loc 19 1003 13 is_stmt 0 view .LVU1373
 5006              	.LBE1179:
 5007              	.LBE1178:
 5008              	.LBE1189:
 5009              	.LBE1195:
1854:Veno-Echo.cpp ****     switch(ratio)
 5010              		.loc 19 1854 5 is_stmt 1 view .LVU1374
1855:Veno-Echo.cpp ****     {
 5011              		.loc 19 1855 5 view .LVU1375
1878:Veno-Echo.cpp **** }
 5012              		.loc 19 1878 1 view .LVU1376
 5013              	.LBB1196:
 5014              	.LBB1190:
 5015              	.LBB1187:
 5016              	.LBB1186:
1003:Veno-Echo.cpp ****         }
 5017              		.loc 19 1003 34 is_stmt 0 view .LVU1377
 5018 01c2 194B     		ldr	r3, .L354+76
 5019 01c4 83ED018A 		vstr.32	s16, [r3, #4]
 5020              	.LBE1186:
 5021              	.LBE1187:
 5022              	.LBE1190:
 5023              	.LBE1196:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 5024              		.loc 19 1007 1 view .LVU1378
 5025 01c8 BDEC028B 		vldm	sp!, {d8}
 5026              		.cfi_remember_state
 5027              		.cfi_restore 80
 5028              		.cfi_restore 81
 5029              		.cfi_def_cfa_offset 8
 5030 01cc 10BD     		pop	{r4, pc}
 5031              	.LVL283:
 5032              	.L337:
 5033              		.cfi_restore_state
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 5034              		.loc 19 1007 1 view .LVU1379
 5035 01ce 174A     		ldr	r2, .L354+80
 5036 01d0 02EB8303 		add	r3, r2, r3, lsl #2
 5037 01d4 93ED008A 		vldr.32	s16, [r3]
 5038 01d8 EEE7     		b	.L338
 5039              	.L355:
 5040 01da 00BF     		.align	2
 5041              	.L354:
 5042 01dc 18000000 		.word	.LANCHOR4+24
 5043 01e0 00000000 		.word	.LANCHOR79
 5044 01e4 ABAAAA2A 		.word	715827883
 5045 01e8 00000000 		.word	.LANCHOR8
 5046 01ec 00000000 		.word	.LANCHOR80
 5047 01f0 00000000 		.word	.LANCHOR81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 194


 5048 01f4 00000000 		.word	.LANCHOR82
 5049 01f8 00000000 		.word	.LANCHOR6
 5050 01fc 00000000 		.word	.LANCHOR83
 5051 0200 00000000 		.word	.LANCHOR74
 5052 0204 00000000 		.word	.LANCHOR73
 5053 0208 00000000 		.word	.LANCHOR76
 5054 020c 00004042 		.word	1111490560
 5055 0210 00000000 		.word	.LANCHOR1
 5056 0214 00000000 		.word	.LANCHOR78
 5057 0218 0AD7A33B 		.word	1000593162
 5058 021c 00000000 		.word	.LANCHOR84
 5059 0220 00000000 		.word	.LANCHOR85
 5060 0224 00000000 		.word	0
 5061 0228 00000000 		.word	.LANCHOR20
 5062 022c 00000000 		.word	.LANCHOR86
 5063              		.cfi_endproc
 5064              	.LFE4294:
 5066              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 5067              		.align	1
 5068              		.p2align 2,,3
 5069              		.global	_Z17Update_DelayTimeLv
 5070              		.syntax unified
 5071              		.thumb
 5072              		.thumb_func
 5073              		.fpu fpv5-d16
 5075              	_Z17Update_DelayTimeLv:
 5076              	.LFB4292:
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5077              		.loc 19 794 1 is_stmt 1 view -0
 5078              		.cfi_startproc
 5079              		@ args = 0, pretend = 0, frame = 0
 5080              		@ frame_needed = 0, uses_anonymous_args = 0
 795:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 5081              		.loc 19 795 5 view .LVU1381
 796:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 5082              		.loc 19 796 5 view .LVU1382
 797:Veno-Echo.cpp ****     
 5083              		.loc 19 797 5 view .LVU1383
 799:Veno-Echo.cpp **** 
 5084              		.loc 19 799 5 view .LVU1384
 802:Veno-Echo.cpp **** 
 5085              		.loc 19 802 5 view .LVU1385
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5086              		.loc 19 794 1 is_stmt 0 view .LVU1386
 5087 0000 10B5     		push	{r4, lr}
 5088              		.cfi_def_cfa_offset 8
 5089              		.cfi_offset 4, -8
 5090              		.cfi_offset 14, -4
 802:Veno-Echo.cpp **** 
 5091              		.loc 19 802 44 view .LVU1387
 5092 0002 0222     		movs	r2, #2
 5093 0004 0721     		movs	r1, #7
 5094 0006 8748     		ldr	r0, .L394
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5095              		.loc 19 794 1 view .LVU1388
 5096 0008 2DED028B 		vpush.64	{d8}
 5097              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 195


 5098              		.cfi_offset 80, -16
 5099              		.cfi_offset 81, -12
 802:Veno-Echo.cpp **** 
 5100              		.loc 19 802 44 view .LVU1389
 5101 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5102              	.LVL284:
 807:Veno-Echo.cpp **** 
 5103              		.loc 19 807 26 view .LVU1390
 5104 0010 8549     		ldr	r1, .L394+4
 807:Veno-Echo.cpp **** 
 5105              		.loc 19 807 31 view .LVU1391
 5106 0012 864B     		ldr	r3, .L394+8
 5107              	.LVL285:
 806:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5108              		.loc 19 806 5 is_stmt 1 view .LVU1392
 807:Veno-Echo.cpp **** 
 5109              		.loc 19 807 5 view .LVU1393
 807:Veno-Echo.cpp **** 
 5110              		.loc 19 807 26 is_stmt 0 view .LVU1394
 5111 0014 0A68     		ldr	r2, [r1]
 5112              	.LBB1197:
 809:Veno-Echo.cpp ****     {
 5113              		.loc 19 809 9 view .LVU1395
 5114 0016 8648     		ldr	r0, .L394+12
 5115              	.LBE1197:
 807:Veno-Echo.cpp **** 
 5116              		.loc 19 807 26 view .LVU1396
 5117 0018 0132     		adds	r2, r2, #1
 5118              	.LBB1265:
 809:Veno-Echo.cpp ****     {
 5119              		.loc 19 809 5 view .LVU1397
 5120 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5121              	.LBE1265:
 807:Veno-Echo.cpp **** 
 5122              		.loc 19 807 31 view .LVU1398
 5123 001c 83FB0243 		smull	r4, r3, r3, r2
 5124 0020 D417     		asrs	r4, r2, #31
 5125 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 5126 0026 03EB4303 		add	r3, r3, r3, lsl #1
 5127 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 5128              	.LBB1266:
 5129              	.LBB1198:
 813:Veno-Echo.cpp ****         {
 5130              		.loc 19 813 19 view .LVU1399
 5131 002e 814A     		ldr	r2, .L394+16
 5132              	.LBE1198:
 5133              	.LBE1266:
 807:Veno-Echo.cpp **** 
 5134              		.loc 19 807 14 view .LVU1400
 5135 0030 0B60     		str	r3, [r1]
 809:Veno-Echo.cpp ****     {
 5136              		.loc 19 809 5 is_stmt 1 view .LVU1401
 5137              	.LBB1267:
 5138 0032 0028     		cmp	r0, #0
 5139 0034 40F08880 		bne	.L357
 5140              	.LBB1219:
 811:Veno-Echo.cpp ****         //udpate pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 196


 5141              		.loc 19 811 9 view .LVU1402
 813:Veno-Echo.cpp ****         {
 5142              		.loc 19 813 9 view .LVU1403
 5143 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5144 003a 0029     		cmp	r1, #0
 5145 003c 41D0     		beq	.L358
 815:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 5146              		.loc 19 815 13 view .LVU1404
 816:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 5147              		.loc 19 816 31 is_stmt 0 view .LVU1405
 5148 003e 7E4C     		ldr	r4, .L394+20
 817:Veno-Echo.cpp ****         } 
 5149              		.loc 19 817 28 view .LVU1406
 5150 0040 7E49     		ldr	r1, .L394+24
 815:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 5151              		.loc 19 815 23 view .LVU1407
 5152 0042 1070     		strb	r0, [r2]
 816:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 5153              		.loc 19 816 13 is_stmt 1 view .LVU1408
 816:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 5154              		.loc 19 816 31 is_stmt 0 view .LVU1409
 5155 0044 2070     		strb	r0, [r4]
 817:Veno-Echo.cpp ****         } 
 5156              		.loc 19 817 13 is_stmt 1 view .LVU1410
 817:Veno-Echo.cpp ****         } 
 5157              		.loc 19 817 28 is_stmt 0 view .LVU1411
 5158 0046 81ED000A 		vstr.32	s0, [r1]
 5159              	.L359:
 830:Veno-Echo.cpp **** 
 5160              		.loc 19 830 9 is_stmt 1 view .LVU1412
 5161              	.LVL286:
 832:Veno-Echo.cpp ****     {
 5162              		.loc 19 832 5 view .LVU1413
 840:Veno-Echo.cpp ****     }
 5163              		.loc 19 840 9 view .LVU1414
 5164              	.LBB1199:
 5165              	.LBI1199:
2038:Veno-Echo.cpp **** {
 5166              		.loc 19 2038 7 view .LVU1415
 5167              	.LBB1200:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5168              		.loc 19 2040 5 view .LVU1416
2041:Veno-Echo.cpp **** 
 5169              		.loc 19 2041 5 view .LVU1417
 5170              	.LBE1200:
 5171              	.LBE1199:
 840:Veno-Echo.cpp ****     }
 5172              		.loc 19 840 32 is_stmt 0 view .LVU1418
 5173 004a 7D49     		ldr	r1, .L394+28
 5174              	.LBB1205:
 5175              	.LBB1201:
2041:Veno-Echo.cpp **** 
 5176              		.loc 19 2041 39 view .LVU1419
 5177 004c B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 5178              		.loc 19 2041 49 view .LVU1420
 5179 0050 B6EE006A 		vmov.f32	s12, #5.0e-1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 197


 5180              	.LBE1201:
 5181              	.LBE1205:
 840:Veno-Echo.cpp ****     }
 5182              		.loc 19 840 32 view .LVU1421
 5183 0054 7B4A     		ldr	r2, .L394+32
 5184              	.LBB1206:
 5185              	.LBB1202:
2041:Veno-Echo.cpp **** 
 5186              		.loc 19 2041 39 view .LVU1422
 5187 0056 D1ED007A 		vldr.32	s15, [r1]
2041:Veno-Echo.cpp **** 
 5188              		.loc 19 2041 12 view .LVU1423
 5189 005a F0EE006A 		vmov.f32	s13, #2.0e+0
 5190 005e 92ED008A 		vldr.32	s16, [r2]
2041:Veno-Echo.cpp **** 
 5191              		.loc 19 2041 39 view .LVU1424
 5192 0062 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 5193              		.loc 19 2041 49 view .LVU1425
 5194 0066 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 5195              		.loc 19 2041 12 view .LVU1426
 5196 006a A7EEA68A 		vfma.f32	s16, s15, s13
 5197              	.LVL287:
2043:Veno-Echo.cpp ****     {
 5198              		.loc 19 2043 5 is_stmt 1 view .LVU1427
 5199 006e B5EEC08A 		vcmpe.f32	s16, #0
 5200 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5201 0076 76D4     		bmi	.L391
2048:Veno-Echo.cpp ****     {
 5202              		.loc 19 2048 5 view .LVU1428
2050:Veno-Echo.cpp ****     }
 5203              		.loc 19 2050 16 is_stmt 0 view .LVU1429
 5204 0078 B4EE478A 		vcmp.f32	s16, s14
 5205              	.LBE1202:
 5206              	.LBE1206:
 843:Veno-Echo.cpp ****     {
 5207              		.loc 19 843 9 view .LVU1430
 5208 007c 724A     		ldr	r2, .L394+36
 843:Veno-Echo.cpp ****     {
 5209              		.loc 19 843 5 view .LVU1431
 5210 007e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5211              	.LBB1207:
 5212              	.LBB1203:
2050:Veno-Echo.cpp ****     }
 5213              		.loc 19 2050 16 view .LVU1432
 5214 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5215 0084 37FE088A 		vselgt.f32	s16, s14, s16
 5216              	.LVL288:
2050:Veno-Echo.cpp ****     }
 5217              		.loc 19 2050 16 view .LVU1433
 5218              	.LBE1203:
 5219              	.LBE1207:
 843:Veno-Echo.cpp ****     {
 5220              		.loc 19 843 5 is_stmt 1 view .LVU1434
 5221 0088 002A     		cmp	r2, #0
 5222 008a 50D0     		beq	.L392
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 198


 5223              	.L366:
 853:Veno-Echo.cpp ****         {
 5224              		.loc 19 853 9 view .LVU1435
 5225 008c 002B     		cmp	r3, #0
 5226 008e 64D1     		bne	.L356
 856:Veno-Echo.cpp ****             {
 5227              		.loc 19 856 13 view .LVU1436
 856:Veno-Echo.cpp ****             {
 5228              		.loc 19 856 58 is_stmt 0 view .LVU1437
 5229 0090 6E48     		ldr	r0, .L394+40
 5230 0092 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5231              	.LVL289:
 856:Veno-Echo.cpp ****             {
 5232              		.loc 19 856 82 view .LVU1438
 5233 0096 6E48     		ldr	r0, .L394+44
 856:Veno-Echo.cpp ****             {
 5234              		.loc 19 856 58 view .LVU1439
 5235 0098 B0EE407A 		vmov.f32	s14, s0
 856:Veno-Echo.cpp ****             {
 5236              		.loc 19 856 82 view .LVU1440
 5237 009c B0EE480A 		vmov.f32	s0, s16
 5238 00a0 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 5239              	.LVL290:
 856:Veno-Echo.cpp ****             {
 5240              		.loc 19 856 61 view .LVU1441
 5241 00a4 DFED6B7A 		vldr.32	s15, .L394+48
 856:Veno-Echo.cpp ****             {
 5242              		.loc 19 856 35 view .LVU1442
 5243 00a8 6B48     		ldr	r0, .L394+52
 856:Veno-Echo.cpp ****             {
 5244              		.loc 19 856 61 view .LVU1443
 5245 00aa 27EE277A 		vmul.f32	s14, s14, s15
 856:Veno-Echo.cpp ****             {
 5246              		.loc 19 856 35 view .LVU1444
 5247 00ae 27EE000A 		vmul.f32	s0, s14, s0
 5248 00b2 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 5249              	.LVL291:
 856:Veno-Echo.cpp ****             {
 5250              		.loc 19 856 13 view .LVU1445
 5251 00b6 0028     		cmp	r0, #0
 5252 00b8 4FD0     		beq	.L356
 858:Veno-Echo.cpp ****             }
 5253              		.loc 19 858 17 is_stmt 1 view .LVU1446
 858:Veno-Echo.cpp ****             }
 5254              		.loc 19 858 29 is_stmt 0 view .LVU1447
 5255 00ba 684B     		ldr	r3, .L394+56
 5256 00bc 0122     		movs	r2, #1
 5257 00be 1A70     		strb	r2, [r3]
 5258 00c0 4BE0     		b	.L356
 5259              	.LVL292:
 5260              	.L358:
 821:Veno-Echo.cpp ****             {
 5261              		.loc 19 821 13 is_stmt 1 view .LVU1448
 821:Veno-Echo.cpp ****             {
 5262              		.loc 19 821 16 is_stmt 0 view .LVU1449
 5263 00c2 5D4A     		ldr	r2, .L394+20
 821:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 199


 5264              		.loc 19 821 13 view .LVU1450
 5265 00c4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5266 00c6 79B9     		cbnz	r1, .L360
 823:Veno-Echo.cpp ****                 {
 5267              		.loc 19 823 17 is_stmt 1 view .LVU1451
 5268              	.LVL293:
 5269              	.LBB1208:
 5270              	.LBI1208:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5271              		.loc 20 75 3 view .LVU1452
 5272              	.LBB1209:
 5273              		.loc 20 76 5 view .LVU1453
 5274              		.loc 20 76 5 is_stmt 0 view .LVU1454
 5275              	.LBE1209:
 5276              	.LBE1208:
 823:Veno-Echo.cpp ****                 {
 5277              		.loc 19 823 23 view .LVU1455
 5278 00c8 5C49     		ldr	r1, .L394+24
 823:Veno-Echo.cpp ****                 {
 5279              		.loc 19 823 17 view .LVU1456
 5280 00ca 9FED657A 		vldr.32	s14, .L394+60
 823:Veno-Echo.cpp ****                 {
 5281              		.loc 19 823 23 view .LVU1457
 5282 00ce D1ED007A 		vldr.32	s15, [r1]
 5283 00d2 70EE677A 		vsub.f32	s15, s0, s15
 5284              	.LBB1211:
 5285              	.LBB1210:
 5286              		.loc 20 76 31 view .LVU1458
 5287 00d6 F0EEE77A 		vabs.f32	s15, s15
 5288              	.LBE1210:
 5289              	.LBE1211:
 823:Veno-Echo.cpp ****                 {
 5290              		.loc 19 823 17 view .LVU1459
 5291 00da F4EEC77A 		vcmpe.f32	s15, s14
 5292 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5293 00e2 B2DD     		ble	.L359
 825:Veno-Echo.cpp ****                 }
 5294              		.loc 19 825 21 is_stmt 1 view .LVU1460
 825:Veno-Echo.cpp ****                 }
 5295              		.loc 19 825 39 is_stmt 0 view .LVU1461
 5296 00e4 0121     		movs	r1, #1
 5297 00e6 1170     		strb	r1, [r2]
 5298              	.L360:
 830:Veno-Echo.cpp **** 
 5299              		.loc 19 830 9 is_stmt 1 view .LVU1462
 5300              	.LVL294:
 832:Veno-Echo.cpp ****     {
 5301              		.loc 19 832 5 view .LVU1463
 834:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 5302              		.loc 19 834 9 view .LVU1464
 5303              	.LBB1212:
 5304              	.LBI1212:
2038:Veno-Echo.cpp **** {
 5305              		.loc 19 2038 7 view .LVU1465
 5306              	.LBB1213:
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5307              		.loc 19 2040 5 view .LVU1466
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 200


2041:Veno-Echo.cpp **** 
 5308              		.loc 19 2041 5 view .LVU1467
 5309              	.LBE1213:
 5310              	.LBE1212:
 834:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 5311              		.loc 19 834 32 is_stmt 0 view .LVU1468
 5312 00e8 554A     		ldr	r2, .L394+28
 5313              	.LBB1216:
 5314              	.LBB1214:
2041:Veno-Echo.cpp **** 
 5315              		.loc 19 2041 39 view .LVU1469
 5316 00ea B7EE007A 		vmov.f32	s14, #1.0e+0
2041:Veno-Echo.cpp **** 
 5317              		.loc 19 2041 49 view .LVU1470
 5318 00ee B6EE006A 		vmov.f32	s12, #5.0e-1
2041:Veno-Echo.cpp **** 
 5319              		.loc 19 2041 39 view .LVU1471
 5320 00f2 D2ED007A 		vldr.32	s15, [r2]
2041:Veno-Echo.cpp **** 
 5321              		.loc 19 2041 12 view .LVU1472
 5322 00f6 F0EE006A 		vmov.f32	s13, #2.0e+0
 5323 00fa B0EE408A 		vmov.f32	s16, s0
2041:Veno-Echo.cpp **** 
 5324              		.loc 19 2041 39 view .LVU1473
 5325 00fe 77EE677A 		vsub.f32	s15, s14, s15
2041:Veno-Echo.cpp **** 
 5326              		.loc 19 2041 49 view .LVU1474
 5327 0102 77EEC67A 		vsub.f32	s15, s15, s12
2041:Veno-Echo.cpp **** 
 5328              		.loc 19 2041 12 view .LVU1475
 5329 0106 A7EEA68A 		vfma.f32	s16, s15, s13
 5330              	.LVL295:
2043:Veno-Echo.cpp ****     {
 5331              		.loc 19 2043 5 is_stmt 1 view .LVU1476
 5332 010a B5EEC08A 		vcmpe.f32	s16, #0
 5333 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5334 0112 25D4     		bmi	.L393
2048:Veno-Echo.cpp ****     {
 5335              		.loc 19 2048 5 view .LVU1477
2050:Veno-Echo.cpp ****     }
 5336              		.loc 19 2050 16 is_stmt 0 view .LVU1478
 5337 0114 B4EE478A 		vcmp.f32	s16, s14
 5338 0118 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5339 011c 37FE088A 		vselgt.f32	s16, s14, s16
 5340              	.LVL296:
 5341              	.L362:
 5342              		.loc 19 2053 5 is_stmt 1 view .LVU1479
 5343              		.loc 19 2053 5 is_stmt 0 view .LVU1480
 5344              	.LBE1214:
 5345              	.LBE1216:
 835:Veno-Echo.cpp ****     }
 5346              		.loc 19 835 9 is_stmt 1 view .LVU1481
 835:Veno-Echo.cpp ****     }
 5347              		.loc 19 835 25 is_stmt 0 view .LVU1482
 5348 0120 484A     		ldr	r2, .L394+32
 5349 0122 82ED000A 		vstr.32	s0, [r2]
 5350              	.LVL297:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 201


 5351              	.L364:
 843:Veno-Echo.cpp ****     {
 5352              		.loc 19 843 5 is_stmt 1 view .LVU1483
 843:Veno-Echo.cpp ****     {
 5353              		.loc 19 843 9 is_stmt 0 view .LVU1484
 5354 0126 484A     		ldr	r2, .L394+36
 843:Veno-Echo.cpp ****     {
 5355              		.loc 19 843 5 view .LVU1485
 5356 0128 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5357 012a 002A     		cmp	r2, #0
 5358 012c AED1     		bne	.L366
 5359              	.L392:
 845:Veno-Echo.cpp ****         {
 5360              		.loc 19 845 9 is_stmt 1 view .LVU1486
 5361 012e A3B9     		cbnz	r3, .L356
 847:Veno-Echo.cpp ****         }
 5362              		.loc 19 847 13 view .LVU1487
 847:Veno-Echo.cpp ****         }
 5363              		.loc 19 847 36 is_stmt 0 view .LVU1488
 5364 0130 B7EE000A 		vmov.f32	s0, #1.0e+0
 5365              	.LVL298:
 847:Veno-Echo.cpp ****         }
 5366              		.loc 19 847 36 view .LVU1489
 5367 0134 0121     		movs	r1, #1
 5368 0136 4848     		ldr	r0, .L394+52
 5369 0138 30EE480A 		vsub.f32	s0, s0, s16
 5370              	.LBE1219:
 5371              	.LBE1267:
 896:Veno-Echo.cpp **** 
 5372              		.loc 19 896 1 view .LVU1490
 5373 013c BDEC028B 		vldm	sp!, {d8}
 5374              		.cfi_remember_state
 5375              		.cfi_restore 80
 5376              		.cfi_restore 81
 5377              		.cfi_def_cfa_offset 8
 5378              	.LVL299:
 896:Veno-Echo.cpp **** 
 5379              		.loc 19 896 1 view .LVU1491
 5380 0140 BDE81040 		pop	{r4, lr}
 5381              		.cfi_restore 14
 5382              		.cfi_restore 4
 5383              		.cfi_def_cfa_offset 0
 5384              	.LBB1268:
 5385              	.LBB1220:
 847:Veno-Echo.cpp ****         }
 5386              		.loc 19 847 36 view .LVU1492
 5387 0144 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 5388              	.LVL300:
 5389              	.L357:
 5390              		.cfi_restore_state
 847:Veno-Echo.cpp ****         }
 5391              		.loc 19 847 36 view .LVU1493
 5392              	.LBE1220:
 5393              	.LBB1221:
 866:Veno-Echo.cpp **** 
 5394              		.loc 19 866 5 is_stmt 1 view .LVU1494
 868:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 202


 5395              		.loc 19 868 5 view .LVU1495
 5396 0148 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 5397 014a 7BB9     		cbnz	r3, .L369
 870:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 5398              		.loc 19 870 9 view .LVU1496
 870:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 5399              		.loc 19 870 19 is_stmt 0 view .LVU1497
 5400 014c 0124     		movs	r4, #1
 871:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 5401              		.loc 19 871 30 view .LVU1498
 5402 014e 4548     		ldr	r0, .L394+64
 872:Veno-Echo.cpp ****     }
 5403              		.loc 19 872 27 view .LVU1499
 5404 0150 4549     		ldr	r1, .L394+68
 870:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 5405              		.loc 19 870 19 view .LVU1500
 5406 0152 1470     		strb	r4, [r2]
 871:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 5407              		.loc 19 871 9 is_stmt 1 view .LVU1501
 871:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 5408              		.loc 19 871 30 is_stmt 0 view .LVU1502
 5409 0154 0370     		strb	r3, [r0]
 872:Veno-Echo.cpp ****     }
 5410              		.loc 19 872 9 is_stmt 1 view .LVU1503
 872:Veno-Echo.cpp ****     }
 5411              		.loc 19 872 27 is_stmt 0 view .LVU1504
 5412 0156 81ED000A 		vstr.32	s0, [r1]
 5413              	.LVL301:
 5414              	.L356:
 872:Veno-Echo.cpp ****     }
 5415              		.loc 19 872 27 view .LVU1505
 5416              	.LBE1221:
 5417              	.LBE1268:
 896:Veno-Echo.cpp **** 
 5418              		.loc 19 896 1 view .LVU1506
 5419 015a BDEC028B 		vldm	sp!, {d8}
 5420              		.cfi_remember_state
 5421              		.cfi_restore 80
 5422              		.cfi_restore 81
 5423              		.cfi_def_cfa_offset 8
 5424 015e 10BD     		pop	{r4, pc}
 5425              	.LVL302:
 5426              	.L393:
 5427              		.cfi_restore_state
 5428              	.LBB1269:
 5429              	.LBB1262:
 5430              	.LBB1217:
 5431              	.LBB1215:
2045:Veno-Echo.cpp ****     }
 5432              		.loc 19 2045 16 view .LVU1507
 5433 0160 9FED428A 		vldr.32	s16, .L394+72
 5434              	.LVL303:
2045:Veno-Echo.cpp ****     }
 5435              		.loc 19 2045 16 view .LVU1508
 5436 0164 DCE7     		b	.L362
 5437              	.LVL304:
 5438              	.L391:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 203


2045:Veno-Echo.cpp ****     }
 5439              		.loc 19 2045 16 view .LVU1509
 5440              	.LBE1215:
 5441              	.LBE1217:
 5442              	.LBB1218:
 5443              	.LBB1204:
 5444 0166 9FED418A 		vldr.32	s16, .L394+72
 5445              	.LVL305:
2045:Veno-Echo.cpp ****     }
 5446              		.loc 19 2045 16 view .LVU1510
 5447 016a DCE7     		b	.L364
 5448              	.LVL306:
 5449              	.L369:
2045:Veno-Echo.cpp ****     }
 5450              		.loc 19 2045 16 view .LVU1511
 5451              	.LBE1204:
 5452              	.LBE1218:
 5453              	.LBE1262:
 5454              	.LBB1263:
 877:Veno-Echo.cpp ****         {
 5455              		.loc 19 877 9 is_stmt 1 view .LVU1512
 877:Veno-Echo.cpp ****         {
 5456              		.loc 19 877 12 is_stmt 0 view .LVU1513
 5457 016c 3D4B     		ldr	r3, .L394+64
 877:Veno-Echo.cpp ****         {
 5458              		.loc 19 877 9 view .LVU1514
 5459 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5460 0170 7AB9     		cbnz	r2, .L370
 879:Veno-Echo.cpp ****             {
 5461              		.loc 19 879 13 is_stmt 1 view .LVU1515
 5462              	.LVL307:
 5463              	.LBB1222:
 5464              	.LBI1222:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5465              		.loc 20 75 3 view .LVU1516
 5466              	.LBB1223:
 5467              		.loc 20 76 5 view .LVU1517
 5468              		.loc 20 76 5 is_stmt 0 view .LVU1518
 5469              	.LBE1223:
 5470              	.LBE1222:
 879:Veno-Echo.cpp ****             {
 5471              		.loc 19 879 19 view .LVU1519
 5472 0172 3D4A     		ldr	r2, .L394+68
 879:Veno-Echo.cpp ****             {
 5473              		.loc 19 879 13 view .LVU1520
 5474 0174 9FED3A7A 		vldr.32	s14, .L394+60
 879:Veno-Echo.cpp ****             {
 5475              		.loc 19 879 19 view .LVU1521
 5476 0178 D2ED007A 		vldr.32	s15, [r2]
 5477 017c 70EE677A 		vsub.f32	s15, s0, s15
 5478              	.LBB1225:
 5479              	.LBB1224:
 5480              		.loc 20 76 31 view .LVU1522
 5481 0180 F0EEE77A 		vabs.f32	s15, s15
 5482              	.LBE1224:
 5483              	.LBE1225:
 879:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 204


 5484              		.loc 19 879 13 view .LVU1523
 5485 0184 F4EEC77A 		vcmpe.f32	s15, s14
 5486 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5487 018c E5DD     		ble	.L356
 881:Veno-Echo.cpp ****             }
 5488              		.loc 19 881 17 is_stmt 1 view .LVU1524
 881:Veno-Echo.cpp ****             }
 5489              		.loc 19 881 38 is_stmt 0 view .LVU1525
 5490 018e 0122     		movs	r2, #1
 5491 0190 1A70     		strb	r2, [r3]
 5492              	.L370:
 886:Veno-Echo.cpp ****     {
 5493              		.loc 19 886 5 is_stmt 1 view .LVU1526
 5494              	.LBB1226:
 5495              	.LBB1227:
 888:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5496              		.loc 19 888 9 view .LVU1527
 888:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5497              		.loc 19 888 34 is_stmt 0 view .LVU1528
 5498 0192 0120     		movs	r0, #1
 5499 0194 9FED361A 		vldr.32	s2, .L394+76
 5500 0198 DFED360A 		vldr.32	s1, .L394+80
 5501 019c FFF7FEFF 		bl	_Z5scalefff9CurveType
 5502              	.LVL308:
 5503              	.LBB1228:
 5504              	.LBB1229:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5505              		.loc 19 70 28 view .LVU1529
 5506 01a0 354B     		ldr	r3, .L394+84
 5507              	.LVL309:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5508              		.loc 19 70 28 view .LVU1530
 5509              	.LBE1229:
 5510              	.LBE1228:
 889:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5511              		.loc 19 889 9 is_stmt 1 view .LVU1531
 5512              	.LBB1243:
 5513              	.LBI1228:
  68:Veno-Echo.cpp ****     {
 5514              		.loc 19 68 10 view .LVU1532
 5515              	.LBB1241:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5516              		.loc 19 70 9 view .LVU1533
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5517              		.loc 19 70 53 is_stmt 0 view .LVU1534
 5518 01a2 DFED2F6A 		vldr.32	s13, .L394+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5519              		.loc 19 70 28 view .LVU1535
 5520 01a6 D3ED017A 		vldr.32	s15, [r3, #4]
 5521              	.LVL310:
 5522              	.LBB1230:
 5523              	.LBI1230:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5524              		.loc 20 75 3 is_stmt 1 view .LVU1536
 5525              	.LBB1231:
 5526              		.loc 20 76 5 view .LVU1537
 5527              		.loc 20 76 5 is_stmt 0 view .LVU1538
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 205


 5528              	.LBE1231:
 5529              	.LBE1230:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5530              		.loc 19 70 15 view .LVU1539
 5531 01aa 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5532              		.loc 19 70 53 view .LVU1540
 5533 01ae 67EEA67A 		vmul.f32	s15, s15, s13
 5534              	.LBB1233:
 5535              	.LBB1232:
 5536              		.loc 20 76 31 view .LVU1541
 5537 01b2 B0EEC77A 		vabs.f32	s14, s14
 5538              	.LBE1232:
 5539              	.LBE1233:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5540              		.loc 19 70 9 view .LVU1542
 5541 01b6 B4EEE77A 		vcmpe.f32	s14, s15
 5542 01ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5543 01be 0DDD     		ble	.L377
  74:Veno-Echo.cpp ****             //del -> Reset();
 5544              		.loc 19 74 29 view .LVU1543
 5545 01c0 FCEEC07A 		vcvt.u32.f32	s15, s0
 5546              	.LBB1234:
 5547              	.LBB1235:
 5548              		.loc 18 72 9 view .LVU1544
 5549 01c4 2D4C     		ldr	r4, .L394+88
 5550              	.LBE1235:
 5551              	.LBE1234:
 5552              	.LBE1241:
 5553              	.LBE1243:
 889:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5554              		.loc 19 889 33 view .LVU1545
 5555 01c6 1968     		ldr	r1, [r3]
 5556              	.LBB1244:
 5557              	.LBB1242:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5558              		.loc 19 73 13 is_stmt 1 view .LVU1546
 5559              	.LBB1238:
 5560              	.LBB1236:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5561              		.loc 18 71 9 is_stmt 0 view .LVU1547
 5562 01c8 0020     		movs	r0, #0
 5563              	.LBE1236:
 5564              	.LBE1238:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5565              		.loc 19 73 27 view .LVU1548
 5566 01ca 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5567              		.loc 19 74 13 is_stmt 1 view .LVU1549
 5568              	.LVL311:
 5569              	.LBB1239:
 5570              	.LBI1234:
  69:delayline_reverse.h ****     {
 5571              		.loc 18 69 17 view .LVU1550
  69:delayline_reverse.h ****     {
 5572              		.loc 18 69 17 is_stmt 0 view .LVU1551
 5573              	.LBE1239:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 206


  74:Veno-Echo.cpp ****             //del -> Reset();
 5574              		.loc 19 74 29 view .LVU1552
 5575 01ce 17EE902A 		vmov	r2, s15	@ int
 5576              	.LBB1240:
 5577              	.LBB1237:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5578              		.loc 18 71 9 view .LVU1553
 5579 01d2 0860     		str	r0, [r1]	@ float
 5580              		.loc 18 72 9 view .LVU1554
 5581 01d4 A242     		cmp	r2, r4
 5582 01d6 28BF     		it	cs
 5583 01d8 2246     		movcs	r2, r4
 5584 01da 0A61     		str	r2, [r1, #16]
 5585              	.LVL312:
 5586              	.L377:
 5587              		.loc 18 72 9 view .LVU1555
 5588              	.LBE1237:
 5589              	.LBE1240:
 5590              	.LBE1242:
 5591              	.LBE1244:
 890:Veno-Echo.cpp ****         //save setting:
 5592              		.loc 19 890 9 is_stmt 1 view .LVU1556
 5593              	.LBB1245:
 5594              	.LBI1245:
  68:Veno-Echo.cpp ****     {
 5595              		.loc 19 68 10 view .LVU1557
 5596              	.LBB1246:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5597              		.loc 19 70 9 view .LVU1558
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5598              		.loc 19 70 28 is_stmt 0 view .LVU1559
 5599 01dc 284B     		ldr	r3, .L394+92
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5600              		.loc 19 70 53 view .LVU1560
 5601 01de DFED206A 		vldr.32	s13, .L394+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5602              		.loc 19 70 28 view .LVU1561
 5603 01e2 D3ED017A 		vldr.32	s15, [r3, #4]
 5604              	.LVL313:
 5605              	.LBB1247:
 5606              	.LBI1247:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5607              		.loc 20 75 3 is_stmt 1 view .LVU1562
 5608              	.LBB1248:
 5609              		.loc 20 76 5 view .LVU1563
 5610              		.loc 20 76 5 is_stmt 0 view .LVU1564
 5611              	.LBE1248:
 5612              	.LBE1247:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5613              		.loc 19 70 15 view .LVU1565
 5614 01e6 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5615              		.loc 19 70 53 view .LVU1566
 5616 01ea 67EEA67A 		vmul.f32	s15, s15, s13
 5617              	.LBB1250:
 5618              	.LBB1249:
 5619              		.loc 20 76 31 view .LVU1567
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 207


 5620 01ee B0EEC77A 		vabs.f32	s14, s14
 5621              	.LBE1249:
 5622              	.LBE1250:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5623              		.loc 19 70 9 view .LVU1568
 5624 01f2 B4EEE77A 		vcmpe.f32	s14, s15
 5625 01f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5626 01fa 0DDD     		ble	.L372
  74:Veno-Echo.cpp ****             //del -> Reset();
 5627              		.loc 19 74 29 view .LVU1569
 5628 01fc FCEEC07A 		vcvt.u32.f32	s15, s0
 5629              	.LBB1251:
 5630              	.LBB1252:
 5631              		.loc 18 72 9 view .LVU1570
 5632 0200 1E4C     		ldr	r4, .L394+88
 5633              	.LBE1252:
 5634              	.LBE1251:
 5635              	.LBE1246:
 5636              	.LBE1245:
 890:Veno-Echo.cpp ****         //save setting:
 5637              		.loc 19 890 33 view .LVU1571
 5638 0202 1968     		ldr	r1, [r3]
 5639              	.LBB1259:
 5640              	.LBB1258:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5641              		.loc 19 73 13 is_stmt 1 view .LVU1572
 5642              	.LBB1255:
 5643              	.LBB1253:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5644              		.loc 18 71 9 is_stmt 0 view .LVU1573
 5645 0204 0020     		movs	r0, #0
 5646              	.LBE1253:
 5647              	.LBE1255:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5648              		.loc 19 73 27 view .LVU1574
 5649 0206 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5650              		.loc 19 74 13 is_stmt 1 view .LVU1575
 5651              	.LVL314:
 5652              	.LBB1256:
 5653              	.LBI1251:
  69:delayline_reverse.h ****     {
 5654              		.loc 18 69 17 view .LVU1576
  69:delayline_reverse.h ****     {
 5655              		.loc 18 69 17 is_stmt 0 view .LVU1577
 5656              	.LBE1256:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5657              		.loc 19 74 29 view .LVU1578
 5658 020a 17EE902A 		vmov	r2, s15	@ int
 5659              	.LBB1257:
 5660              	.LBB1254:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5661              		.loc 18 71 9 view .LVU1579
 5662 020e 0860     		str	r0, [r1]	@ float
 5663              		.loc 18 72 9 view .LVU1580
 5664 0210 A242     		cmp	r2, r4
 5665 0212 28BF     		it	cs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 208


 5666 0214 2246     		movcs	r2, r4
 5667 0216 0A61     		str	r2, [r1, #16]
 5668              	.LVL315:
 5669              	.L372:
 5670              		.loc 18 72 9 view .LVU1581
 5671              	.LBE1254:
 5672              	.LBE1257:
 5673              	.LBE1258:
 5674              	.LBE1259:
 892:Veno-Echo.cpp ****     }
 5675              		.loc 19 892 9 is_stmt 1 view .LVU1582
 892:Veno-Echo.cpp ****     }
 5676              		.loc 19 892 31 is_stmt 0 view .LVU1583
 5677 0218 1A4B     		ldr	r3, .L394+96
 5678              	.LBE1227:
 5679              	.LBE1226:
 5680              	.LBE1263:
 5681              	.LBE1269:
 896:Veno-Echo.cpp **** 
 5682              		.loc 19 896 1 view .LVU1584
 5683 021a BDEC028B 		vldm	sp!, {d8}
 5684              		.cfi_restore 80
 5685              		.cfi_restore 81
 5686              		.cfi_def_cfa_offset 8
 5687              	.LBB1270:
 5688              	.LBB1264:
 5689              	.LBB1261:
 5690              	.LBB1260:
 892:Veno-Echo.cpp ****     }
 5691              		.loc 19 892 31 view .LVU1585
 5692 021e 83ED000A 		vstr.32	s0, [r3]
 5693              	.LBE1260:
 5694              	.LBE1261:
 5695              	.LBE1264:
 5696              	.LBE1270:
 896:Veno-Echo.cpp **** 
 5697              		.loc 19 896 1 view .LVU1586
 5698 0222 10BD     		pop	{r4, pc}
 5699              	.L395:
 5700              		.align	2
 5701              	.L394:
 5702 0224 18000000 		.word	.LANCHOR4+24
 5703 0228 00000000 		.word	.LANCHOR87
 5704 022c ABAAAA2A 		.word	715827883
 5705 0230 00000000 		.word	.LANCHOR8
 5706 0234 00000000 		.word	.LANCHOR88
 5707 0238 00000000 		.word	.LANCHOR89
 5708 023c 00000000 		.word	.LANCHOR90
 5709 0240 00000000 		.word	.LANCHOR5
 5710 0244 00000000 		.word	.LANCHOR91
 5711 0248 00000000 		.word	.LANCHOR74
 5712 024c 00000000 		.word	.LANCHOR73
 5713 0250 00000000 		.word	.LANCHOR75
 5714 0254 00004042 		.word	1111490560
 5715 0258 00000000 		.word	.LANCHOR0
 5716 025c 00000000 		.word	.LANCHOR77
 5717 0260 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 209


 5718 0264 00000000 		.word	.LANCHOR92
 5719 0268 00000000 		.word	.LANCHOR93
 5720 026c 00000000 		.word	0
 5721 0270 0050C346 		.word	1187205120
 5722 0274 00606A48 		.word	1214930944
 5723 0278 00000000 		.word	.LANCHOR2
 5724 027c BF270900 		.word	599999
 5725 0280 00000000 		.word	.LANCHOR3
 5726 0284 00000000 		.word	.LANCHOR20
 5727              		.cfi_endproc
 5728              	.LFE4292:
 5730              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 5731              		.align	1
 5732              		.p2align 2,,3
 5733              		.global	_Z11GetTapRatio9TapRatios
 5734              		.syntax unified
 5735              		.thumb
 5736              		.thumb_func
 5737              		.fpu fpv5-d16
 5739              	_Z11GetTapRatio9TapRatios:
 5740              	.LVL316:
 5741              	.LFB4311:
1853:Veno-Echo.cpp ****     float retVal{};
 5742              		.loc 19 1853 1 is_stmt 1 view -0
 5743              		.cfi_startproc
 5744              		@ args = 0, pretend = 0, frame = 0
 5745              		@ frame_needed = 0, uses_anonymous_args = 0
 5746              		@ link register save eliminated.
1854:Veno-Echo.cpp ****     switch(ratio)
 5747              		.loc 19 1854 5 view .LVU1588
1855:Veno-Echo.cpp ****     {
 5748              		.loc 19 1855 5 view .LVU1589
 5749 0000 0138     		subs	r0, r0, #1
 5750              	.LVL317:
1855:Veno-Echo.cpp ****     {
 5751              		.loc 19 1855 5 is_stmt 0 view .LVU1590
 5752 0002 C0B2     		uxtb	r0, r0
 5753 0004 0228     		cmp	r0, #2
 5754 0006 05D8     		bhi	.L398
 5755 0008 044B     		ldr	r3, .L399
 5756 000a 03EB8000 		add	r0, r3, r0, lsl #2
 5757 000e 90ED000A 		vldr.32	s0, [r0]
 5758 0012 7047     		bx	lr
 5759              	.L398:
1853:Veno-Echo.cpp ****     float retVal{};
 5760              		.loc 19 1853 1 view .LVU1591
 5761 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 5762              	.LVL318:
1878:Veno-Echo.cpp **** }
 5763              		.loc 19 1878 1 is_stmt 1 view .LVU1592
1879:Veno-Echo.cpp **** 
 5764              		.loc 19 1879 1 is_stmt 0 view .LVU1593
 5765 0018 7047     		bx	lr
 5766              	.L400:
 5767 001a 00BF     		.align	2
 5768              	.L399:
 5769 001c 00000000 		.word	.LANCHOR86
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 210


 5770              		.cfi_endproc
 5771              	.LFE4311:
 5773              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5774              		.align	1
 5775              		.p2align 2,,3
 5776              		.global	_Z13ApplySettingsRK8Settings
 5777              		.syntax unified
 5778              		.thumb
 5779              		.thumb_func
 5780              		.fpu fpv5-d16
 5782              	_Z13ApplySettingsRK8Settings:
 5783              	.LVL319:
 5784              	.LFB4312:
1882:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5785              		.loc 19 1882 1 is_stmt 1 view -0
 5786              		.cfi_startproc
 5787              		@ args = 0, pretend = 0, frame = 0
 5788              		@ frame_needed = 0, uses_anonymous_args = 0
1883:Veno-Echo.cpp ****     {
 5789              		.loc 19 1883 5 view .LVU1595
 5790 0000 9FEDCF7A 		vldr.32	s14, .L469
1883:Veno-Echo.cpp ****     {
 5791              		.loc 19 1883 17 is_stmt 0 view .LVU1596
 5792 0004 D0ED007A 		vldr.32	s15, [r0]
1883:Veno-Echo.cpp ****     {
 5793              		.loc 19 1883 5 view .LVU1597
 5794 0008 F4EEC77A 		vcmpe.f32	s15, s14
1882:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5795              		.loc 19 1882 1 view .LVU1598
 5796 000c 38B5     		push	{r3, r4, r5, lr}
 5797              		.cfi_def_cfa_offset 16
 5798              		.cfi_offset 3, -16
 5799              		.cfi_offset 4, -12
 5800              		.cfi_offset 5, -8
 5801              		.cfi_offset 14, -4
1883:Veno-Echo.cpp ****     {
 5802              		.loc 19 1883 5 view .LVU1599
 5803 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1882:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5804              		.loc 19 1882 1 view .LVU1600
 5805 0012 0446     		mov	r4, r0
 5806              	.LBB1271:
 5807              	.LBB1272:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5808              		.loc 19 70 28 view .LVU1601
 5809 0014 CB4B     		ldr	r3, .L469+4
 5810              	.LBE1272:
 5811              	.LBE1271:
1883:Veno-Echo.cpp ****     {
 5812              		.loc 19 1883 5 view .LVU1602
 5813 0016 C0F2FD80 		blt	.L402
1883:Veno-Echo.cpp ****     {
 5814              		.loc 19 1883 43 discriminator 1 view .LVU1603
 5815 001a 9FEDCB7A 		vldr.32	s14, .L469+8
 5816 001e F4EEC77A 		vcmpe.f32	s15, s14
 5817 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5818 0026 00F2F580 		bhi	.L402
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 211


1885:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5819              		.loc 19 1885 9 is_stmt 1 view .LVU1604
 5820              	.LVL320:
 5821              	.LBB1286:
 5822              	.LBI1271:
  68:Veno-Echo.cpp ****     {
 5823              		.loc 19 68 10 view .LVU1605
 5824              	.LBB1284:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5825              		.loc 19 70 9 view .LVU1606
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5826              		.loc 19 70 28 is_stmt 0 view .LVU1607
 5827 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5828              	.LVL321:
 5829              	.LBB1273:
 5830              	.LBI1273:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5831              		.loc 20 75 3 is_stmt 1 view .LVU1608
 5832              	.LBB1274:
 5833              		.loc 20 76 5 view .LVU1609
 5834              		.loc 20 76 5 is_stmt 0 view .LVU1610
 5835              	.LBE1274:
 5836              	.LBE1273:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5837              		.loc 19 70 53 view .LVU1611
 5838 002e 9FEDC76A 		vldr.32	s12, .L469+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5839              		.loc 19 70 15 view .LVU1612
 5840 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5841              		.loc 19 70 53 view .LVU1613
 5842 0036 27EE067A 		vmul.f32	s14, s14, s12
 5843              	.LBB1276:
 5844              	.LBB1275:
 5845              		.loc 20 76 31 view .LVU1614
 5846 003a F0EEE66A 		vabs.f32	s13, s13
 5847              	.LBE1275:
 5848              	.LBE1276:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5849              		.loc 19 70 9 view .LVU1615
 5850 003e F4EEC76A 		vcmpe.f32	s13, s14
 5851 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5852 0046 0FDD     		ble	.L405
  74:Veno-Echo.cpp ****             //del -> Reset();
 5853              		.loc 19 74 29 view .LVU1616
 5854 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5855              	.LBB1277:
 5856              	.LBB1278:
 5857              		.loc 18 72 9 view .LVU1617
 5858 004c C04D     		ldr	r5, .L469+16
 5859              	.LBE1278:
 5860              	.LBE1277:
 5861              	.LBE1284:
 5862              	.LBE1286:
1885:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5863              		.loc 19 1885 33 view .LVU1618
 5864 004e 1968     		ldr	r1, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 212


 5865              	.LBB1287:
 5866              	.LBB1285:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5867              		.loc 19 73 13 is_stmt 1 view .LVU1619
 5868              	.LBB1281:
 5869              	.LBB1279:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5870              		.loc 18 71 9 is_stmt 0 view .LVU1620
 5871 0050 0020     		movs	r0, #0
 5872              	.LVL322:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5873              		.loc 18 71 9 view .LVU1621
 5874              	.LBE1279:
 5875              	.LBE1281:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5876              		.loc 19 73 27 view .LVU1622
 5877 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5878              		.loc 19 74 13 is_stmt 1 view .LVU1623
 5879              	.LVL323:
 5880              	.LBB1282:
 5881              	.LBI1277:
  69:delayline_reverse.h ****     {
 5882              		.loc 18 69 17 view .LVU1624
  69:delayline_reverse.h ****     {
 5883              		.loc 18 69 17 is_stmt 0 view .LVU1625
 5884              	.LBE1282:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5885              		.loc 19 74 29 view .LVU1626
 5886 0056 17EE102A 		vmov	r2, s14	@ int
 5887              	.LBB1283:
 5888              	.LBB1280:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5889              		.loc 18 71 9 view .LVU1627
 5890 005a 0860     		str	r0, [r1]	@ float
 5891 005c D4ED007A 		vldr.32	s15, [r4]
 5892              	.LVL324:
 5893              		.loc 18 72 9 view .LVU1628
 5894 0060 AA42     		cmp	r2, r5
 5895 0062 28BF     		it	cs
 5896 0064 2A46     		movcs	r2, r5
 5897 0066 0A61     		str	r2, [r1, #16]
 5898              	.LVL325:
 5899              	.L405:
 5900              		.loc 18 72 9 view .LVU1629
 5901              	.LBE1280:
 5902              	.LBE1283:
 5903              	.LBE1285:
 5904              	.LBE1287:
1886:Veno-Echo.cpp ****     }
 5905              		.loc 19 1886 9 is_stmt 1 view .LVU1630
 5906              	.LBB1288:
 5907              	.LBI1288:
  68:Veno-Echo.cpp ****     {
 5908              		.loc 19 68 10 view .LVU1631
 5909              	.LBB1289:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 213


 5910              		.loc 19 70 9 view .LVU1632
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5911              		.loc 19 70 28 is_stmt 0 view .LVU1633
 5912 0068 BA4B     		ldr	r3, .L469+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5913              		.loc 19 70 53 view .LVU1634
 5914 006a 9FEDB86A 		vldr.32	s12, .L469+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5915              		.loc 19 70 28 view .LVU1635
 5916 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5917              	.LVL326:
 5918              	.LBB1290:
 5919              	.LBI1290:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5920              		.loc 20 75 3 is_stmt 1 view .LVU1636
 5921              	.LBB1291:
 5922              		.loc 20 76 5 view .LVU1637
 5923              		.loc 20 76 5 is_stmt 0 view .LVU1638
 5924              	.LBE1291:
 5925              	.LBE1290:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5926              		.loc 19 70 15 view .LVU1639
 5927 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5928              		.loc 19 70 53 view .LVU1640
 5929 0076 27EE067A 		vmul.f32	s14, s14, s12
 5930              	.LBB1293:
 5931              	.LBB1292:
 5932              		.loc 20 76 31 view .LVU1641
 5933 007a F0EEE66A 		vabs.f32	s13, s13
 5934              	.LBE1292:
 5935              	.LBE1293:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5936              		.loc 19 70 9 view .LVU1642
 5937 007e F4EEC76A 		vcmpe.f32	s13, s14
 5938 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5939 0086 00F34B81 		bgt	.L465
 5940              	.LVL327:
 5941              	.L408:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5942              		.loc 19 70 9 view .LVU1643
 5943              	.LBE1289:
 5944              	.LBE1288:
1894:Veno-Echo.cpp ****     {
 5945              		.loc 19 1894 5 is_stmt 1 view .LVU1644
 5946 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1894:Veno-Echo.cpp ****     {
 5947              		.loc 19 1894 17 is_stmt 0 view .LVU1645
 5948 008e 94ED010A 		vldr.32	s0, [r4, #4]
1894:Veno-Echo.cpp ****     {
 5949              		.loc 19 1894 5 view .LVU1646
 5950 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5951 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5952 009a 06DB     		blt	.L413
1894:Veno-Echo.cpp ****     {
 5953              		.loc 19 1894 35 discriminator 1 view .LVU1647
 5954 009c F0EE087A 		vmov.f32	s15, #3.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 214


 5955 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5956 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5957 00a8 01D9     		bls	.L463
 5958              	.L413:
1900:Veno-Echo.cpp ****     }
 5959              		.loc 19 1900 9 is_stmt 1 view .LVU1648
1900:Veno-Echo.cpp ****     }
 5960              		.loc 19 1900 30 is_stmt 0 view .LVU1649
 5961 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5962              	.L463:
 5963 00ae AA48     		ldr	r0, .L469+24
 5964 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5965              	.LVL328:
1903:Veno-Echo.cpp ****     {
 5966              		.loc 19 1903 5 is_stmt 1 view .LVU1650
1903:Veno-Echo.cpp ****     {
 5967              		.loc 19 1903 17 is_stmt 0 view .LVU1651
 5968 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1903:Veno-Echo.cpp ****     {
 5969              		.loc 19 1903 5 view .LVU1652
 5970 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5971 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5972 00c0 C0F22B81 		blt	.L460
1903:Veno-Echo.cpp ****     {
 5973              		.loc 19 1903 42 discriminator 1 view .LVU1653
 5974 00c4 DFEDA56A 		vldr.32	s13, .L469+28
1909:Veno-Echo.cpp ****     }
 5975              		.loc 19 1909 18 discriminator 1 view .LVU1654
 5976 00c8 9FEDA57A 		vldr.32	s14, .L469+32
 5977 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5978 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5979 00d4 88BF     		it	hi
 5980 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5981              	.L417:
1912:Veno-Echo.cpp ****     {
 5982              		.loc 19 1912 17 view .LVU1655
 5983 00da 94ED030A 		vldr.32	s0, [r4, #12]
1912:Veno-Echo.cpp ****     {
 5984              		.loc 19 1912 5 view .LVU1656
 5985 00de 9FEDA17A 		vldr.32	s14, .L469+36
 5986 00e2 A14B     		ldr	r3, .L469+40
 5987 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5988              	.LBB1304:
 5989              	.LBB1305:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5990              		.loc 8 60 20 view .LVU1657
 5991 00e8 A04D     		ldr	r5, .L469+44
 5992 00ea C3ED007A 		vstr.32	s15, [r3]
 5993              	.LBE1305:
 5994              	.LBE1304:
1912:Veno-Echo.cpp ****     {
 5995              		.loc 19 1912 5 is_stmt 1 view .LVU1658
 5996 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5997 00f2 06DB     		blt	.L420
1912:Veno-Echo.cpp ****     {
 5998              		.loc 19 1912 40 is_stmt 0 discriminator 1 view .LVU1659
 5999 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 215


 6000 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6001 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6002 0100 01D9     		bls	.L464
 6003              	.L420:
1918:Veno-Echo.cpp ****     }
 6004              		.loc 19 1918 9 is_stmt 1 view .LVU1660
 6005              	.LVL329:
 6006              	.LBB1306:
 6007              	.LBI1306:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6008              		.loc 8 58 17 view .LVU1661
 6009              	.LBB1307:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6010              		.loc 8 60 9 view .LVU1662
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6011              		.loc 8 60 20 is_stmt 0 view .LVU1663
 6012 0102 9FED9B0A 		vldr.32	s0, .L469+48
 6013              	.LVL330:
 6014              	.L464:
 6015              		.loc 8 61 34 view .LVU1664
 6016 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6017              		.loc 8 60 20 view .LVU1665
 6018 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6019              		.loc 8 61 9 is_stmt 1 view .LVU1666
 6020              		.loc 8 61 34 is_stmt 0 view .LVU1667
 6021 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6022              	.LVL331:
 6023              	.LBE1307:
 6024              	.LBE1306:
1921:Veno-Echo.cpp ****     {
 6025              		.loc 19 1921 5 view .LVU1668
 6026 0110 DFED987A 		vldr.32	s15, .L469+52
 6027              	.LBB1309:
 6028              	.LBB1308:
 6029              		.loc 8 61 20 view .LVU1669
 6030 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6031              	.LBE1308:
 6032              	.LBE1309:
1921:Veno-Echo.cpp ****     {
 6033              		.loc 19 1921 5 is_stmt 1 view .LVU1670
1921:Veno-Echo.cpp ****     {
 6034              		.loc 19 1921 17 is_stmt 0 view .LVU1671
 6035 0118 94ED050A 		vldr.32	s0, [r4, #20]
1921:Veno-Echo.cpp ****     {
 6036              		.loc 19 1921 5 view .LVU1672
 6037 011c B4EEE70A 		vcmpe.f32	s0, s15
 6038 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6039 0124 07DB     		blt	.L424
1921:Veno-Echo.cpp ****     {
 6040              		.loc 19 1921 40 discriminator 1 view .LVU1673
 6041 0126 DFED947A 		vldr.32	s15, .L469+56
 6042 012a B4EEE70A 		vcmpe.f32	s0, s15
 6043 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6044 0132 40F2DF80 		bls	.L466
 6045              	.L424:
1930:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 216


 6046              		.loc 19 1930 9 is_stmt 1 view .LVU1674
1930:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6047              		.loc 19 1930 22 is_stmt 0 view .LVU1675
 6048 0136 9FED900A 		vldr.32	s0, .L469+56
 6049 013a 9048     		ldr	r0, .L469+60
 6050 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6051              	.LVL332:
1931:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6052              		.loc 19 1931 9 is_stmt 1 view .LVU1676
1931:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6053              		.loc 19 1931 22 is_stmt 0 view .LVU1677
 6054 0140 9FED8D0A 		vldr.32	s0, .L469+56
 6055 0144 8E48     		ldr	r0, .L469+64
 6056 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6057              	.LVL333:
1932:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6058              		.loc 19 1932 9 is_stmt 1 view .LVU1678
1932:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6059              		.loc 19 1932 27 is_stmt 0 view .LVU1679
 6060 014a 9FED8B0A 		vldr.32	s0, .L469+56
 6061 014e 8D48     		ldr	r0, .L469+68
 6062 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6063              	.LVL334:
1933:Veno-Echo.cpp ****     }
 6064              		.loc 19 1933 9 is_stmt 1 view .LVU1680
1933:Veno-Echo.cpp ****     }
 6065              		.loc 19 1933 27 is_stmt 0 view .LVU1681
 6066 0154 9FED880A 		vldr.32	s0, .L469+56
 6067 0158 8B48     		ldr	r0, .L469+72
 6068 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6069              	.LVL335:
 6070              	.L427:
1936:Veno-Echo.cpp ****     {
 6071              		.loc 19 1936 5 is_stmt 1 view .LVU1682
1936:Veno-Echo.cpp ****     {
 6072              		.loc 19 1936 17 is_stmt 0 view .LVU1683
 6073 015e 94ED040A 		vldr.32	s0, [r4, #16]
1936:Veno-Echo.cpp ****     {
 6074              		.loc 19 1936 5 view .LVU1684
 6075 0162 DFED8A7A 		vldr.32	s15, .L469+76
 6076 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6077 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6078 016e 07DB     		blt	.L428
1936:Veno-Echo.cpp ****     {
 6079              		.loc 19 1936 40 discriminator 1 view .LVU1685
 6080 0170 DFED877A 		vldr.32	s15, .L469+80
 6081 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6082 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6083 017c 40F2A780 		bls	.L467
 6084              	.L428:
1945:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6085              		.loc 19 1945 9 is_stmt 1 view .LVU1686
1945:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6086              		.loc 19 1945 22 is_stmt 0 view .LVU1687
 6087 0180 9FED840A 		vldr.32	s0, .L469+84
 6088 0184 8448     		ldr	r0, .L469+88
 6089 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 217


 6090              	.LVL336:
1946:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6091              		.loc 19 1946 9 is_stmt 1 view .LVU1688
1946:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6092              		.loc 19 1946 22 is_stmt 0 view .LVU1689
 6093 018a 9FED820A 		vldr.32	s0, .L469+84
 6094 018e 8348     		ldr	r0, .L469+92
 6095 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6096              	.LVL337:
1947:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6097              		.loc 19 1947 9 is_stmt 1 view .LVU1690
1947:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6098              		.loc 19 1947 27 is_stmt 0 view .LVU1691
 6099 0194 9FED7F0A 		vldr.32	s0, .L469+84
 6100 0198 8148     		ldr	r0, .L469+96
 6101 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6102              	.LVL338:
1948:Veno-Echo.cpp **** 
 6103              		.loc 19 1948 9 is_stmt 1 view .LVU1692
1948:Veno-Echo.cpp **** 
 6104              		.loc 19 1948 27 is_stmt 0 view .LVU1693
 6105 019e 9FED7D0A 		vldr.32	s0, .L469+84
 6106 01a2 8048     		ldr	r0, .L469+100
 6107 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6108              	.LVL339:
 6109              	.L431:
1952:Veno-Echo.cpp ****     {
 6110              		.loc 19 1952 5 is_stmt 1 view .LVU1694
1952:Veno-Echo.cpp ****     {
 6111              		.loc 19 1952 17 is_stmt 0 view .LVU1695
 6112 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1952:Veno-Echo.cpp ****     {
 6113              		.loc 19 1952 5 view .LVU1696
 6114 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6115 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6116 01b4 06DB     		blt	.L432
1952:Veno-Echo.cpp ****     {
 6117              		.loc 19 1952 38 discriminator 1 view .LVU1697
 6118 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6119 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6120 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6121 01c2 5DD9     		bls	.L468
 6122              	.L432:
1966:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6123              		.loc 19 1966 9 is_stmt 1 view .LVU1698
1966:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6124              		.loc 19 1966 26 is_stmt 0 view .LVU1699
 6125 01c4 9FED660A 		vldr.32	s0, .L469+32
 6126 01c8 6E48     		ldr	r0, .L469+68
 6127 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6128              	.LVL340:
1967:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6129              		.loc 19 1967 9 is_stmt 1 view .LVU1700
1967:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6130              		.loc 19 1967 26 is_stmt 0 view .LVU1701
 6131 01ce 9FED640A 		vldr.32	s0, .L469+32
 6132 01d2 7348     		ldr	r0, .L469+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 218


 6133 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6134              	.LVL341:
1968:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6135              		.loc 19 1968 9 is_stmt 1 view .LVU1702
1968:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6136              		.loc 19 1968 26 is_stmt 0 view .LVU1703
 6137 01d8 9FED610A 		vldr.32	s0, .L469+32
 6138 01dc 6A48     		ldr	r0, .L469+72
 6139 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6140              	.LVL342:
1969:Veno-Echo.cpp ****     }
 6141              		.loc 19 1969 9 is_stmt 1 view .LVU1704
1969:Veno-Echo.cpp ****     }
 6142              		.loc 19 1969 26 is_stmt 0 view .LVU1705
 6143 01e2 9FED5F0A 		vldr.32	s0, .L469+32
 6144 01e6 6F48     		ldr	r0, .L469+100
 6145 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6146              	.LVL343:
 6147              	.L435:
1972:Veno-Echo.cpp ****     {
 6148              		.loc 19 1972 5 is_stmt 1 view .LVU1706
1972:Veno-Echo.cpp ****     {
 6149              		.loc 19 1972 16 is_stmt 0 view .LVU1707
 6150 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1972:Veno-Echo.cpp ****     {
 6151              		.loc 19 1972 5 view .LVU1708
 6152 01f0 9FED6D7A 		vldr.32	s14, .L469+104
1978:Veno-Echo.cpp ****     }
 6153              		.loc 19 1978 21 view .LVU1709
 6154 01f4 6D4B     		ldr	r3, .L469+108
1972:Veno-Echo.cpp ****     {
 6155              		.loc 19 1972 5 view .LVU1710
 6156 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 6157 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6158 01fe 3CD4     		bmi	.L439
1976:Veno-Echo.cpp ****     {
 6159              		.loc 19 1976 14 is_stmt 1 view .LVU1711
 6160 0200 9FED6B7A 		vldr.32	s14, .L469+112
 6161 0204 F4EEC77A 		vcmpe.f32	s15, s14
 6162 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6163 020c 35DD     		ble	.L439
1978:Veno-Echo.cpp ****     }
 6164              		.loc 19 1978 9 view .LVU1712
1978:Veno-Echo.cpp ****     }
 6165              		.loc 19 1978 21 is_stmt 0 view .LVU1713
 6166 020e 0122     		movs	r2, #1
 6167 0210 1A70     		strb	r2, [r3]
1985:Veno-Echo.cpp **** 
 6168              		.loc 19 1985 1 view .LVU1714
 6169 0212 38BD     		pop	{r3, r4, r5, pc}
 6170              	.LVL344:
 6171              	.L402:
1890:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6172              		.loc 19 1890 9 is_stmt 1 view .LVU1715
 6173              	.LBB1310:
 6174              	.LBI1310:
  68:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 219


 6175              		.loc 19 68 10 view .LVU1716
 6176              	.LBB1311:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6177              		.loc 19 70 9 view .LVU1717
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6178              		.loc 19 70 28 is_stmt 0 view .LVU1718
 6179 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 6180              	.LVL345:
 6181              	.LBB1312:
 6182              	.LBI1312:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6183              		.loc 20 75 3 is_stmt 1 view .LVU1719
 6184              	.LBB1313:
 6185              		.loc 20 76 5 view .LVU1720
 6186              		.loc 20 76 5 is_stmt 0 view .LVU1721
 6187              	.LBE1313:
 6188              	.LBE1312:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6189              		.loc 19 70 15 view .LVU1722
 6190 0218 DFED666A 		vldr.32	s13, .L469+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6191              		.loc 19 70 53 view .LVU1723
 6192 021c 9FED4B6A 		vldr.32	s12, .L469+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6193              		.loc 19 70 15 view .LVU1724
 6194 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6195              		.loc 19 70 53 view .LVU1725
 6196 0224 67EE867A 		vmul.f32	s15, s15, s12
 6197              	.LBB1315:
 6198              	.LBB1314:
 6199              		.loc 20 76 31 view .LVU1726
 6200 0228 B0EEC77A 		vabs.f32	s14, s14
 6201              	.LBE1314:
 6202              	.LBE1315:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6203              		.loc 19 70 9 view .LVU1727
 6204 022c B4EEE77A 		vcmpe.f32	s14, s15
 6205 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6206 0234 06DD     		ble	.L409
 6207              	.LBE1311:
 6208              	.LBE1310:
1890:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6209              		.loc 19 1890 33 view .LVU1728
 6210 0236 1A68     		ldr	r2, [r3]
 6211              	.LBB1321:
 6212              	.LBB1320:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6213              		.loc 19 73 13 is_stmt 1 view .LVU1729
 6214              	.LBB1316:
 6215              	.LBB1317:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6216              		.loc 18 71 9 is_stmt 0 view .LVU1730
 6217 0238 0021     		movs	r1, #0
 6218              		.loc 18 72 9 view .LVU1731
 6219 023a 5F48     		ldr	r0, .L469+120
 6220              	.LVL346:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 220


 6221              		.loc 18 72 9 view .LVU1732
 6222              	.LBE1317:
 6223              	.LBE1316:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6224              		.loc 19 73 27 view .LVU1733
 6225 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6226              		.loc 19 74 13 is_stmt 1 view .LVU1734
 6227              	.LVL347:
 6228              	.LBB1319:
 6229              	.LBI1316:
  69:delayline_reverse.h ****     {
 6230              		.loc 18 69 17 view .LVU1735
 6231              	.LBB1318:
 6232              		.loc 18 72 9 is_stmt 0 view .LVU1736
 6233 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6234              		.loc 18 71 9 view .LVU1737
 6235 0242 1160     		str	r1, [r2]	@ float
 6236              	.LVL348:
 6237              	.L409:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6238              		.loc 18 71 9 view .LVU1738
 6239              	.LBE1318:
 6240              	.LBE1319:
 6241              	.LBE1320:
 6242              	.LBE1321:
1891:Veno-Echo.cpp ****     }
 6243              		.loc 19 1891 9 is_stmt 1 view .LVU1739
 6244              	.LBB1322:
 6245              	.LBI1322:
  68:Veno-Echo.cpp ****     {
 6246              		.loc 19 68 10 view .LVU1740
 6247              	.LBB1323:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6248              		.loc 19 70 9 view .LVU1741
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6249              		.loc 19 70 28 is_stmt 0 view .LVU1742
 6250 0244 434B     		ldr	r3, .L469+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6251              		.loc 19 70 15 view .LVU1743
 6252 0246 DFED5B6A 		vldr.32	s13, .L469+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6253              		.loc 19 70 28 view .LVU1744
 6254 024a D3ED017A 		vldr.32	s15, [r3, #4]
 6255              	.LVL349:
 6256              	.LBB1324:
 6257              	.LBI1324:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6258              		.loc 20 75 3 is_stmt 1 view .LVU1745
 6259              	.LBB1325:
 6260              		.loc 20 76 5 view .LVU1746
 6261              		.loc 20 76 5 is_stmt 0 view .LVU1747
 6262              	.LBE1325:
 6263              	.LBE1324:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6264              		.loc 19 70 53 view .LVU1748
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 221


 6265 024e 9FED3F6A 		vldr.32	s12, .L469+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6266              		.loc 19 70 15 view .LVU1749
 6267 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6268              		.loc 19 70 53 view .LVU1750
 6269 0256 67EE867A 		vmul.f32	s15, s15, s12
 6270              	.LBB1327:
 6271              	.LBB1326:
 6272              		.loc 20 76 31 view .LVU1751
 6273 025a B0EEC77A 		vabs.f32	s14, s14
 6274              	.LBE1326:
 6275              	.LBE1327:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6276              		.loc 19 70 9 view .LVU1752
 6277 025e B4EEE77A 		vcmpe.f32	s14, s15
 6278 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6279 0266 7FF710AF 		ble	.L408
 6280              	.LBE1323:
 6281              	.LBE1322:
1891:Veno-Echo.cpp ****     }
 6282              		.loc 19 1891 33 view .LVU1753
 6283 026a 1A68     		ldr	r2, [r3]
 6284              	.LBB1333:
 6285              	.LBB1332:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6286              		.loc 19 73 13 is_stmt 1 view .LVU1754
 6287              	.LBB1328:
 6288              	.LBB1329:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6289              		.loc 18 71 9 is_stmt 0 view .LVU1755
 6290 026c 0021     		movs	r1, #0
 6291              		.loc 18 72 9 view .LVU1756
 6292 026e 5248     		ldr	r0, .L469+120
 6293              	.LBE1329:
 6294              	.LBE1328:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6295              		.loc 19 73 27 view .LVU1757
 6296 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6297              		.loc 19 74 13 is_stmt 1 view .LVU1758
 6298              	.LVL350:
 6299              	.LBB1331:
 6300              	.LBI1328:
  69:delayline_reverse.h ****     {
 6301              		.loc 18 69 17 view .LVU1759
 6302              	.LBB1330:
 6303              		.loc 18 72 9 is_stmt 0 view .LVU1760
 6304 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6305              		.loc 18 71 9 view .LVU1761
 6306 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6307              		.loc 18 73 5 view .LVU1762
 6308 0278 07E7     		b	.L408
 6309              	.LVL351:
 6310              	.L439:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 222


 6311              		.loc 18 73 5 view .LVU1763
 6312              	.LBE1330:
 6313              	.LBE1331:
 6314              	.LBE1332:
 6315              	.LBE1333:
1974:Veno-Echo.cpp ****     }
 6316              		.loc 19 1974 9 is_stmt 1 view .LVU1764
1974:Veno-Echo.cpp ****     }
 6317              		.loc 19 1974 21 is_stmt 0 view .LVU1765
 6318 027a 0022     		movs	r2, #0
 6319 027c 1A70     		strb	r2, [r3]
1985:Veno-Echo.cpp **** 
 6320              		.loc 19 1985 1 view .LVU1766
 6321 027e 38BD     		pop	{r3, r4, r5, pc}
 6322              	.LVL352:
 6323              	.L468:
1954:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6324              		.loc 19 1954 9 is_stmt 1 view .LVU1767
1954:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6325              		.loc 19 1954 21 is_stmt 0 view .LVU1768
 6326 0280 3E48     		ldr	r0, .L469+60
 6327 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6328              	.LVL353:
1955:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6329              		.loc 19 1955 9 is_stmt 1 view .LVU1769
1955:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6330              		.loc 19 1955 21 is_stmt 0 view .LVU1770
 6331 0286 94ED060A 		vldr.32	s0, [r4, #24]
 6332 028a 4348     		ldr	r0, .L469+88
 6333 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6334              	.LVL354:
1956:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6335              		.loc 19 1956 9 is_stmt 1 view .LVU1771
1956:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6336              		.loc 19 1956 21 is_stmt 0 view .LVU1772
 6337 0290 94ED060A 		vldr.32	s0, [r4, #24]
 6338 0294 3A48     		ldr	r0, .L469+64
 6339 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6340              	.LVL355:
1957:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6341              		.loc 19 1957 9 is_stmt 1 view .LVU1773
1957:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6342              		.loc 19 1957 21 is_stmt 0 view .LVU1774
 6343 029a 94ED060A 		vldr.32	s0, [r4, #24]
 6344 029e 3F48     		ldr	r0, .L469+92
 6345 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6346              	.LVL356:
1958:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6347              		.loc 19 1958 9 is_stmt 1 view .LVU1775
1958:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6348              		.loc 19 1958 26 is_stmt 0 view .LVU1776
 6349 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 6350 02a8 3648     		ldr	r0, .L469+68
 6351 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6352              	.LVL357:
1959:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6353              		.loc 19 1959 9 is_stmt 1 view .LVU1777
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 223


1959:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6354              		.loc 19 1959 26 is_stmt 0 view .LVU1778
 6355 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 6356 02b2 3B48     		ldr	r0, .L469+96
 6357 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6358              	.LVL358:
1960:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6359              		.loc 19 1960 9 is_stmt 1 view .LVU1779
1960:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6360              		.loc 19 1960 26 is_stmt 0 view .LVU1780
 6361 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 6362 02bc 3248     		ldr	r0, .L469+72
 6363 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6364              	.LVL359:
1961:Veno-Echo.cpp ****     }
 6365              		.loc 19 1961 9 is_stmt 1 view .LVU1781
1961:Veno-Echo.cpp ****     }
 6366              		.loc 19 1961 26 is_stmt 0 view .LVU1782
 6367 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 6368 02c6 3748     		ldr	r0, .L469+100
 6369 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6370              	.LVL360:
 6371 02cc 8EE7     		b	.L435
 6372              	.L467:
1938:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6373              		.loc 19 1938 9 is_stmt 1 view .LVU1783
1938:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6374              		.loc 19 1938 22 is_stmt 0 view .LVU1784
 6375 02ce 3248     		ldr	r0, .L469+88
 6376 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6377              	.LVL361:
1939:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6378              		.loc 19 1939 9 is_stmt 1 view .LVU1785
1939:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6379              		.loc 19 1939 22 is_stmt 0 view .LVU1786
 6380 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 6381 02d8 3048     		ldr	r0, .L469+92
 6382 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6383              	.LVL362:
1940:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6384              		.loc 19 1940 9 is_stmt 1 view .LVU1787
1940:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6385              		.loc 19 1940 27 is_stmt 0 view .LVU1788
 6386 02de 94ED040A 		vldr.32	s0, [r4, #16]
 6387 02e2 2F48     		ldr	r0, .L469+96
 6388 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6389              	.LVL363:
1941:Veno-Echo.cpp ****     }
 6390              		.loc 19 1941 9 is_stmt 1 view .LVU1789
1941:Veno-Echo.cpp ****     }
 6391              		.loc 19 1941 27 is_stmt 0 view .LVU1790
 6392 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 6393 02ec 2D48     		ldr	r0, .L469+100
 6394 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6395              	.LVL364:
 6396 02f2 59E7     		b	.L431
 6397              	.L466:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 224


1923:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6398              		.loc 19 1923 9 is_stmt 1 view .LVU1791
1923:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6399              		.loc 19 1923 22 is_stmt 0 view .LVU1792
 6400 02f4 2148     		ldr	r0, .L469+60
 6401 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6402              	.LVL365:
1924:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6403              		.loc 19 1924 9 is_stmt 1 view .LVU1793
1924:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6404              		.loc 19 1924 22 is_stmt 0 view .LVU1794
 6405 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 6406 02fe 2048     		ldr	r0, .L469+64
 6407 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6408              	.LVL366:
1925:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6409              		.loc 19 1925 9 is_stmt 1 view .LVU1795
1925:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6410              		.loc 19 1925 27 is_stmt 0 view .LVU1796
 6411 0304 94ED050A 		vldr.32	s0, [r4, #20]
 6412 0308 1E48     		ldr	r0, .L469+68
 6413 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6414              	.LVL367:
1926:Veno-Echo.cpp ****     }
 6415              		.loc 19 1926 9 is_stmt 1 view .LVU1797
1926:Veno-Echo.cpp ****     }
 6416              		.loc 19 1926 27 is_stmt 0 view .LVU1798
 6417 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6418 0312 1D48     		ldr	r0, .L469+72
 6419 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6420              	.LVL368:
 6421 0318 21E7     		b	.L427
 6422              	.L460:
1909:Veno-Echo.cpp ****     }
 6423              		.loc 19 1909 18 view .LVU1799
 6424 031a DFED117A 		vldr.32	s15, .L469+32
 6425 031e DCE6     		b	.L417
 6426              	.LVL369:
 6427              	.L465:
 6428              	.LBB1334:
 6429              	.LBB1302:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6430              		.loc 19 74 29 view .LVU1800
 6431 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6432              	.LBB1294:
 6433              	.LBB1295:
  72:delayline_reverse.h ****     }
 6434              		.loc 18 72 9 view .LVU1801
 6435 0324 0A4D     		ldr	r5, .L469+16
 6436              	.LBE1295:
 6437              	.LBE1294:
 6438              	.LBE1302:
 6439              	.LBE1334:
1886:Veno-Echo.cpp ****     }
 6440              		.loc 19 1886 33 view .LVU1802
 6441 0326 1968     		ldr	r1, [r3]
 6442              	.LBB1335:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 225


 6443              	.LBB1303:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6444              		.loc 19 73 13 is_stmt 1 view .LVU1803
 6445              	.LBB1299:
 6446              	.LBB1296:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6447              		.loc 18 71 9 is_stmt 0 view .LVU1804
 6448 0328 0020     		movs	r0, #0
 6449              	.LBE1296:
 6450              	.LBE1299:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6451              		.loc 19 73 27 view .LVU1805
 6452 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6453              		.loc 19 74 29 view .LVU1806
 6454 032e 17EE102A 		vmov	r2, s14	@ int
 6455              	.LBB1300:
 6456              	.LBB1297:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6457              		.loc 18 71 9 view .LVU1807
 6458 0332 0860     		str	r0, [r1]	@ float
 6459              	.LVL370:
  72:delayline_reverse.h ****     }
 6460              		.loc 18 72 9 view .LVU1808
 6461 0334 AA42     		cmp	r2, r5
 6462 0336 28BF     		it	cs
 6463 0338 2A46     		movcs	r2, r5
 6464              	.LBE1297:
 6465              	.LBE1300:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6466              		.loc 19 74 13 is_stmt 1 view .LVU1809
 6467              	.LVL371:
 6468              	.LBB1301:
 6469              	.LBI1294:
  69:delayline_reverse.h ****     {
 6470              		.loc 18 69 17 view .LVU1810
 6471              	.LBB1298:
  72:delayline_reverse.h ****     }
 6472              		.loc 18 72 9 is_stmt 0 view .LVU1811
 6473 033a 0A61     		str	r2, [r1, #16]
 6474              		.loc 18 73 5 view .LVU1812
 6475 033c A5E6     		b	.L408
 6476              	.L470:
 6477 033e 00BF     		.align	2
 6478              	.L469:
 6479 0340 0050C346 		.word	1187205120
 6480 0344 00000000 		.word	.LANCHOR2
 6481 0348 00606A48 		.word	1214930944
 6482 034c 0AD7A33B 		.word	1000593162
 6483 0350 BF270900 		.word	599999
 6484 0354 00000000 		.word	.LANCHOR3
 6485 0358 00000000 		.word	.LANCHOR73
 6486 035c 0000FA43 		.word	1140457472
 6487 0360 00000000 		.word	0
 6488 0364 CDCCCC3D 		.word	1036831949
 6489 0368 00000000 		.word	.LANCHOR50
 6490 036c 00000000 		.word	.LANCHOR58
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 226


 6491 0370 9A99A140 		.word	1084332442
 6492 0374 0080BB44 		.word	1153138688
 6493 0378 00803B46 		.word	1178304512
 6494 037c 00000000 		.word	.LANCHOR29
 6495 0380 00000000 		.word	.LANCHOR30
 6496 0384 00000000 		.word	.LANCHOR31
 6497 0388 00000000 		.word	.LANCHOR32
 6498 038c 0000C842 		.word	1120403456
 6499 0390 00004844 		.word	1145569280
 6500 0394 00004843 		.word	1128792064
 6501 0398 00000000 		.word	.LANCHOR16
 6502 039c 00000000 		.word	.LANCHOR17
 6503 03a0 00000000 		.word	.LANCHOR18
 6504 03a4 00000000 		.word	.LANCHOR19
 6505 03a8 6666E63E 		.word	1055286886
 6506 03ac 00000000 		.word	.LANCHOR65
 6507 03b0 CDCC0C3F 		.word	1057803469
 6508 03b4 00650148 		.word	1208050944
 6509 03b8 94050200 		.word	132500
 6510              	.LBE1298:
 6511              	.LBE1301:
 6512              	.LBE1303:
 6513              	.LBE1335:
 6514              		.cfi_endproc
 6515              	.LFE4312:
 6517              		.section	.text.startup.main,"ax",%progbits
 6518              		.align	1
 6519              		.p2align 2,,3
 6520              		.global	main
 6521              		.syntax unified
 6522              		.thumb
 6523              		.thumb_func
 6524              		.fpu fpv5-d16
 6526              	main:
 6527              	.LFB4290:
 612:Veno-Echo.cpp ****     // initialize hardware.
 6528              		.loc 19 612 1 is_stmt 1 view -0
 6529              		.cfi_startproc
 6530              		@ Volatile: function does not return.
 6531              		@ args = 0, pretend = 0, frame = 240
 6532              		@ frame_needed = 0, uses_anonymous_args = 0
 614:Veno-Echo.cpp ****     hw.Init();
 6533              		.loc 19 614 5 view .LVU1814
 612:Veno-Echo.cpp ****     // initialize hardware.
 6534              		.loc 19 612 1 is_stmt 0 view .LVU1815
 6535 0000 80B5     		push	{r7, lr}
 6536              		.cfi_def_cfa_offset 8
 6537              		.cfi_offset 7, -8
 6538              		.cfi_offset 14, -4
 614:Veno-Echo.cpp ****     hw.Init();
 6539              		.loc 19 614 17 view .LVU1816
 6540 0002 D148     		ldr	r0, .L474
 612:Veno-Echo.cpp ****     // initialize hardware.
 6541              		.loc 19 612 1 view .LVU1817
 6542 0004 BEB0     		sub	sp, sp, #248
 6543              		.cfi_def_cfa_offset 256
 614:Veno-Echo.cpp ****     hw.Init();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 227


 6544              		.loc 19 614 17 view .LVU1818
 6545 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6546              	.LVL372:
 615:Veno-Echo.cpp ****     
 6547              		.loc 19 615 5 is_stmt 1 view .LVU1819
 615:Veno-Echo.cpp ****     
 6548              		.loc 19 615 12 is_stmt 0 view .LVU1820
 6549 000a 0021     		movs	r1, #0
 6550 000c CE48     		ldr	r0, .L474
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6551              		.loc 19 619 16 view .LVU1821
 6552 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 615:Veno-Echo.cpp ****     
 6553              		.loc 19 615 12 view .LVU1822
 6554 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6555              	.LVL373:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6556              		.loc 19 619 5 is_stmt 1 view .LVU1823
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6557              		.loc 19 619 16 is_stmt 0 view .LVU1824
 6558 0016 1D20     		movs	r0, #29
 6559 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6560              	.LVL374:
 6561 001c 0346     		mov	r3, r0	@ movhi
 6562 001e 0620     		movs	r0, #6
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6563              		.loc 19 626 22 view .LVU1825
 6564 0020 0224     		movs	r4, #2
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6565              		.loc 19 619 16 view .LVU1826
 6566 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6567 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6568              	.LVL375:
 6569 002a 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6570              		.loc 19 619 80 view .LVU1827
 6571 002c C648     		ldr	r0, .L474
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6572              		.loc 19 626 22 view .LVU1828
 6573 002e 9FEDC79A 		vldr.32	s18, .L474+4
 6574              	.LBB1336:
 6575              	.LBB1337:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 228


  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6576              		.loc 7 58 57 view .LVU1829
 6577 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6578              	.LBE1337:
 6579              	.LBE1336:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6580              		.loc 19 619 16 view .LVU1830
 6581 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6582              		.loc 19 619 80 view .LVU1831
 6583 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6584              	.LVL376:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6585              		.loc 19 619 16 view .LVU1832
 6586 003e 0123     		movs	r3, #1
 6587 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6588 0044 039A     		ldr	r2, [sp, #12]
 6589              	.LBB1340:
 6590              	.LBB1341:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6591              		.loc 7 54 63 view .LVU1833
 6592 0046 4FF07C55 		mov	r5, #1056964608
 6593              	.LBE1341:
 6594              	.LBE1340:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6595              		.loc 19 619 16 view .LVU1834
 6596 004a 0299     		ldr	r1, [sp, #8]
 6597              	.LBB1344:
 6598              	.LBB1345:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6599              		.loc 10 64 50 view .LVU1835
 6600 004c 1F46     		mov	r7, r3
 6601              	.LBE1345:
 6602              	.LBE1344:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6603              		.loc 19 619 16 view .LVU1836
 6604 004e C048     		ldr	r0, .L474+8
 6605 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6606              	.LVL377:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6607              		.loc 19 620 5 is_stmt 1 view .LVU1837
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6608              		.loc 19 620 16 is_stmt 0 view .LVU1838
 6609 0054 1E20     		movs	r0, #30
 6610 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6611              	.LVL378:
 6612 005a 0346     		mov	r3, r0	@ movhi
 6613 005c 0720     		movs	r0, #7
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6614              		.loc 19 633 20 view .LVU1839
 6615 005e DFF85483 		ldr	r8, .L474+108
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 229


 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6616              		.loc 19 620 16 view .LVU1840
 6617 0062 ADF81030 		strh	r3, [sp, #16]	@ movhi
 6618 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6619              	.LVL379:
 6620 006a 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6621              		.loc 19 620 80 view .LVU1841
 6622 006c B648     		ldr	r0, .L474
 6623              	.LBB1348:
 6624              	.LBB1349:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6625              		.loc 7 54 63 view .LVU1842
 6626 006e B94E     		ldr	r6, .L474+12
 6627              	.LBE1349:
 6628              	.LBE1348:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6629              		.loc 19 620 16 view .LVU1843
 6630 0070 ADF81430 		strh	r3, [sp, #20]	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6631              		.loc 19 620 80 view .LVU1844
 6632 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6633              	.LVL380:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6634              		.loc 19 620 16 view .LVU1845
 6635 0078 059A     		ldr	r2, [sp, #20]
 6636 007a 80EE080A 		vdiv.f32	s0, s0, s16
 6637 007e 0499     		ldr	r1, [sp, #16]
 6638 0080 3B46     		mov	r3, r7
 6639 0082 B548     		ldr	r0, .L474+16
 6640 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6641              	.LVL381:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6642              		.loc 19 621 5 is_stmt 1 view .LVU1846
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6643              		.loc 19 621 18 is_stmt 0 view .LVU1847
 6644 0088 0A20     		movs	r0, #10
 6645 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6646              	.LVL382:
 6647 008e 0346     		mov	r3, r0	@ movhi
 6648 0090 2046     		mov	r0, r4
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6649              		.loc 19 639 20 view .LVU1848
 6650 0092 DFF82493 		ldr	r9, .L474+112
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6651              		.loc 19 621 18 view .LVU1849
 6652 0096 ADF81830 		strh	r3, [sp, #24]	@ movhi
 6653 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6654              	.LVL383:
 6655 009e 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6656              		.loc 19 621 85 view .LVU1850
 6657 00a0 A948     		ldr	r0, .L474
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6658              		.loc 19 621 18 view .LVU1851
 6659 00a2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 230


 6660              		.loc 19 621 85 view .LVU1852
 6661 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6662              	.LVL384:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6663              		.loc 19 621 18 view .LVU1853
 6664 00aa 079A     		ldr	r2, [sp, #28]
 6665 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 6666 00b0 0699     		ldr	r1, [sp, #24]
 6667 00b2 0023     		movs	r3, #0
 6668 00b4 A948     		ldr	r0, .L474+20
 6669 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6670              	.LVL385:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6671              		.loc 19 622 5 is_stmt 1 view .LVU1854
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6672              		.loc 19 622 18 is_stmt 0 view .LVU1855
 6673 00ba 0B20     		movs	r0, #11
 6674 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6675              	.LVL386:
 6676 00c0 0346     		mov	r3, r0	@ movhi
 6677 00c2 0320     		movs	r0, #3
 6678 00c4 ADF82030 		strh	r3, [sp, #32]	@ movhi
 6679 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6680              	.LVL387:
 6681 00cc 0346     		mov	r3, r0	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6682              		.loc 19 622 85 view .LVU1856
 6683 00ce 9E48     		ldr	r0, .L474
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6684              		.loc 19 622 18 view .LVU1857
 6685 00d0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6686              		.loc 19 622 85 view .LVU1858
 6687 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6688              	.LVL388:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6689              		.loc 19 622 18 view .LVU1859
 6690 00d8 099A     		ldr	r2, [sp, #36]
 6691 00da 80EE080A 		vdiv.f32	s0, s0, s16
 6692 00de 0899     		ldr	r1, [sp, #32]
 6693 00e0 0023     		movs	r3, #0
 6694 00e2 9F48     		ldr	r0, .L474+24
 6695 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6696              	.LVL389:
 623:Veno-Echo.cpp **** 
 6697              		.loc 19 623 5 is_stmt 1 view .LVU1860
 623:Veno-Echo.cpp **** 
 6698              		.loc 19 623 20 is_stmt 0 view .LVU1861
 6699 00e8 1820     		movs	r0, #24
 6700 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6701              	.LVL390:
 6702 00ee 0346     		mov	r3, r0	@ movhi
 6703 00f0 0420     		movs	r0, #4
 6704 00f2 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6705 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6706              	.LVL391:
 6707 00fa 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 231


 623:Veno-Echo.cpp **** 
 6708              		.loc 19 623 93 view .LVU1862
 6709 00fc 9248     		ldr	r0, .L474
 623:Veno-Echo.cpp **** 
 6710              		.loc 19 623 20 view .LVU1863
 6711 00fe ADF82C30 		strh	r3, [sp, #44]	@ movhi
 623:Veno-Echo.cpp **** 
 6712              		.loc 19 623 93 view .LVU1864
 6713 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6714              	.LVL392:
 623:Veno-Echo.cpp **** 
 6715              		.loc 19 623 20 view .LVU1865
 6716 0106 2346     		mov	r3, r4
 6717 0108 80EE080A 		vdiv.f32	s0, s0, s16
 6718 010c 0B9A     		ldr	r2, [sp, #44]
 6719 010e 0A99     		ldr	r1, [sp, #40]
 6720 0110 9448     		ldr	r0, .L474+28
 6721 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6722              	.LVL393:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6723              		.loc 19 626 5 is_stmt 1 view .LVU1866
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6724              		.loc 19 626 22 is_stmt 0 view .LVU1867
 6725 0116 0020     		movs	r0, #0
 6726 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6727              	.LVL394:
 6728 011c 0346     		mov	r3, r0	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6729              		.loc 19 626 55 view .LVU1868
 6730 011e 8A48     		ldr	r0, .L474
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6731              		.loc 19 626 22 view .LVU1869
 6732 0120 ADF83030 		strh	r3, [sp, #48]	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6733              		.loc 19 626 55 view .LVU1870
 6734 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6735              	.LVL395:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6736              		.loc 19 626 22 view .LVU1871
 6737 0128 3A46     		mov	r2, r7
 6738 012a 0C99     		ldr	r1, [sp, #48]
 6739 012c 80EE090A 		vdiv.f32	s0, s0, s18
 6740 0130 3B46     		mov	r3, r7
 6741 0132 8D48     		ldr	r0, .L474+32
 6742 0134 0094     		str	r4, [sp]
 6743 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6744              	.LVL396:
 627:Veno-Echo.cpp **** 
 6745              		.loc 19 627 5 is_stmt 1 view .LVU1872
 627:Veno-Echo.cpp **** 
 6746              		.loc 19 627 22 is_stmt 0 view .LVU1873
 6747 013a 3846     		mov	r0, r7
 6748 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6749              	.LVL397:
 6750 0140 0346     		mov	r3, r0	@ movhi
 627:Veno-Echo.cpp **** 
 6751              		.loc 19 627 55 view .LVU1874
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 232


 6752 0142 8148     		ldr	r0, .L474
 627:Veno-Echo.cpp **** 
 6753              		.loc 19 627 22 view .LVU1875
 6754 0144 ADF83430 		strh	r3, [sp, #52]	@ movhi
 627:Veno-Echo.cpp **** 
 6755              		.loc 19 627 55 view .LVU1876
 6756 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6757              	.LVL398:
 627:Veno-Echo.cpp **** 
 6758              		.loc 19 627 22 view .LVU1877
 6759 014c 3A46     		mov	r2, r7
 6760 014e 0D99     		ldr	r1, [sp, #52]
 6761 0150 80EE090A 		vdiv.f32	s0, s0, s18
 6762 0154 3B46     		mov	r3, r7
 6763 0156 8548     		ldr	r0, .L474+36
 6764 0158 0094     		str	r4, [sp]
 6765 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6766              	.LVL399:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6767              		.loc 19 630 5 is_stmt 1 view .LVU1878
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6768              		.loc 19 630 14 is_stmt 0 view .LVU1879
 6769 015e 1720     		movs	r0, #23
 6770 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6771              	.LVL400:
 6772 0164 0346     		mov	r3, r0	@ movhi
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6773              		.loc 19 630 48 view .LVU1880
 6774 0166 7848     		ldr	r0, .L474
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6775              		.loc 19 630 14 view .LVU1881
 6776 0168 ADF83830 		strh	r3, [sp, #56]	@ movhi
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6777              		.loc 19 630 48 view .LVU1882
 6778 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6779              	.LVL401:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6780              		.loc 19 630 14 view .LVU1883
 6781 0170 0E99     		ldr	r1, [sp, #56]
 6782 0172 80EE090A 		vdiv.f32	s0, s0, s18
 6783 0176 7E48     		ldr	r0, .L474+40
 6784 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6785              	.LVL402:
 631:Veno-Echo.cpp ****     
 6786              		.loc 19 631 5 is_stmt 1 view .LVU1884
 631:Veno-Echo.cpp ****     
 6787              		.loc 19 631 17 is_stmt 0 view .LVU1885
 6788 017c 0520     		movs	r0, #5
 6789 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6790              	.LVL403:
 6791 0182 0346     		mov	r3, r0	@ movhi
 6792 0184 7048     		ldr	r0, .L474
 6793 0186 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6794 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6795              	.LVL404:
 6796 018e 0F99     		ldr	r1, [sp, #60]
 6797 0190 7848     		ldr	r0, .L474+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 233


 6798 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6799              	.LVL405:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6800              		.loc 19 633 5 is_stmt 1 view .LVU1886
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6801              		.loc 19 633 20 is_stmt 0 view .LVU1887
 6802 0196 6C48     		ldr	r0, .L474
 6803 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6804              	.LVL406:
 6805 019c 4046     		mov	r0, r8
 6806 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6807              	.LVL407:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6808              		.loc 19 634 5 is_stmt 1 view .LVU1888
 6809              	.LBB1352:
 6810              	.LBI1340:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6811              		.loc 7 54 17 view .LVU1889
 6812              	.LBB1342:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6813              		.loc 7 54 48 view .LVU1890
 6814              	.LBE1342:
 6815              	.LBE1352:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6816              		.loc 19 639 20 is_stmt 0 view .LVU1891
 6817 01a2 6948     		ldr	r0, .L474
 6818              	.LBB1353:
 6819              	.LBB1338:
 6820              		.loc 7 58 57 view .LVU1892
 6821 01a4 C8ED008A 		vstr.32	s17, [r8]
 6822              	.LBE1338:
 6823              	.LBE1353:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6824              		.loc 19 645 17 view .LVU1893
 6825 01a8 734C     		ldr	r4, .L474+48
 6826              	.LBB1354:
 6827              	.LBB1343:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6828              		.loc 7 54 63 view .LVU1894
 6829 01aa C8F80850 		str	r5, [r8, #8]	@ float
 6830              	.LVL408:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6831              		.loc 7 54 63 view .LVU1895
 6832              	.LBE1343:
 6833              	.LBE1354:
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6834              		.loc 19 635 5 is_stmt 1 view .LVU1896
 6835              	.LBB1355:
 6836              	.LBI1348:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6837              		.loc 7 54 17 view .LVU1897
 6838              	.LBB1350:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6839              		.loc 7 54 48 view .LVU1898
 6840              	.LBE1350:
 6841              	.LBE1355:
 6842              	.LBB1356:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 234


 6843              	.LBB1357:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6844              		.loc 7 54 63 is_stmt 0 view .LVU1899
 6845 01ae C8F81450 		str	r5, [r8, #20]	@ float
 6846              	.LBE1357:
 6847              	.LBE1356:
 6848              	.LBB1359:
 6849              	.LBB1351:
 6850 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 6851              	.LVL409:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6852              		.loc 7 54 63 view .LVU1900
 6853              	.LBE1351:
 6854              	.LBE1359:
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6855              		.loc 19 636 5 is_stmt 1 view .LVU1901
 6856              	.LBB1360:
 6857              	.LBI1356:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6858              		.loc 7 54 17 view .LVU1902
 6859              	.LBB1358:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6860              		.loc 7 54 48 view .LVU1903
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6861              		.loc 7 54 48 is_stmt 0 view .LVU1904
 6862              	.LBE1358:
 6863              	.LBE1360:
 637:Veno-Echo.cpp **** 
 6864              		.loc 19 637 5 is_stmt 1 view .LVU1905
 6865              	.LBB1361:
 6866              	.LBI1336:
 6867              		.loc 7 58 17 view .LVU1906
 6868              	.LBB1339:
 6869              		.loc 7 58 52 view .LVU1907
 6870              		.loc 7 58 52 is_stmt 0 view .LVU1908
 6871              	.LBE1339:
 6872              	.LBE1361:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6873              		.loc 19 639 5 is_stmt 1 view .LVU1909
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6874              		.loc 19 639 20 is_stmt 0 view .LVU1910
 6875 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6876              	.LVL410:
 6877 01ba 4846     		mov	r0, r9
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6878              		.loc 19 651 17 view .LVU1911
 6879 01bc DFF8FC81 		ldr	r8, .L474+116
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6880              		.loc 19 639 20 view .LVU1912
 6881 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6882              	.LVL411:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6883              		.loc 19 640 5 is_stmt 1 view .LVU1913
 6884              	.LBB1362:
 6885              	.LBI1362:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6886              		.loc 7 54 17 view .LVU1914
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 235


 6887              	.LBB1363:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6888              		.loc 7 54 48 view .LVU1915
 6889              	.LBE1363:
 6890              	.LBE1362:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6891              		.loc 19 645 17 is_stmt 0 view .LVU1916
 6892 01c4 6048     		ldr	r0, .L474
 6893              	.LBB1365:
 6894              	.LBB1364:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6895              		.loc 7 54 63 view .LVU1917
 6896 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 6897              	.LVL412:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6898              		.loc 7 54 63 view .LVU1918
 6899              	.LBE1364:
 6900              	.LBE1365:
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6901              		.loc 19 641 5 is_stmt 1 view .LVU1919
 6902              	.LBB1366:
 6903              	.LBI1366:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6904              		.loc 7 54 17 view .LVU1920
 6905              	.LBB1367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6906              		.loc 7 54 48 view .LVU1921
 6907              	.LBE1367:
 6908              	.LBE1366:
 6909              	.LBB1369:
 6910              	.LBB1370:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6911              		.loc 7 54 63 is_stmt 0 view .LVU1922
 6912 01ca C9F81450 		str	r5, [r9, #20]	@ float
 6913              	.LBE1370:
 6914              	.LBE1369:
 6915              	.LBB1372:
 6916              	.LBB1368:
 6917 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 6918              	.LVL413:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6919              		.loc 7 54 63 view .LVU1923
 6920              	.LBE1368:
 6921              	.LBE1372:
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6922              		.loc 19 642 5 is_stmt 1 view .LVU1924
 6923              	.LBB1373:
 6924              	.LBI1369:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6925              		.loc 7 54 17 view .LVU1925
 6926              	.LBB1371:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6927              		.loc 7 54 48 view .LVU1926
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6928              		.loc 7 54 48 is_stmt 0 view .LVU1927
 6929              	.LBE1371:
 6930              	.LBE1373:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 236


 643:Veno-Echo.cpp **** 
 6931              		.loc 19 643 5 is_stmt 1 view .LVU1928
 6932              	.LBB1374:
 6933              	.LBI1374:
 6934              		.loc 7 58 17 view .LVU1929
 6935              	.LBB1375:
 6936              		.loc 7 58 52 view .LVU1930
 6937              		.loc 7 58 57 is_stmt 0 view .LVU1931
 6938 01d2 C9ED008A 		vstr.32	s17, [r9]
 6939              	.LVL414:
 6940              		.loc 7 58 57 view .LVU1932
 6941              	.LBE1375:
 6942              	.LBE1374:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6943              		.loc 19 645 5 is_stmt 1 view .LVU1933
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6944              		.loc 19 645 17 is_stmt 0 view .LVU1934
 6945 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6946              	.LVL415:
 6947 01da 2046     		mov	r0, r4
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6948              		.loc 19 670 17 view .LVU1935
 6949 01dc 9FED678A 		vldr.32	s16, .L474+52
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6950              		.loc 19 645 17 view .LVU1936
 6951 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6952              	.LVL416:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6953              		.loc 19 646 5 is_stmt 1 view .LVU1937
 6954              	.LBB1376:
 6955              	.LBI1376:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6956              		.loc 7 54 17 view .LVU1938
 6957              	.LBB1377:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6958              		.loc 7 54 48 view .LVU1939
 6959              	.LBE1377:
 6960              	.LBE1376:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6961              		.loc 19 651 17 is_stmt 0 view .LVU1940
 6962 01e4 5848     		ldr	r0, .L474
 6963              	.LBB1379:
 6964              	.LBB1380:
 6965              		.loc 7 58 57 view .LVU1941
 6966 01e6 C4ED008A 		vstr.32	s17, [r4]
 6967              	.LBE1380:
 6968              	.LBE1379:
 6969              	.LBB1382:
 6970              	.LBB1378:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6971              		.loc 7 54 63 view .LVU1942
 6972 01ea A660     		str	r6, [r4, #8]	@ float
 6973              	.LVL417:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6974              		.loc 7 54 63 view .LVU1943
 6975              	.LBE1378:
 6976              	.LBE1382:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 237


 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6977              		.loc 19 647 5 is_stmt 1 view .LVU1944
 6978              	.LBB1383:
 6979              	.LBI1383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6980              		.loc 7 54 17 view .LVU1945
 6981              	.LBB1384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6982              		.loc 7 54 48 view .LVU1946
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6983              		.loc 7 54 63 is_stmt 0 view .LVU1947
 6984 01ec E660     		str	r6, [r4, #12]	@ float
 6985              	.LVL418:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6986              		.loc 7 54 63 view .LVU1948
 6987              	.LBE1384:
 6988              	.LBE1383:
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 6989              		.loc 19 648 5 is_stmt 1 view .LVU1949
 6990              	.LBB1385:
 6991              	.LBI1385:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6992              		.loc 7 54 17 view .LVU1950
 6993              	.LBB1386:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6994              		.loc 7 54 48 view .LVU1951
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6995              		.loc 7 54 63 is_stmt 0 view .LVU1952
 6996 01ee 6661     		str	r6, [r4, #20]	@ float
 6997              	.LVL419:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6998              		.loc 7 54 63 view .LVU1953
 6999              	.LBE1386:
 7000              	.LBE1385:
 649:Veno-Echo.cpp **** 
 7001              		.loc 19 649 5 is_stmt 1 view .LVU1954
 7002              	.LBB1387:
 7003              	.LBI1379:
 7004              		.loc 7 58 17 view .LVU1955
 7005              	.LBB1381:
 7006              		.loc 7 58 52 view .LVU1956
 7007              		.loc 7 58 52 is_stmt 0 view .LVU1957
 7008              	.LBE1381:
 7009              	.LBE1387:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7010              		.loc 19 651 5 is_stmt 1 view .LVU1958
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7011              		.loc 19 651 17 is_stmt 0 view .LVU1959
 7012 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7013              	.LVL420:
 7014 01f4 4046     		mov	r0, r8
 7015              	.LBB1388:
 7016              	.LBB1389:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7017              		.loc 8 44 20 view .LVU1960
 7018 01f6 624C     		ldr	r4, .L474+56
 7019              	.LBE1389:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 238


 7020              	.LBE1388:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7021              		.loc 19 651 17 view .LVU1961
 7022 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7023              	.LVL421:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7024              		.loc 19 652 5 is_stmt 1 view .LVU1962
 7025              	.LBB1394:
 7026              	.LBI1394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7027              		.loc 7 54 17 view .LVU1963
 7028              	.LBB1395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7029              		.loc 7 54 48 view .LVU1964
 7030              	.LBE1395:
 7031              	.LBE1394:
 7032              	.LBB1397:
 7033              	.LBB1398:
 7034              	.LBB1399:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7035              		.loc 10 45 16 is_stmt 0 view .LVU1965
 7036 01fc 6149     		ldr	r1, .L474+60
 7037              	.LBE1399:
 7038              	.LBE1398:
 7039              	.LBE1397:
 7040              	.LBB1404:
 7041              	.LBB1405:
 7042              	.LBB1406:
 7043 01fe 624A     		ldr	r2, .L474+64
 7044              	.LBE1406:
 7045              	.LBE1405:
 7046              	.LBE1404:
 7047              	.LBB1411:
 7048              	.LBB1412:
 7049              	.LBB1413:
 7050 0200 624B     		ldr	r3, .L474+68
 7051              	.LBE1413:
 7052              	.LBE1412:
 7053              	.LBE1411:
 7054              	.LBB1418:
 7055              	.LBB1402:
 7056              	.LBB1400:
 7057 0202 0D60     		str	r5, [r1]	@ float
 7058              	.LBE1400:
 7059              	.LBE1402:
 7060              	.LBE1418:
 7061              	.LBB1419:
 7062              	.LBB1409:
 7063              	.LBB1407:
 7064 0204 1560     		str	r5, [r2]	@ float
 7065              	.LBE1407:
 7066              	.LBE1409:
 7067              	.LBE1419:
 7068              	.LBB1420:
 7069              	.LBB1416:
 7070              	.LBB1414:
 7071 0206 1D60     		str	r5, [r3]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 239


 7072              	.LBE1414:
 7073              	.LBE1416:
 7074              	.LBE1420:
 7075              	.LBB1421:
 7076              	.LBB1346:
 7077              		.loc 10 64 50 view .LVU1966
 7078 0208 0F71     		strb	r7, [r1, #4]
 7079              	.LBE1346:
 7080              	.LBE1421:
 7081              	.LBB1422:
 7082              	.LBB1423:
 7083 020a 1771     		strb	r7, [r2, #4]
 7084              	.LBE1423:
 7085              	.LBE1422:
 7086              	.LBB1425:
 7087              	.LBB1426:
 7088 020c 1F71     		strb	r7, [r3, #4]
 7089              	.LBE1426:
 7090              	.LBE1425:
 666:Veno-Echo.cpp **** 
 7091              		.loc 19 666 15 view .LVU1967
 7092 020e 4E48     		ldr	r0, .L474
 7093              	.LBB1428:
 7094              	.LBB1429:
 7095              		.loc 7 58 57 view .LVU1968
 7096 0210 C8ED008A 		vstr.32	s17, [r8]
 7097              	.LBE1429:
 7098              	.LBE1428:
 7099              	.LBB1431:
 7100              	.LBB1396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7101              		.loc 7 54 63 view .LVU1969
 7102 0214 C8F80860 		str	r6, [r8, #8]	@ float
 7103              	.LVL422:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7104              		.loc 7 54 63 view .LVU1970
 7105              	.LBE1396:
 7106              	.LBE1431:
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7107              		.loc 19 653 5 is_stmt 1 view .LVU1971
 7108              	.LBB1432:
 7109              	.LBI1432:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7110              		.loc 7 54 17 view .LVU1972
 7111              	.LBB1433:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7112              		.loc 7 54 48 view .LVU1973
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7113              		.loc 7 54 63 is_stmt 0 view .LVU1974
 7114 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 7115              	.LVL423:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7116              		.loc 7 54 63 view .LVU1975
 7117              	.LBE1433:
 7118              	.LBE1432:
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7119              		.loc 19 654 5 is_stmt 1 view .LVU1976
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 240


 7120              	.LBB1434:
 7121              	.LBI1434:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7122              		.loc 7 54 17 view .LVU1977
 7123              	.LBB1435:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7124              		.loc 7 54 48 view .LVU1978
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7125              		.loc 7 54 63 is_stmt 0 view .LVU1979
 7126 021c C8F81460 		str	r6, [r8, #20]	@ float
 7127              	.LVL424:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7128              		.loc 7 54 63 view .LVU1980
 7129              	.LBE1435:
 7130              	.LBE1434:
 655:Veno-Echo.cpp **** 
 7131              		.loc 19 655 5 is_stmt 1 view .LVU1981
 7132              	.LBB1436:
 7133              	.LBI1428:
 7134              		.loc 7 58 17 view .LVU1982
 7135              	.LBB1430:
 7136              		.loc 7 58 52 view .LVU1983
 7137              		.loc 7 58 52 is_stmt 0 view .LVU1984
 7138              	.LBE1430:
 7139              	.LBE1436:
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7140              		.loc 19 658 5 is_stmt 1 view .LVU1985
 7141              	.LBB1437:
 7142              	.LBI1397:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7143              		.loc 10 51 17 view .LVU1986
 7144              	.LBE1437:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7145              		.loc 10 51 26 view .LVU1987
 7146              	.LBB1438:
 7147              	.LBB1403:
 7148              	.LBI1398:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7149              		.loc 10 43 17 view .LVU1988
 7150              	.LBB1401:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7151              		.loc 10 45 9 view .LVU1989
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7152              		.loc 10 46 9 view .LVU1990
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7153              		.loc 10 46 9 is_stmt 0 view .LVU1991
 7154              	.LBE1401:
 7155              	.LBE1403:
 7156              	.LBE1438:
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7157              		.loc 19 659 5 is_stmt 1 view .LVU1992
 7158              	.LBB1439:
 7159              	.LBI1344:
 7160              		.loc 10 64 17 view .LVU1993
 7161              	.LBB1347:
 7162              		.loc 10 64 43 view .LVU1994
 7163              		.loc 10 64 43 is_stmt 0 view .LVU1995
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 241


 7164              	.LBE1347:
 7165              	.LBE1439:
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7166              		.loc 19 660 5 is_stmt 1 view .LVU1996
 7167              	.LBB1440:
 7168              	.LBI1404:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7169              		.loc 10 51 17 view .LVU1997
 7170              	.LBE1440:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7171              		.loc 10 51 26 view .LVU1998
 7172              	.LBB1441:
 7173              	.LBB1410:
 7174              	.LBI1405:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7175              		.loc 10 43 17 view .LVU1999
 7176              	.LBB1408:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7177              		.loc 10 45 9 view .LVU2000
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7178              		.loc 10 46 9 view .LVU2001
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7179              		.loc 10 46 9 is_stmt 0 view .LVU2002
 7180              	.LBE1408:
 7181              	.LBE1410:
 7182              	.LBE1441:
 661:Veno-Echo.cpp **** 
 7183              		.loc 19 661 5 is_stmt 1 view .LVU2003
 7184              	.LBB1442:
 7185              	.LBI1422:
 7186              		.loc 10 64 17 view .LVU2004
 7187              	.LBB1424:
 7188              		.loc 10 64 43 view .LVU2005
 7189              		.loc 10 64 43 is_stmt 0 view .LVU2006
 7190              	.LBE1424:
 7191              	.LBE1442:
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7192              		.loc 19 663 5 is_stmt 1 view .LVU2007
 7193              	.LBB1443:
 7194              	.LBI1411:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7195              		.loc 10 51 17 view .LVU2008
 7196              	.LBE1443:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7197              		.loc 10 51 26 view .LVU2009
 7198              	.LBB1444:
 7199              	.LBB1417:
 7200              	.LBI1412:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7201              		.loc 10 43 17 view .LVU2010
 7202              	.LBB1415:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7203              		.loc 10 45 9 view .LVU2011
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7204              		.loc 10 46 9 view .LVU2012
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7205              		.loc 10 46 9 is_stmt 0 view .LVU2013
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 242


 7206              	.LBE1415:
 7207              	.LBE1417:
 7208              	.LBE1444:
 664:Veno-Echo.cpp **** 
 7209              		.loc 19 664 5 is_stmt 1 view .LVU2014
 7210              	.LBB1445:
 7211              	.LBI1425:
 7212              		.loc 10 64 17 view .LVU2015
 7213              	.LBB1427:
 7214              		.loc 10 64 43 view .LVU2016
 7215              		.loc 10 64 43 is_stmt 0 view .LVU2017
 7216              	.LBE1427:
 7217              	.LBE1445:
 666:Veno-Echo.cpp **** 
 7218              		.loc 19 666 5 is_stmt 1 view .LVU2018
 666:Veno-Echo.cpp **** 
 7219              		.loc 19 666 15 is_stmt 0 view .LVU2019
 7220 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7221              	.LVL425:
 7222 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 7223              	.LVL426:
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7224              		.loc 19 669 5 is_stmt 1 view .LVU2020
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7225              		.loc 19 669 15 is_stmt 0 view .LVU2021
 7226 0228 4748     		ldr	r0, .L474
 7227 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7228              	.LVL427:
 7229 022e 5848     		ldr	r0, .L474+72
 7230 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7231              	.LVL428:
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7232              		.loc 19 670 5 is_stmt 1 view .LVU2022
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7233              		.loc 19 670 17 is_stmt 0 view .LVU2023
 7234 0234 B0EE480A 		vmov.f32	s0, s16
 7235 0238 5548     		ldr	r0, .L474+72
 7236 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7237              	.LVL429:
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7238              		.loc 19 671 5 is_stmt 1 view .LVU2024
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7239              		.loc 19 671 18 is_stmt 0 view .LVU2025
 7240 023e 9FED550A 		vldr.32	s0, .L474+76
 7241 0242 5348     		ldr	r0, .L474+72
 7242 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7243              	.LVL430:
 672:Veno-Echo.cpp **** 
 7244              		.loc 19 672 5 is_stmt 1 view .LVU2026
 672:Veno-Echo.cpp **** 
 7245              		.loc 19 672 19 is_stmt 0 view .LVU2027
 7246 0248 9FED5D0A 		vldr.32	s0, .L474+120
 7247 024c 5048     		ldr	r0, .L474+72
 7248 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7249              	.LVL431:
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7250              		.loc 19 674 5 is_stmt 1 view .LVU2028
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 243


 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7251              		.loc 19 674 15 is_stmt 0 view .LVU2029
 7252 0252 3D48     		ldr	r0, .L474
 7253 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7254              	.LVL432:
 7255 0258 4F48     		ldr	r0, .L474+80
 7256 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7257              	.LVL433:
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7258              		.loc 19 675 5 is_stmt 1 view .LVU2030
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7259              		.loc 19 675 17 is_stmt 0 view .LVU2031
 7260 025e B0EE480A 		vmov.f32	s0, s16
 7261 0262 4D48     		ldr	r0, .L474+80
 7262 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7263              	.LVL434:
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7264              		.loc 19 676 5 is_stmt 1 view .LVU2032
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7265              		.loc 19 676 18 is_stmt 0 view .LVU2033
 7266 0268 9FED4A0A 		vldr.32	s0, .L474+76
 7267 026c 4A48     		ldr	r0, .L474+80
 7268 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7269              	.LVL435:
 677:Veno-Echo.cpp **** 
 7270              		.loc 19 677 5 is_stmt 1 view .LVU2034
 677:Veno-Echo.cpp **** 
 7271              		.loc 19 677 19 is_stmt 0 view .LVU2035
 7272 0272 9FED530A 		vldr.32	s0, .L474+120
 7273 0276 4848     		ldr	r0, .L474+80
 7274 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7275              	.LVL436:
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7276              		.loc 19 680 5 is_stmt 1 view .LVU2036
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7277              		.loc 19 680 15 is_stmt 0 view .LVU2037
 7278 027c 3248     		ldr	r0, .L474
 7279 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7280              	.LVL437:
 7281 0282 4648     		ldr	r0, .L474+84
 7282 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7283              	.LVL438:
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7284              		.loc 19 681 5 is_stmt 1 view .LVU2038
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7285              		.loc 19 681 17 is_stmt 0 view .LVU2039
 7286 0288 B0EE480A 		vmov.f32	s0, s16
 7287 028c 4348     		ldr	r0, .L474+84
 7288 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7289              	.LVL439:
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7290              		.loc 19 682 5 is_stmt 1 view .LVU2040
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7291              		.loc 19 682 18 is_stmt 0 view .LVU2041
 7292 0292 9FED430A 		vldr.32	s0, .L474+88
 7293 0296 4148     		ldr	r0, .L474+84
 7294 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 244


 7295              	.LVL440:
 683:Veno-Echo.cpp **** 
 7296              		.loc 19 683 5 is_stmt 1 view .LVU2042
 683:Veno-Echo.cpp **** 
 7297              		.loc 19 683 19 is_stmt 0 view .LVU2043
 7298 029c 9FED480A 		vldr.32	s0, .L474+120
 7299 02a0 3E48     		ldr	r0, .L474+84
 7300 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7301              	.LVL441:
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7302              		.loc 19 685 5 is_stmt 1 view .LVU2044
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7303              		.loc 19 685 15 is_stmt 0 view .LVU2045
 7304 02a6 2848     		ldr	r0, .L474
 7305 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7306              	.LVL442:
 7307 02ac 3D48     		ldr	r0, .L474+92
 7308 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7309              	.LVL443:
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7310              		.loc 19 686 5 is_stmt 1 view .LVU2046
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7311              		.loc 19 686 17 is_stmt 0 view .LVU2047
 7312 02b2 B0EE480A 		vmov.f32	s0, s16
 7313 02b6 3B48     		ldr	r0, .L474+92
 7314 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7315              	.LVL444:
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7316              		.loc 19 687 5 is_stmt 1 view .LVU2048
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7317              		.loc 19 687 18 is_stmt 0 view .LVU2049
 7318 02bc 9FED380A 		vldr.32	s0, .L474+88
 7319 02c0 3848     		ldr	r0, .L474+92
 7320 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7321              	.LVL445:
 688:Veno-Echo.cpp **** 
 7322              		.loc 19 688 5 is_stmt 1 view .LVU2050
 688:Veno-Echo.cpp **** 
 7323              		.loc 19 688 19 is_stmt 0 view .LVU2051
 7324 02c6 9FED3E0A 		vldr.32	s0, .L474+120
 7325 02ca 3648     		ldr	r0, .L474+92
 7326 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7327              	.LVL446:
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7328              		.loc 19 691 5 is_stmt 1 view .LVU2052
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7329              		.loc 19 691 20 is_stmt 0 view .LVU2053
 7330 02d0 1D48     		ldr	r0, .L474
 7331 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7332              	.LVL447:
 7333 02d6 3448     		ldr	r0, .L474+96
 7334 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7335              	.LVL448:
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7336              		.loc 19 692 5 is_stmt 1 view .LVU2054
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7337              		.loc 19 692 22 is_stmt 0 view .LVU2055
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 245


 7338 02dc B0EE480A 		vmov.f32	s0, s16
 7339 02e0 3148     		ldr	r0, .L474+96
 7340 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7341              	.LVL449:
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7342              		.loc 19 693 5 is_stmt 1 view .LVU2056
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7343              		.loc 19 693 23 is_stmt 0 view .LVU2057
 7344 02e6 9FED2B0A 		vldr.32	s0, .L474+76
 7345 02ea 2F48     		ldr	r0, .L474+96
 7346 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7347              	.LVL450:
 694:Veno-Echo.cpp **** 
 7348              		.loc 19 694 5 is_stmt 1 view .LVU2058
 694:Veno-Echo.cpp **** 
 7349              		.loc 19 694 24 is_stmt 0 view .LVU2059
 7350 02f0 9FED330A 		vldr.32	s0, .L474+120
 7351 02f4 2C48     		ldr	r0, .L474+96
 7352 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7353              	.LVL451:
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7354              		.loc 19 696 5 is_stmt 1 view .LVU2060
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7355              		.loc 19 696 20 is_stmt 0 view .LVU2061
 7356 02fa 1348     		ldr	r0, .L474
 7357 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7358              	.LVL452:
 7359 0300 2A48     		ldr	r0, .L474+100
 7360 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7361              	.LVL453:
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7362              		.loc 19 697 5 is_stmt 1 view .LVU2062
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7363              		.loc 19 697 22 is_stmt 0 view .LVU2063
 7364 0306 B0EE480A 		vmov.f32	s0, s16
 7365 030a 2848     		ldr	r0, .L474+100
 7366 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7367              	.LVL454:
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7368              		.loc 19 698 5 is_stmt 1 view .LVU2064
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7369              		.loc 19 698 23 is_stmt 0 view .LVU2065
 7370 0310 9FED200A 		vldr.32	s0, .L474+76
 7371 0314 2548     		ldr	r0, .L474+100
 7372 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7373              	.LVL455:
 699:Veno-Echo.cpp **** 
 7374              		.loc 19 699 5 is_stmt 1 view .LVU2066
 699:Veno-Echo.cpp **** 
 7375              		.loc 19 699 24 is_stmt 0 view .LVU2067
 7376 031a 9FED290A 		vldr.32	s0, .L474+120
 7377 031e 2348     		ldr	r0, .L474+100
 7378 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7379              	.LVL456:
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7380              		.loc 19 702 5 is_stmt 1 view .LVU2068
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 246


 7381              		.loc 19 702 20 is_stmt 0 view .LVU2069
 7382 0324 0848     		ldr	r0, .L474
 7383 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7384              	.LVL457:
 7385 032a 2148     		ldr	r0, .L474+104
 7386 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7387              	.LVL458:
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7388              		.loc 19 703 5 is_stmt 1 view .LVU2070
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7389              		.loc 19 703 22 is_stmt 0 view .LVU2071
 7390 0330 B0EE480A 		vmov.f32	s0, s16
 7391 0334 1E48     		ldr	r0, .L474+104
 7392 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7393              	.LVL459:
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7394              		.loc 19 704 5 is_stmt 1 view .LVU2072
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7395              		.loc 19 704 23 is_stmt 0 view .LVU2073
 7396 033a 9FED190A 		vldr.32	s0, .L474+88
 7397 033e 1C48     		ldr	r0, .L474+104
 7398 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7399              	.LVL460:
 7400 0344 3EE0     		b	.L475
 7401              	.L476:
 7402 0346 00BF     		.align	2
 7403              	.L474:
 7404 0348 00000000 		.word	.LANCHOR4
 7405 034c 00004042 		.word	1111490560
 7406 0350 00000000 		.word	.LANCHOR94
 7407 0354 0AD7233C 		.word	1008981770
 7408 0358 00000000 		.word	.LANCHOR95
 7409 035c 00000000 		.word	.LANCHOR96
 7410 0360 00000000 		.word	.LANCHOR97
 7411 0364 00000000 		.word	.LANCHOR98
 7412 0368 00000000 		.word	.LANCHOR99
 7413 036c 00000000 		.word	.LANCHOR100
 7414 0370 00000000 		.word	.LANCHOR101
 7415 0374 00000000 		.word	.LANCHOR70
 7416 0378 00000000 		.word	.LANCHOR104
 7417 037c 00000000 		.word	0
 7418 0380 00000000 		.word	.LANCHOR58
 7419 0384 00000000 		.word	.LANCHOR106
 7420 0388 00000000 		.word	.LANCHOR107
 7421 038c 00000000 		.word	.LANCHOR47
 7422 0390 00000000 		.word	.LANCHOR29
 7423 0394 00803B46 		.word	1178304512
 7424 0398 00000000 		.word	.LANCHOR30
 7425 039c 00000000 		.word	.LANCHOR16
 7426 03a0 00004843 		.word	1128792064
 7427 03a4 00000000 		.word	.LANCHOR17
 7428 03a8 00000000 		.word	.LANCHOR31
 7429 03ac 00000000 		.word	.LANCHOR32
 7430 03b0 00000000 		.word	.LANCHOR18
 7431 03b4 00000000 		.word	.LANCHOR102
 7432 03b8 00000000 		.word	.LANCHOR103
 7433 03bc 00000000 		.word	.LANCHOR105
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 247


 7434 03c0 3333333F 		.word	1060320051
 7435              	.L475:
 705:Veno-Echo.cpp **** 
 7436              		.loc 19 705 5 is_stmt 1 view .LVU2074
 705:Veno-Echo.cpp **** 
 7437              		.loc 19 705 24 is_stmt 0 view .LVU2075
 7438 03c4 1FED020A 		vldr.32	s0, .L474+120
 7439 03c8 7B48     		ldr	r0, .L477
 7440 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7441              	.LVL461:
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7442              		.loc 19 707 5 is_stmt 1 view .LVU2076
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7443              		.loc 19 707 20 is_stmt 0 view .LVU2077
 7444 03ce 7B48     		ldr	r0, .L477+4
 7445 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7446              	.LVL462:
 7447 03d4 7A48     		ldr	r0, .L477+8
 7448 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7449              	.LVL463:
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7450              		.loc 19 708 5 is_stmt 1 view .LVU2078
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7451              		.loc 19 708 22 is_stmt 0 view .LVU2079
 7452 03da B0EE480A 		vmov.f32	s0, s16
 7453 03de 7848     		ldr	r0, .L477+8
 7454 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7455              	.LVL464:
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7456              		.loc 19 709 5 is_stmt 1 view .LVU2080
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7457              		.loc 19 709 23 is_stmt 0 view .LVU2081
 7458 03e4 9FED770A 		vldr.32	s0, .L477+12
 7459 03e8 7548     		ldr	r0, .L477+8
 7460 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7461              	.LVL465:
 710:Veno-Echo.cpp **** 
 7462              		.loc 19 710 5 is_stmt 1 view .LVU2082
 710:Veno-Echo.cpp **** 
 7463              		.loc 19 710 24 is_stmt 0 view .LVU2083
 7464 03ee 9FED760A 		vldr.32	s0, .L477+16
 7465 03f2 7348     		ldr	r0, .L477+8
 7466 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7467              	.LVL466:
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7468              		.loc 19 712 5 is_stmt 1 view .LVU2084
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7469              		.loc 19 712 21 is_stmt 0 view .LVU2085
 7470 03f8 7048     		ldr	r0, .L477+4
 7471 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7472              	.LVL467:
 7473 03fe 7348     		ldr	r0, .L477+20
 7474 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7475              	.LVL468:
 713:Veno-Echo.cpp **** 
 7476              		.loc 19 713 5 is_stmt 1 view .LVU2086
 713:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 248


 7477              		.loc 19 713 21 is_stmt 0 view .LVU2087
 7478 0404 6D48     		ldr	r0, .L477+4
 7479 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7480              	.LVL469:
 7481 040a 7148     		ldr	r0, .L477+24
 7482 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7483              	.LVL470:
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7484              		.loc 19 716 5 is_stmt 1 view .LVU2088
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7485              		.loc 19 716 13 is_stmt 0 view .LVU2089
 7486 0410 6A48     		ldr	r0, .L477+4
 7487 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7488              	.LVL471:
 7489 0416 F0EE407A 		vmov.f32	s15, s0
 7490              	.LVL472:
 7491              	.LBB1446:
 7492              	.LBI1388:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7493              		.loc 8 42 10 is_stmt 1 view .LVU2090
 7494              	.LBB1390:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7495              		.loc 8 44 9 view .LVU2091
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7496              		.loc 8 46 20 is_stmt 0 view .LVU2092
 7497 041a 9FED6E7A 		vldr.32	s14, .L477+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7498              		.loc 8 49 34 view .LVU2093
 7499 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7500              		.loc 8 47 20 view .LVU2094
 7501 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7502              		.loc 8 45 27 view .LVU2095
 7503 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7504              		.loc 8 46 20 view .LVU2096
 7505 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7506              		.loc 8 44 20 view .LVU2097
 7507 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7508              		.loc 8 45 9 is_stmt 1 view .LVU2098
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7509              		.loc 8 48 20 is_stmt 0 view .LVU2099
 7510 042e 84ED058A 		vstr.32	s16, [r4, #20]
 7511              	.LBE1390:
 7512              	.LBE1446:
 738:Veno-Echo.cpp **** 
 7513              		.loc 19 738 17 view .LVU2100
 7514 0432 694D     		ldr	r5, .L477+32
 7515              	.LBB1447:
 7516              	.LBB1391:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7517              		.loc 8 49 34 view .LVU2101
 7518 0434 B0EE470A 		vmov.f32	s0, s14
 7519              	.LVL473:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 249


  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7520              		.loc 8 45 20 view .LVU2102
 7521 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7522              		.loc 8 46 9 is_stmt 1 view .LVU2103
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7523              		.loc 8 47 9 view .LVU2104
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7524              		.loc 8 48 9 view .LVU2105
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7525              		.loc 8 49 9 view .LVU2106
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7526              		.loc 8 49 34 is_stmt 0 view .LVU2107
 7527 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7528              	.LVL474:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7529              		.loc 8 52 20 view .LVU2108
 7530 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7531              		.loc 8 49 34 view .LVU2109
 7532 0444 F0EE407A 		vmov.f32	s15, s0
 7533              	.LBE1391:
 7534              	.LBE1447:
 7535              	.LBB1448:
 7536              	.LBB1449:
 7537              		.loc 8 61 34 view .LVU2110
 7538 0448 2046     		mov	r0, r4
 7539              	.LBE1449:
 7540              	.LBE1448:
 7541              	.LBB1453:
 7542              	.LBB1454:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7543              		.loc 8 72 19 view .LVU2111
 7544 044a 2770     		strb	r7, [r4]
 7545              	.LBE1454:
 7546              	.LBE1453:
 7547              	.LBB1456:
 7548              	.LBB1392:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7549              		.loc 8 52 20 view .LVU2112
 7550 044c A384     		strh	r3, [r4, #36]	@ movhi
 7551              	.LBE1392:
 7552              	.LBE1456:
 7553              	.LBB1457:
 7554              	.LBB1450:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7555              		.loc 8 61 34 view .LVU2113
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 250


 7556 044e B0EE680A 		vmov.f32	s0, s17
 7557              	.LBE1450:
 7558              	.LBE1457:
 7559              	.LBB1458:
 7560              	.LBB1393:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7561              		.loc 8 49 20 view .LVU2114
 7562 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7563              		.loc 8 50 9 is_stmt 1 view .LVU2115
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7564              		.loc 8 51 9 view .LVU2116
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7565              		.loc 8 52 9 view .LVU2117
 7566              	.LVL475:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7567              		.loc 8 52 9 is_stmt 0 view .LVU2118
 7568              	.LBE1393:
 7569              	.LBE1458:
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7570              		.loc 19 717 5 is_stmt 1 view .LVU2119
 7571              	.LBB1459:
 7572              	.LBI1453:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7573              		.loc 8 70 17 view .LVU2120
 7574              	.LBB1455:
 7575              		.loc 8 72 9 view .LVU2121
 7576              		.loc 8 72 9 is_stmt 0 view .LVU2122
 7577              	.LBE1455:
 7578              	.LBE1459:
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7579              		.loc 19 718 5 is_stmt 1 view .LVU2123
 7580              	.LBB1460:
 7581              	.LBI1448:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7582              		.loc 8 58 17 view .LVU2124
 7583              	.LBB1451:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7584              		.loc 8 60 9 view .LVU2125
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7585              		.loc 8 61 9 view .LVU2126
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7586              		.loc 8 60 20 is_stmt 0 view .LVU2127
 7587 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7588              		.loc 8 61 34 view .LVU2128
 7589 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7590              	.LVL476:
 7591 045e F0EE407A 		vmov.f32	s15, s0
 7592              	.LBE1451:
 7593              	.LBE1460:
 726:Veno-Echo.cpp **** 
 7594              		.loc 19 726 19 view .LVU2129
 7595 0462 41F27072 		movw	r2, #6000
 7596 0466 5021     		movs	r1, #80
 7597 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 7598 046c 5B48     		ldr	r0, .L477+36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 251


 7599              	.LBB1461:
 7600              	.LBB1462:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7601              		.loc 8 67 46 view .LVU2130
 7602 046e C4ED018A 		vstr.32	s17, [r4, #4]
 7603              	.LBE1462:
 7604              	.LBE1461:
 7605              	.LBB1464:
 7606              	.LBB1452:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7607              		.loc 8 61 20 view .LVU2131
 7608 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 7609              	.LVL477:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7610              		.loc 8 61 20 view .LVU2132
 7611              	.LBE1452:
 7612              	.LBE1464:
 719:Veno-Echo.cpp **** 
 7613              		.loc 19 719 5 is_stmt 1 view .LVU2133
 7614              	.LBB1465:
 7615              	.LBI1461:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7616              		.loc 8 67 17 view .LVU2134
 7617              	.LBB1463:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7618              		.loc 8 67 41 view .LVU2135
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7619              		.loc 8 67 41 is_stmt 0 view .LVU2136
 7620              	.LBE1463:
 7621              	.LBE1465:
 726:Veno-Echo.cpp **** 
 7622              		.loc 19 726 5 is_stmt 1 view .LVU2137
 726:Veno-Echo.cpp **** 
 7623              		.loc 19 726 19 is_stmt 0 view .LVU2138
 7624 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7625              	.LVL478:
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7626              		.loc 19 730 5 is_stmt 1 view .LVU2139
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7627              		.loc 19 730 23 is_stmt 0 view .LVU2140
 7628 047a 1820     		movs	r0, #24
 738:Veno-Echo.cpp **** 
 7629              		.loc 19 738 17 view .LVU2141
 7630 047c 584C     		ldr	r4, .L477+40
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7631              		.loc 19 730 23 view .LVU2142
 7632 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7633              	.LVL479:
 7634 0482 0346     		mov	r3, r0	@ movhi
 7635 0484 4D48     		ldr	r0, .L477+4
 7636 0486 ADF84030 		strh	r3, [sp, #64]	@ movhi
 7637 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7638              	.LVL480:
 7639 048e 1099     		ldr	r1, [sp, #64]
 7640 0490 5448     		ldr	r0, .L477+44
 7641 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7642              	.LVL481:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 252


 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7643              		.loc 19 731 5 is_stmt 1 view .LVU2143
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7644              		.loc 19 731 27 is_stmt 0 view .LVU2144
 7645 0496 5148     		ldr	r0, .L477+36
 7646 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7647              	.LVL482:
 7648 049c 5148     		ldr	r0, .L477+44
 7649 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7650              	.LVL483:
 732:Veno-Echo.cpp **** 
 7651              		.loc 19 732 5 is_stmt 1 view .LVU2145
 732:Veno-Echo.cpp **** 
 7652              		.loc 19 732 29 is_stmt 0 view .LVU2146
 7653 04a2 5048     		ldr	r0, .L477+44
 7654 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7655              	.LVL484:
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7656              		.loc 19 737 5 is_stmt 1 view .LVU2147
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7657              		.loc 19 737 18 is_stmt 0 view .LVU2148
 7658 04a8 4B48     		ldr	r0, .L477+32
 7659 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7660              	.LVL485:
 738:Veno-Echo.cpp **** 
 7661              		.loc 19 738 5 is_stmt 1 view .LVU2149
 738:Veno-Echo.cpp **** 
 7662              		.loc 19 738 17 is_stmt 0 view .LVU2150
 7663 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7664 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7665 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7666 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 746:Veno-Echo.cpp **** 
 7667              		.loc 19 746 5 is_stmt 1 view .LVU2151
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7668              		.loc 19 748 5 view .LVU2152
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7669              		.loc 19 748 28 is_stmt 0 view .LVU2153
 7670 04ba 0F20     		movs	r0, #15
 7671 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7672              	.LVL486:
 7673 04c0 0346     		mov	r3, r0	@ movhi
 7674 04c2 1CA8     		add	r0, sp, #112
 7675 04c4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7676 04c8 1199     		ldr	r1, [sp, #68]
 7677 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7678              	.LVL487:
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7679              		.loc 19 749 5 is_stmt 1 view .LVU2154
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7680              		.loc 19 749 28 is_stmt 0 view .LVU2155
 7681 04ce 1020     		movs	r0, #16
 7682 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7683              	.LVL488:
 7684 04d4 0346     		mov	r3, r0	@ movhi
 7685 04d6 0DF18100 		add	r0, sp, #129
 7686 04da ADF84830 		strh	r3, [sp, #72]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 253


 7687 04de 1299     		ldr	r1, [sp, #72]
 7688 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7689              	.LVL489:
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7690              		.loc 19 750 5 is_stmt 1 view .LVU2156
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7691              		.loc 19 750 28 is_stmt 0 view .LVU2157
 7692 04e4 1120     		movs	r0, #17
 7693 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7694              	.LVL490:
 7695 04ea 0346     		mov	r3, r0	@ movhi
 7696 04ec 0DF19200 		add	r0, sp, #146
 7697 04f0 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7698 04f4 1399     		ldr	r1, [sp, #76]
 7699 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7700              	.LVL491:
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7701              		.loc 19 751 5 is_stmt 1 view .LVU2158
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7702              		.loc 19 751 28 is_stmt 0 view .LVU2159
 7703 04fa 1220     		movs	r0, #18
 7704 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7705              	.LVL492:
 7706 0500 0346     		mov	r3, r0	@ movhi
 7707 0502 0DF1A300 		add	r0, sp, #163
 7708 0506 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7709 050a 1499     		ldr	r1, [sp, #80]
 7710 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7711              	.LVL493:
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7712              		.loc 19 752 5 is_stmt 1 view .LVU2160
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7713              		.loc 19 752 28 is_stmt 0 view .LVU2161
 7714 0510 1320     		movs	r0, #19
 7715 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7716              	.LVL494:
 7717 0516 0346     		mov	r3, r0	@ movhi
 7718 0518 2DA8     		add	r0, sp, #180
 7719 051a ADF85430 		strh	r3, [sp, #84]	@ movhi
 7720 051e 1599     		ldr	r1, [sp, #84]
 7721 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7722              	.LVL495:
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7723              		.loc 19 753 5 is_stmt 1 view .LVU2162
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7724              		.loc 19 753 28 is_stmt 0 view .LVU2163
 7725 0524 1420     		movs	r0, #20
 7726 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7727              	.LVL496:
 7728 052a 0346     		mov	r3, r0	@ movhi
 7729 052c 0DF1C500 		add	r0, sp, #197
 7730 0530 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7731 0534 1699     		ldr	r1, [sp, #88]
 7732 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7733              	.LVL497:
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7734              		.loc 19 755 5 is_stmt 1 view .LVU2164
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 254


 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7735              		.loc 19 755 28 is_stmt 0 view .LVU2165
 7736 053a 1620     		movs	r0, #22
 7737 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7738              	.LVL498:
 7739 0540 0346     		mov	r3, r0	@ movhi
 7740 0542 0DF1D600 		add	r0, sp, #214
 7741 0546 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7742 054a 1799     		ldr	r1, [sp, #92]
 7743 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7744              	.LVL499:
 756:Veno-Echo.cpp **** 
 7745              		.loc 19 756 5 is_stmt 1 view .LVU2166
 756:Veno-Echo.cpp **** 
 7746              		.loc 19 756 25 is_stmt 0 view .LVU2167
 7747 0550 1920     		movs	r0, #25
 7748 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7749              	.LVL500:
 7750 0556 0346     		mov	r3, r0	@ movhi
 7751 0558 0E20     		movs	r0, #14
 7752 055a ADF86030 		strh	r3, [sp, #96]	@ movhi
 7753 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7754              	.LVL501:
 7755 0562 0346     		mov	r3, r0	@ movhi
 7756 0564 0D20     		movs	r0, #13
 7757 0566 ADF86430 		strh	r3, [sp, #100]	@ movhi
 7758 056a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7759              	.LVL502:
 7760 056e 0346     		mov	r3, r0	@ movhi
 7761 0570 0C20     		movs	r0, #12
 7762 0572 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7763 0576 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7764              	.LVL503:
 7765 057a BDF86810 		ldrh	r1, [sp, #104]
 7766 057e 0822     		movs	r2, #8
 7767 0580 199B     		ldr	r3, [sp, #100]
 7768 0582 ADF80400 		strh	r0, [sp, #4]	@ movhi
 7769 0586 0DF1E700 		add	r0, sp, #231
 7770 058a ADF80010 		strh	r1, [sp]	@ movhi
 7771 058e 1899     		ldr	r1, [sp, #96]
 7772 0590 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7773              	.LVL504:
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7774              		.loc 19 759 5 is_stmt 1 view .LVU2168
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7775              		.loc 19 759 16 is_stmt 0 view .LVU2169
 7776 0594 1CA9     		add	r1, sp, #112
 7777 0596 0623     		movs	r3, #6
 7778 0598 0822     		movs	r2, #8
 7779 059a 1348     		ldr	r0, .L477+48
 7780 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7781              	.LVL505:
 760:Veno-Echo.cpp **** 
 7782              		.loc 19 760 5 is_stmt 1 view .LVU2170
 760:Veno-Echo.cpp **** 
 7783              		.loc 19 760 17 is_stmt 0 view .LVU2171
 7784 05a0 1148     		ldr	r0, .L477+48
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 255


 7785 05a2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7786              	.LVL506:
 762:Veno-Echo.cpp ****     // start audio callback
 7787              		.loc 19 762 5 is_stmt 1 view .LVU2172
 762:Veno-Echo.cpp ****     // start audio callback
 7788              		.loc 19 762 25 is_stmt 0 view .LVU2173
 7789 05a6 3946     		mov	r1, r7
 7790 05a8 0448     		ldr	r0, .L477+4
 7791 05aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7792              	.LVL507:
 764:Veno-Echo.cpp **** 
 7793              		.loc 19 764 5 is_stmt 1 view .LVU2174
 764:Veno-Echo.cpp **** 
 7794              		.loc 19 764 18 is_stmt 0 view .LVU2175
 7795 05ae 0F49     		ldr	r1, .L477+52
 7796 05b0 0248     		ldr	r0, .L477+4
 7797 05b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7798              	.LVL508:
 7799              	.L472:
 768:Veno-Echo.cpp ****      {
 7800              		.loc 19 768 6 is_stmt 1 discriminator 1 view .LVU2176
 768:Veno-Echo.cpp ****      {
 7801              		.loc 19 768 6 discriminator 1 view .LVU2177
 768:Veno-Echo.cpp ****      {
 7802              		.loc 19 768 6 discriminator 1 view .LVU2178
 768:Veno-Echo.cpp ****      {
 7803              		.loc 19 768 6 discriminator 1 view .LVU2179
 7804 05b6 FEE7     		b	.L472
 7805              	.L478:
 7806              		.align	2
 7807              	.L477:
 7808 05b8 00000000 		.word	.LANCHOR18
 7809 05bc 00000000 		.word	.LANCHOR4
 7810 05c0 00000000 		.word	.LANCHOR19
 7811 05c4 00004843 		.word	1128792064
 7812 05c8 3333333F 		.word	1060320051
 7813 05cc 00000000 		.word	.LANCHOR108
 7814 05d0 00000000 		.word	.LANCHOR109
 7815 05d4 0000C842 		.word	1120403456
 7816 05d8 00000000 		.word	.LANCHOR110
 7817 05dc 00000000 		.word	.LANCHOR73
 7818 05e0 00000000 		.word	.LANCHOR20
 7819 05e4 00000000 		.word	.LANCHOR72
 7820 05e8 18000000 		.word	.LANCHOR4+24
 7821 05ec 00000000 		.word	_ZL13AudioCallbackPfS_j
 7822              		.cfi_endproc
 7823              	.LFE4290:
 7825              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7826              		.align	1
 7827              		.p2align 2,,3
 7828              		.global	_Z13TurnOnAllLEDsv
 7829              		.syntax unified
 7830              		.thumb
 7831              		.thumb_func
 7832              		.fpu fpv5-d16
 7834              	_Z13TurnOnAllLEDsv:
 7835              	.LFB4313:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 256


1988:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7836              		.loc 19 1988 1 view -0
 7837              		.cfi_startproc
 7838              		@ args = 0, pretend = 0, frame = 0
 7839              		@ frame_needed = 0, uses_anonymous_args = 0
1989:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7840              		.loc 19 1989 5 view .LVU2181
1988:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7841              		.loc 19 1988 1 is_stmt 0 view .LVU2182
 7842 0000 08B5     		push	{r3, lr}
 7843              		.cfi_def_cfa_offset 8
 7844              		.cfi_offset 3, -8
 7845              		.cfi_offset 14, -4
1989:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7846              		.loc 19 1989 26 view .LVU2183
 7847 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7848 0006 1148     		ldr	r0, .L481
 7849 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7850              	.LVL509:
1990:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7851              		.loc 19 1990 5 is_stmt 1 view .LVU2184
1990:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7852              		.loc 19 1990 28 is_stmt 0 view .LVU2185
 7853 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7854 0010 0F48     		ldr	r0, .L481+4
 7855 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7856              	.LVL510:
1991:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7857              		.loc 19 1991 5 is_stmt 1 view .LVU2186
1991:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7858              		.loc 19 1991 28 is_stmt 0 view .LVU2187
 7859 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7860 001a 0E48     		ldr	r0, .L481+8
 7861 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7862              	.LVL511:
1992:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7863              		.loc 19 1992 5 is_stmt 1 view .LVU2188
1992:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7864              		.loc 19 1992 21 is_stmt 0 view .LVU2189
 7865 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7866 0024 0C48     		ldr	r0, .L481+12
 7867 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7868              	.LVL512:
1993:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7869              		.loc 19 1993 5 is_stmt 1 view .LVU2190
1993:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7870              		.loc 19 1993 21 is_stmt 0 view .LVU2191
 7871 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7872 002e 0B48     		ldr	r0, .L481+16
 7873 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7874              	.LVL513:
1994:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7875              		.loc 19 1994 5 is_stmt 1 view .LVU2192
1994:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7876              		.loc 19 1994 19 is_stmt 0 view .LVU2193
 7877 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 7878 0038 0948     		ldr	r0, .L481+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 257


 7879 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7880              	.LVL514:
1995:Veno-Echo.cpp **** }
 7881              		.loc 19 1995 5 is_stmt 1 view .LVU2194
1995:Veno-Echo.cpp **** }
 7882              		.loc 19 1995 19 is_stmt 0 view .LVU2195
 7883 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7884 0042 0848     		ldr	r0, .L481+24
1996:Veno-Echo.cpp **** 
 7885              		.loc 19 1996 1 view .LVU2196
 7886 0044 BDE80840 		pop	{r3, lr}
 7887              		.cfi_restore 14
 7888              		.cfi_restore 3
 7889              		.cfi_def_cfa_offset 0
1995:Veno-Echo.cpp **** }
 7890              		.loc 19 1995 19 view .LVU2197
 7891 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7892              	.LVL515:
 7893              	.L482:
 7894              		.align	2
 7895              	.L481:
 7896 004c 00000000 		.word	.LANCHOR72
 7897 0050 04000000 		.word	.LANCHOR0+4
 7898 0054 04000000 		.word	.LANCHOR1+4
 7899 0058 00000000 		.word	.LANCHOR96
 7900 005c 00000000 		.word	.LANCHOR97
 7901 0060 00000000 		.word	.LANCHOR94
 7902 0064 00000000 		.word	.LANCHOR95
 7903              		.cfi_endproc
 7904              	.LFE4313:
 7906              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7907              		.align	1
 7908              		.p2align 2,,3
 7909              		.global	_Z12ResetAllLEDsv
 7910              		.syntax unified
 7911              		.thumb
 7912              		.thumb_func
 7913              		.fpu fpv5-d16
 7915              	_Z12ResetAllLEDsv:
 7916              	.LFB4314:
1999:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7917              		.loc 19 1999 1 is_stmt 1 view -0
 7918              		.cfi_startproc
 7919              		@ args = 0, pretend = 0, frame = 0
 7920              		@ frame_needed = 0, uses_anonymous_args = 0
2000:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7921              		.loc 19 2000 5 view .LVU2199
1999:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7922              		.loc 19 1999 1 is_stmt 0 view .LVU2200
 7923 0000 08B5     		push	{r3, lr}
 7924              		.cfi_def_cfa_offset 8
 7925              		.cfi_offset 3, -8
 7926              		.cfi_offset 14, -4
2000:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7927              		.loc 19 2000 26 view .LVU2201
 7928 0002 9FED1E0A 		vldr.32	s0, .L490
 7929 0006 1E48     		ldr	r0, .L490+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 258


 7930 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7931              	.LVL516:
2001:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7932              		.loc 19 2001 5 is_stmt 1 view .LVU2202
2001:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7933              		.loc 19 2001 28 is_stmt 0 view .LVU2203
 7934 000c 9FED1B0A 		vldr.32	s0, .L490
 7935 0010 1C48     		ldr	r0, .L490+8
 7936 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7937              	.LVL517:
2002:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7938              		.loc 19 2002 5 is_stmt 1 view .LVU2204
2002:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7939              		.loc 19 2002 28 is_stmt 0 view .LVU2205
 7940 0016 1C48     		ldr	r0, .L490+12
 7941 0018 9FED180A 		vldr.32	s0, .L490
 7942 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7943              	.LVL518:
2003:Veno-Echo.cpp ****     {
 7944              		.loc 19 2003 5 is_stmt 1 view .LVU2206
2003:Veno-Echo.cpp ****     {
 7945              		.loc 19 2003 26 is_stmt 0 view .LVU2207
 7946 0020 1A48     		ldr	r0, .L490+16
 7947 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7948              	.LVL519:
2003:Veno-Echo.cpp ****     {
 7949              		.loc 19 2003 5 view .LVU2208
 7950 0026 C8B9     		cbnz	r0, .L484
2005:Veno-Echo.cpp ****     }
 7951              		.loc 19 2005 9 is_stmt 1 view .LVU2209
2005:Veno-Echo.cpp ****     }
 7952              		.loc 19 2005 25 is_stmt 0 view .LVU2210
 7953 0028 1848     		ldr	r0, .L490+16
 7954 002a 9FED140A 		vldr.32	s0, .L490
 7955 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7956              	.LVL520:
2012:Veno-Echo.cpp ****     {
 7957              		.loc 19 2012 5 is_stmt 1 view .LVU2211
2012:Veno-Echo.cpp ****     {
 7958              		.loc 19 2012 26 is_stmt 0 view .LVU2212
 7959 0032 1748     		ldr	r0, .L490+20
 7960 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7961              	.LVL521:
2012:Veno-Echo.cpp ****     {
 7962              		.loc 19 2012 5 view .LVU2213
 7963 0038 D0B9     		cbnz	r0, .L486
 7964              	.L489:
2014:Veno-Echo.cpp ****     }
 7965              		.loc 19 2014 9 is_stmt 1 view .LVU2214
2014:Veno-Echo.cpp ****     }
 7966              		.loc 19 2014 25 is_stmt 0 view .LVU2215
 7967 003a 9FED100A 		vldr.32	s0, .L490
 7968 003e 1448     		ldr	r0, .L490+20
 7969 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7970              	.LVL522:
 7971              	.L487:
2021:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 259


 7972              		.loc 19 2021 5 is_stmt 1 view .LVU2216
2021:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7973              		.loc 19 2021 19 is_stmt 0 view .LVU2217
 7974 0044 9FED0D0A 		vldr.32	s0, .L490
 7975 0048 1248     		ldr	r0, .L490+24
 7976 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7977              	.LVL523:
2022:Veno-Echo.cpp **** }
 7978              		.loc 19 2022 5 is_stmt 1 view .LVU2218
2022:Veno-Echo.cpp **** }
 7979              		.loc 19 2022 19 is_stmt 0 view .LVU2219
 7980 004e 9FED0B0A 		vldr.32	s0, .L490
 7981 0052 1148     		ldr	r0, .L490+28
2023:Veno-Echo.cpp **** 
 7982              		.loc 19 2023 1 view .LVU2220
 7983 0054 BDE80840 		pop	{r3, lr}
 7984              		.cfi_remember_state
 7985              		.cfi_restore 14
 7986              		.cfi_restore 3
 7987              		.cfi_def_cfa_offset 0
2022:Veno-Echo.cpp **** }
 7988              		.loc 19 2022 19 view .LVU2221
 7989 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7990              	.LVL524:
 7991              	.L484:
 7992              		.cfi_restore_state
2009:Veno-Echo.cpp ****     }
 7993              		.loc 19 2009 8 is_stmt 1 view .LVU2222
2009:Veno-Echo.cpp ****     }
 7994              		.loc 19 2009 24 is_stmt 0 view .LVU2223
 7995 005c 0B48     		ldr	r0, .L490+16
 7996 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7997 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7998              	.LVL525:
2012:Veno-Echo.cpp ****     {
 7999              		.loc 19 2012 5 is_stmt 1 view .LVU2224
2012:Veno-Echo.cpp ****     {
 8000              		.loc 19 2012 26 is_stmt 0 view .LVU2225
 8001 0066 0A48     		ldr	r0, .L490+20
 8002 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8003              	.LVL526:
2012:Veno-Echo.cpp ****     {
 8004              		.loc 19 2012 5 view .LVU2226
 8005 006c 0028     		cmp	r0, #0
 8006 006e E4D0     		beq	.L489
 8007              	.L486:
2018:Veno-Echo.cpp ****     }
 8008              		.loc 19 2018 9 is_stmt 1 view .LVU2227
2018:Veno-Echo.cpp ****     }
 8009              		.loc 19 2018 25 is_stmt 0 view .LVU2228
 8010 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8011 0074 0648     		ldr	r0, .L490+20
 8012 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8013              	.LVL527:
 8014 007a E3E7     		b	.L487
 8015              	.L491:
 8016              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 260


 8017              	.L490:
 8018 007c 00000000 		.word	0
 8019 0080 00000000 		.word	.LANCHOR72
 8020 0084 04000000 		.word	.LANCHOR0+4
 8021 0088 04000000 		.word	.LANCHOR1+4
 8022 008c 00000000 		.word	.LANCHOR96
 8023 0090 00000000 		.word	.LANCHOR97
 8024 0094 00000000 		.word	.LANCHOR94
 8025 0098 00000000 		.word	.LANCHOR95
 8026              		.cfi_endproc
 8027              	.LFE4314:
 8029              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8030              		.align	1
 8031              		.p2align 2,,3
 8032              		.global	_Z14Update_Buttonsv
 8033              		.syntax unified
 8034              		.thumb
 8035              		.thumb_func
 8036              		.fpu fpv5-d16
 8038              	_Z14Update_Buttonsv:
 8039              	.LFB4308:
1613:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8040              		.loc 19 1613 1 is_stmt 1 view -0
 8041              		.cfi_startproc
 8042              		@ args = 0, pretend = 0, frame = 0
 8043              		@ frame_needed = 0, uses_anonymous_args = 0
1614:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8044              		.loc 19 1614 5 view .LVU2230
1615:Veno-Echo.cpp ****     static int buttonstate{};
 8045              		.loc 19 1615 5 view .LVU2231
1616:Veno-Echo.cpp **** 
 8046              		.loc 19 1616 5 view .LVU2232
1618:Veno-Echo.cpp ****     Rev_R_sw.update();
 8047              		.loc 19 1618 5 view .LVU2233
1613:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8048              		.loc 19 1613 1 is_stmt 0 view .LVU2234
 8049 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8050              		.cfi_def_cfa_offset 24
 8051              		.cfi_offset 3, -24
 8052              		.cfi_offset 4, -20
 8053              		.cfi_offset 5, -16
 8054              		.cfi_offset 6, -12
 8055              		.cfi_offset 7, -8
 8056              		.cfi_offset 14, -4
1618:Veno-Echo.cpp ****     Rev_R_sw.update();
 8057              		.loc 19 1618 20 view .LVU2235
 8058 0002 6D48     		ldr	r0, .L541
 8059 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8060              	.LVL528:
1619:Veno-Echo.cpp ****     LPF_sw.update();
 8061              		.loc 19 1619 5 is_stmt 1 view .LVU2236
1619:Veno-Echo.cpp ****     LPF_sw.update();
 8062              		.loc 19 1619 20 is_stmt 0 view .LVU2237
 8063 0008 6C48     		ldr	r0, .L541+4
 8064 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8065              	.LVL529:
1620:Veno-Echo.cpp ****     HPF_sw.update();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 261


 8066              		.loc 19 1620 5 is_stmt 1 view .LVU2238
1620:Veno-Echo.cpp ****     HPF_sw.update();
 8067              		.loc 19 1620 18 is_stmt 0 view .LVU2239
 8068 000e 6C48     		ldr	r0, .L541+8
 8069 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8070              	.LVL530:
1621:Veno-Echo.cpp ****     Tap_Button.update();
 8071              		.loc 19 1621 5 is_stmt 1 view .LVU2240
1624:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8072              		.loc 19 1624 26 is_stmt 0 view .LVU2241
 8073 0014 6B4C     		ldr	r4, .L541+12
1621:Veno-Echo.cpp ****     Tap_Button.update();
 8074              		.loc 19 1621 18 view .LVU2242
 8075 0016 6C48     		ldr	r0, .L541+16
 8076 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8077              	.LVL531:
1622:Veno-Echo.cpp **** 
 8078              		.loc 19 1622 5 is_stmt 1 view .LVU2243
1622:Veno-Echo.cpp **** 
 8079              		.loc 19 1622 22 is_stmt 0 view .LVU2244
 8080 001c 6B48     		ldr	r0, .L541+20
 8081 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8082              	.LVL532:
1624:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8083              		.loc 19 1624 5 is_stmt 1 view .LVU2245
1624:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8084              		.loc 19 1624 26 is_stmt 0 view .LVU2246
 8085 0022 2046     		mov	r0, r4
 8086 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8087              	.LVL533:
1625:Veno-Echo.cpp ****     //TapButton.Debounce();
 8088              		.loc 19 1625 5 is_stmt 1 view .LVU2247
1625:Veno-Echo.cpp ****     //TapButton.Debounce();
 8089              		.loc 19 1625 26 is_stmt 0 view .LVU2248
 8090 0028 6948     		ldr	r0, .L541+24
 8091 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8092              	.LVL534:
1627:Veno-Echo.cpp ****     ClockIn.Debounce();
 8093              		.loc 19 1627 5 is_stmt 1 view .LVU2249
1627:Veno-Echo.cpp ****     ClockIn.Debounce();
 8094              		.loc 19 1627 18 is_stmt 0 view .LVU2250
 8095 002e 6948     		ldr	r0, .L541+28
 8096 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8097              	.LVL535:
1628:Veno-Echo.cpp ****     //gate inputs
 8098              		.loc 19 1628 5 is_stmt 1 view .LVU2251
1628:Veno-Echo.cpp ****     //gate inputs
 8099              		.loc 19 1628 21 is_stmt 0 view .LVU2252
 8100 0034 6848     		ldr	r0, .L541+32
 8101 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8102              	.LVL536:
1630:Veno-Echo.cpp ****     {
 8103              		.loc 19 1630 5 is_stmt 1 view .LVU2253
 8104              		.loc 1 69 38 view .LVU2254
1630:Veno-Echo.cpp ****     {
 8105              		.loc 19 1630 5 is_stmt 0 view .LVU2255
 8106 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 262


 8107 003c 7F2B     		cmp	r3, #127
 8108 003e 00F09F80 		beq	.L532
 8109              	.L493:
1636:Veno-Echo.cpp ****     {
 8110              		.loc 19 1636 5 is_stmt 1 view .LVU2256
 8111              	.LVL537:
 8112              		.loc 1 69 38 view .LVU2257
1636:Veno-Echo.cpp ****     {
 8113              		.loc 19 1636 32 is_stmt 0 view .LVU2258
 8114 0042 634B     		ldr	r3, .L541+24
1636:Veno-Echo.cpp ****     {
 8115              		.loc 19 1636 5 view .LVU2259
 8116 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8117 0046 7F2B     		cmp	r3, #127
 8118 0048 00F09680 		beq	.L533
 8119              	.L494:
1644:Veno-Echo.cpp ****     {
 8120              		.loc 19 1644 5 is_stmt 1 view .LVU2260
1644:Veno-Echo.cpp ****     {
 8121              		.loc 19 1644 28 is_stmt 0 view .LVU2261
 8122 004c 5A48     		ldr	r0, .L541
1646:Veno-Echo.cpp ****         if (buttonstate == 3)
 8123              		.loc 19 1646 21 view .LVU2262
 8124 004e 634C     		ldr	r4, .L541+36
1644:Veno-Echo.cpp ****     {
 8125              		.loc 19 1644 28 view .LVU2263
 8126 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8127              	.LVL538:
1644:Veno-Echo.cpp ****     {
 8128              		.loc 19 1644 5 view .LVU2264
 8129 0054 28B1     		cbz	r0, .L496
1646:Veno-Echo.cpp ****         if (buttonstate == 3)
 8130              		.loc 19 1646 9 is_stmt 1 view .LVU2265
1646:Veno-Echo.cpp ****         if (buttonstate == 3)
 8131              		.loc 19 1646 21 is_stmt 0 view .LVU2266
 8132 0056 2368     		ldr	r3, [r4]
 8133 0058 0133     		adds	r3, r3, #1
1647:Veno-Echo.cpp ****         {
 8134              		.loc 19 1647 9 view .LVU2267
 8135 005a 032B     		cmp	r3, #3
1646:Veno-Echo.cpp ****         if (buttonstate == 3)
 8136              		.loc 19 1646 21 view .LVU2268
 8137 005c 2360     		str	r3, [r4]
1647:Veno-Echo.cpp ****         {
 8138              		.loc 19 1647 9 is_stmt 1 view .LVU2269
 8139 005e 00F09380 		beq	.L534
 8140              	.L496:
1653:Veno-Echo.cpp ****     {
 8141              		.loc 19 1653 5 view .LVU2270
1653:Veno-Echo.cpp ****     {
 8142              		.loc 19 1653 29 is_stmt 0 view .LVU2271
 8143 0062 5548     		ldr	r0, .L541
 8144 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8145              	.LVL539:
1653:Veno-Echo.cpp ****     {
 8146              		.loc 19 1653 5 view .LVU2272
 8147 0068 10B1     		cbz	r0, .L498
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 263


1655:Veno-Echo.cpp ****     }
 8148              		.loc 19 1655 9 is_stmt 1 view .LVU2273
1655:Veno-Echo.cpp ****     }
 8149              		.loc 19 1655 21 is_stmt 0 view .LVU2274
 8150 006a 2368     		ldr	r3, [r4]
 8151 006c 013B     		subs	r3, r3, #1
 8152 006e 2360     		str	r3, [r4]
 8153              	.L498:
1658:Veno-Echo.cpp ****     {
 8154              		.loc 19 1658 5 is_stmt 1 view .LVU2275
1658:Veno-Echo.cpp ****     {
 8155              		.loc 19 1658 28 is_stmt 0 view .LVU2276
 8156 0070 5248     		ldr	r0, .L541+4
 8157 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8158              	.LVL540:
1658:Veno-Echo.cpp ****     {
 8159              		.loc 19 1658 5 view .LVU2277
 8160 0076 28B1     		cbz	r0, .L500
1660:Veno-Echo.cpp ****         if (buttonstate == 3)
 8161              		.loc 19 1660 9 is_stmt 1 view .LVU2278
1660:Veno-Echo.cpp ****         if (buttonstate == 3)
 8162              		.loc 19 1660 21 is_stmt 0 view .LVU2279
 8163 0078 2368     		ldr	r3, [r4]
 8164 007a 0133     		adds	r3, r3, #1
1661:Veno-Echo.cpp ****         {
 8165              		.loc 19 1661 9 view .LVU2280
 8166 007c 032B     		cmp	r3, #3
1660:Veno-Echo.cpp ****         if (buttonstate == 3)
 8167              		.loc 19 1660 21 view .LVU2281
 8168 007e 2360     		str	r3, [r4]
1661:Veno-Echo.cpp ****         {
 8169              		.loc 19 1661 9 is_stmt 1 view .LVU2282
 8170 0080 00F08780 		beq	.L535
 8171              	.L500:
1667:Veno-Echo.cpp ****     {
 8172              		.loc 19 1667 5 view .LVU2283
1667:Veno-Echo.cpp ****     {
 8173              		.loc 19 1667 29 is_stmt 0 view .LVU2284
 8174 0084 4D48     		ldr	r0, .L541+4
 8175 0086 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8176              	.LVL541:
1667:Veno-Echo.cpp ****     {
 8177              		.loc 19 1667 5 view .LVU2285
 8178 008a 10B1     		cbz	r0, .L502
1669:Veno-Echo.cpp ****     }
 8179              		.loc 19 1669 9 is_stmt 1 view .LVU2286
1669:Veno-Echo.cpp ****     }
 8180              		.loc 19 1669 21 is_stmt 0 view .LVU2287
 8181 008c 2368     		ldr	r3, [r4]
 8182 008e 013B     		subs	r3, r3, #1
 8183 0090 2360     		str	r3, [r4]
 8184              	.L502:
1672:Veno-Echo.cpp ****     {
 8185              		.loc 19 1672 5 is_stmt 1 view .LVU2288
1672:Veno-Echo.cpp ****     {
 8186              		.loc 19 1672 30 is_stmt 0 view .LVU2289
 8187 0092 4E48     		ldr	r0, .L541+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 264


 8188 0094 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8189              	.LVL542:
1672:Veno-Echo.cpp ****     {
 8190              		.loc 19 1672 5 view .LVU2290
 8191 0098 0028     		cmp	r0, #0
 8192 009a 55D1     		bne	.L503
 8193 009c 504D     		ldr	r5, .L541+40
 8194              	.L504:
1696:Veno-Echo.cpp ****     {
 8195              		.loc 19 1696 5 is_stmt 1 view .LVU2291
1696:Veno-Echo.cpp ****     {
 8196              		.loc 19 1696 31 is_stmt 0 view .LVU2292
 8197 009e 4B48     		ldr	r0, .L541+20
 8198 00a0 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8199              	.LVL543:
1696:Veno-Echo.cpp ****     {
 8200              		.loc 19 1696 5 view .LVU2293
 8201 00a4 38B1     		cbz	r0, .L508
1698:Veno-Echo.cpp ****         buttonstate -= 1;
 8202              		.loc 19 1698 9 is_stmt 1 view .LVU2294
1699:Veno-Echo.cpp ****         mute = false;
 8203              		.loc 19 1699 21 is_stmt 0 view .LVU2295
 8204 00a6 2368     		ldr	r3, [r4]
1698:Veno-Echo.cpp ****         buttonstate -= 1;
 8205              		.loc 19 1698 15 view .LVU2296
 8206 00a8 0022     		movs	r2, #0
 8207 00aa 4E48     		ldr	r0, .L541+44
1699:Veno-Echo.cpp ****         mute = false;
 8208              		.loc 19 1699 21 view .LVU2297
 8209 00ac 013B     		subs	r3, r3, #1
1700:Veno-Echo.cpp ****     }
 8210              		.loc 19 1700 14 view .LVU2298
 8211 00ae 4E49     		ldr	r1, .L541+48
1698:Veno-Echo.cpp ****         buttonstate -= 1;
 8212              		.loc 19 1698 15 view .LVU2299
 8213 00b0 0270     		strb	r2, [r0]
1699:Veno-Echo.cpp ****         mute = false;
 8214              		.loc 19 1699 9 is_stmt 1 view .LVU2300
1699:Veno-Echo.cpp ****         mute = false;
 8215              		.loc 19 1699 21 is_stmt 0 view .LVU2301
 8216 00b2 2360     		str	r3, [r4]
1700:Veno-Echo.cpp ****     }
 8217              		.loc 19 1700 9 is_stmt 1 view .LVU2302
1700:Veno-Echo.cpp ****     }
 8218              		.loc 19 1700 14 is_stmt 0 view .LVU2303
 8219 00b4 0A70     		strb	r2, [r1]
 8220              	.L508:
1703:Veno-Echo.cpp ****     {
 8221              		.loc 19 1703 5 is_stmt 1 view .LVU2304
1703:Veno-Echo.cpp ****     {
 8222              		.loc 19 1703 28 is_stmt 0 view .LVU2305
 8223 00b6 4548     		ldr	r0, .L541+20
 8224 00b8 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8225              	.LVL544:
1703:Veno-Echo.cpp ****     {
 8226              		.loc 19 1703 5 view .LVU2306
 8227 00bc A0B9     		cbnz	r0, .L536
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 265


 8228              	.L510:
1711:Veno-Echo.cpp ****     {
 8229              		.loc 19 1711 5 is_stmt 1 view .LVU2307
 8230 00be 2368     		ldr	r3, [r4]
 8231 00c0 032B     		cmp	r3, #3
 8232 00c2 1ED0     		beq	.L537
 8233              	.L513:
1733:Veno-Echo.cpp **** 
 8234              		.loc 19 1733 5 view .LVU2308
1733:Veno-Echo.cpp **** 
 8235              		.loc 19 1733 31 is_stmt 0 view .LVU2309
 8236 00c4 434B     		ldr	r3, .L541+28
 8237 00c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8238              	.LBB1466:
 8239              	.LBI1466:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8240              		.loc 1 75 17 is_stmt 1 view .LVU2310
 8241              	.LVL545:
 8242              	.LBB1467:
 8243              		.loc 1 75 35 view .LVU2311
 8244              		.loc 1 75 52 is_stmt 0 view .LVU2312
 8245 00c8 A3F1FF02 		sub	r2, r3, #255
 8246              	.LBE1467:
 8247              	.LBE1466:
1735:Veno-Echo.cpp ****     {
 8248              		.loc 19 1735 5 view .LVU2313
 8249 00cc 7F2B     		cmp	r3, #127
 8250              	.LBB1469:
 8251              	.LBB1468:
 8252              		.loc 1 75 52 view .LVU2314
 8253 00ce B2FA82F2 		clz	r2, r2
 8254 00d2 4FEA5212 		lsr	r2, r2, #5
 8255 00d6 2A70     		strb	r2, [r5]
 8256              	.LBE1468:
 8257              	.LBE1469:
1735:Veno-Echo.cpp ****     {
 8258              		.loc 19 1735 5 is_stmt 1 view .LVU2315
 8259              	.LVL546:
  69:../libdaisy/src/hid/switch.h **** 
 8260              		.loc 1 69 38 view .LVU2316
1735:Veno-Echo.cpp ****     {
 8261              		.loc 19 1735 5 is_stmt 0 view .LVU2317
 8262 00d8 00D0     		beq	.L538
1744:Veno-Echo.cpp **** 
 8263              		.loc 19 1744 1 view .LVU2318
 8264 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8265              	.L538:
1740:Veno-Echo.cpp ****         delayR_flag = true;
 8266              		.loc 19 1740 9 is_stmt 1 view .LVU2319
1740:Veno-Echo.cpp ****         delayR_flag = true;
 8267              		.loc 19 1740 21 is_stmt 0 view .LVU2320
 8268 00dc 0123     		movs	r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 266


 8269 00de 4349     		ldr	r1, .L541+52
1741:Veno-Echo.cpp ****     }
 8270              		.loc 19 1741 21 view .LVU2321
 8271 00e0 434A     		ldr	r2, .L541+56
1740:Veno-Echo.cpp ****         delayR_flag = true;
 8272              		.loc 19 1740 21 view .LVU2322
 8273 00e2 0B70     		strb	r3, [r1]
1741:Veno-Echo.cpp ****     }
 8274              		.loc 19 1741 9 is_stmt 1 view .LVU2323
1741:Veno-Echo.cpp ****     }
 8275              		.loc 19 1741 21 is_stmt 0 view .LVU2324
 8276 00e4 1370     		strb	r3, [r2]
1744:Veno-Echo.cpp **** 
 8277              		.loc 19 1744 1 view .LVU2325
 8278 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8279              	.LVL547:
 8280              	.L536:
1705:Veno-Echo.cpp ****         {
 8281              		.loc 19 1705 9 is_stmt 1 view .LVU2326
1705:Veno-Echo.cpp ****         {
 8282              		.loc 19 1705 29 is_stmt 0 view .LVU2327
 8283 00e8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8284              	.LVL548:
1705:Veno-Echo.cpp ****         {
 8285              		.loc 19 1705 32 view .LVU2328
 8286 00ec 414B     		ldr	r3, .L541+60
 8287 00ee 1B68     		ldr	r3, [r3]
 8288 00f0 C01A     		subs	r0, r0, r3
1705:Veno-Echo.cpp ****         {
 8289              		.loc 19 1705 9 view .LVU2329
 8290 00f2 3228     		cmp	r0, #50
 8291 00f4 E3D9     		bls	.L510
1707:Veno-Echo.cpp ****         } 
 8292              		.loc 19 1707 13 is_stmt 1 view .LVU2330
1707:Veno-Echo.cpp ****         } 
 8293              		.loc 19 1707 19 is_stmt 0 view .LVU2331
 8294 00f6 3B4B     		ldr	r3, .L541+44
 8295 00f8 0122     		movs	r2, #1
 8296 00fa 1A70     		strb	r2, [r3]
1711:Veno-Echo.cpp ****     {
 8297              		.loc 19 1711 5 is_stmt 1 view .LVU2332
 8298 00fc 2368     		ldr	r3, [r4]
 8299 00fe 032B     		cmp	r3, #3
 8300 0100 E0D1     		bne	.L513
 8301              	.L537:
1720:Veno-Echo.cpp ****             {
 8302              		.loc 19 1720 13 view .LVU2333
1720:Veno-Echo.cpp ****             {
 8303              		.loc 19 1720 36 is_stmt 0 view .LVU2334
 8304 0102 3D4F     		ldr	r7, .L541+64
1720:Veno-Echo.cpp ****             {
 8305              		.loc 19 1720 33 view .LVU2335
 8306 0104 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8307              	.LVL549:
1720:Veno-Echo.cpp ****             {
 8308              		.loc 19 1720 13 view .LVU2336
 8309 0108 40F6B833 		movw	r3, #3000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 267


1720:Veno-Echo.cpp ****             {
 8310              		.loc 19 1720 36 view .LVU2337
 8311 010c 3A68     		ldr	r2, [r7]
 8312 010e 801A     		subs	r0, r0, r2
1720:Veno-Echo.cpp ****             {
 8313              		.loc 19 1720 13 view .LVU2338
 8314 0110 9842     		cmp	r0, r3
 8315 0112 D7D9     		bls	.L513
1722:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8316              		.loc 19 1722 17 is_stmt 1 view .LVU2339
1722:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8317              		.loc 19 1722 32 is_stmt 0 view .LVU2340
 8318 0114 2848     		ldr	r0, .L541
 8319 0116 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8320              	.LVL550:
1723:Veno-Echo.cpp ****                 ResetAllLEDs();
 8321              		.loc 19 1723 17 is_stmt 1 view .LVU2341
1723:Veno-Echo.cpp ****                 ResetAllLEDs();
 8322              		.loc 19 1723 32 is_stmt 0 view .LVU2342
 8323 011a 2848     		ldr	r0, .L541+4
 8324 011c FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8325              	.LVL551:
1724:Veno-Echo.cpp ****                 //don't let reset or shift update
 8326              		.loc 19 1724 17 is_stmt 1 view .LVU2343
1728:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8327              		.loc 19 1728 29 is_stmt 0 view .LVU2344
 8328 0120 364E     		ldr	r6, .L541+68
1724:Veno-Echo.cpp ****                 //don't let reset or shift update
 8329              		.loc 19 1724 29 view .LVU2345
 8330 0122 FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8331              	.LVL552:
1726:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8332              		.loc 19 1726 17 is_stmt 1 view .LVU2346
1726:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8333              		.loc 19 1726 23 is_stmt 0 view .LVU2347
 8334 0126 2F4B     		ldr	r3, .L541+44
 8335 0128 0022     		movs	r2, #0
1727:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8336              		.loc 19 1727 30 view .LVU2348
 8337 012a 3448     		ldr	r0, .L541+68
1728:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8338              		.loc 19 1728 29 view .LVU2349
 8339 012c 344C     		ldr	r4, .L541+72
1726:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8340              		.loc 19 1726 23 view .LVU2350
 8341 012e 1A70     		strb	r2, [r3]
1727:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8342              		.loc 19 1727 17 is_stmt 1 view .LVU2351
1727:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8343              		.loc 19 1727 30 is_stmt 0 view .LVU2352
 8344 0130 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8345              	.LVL553:
1728:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8346              		.loc 19 1728 17 is_stmt 1 view .LVU2353
1728:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8347              		.loc 19 1728 29 is_stmt 0 view .LVU2354
 8348 0134 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 268


 8349 0136 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8350 0138 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 8351 013c 84E80F00 		stm	r4, {r0, r1, r2, r3}
1729:Veno-Echo.cpp ****             }
 8352              		.loc 19 1729 17 is_stmt 1 view .LVU2355
1729:Veno-Echo.cpp ****             }
 8353              		.loc 19 1729 43 is_stmt 0 view .LVU2356
 8354 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8355              	.LVL554:
1729:Veno-Echo.cpp ****             }
 8356              		.loc 19 1729 27 view .LVU2357
 8357 0144 3860     		str	r0, [r7]
 8358 0146 BDE7     		b	.L513
 8359              	.L503:
1674:Veno-Echo.cpp ****         {
 8360              		.loc 19 1674 9 is_stmt 1 view .LVU2358
1674:Veno-Echo.cpp ****         {
 8361              		.loc 19 1674 25 is_stmt 0 view .LVU2359
 8362 0148 2E48     		ldr	r0, .L541+76
 8363 014a FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8364              	.LVL555:
1674:Veno-Echo.cpp ****         {
 8365              		.loc 19 1674 9 view .LVU2360
 8366 014e 60BB     		cbnz	r0, .L539
 8367              	.L505:
1678:Veno-Echo.cpp ****         
 8368              		.loc 19 1678 9 is_stmt 1 view .LVU2361
1680:Veno-Echo.cpp ****         {
 8369              		.loc 19 1680 9 is_stmt 0 view .LVU2362
 8370 0150 234D     		ldr	r5, .L541+40
1678:Veno-Echo.cpp ****         
 8371              		.loc 19 1678 33 view .LVU2363
 8372 0152 2D48     		ldr	r0, .L541+80
 8373 0154 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8374              	.LVL556:
1680:Veno-Echo.cpp ****         {
 8375              		.loc 19 1680 9 is_stmt 1 view .LVU2364
 8376 0158 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8377 015a FBB9     		cbnz	r3, .L540
 8378              	.L506:
1686:Veno-Echo.cpp ****         buttonstate += 1;
 8379              		.loc 19 1686 9 view .LVU2365
1686:Veno-Echo.cpp ****         buttonstate += 1;
 8380              		.loc 19 1686 35 is_stmt 0 view .LVU2366
 8381 015c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8382              	.LVL557:
1687:Veno-Echo.cpp ****         
 8383              		.loc 19 1687 21 view .LVU2367
 8384 0160 2368     		ldr	r3, [r4]
1686:Veno-Echo.cpp ****         buttonstate += 1;
 8385              		.loc 19 1686 19 view .LVU2368
 8386 0162 244A     		ldr	r2, .L541+60
1687:Veno-Echo.cpp ****         
 8387              		.loc 19 1687 21 view .LVU2369
 8388 0164 0133     		adds	r3, r3, #1
1686:Veno-Echo.cpp ****         buttonstate += 1;
 8389              		.loc 19 1686 19 view .LVU2370
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 269


 8390 0166 1060     		str	r0, [r2]
1687:Veno-Echo.cpp ****         
 8391              		.loc 19 1687 9 is_stmt 1 view .LVU2371
1689:Veno-Echo.cpp ****         {
 8392              		.loc 19 1689 9 is_stmt 0 view .LVU2372
 8393 0168 032B     		cmp	r3, #3
1687:Veno-Echo.cpp ****         
 8394              		.loc 19 1687 21 view .LVU2373
 8395 016a 2360     		str	r3, [r4]
1689:Veno-Echo.cpp ****         {
 8396              		.loc 19 1689 9 is_stmt 1 view .LVU2374
 8397 016c 97D1     		bne	.L504
1691:Veno-Echo.cpp ****         }
 8398              		.loc 19 1691 13 view .LVU2375
1691:Veno-Echo.cpp ****         }
 8399              		.loc 19 1691 39 is_stmt 0 view .LVU2376
 8400 016e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8401              	.LVL558:
1691:Veno-Echo.cpp ****         }
 8402              		.loc 19 1691 23 view .LVU2377
 8403 0172 214B     		ldr	r3, .L541+64
 8404 0174 1860     		str	r0, [r3]
 8405 0176 92E7     		b	.L504
 8406              	.L533:
1638:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8407              		.loc 19 1638 9 is_stmt 1 view .LVU2378
1638:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8408              		.loc 19 1638 24 is_stmt 0 view .LVU2379
 8409 0178 1048     		ldr	r0, .L541+4
 8410 017a FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8411              	.LVL559:
 8412 017e 65E7     		b	.L494
 8413              	.LVL560:
 8414              	.L532:
1632:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8415              		.loc 19 1632 9 is_stmt 1 view .LVU2380
1632:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8416              		.loc 19 1632 24 is_stmt 0 view .LVU2381
 8417 0180 0D48     		ldr	r0, .L541
 8418 0182 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8419              	.LVL561:
 8420 0186 5CE7     		b	.L493
 8421              	.LVL562:
 8422              	.L534:
1649:Veno-Echo.cpp ****         }
 8423              		.loc 19 1649 13 is_stmt 1 view .LVU2382
1649:Veno-Echo.cpp ****         }
 8424              		.loc 19 1649 39 is_stmt 0 view .LVU2383
 8425 0188 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8426              	.LVL563:
1649:Veno-Echo.cpp ****         }
 8427              		.loc 19 1649 23 view .LVU2384
 8428 018c 1A4B     		ldr	r3, .L541+64
 8429 018e 1860     		str	r0, [r3]
 8430 0190 67E7     		b	.L496
 8431              	.L535:
1663:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 270


 8432              		.loc 19 1663 13 is_stmt 1 view .LVU2385
1663:Veno-Echo.cpp ****         }
 8433              		.loc 19 1663 39 is_stmt 0 view .LVU2386
 8434 0192 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8435              	.LVL564:
1663:Veno-Echo.cpp ****         }
 8436              		.loc 19 1663 23 view .LVU2387
 8437 0196 184B     		ldr	r3, .L541+64
 8438 0198 1860     		str	r0, [r3]
 8439 019a 73E7     		b	.L500
 8440              	.L540:
1682:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8441              		.loc 19 1682 13 is_stmt 1 view .LVU2388
1682:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8442              		.loc 19 1682 39 is_stmt 0 view .LVU2389
 8443 019c 1B48     		ldr	r0, .L541+84
 8444 019e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8445              	.LVL565:
1683:Veno-Echo.cpp ****         }
 8446              		.loc 19 1683 13 is_stmt 1 view .LVU2390
1683:Veno-Echo.cpp ****         }
 8447              		.loc 19 1683 39 is_stmt 0 view .LVU2391
 8448 01a2 1B48     		ldr	r0, .L541+88
 8449 01a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8450              	.LVL566:
 8451 01a8 D8E7     		b	.L506
 8452              	.L539:
1676:Veno-Echo.cpp ****         }
 8453              		.loc 19 1676 13 is_stmt 1 view .LVU2392
1676:Veno-Echo.cpp ****         }
 8454              		.loc 19 1676 35 is_stmt 0 view .LVU2393
 8455 01aa 1648     		ldr	r0, .L541+76
 8456 01ac FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8457              	.LVL567:
 8458 01b0 1548     		ldr	r0, .L541+80
 8459 01b2 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8460              	.LVL568:
 8461 01b6 CBE7     		b	.L505
 8462              	.L542:
 8463              		.align	2
 8464              	.L541:
 8465 01b8 00000000 		.word	.LANCHOR96
 8466 01bc 00000000 		.word	.LANCHOR97
 8467 01c0 00000000 		.word	.LANCHOR94
 8468 01c4 00000000 		.word	.LANCHOR99
 8469 01c8 00000000 		.word	.LANCHOR95
 8470 01cc 00000000 		.word	.LANCHOR98
 8471 01d0 00000000 		.word	.LANCHOR100
 8472 01d4 00000000 		.word	.LANCHOR101
 8473 01d8 00000000 		.word	.LANCHOR70
 8474 01dc 00000000 		.word	.LANCHOR111
 8475 01e0 00000000 		.word	.LANCHOR74
 8476 01e4 00000000 		.word	.LANCHOR8
 8477 01e8 00000000 		.word	.LANCHOR114
 8478 01ec 00000000 		.word	.LANCHOR77
 8479 01f0 00000000 		.word	.LANCHOR78
 8480 01f4 00000000 		.word	.LANCHOR113
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 271


 8481 01f8 00000000 		.word	.LANCHOR112
 8482 01fc 00000000 		.word	.LANCHOR110
 8483 0200 00000000 		.word	.LANCHOR20
 8484 0204 00000000 		.word	.LANCHOR73
 8485 0208 00000000 		.word	.LANCHOR72
 8486 020c 04000000 		.word	.LANCHOR0+4
 8487 0210 04000000 		.word	.LANCHOR1+4
 8488              		.cfi_endproc
 8489              	.LFE4308:
 8491              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8492              		.align	1
 8493              		.p2align 2,,3
 8494              		.syntax unified
 8495              		.thumb
 8496              		.thumb_func
 8497              		.fpu fpv5-d16
 8499              	_ZL13AudioCallbackPfS_j:
 8500              	.LVL569:
 8501              	.LFB4288:
 242:Veno-Echo.cpp **** 
 8502              		.loc 19 242 1 is_stmt 1 view -0
 8503              		.cfi_startproc
 8504              		@ args = 0, pretend = 0, frame = 72
 8505              		@ frame_needed = 0, uses_anonymous_args = 0
 253:Veno-Echo.cpp **** 
 8506              		.loc 19 253 1 view .LVU2395
 271:Veno-Echo.cpp **** 
 8507              		.loc 19 271 1 view .LVU2396
 271:Veno-Echo.cpp **** 
 8508              		.loc 19 271 9 is_stmt 0 view .LVU2397
 8509 0000 DFF894C0 		ldr	ip, .L660+8
 271:Veno-Echo.cpp **** 
 8510              		.loc 19 271 20 view .LVU2398
 8511 0004 DCF80030 		ldr	r3, [ip]
 242:Veno-Echo.cpp **** 
 8512              		.loc 19 242 1 view .LVU2399
 8513 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8514              		.cfi_def_cfa_offset 36
 8515              		.cfi_offset 4, -36
 8516              		.cfi_offset 5, -32
 8517              		.cfi_offset 6, -28
 8518              		.cfi_offset 7, -24
 8519              		.cfi_offset 8, -20
 8520              		.cfi_offset 9, -16
 8521              		.cfi_offset 10, -12
 8522              		.cfi_offset 11, -8
 8523              		.cfi_offset 14, -4
 271:Veno-Echo.cpp **** 
 8524              		.loc 19 271 20 view .LVU2400
 8525 000c 0133     		adds	r3, r3, #1
 271:Veno-Echo.cpp **** 
 8526              		.loc 19 271 25 view .LVU2401
 8527 000e 204C     		ldr	r4, .L660
 242:Veno-Echo.cpp **** 
 8528              		.loc 19 242 1 view .LVU2402
 8529 0010 0646     		mov	r6, r0
 8530 0012 1546     		mov	r5, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 272


 271:Veno-Echo.cpp **** 
 8531              		.loc 19 271 25 view .LVU2403
 8532 0014 84FB0302 		smull	r0, r2, r4, r3
 8533              	.LVL570:
 271:Veno-Echo.cpp **** 
 8534              		.loc 19 271 25 view .LVU2404
 8535 0018 DC17     		asrs	r4, r3, #31
 242:Veno-Echo.cpp **** 
 8536              		.loc 19 242 1 view .LVU2405
 8537 001a 0F46     		mov	r7, r1
 8538              	.LBB1559:
 8539              	.LBB1560:
 8540              	.LBB1561:
 8541              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 273


  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 274


 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 275


 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 276


 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 277


 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 278


 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 279


 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 8542              		.loc 23 419 24 view .LVU2406
 8543 001c 1D49     		ldr	r1, .L660+4
 8544              	.LVL571:
 8545              		.loc 23 419 24 view .LVU2407
 8546              	.LBE1561:
 8547              	.LBE1560:
 8548              	.LBE1559:
 271:Veno-Echo.cpp **** 
 8549              		.loc 19 271 25 view .LVU2408
 8550 001e 1A44     		add	r2, r2, r3
 8551 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8552 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8553 0028 1B1B     		subs	r3, r3, r4
 242:Veno-Echo.cpp **** 
 8554              		.loc 19 242 1 view .LVU2409
 8555 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8556              		.cfi_def_cfa_offset 92
 8557              		.cfi_offset 80, -92
 8558              		.cfi_offset 81, -88
 8559              		.cfi_offset 82, -84
 8560              		.cfi_offset 83, -80
 8561              		.cfi_offset 84, -76
 8562              		.cfi_offset 85, -72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 280


 8563              		.cfi_offset 86, -68
 8564              		.cfi_offset 87, -64
 8565              		.cfi_offset 88, -60
 8566              		.cfi_offset 89, -56
 8567              		.cfi_offset 90, -52
 8568              		.cfi_offset 91, -48
 8569              		.cfi_offset 92, -44
 8570              		.cfi_offset 93, -40
 271:Veno-Echo.cpp **** 
 8571              		.loc 19 271 9 view .LVU2410
 8572 002e CCF80030 		str	r3, [ip]
 273:Veno-Echo.cpp **** {
 8573              		.loc 19 273 1 is_stmt 1 view .LVU2411
 8574              	.LVL572:
 8575              	.LBB1566:
 8576              	.LBI1559:
 8577              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 281


  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8578              		.loc 24 87 5 view .LVU2412
 8579              	.LBE1566:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8580              		.loc 24 88 7 view .LVU2413
 8581              	.LBB1567:
 8582              	.LBB1564:
 8583              	.LBI1560:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8584              		.loc 23 413 7 view .LVU2414
 8585              	.LBB1562:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 282


 8586              		.loc 23 419 24 is_stmt 0 view .LVU2415
 8587 0032 BFF35B8F 		dmb	ish
 8588 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8589              	.LBE1562:
 8590              	.LBE1564:
 8591              	.LBE1567:
 242:Veno-Echo.cpp **** 
 8592              		.loc 19 242 1 view .LVU2416
 8593 0038 93B0     		sub	sp, sp, #76
 8594              		.cfi_def_cfa_offset 168
 8595              	.LBB1568:
 8596              	.LBB1565:
 8597              	.LBB1563:
 8598              		.loc 23 419 24 view .LVU2417
 8599 003a BFF35B8F 		dmb	ish
 8600              	.LBE1563:
 8601              	.LBE1565:
 8602              	.LBE1568:
 273:Veno-Echo.cpp **** {
 8603              		.loc 19 273 1 view .LVU2418
 8604 003e B3B9     		cbnz	r3, .L544
 286:Veno-Echo.cpp ****         {
 8605              		.loc 19 286 9 is_stmt 1 view .LVU2419
 8606 0040 DCF80030 		ldr	r3, [ip]
 8607 0044 0E2B     		cmp	r3, #14
 8608 0046 12D8     		bhi	.L544
 8609 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8610              	.L546:
 8611 004c 2606     		.2byte	(.L560-.L546)/2
 8612 004e 1D06     		.2byte	(.L559-.L546)/2
 8613 0050 1906     		.2byte	(.L558-.L546)/2
 8614 0052 1006     		.2byte	(.L557-.L546)/2
 8615 0054 0C06     		.2byte	(.L556-.L546)/2
 8616 0056 0306     		.2byte	(.L555-.L546)/2
 8617 0058 FF05     		.2byte	(.L554-.L546)/2
 8618 005a F605     		.2byte	(.L553-.L546)/2
 8619 005c F205     		.2byte	(.L552-.L546)/2
 8620 005e E905     		.2byte	(.L551-.L546)/2
 8621 0060 E505     		.2byte	(.L550-.L546)/2
 8622 0062 DC05     		.2byte	(.L549-.L546)/2
 8623 0064 D805     		.2byte	(.L548-.L546)/2
 8624 0066 0F00     		.2byte	(.L547-.L546)/2
 8625 0068 D405     		.2byte	(.L545-.L546)/2
 8626              		.p2align 1
 8627              	.L547:
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 8628              		.loc 19 341 13 view .LVU2420
 342:Veno-Echo.cpp ****             break;
 8629              		.loc 19 342 17 view .LVU2421
 342:Veno-Echo.cpp ****             break;
 8630              		.loc 19 342 37 is_stmt 0 view .LVU2422
 8631 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8632              	.LVL573:
 343:Veno-Echo.cpp **** 
 8633              		.loc 19 343 13 is_stmt 1 view .LVU2423
 8634              	.L544:
 8635              	.LBB1569:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 283


 351:Veno-Echo.cpp ****     {   
 8636              		.loc 19 351 25 discriminator 1 view .LVU2424
 8637 006e 002D     		cmp	r5, #0
 8638 0070 00F0A885 		beq	.L543
 351:Veno-Echo.cpp ****     {   
 8639              		.loc 19 351 25 is_stmt 0 view .LVU2425
 8640 0074 0023     		movs	r3, #0
 8641 0076 013D     		subs	r5, r5, #1
 8642              	.LVL574:
 351:Veno-Echo.cpp ****     {   
 8643              		.loc 19 351 25 view .LVU2426
 8644 0078 DFF82080 		ldr	r8, .L660+12
 8645 007c B346     		mov	fp, r6
 8646 007e 0293     		str	r3, [sp, #8]
 8647 0080 25F00103 		bic	r3, r5, #1
 8648 0084 DFF81890 		ldr	r9, .L660+16
 8649 0088 0097     		str	r7, [sp]
 8650 008a 0593     		str	r3, [sp, #20]
 8651 008c 8FE0     		b	.L616
 8652              	.L661:
 8653 008e 00BF     		.align	2
 8654              	.L660:
 8655 0090 89888888 		.word	-2004318071
 8656 0094 00000000 		.word	.LANCHOR116
 8657 0098 00000000 		.word	.LANCHOR115
 8658 009c 00000000 		.word	.LANCHOR131
 8659 00a0 00000000 		.word	.LANCHOR132
 8660              	.LVL575:
 8661              	.L659:
 8662              	.LBB1570:
 8663              	.LBB1571:
 8664              	.LBB1572:
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8665              		.loc 19 2030 10 is_stmt 1 view .LVU2427
 8666 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
2031:Veno-Echo.cpp ****     else
 8667              		.loc 19 2031 19 is_stmt 0 view .LVU2428
 8668 00a8 B4EE678A 		vcmp.f32	s16, s15
 8669 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8670 00b0 48BF     		it	mi
 8671 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8672              	.LVL576:
 8673              	.L598:
2035:Veno-Echo.cpp **** }
 8674              		.loc 19 2035 5 is_stmt 1 view .LVU2429
2035:Veno-Echo.cpp **** }
 8675              		.loc 19 2035 5 is_stmt 0 view .LVU2430
 8676              	.LBE1572:
 8677              	.LBE1571:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8678              		.loc 19 490 9 is_stmt 1 view .LVU2431
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8679              		.loc 19 490 42 is_stmt 0 view .LVU2432
 8680 00b6 D848     		ldr	r0, .L662
 8681 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8682              	.LVL577:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 284


 8683              		.loc 19 490 21 view .LVU2433
 8684 00bc 11A9     		add	r1, sp, #68
 8685 00be D748     		ldr	r0, .L662+4
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8686              		.loc 19 490 42 view .LVU2434
 8687 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8688              		.loc 19 490 21 view .LVU2435
 8689 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8690              	.LVL578:
 491:Veno-Echo.cpp **** 
 8691              		.loc 19 491 9 is_stmt 1 view .LVU2436
 491:Veno-Echo.cpp **** 
 8692              		.loc 19 491 42 is_stmt 0 view .LVU2437
 8693 00c8 D548     		ldr	r0, .L662+8
 8694 00ca B0EE480A 		vmov.f32	s0, s16
 8695 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8696              	.LVL579:
 491:Veno-Echo.cpp **** 
 8697              		.loc 19 491 21 view .LVU2438
 8698 00d2 11A9     		add	r1, sp, #68
 8699 00d4 D348     		ldr	r0, .L662+12
 491:Veno-Echo.cpp **** 
 8700              		.loc 19 491 42 view .LVU2439
 8701 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 491:Veno-Echo.cpp **** 
 8702              		.loc 19 491 21 view .LVU2440
 8703 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8704              	.LVL580:
 494:Veno-Echo.cpp ****         float mixR;
 8705              		.loc 19 494 9 is_stmt 1 view .LVU2441
 495:Veno-Echo.cpp **** 
 8706              		.loc 19 495 9 view .LVU2442
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8707              		.loc 19 497 9 view .LVU2443
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8708              		.loc 19 497 53 is_stmt 0 view .LVU2444
 8709 00de 09AA     		add	r2, sp, #36
 8710 00e0 08A9     		add	r1, sp, #32
 8711 00e2 D148     		ldr	r0, .L662+16
 8712 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8713              	.LVL581:
 498:Veno-Echo.cpp **** 
 8714              		.loc 19 498 53 view .LVU2445
 8715 00e8 08AA     		add	r2, sp, #32
 8716 00ea 09A9     		add	r1, sp, #36
 8717 00ec CE48     		ldr	r0, .L662+16
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8718              		.loc 19 497 81 view .LVU2446
 8719 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 498:Veno-Echo.cpp **** 
 8720              		.loc 19 498 9 is_stmt 1 view .LVU2447
 498:Veno-Echo.cpp **** 
 8721              		.loc 19 498 53 is_stmt 0 view .LVU2448
 8722 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8723              	.LVL582:
 8724              	.LBB1574:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 285


 8725              	.LBB1575:
2028:Veno-Echo.cpp ****         returnval = limit;
 8726              		.loc 19 2028 5 view .LVU2449
 8727 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8728              	.LBE1575:
 8729              	.LBE1574:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8730              		.loc 19 501 38 view .LVU2450
 8731 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8732              		.loc 19 501 9 is_stmt 1 view .LVU2451
 8733              	.LVL583:
 8734              	.LBB1578:
 8735              	.LBI1574:
2025:Veno-Echo.cpp **** {
 8736              		.loc 19 2025 7 view .LVU2452
 8737              	.LBB1576:
2027:Veno-Echo.cpp ****     if (input > limit)
 8738              		.loc 19 2027 5 view .LVU2453
2028:Veno-Echo.cpp ****         returnval = limit;
 8739              		.loc 19 2028 5 view .LVU2454
 8740 00fe F4EEC77A 		vcmpe.f32	s15, s14
 8741 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8742 0106 00F30285 		bgt	.L628
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8743              		.loc 19 2030 10 view .LVU2455
 8744 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
2031:Veno-Echo.cpp ****     else
 8745              		.loc 19 2031 19 is_stmt 0 view .LVU2456
 8746 010e F4EE477A 		vcmp.f32	s15, s14
 8747 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8748 0116 48BF     		it	mi
 8749 0118 F0EE477A 		vmovmi.f32	s15, s14
 8750              	.LVL584:
 8751              	.L600:
2035:Veno-Echo.cpp **** }
 8752              		.loc 19 2035 5 is_stmt 1 view .LVU2457
2035:Veno-Echo.cpp **** }
 8753              		.loc 19 2035 5 is_stmt 0 view .LVU2458
 8754              	.LBE1576:
 8755              	.LBE1578:
 8756              	.LBB1579:
 8757              	.LBB1580:
2028:Veno-Echo.cpp ****         returnval = limit;
 8758              		.loc 19 2028 5 view .LVU2459
 8759 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8760              	.LBE1580:
 8761              	.LBE1579:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8762              		.loc 19 501 27 view .LVU2460
 8763 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 502:Veno-Echo.cpp **** 
 8764              		.loc 19 502 9 is_stmt 1 view .LVU2461
 8765              	.LVL585:
 8766              	.LBB1584:
 8767              	.LBI1579:
2025:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 286


 8768              		.loc 19 2025 7 view .LVU2462
 8769              	.LBB1581:
2027:Veno-Echo.cpp ****     if (input > limit)
 8770              		.loc 19 2027 5 view .LVU2463
2028:Veno-Echo.cpp ****         returnval = limit;
 8771              		.loc 19 2028 5 view .LVU2464
 8772 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8773 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8774 012c 00F35784 		bgt	.L629
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8775              		.loc 19 2030 10 view .LVU2465
 8776 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8777              	.LBE1581:
 8778              	.LBE1584:
 8779              	.LBB1585:
 504:Veno-Echo.cpp **** {
 8780              		.loc 19 504 1 is_stmt 0 view .LVU2466
 8781 0134 BD4B     		ldr	r3, .L662+20
 8782 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8783              	.LBE1585:
 8784              	.LBB1607:
 8785              	.LBB1582:
2031:Veno-Echo.cpp ****     else
 8786              		.loc 19 2031 19 view .LVU2467
 8787 0138 B4EE470A 		vcmp.f32	s0, s14
 8788 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8789 0140 48BF     		it	mi
 8790 0142 B0EE470A 		vmovmi.f32	s0, s14
 8791              	.LVL586:
2035:Veno-Echo.cpp **** }
 8792              		.loc 19 2035 5 is_stmt 1 view .LVU2468
2035:Veno-Echo.cpp **** }
 8793              		.loc 19 2035 5 is_stmt 0 view .LVU2469
 8794              	.LBE1582:
 8795              	.LBE1607:
 502:Veno-Echo.cpp **** 
 8796              		.loc 19 502 27 view .LVU2470
 8797 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 504:Veno-Echo.cpp **** {
 8798              		.loc 19 504 1 is_stmt 1 view .LVU2471
 8799              	.LBB1608:
 8800 014a 002B     		cmp	r3, #0
 8801 014c 40F05084 		bne	.L656
 8802              	.LVL587:
 8803              	.L604:
 504:Veno-Echo.cpp **** {
 8804              		.loc 19 504 1 is_stmt 0 view .LVU2472
 8805              	.LBE1608:
 545:Veno-Echo.cpp ****         {
 8806              		.loc 19 545 9 is_stmt 1 view .LVU2473
 545:Veno-Echo.cpp ****         {
 8807              		.loc 19 545 19 is_stmt 0 view .LVU2474
 8808 0150 B74B     		ldr	r3, .L662+24
 545:Veno-Echo.cpp ****         {
 8809              		.loc 19 545 9 view .LVU2475
 8810 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 545:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 287


 8811              		.loc 19 545 19 view .LVU2476
 8812 0156 93ED007A 		vldr.32	s14, [r3]
 545:Veno-Echo.cpp ****         {
 8813              		.loc 19 545 9 view .LVU2477
 8814 015a B4EEE67A 		vcmpe.f32	s14, s13
 8815 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8816 0162 40F12A84 		bpl	.L650
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8817              		.loc 19 547 13 is_stmt 1 view .LVU2478
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8818              		.loc 19 547 34 is_stmt 0 view .LVU2479
 8819 0166 37EE077A 		vadd.f32	s14, s14, s14
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8820              		.loc 19 547 18 view .LVU2480
 8821 016a 9BED006A 		vldr.32	s12, [fp]
 548:Veno-Echo.cpp ****         }
 8822              		.loc 19 548 18 view .LVU2481
 8823 016e DBED016A 		vldr.32	s13, [fp, #4]
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8824              		.loc 19 547 18 view .LVU2482
 8825 0172 A7EE276A 		vfma.f32	s12, s14, s15
 548:Veno-Echo.cpp ****         }
 8826              		.loc 19 548 18 view .LVU2483
 8827 0176 E7EE006A 		vfma.f32	s13, s14, s0
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8828              		.loc 19 547 18 view .LVU2484
 8829 017a F0EE467A 		vmov.f32	s15, s12
 8830              	.LVL588:
 548:Veno-Echo.cpp ****         }
 8831              		.loc 19 548 13 is_stmt 1 view .LVU2485
 548:Veno-Echo.cpp ****         }
 8832              		.loc 19 548 18 is_stmt 0 view .LVU2486
 8833 017e B0EE660A 		vmov.f32	s0, s13
 8834              	.LVL589:
 8835              	.L610:
 562:Veno-Echo.cpp ****         {
 8836              		.loc 19 562 9 is_stmt 1 view .LVU2487
 8837 0182 AC4B     		ldr	r3, .L662+28
 8838 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8839 0186 002B     		cmp	r3, #0
 8840 0188 00F01084 		beq	.L613
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8841              		.loc 19 564 13 view .LVU2488
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8842              		.loc 19 564 20 is_stmt 0 view .LVU2489
 8843 018c 0023     		movs	r3, #0
 8844 018e 009A     		ldr	r2, [sp]
 8845 0190 1360     		str	r3, [r2]	@ float
 565:Veno-Echo.cpp ****         }
 8846              		.loc 19 565 13 is_stmt 1 view .LVU2490
 565:Veno-Echo.cpp ****         }
 8847              		.loc 19 565 22 is_stmt 0 view .LVU2491
 8848 0192 5360     		str	r3, [r2, #4]	@ float
 8849              	.L614:
 8850              	.LBE1570:
 351:Veno-Echo.cpp ****     {   
 8851              		.loc 19 351 5 is_stmt 1 discriminator 2 view .LVU2492
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 288


 8852 0194 009B     		ldr	r3, [sp]
 8853 0196 0BF1080B 		add	fp, fp, #8
 351:Veno-Echo.cpp ****     {   
 8854              		.loc 19 351 35 is_stmt 0 discriminator 2 view .LVU2493
 8855 019a 029A     		ldr	r2, [sp, #8]
 351:Veno-Echo.cpp ****     {   
 8856              		.loc 19 351 25 discriminator 2 view .LVU2494
 8857 019c 0599     		ldr	r1, [sp, #20]
 8858 019e 0833     		adds	r3, r3, #8
 8859 01a0 8A42     		cmp	r2, r1
 8860 01a2 0093     		str	r3, [sp]
 351:Veno-Echo.cpp ****     {   
 8861              		.loc 19 351 35 discriminator 2 view .LVU2495
 8862 01a4 02F10203 		add	r3, r2, #2
 8863              	.LVL590:
 351:Veno-Echo.cpp ****     {   
 8864              		.loc 19 351 25 is_stmt 1 discriminator 2 view .LVU2496
 8865 01a8 00F00C85 		beq	.L543
 8866 01ac 0293     		str	r3, [sp, #8]
 8867              	.LVL591:
 8868              	.L616:
 8869              	.LBB1944:
 353:Veno-Echo.cpp ****         Update_Mod();
 8870              		.loc 19 353 9 view .LVU2497
 353:Veno-Echo.cpp ****         Update_Mod();
 8871              		.loc 19 353 20 is_stmt 0 view .LVU2498
 8872 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 8873              	.LVL592:
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 8874              		.loc 19 354 9 is_stmt 1 view .LVU2499
 8875              	.LBB1609:
 8876              	.LBB1610:
 8877              	.LBB1611:
 8878              	.LBB1612:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 289


  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 290


 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8879              		.loc 18 174 71 is_stmt 0 view .LVU2500
 8880 01b2 DFF808A3 		ldr	r10, .L662+164
 8881              	.LBE1612:
 8882              	.LBE1611:
 8883              	.LBE1610:
 8884              	.LBE1609:
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 8885              		.loc 19 354 19 view .LVU2501
 8886 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 8887              	.LVL593:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8888              		.loc 19 356 9 is_stmt 1 view .LVU2502
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8889              		.loc 19 356 51 is_stmt 0 view .LVU2503
 8890 01ba 9F48     		ldr	r0, .L662+32
 8891 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8892              	.LVL594:
 8893 01c0 0146     		mov	r1, r0
 8894 01c2 9E48     		ldr	r0, .L662+36
 8895              	.LBB1664:
 8896              	.LBB1647:
 8897              	.LBB1630:
 8898              	.LBB1613:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8899              		.loc 18 175 77 view .LVU2504
 8900 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8901              	.LBE1613:
 8902              	.LBE1630:
 8903              	.LBE1647:
 8904              	.LBE1664:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8905              		.loc 19 356 51 view .LVU2505
 8906 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8907              	.LVL595:
 357:Veno-Echo.cpp ****         
 8908              		.loc 19 357 51 view .LVU2506
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 291


 8909 01cc 9C48     		ldr	r0, .L662+40
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8910              		.loc 19 356 51 view .LVU2507
 8911 01ce F0EE40BA 		vmov.f32	s23, s0
 8912              	.LVL596:
 357:Veno-Echo.cpp ****         
 8913              		.loc 19 357 9 is_stmt 1 view .LVU2508
 357:Veno-Echo.cpp ****         
 8914              		.loc 19 357 51 is_stmt 0 view .LVU2509
 8915 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8916              	.LVL597:
 357:Veno-Echo.cpp ****         
 8917              		.loc 19 357 51 view .LVU2510
 8918 01d6 0146     		mov	r1, r0
 8919 01d8 9A48     		ldr	r0, .L662+44
 8920 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8921              	.LVL598:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8922              		.loc 19 359 44 view .LVU2511
 8923 01de 9A48     		ldr	r0, .L662+48
 357:Veno-Echo.cpp ****         
 8924              		.loc 19 357 51 view .LVU2512
 8925 01e0 B0EE409A 		vmov.f32	s18, s0
 8926              	.LVL599:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8927              		.loc 19 359 9 is_stmt 1 view .LVU2513
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8928              		.loc 19 359 44 is_stmt 0 view .LVU2514
 8929 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8930              	.LVL600:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8931              		.loc 19 359 44 view .LVU2515
 8932 01e8 0146     		mov	r1, r0
 8933 01ea 9848     		ldr	r0, .L662+52
 8934 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8935              	.LVL601:
 360:Veno-Echo.cpp **** 
 8936              		.loc 19 360 44 view .LVU2516
 8937 01f0 9748     		ldr	r0, .L662+56
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8938              		.loc 19 359 44 view .LVU2517
 8939 01f2 B0EE408A 		vmov.f32	s16, s0
 8940              	.LVL602:
 360:Veno-Echo.cpp **** 
 8941              		.loc 19 360 9 is_stmt 1 view .LVU2518
 360:Veno-Echo.cpp **** 
 8942              		.loc 19 360 44 is_stmt 0 view .LVU2519
 8943 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8944              	.LVL603:
 360:Veno-Echo.cpp **** 
 8945              		.loc 19 360 44 view .LVU2520
 8946 01fa 0146     		mov	r1, r0
 8947 01fc 9548     		ldr	r0, .L662+60
 8948 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8949              	.LVL604:
 8950              	.LBB1665:
 8951              	.LBB1666:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 292


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8952              		.loc 10 60 42 view .LVU2521
 8953 0202 9548     		ldr	r0, .L662+64
 8954              	.LBE1666:
 8955              	.LBE1665:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8956              		.loc 19 383 49 view .LVU2522
 8957 0204 954B     		ldr	r3, .L662+68
 360:Veno-Echo.cpp **** 
 8958              		.loc 19 360 44 view .LVU2523
 8959 0206 F0EE407A 		vmov.f32	s15, s0
 8960              	.LVL605:
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8961              		.loc 19 363 9 is_stmt 1 view .LVU2524
 8962              	.LBB1668:
 8963              	.LBI1665:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8964              		.loc 10 60 17 view .LVU2525
 8965              	.LBB1667:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8966              		.loc 10 60 37 view .LVU2526
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8967              		.loc 10 60 42 is_stmt 0 view .LVU2527
 8968 020a C0ED00BA 		vstr.32	s23, [r0]
 8969              	.LVL606:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8970              		.loc 10 60 42 view .LVU2528
 8971              	.LBE1667:
 8972              	.LBE1668:
 364:Veno-Echo.cpp ****         
 8973              		.loc 19 364 9 is_stmt 1 view .LVU2529
 8974              	.LBB1669:
 8975              	.LBI1669:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8976              		.loc 10 60 17 view .LVU2530
 8977              	.LBB1670:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8978              		.loc 10 60 37 view .LVU2531
 8979              	.LBE1670:
 8980              	.LBE1669:
 8981              	.LBB1673:
 8982              	.LBB1648:
 8983              	.LBB1631:
 8984              	.LBB1614:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8985              		.loc 18 174 82 is_stmt 0 view .LVU2532
 8986 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 8987              	.LBE1614:
 8988              	.LBE1631:
 8989              	.LBE1648:
 8990              	.LBE1673:
 8991              	.LBB1674:
 8992              	.LBB1671:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8993              		.loc 10 60 42 view .LVU2533
 8994 0212 9348     		ldr	r0, .L662+72
 8995              	.LBE1671:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 293


 8996              	.LBE1674:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8997              		.loc 19 383 49 view .LVU2534
 8998 0214 1D68     		ldr	r5, [r3]
 8999              	.LBB1675:
 9000              	.LBB1672:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9001              		.loc 10 60 42 view .LVU2535
 9002 0216 80ED009A 		vstr.32	s18, [r0]
 9003              	.LVL607:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9004              		.loc 10 60 42 view .LVU2536
 9005              	.LBE1672:
 9006              	.LBE1675:
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9007              		.loc 19 366 9 is_stmt 1 view .LVU2537
 9008              	.LBB1676:
 9009              	.LBI1676:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9010              		.loc 10 60 17 view .LVU2538
 9011              	.LBB1677:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9012              		.loc 10 60 37 view .LVU2539
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9013              		.loc 10 60 42 is_stmt 0 view .LVU2540
 9014 021a 9248     		ldr	r0, .L662+76
 9015              	.LBE1677:
 9016              	.LBE1676:
 9017              	.LBB1679:
 9018              	.LBB1649:
 9019              	.LBB1632:
 9020              	.LBB1615:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9021              		.loc 18 174 71 view .LVU2541
 9022 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9023              		.loc 18 174 46 view .LVU2542
 9024 0220 9FED91AA 		vldr.32	s20, .L662+80
 9025              	.LBE1615:
 9026              	.LBE1632:
 9027              	.LBE1649:
 9028              	.LBE1679:
 9029              	.LBB1680:
 9030              	.LBB1678:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9031              		.loc 10 60 42 view .LVU2543
 9032 0224 80ED008A 		vstr.32	s16, [r0]
 9033              	.LVL608:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9034              		.loc 10 60 42 view .LVU2544
 9035              	.LBE1678:
 9036              	.LBE1680:
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9037              		.loc 19 367 9 is_stmt 1 view .LVU2545
 9038              	.LBB1681:
 9039              	.LBI1681:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 294


 9040              		.loc 10 60 17 view .LVU2546
 9041              	.LBB1682:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9042              		.loc 10 60 37 view .LVU2547
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9043              		.loc 10 60 42 is_stmt 0 view .LVU2548
 9044 0228 9048     		ldr	r0, .L662+84
 9045              	.LBE1682:
 9046              	.LBE1681:
 9047              	.LBB1684:
 9048              	.LBB1650:
 9049              	.LBB1633:
 9050              	.LBB1616:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9051              		.loc 18 174 71 view .LVU2549
 9052 022a 93ED00BA 		vldr.32	s22, [r3]
 9053              	.LBE1616:
 9054              	.LBE1633:
 9055              	.LBE1650:
 9056              	.LBE1684:
 9057              	.LBB1685:
 9058              	.LBB1683:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9059              		.loc 10 60 42 view .LVU2550
 9060 022e 80ED008A 		vstr.32	s16, [r0]
 9061              	.LVL609:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9062              		.loc 10 60 42 view .LVU2551
 9063              	.LBE1683:
 9064              	.LBE1685:
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9065              		.loc 19 368 9 is_stmt 1 view .LVU2552
 9066              	.LBB1686:
 9067              	.LBI1686:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9068              		.loc 10 60 17 view .LVU2553
 9069              	.LBB1687:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9070              		.loc 10 60 37 view .LVU2554
 9071              	.LBE1687:
 9072              	.LBE1686:
 9073              	.LBB1690:
 9074              	.LBB1691:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9075              		.loc 10 60 42 is_stmt 0 view .LVU2555
 9076 0232 8F48     		ldr	r0, .L662+88
 9077              	.LBE1691:
 9078              	.LBE1690:
 9079              	.LBB1694:
 9080              	.LBB1651:
 9081              	.LBB1634:
 9082              	.LBB1617:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9083              		.loc 18 174 46 view .LVU2556
 9084 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 9085              	.LVL610:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 295


 9086              		.loc 18 174 71 view .LVU2557
 9087 0238 0493     		str	r3, [sp, #16]
 9088              		.loc 18 175 77 view .LVU2558
 9089 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 9090              	.LBE1617:
 9091              	.LBE1634:
 9092              	.LBE1651:
 9093              	.LBE1694:
 9094              	.LBB1695:
 9095              	.LBB1692:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9096              		.loc 10 60 42 view .LVU2559
 9097 023e 80ED008A 		vstr.32	s16, [r0]
 9098              	.LBE1692:
 9099              	.LBE1695:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9100              		.loc 19 376 27 view .LVU2560
 9101 0242 8C4B     		ldr	r3, .L662+92
 9102              	.LBB1696:
 9103              	.LBB1697:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9104              		.loc 10 60 42 view .LVU2561
 9105 0244 8C48     		ldr	r0, .L662+96
 9106              	.LBE1697:
 9107              	.LBE1696:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9108              		.loc 19 376 27 view .LVU2562
 9109 0246 1B68     		ldr	r3, [r3]	@ float
 9110              	.LBB1700:
 9111              	.LBB1698:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9112              		.loc 10 60 42 view .LVU2563
 9113 0248 80ED008A 		vstr.32	s16, [r0]
 9114              	.LBE1698:
 9115              	.LBE1700:
 9116              	.LBB1701:
 9117              	.LBB1688:
 9118 024c 8B48     		ldr	r0, .L662+100
 9119              	.LBE1688:
 9120              	.LBE1701:
 9121              	.LBB1702:
 9122              	.LBB1652:
 9123              	.LBB1635:
 9124              	.LBB1618:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9125              		.loc 18 174 103 view .LVU2564
 9126 024e DFED8C9A 		vldr.32	s19, .L662+104
 9127              	.LBE1618:
 9128              	.LBE1635:
 9129              	.LBE1652:
 9130              	.LBE1702:
 9131              	.LBB1703:
 9132              	.LBB1689:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9133              		.loc 10 60 42 view .LVU2565
 9134 0252 C0ED007A 		vstr.32	s15, [r0]
 9135              	.LVL611:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 296


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9136              		.loc 10 60 42 view .LVU2566
 9137              	.LBE1689:
 9138              	.LBE1703:
 369:Veno-Echo.cpp **** 
 9139              		.loc 19 369 9 is_stmt 1 view .LVU2567
 9140              	.LBB1704:
 9141              	.LBI1704:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9142              		.loc 10 60 17 view .LVU2568
 9143              	.LBB1705:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9144              		.loc 10 60 37 view .LVU2569
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9145              		.loc 10 60 42 is_stmt 0 view .LVU2570
 9146 0256 8B48     		ldr	r0, .L662+108
 9147              	.LBE1705:
 9148              	.LBE1704:
 9149              	.LBB1707:
 9150              	.LBB1653:
 9151              	.LBB1636:
 9152              	.LBB1619:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9153              		.loc 18 174 98 view .LVU2571
 9154 0258 9FED8B9A 		vldr.32	s18, .L662+112
 9155              	.LVL612:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9156              		.loc 18 174 98 view .LVU2572
 9157              	.LBE1619:
 9158              	.LBE1636:
 9159              	.LBE1653:
 9160              	.LBE1707:
 9161              	.LBB1708:
 9162              	.LBB1706:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9163              		.loc 10 60 42 view .LVU2573
 9164 025c C0ED007A 		vstr.32	s15, [r0]
 9165              	.LVL613:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9166              		.loc 10 60 42 view .LVU2574
 9167              	.LBE1706:
 9168              	.LBE1708:
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 9169              		.loc 19 371 9 is_stmt 1 view .LVU2575
 9170              	.LBB1709:
 9171              	.LBI1690:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9172              		.loc 10 60 17 view .LVU2576
 9173              	.LBB1693:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9174              		.loc 10 60 37 view .LVU2577
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9175              		.loc 10 60 37 is_stmt 0 view .LVU2578
 9176              	.LBE1693:
 9177              	.LBE1709:
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 9178              		.loc 19 372 9 is_stmt 1 view .LVU2579
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 297


 9179              	.LBB1710:
 9180              	.LBI1696:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9181              		.loc 10 60 17 view .LVU2580
 9182              	.LBB1699:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9183              		.loc 10 60 37 view .LVU2581
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9184              		.loc 10 60 37 is_stmt 0 view .LVU2582
 9185              	.LBE1699:
 9186              	.LBE1710:
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 9187              		.loc 19 373 9 is_stmt 1 view .LVU2583
 9188              	.LBB1711:
 9189              	.LBI1711:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9190              		.loc 10 60 17 view .LVU2584
 9191              	.LBB1712:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9192              		.loc 10 60 37 view .LVU2585
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9193              		.loc 10 60 42 is_stmt 0 view .LVU2586
 9194 0260 8A48     		ldr	r0, .L662+116
 9195              	.LBE1712:
 9196              	.LBE1711:
 9197              	.LBB1714:
 9198              	.LBB1654:
 9199              	.LBB1637:
 9200              	.LBB1620:
 162:delayline_reverse.h **** 
 9201              		.loc 18 162 23 view .LVU2587
 9202 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 9203              	.LBE1620:
 9204              	.LBE1637:
 9205              	.LBE1654:
 9206              	.LBE1714:
 9207              	.LBB1715:
 9208              	.LBB1713:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9209              		.loc 10 60 42 view .LVU2588
 9210 0266 C0ED007A 		vstr.32	s15, [r0]
 9211              	.LVL614:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9212              		.loc 10 60 42 view .LVU2589
 9213              	.LBE1713:
 9214              	.LBE1715:
 374:Veno-Echo.cpp **** 
 9215              		.loc 19 374 9 is_stmt 1 view .LVU2590
 9216              	.LBB1716:
 9217              	.LBI1716:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9218              		.loc 10 60 17 view .LVU2591
 9219              	.LBB1717:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9220              		.loc 10 60 37 view .LVU2592
 9221              	.LBE1717:
 9222              	.LBE1716:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 298


 9223              	.LBB1720:
 9224              	.LBB1655:
 9225              	.LBB1638:
 9226              	.LBB1621:
 162:delayline_reverse.h **** 
 9227              		.loc 18 162 11 is_stmt 0 view .LVU2593
 9228 026a 05EB8702 		add	r2, r5, r7, lsl #2
 9229              	.LBE1621:
 9230              	.LBE1638:
 9231              	.LBE1655:
 9232              	.LBE1720:
 9233              	.LBB1721:
 9234              	.LBB1718:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9235              		.loc 10 60 42 view .LVU2594
 9236 026e 8848     		ldr	r0, .L662+120
 9237              	.LBE1718:
 9238              	.LBE1721:
 9239              	.LBB1722:
 9240              	.LBB1656:
 9241              	.LBB1639:
 9242              	.LBB1622:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9243              		.loc 18 161 11 view .LVU2595
 9244 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 9245              		.loc 18 162 11 view .LVU2596
 9246 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 9247              	.LBE1622:
 9248              	.LBE1639:
 9249              	.LBE1656:
 9250              	.LBE1722:
 9251              	.LBB1723:
 9252              	.LBB1724:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9253              		.loc 10 60 42 view .LVU2597
 9254 0278 864A     		ldr	r2, .L662+124
 9255              	.LBE1724:
 9256              	.LBE1723:
 9257              	.LBB1726:
 9258              	.LBB1719:
 9259 027a C0ED007A 		vstr.32	s15, [r0]
 9260              	.LVL615:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9261              		.loc 10 60 42 view .LVU2598
 9262              	.LBE1719:
 9263              	.LBE1726:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9264              		.loc 19 376 9 is_stmt 1 view .LVU2599
 9265              	.LBB1727:
 9266              	.LBI1723:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9267              		.loc 10 60 17 view .LVU2600
 9268              	.LBB1725:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9269              		.loc 10 60 37 view .LVU2601
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 299


 9270              		.loc 10 60 42 is_stmt 0 view .LVU2602
 9271 027e 1360     		str	r3, [r2]	@ float
 9272              	.LVL616:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9273              		.loc 10 60 42 view .LVU2603
 9274              	.LBE1725:
 9275              	.LBE1727:
 377:Veno-Echo.cpp **** 
 9276              		.loc 19 377 9 is_stmt 1 view .LVU2604
 9277              	.LBB1728:
 9278              	.LBI1728:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9279              		.loc 10 60 17 view .LVU2605
 9280              	.LBB1729:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9281              		.loc 10 60 37 view .LVU2606
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9282              		.loc 10 60 42 is_stmt 0 view .LVU2607
 9283 0280 854A     		ldr	r2, .L662+128
 9284              	.LBE1729:
 9285              	.LBE1728:
 9286              	.LBB1731:
 9287              	.LBB1657:
 9288              	.LBB1640:
 9289              	.LBB1623:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9290              		.loc 18 161 11 view .LVU2608
 9291 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 9292              	.LBE1623:
 9293              	.LBE1640:
 9294              	.LBE1657:
 9295              	.LBE1731:
 9296              	.LBB1732:
 9297              	.LBB1730:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9298              		.loc 10 60 42 view .LVU2609
 9299 0286 1360     		str	r3, [r2]	@ float
 9300              	.LVL617:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9301              		.loc 10 60 42 view .LVU2610
 9302              	.LBE1730:
 9303              	.LBE1732:
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 9304              		.loc 19 379 9 is_stmt 1 view .LVU2611
 9305              	.LBB1733:
 9306              	.LBI1733:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9307              		.loc 10 60 17 view .LVU2612
 9308              	.LBB1734:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9309              		.loc 10 60 37 view .LVU2613
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9310              		.loc 10 60 42 is_stmt 0 view .LVU2614
 9311 0288 844A     		ldr	r2, .L662+132
 9312 028a 1360     		str	r3, [r2]	@ float
 9313              	.LVL618:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 300


 9314              		.loc 10 60 42 view .LVU2615
 9315              	.LBE1734:
 9316              	.LBE1733:
 380:Veno-Echo.cpp **** 
 9317              		.loc 19 380 9 is_stmt 1 view .LVU2616
 9318              	.LBB1735:
 9319              	.LBI1735:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9320              		.loc 10 60 17 view .LVU2617
 9321              	.LBB1736:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9322              		.loc 10 60 37 view .LVU2618
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9323              		.loc 10 60 42 is_stmt 0 view .LVU2619
 9324 028c 844A     		ldr	r2, .L662+136
 9325 028e 1360     		str	r3, [r2]	@ float
 9326              	.LVL619:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9327              		.loc 10 60 42 view .LVU2620
 9328              	.LBE1736:
 9329              	.LBE1735:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9330              		.loc 19 383 9 is_stmt 1 view .LVU2621
 9331              	.LBB1737:
 9332              	.LBI1609:
  79:Veno-Echo.cpp ****     {
 9333              		.loc 19 79 11 view .LVU2622
 9334              	.LBB1658:
  82:Veno-Echo.cpp ****         return read;
 9335              		.loc 19 82 9 view .LVU2623
 9336              	.LBB1641:
 9337              	.LBI1611:
 159:delayline_reverse.h ****     {
 9338              		.loc 18 159 20 view .LVU2624
 9339              	.LBB1624:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9340              		.loc 18 174 46 is_stmt 0 view .LVU2625
 9341 0290 FFF7FEFF 		bl	sinf
 9342              	.LVL620:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9343              		.loc 18 174 46 view .LVU2626
 9344 0294 F0EE40BA 		vmov.f32	s23, s0
 9345              	.LVL621:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9346              		.loc 18 174 103 view .LVU2627
 9347 0298 2BEE290A 		vmul.f32	s0, s22, s19
 9348 029c FFF7FEFF 		bl	sinf
 9349              	.LVL622:
 9350 02a0 B0EE408A 		vmov.f32	s16, s0
 9351              	.LVL623:
 9352              		.loc 18 175 46 view .LVU2628
 9353 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 9354 02a8 FFF7FEFF 		bl	sinf
 9355              	.LVL624:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9356              		.loc 18 174 98 view .LVU2629
 9357 02ac 28EE098A 		vmul.f32	s16, s16, s18
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 301


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9358              		.loc 18 174 82 view .LVU2630
 9359 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 9360              	.LVL625:
 9361              		.loc 18 175 46 view .LVU2631
 9362 02b4 F0EE40BA 		vmov.f32	s23, s0
 9363              		.loc 18 175 112 view .LVU2632
 9364 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 9365 02bc FFF7FEFF 		bl	sinf
 9366              	.LVL626:
 9367              		.loc 18 175 107 view .LVU2633
 9368 02c0 60EE097A 		vmul.f32	s15, s0, s18
 9369              	.LBE1624:
 9370              	.LBE1641:
 9371              	.LBE1658:
 9372              	.LBE1737:
 384:Veno-Echo.cpp **** 
 9373              		.loc 19 384 49 view .LVU2634
 9374 02c4 774B     		ldr	r3, .L662+140
 9375              	.LBB1738:
 9376              	.LBB1659:
 9377              	.LBB1642:
 9378              	.LBB1625:
 9379              		.loc 18 175 91 view .LVU2635
 9380 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 9381              	.LVL627:
 9382              		.loc 18 175 91 view .LVU2636
 9383              	.LBE1625:
 9384              	.LBE1642:
 9385              	.LBE1659:
 9386              	.LBE1738:
 384:Veno-Echo.cpp **** 
 9387              		.loc 19 384 49 view .LVU2637
 9388 02ca 1C68     		ldr	r4, [r3]
 9389              	.LBB1739:
 9390              	.LBB1660:
 9391              	.LBB1643:
 9392              	.LBB1626:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9393              		.loc 18 174 9 view .LVU2638
 9394 02cc 38EE088A 		vadd.f32	s16, s16, s16
 9395              	.LVL628:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9396              		.loc 18 174 9 view .LVU2639
 9397              	.LBE1626:
 9398              	.LBE1643:
 9399              	.LBE1660:
 9400              	.LBE1739:
 9401              	.LBB1740:
 9402              	.LBB1741:
 9403              	.LBB1742:
 9404              	.LBB1743:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9405              		.loc 18 174 71 view .LVU2640
 9406 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 9407              		.loc 18 162 11 view .LVU2641
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 302


 9408 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9409              		.loc 18 174 71 view .LVU2642
 9410 02d8 91ED00CA 		vldr.32	s24, [r1]
 9411              	.LBE1743:
 9412              	.LBE1742:
 9413              	.LBE1741:
 9414              	.LBE1740:
 9415              	.LBB1774:
 9416              	.LBB1661:
 9417              	.LBB1644:
 9418              	.LBB1627:
 9419              		.loc 18 175 9 view .LVU2643
 9420 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 9421              	.LVL629:
 9422              		.loc 18 175 9 view .LVU2644
 9423              	.LBE1627:
 9424              	.LBE1644:
 9425              	.LBE1661:
 9426              	.LBE1774:
 9427              	.LBB1775:
 9428              	.LBB1764:
 9429              	.LBB1754:
 9430              	.LBB1744:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9431              		.loc 18 161 11 view .LVU2645
 9432 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9433              		.loc 18 162 11 view .LVU2646
 9434 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9435              		.loc 18 175 77 view .LVU2647
 9436 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9437              		.loc 18 174 46 view .LVU2648
 9438 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9439              		.loc 18 161 11 view .LVU2649
 9440 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9441              	.LBE1744:
 9442              	.LBE1754:
 9443              	.LBE1764:
 9444              	.LBE1775:
 9445              	.LBB1776:
 9446              	.LBB1662:
 9447              	.LBB1645:
 9448              	.LBB1628:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9449              		.loc 18 177 44 view .LVU2650
 9450 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9451              	.LVL630:
 9452              		.loc 18 177 44 view .LVU2651
 9453              	.LBE1628:
 9454              	.LBE1645:
 9455              	.LBE1662:
 9456              	.LBE1776:
 9457              	.LBB1777:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 303


 9458              	.LBB1765:
 9459              	.LBB1755:
 9460              	.LBB1745:
 162:delayline_reverse.h **** 
 9461              		.loc 18 162 11 view .LVU2652
 9462 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9463              		.loc 18 174 71 view .LVU2653
 9464 02fc 0391     		str	r1, [sp, #12]
 9465              	.LBE1745:
 9466              	.LBE1755:
 9467              	.LBE1765:
 9468              	.LBE1777:
 9469              	.LBB1778:
 9470              	.LBB1663:
 9471              	.LBB1646:
 9472              	.LBB1629:
 9473              		.loc 18 177 54 view .LVU2654
 9474 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9475              	.LVL631:
 9476              		.loc 18 177 54 view .LVU2655
 9477              	.LBE1629:
 9478              	.LBE1646:
  83:Veno-Echo.cpp ****     }
 9479              		.loc 19 83 9 is_stmt 1 view .LVU2656
  83:Veno-Echo.cpp ****     }
 9480              		.loc 19 83 9 is_stmt 0 view .LVU2657
 9481              	.LBE1663:
 9482              	.LBE1778:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9483              		.loc 19 383 50 view .LVU2658
 9484 0302 CDED067A 		vstr.32	s15, [sp, #24]
 384:Veno-Echo.cpp **** 
 9485              		.loc 19 384 9 is_stmt 1 view .LVU2659
 9486              	.LVL632:
 9487              	.LBB1779:
 9488              	.LBI1740:
  79:Veno-Echo.cpp ****     {
 9489              		.loc 19 79 11 view .LVU2660
 9490              	.LBB1766:
  82:Veno-Echo.cpp ****         return read;
 9491              		.loc 19 82 9 view .LVU2661
 9492              	.LBB1756:
 9493              	.LBI1742:
 159:delayline_reverse.h ****     {
 9494              		.loc 18 159 20 view .LVU2662
 9495              	.LBB1746:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9496              		.loc 18 174 46 is_stmt 0 view .LVU2663
 9497 0306 FFF7FEFF 		bl	sinf
 9498              	.LVL633:
 9499 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9500              		.loc 18 174 103 view .LVU2664
 9501 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9502 0312 FFF7FEFF 		bl	sinf
 9503              	.LVL634:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 304


 9504 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9505              		.loc 18 175 46 view .LVU2665
 9506 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9507 031e FFF7FEFF 		bl	sinf
 9508              	.LVL635:
 9509 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9510              		.loc 18 175 112 view .LVU2666
 9511 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9512              		.loc 18 174 98 view .LVU2667
 9513 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9514              		.loc 18 175 46 view .LVU2668
 9515 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9516              		.loc 18 175 112 view .LVU2669
 9517 0332 FFF7FEFF 		bl	sinf
 9518              	.LVL636:
 9519              	.LBE1746:
 9520              	.LBE1756:
 9521              	.LBE1766:
 9522              	.LBE1779:
 9523              	.LBB1780:
 9524              	.LBB1781:
 9525              	.LBB1782:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9526              		.loc 18 98 38 view .LVU2670
 9527 0336 5C48     		ldr	r0, .L662+144
 9528              	.LBE1782:
 9529              	.LBE1781:
 9530              	.LBE1780:
 9531              	.LBB1805:
 9532              	.LBB1767:
 9533              	.LBB1757:
 9534              	.LBB1747:
 175:delayline_reverse.h **** 
 9535              		.loc 18 175 107 view .LVU2671
 9536 0338 60EE097A 		vmul.f32	s15, s0, s18
 9537              	.LBE1747:
 9538              	.LBE1757:
 9539              	.LBE1767:
 9540              	.LBE1805:
 9541              	.LBB1806:
 9542              	.LBB1794:
 9543              	.LBB1783:
  92:delayline_reverse.h ****         
 9544              		.loc 18 92 57 view .LVU2672
 9545 033c 5B4B     		ldr	r3, .L662+148
 9546              	.LBE1783:
 9547              	.LBE1794:
 9548              	.LBE1806:
 9549              	.LBB1807:
 9550              	.LBB1768:
 9551              	.LBB1758:
 9552              	.LBB1748:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 305


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9553              		.loc 18 174 82 view .LVU2673
 9554 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9555              	.LVL637:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9556              		.loc 18 174 82 view .LVU2674
 9557              	.LBE1748:
 9558              	.LBE1758:
 9559              	.LBE1768:
 9560              	.LBE1807:
 9561              	.LBB1808:
 9562              	.LBB1795:
 9563              	.LBB1784:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9564              		.loc 18 98 38 view .LVU2675
 9565 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9566              		.loc 18 90 15 view .LVU2676
 9567 0344 D5F804E0 		ldr	lr, [r5, #4]
 9568              	.LBE1784:
 9569              	.LBE1795:
 9570              	.LBE1808:
 9571              	.LBB1809:
 9572              	.LBB1769:
 9573              	.LBB1759:
 9574              	.LBB1749:
 175:delayline_reverse.h **** 
 9575              		.loc 18 175 91 view .LVU2677
 9576 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9577              	.LVL638:
 175:delayline_reverse.h **** 
 9578              		.loc 18 175 91 view .LVU2678
 9579              	.LBE1749:
 9580              	.LBE1759:
 9581              	.LBE1769:
 9582              	.LBE1809:
 9583              	.LBB1810:
 9584              	.LBB1796:
 9585              	.LBB1785:
  99:delayline_reverse.h ****  
 9586              		.loc 18 99 38 view .LVU2679
 9587 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9588              		.loc 18 98 50 view .LVU2680
 9589 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9590              		.loc 18 92 57 view .LVU2681
 9591 0352 DFF86CC1 		ldr	ip, .L662+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9592              		.loc 18 90 9 view .LVU2682
 9593 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9594              		.loc 18 98 50 view .LVU2683
 9595 035a 890C     		lsrs	r1, r1, #18
 9596              	.LBE1785:
 9597              	.LBE1796:
 9598              	.LBE1810:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 306


 9599              	.LBB1811:
 9600              	.LBB1770:
 9601              	.LBB1760:
 9602              	.LBB1750:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9603              		.loc 18 174 9 view .LVU2684
 9604 035c 38EE088A 		vadd.f32	s16, s16, s16
 9605              	.LVL639:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9606              		.loc 18 174 9 view .LVU2685
 9607              	.LBE1750:
 9608              	.LBE1760:
 9609              	.LBE1770:
 9610              	.LBE1811:
 9611              	.LBB1812:
 9612              	.LBB1797:
 9613              	.LBB1786:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9614              		.loc 18 98 50 view .LVU2686
 9615 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9616              		.loc 18 92 45 view .LVU2687
 9617 0364 524E     		ldr	r6, .L662+152
 9618              	.LBE1786:
 9619              	.LBE1797:
 9620              	.LBE1812:
 9621              	.LBB1813:
 9622              	.LBB1771:
 9623              	.LBB1761:
 9624              	.LBB1751:
 175:delayline_reverse.h **** 
 9625              		.loc 18 175 9 view .LVU2688
 9626 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9627              	.LVL640:
 175:delayline_reverse.h **** 
 9628              		.loc 18 175 9 view .LVU2689
 9629              	.LBE1751:
 9630              	.LBE1761:
 9631              	.LBE1771:
 9632              	.LBE1813:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9633              		.loc 19 387 26 view .LVU2690
 9634 036a DBED007A 		vldr.32	s15, [fp]
 9635              	.LBB1814:
 9636              	.LBB1798:
 9637              	.LBB1787:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9638              		.loc 18 98 50 view .LVU2691
 9639 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9640              		.loc 18 92 45 view .LVU2692
 9641 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9642              		.loc 18 99 50 view .LVU2693
 9643 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9644              		.loc 18 92 57 view .LVU2694
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 307


 9645 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9646              		.loc 18 98 9 view .LVU2695
 9647 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9648              		.loc 18 99 50 view .LVU2696
 9649 037c 4FEA9E4E 		lsr	lr, lr, #18
 9650              	.LBE1787:
 9651              	.LBE1798:
 9652              	.LBE1814:
 9653              	.LBB1815:
 9654              	.LBB1772:
 9655              	.LBB1762:
 9656              	.LBB1752:
 9657              		.loc 18 177 44 view .LVU2697
 9658 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9659              	.LVL641:
 9660              		.loc 18 177 44 view .LVU2698
 9661              	.LBE1752:
 9662              	.LBE1762:
 9663              	.LBE1772:
 9664              	.LBE1815:
 9665              	.LBB1816:
 9666              	.LBB1799:
 9667              	.LBB1788:
  92:delayline_reverse.h ****         
 9668              		.loc 18 92 57 view .LVU2699
 9669 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9670              		.loc 18 99 50 view .LVU2700
 9671 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9672              	.LBE1788:
 9673              	.LBE1799:
 9674              	.LBE1816:
 9675              	.LBB1817:
 9676              	.LBB1773:
 9677              	.LBB1763:
 9678              	.LBB1753:
 9679              		.loc 18 177 54 view .LVU2701
 9680 038a ACEE880A 		vfma.f32	s0, s25, s16
 9681              	.LVL642:
 9682              		.loc 18 177 54 view .LVU2702
 9683              	.LBE1753:
 9684              	.LBE1763:
  83:Veno-Echo.cpp ****     }
 9685              		.loc 19 83 9 is_stmt 1 view .LVU2703
  83:Veno-Echo.cpp ****     }
 9686              		.loc 19 83 9 is_stmt 0 view .LVU2704
 9687              	.LBE1773:
 9688              	.LBE1817:
 9689              	.LBB1818:
 9690              	.LBB1800:
 9691              	.LBB1789:
  92:delayline_reverse.h ****         
 9692              		.loc 18 92 57 view .LVU2705
 9693 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 308


 9694              		.loc 18 95 43 view .LVU2706
 9695 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9696              		.loc 18 90 9 view .LVU2707
 9697 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9698              		.loc 18 95 43 view .LVU2708
 9699 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9700              		.loc 18 101 36 view .LVU2709
 9701 039c DFF824A1 		ldr	r10, .L662+172
  95:delayline_reverse.h **** 
 9702              		.loc 18 95 43 view .LVU2710
 9703 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9704              		.loc 18 101 36 view .LVU2711
 9705 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9706              		.loc 18 101 45 view .LVU2712
 9707 03a6 07F1FF3A 		add	r10, r7, #-1
 9708              	.LBE1789:
 9709              	.LBE1800:
 9710              	.LBE1818:
 384:Veno-Echo.cpp **** 
 9711              		.loc 19 384 50 view .LVU2713
 9712 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9713              		.loc 19 387 9 is_stmt 1 view .LVU2714
 9714              	.LVL643:
 9715              	.LBB1819:
 9716              	.LBI1780:
  92:Veno-Echo.cpp ****     {
 9717              		.loc 19 92 10 view .LVU2715
  92:Veno-Echo.cpp ****     {
 9718              		.loc 19 92 10 is_stmt 0 view .LVU2716
 9719              	.LBE1819:
 9720              	.LBE1944:
 9721              	.LBE1569:
  94:Veno-Echo.cpp ****     }
 9722              		.loc 19 94 9 is_stmt 1 view .LVU2717
 9723              	.LBB1956:
 9724              	.LBB1945:
 9725              	.LBB1820:
 9726              	.LBB1801:
 9727              	.LBI1781:
  88:delayline_reverse.h ****     {
 9728              		.loc 18 88 17 view .LVU2718
 9729              	.LBB1790:
  99:delayline_reverse.h ****  
 9730              		.loc 18 99 9 is_stmt 0 view .LVU2719
 9731 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9732              		.loc 18 95 54 view .LVU2720
 9733 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9734              		.loc 18 101 45 view .LVU2721
 9735 03b6 AAEB0E0A 		sub	r10, r10, lr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 309


  95:delayline_reverse.h **** 
 9736              		.loc 18 95 54 view .LVU2722
 9737 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9738              		.loc 18 92 9 view .LVU2723
 9739 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9740              		.loc 18 101 9 view .LVU2724
 9741 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9742              		.loc 18 95 9 view .LVU2725
 9743 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9744              		.loc 18 101 9 view .LVU2726
 9745 03c4 40F2CF82 		bls	.L562
 103:delayline_reverse.h ****             {
 9746              		.loc 18 103 17 view .LVU2727
 9747 03c8 3A49     		ldr	r1, .L662+156
 103:delayline_reverse.h ****             {
 9748              		.loc 18 103 13 view .LVU2728
 9749 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9750              		.loc 18 103 17 view .LVU2729
 9751 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9752              		.loc 18 103 13 view .LVU2730
 9753 03ce 0028     		cmp	r0, #0
 9754 03d0 40F0CF82 		bne	.L653
 107:delayline_reverse.h ****                 {
 9755              		.loc 18 107 21 view .LVU2731
 9756 03d4 3848     		ldr	r0, .L662+160
 105:delayline_reverse.h ****                 
 9757              		.loc 18 105 17 view .LVU2732
 9758 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9759              		.loc 18 110 45 view .LVU2733
 9760 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9761              		.loc 18 107 17 view .LVU2734
 9762 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9763              		.loc 18 107 21 view .LVU2735
 9764 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9765              		.loc 18 105 17 view .LVU2736
 9766 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9767              		.loc 18 107 17 view .LVU2737
 9768 03e0 002E     		cmp	r6, #0
 9769 03e2 40F0EB83 		bne	.L564
 110:delayline_reverse.h ****                 }
 9770              		.loc 18 110 21 view .LVU2738
 9771 03e6 EB60     		str	r3, [r5, #12]
 9772              	.L565:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9773              		.loc 18 130 45 view .LVU2739
 9774 03e8 07EE90EA 		vmov	s15, lr	@ int
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 310


 9775              	.LVL644:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9776              		.loc 18 130 45 view .LVU2740
 9777 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9778 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9779 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9780              		.loc 18 130 37 view .LVU2741
 9781 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9782              		.loc 18 131 17 view .LVU2742
 9783 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9784 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9785 0404 40F39183 		ble	.L654
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9786              		.loc 18 133 21 view .LVU2743
 9787 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9788              		.loc 18 134 21 view .LVU2744
 9789 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9790              		.loc 18 133 21 view .LVU2745
 9791 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9792              		.loc 18 135 21 view .LVU2746
 9793 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9794              		.loc 18 134 21 view .LVU2747
 9795 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9796              		.loc 18 135 21 view .LVU2748
 9797 0414 0370     		strb	r3, [r0]
 9798 0416 57E0     		b	.L663
 9799              	.L664:
 9800              		.align	2
 9801              	.L662:
 9802 0418 00000000 		.word	.LANCHOR108
 9803 041c 00000000 		.word	.LANCHOR0
 9804 0420 00000000 		.word	.LANCHOR109
 9805 0424 00000000 		.word	.LANCHOR1
 9806 0428 00000000 		.word	.LANCHOR47
 9807 042c 00000000 		.word	.LANCHOR65
 9808 0430 00000000 		.word	.LANCHOR38
 9809 0434 00000000 		.word	.LANCHOR114
 9810 0438 00000000 		.word	.LANCHOR96
 9811 043c 00000000 		.word	.LANCHOR102
 9812 0440 00000000 		.word	.LANCHOR97
 9813 0444 00000000 		.word	.LANCHOR103
 9814 0448 00000000 		.word	.LANCHOR95
 9815 044c 00000000 		.word	.LANCHOR105
 9816 0450 00000000 		.word	.LANCHOR94
 9817 0454 00000000 		.word	.LANCHOR104
 9818 0458 00000000 		.word	.LANCHOR106
 9819 045c 00000000 		.word	.LANCHOR2
 9820 0460 00000000 		.word	.LANCHOR107
 9821 0464 00000000 		.word	.LANCHOR117
 9822 0468 DB0FC93F 		.word	1070141403
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 311


 9823 046c 00000000 		.word	.LANCHOR118
 9824 0470 00000000 		.word	.LANCHOR121
 9825 0474 00000000 		.word	.LANCHOR62
 9826 0478 00000000 		.word	.LANCHOR122
 9827 047c 00000000 		.word	.LANCHOR119
 9828 0480 E4CB9640 		.word	1083624420
 9829 0484 00000000 		.word	.LANCHOR120
 9830 0488 0000803D 		.word	1031798784
 9831 048c 00000000 		.word	.LANCHOR123
 9832 0490 00000000 		.word	.LANCHOR124
 9833 0494 00000000 		.word	.LANCHOR125
 9834 0498 00000000 		.word	.LANCHOR126
 9835 049c 00000000 		.word	.LANCHOR127
 9836 04a0 00000000 		.word	.LANCHOR128
 9837 04a4 00000000 		.word	.LANCHOR3
 9838 04a8 BF270900 		.word	599999
 9839 04ac 851DD96F 		.word	1876499845
 9840 04b0 C1270900 		.word	600001
 9841 04b4 249F2400 		.word	2400036
 9842 04b8 1C9F2400 		.word	2400028
 9843 04bc 209F2400 		.word	2400032
 9844 04c0 C0270900 		.word	600000
 9845 04c4 189F2400 		.word	2400024
 9846              	.L663:
 9847              	.LVL645:
 9848              	.L568:
 135:delayline_reverse.h ****                 }
 9849              		.loc 18 135 21 view .LVU2749
 9850              	.LBE1790:
 9851              	.LBE1801:
 9852              	.LBE1820:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9853              		.loc 19 388 9 is_stmt 1 view .LVU2750
 9854              	.LBB1821:
 9855              	.LBB1822:
 9856              	.LBB1823:
  95:delayline_reverse.h **** 
 9857              		.loc 18 95 45 is_stmt 0 view .LVU2751
 9858 04c8 2169     		ldr	r1, [r4, #16]
 9859 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9860              		.loc 18 95 43 view .LVU2752
 9861 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9862              		.loc 18 90 15 view .LVU2753
 9863 04d0 6568     		ldr	r5, [r4, #4]
 9864 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9865              		.loc 18 95 43 view .LVU2754
 9866 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9867              		.loc 18 92 45 view .LVU2755
 9868 04d8 B14F     		ldr	r7, .L665
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9869              		.loc 18 90 9 view .LVU2756
 9870 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 312


 9871              		.loc 18 98 38 view .LVU2757
 9872 04de B14B     		ldr	r3, .L665+4
  95:delayline_reverse.h **** 
 9873              		.loc 18 95 43 view .LVU2758
 9874 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9875              		.loc 18 92 45 view .LVU2759
 9876 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9877              		.loc 18 101 45 view .LVU2760
 9878 04e4 01F1FF3C 		add	ip, r1, #-1
 9879              	.LBE1823:
 9880              	.LBE1822:
 9881              	.LBE1821:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9882              		.loc 19 388 26 view .LVU2761
 9883 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 9884              	.LVL646:
 9885              	.LBB1832:
 9886              	.LBI1821:
  92:Veno-Echo.cpp ****     {
 9887              		.loc 19 92 10 is_stmt 1 view .LVU2762
  92:Veno-Echo.cpp ****     {
 9888              		.loc 19 92 10 is_stmt 0 view .LVU2763
 9889              	.LBE1832:
 9890              	.LBE1945:
 9891              	.LBE1956:
  94:Veno-Echo.cpp ****     }
 9892              		.loc 19 94 9 is_stmt 1 view .LVU2764
 9893              	.LBB1957:
 9894              	.LBB1946:
 9895              	.LBB1833:
 9896              	.LBB1828:
 9897              	.LBI1822:
  88:delayline_reverse.h ****     {
 9898              		.loc 18 88 17 view .LVU2765
 9899              	.LBB1824:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9900              		.loc 18 98 38 is_stmt 0 view .LVU2766
 9901 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 9902 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9903              		.loc 18 99 38 view .LVU2767
 9904 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9905              		.loc 18 92 57 view .LVU2768
 9906 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9907              		.loc 18 95 54 view .LVU2769
 9908 04fa B2FBF1F0 		udiv	r0, r2, r1
 9909 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 9910              		.loc 18 101 36 view .LVU2770
 9911 0502 A949     		ldr	r1, .L665+8
  92:delayline_reverse.h ****         
 9912              		.loc 18 92 57 view .LVU2771
 9913 0504 A3F54013 		sub	r3, r3, #3145728
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 313


 101:delayline_reverse.h ****         {
 9914              		.loc 18 101 36 view .LVU2772
 9915 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9916              		.loc 18 92 57 view .LVU2773
 9917 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9918              		.loc 18 90 9 view .LVU2774
 9919 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9920              		.loc 18 101 36 view .LVU2775
 9921 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9922              		.loc 18 92 57 view .LVU2776
 9923 0514 A3FB0762 		umull	r6, r2, r3, r7
 9924 0518 DFF8C8E2 		ldr	lr, .L665+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9925              		.loc 18 98 50 view .LVU2777
 9926 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9927              		.loc 18 99 50 view .LVU2778
 9928 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 9929              		.loc 18 101 45 view .LVU2779
 9930 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9931              		.loc 18 92 57 view .LVU2780
 9932 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9933              		.loc 18 95 9 view .LVU2781
 9934 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9935              		.loc 18 98 50 view .LVU2782
 9936 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 9937              		.loc 18 101 45 view .LVU2783
 9938 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9939              		.loc 18 99 50 view .LVU2784
 9940 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9941              		.loc 18 92 57 view .LVU2785
 9942 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9943              		.loc 18 98 50 view .LVU2786
 9944 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9945              		.loc 18 101 9 view .LVU2787
 9946 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9947              		.loc 18 99 50 view .LVU2788
 9948 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9949              		.loc 18 98 9 view .LVU2789
 9950 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 9951              		.loc 18 99 9 view .LVU2790
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 314


 9952 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9953              		.loc 18 101 9 view .LVU2791
 9954 0546 40F2EB81 		bls	.L572
 103:delayline_reverse.h ****             {
 9955              		.loc 18 103 17 view .LVU2792
 9956 054a 9849     		ldr	r1, .L665+12
 103:delayline_reverse.h ****             {
 9957              		.loc 18 103 13 view .LVU2793
 9958 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9959              		.loc 18 103 17 view .LVU2794
 9960 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 9961              		.loc 18 103 13 view .LVU2795
 9962 0550 0028     		cmp	r0, #0
 9963 0552 40F0EB81 		bne	.L655
 107:delayline_reverse.h ****                 {
 9964              		.loc 18 107 21 view .LVU2796
 9965 0556 9648     		ldr	r0, .L665+16
 105:delayline_reverse.h ****                 
 9966              		.loc 18 105 17 view .LVU2797
 9967 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9968              		.loc 18 110 45 view .LVU2798
 9969 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 9970              		.loc 18 107 17 view .LVU2799
 9971 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9972              		.loc 18 107 21 view .LVU2800
 9973 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 9974              		.loc 18 105 17 view .LVU2801
 9975 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 9976              		.loc 18 107 17 view .LVU2802
 9977 0562 002D     		cmp	r5, #0
 9978 0564 40F02C83 		bne	.L574
 110:delayline_reverse.h ****                 }
 9979              		.loc 18 110 21 view .LVU2803
 9980 0568 E260     		str	r2, [r4, #12]
 9981              	.L575:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9982              		.loc 18 130 45 view .LVU2804
 9983 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9984              	.LVL647:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9985              		.loc 18 130 45 view .LVU2805
 9986 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9987              		.loc 18 130 37 view .LVU2806
 9988 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9989              		.loc 18 130 45 view .LVU2807
 9990 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 315


 9991              		.loc 18 130 37 view .LVU2808
 9992 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9993              		.loc 18 130 45 view .LVU2809
 9994 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9995              		.loc 18 130 37 view .LVU2810
 9996 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 9997              		.loc 18 131 17 view .LVU2811
 9998 0584 F4EEC77A 		vcmpe.f32	s15, s14
 9999 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10000 058c 40F31F83 		ble	.L657
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10001              		.loc 18 133 21 view .LVU2812
 10002 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10003              		.loc 18 134 21 view .LVU2813
 10004 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10005              		.loc 18 133 21 view .LVU2814
 10006 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10007              		.loc 18 135 21 view .LVU2815
 10008 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10009              		.loc 18 134 21 view .LVU2816
 10010 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10011              		.loc 18 135 21 view .LVU2817
 10012 059c 0270     		strb	r2, [r0]
 10013              	.LVL648:
 10014              	.L578:
 135:delayline_reverse.h ****                 }
 10015              		.loc 18 135 21 view .LVU2818
 10016              	.LBE1824:
 10017              	.LBE1828:
 10018              	.LBE1833:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10019              		.loc 19 393 9 is_stmt 1 view .LVU2819
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10020              		.loc 19 393 56 is_stmt 0 view .LVU2820
 10021 059e 06AA     		add	r2, sp, #24
 10022 05a0 5946     		mov	r1, fp
 10023 05a2 8448     		ldr	r0, .L665+20
 10024 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10025              	.LVL649:
 394:Veno-Echo.cpp **** 
 10026              		.loc 19 394 56 view .LVU2821
 10027 05a8 18EE101A 		vmov	r1, s16	@ int
 10028 05ac 07AA     		add	r2, sp, #28
 10029 05ae 8248     		ldr	r0, .L665+24
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10030              		.loc 19 393 56 view .LVU2822
 10031 05b0 F0EE408A 		vmov.f32	s17, s0
 10032              	.LVL650:
 394:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 316


 10033              		.loc 19 394 9 is_stmt 1 view .LVU2823
 394:Veno-Echo.cpp **** 
 10034              		.loc 19 394 56 is_stmt 0 view .LVU2824
 10035 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10036              	.LVL651:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10037              		.loc 19 397 46 view .LVU2825
 10038 05b8 8048     		ldr	r0, .L665+28
 394:Veno-Echo.cpp **** 
 10039              		.loc 19 394 56 view .LVU2826
 10040 05ba B0EE408A 		vmov.f32	s16, s0
 10041              	.LVL652:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10042              		.loc 19 397 9 is_stmt 1 view .LVU2827
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10043              		.loc 19 397 46 is_stmt 0 view .LVU2828
 10044 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10045              	.LVL653:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10046              		.loc 19 397 46 view .LVU2829
 10047 05c2 0346     		mov	r3, r0
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10048              		.loc 19 398 46 view .LVU2830
 10049 05c4 7E48     		ldr	r0, .L665+32
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10050              		.loc 19 397 45 view .LVU2831
 10051 05c6 1B68     		ldr	r3, [r3]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10052              		.loc 19 397 47 view .LVU2832
 10053 05c8 0893     		str	r3, [sp, #32]	@ float
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10054              		.loc 19 398 9 is_stmt 1 view .LVU2833
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10055              		.loc 19 398 46 is_stmt 0 view .LVU2834
 10056 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10057              	.LVL654:
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10058              		.loc 19 398 45 view .LVU2835
 10059 05ce 0368     		ldr	r3, [r0]	@ float
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10060              		.loc 19 398 47 view .LVU2836
 10061 05d0 0993     		str	r3, [sp, #36]	@ float
 400:Veno-Echo.cpp **** 
 10062              		.loc 19 400 9 is_stmt 1 view .LVU2837
 400:Veno-Echo.cpp **** 
 10063              		.loc 19 400 28 is_stmt 0 view .LVU2838
 10064 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10065              	.LVL655:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10066              		.loc 19 403 9 is_stmt 1 view .LVU2839
 10067              	.LBB1834:
 10068              	.LBB1835:
2028:Veno-Echo.cpp ****         returnval = limit;
 10069              		.loc 19 2028 5 is_stmt 0 view .LVU2840
 10070 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 10071              	.LBE1835:
 10072              	.LBE1834:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 317


 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10073              		.loc 19 403 34 view .LVU2841
 10074 05da DDED087A 		vldr.32	s15, [sp, #32]
 10075              	.LVL656:
 10076              	.LBB1838:
 10077              	.LBI1834:
2025:Veno-Echo.cpp **** {
 10078              		.loc 19 2025 7 is_stmt 1 view .LVU2842
 10079              	.LBB1836:
2027:Veno-Echo.cpp ****     if (input > limit)
 10080              		.loc 19 2027 5 view .LVU2843
2028:Veno-Echo.cpp ****         returnval = limit;
 10081              		.loc 19 2028 5 view .LVU2844
 10082 05de F4EEC77A 		vcmpe.f32	s15, s14
 10083 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10084 05e6 00F39881 		bgt	.L619
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10085              		.loc 19 2030 10 view .LVU2845
 10086 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
2031:Veno-Echo.cpp ****     else
 10087              		.loc 19 2031 19 is_stmt 0 view .LVU2846
 10088 05ee F4EE477A 		vcmp.f32	s15, s14
 10089 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10090 05f6 48BF     		it	mi
 10091 05f8 F0EE477A 		vmovmi.f32	s15, s14
 10092              	.LVL657:
 10093              	.L582:
2035:Veno-Echo.cpp **** }
 10094              		.loc 19 2035 5 is_stmt 1 view .LVU2847
2035:Veno-Echo.cpp **** }
 10095              		.loc 19 2035 5 is_stmt 0 view .LVU2848
 10096              	.LBE1836:
 10097              	.LBE1838:
 10098              	.LBB1839:
 10099              	.LBB1840:
2028:Veno-Echo.cpp ****         returnval = limit;
 10100              		.loc 19 2028 5 view .LVU2849
 10101 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 10102              	.LBE1840:
 10103              	.LBE1839:
 404:Veno-Echo.cpp **** 
 10104              		.loc 19 404 34 view .LVU2850
 10105 0600 9DED090A 		vldr.32	s0, [sp, #36]
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10106              		.loc 19 403 23 view .LVU2851
 10107 0604 CDED087A 		vstr.32	s15, [sp, #32]
 404:Veno-Echo.cpp **** 
 10108              		.loc 19 404 9 is_stmt 1 view .LVU2852
 10109              	.LVL658:
 10110              	.LBB1844:
 10111              	.LBI1839:
2025:Veno-Echo.cpp **** {
 10112              		.loc 19 2025 7 view .LVU2853
 10113              	.LBB1841:
2027:Veno-Echo.cpp ****     if (input > limit)
 10114              		.loc 19 2027 5 view .LVU2854
2028:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 318


 10115              		.loc 19 2028 5 view .LVU2855
 10116 0608 B4EEC70A 		vcmpe.f32	s0, s14
 10117 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10118 0610 00F3EA80 		bgt	.L620
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10119              		.loc 19 2030 10 view .LVU2856
 10120 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 10121              	.LBE1841:
 10122              	.LBE1844:
 10123              	.LBB1845:
 406:Veno-Echo.cpp **** {
 10124              		.loc 19 406 1 is_stmt 0 view .LVU2857
 10125 0618 6A4B     		ldr	r3, .L665+36
 10126 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10127              	.LBE1845:
 10128              	.LBB1867:
 10129              	.LBB1842:
2031:Veno-Echo.cpp ****     else
 10130              		.loc 19 2031 19 view .LVU2858
 10131 061c B4EE470A 		vcmp.f32	s0, s14
 10132 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10133 0624 48BF     		it	mi
 10134 0626 B0EE470A 		vmovmi.f32	s0, s14
 10135              	.LVL659:
2035:Veno-Echo.cpp **** }
 10136              		.loc 19 2035 5 is_stmt 1 view .LVU2859
2035:Veno-Echo.cpp **** }
 10137              		.loc 19 2035 5 is_stmt 0 view .LVU2860
 10138              	.LBE1842:
 10139              	.LBE1867:
 404:Veno-Echo.cpp **** 
 10140              		.loc 19 404 23 view .LVU2861
 10141 062a 8DED090A 		vstr.32	s0, [sp, #36]
 406:Veno-Echo.cpp **** {
 10142              		.loc 19 406 1 is_stmt 1 view .LVU2862
 10143              	.LBB1868:
 10144 062e 002B     		cmp	r3, #0
 10145 0630 00F0E380 		beq	.L658
 10146              	.L586:
 10147              	.LBE1868:
 450:Veno-Echo.cpp ****         static float RNegFB{};
 10148              		.loc 19 450 9 view .LVU2863
 451:Veno-Echo.cpp **** 
 10149              		.loc 19 451 9 view .LVU2864
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10150              		.loc 19 454 9 view .LVU2865
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10151              		.loc 19 454 22 is_stmt 0 view .LVU2866
 10152 0634 644B     		ldr	r3, .L665+40
 10153              	.LBB1869:
 10154              	.LBB1870:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 10155              		.loc 12 57 16 view .LVU2867
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 319


 10156 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 10157              	.LBE1870:
 10158              	.LBE1869:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10159              		.loc 19 454 22 view .LVU2868
 10160 063a D3ED004A 		vldr.32	s9, [r3]
 10161 063e 634B     		ldr	r3, .L665+44
 10162              	.LBB1882:
 10163              	.LBB1871:
 10164              		.loc 12 57 37 view .LVU2869
 10165 0640 98ED006A 		vldr.32	s12, [r8]
 10166              	.LBE1871:
 10167              	.LBE1882:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10168              		.loc 19 454 22 view .LVU2870
 10169 0644 93ED007A 		vldr.32	s14, [r3]
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10170              		.loc 19 457 22 view .LVU2871
 10171 0648 614B     		ldr	r3, .L665+48
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10172              		.loc 19 454 9 view .LVU2872
 10173 064a F4EEC74A 		vcmpe.f32	s9, s14
 10174              	.LBB1883:
 10175              	.LBB1884:
 10176              		.loc 12 57 16 view .LVU2873
 10177 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 10178              		.loc 12 65 20 view .LVU2874
 10179 0652 99ED054A 		vldr.32	s8, [r9, #20]
 10180              		.loc 12 65 53 view .LVU2875
 10181 0656 99ED032A 		vldr.32	s4, [r9, #12]
 10182              	.LBE1884:
 10183              	.LBE1883:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10184              		.loc 19 454 9 view .LVU2876
 10185 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10186              	.LBB1893:
 10187              	.LBB1872:
 10188              		.loc 12 65 20 view .LVU2877
 10189 065e 98ED053A 		vldr.32	s6, [r8, #20]
 10190              		.loc 12 65 53 view .LVU2878
 10191 0662 98ED031A 		vldr.32	s2, [r8, #12]
 10192              	.LBE1872:
 10193              	.LBE1893:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10194              		.loc 19 473 13 view .LVU2879
 10195 0666 DFED5B1A 		vldr.32	s3, .L665+52
 10196 066a 58BF     		it	pl
 10197 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 320


 10198              		.loc 19 457 9 is_stmt 1 view .LVU2880
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10199              		.loc 19 457 22 is_stmt 0 view .LVU2881
 10200 0670 93ED007A 		vldr.32	s14, [r3]
 10201 0674 584B     		ldr	r3, .L665+56
 10202 0676 D3ED006A 		vldr.32	s13, [r3]
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10203              		.loc 19 460 15 view .LVU2882
 10204 067a 67EEA44A 		vmul.f32	s9, s15, s9
 10205              	.LBB1894:
 10206              	.LBB1885:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10207              		.loc 12 57 37 view .LVU2883
 10208 067e D9ED007A 		vldr.32	s15, [r9]
 10209              	.LBE1885:
 10210              	.LBE1894:
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10211              		.loc 19 457 9 view .LVU2884
 10212 0682 B4EEE67A 		vcmpe.f32	s14, s13
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10213              		.loc 19 464 36 view .LVU2885
 10214 0686 554B     		ldr	r3, .L665+60
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10215              		.loc 19 457 9 view .LVU2886
 10216 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10217 068c 58BF     		it	pl
 10218 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10219              		.loc 19 460 9 is_stmt 1 view .LVU2887
 10220              	.LVL660:
 461:Veno-Echo.cpp **** 
 10221              		.loc 19 461 9 view .LVU2888
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10222              		.loc 19 464 36 is_stmt 0 view .LVU2889
 10223 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 461:Veno-Echo.cpp **** 
 10224              		.loc 19 461 15 view .LVU2890
 10225 0696 20EE070A 		vmul.f32	s0, s0, s14
 10226              	.LVL661:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10227              		.loc 19 464 9 is_stmt 1 view .LVU2891
 10228              	.LBB1895:
 10229              	.LBB1873:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10230              		.loc 12 57 33 is_stmt 0 view .LVU2892
 10231 069a 36EEE25A 		vsub.f32	s10, s13, s5
 10232              	.LBE1873:
 10233              	.LBE1895:
 10234              	.LBB1896:
 10235              	.LBB1886:
 10236 069e 76EEE35A 		vsub.f32	s11, s13, s7
 10237              	.LBE1886:
 10238              	.LBE1896:
 10239              	.LBB1897:
 10240              	.LBB1874:
 10241              		.loc 12 65 45 view .LVU2893
 10242 06a2 36EEC37A 		vsub.f32	s14, s13, s6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 321


  57:envFollow.h   ****         sample_noDC = sample - avg;
 10243              		.loc 12 57 37 view .LVU2894
 10244 06a6 25EE065A 		vmul.f32	s10, s10, s12
 10245              	.LBE1874:
 10246              	.LBE1897:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10247              		.loc 19 464 36 view .LVU2895
 10248 06aa 93ED006A 		vldr.32	s12, [r3]
 10249              	.LBB1898:
 10250              	.LBB1887:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10251              		.loc 12 57 37 view .LVU2896
 10252 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 10253              		.loc 12 65 45 view .LVU2897
 10254 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 10255              	.LBE1887:
 10256              	.LBE1898:
 10257              	.LBB1899:
 10258              	.LBB1875:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10259              		.loc 12 57 28 view .LVU2898
 10260 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 10261              	.LBE1875:
 10262              	.LBE1899:
 10263              	.LBB1900:
 10264              	.LBB1888:
 10265 06ba E0EE235A 		vfma.f32	s11, s0, s7
 10266              		.loc 12 65 53 view .LVU2899
 10267 06be 67EE827A 		vmul.f32	s15, s15, s4
 10268              	.LBE1888:
 10269              	.LBE1900:
 10270              	.LBB1901:
 10271              	.LBB1876:
 10272 06c2 27EE017A 		vmul.f32	s14, s14, s2
 10273              	.LBE1876:
 10274              	.LBE1901:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10275              		.loc 19 464 36 view .LVU2900
 10276 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 10277              	.LBB1902:
 10278              	.LBB1877:
  58:envFollow.h   **** 
 10279              		.loc 12 58 30 view .LVU2901
 10280 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10281              		.loc 12 57 13 view .LVU2902
 10282 06ce 88ED005A 		vstr.32	s10, [r8]
 10283              	.LBE1877:
 10284              	.LBE1902:
 10285              	.LBB1903:
 10286              	.LBB1889:
  58:envFollow.h   **** 
 10287              		.loc 12 58 30 view .LVU2903
 10288 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10289              		.loc 12 57 13 view .LVU2904
 10290 06d6 C9ED005A 		vstr.32	s11, [r9]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 322


 10291              	.LBE1889:
 10292              	.LBE1903:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10293              		.loc 19 464 89 view .LVU2905
 10294 06da 66EE005A 		vmul.f32	s11, s12, s0
 10295              	.LBB1904:
 10296              	.LBB1878:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10297              		.loc 12 61 27 view .LVU2906
 10298 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 10299              		.loc 12 58 21 view .LVU2907
 10300 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 10301              	.LBE1878:
 10302              	.LBE1904:
 10303              	.LBB1905:
 10304              	.LBB1890:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10305              		.loc 12 61 27 view .LVU2908
 10306 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 10307              		.loc 12 58 21 view .LVU2909
 10308 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 10309              	.LBE1890:
 10310              	.LBE1905:
 465:Veno-Echo.cpp **** 
 10311              		.loc 19 465 89 view .LVU2910
 10312 06ee 26EE246A 		vmul.f32	s12, s12, s9
 10313              	.LBB1906:
 10314              	.LBB1879:
 10315              		.loc 12 65 40 view .LVU2911
 10316 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10317              		.loc 12 61 20 view .LVU2912
 10318 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 10319              	.LBE1879:
 10320              	.LBE1906:
 10321              	.LBB1907:
 10322              	.LBB1891:
 10323              		.loc 12 65 40 view .LVU2913
 10324 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10325              		.loc 12 61 20 view .LVU2914
 10326 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 10327              	.LBE1891:
 10328              	.LBE1907:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10329              		.loc 19 464 15 view .LVU2915
 10330 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 10331              	.LVL662:
 465:Veno-Echo.cpp **** 
 10332              		.loc 19 465 9 is_stmt 1 view .LVU2916
 465:Veno-Echo.cpp **** 
 10333              		.loc 19 465 15 is_stmt 0 view .LVU2917
 10334 0706 A6EE806A 		vfma.f32	s12, s13, s0
 10335              	.LVL663:
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 323


 10336              		.loc 19 469 9 is_stmt 1 view .LVU2918
 10337              	.LBB1908:
 10338              	.LBI1869:
  54:envFollow.h   ****     {
 10339              		.loc 12 54 11 view .LVU2919
 10340              	.LBB1880:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10341              		.loc 12 57 9 view .LVU2920
  58:envFollow.h   **** 
 10342              		.loc 12 58 9 view .LVU2921
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10343              		.loc 12 61 9 view .LVU2922
 10344              		.loc 12 65 9 view .LVU2923
 10345              	.LBE1880:
 10346              	.LBE1908:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10347              		.loc 19 473 13 is_stmt 0 view .LVU2924
 10348 070a B4EEE17A 		vcmpe.f32	s14, s3
 10349              	.LBB1909:
 10350              	.LBB1881:
 10351              		.loc 12 65 17 view .LVU2925
 10352 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 10353              		.loc 12 67 9 is_stmt 1 view .LVU2926
 10354              	.LVL664:
 10355              		.loc 12 67 9 is_stmt 0 view .LVU2927
 10356              	.LBE1881:
 10357              	.LBE1909:
 470:Veno-Echo.cpp **** 
 10358              		.loc 19 470 9 is_stmt 1 view .LVU2928
 10359              	.LBB1910:
 10360              	.LBI1883:
  54:envFollow.h   ****     {
 10361              		.loc 12 54 11 view .LVU2929
 10362              	.LBB1892:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10363              		.loc 12 57 9 view .LVU2930
  58:envFollow.h   **** 
 10364              		.loc 12 58 9 view .LVU2931
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10365              		.loc 12 61 9 view .LVU2932
  65:envFollow.h   **** 
 10366              		.loc 12 65 9 view .LVU2933
  65:envFollow.h   **** 
 10367              		.loc 12 65 17 is_stmt 0 view .LVU2934
 10368 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 10369              		.loc 12 67 9 is_stmt 1 view .LVU2935
 10370              	.LVL665:
 10371              		.loc 12 67 9 is_stmt 0 view .LVU2936
 10372              	.LBE1892:
 10373              	.LBE1910:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10374              		.loc 19 473 13 is_stmt 1 view .LVU2937
 10375 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10376 071a 3DDB     		blt	.L648
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 324


 10377              		.loc 19 474 17 view .LVU2938
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10378              		.loc 19 474 32 is_stmt 0 view .LVU2939
 10379 071c 37EE617A 		vsub.f32	s14, s14, s3
 10380              	.LVL666:
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10381              		.loc 19 474 47 view .LVU2940
 10382 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 10383 0724 27EE267A 		vmul.f32	s14, s14, s13
 10384              	.L592:
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10385              		.loc 19 478 13 view .LVU2941
 10386 0728 DFED2A6A 		vldr.32	s13, .L665+52
 10387 072c 274B     		ldr	r3, .L665+44
 10388 072e F4EEE67A 		vcmpe.f32	s15, s13
 10389 0732 83ED007A 		vstr.32	s14, [r3]
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10390              		.loc 19 478 13 is_stmt 1 view .LVU2942
 10391 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10392 073a 2ADB     		blt	.L649
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10393              		.loc 19 479 17 view .LVU2943
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10394              		.loc 19 479 32 is_stmt 0 view .LVU2944
 10395 073c 77EEE67A 		vsub.f32	s15, s15, s13
 10396              	.LVL667:
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10397              		.loc 19 479 47 view .LVU2945
 10398 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 10399 0744 67EE877A 		vmul.f32	s15, s15, s14
 10400              	.L594:
 10401 0748 234B     		ldr	r3, .L665+56
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10402              		.loc 19 483 15 view .LVU2946
 10403 074a 38EEA50A 		vadd.f32	s0, s17, s11
 10404              	.LVL668:
 484:Veno-Echo.cpp ****  
 10405              		.loc 19 484 15 view .LVU2947
 10406 074e 38EE068A 		vadd.f32	s16, s16, s12
 10407              	.LVL669:
 484:Veno-Echo.cpp ****  
 10408              		.loc 19 484 15 view .LVU2948
 10409 0752 C3ED007A 		vstr.32	s15, [r3]
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10410              		.loc 19 483 9 is_stmt 1 view .LVU2949
 10411              	.LVL670:
 484:Veno-Echo.cpp ****  
 10412              		.loc 19 484 9 view .LVU2950
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 10413              		.loc 19 487 9 view .LVU2951
 10414              	.LBB1911:
 10415              	.LBI1911:
2025:Veno-Echo.cpp **** {
 10416              		.loc 19 2025 7 view .LVU2952
 10417              	.LBB1912:
2027:Veno-Echo.cpp ****     if (input > limit)
 10418              		.loc 19 2027 5 view .LVU2953
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 325


2028:Veno-Echo.cpp ****         returnval = limit;
 10419              		.loc 19 2028 5 view .LVU2954
 10420 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 10421 075a B4EEE70A 		vcmpe.f32	s0, s15
 10422 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10423 0762 13DC     		bgt	.L626
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10424              		.loc 19 2030 10 view .LVU2955
 10425 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
2031:Veno-Echo.cpp ****     else
 10426              		.loc 19 2031 19 is_stmt 0 view .LVU2956
 10427 0768 B4EE670A 		vcmp.f32	s0, s15
 10428 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10429 0770 48BF     		it	mi
 10430 0772 B0EE670A 		vmovmi.f32	s0, s15
 10431              	.LVL671:
 10432              	.L596:
2035:Veno-Echo.cpp **** }
 10433              		.loc 19 2035 5 is_stmt 1 view .LVU2957
2035:Veno-Echo.cpp **** }
 10434              		.loc 19 2035 5 is_stmt 0 view .LVU2958
 10435              	.LBE1912:
 10436              	.LBE1911:
 488:Veno-Echo.cpp **** 
 10437              		.loc 19 488 9 is_stmt 1 view .LVU2959
 10438              	.LBB1914:
 10439              	.LBI1571:
2025:Veno-Echo.cpp **** {
 10440              		.loc 19 2025 7 view .LVU2960
 10441              	.LBB1573:
2027:Veno-Echo.cpp ****     if (input > limit)
 10442              		.loc 19 2027 5 view .LVU2961
2028:Veno-Echo.cpp ****         returnval = limit;
 10443              		.loc 19 2028 5 view .LVU2962
 10444 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10445 077a B4EEE78A 		vcmpe.f32	s16, s15
 10446 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10447 0782 7FF78FAC 		ble	.L659
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10448              		.loc 19 2029 19 is_stmt 0 view .LVU2963
 10449 0786 B0EE678A 		vmov.f32	s16, s15
 10450              	.LVL672:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10451              		.loc 19 2029 19 view .LVU2964
 10452 078a 94E4     		b	.L598
 10453              	.LVL673:
 10454              	.L626:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10455              		.loc 19 2029 19 view .LVU2965
 10456              	.LBE1573:
 10457              	.LBE1914:
 10458              	.LBB1915:
 10459              	.LBB1913:
 10460 078c B0EE670A 		vmov.f32	s0, s15
 10461              	.LVL674:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10462              		.loc 19 2029 19 view .LVU2966
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 326


 10463 0790 F1E7     		b	.L596
 10464              	.LVL675:
 10465              	.L649:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10466              		.loc 19 2029 19 view .LVU2967
 10467              	.LBE1913:
 10468              	.LBE1915:
 480:Veno-Echo.cpp **** 
 10469              		.loc 19 480 25 view .LVU2968
 10470 0792 DFED137A 		vldr.32	s15, .L665+64
 10471              	.LVL676:
 480:Veno-Echo.cpp **** 
 10472              		.loc 19 480 25 view .LVU2969
 10473 0796 D7E7     		b	.L594
 10474              	.LVL677:
 10475              	.L648:
 476:Veno-Echo.cpp ****             
 10476              		.loc 19 476 25 view .LVU2970
 10477 0798 9FED117A 		vldr.32	s14, .L665+64
 10478              	.LVL678:
 476:Veno-Echo.cpp ****             
 10479              		.loc 19 476 25 view .LVU2971
 10480 079c C4E7     		b	.L592
 10481              	.L666:
 10482 079e 00BF     		.align	2
 10483              	.L665:
 10484 07a0 C1270900 		.word	600001
 10485 07a4 BF270900 		.word	599999
 10486 07a8 189F2400 		.word	2400024
 10487 07ac 249F2400 		.word	2400036
 10488 07b0 1C9F2400 		.word	2400028
 10489 07b4 00000000 		.word	.LANCHOR106
 10490 07b8 00000000 		.word	.LANCHOR107
 10491 07bc 00000000 		.word	.LANCHOR0
 10492 07c0 00000000 		.word	.LANCHOR1
 10493 07c4 00000000 		.word	.LANCHOR65
 10494 07c8 00000000 		.word	.LANCHOR13
 10495 07cc 00000000 		.word	.LANCHOR129
 10496 07d0 00000000 		.word	.LANCHOR26
 10497 07d4 CDCCCC3E 		.word	1053609165
 10498 07d8 00000000 		.word	.LANCHOR130
 10499 07dc 00000000 		.word	.LANCHOR54
 10500 07e0 00000000 		.word	0
 10501 07e4 C0270900 		.word	600000
 10502              	.LVL679:
 10503              	.L620:
 10504              	.LBB1916:
 406:Veno-Echo.cpp **** {
 10505              		.loc 19 406 1 view .LVU2972
 10506 07e8 D64B     		ldr	r3, .L667
 10507              	.LBE1916:
 10508              	.LBB1917:
 10509              	.LBB1843:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10510              		.loc 19 2029 19 view .LVU2973
 10511 07ea B0EE470A 		vmov.f32	s0, s14
 10512              	.LVL680:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 327


2035:Veno-Echo.cpp **** }
 10513              		.loc 19 2035 5 is_stmt 1 view .LVU2974
2035:Veno-Echo.cpp **** }
 10514              		.loc 19 2035 5 is_stmt 0 view .LVU2975
 10515              	.LBE1843:
 10516              	.LBE1917:
 10517              	.LBB1918:
 406:Veno-Echo.cpp **** {
 10518              		.loc 19 406 1 view .LVU2976
 10519 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10520              	.LBE1918:
 404:Veno-Echo.cpp **** 
 10521              		.loc 19 404 23 view .LVU2977
 10522 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 406:Veno-Echo.cpp **** {
 10523              		.loc 19 406 1 is_stmt 1 view .LVU2978
 10524              	.LBB1919:
 10525 07f4 002B     		cmp	r3, #0
 10526 07f6 7FF41DAF 		bne	.L586
 10527              	.L658:
 10528              	.LBB1846:
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10529              		.loc 19 412 9 view .LVU2979
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10530              		.loc 19 412 22 is_stmt 0 view .LVU2980
 10531 07fa 9FEDD39A 		vldr.32	s18, .L667+4
 10532 07fe D34D     		ldr	r5, .L667+8
 10533 0800 27EE890A 		vmul.f32	s0, s15, s18
 413:Veno-Echo.cpp **** 
 10534              		.loc 19 413 22 view .LVU2981
 10535 0804 D24C     		ldr	r4, .L667+12
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10536              		.loc 19 412 22 view .LVU2982
 10537 0806 2846     		mov	r0, r5
 10538 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10539              	.LVL681:
 413:Veno-Echo.cpp **** 
 10540              		.loc 19 413 9 is_stmt 1 view .LVU2983
 413:Veno-Echo.cpp **** 
 10541              		.loc 19 413 22 is_stmt 0 view .LVU2984
 10542 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10543 0810 2046     		mov	r0, r4
 10544 0812 20EE090A 		vmul.f32	s0, s0, s18
 10545 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10546              	.LVL682:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10547              		.loc 19 416 9 is_stmt 1 view .LVU2985
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10548              		.loc 19 416 9 is_stmt 0 view .LVU2986
 10549              	.LBE1846:
 10550              	.LBE1919:
 10551              	.LBE1946:
 10552              	.LBE1957:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 328


  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10553              		.loc 9 52 26 is_stmt 1 view .LVU2987
 10554              	.LBB1958:
 10555              	.LBB1947:
 10556              	.LBB1920:
 10557              	.LBB1861:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10558              		.loc 19 416 40 is_stmt 0 view .LVU2988
 10559 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 10560 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10561              		.loc 19 420 49 view .LVU2989
 10562 0822 0CAA     		add	r2, sp, #48
 417:Veno-Echo.cpp ****         
 10563              		.loc 19 417 40 view .LVU2990
 10564 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10565              		.loc 19 420 49 view .LVU2991
 10566 0828 08A9     		add	r1, sp, #32
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10567              		.loc 19 416 40 view .LVU2992
 10568 082a 27EE267A 		vmul.f32	s14, s14, s13
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10569              		.loc 19 420 49 view .LVU2993
 10570 082e C948     		ldr	r0, .L667+16
 417:Veno-Echo.cpp ****         
 10571              		.loc 19 417 40 view .LVU2994
 10572 0830 67EEA67A 		vmul.f32	s15, s15, s13
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10573              		.loc 19 416 47 view .LVU2995
 10574 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 417:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 329


 10575              		.loc 19 417 9 is_stmt 1 view .LVU2996
 10576              	.LVL683:
 417:Veno-Echo.cpp ****         
 10577              		.loc 19 417 9 is_stmt 0 view .LVU2997
 10578              	.LBE1861:
 10579              	.LBE1920:
 10580              	.LBE1947:
 10581              	.LBE1958:
 10582              		.loc 9 52 26 is_stmt 1 view .LVU2998
 10583              	.LBB1959:
 10584              	.LBB1948:
 10585              	.LBB1921:
 10586              	.LBB1862:
 417:Veno-Echo.cpp ****         
 10587              		.loc 19 417 47 is_stmt 0 view .LVU2999
 10588 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10589              		.loc 19 420 9 is_stmt 1 view .LVU3000
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10590              		.loc 19 420 49 is_stmt 0 view .LVU3001
 10591 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10592              	.LVL684:
 421:Veno-Echo.cpp **** 
 10593              		.loc 19 421 49 view .LVU3002
 10594 0840 0DAA     		add	r2, sp, #52
 10595 0842 09A9     		add	r1, sp, #36
 10596 0844 C448     		ldr	r0, .L667+20
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10597              		.loc 19 420 78 view .LVU3003
 10598 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 421:Veno-Echo.cpp **** 
 10599              		.loc 19 421 9 is_stmt 1 view .LVU3004
 421:Veno-Echo.cpp **** 
 10600              		.loc 19 421 49 is_stmt 0 view .LVU3005
 10601 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10602              	.LVL685:
 10603              	.LBB1847:
 10604              	.LBB1848:
2028:Veno-Echo.cpp ****         returnval = limit;
 10605              		.loc 19 2028 5 view .LVU3006
 10606 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10607              	.LBE1848:
 10608              	.LBE1847:
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10609              		.loc 19 424 36 view .LVU3007
 10610 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 421:Veno-Echo.cpp **** 
 10611              		.loc 19 421 49 view .LVU3008
 10612 0856 F0EE407A 		vmov.f32	s15, s0
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10613              		.loc 19 424 9 is_stmt 1 view .LVU3009
 10614              	.LVL686:
 10615              	.LBB1852:
 10616              	.LBI1847:
2025:Veno-Echo.cpp **** {
 10617              		.loc 19 2025 7 view .LVU3010
 10618              	.LBB1849:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 330


2027:Veno-Echo.cpp ****     if (input > limit)
 10619              		.loc 19 2027 5 view .LVU3011
2028:Veno-Echo.cpp ****         returnval = limit;
 10620              		.loc 19 2028 5 view .LVU3012
 10621 085a B4EEE67A 		vcmpe.f32	s14, s13
 10622 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10623 0862 00F3A681 		bgt	.L621
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10624              		.loc 19 2030 10 view .LVU3013
 10625 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10626 086a B4EEE67A 		vcmpe.f32	s14, s13
 10627 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10628 0872 00F1B581 		bmi	.L622
 10629 0876 27EE090A 		vmul.f32	s0, s14, s18
 10630              	.LVL687:
 10631              	.L587:
2035:Veno-Echo.cpp **** }
 10632              		.loc 19 2035 5 view .LVU3014
2035:Veno-Echo.cpp **** }
 10633              		.loc 19 2035 5 is_stmt 0 view .LVU3015
 10634              	.LBE1849:
 10635              	.LBE1852:
 10636              	.LBB1853:
 10637              	.LBB1854:
2028:Veno-Echo.cpp ****         returnval = limit;
 10638              		.loc 19 2028 5 view .LVU3016
 10639 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10640              	.LBE1854:
 10641              	.LBE1853:
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10642              		.loc 19 424 25 view .LVU3017
 10643 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 425:Veno-Echo.cpp **** 
 10644              		.loc 19 425 9 is_stmt 1 view .LVU3018
 10645              	.LVL688:
 10646              	.LBB1857:
 10647              	.LBI1853:
2025:Veno-Echo.cpp **** {
 10648              		.loc 19 2025 7 view .LVU3019
 10649              	.LBB1855:
2027:Veno-Echo.cpp ****     if (input > limit)
 10650              		.loc 19 2027 5 view .LVU3020
2028:Veno-Echo.cpp ****         returnval = limit;
 10651              		.loc 19 2028 5 view .LVU3021
 10652 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10653 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10654 088a 00F38F81 		bgt	.L623
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10655              		.loc 19 2030 10 view .LVU3022
 10656 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
2031:Veno-Echo.cpp ****     else
 10657              		.loc 19 2031 19 is_stmt 0 view .LVU3023
 10658 0892 F4EE477A 		vcmp.f32	s15, s14
 10659 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10660 089a 48BF     		it	mi
 10661 089c F0EE477A 		vmovmi.f32	s15, s14
 10662              	.LVL689:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 331


 10663              	.L588:
2035:Veno-Echo.cpp **** }
 10664              		.loc 19 2035 5 is_stmt 1 view .LVU3024
2035:Veno-Echo.cpp **** }
 10665              		.loc 19 2035 5 is_stmt 0 view .LVU3025
 10666              	.LBE1855:
 10667              	.LBE1857:
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10668              		.loc 19 428 22 view .LVU3026
 10669 08a0 AE4D     		ldr	r5, .L667+24
 429:Veno-Echo.cpp **** 
 10670              		.loc 19 429 22 view .LVU3027
 10671 08a2 AF4C     		ldr	r4, .L667+28
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10672              		.loc 19 428 22 view .LVU3028
 10673 08a4 2846     		mov	r0, r5
 425:Veno-Echo.cpp **** 
 10674              		.loc 19 425 25 view .LVU3029
 10675 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10676              		.loc 19 428 9 is_stmt 1 view .LVU3030
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10677              		.loc 19 428 22 is_stmt 0 view .LVU3031
 10678 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10679              	.LVL690:
 429:Veno-Echo.cpp **** 
 10680              		.loc 19 429 9 is_stmt 1 view .LVU3032
 429:Veno-Echo.cpp **** 
 10681              		.loc 19 429 22 is_stmt 0 view .LVU3033
 10682 08ae DFEDA67A 		vldr.32	s15, .L667+4
 10683 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10684 08b6 2046     		mov	r0, r4
 10685 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10686 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10687              	.LVL691:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10688              		.loc 19 431 9 is_stmt 1 view .LVU3034
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10689              		.loc 19 431 9 is_stmt 0 view .LVU3035
 10690              	.LBE1862:
 10691              	.LBE1921:
 10692              	.LBE1948:
 10693              	.LBE1959:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10694              		.loc 9 56 27 is_stmt 1 view .LVU3036
 10695              	.LBB1960:
 10696              	.LBB1949:
 10697              	.LBB1922:
 10698              	.LBB1863:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10699              		.loc 19 431 41 is_stmt 0 view .LVU3037
 10700 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10701 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 332


 10702              		.loc 19 434 45 view .LVU3038
 10703 08c8 0EA9     		add	r1, sp, #56
 432:Veno-Echo.cpp **** 
 10704              		.loc 19 432 41 view .LVU3039
 10705 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10706              		.loc 19 434 45 view .LVU3040
 10707 08ce 10AA     		add	r2, sp, #64
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10708              		.loc 19 431 41 view .LVU3041
 10709 08d0 27EE267A 		vmul.f32	s14, s14, s13
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10710              		.loc 19 434 45 view .LVU3042
 10711 08d4 A348     		ldr	r0, .L667+32
 432:Veno-Echo.cpp **** 
 10712              		.loc 19 432 41 view .LVU3043
 10713 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10714              		.loc 19 431 48 view .LVU3044
 10715 08da 8DED107A 		vstr.32	s14, [sp, #64]
 432:Veno-Echo.cpp **** 
 10716              		.loc 19 432 9 is_stmt 1 view .LVU3045
 10717              	.LVL692:
 432:Veno-Echo.cpp **** 
 10718              		.loc 19 432 9 is_stmt 0 view .LVU3046
 10719              	.LBE1863:
 10720              	.LBE1922:
 10721              	.LBE1949:
 10722              	.LBE1960:
 10723              		.loc 9 56 27 is_stmt 1 view .LVU3047
 10724              	.LBB1961:
 10725              	.LBB1950:
 10726              	.LBB1923:
 10727              	.LBB1864:
 432:Veno-Echo.cpp **** 
 10728              		.loc 19 432 48 is_stmt 0 view .LVU3048
 10729 08de CDED117A 		vstr.32	s15, [sp, #68]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10730              		.loc 19 434 9 is_stmt 1 view .LVU3049
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10731              		.loc 19 434 45 is_stmt 0 view .LVU3050
 10732 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10733              	.LVL693:
 435:Veno-Echo.cpp **** 
 10734              		.loc 19 435 45 view .LVU3051
 10735 08e6 0FA9     		add	r1, sp, #60
 10736 08e8 11AA     		add	r2, sp, #68
 10737 08ea 9F48     		ldr	r0, .L667+36
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10738              		.loc 19 434 25 view .LVU3052
 10739 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 435:Veno-Echo.cpp **** 
 10740              		.loc 19 435 9 is_stmt 1 view .LVU3053
 435:Veno-Echo.cpp **** 
 10741              		.loc 19 435 45 is_stmt 0 view .LVU3054
 10742 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10743              	.LVL694:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 333


 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10744              		.loc 19 439 44 view .LVU3055
 10745 08f4 0EAA     		add	r2, sp, #56
 10746 08f6 08A9     		add	r1, sp, #32
 10747 08f8 9C48     		ldr	r0, .L667+40
 435:Veno-Echo.cpp **** 
 10748              		.loc 19 435 25 view .LVU3056
 10749 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10750              		.loc 19 439 9 is_stmt 1 view .LVU3057
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10751              		.loc 19 439 44 is_stmt 0 view .LVU3058
 10752 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10753              	.LVL695:
 440:Veno-Echo.cpp **** 
 10754              		.loc 19 440 44 view .LVU3059
 10755 0902 0FAA     		add	r2, sp, #60
 10756 0904 09A9     		add	r1, sp, #36
 10757 0906 9A48     		ldr	r0, .L667+44
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10758              		.loc 19 439 23 view .LVU3060
 10759 0908 8DED080A 		vstr.32	s0, [sp, #32]
 440:Veno-Echo.cpp **** 
 10760              		.loc 19 440 9 is_stmt 1 view .LVU3061
 440:Veno-Echo.cpp **** 
 10761              		.loc 19 440 44 is_stmt 0 view .LVU3062
 10762 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10763              	.LVL696:
 10764 0910 DDED087A 		vldr.32	s15, [sp, #32]
 440:Veno-Echo.cpp **** 
 10765              		.loc 19 440 23 view .LVU3063
 10766 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10767              	.LBE1864:
 10768 0918 8CE6     		b	.L586
 10769              	.LVL697:
 10770              	.L619:
 440:Veno-Echo.cpp **** 
 10771              		.loc 19 440 23 view .LVU3064
 10772              	.LBE1923:
 10773              	.LBB1924:
 10774              	.LBB1837:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10775              		.loc 19 2029 19 view .LVU3065
 10776 091a F0EE477A 		vmov.f32	s15, s14
 10777              	.LVL698:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10778              		.loc 19 2029 19 view .LVU3066
 10779 091e 6DE6     		b	.L582
 10780              	.LVL699:
 10781              	.L572:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10782              		.loc 19 2029 19 view .LVU3067
 10783              	.LBE1837:
 10784              	.LBE1924:
 10785              	.LBB1925:
 10786              	.LBB1829:
 10787              	.LBB1825:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 334


 126:delayline_reverse.h ****         {
 10788              		.loc 18 126 12 view .LVU3068
 10789 0920 944B     		ldr	r3, .L667+48
 126:delayline_reverse.h ****         {
 10790              		.loc 18 126 9 view .LVU3069
 10791 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10792              		.loc 18 126 12 view .LVU3070
 10793 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10794              		.loc 18 126 9 view .LVU3071
 10795 0926 002A     		cmp	r2, #0
 10796 0928 3FF439AE 		beq	.L578
 10797              	.L655:
 126:delayline_reverse.h ****         {
 10798              		.loc 18 126 9 view .LVU3072
 10799 092c 924A     		ldr	r2, .L667+52
 10800 092e A018     		adds	r0, r4, r2
 10801 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10802              		.loc 18 128 13 view .LVU3073
 10803 0932 002A     		cmp	r2, #0
 10804 0934 3FF419AE 		beq	.L575
 10805              	.L576:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10806              		.loc 18 141 45 view .LVU3074
 10807 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10808              	.LVL700:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10809              		.loc 18 141 45 view .LVU3075
 10810 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10811              		.loc 18 141 37 view .LVU3076
 10812 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10813              		.loc 18 142 17 view .LVU3077
 10814 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10815              		.loc 18 141 45 view .LVU3078
 10816 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10817              		.loc 18 141 37 view .LVU3079
 10818 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10819              		.loc 18 141 45 view .LVU3080
 10820 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10821              		.loc 18 141 37 view .LVU3081
 10822 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10823              		.loc 18 142 17 view .LVU3082
 10824 0954 F5EEC07A 		vcmpe.f32	s15, #0
 10825 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10826 095c 00F13A81 		bmi	.L581
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10827              		.loc 18 141 17 view .LVU3083
 10828 0960 C1ED007A 		vstr.32	s15, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 335


 10829 0964 1BE6     		b	.L578
 10830              	.LVL701:
 10831              	.L562:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10832              		.loc 18 141 17 view .LVU3084
 10833              	.LBE1825:
 10834              	.LBE1829:
 10835              	.LBE1925:
 10836              	.LBB1926:
 10837              	.LBB1802:
 10838              	.LBB1791:
 126:delayline_reverse.h ****         {
 10839              		.loc 18 126 12 view .LVU3085
 10840 0966 834A     		ldr	r2, .L667+48
 126:delayline_reverse.h ****         {
 10841              		.loc 18 126 9 view .LVU3086
 10842 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10843              		.loc 18 126 12 view .LVU3087
 10844 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 10845              		.loc 18 126 9 view .LVU3088
 10846 096c 002B     		cmp	r3, #0
 10847 096e 3FF4ABAD 		beq	.L568
 10848              	.L653:
 126:delayline_reverse.h ****         {
 10849              		.loc 18 126 9 view .LVU3089
 10850 0972 814B     		ldr	r3, .L667+52
 10851 0974 E818     		adds	r0, r5, r3
 10852 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10853              		.loc 18 128 13 view .LVU3090
 10854 0978 002B     		cmp	r3, #0
 10855 097a 3FF435AD 		beq	.L565
 10856              	.L566:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10857              		.loc 18 141 45 view .LVU3091
 10858 097e 07EE90EA 		vmov	s15, lr	@ int
 10859              	.LVL702:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10860              		.loc 18 141 45 view .LVU3092
 10861 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10862              		.loc 18 142 17 view .LVU3093
 10863 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10864              		.loc 18 141 45 view .LVU3094
 10865 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 10866 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10867              		.loc 18 141 37 view .LVU3095
 10868 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 10869              		.loc 18 142 17 view .LVU3096
 10870 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 10871 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10872 099c 40F1C580 		bpl	.L654
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 336


 145:delayline_reverse.h ****                     playinghead_ = false;
 10873              		.loc 18 145 21 view .LVU3097
 10874 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10875              		.loc 18 144 21 view .LVU3098
 10876 09a2 049D     		ldr	r5, [sp, #16]
 10877              	.LVL703:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10878              		.loc 18 144 21 view .LVU3099
 10879 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10880              		.loc 18 145 21 view .LVU3100
 10881 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 10882              		.loc 18 146 21 view .LVU3101
 10883 09a8 0170     		strb	r1, [r0]
 10884 09aa 8DE5     		b	.L568
 10885              	.LVL704:
 10886              	.L613:
 146:delayline_reverse.h ****                 }
 10887              		.loc 18 146 21 view .LVU3102
 10888              	.LBE1791:
 10889              	.LBE1802:
 10890              	.LBE1926:
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 10891              		.loc 19 569 13 is_stmt 1 view .LVU3103
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 10892              		.loc 19 569 20 is_stmt 0 view .LVU3104
 10893 09ac 009B     		ldr	r3, [sp]
 10894 09ae C3ED007A 		vstr.32	s15, [r3]
 570:Veno-Echo.cpp ****         }
 10895              		.loc 19 570 13 is_stmt 1 view .LVU3105
 570:Veno-Echo.cpp ****         }
 10896              		.loc 19 570 22 is_stmt 0 view .LVU3106
 10897 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 10898 09b6 FFF7EDBB 		b	.L614
 10899              	.LVL705:
 10900              	.L650:
 550:Veno-Echo.cpp ****         {
 10901              		.loc 19 550 14 is_stmt 1 view .LVU3107
 10902 09ba 40F3AC80 		ble	.L651
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10903              		.loc 19 552 13 view .LVU3108
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10904              		.loc 19 552 24 is_stmt 0 view .LVU3109
 10905 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10906              		.loc 19 552 18 view .LVU3110
 10907 09c2 DBED005A 		vldr.32	s11, [fp]
 553:Veno-Echo.cpp ****         }
 10908              		.loc 19 553 18 view .LVU3111
 10909 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10910              		.loc 19 552 24 view .LVU3112
 10911 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10912              		.loc 19 552 33 view .LVU3113
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 337


 10913 09ce 37EE077A 		vadd.f32	s14, s14, s14
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10914              		.loc 19 552 18 view .LVU3114
 10915 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 10916              	.LVL706:
 553:Veno-Echo.cpp ****         }
 10917              		.loc 19 553 13 is_stmt 1 view .LVU3115
 553:Veno-Echo.cpp ****         }
 10918              		.loc 19 553 18 is_stmt 0 view .LVU3116
 10919 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 10920              	.LVL707:
 553:Veno-Echo.cpp ****         }
 10921              		.loc 19 553 18 view .LVU3117
 10922 09da FFF7D2BB 		b	.L610
 10923              	.LVL708:
 10924              	.L629:
 10925              	.LBB1927:
 504:Veno-Echo.cpp **** {
 10926              		.loc 19 504 1 view .LVU3118
 10927 09de 594B     		ldr	r3, .L667
 10928              	.LBE1927:
 10929              	.LBB1928:
 10930              	.LBB1583:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10931              		.loc 19 2029 19 view .LVU3119
 10932 09e0 B0EE470A 		vmov.f32	s0, s14
 10933              	.LVL709:
2035:Veno-Echo.cpp **** }
 10934              		.loc 19 2035 5 is_stmt 1 view .LVU3120
2035:Veno-Echo.cpp **** }
 10935              		.loc 19 2035 5 is_stmt 0 view .LVU3121
 10936              	.LBE1583:
 10937              	.LBE1928:
 10938              	.LBB1929:
 504:Veno-Echo.cpp **** {
 10939              		.loc 19 504 1 view .LVU3122
 10940 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10941              	.LBE1929:
 502:Veno-Echo.cpp **** 
 10942              		.loc 19 502 27 view .LVU3123
 10943 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 504:Veno-Echo.cpp **** {
 10944              		.loc 19 504 1 is_stmt 1 view .LVU3124
 10945              	.LBB1930:
 10946 09ea 002B     		cmp	r3, #0
 10947 09ec 3FF4B0AB 		beq	.L604
 10948              	.L656:
 10949              	.LBB1586:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10950              		.loc 19 510 9 view .LVU3125
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10951              		.loc 19 510 27 is_stmt 0 view .LVU3126
 10952 09f0 9FED558A 		vldr.32	s16, .L667+4
 10953              	.LVL710:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10954              		.loc 19 510 27 view .LVU3127
 10955 09f4 614D     		ldr	r5, .L667+56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 338


 10956 09f6 27EE880A 		vmul.f32	s0, s15, s16
 511:Veno-Echo.cpp **** 
 10957              		.loc 19 511 27 view .LVU3128
 10958 09fa 614C     		ldr	r4, .L667+60
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10959              		.loc 19 510 27 view .LVU3129
 10960 09fc 2846     		mov	r0, r5
 10961 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10962              	.LVL711:
 511:Veno-Echo.cpp **** 
 10963              		.loc 19 511 9 is_stmt 1 view .LVU3130
 511:Veno-Echo.cpp **** 
 10964              		.loc 19 511 27 is_stmt 0 view .LVU3131
 10965 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 10966 0a06 2046     		mov	r0, r4
 10967 0a08 20EE080A 		vmul.f32	s0, s0, s16
 10968 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10969              	.LVL712:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10970              		.loc 19 514 9 is_stmt 1 view .LVU3132
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10971              		.loc 19 514 9 is_stmt 0 view .LVU3133
 10972              	.LBE1586:
 10973              	.LBE1930:
 10974              	.LBE1950:
 10975              	.LBE1961:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10976              		.loc 9 52 26 is_stmt 1 view .LVU3134
 10977              	.LBB1962:
 10978              	.LBB1951:
 10979              	.LBB1931:
 10980              	.LBB1601:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10981              		.loc 19 514 50 is_stmt 0 view .LVU3135
 10982 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 10983 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10984              		.loc 19 518 59 view .LVU3136
 10985 0a18 0AA9     		add	r1, sp, #40
 515:Veno-Echo.cpp ****         
 10986              		.loc 19 515 50 view .LVU3137
 10987 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10988              		.loc 19 518 59 view .LVU3138
 10989 0a1e 0CAA     		add	r2, sp, #48
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10990              		.loc 19 514 50 view .LVU3139
 10991 0a20 27EE267A 		vmul.f32	s14, s14, s13
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10992              		.loc 19 518 59 view .LVU3140
 10993 0a24 5748     		ldr	r0, .L667+64
 515:Veno-Echo.cpp ****         
 10994              		.loc 19 515 50 view .LVU3141
 10995 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10996              		.loc 19 514 57 view .LVU3142
 10997 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 339


 515:Veno-Echo.cpp ****         
 10998              		.loc 19 515 9 is_stmt 1 view .LVU3143
 10999              	.LVL713:
 515:Veno-Echo.cpp ****         
 11000              		.loc 19 515 9 is_stmt 0 view .LVU3144
 11001              	.LBE1601:
 11002              	.LBE1931:
 11003              	.LBE1951:
 11004              	.LBE1962:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11005              		.loc 9 52 26 is_stmt 1 view .LVU3145
 11006              	.LBB1963:
 11007              	.LBB1952:
 11008              	.LBB1932:
 11009              	.LBB1602:
 515:Veno-Echo.cpp ****         
 11010              		.loc 19 515 57 is_stmt 0 view .LVU3146
 11011 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11012              		.loc 19 518 9 is_stmt 1 view .LVU3147
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11013              		.loc 19 518 59 is_stmt 0 view .LVU3148
 11014 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11015              	.LVL714:
 519:Veno-Echo.cpp **** 
 11016              		.loc 19 519 59 view .LVU3149
 11017 0a36 0BA9     		add	r1, sp, #44
 11018 0a38 0DAA     		add	r2, sp, #52
 11019 0a3a 5348     		ldr	r0, .L667+68
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11020              		.loc 19 518 97 view .LVU3150
 11021 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 519:Veno-Echo.cpp **** 
 11022              		.loc 19 519 9 is_stmt 1 view .LVU3151
 519:Veno-Echo.cpp **** 
 11023              		.loc 19 519 59 is_stmt 0 view .LVU3152
 11024 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11025              	.LVL715:
 11026              	.LBB1587:
 11027              	.LBB1588:
2028:Veno-Echo.cpp ****         returnval = limit;
 11028              		.loc 19 2028 5 view .LVU3153
 11029 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 11030              	.LBE1588:
 11031              	.LBE1587:
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11032              		.loc 19 522 41 view .LVU3154
 11033 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 519:Veno-Echo.cpp **** 
 11034              		.loc 19 519 59 view .LVU3155
 11035 0a4c F0EE407A 		vmov.f32	s15, s0
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11036              		.loc 19 522 9 is_stmt 1 view .LVU3156
 11037              	.LVL716:
 11038              	.LBB1592:
 11039              	.LBI1587:
2025:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 340


 11040              		.loc 19 2025 7 view .LVU3157
 11041              	.LBB1589:
2027:Veno-Echo.cpp ****     if (input > limit)
 11042              		.loc 19 2027 5 view .LVU3158
2028:Veno-Echo.cpp ****         returnval = limit;
 11043              		.loc 19 2028 5 view .LVU3159
 11044 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 11045 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11046 0a58 6EDC     		bgt	.L630
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11047              		.loc 19 2030 10 view .LVU3160
 11048 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 11049 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 11050 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11051 0a66 00F1C080 		bmi	.L631
 11052 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 11053              	.LVL717:
 11054              	.L605:
2035:Veno-Echo.cpp **** }
 11055              		.loc 19 2035 5 view .LVU3161
2035:Veno-Echo.cpp **** }
 11056              		.loc 19 2035 5 is_stmt 0 view .LVU3162
 11057              	.LBE1589:
 11058              	.LBE1592:
 11059              	.LBB1593:
 11060              	.LBB1594:
2028:Veno-Echo.cpp ****         returnval = limit;
 11061              		.loc 19 2028 5 view .LVU3163
 11062 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 11063              	.LBE1594:
 11064              	.LBE1593:
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11065              		.loc 19 522 30 view .LVU3164
 11066 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 523:Veno-Echo.cpp **** 
 11067              		.loc 19 523 9 is_stmt 1 view .LVU3165
 11068              	.LVL718:
 11069              	.LBB1597:
 11070              	.LBI1593:
2025:Veno-Echo.cpp **** {
 11071              		.loc 19 2025 7 view .LVU3166
 11072              	.LBB1595:
2027:Veno-Echo.cpp ****     if (input > limit)
 11073              		.loc 19 2027 5 view .LVU3167
2028:Veno-Echo.cpp ****         returnval = limit;
 11074              		.loc 19 2028 5 view .LVU3168
 11075 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 11076 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11077 0a7e 58DC     		bgt	.L632
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11078              		.loc 19 2030 10 view .LVU3169
 11079 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
2031:Veno-Echo.cpp ****     else
 11080              		.loc 19 2031 19 is_stmt 0 view .LVU3170
 11081 0a84 F4EE477A 		vcmp.f32	s15, s14
 11082 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11083 0a8c 48BF     		it	mi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 341


 11084 0a8e F0EE477A 		vmovmi.f32	s15, s14
 11085              	.LVL719:
 11086              	.L606:
2035:Veno-Echo.cpp **** }
 11087              		.loc 19 2035 5 is_stmt 1 view .LVU3171
2035:Veno-Echo.cpp **** }
 11088              		.loc 19 2035 5 is_stmt 0 view .LVU3172
 11089              	.LBE1595:
 11090              	.LBE1597:
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11091              		.loc 19 526 27 view .LVU3173
 11092 0a92 3E4D     		ldr	r5, .L667+72
 527:Veno-Echo.cpp **** 
 11093              		.loc 19 527 27 view .LVU3174
 11094 0a94 3E4C     		ldr	r4, .L667+76
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11095              		.loc 19 526 27 view .LVU3175
 11096 0a96 2846     		mov	r0, r5
 523:Veno-Echo.cpp **** 
 11097              		.loc 19 523 30 view .LVU3176
 11098 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11099              		.loc 19 526 9 is_stmt 1 view .LVU3177
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11100              		.loc 19 526 27 is_stmt 0 view .LVU3178
 11101 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11102              	.LVL720:
 527:Veno-Echo.cpp **** 
 11103              		.loc 19 527 9 is_stmt 1 view .LVU3179
 527:Veno-Echo.cpp **** 
 11104              		.loc 19 527 27 is_stmt 0 view .LVU3180
 11105 0aa0 DFED297A 		vldr.32	s15, .L667+4
 11106 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 11107 0aa8 2046     		mov	r0, r4
 11108 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 11109 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11110              	.LVL721:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11111              		.loc 19 529 9 is_stmt 1 view .LVU3181
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11112              		.loc 19 529 9 is_stmt 0 view .LVU3182
 11113              	.LBE1602:
 11114              	.LBE1932:
 11115              	.LBE1952:
 11116              	.LBE1963:
 11117              		.loc 9 56 27 is_stmt 1 view .LVU3183
 11118              	.LBB1964:
 11119              	.LBB1953:
 11120              	.LBB1933:
 11121              	.LBB1603:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11122              		.loc 19 529 51 is_stmt 0 view .LVU3184
 11123 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 11124 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11125              		.loc 19 532 55 view .LVU3185
 11126 0aba 0EA9     		add	r1, sp, #56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 342


 530:Veno-Echo.cpp **** 
 11127              		.loc 19 530 51 view .LVU3186
 11128 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11129              		.loc 19 532 55 view .LVU3187
 11130 0ac0 10AA     		add	r2, sp, #64
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11131              		.loc 19 529 51 view .LVU3188
 11132 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11133              		.loc 19 532 55 view .LVU3189
 11134 0ac6 3348     		ldr	r0, .L667+80
 530:Veno-Echo.cpp **** 
 11135              		.loc 19 530 51 view .LVU3190
 11136 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11137              		.loc 19 529 58 view .LVU3191
 11138 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 530:Veno-Echo.cpp **** 
 11139              		.loc 19 530 9 is_stmt 1 view .LVU3192
 11140              	.LVL722:
 530:Veno-Echo.cpp **** 
 11141              		.loc 19 530 9 is_stmt 0 view .LVU3193
 11142              	.LBE1603:
 11143              	.LBE1933:
 11144              	.LBE1953:
 11145              	.LBE1964:
 11146              		.loc 9 56 27 is_stmt 1 view .LVU3194
 11147              	.LBB1965:
 11148              	.LBB1954:
 11149              	.LBB1934:
 11150              	.LBB1604:
 530:Veno-Echo.cpp **** 
 11151              		.loc 19 530 58 is_stmt 0 view .LVU3195
 11152 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11153              		.loc 19 532 9 is_stmt 1 view .LVU3196
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11154              		.loc 19 532 55 is_stmt 0 view .LVU3197
 11155 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11156              	.LVL723:
 533:Veno-Echo.cpp **** 
 11157              		.loc 19 533 55 view .LVU3198
 11158 0ad8 0FA9     		add	r1, sp, #60
 11159 0ada 11AA     		add	r2, sp, #68
 11160 0adc 2E48     		ldr	r0, .L667+84
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11161              		.loc 19 532 30 view .LVU3199
 11162 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 533:Veno-Echo.cpp **** 
 11163              		.loc 19 533 9 is_stmt 1 view .LVU3200
 533:Veno-Echo.cpp **** 
 11164              		.loc 19 533 55 is_stmt 0 view .LVU3201
 11165 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11166              	.LVL724:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11167              		.loc 19 536 53 view .LVU3202
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 343


 11168 0ae6 0EAA     		add	r2, sp, #56
 11169 0ae8 0AA9     		add	r1, sp, #40
 11170 0aea 2C48     		ldr	r0, .L667+88
 533:Veno-Echo.cpp **** 
 11171              		.loc 19 533 30 view .LVU3203
 11172 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11173              		.loc 19 536 9 is_stmt 1 view .LVU3204
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11174              		.loc 19 536 53 is_stmt 0 view .LVU3205
 11175 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11176              	.LVL725:
 537:Veno-Echo.cpp **** 
 11177              		.loc 19 537 53 view .LVU3206
 11178 0af4 0FAA     		add	r2, sp, #60
 11179 0af6 0BA9     		add	r1, sp, #44
 11180 0af8 2948     		ldr	r0, .L667+92
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11181              		.loc 19 536 27 view .LVU3207
 11182 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 537:Veno-Echo.cpp **** 
 11183              		.loc 19 537 9 is_stmt 1 view .LVU3208
 537:Veno-Echo.cpp **** 
 11184              		.loc 19 537 53 is_stmt 0 view .LVU3209
 11185 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11186              	.LVL726:
 11187 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 537:Veno-Echo.cpp **** 
 11188              		.loc 19 537 27 view .LVU3210
 11189 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 11190              	.LBE1604:
 11191 0b0a FFF721BB 		b	.L604
 11192              	.LVL727:
 11193              	.L628:
 537:Veno-Echo.cpp **** 
 11194              		.loc 19 537 27 view .LVU3211
 11195              	.LBE1934:
 11196              	.LBB1935:
 11197              	.LBB1577:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11198              		.loc 19 2029 19 view .LVU3212
 11199 0b0e F0EE477A 		vmov.f32	s15, s14
 11200              	.LVL728:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11201              		.loc 19 2029 19 view .LVU3213
 11202 0b12 FFF703BB 		b	.L600
 11203              	.LVL729:
 11204              	.L651:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11205              		.loc 19 2029 19 view .LVU3214
 11206              	.LBE1577:
 11207              	.LBE1935:
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11208              		.loc 19 557 13 is_stmt 1 view .LVU3215
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11209              		.loc 19 557 18 is_stmt 0 view .LVU3216
 11210 0b16 DBED006A 		vldr.32	s13, [fp]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 344


 558:Veno-Echo.cpp ****         }
 11211              		.loc 19 558 18 view .LVU3217
 11212 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11213              		.loc 19 557 18 view .LVU3218
 11214 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 11215              	.LVL730:
 558:Veno-Echo.cpp ****         }
 11216              		.loc 19 558 13 is_stmt 1 view .LVU3219
 558:Veno-Echo.cpp ****         }
 11217              		.loc 19 558 18 is_stmt 0 view .LVU3220
 11218 0b22 30EE070A 		vadd.f32	s0, s0, s14
 11219              	.LVL731:
 558:Veno-Echo.cpp ****         }
 11220              		.loc 19 558 18 view .LVU3221
 11221 0b26 FFF72CBB 		b	.L610
 11222              	.LVL732:
 11223              	.L654:
 11224              	.LBB1936:
 11225              	.LBB1803:
 11226              	.LBB1792:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11227              		.loc 18 141 17 view .LVU3222
 11228 0b2a 049B     		ldr	r3, [sp, #16]
 11229 0b2c 83ED00BA 		vstr.32	s22, [r3]
 11230 0b30 CAE4     		b	.L568
 11231              	.LVL733:
 11232              	.L632:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11233              		.loc 18 141 17 view .LVU3223
 11234              	.LBE1792:
 11235              	.LBE1803:
 11236              	.LBE1936:
 11237              	.LBB1937:
 11238              	.LBB1605:
 11239              	.LBB1598:
 11240              	.LBB1596:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11241              		.loc 19 2029 19 view .LVU3224
 11242 0b32 F0EE667A 		vmov.f32	s15, s13
 11243              	.LVL734:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11244              		.loc 19 2029 19 view .LVU3225
 11245 0b36 ACE7     		b	.L606
 11246              	.LVL735:
 11247              	.L630:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11248              		.loc 19 2029 19 view .LVU3226
 11249              	.LBE1596:
 11250              	.LBE1598:
 11251              	.LBB1599:
 11252              	.LBB1590:
 11253 0b38 B0EE667A 		vmov.f32	s14, s13
 11254              	.LVL736:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11255              		.loc 19 2029 19 view .LVU3227
 11256 0b3c 9FED190A 		vldr.32	s0, .L667+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 345


 11257 0b40 95E7     		b	.L605
 11258              	.L668:
 11259 0b42 00BF     		.align	2
 11260              	.L667:
 11261 0b44 00000000 		.word	.LANCHOR65
 11262 0b48 CDCCCC3D 		.word	1036831949
 11263 0b4c 00000000 		.word	.LANCHOR29
 11264 0b50 00000000 		.word	.LANCHOR30
 11265 0b54 00000000 		.word	.LANCHOR119
 11266 0b58 00000000 		.word	.LANCHOR120
 11267 0b5c 00000000 		.word	.LANCHOR16
 11268 0b60 00000000 		.word	.LANCHOR17
 11269 0b64 00000000 		.word	.LANCHOR117
 11270 0b68 00000000 		.word	.LANCHOR118
 11271 0b6c 00000000 		.word	.LANCHOR125
 11272 0b70 00000000 		.word	.LANCHOR126
 11273 0b74 249F2400 		.word	2400036
 11274 0b78 1C9F2400 		.word	2400028
 11275 0b7c 00000000 		.word	.LANCHOR31
 11276 0b80 00000000 		.word	.LANCHOR32
 11277 0b84 00000000 		.word	.LANCHOR123
 11278 0b88 00000000 		.word	.LANCHOR124
 11279 0b8c 00000000 		.word	.LANCHOR18
 11280 0b90 00000000 		.word	.LANCHOR19
 11281 0b94 00000000 		.word	.LANCHOR121
 11282 0b98 00000000 		.word	.LANCHOR122
 11283 0b9c 00000000 		.word	.LANCHOR127
 11284 0ba0 00000000 		.word	.LANCHOR128
 11285 0ba4 CDCC4C3E 		.word	1045220557
 11286 0ba8 CDCC4CBE 		.word	3192704205
 11287              	.LVL737:
 11288              	.L623:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11289              		.loc 19 2029 19 view .LVU3228
 11290              	.LBE1590:
 11291              	.LBE1599:
 11292              	.LBE1605:
 11293              	.LBE1937:
 11294              	.LBB1938:
 11295              	.LBB1865:
 11296              	.LBB1858:
 11297              	.LBB1856:
 11298 0bac F0EE667A 		vmov.f32	s15, s13
 11299              	.LVL738:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11300              		.loc 19 2029 19 view .LVU3229
 11301 0bb0 76E6     		b	.L588
 11302              	.LVL739:
 11303              	.L621:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11304              		.loc 19 2029 19 view .LVU3230
 11305              	.LBE1856:
 11306              	.LBE1858:
 11307              	.LBB1859:
 11308              	.LBB1850:
 11309 0bb2 B0EE667A 		vmov.f32	s14, s13
 11310              	.LVL740:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 346


2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11311              		.loc 19 2029 19 view .LVU3231
 11312 0bb6 1FED050A 		vldr.32	s0, .L667+96
 11313 0bba 5EE6     		b	.L587
 11314              	.LVL741:
 11315              	.L564:
2029:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11316              		.loc 19 2029 19 view .LVU3232
 11317              	.LBE1850:
 11318              	.LBE1859:
 11319              	.LBE1865:
 11320              	.LBE1938:
 11321              	.LBB1939:
 11322              	.LBB1804:
 11323              	.LBB1793:
 116:delayline_reverse.h ****                 }
 11324              		.loc 18 116 21 view .LVU3233
 11325 0bbc AB60     		str	r3, [r5, #8]
 11326 0bbe DEE6     		b	.L566
 11327              	.LVL742:
 11328              	.L574:
 116:delayline_reverse.h ****                 }
 11329              		.loc 18 116 21 view .LVU3234
 11330              	.LBE1793:
 11331              	.LBE1804:
 11332              	.LBE1939:
 11333              	.LBB1940:
 11334              	.LBB1830:
 11335              	.LBB1826:
 11336 0bc0 A260     		str	r2, [r4, #8]
 11337 0bc2 B9E6     		b	.L576
 11338              	.LVL743:
 11339              	.L543:
 116:delayline_reverse.h ****                 }
 11340              		.loc 18 116 21 view .LVU3235
 11341              	.LBE1826:
 11342              	.LBE1830:
 11343              	.LBE1940:
 11344              	.LBE1954:
 11345              	.LBE1965:
 578:Veno-Echo.cpp **** 
 11346              		.loc 19 578 1 view .LVU3236
 11347 0bc4 13B0     		add	sp, sp, #76
 11348              		.cfi_remember_state
 11349              		.cfi_def_cfa_offset 92
 11350              		@ sp needed
 11351 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 11352              		.cfi_restore 92
 11353              		.cfi_restore 93
 11354              		.cfi_restore 90
 11355              		.cfi_restore 91
 11356              		.cfi_restore 88
 11357              		.cfi_restore 89
 11358              		.cfi_restore 86
 11359              		.cfi_restore 87
 11360              		.cfi_restore 84
 11361              		.cfi_restore 85
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 347


 11362              		.cfi_restore 82
 11363              		.cfi_restore 83
 11364              		.cfi_restore 80
 11365              		.cfi_restore 81
 11366              		.cfi_def_cfa_offset 36
 11367 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11368              	.LVL744:
 11369              	.L657:
 11370              		.cfi_restore_state
 11371              	.LBB1966:
 11372              	.LBB1955:
 11373              	.LBB1941:
 11374              	.LBB1831:
 11375              	.LBB1827:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11376              		.loc 18 130 17 view .LVU3237
 11377 0bce C2ED007A 		vstr.32	s15, [r2]
 11378 0bd2 E4E4     		b	.L578
 11379              	.L581:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11380              		.loc 18 145 21 view .LVU3238
 11381 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11382              		.loc 18 144 21 view .LVU3239
 11383 0bd6 039C     		ldr	r4, [sp, #12]
 11384              	.LVL745:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11385              		.loc 18 144 21 view .LVU3240
 11386 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11387              		.loc 18 145 21 view .LVU3241
 11388 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11389              		.loc 18 146 21 view .LVU3242
 11390 0bdc 0170     		strb	r1, [r0]
 11391 0bde DEE4     		b	.L578
 11392              	.LVL746:
 11393              	.L622:
 146:delayline_reverse.h ****                 }
 11394              		.loc 18 146 21 view .LVU3243
 11395              	.LBE1827:
 11396              	.LBE1831:
 11397              	.LBE1941:
 11398              	.LBB1942:
 11399              	.LBB1866:
 11400              	.LBB1860:
 11401              	.LBB1851:
2031:Veno-Echo.cpp ****     else
 11402              		.loc 19 2031 19 view .LVU3244
 11403 0be0 B0EE667A 		vmov.f32	s14, s13
 11404              	.LVL747:
2031:Veno-Echo.cpp ****     else
 11405              		.loc 19 2031 19 view .LVU3245
 11406 0be4 1FED100A 		vldr.32	s0, .L667+100
 11407 0be8 47E6     		b	.L587
 11408              	.LVL748:
 11409              	.L631:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 348


2031:Veno-Echo.cpp ****     else
 11410              		.loc 19 2031 19 view .LVU3246
 11411              	.LBE1851:
 11412              	.LBE1860:
 11413              	.LBE1866:
 11414              	.LBE1942:
 11415              	.LBB1943:
 11416              	.LBB1606:
 11417              	.LBB1600:
 11418              	.LBB1591:
 11419 0bea B0EE667A 		vmov.f32	s14, s13
 11420              	.LVL749:
2031:Veno-Echo.cpp ****     else
 11421              		.loc 19 2031 19 view .LVU3247
 11422 0bee 1FED120A 		vldr.32	s0, .L667+100
 11423 0bf2 3CE7     		b	.L605
 11424              	.LVL750:
 11425              	.L545:
2031:Veno-Echo.cpp ****     else
 11426              		.loc 19 2031 19 view .LVU3248
 11427              	.LBE1591:
 11428              	.LBE1600:
 11429              	.LBE1606:
 11430              	.LBE1943:
 11431              	.LBE1955:
 11432              	.LBE1966:
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 11433              		.loc 19 345 13 is_stmt 1 view .LVU3249
 346:Veno-Echo.cpp ****             break;
 11434              		.loc 19 346 17 view .LVU3250
 346:Veno-Echo.cpp ****             break;
 11435              		.loc 19 346 35 is_stmt 0 view .LVU3251
 11436 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11437              	.LVL751:
 347:Veno-Echo.cpp ****         }
 11438              		.loc 19 347 13 is_stmt 1 view .LVU3252
 11439 0bf8 FFF739BA 		b	.L544
 11440              	.L548:
 337:Veno-Echo.cpp ****                 Update_width();
 11441              		.loc 19 337 13 view .LVU3253
 338:Veno-Echo.cpp ****             break;
 11442              		.loc 19 338 17 view .LVU3254
 338:Veno-Echo.cpp ****             break;
 11443              		.loc 19 338 29 is_stmt 0 view .LVU3255
 11444 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11445              	.LVL752:
 339:Veno-Echo.cpp **** 
 11446              		.loc 19 339 13 is_stmt 1 view .LVU3256
 11447 0c00 FFF735BA 		b	.L544
 11448              	.L549:
 333:Veno-Echo.cpp ****                 Update_width_CV();
 11449              		.loc 19 333 13 view .LVU3257
 334:Veno-Echo.cpp ****             break;
 11450              		.loc 19 334 17 view .LVU3258
 11451              	.LBB1967:
 11452              	.LBI1967:
1300:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 349


 11453              		.loc 19 1300 6 view .LVU3259
 11454              	.LBB1968:
1302:Veno-Echo.cpp **** }
 11455              		.loc 19 1302 5 view .LVU3260
1302:Veno-Echo.cpp **** }
 11456              		.loc 19 1302 30 is_stmt 0 view .LVU3261
 11457 0c04 0521     		movs	r1, #5
 11458 0c06 2748     		ldr	r0, .L669
 11459 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11460              	.LVL753:
1302:Veno-Echo.cpp **** }
 11461              		.loc 19 1302 13 view .LVU3262
 11462 0c0c 264B     		ldr	r3, .L669+4
 11463 0c0e 83ED000A 		vstr.32	s0, [r3]
1303:Veno-Echo.cpp **** 
 11464              		.loc 19 1303 1 view .LVU3263
 11465 0c12 FFF72CBA 		b	.L544
 11466              	.L550:
 11467              	.LBE1968:
 11468              	.LBE1967:
 329:Veno-Echo.cpp ****                 Update_drywet();
 11469              		.loc 19 329 13 is_stmt 1 view .LVU3264
 330:Veno-Echo.cpp ****             break;
 11470              		.loc 19 330 17 view .LVU3265
 330:Veno-Echo.cpp ****             break;
 11471              		.loc 19 330 30 is_stmt 0 view .LVU3266
 11472 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11473              	.LVL754:
 331:Veno-Echo.cpp **** 
 11474              		.loc 19 331 13 is_stmt 1 view .LVU3267
 11475 0c1a FFF728BA 		b	.L544
 11476              	.L551:
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 11477              		.loc 19 325 13 view .LVU3268
 326:Veno-Echo.cpp ****             break;
 11478              		.loc 19 326 17 view .LVU3269
 11479              	.LBB1969:
 11480              	.LBI1969:
1186:Veno-Echo.cpp **** {
 11481              		.loc 19 1186 6 view .LVU3270
 11482              	.LBB1970:
1188:Veno-Echo.cpp **** }
 11483              		.loc 19 1188 5 view .LVU3271
1188:Veno-Echo.cpp **** }
 11484              		.loc 19 1188 32 is_stmt 0 view .LVU3272
 11485 0c1e 0421     		movs	r1, #4
 11486 0c20 2048     		ldr	r0, .L669
 11487 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11488              	.LVL755:
1188:Veno-Echo.cpp **** }
 11489              		.loc 19 1188 15 view .LVU3273
 11490 0c26 214B     		ldr	r3, .L669+8
 11491 0c28 83ED000A 		vstr.32	s0, [r3]
1189:Veno-Echo.cpp **** 
 11492              		.loc 19 1189 1 view .LVU3274
 11493 0c2c FFF71FBA 		b	.L544
 11494              	.L552:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 350


 11495              	.LBE1970:
 11496              	.LBE1969:
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 11497              		.loc 19 321 13 is_stmt 1 view .LVU3275
 322:Veno-Echo.cpp ****             break;
 11498              		.loc 19 322 17 view .LVU3276
 322:Veno-Echo.cpp ****             break;
 11499              		.loc 19 322 33 is_stmt 0 view .LVU3277
 11500 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11501              	.LVL756:
 323:Veno-Echo.cpp **** 
 11502              		.loc 19 323 13 is_stmt 1 view .LVU3278
 11503 0c34 FFF71BBA 		b	.L544
 11504              	.L553:
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11505              		.loc 19 317 13 view .LVU3279
 318:Veno-Echo.cpp ****             break;
 11506              		.loc 19 318 17 view .LVU3280
 11507              	.LBB1971:
 11508              	.LBI1971:
1096:Veno-Echo.cpp **** {
 11509              		.loc 19 1096 6 view .LVU3281
 11510              	.LBB1972:
1098:Veno-Echo.cpp **** }
 11511              		.loc 19 1098 5 view .LVU3282
1098:Veno-Echo.cpp **** }
 11512              		.loc 19 1098 35 is_stmt 0 view .LVU3283
 11513 0c38 0321     		movs	r1, #3
 11514 0c3a 1A48     		ldr	r0, .L669
 11515 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11516              	.LVL757:
1098:Veno-Echo.cpp **** }
 11517              		.loc 19 1098 18 view .LVU3284
 11518 0c40 1B4B     		ldr	r3, .L669+12
 11519 0c42 83ED000A 		vstr.32	s0, [r3]
1099:Veno-Echo.cpp **** 
 11520              		.loc 19 1099 1 view .LVU3285
 11521 0c46 FFF712BA 		b	.L544
 11522              	.L554:
 11523              	.LBE1972:
 11524              	.LBE1971:
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 11525              		.loc 19 313 13 is_stmt 1 view .LVU3286
 314:Veno-Echo.cpp ****             break;
 11526              		.loc 19 314 17 view .LVU3287
 314:Veno-Echo.cpp ****             break;
 11527              		.loc 19 314 33 is_stmt 0 view .LVU3288
 11528 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11529              	.LVL758:
 315:Veno-Echo.cpp **** 
 11530              		.loc 19 315 13 is_stmt 1 view .LVU3289
 11531 0c4e FFF70EBA 		b	.L544
 11532              	.L555:
 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11533              		.loc 19 309 13 view .LVU3290
 310:Veno-Echo.cpp ****             break;
 11534              		.loc 19 310 17 view .LVU3291
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 351


 11535              	.LBB1973:
 11536              	.LBI1973:
1008:Veno-Echo.cpp **** {
 11537              		.loc 19 1008 6 view .LVU3292
 11538              	.LBB1974:
1010:Veno-Echo.cpp **** }
 11539              		.loc 19 1010 5 view .LVU3293
1010:Veno-Echo.cpp **** }
 11540              		.loc 19 1010 35 is_stmt 0 view .LVU3294
 11541 0c52 0221     		movs	r1, #2
 11542 0c54 1348     		ldr	r0, .L669
 11543 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11544              	.LVL759:
1010:Veno-Echo.cpp **** }
 11545              		.loc 19 1010 18 view .LVU3295
 11546 0c5a 164B     		ldr	r3, .L669+16
 11547 0c5c 83ED000A 		vstr.32	s0, [r3]
1011:Veno-Echo.cpp **** void Update_feedbackL()
 11548              		.loc 19 1011 1 view .LVU3296
 11549 0c60 FFF705BA 		b	.L544
 11550              	.L556:
 11551              	.LBE1974:
 11552              	.LBE1973:
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11553              		.loc 19 305 13 is_stmt 1 view .LVU3297
 306:Veno-Echo.cpp ****             break;
 11554              		.loc 19 306 17 view .LVU3298
 306:Veno-Echo.cpp ****             break;
 11555              		.loc 19 306 34 is_stmt 0 view .LVU3299
 11556 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11557              	.LVL760:
 307:Veno-Echo.cpp **** 
 11558              		.loc 19 307 13 is_stmt 1 view .LVU3300
 11559 0c68 FFF701BA 		b	.L544
 11560              	.L557:
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11561              		.loc 19 301 13 view .LVU3301
 302:Veno-Echo.cpp ****             break;
 11562              		.loc 19 302 17 view .LVU3302
 11563              	.LBB1975:
 11564              	.LBI1975:
 898:Veno-Echo.cpp **** {
 11565              		.loc 19 898 6 view .LVU3303
 11566              	.LBB1976:
 900:Veno-Echo.cpp **** }
 11567              		.loc 19 900 5 view .LVU3304
 900:Veno-Echo.cpp **** }
 11568              		.loc 19 900 36 is_stmt 0 view .LVU3305
 11569 0c6c 0121     		movs	r1, #1
 11570 0c6e 0D48     		ldr	r0, .L669
 11571 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11572              	.LVL761:
 900:Veno-Echo.cpp **** }
 11573              		.loc 19 900 19 view .LVU3306
 11574 0c74 104B     		ldr	r3, .L669+20
 11575 0c76 83ED000A 		vstr.32	s0, [r3]
 901:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 352


 11576              		.loc 19 901 1 view .LVU3307
 11577 0c7a FFF7F8B9 		b	.L544
 11578              	.L558:
 11579              	.LBE1976:
 11580              	.LBE1975:
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11581              		.loc 19 297 13 is_stmt 1 view .LVU3308
 298:Veno-Echo.cpp ****             break;
 11582              		.loc 19 298 17 view .LVU3309
 298:Veno-Echo.cpp ****             break;
 11583              		.loc 19 298 34 is_stmt 0 view .LVU3310
 11584 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11585              	.LVL762:
 299:Veno-Echo.cpp **** 
 11586              		.loc 19 299 13 is_stmt 1 view .LVU3311
 11587 0c82 FFF7F4B9 		b	.L544
 11588              	.L559:
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11589              		.loc 19 293 13 view .LVU3312
 294:Veno-Echo.cpp ****             break;
 11590              		.loc 19 294 17 view .LVU3313
 11591              	.LBB1977:
 11592              	.LBI1977:
 788:Veno-Echo.cpp **** {
 11593              		.loc 19 788 6 view .LVU3314
 11594              	.LBB1978:
 790:Veno-Echo.cpp **** }
 11595              		.loc 19 790 5 view .LVU3315
 790:Veno-Echo.cpp **** }
 11596              		.loc 19 790 36 is_stmt 0 view .LVU3316
 11597 0c86 0021     		movs	r1, #0
 11598 0c88 0648     		ldr	r0, .L669
 11599 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11600              	.LVL763:
 790:Veno-Echo.cpp **** }
 11601              		.loc 19 790 19 view .LVU3317
 11602 0c8e 0B4B     		ldr	r3, .L669+24
 11603 0c90 83ED000A 		vstr.32	s0, [r3]
 791:Veno-Echo.cpp **** 
 11604              		.loc 19 791 1 view .LVU3318
 11605 0c94 FFF7EBB9 		b	.L544
 11606              	.L560:
 11607              	.LBE1978:
 11608              	.LBE1977:
 288:Veno-Echo.cpp ****                 Update_Buttons();
 11609              		.loc 19 288 13 is_stmt 1 view .LVU3319
 289:Veno-Echo.cpp ****                 GetModCV();
 11610              		.loc 19 289 17 view .LVU3320
 289:Veno-Echo.cpp ****                 GetModCV();
 11611              		.loc 19 289 31 is_stmt 0 view .LVU3321
 11612 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11613              	.LVL764:
 290:Veno-Echo.cpp ****             break;
 11614              		.loc 19 290 17 is_stmt 1 view .LVU3322
 290:Veno-Echo.cpp ****             break;
 11615              		.loc 19 290 25 is_stmt 0 view .LVU3323
 11616 0c9c FFF7FEFF 		bl	_Z8GetModCVv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 353


 11617              	.LVL765:
 291:Veno-Echo.cpp **** 
 11618              		.loc 19 291 13 is_stmt 1 view .LVU3324
 11619 0ca0 FFF7E5B9 		b	.L544
 11620              	.L670:
 11621              		.align	2
 11622              	.L669:
 11623 0ca4 18000000 		.word	.LANCHOR4+24
 11624 0ca8 00000000 		.word	.LANCHOR41
 11625 0cac 00000000 		.word	.LANCHOR33
 11626 0cb0 00000000 		.word	.LANCHOR21
 11627 0cb4 00000000 		.word	.LANCHOR7
 11628 0cb8 00000000 		.word	.LANCHOR6
 11629 0cbc 00000000 		.word	.LANCHOR5
 11630              		.cfi_endproc
 11631              	.LFE4288:
 11633              		.section	.text._Z9HardLimitff,"ax",%progbits
 11634              		.align	1
 11635              		.p2align 2,,3
 11636              		.global	_Z9HardLimitff
 11637              		.syntax unified
 11638              		.thumb
 11639              		.thumb_func
 11640              		.fpu fpv5-d16
 11642              	_Z9HardLimitff:
 11643              	.LVL766:
 11644              	.LFB4315:
2026:Veno-Echo.cpp ****     float returnval{};
 11645              		.loc 19 2026 1 view -0
 11646              		.cfi_startproc
 11647              		@ args = 0, pretend = 0, frame = 0
 11648              		@ frame_needed = 0, uses_anonymous_args = 0
 11649              		@ link register save eliminated.
2027:Veno-Echo.cpp ****     if (input > limit)
 11650              		.loc 19 2027 5 view .LVU3326
2028:Veno-Echo.cpp ****         returnval = limit;
 11651              		.loc 19 2028 5 view .LVU3327
 11652 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11653 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11654 0008 07DC     		bgt	.L672
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11655              		.loc 19 2030 10 view .LVU3328
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11656              		.loc 19 2030 28 is_stmt 0 view .LVU3329
 11657 000a F1EE600A 		vneg.f32	s1, s1
 11658              	.LVL767:
2030:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11659              		.loc 19 2030 10 view .LVU3330
 11660 000e F4EEC00A 		vcmpe.f32	s1, s0
 11661 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2033:Veno-Echo.cpp **** 
 11662              		.loc 19 2033 19 view .LVU3331
 11663 0016 70FE800A 		vselgt.f32	s1, s1, s0
 11664              	.L672:
 11665              	.LVL768:
2035:Veno-Echo.cpp **** }
 11666              		.loc 19 2035 5 is_stmt 1 view .LVU3332
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 354


2036:Veno-Echo.cpp **** 
 11667              		.loc 19 2036 1 is_stmt 0 view .LVU3333
 11668 001a B0EE600A 		vmov.f32	s0, s1
 11669              	.LVL769:
2036:Veno-Echo.cpp **** 
 11670              		.loc 19 2036 1 view .LVU3334
 11671 001e 7047     		bx	lr
 11672              		.cfi_endproc
 11673              	.LFE4315:
 11675              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11676              		.align	1
 11677              		.p2align 2,,3
 11678              		.global	_Z10PotCVComboff
 11679              		.syntax unified
 11680              		.thumb
 11681              		.thumb_func
 11682              		.fpu fpv5-d16
 11684              	_Z10PotCVComboff:
 11685              	.LVL770:
 11686              	.LFB4316:
2039:Veno-Echo.cpp ****     float output{};
 11687              		.loc 19 2039 1 is_stmt 1 view -0
 11688              		.cfi_startproc
 11689              		@ args = 0, pretend = 0, frame = 0
 11690              		@ frame_needed = 0, uses_anonymous_args = 0
 11691              		@ link register save eliminated.
2040:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11692              		.loc 19 2040 5 view .LVU3336
2041:Veno-Echo.cpp **** 
 11693              		.loc 19 2041 5 view .LVU3337
2041:Veno-Echo.cpp **** 
 11694              		.loc 19 2041 39 is_stmt 0 view .LVU3338
 11695 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2041:Veno-Echo.cpp **** 
 11696              		.loc 19 2041 49 view .LVU3339
 11697 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2041:Veno-Echo.cpp **** 
 11698              		.loc 19 2041 12 view .LVU3340
 11699 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2041:Veno-Echo.cpp **** 
 11700              		.loc 19 2041 39 view .LVU3341
 11701 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11702              	.LVL771:
2041:Veno-Echo.cpp **** 
 11703              		.loc 19 2041 49 view .LVU3342
 11704 0010 70EEE60A 		vsub.f32	s1, s1, s13
2041:Veno-Echo.cpp **** 
 11705              		.loc 19 2041 12 view .LVU3343
 11706 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11707              	.LVL772:
2043:Veno-Echo.cpp ****     {
 11708              		.loc 19 2043 5 is_stmt 1 view .LVU3344
 11709 0018 B5EEC00A 		vcmpe.f32	s0, #0
 11710 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11711 0020 06D4     		bmi	.L678
2048:Veno-Echo.cpp ****     {
 11712              		.loc 19 2048 5 view .LVU3345
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 355


2050:Veno-Echo.cpp ****     }
 11713              		.loc 19 2050 16 is_stmt 0 view .LVU3346
 11714 0022 B4EE670A 		vcmp.f32	s0, s15
 11715 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11716 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11717              	.LVL773:
2050:Veno-Echo.cpp ****     }
 11718              		.loc 19 2050 16 view .LVU3347
 11719 002e 7047     		bx	lr
 11720              	.LVL774:
 11721              	.L678:
2045:Veno-Echo.cpp ****     }
 11722              		.loc 19 2045 16 view .LVU3348
 11723 0030 9FED010A 		vldr.32	s0, .L680
 11724              	.LVL775:
 11725              		.loc 19 2053 5 is_stmt 1 view .LVU3349
2054:Veno-Echo.cpp **** }
 11726              		.loc 19 2054 1 is_stmt 0 view .LVU3350
 11727 0034 7047     		bx	lr
 11728              	.L681:
 11729 0036 00BF     		.align	2
 11730              	.L680:
 11731 0038 00000000 		.word	0
 11732              		.cfi_endproc
 11733              	.LFE4316:
 11735              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 11736              		.align	1
 11737              		.p2align 2,,3
 11738              		.global	_Z16checkPickupStateffbb
 11739              		.syntax unified
 11740              		.thumb
 11741              		.thumb_func
 11742              		.fpu fpv5-d16
 11744              	_Z16checkPickupStateffbb:
 11745              	.LVL776:
 11746              	.LFB4317:
2055:Veno-Echo.cpp **** 
2056:Veno-Echo.cpp **** //checks pickup state of primary controls
2057:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2058:Veno-Echo.cpp **** {
 11747              		.loc 19 2058 1 is_stmt 1 view -0
 11748              		.cfi_startproc
 11749              		@ args = 0, pretend = 0, frame = 0
 11750              		@ frame_needed = 0, uses_anonymous_args = 0
 11751              		@ link register save eliminated.
2059:Veno-Echo.cpp ****     bool retval{};
 11752              		.loc 19 2059 5 view .LVU3352
2060:Veno-Echo.cpp ****     
2061:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
 11753              		.loc 19 2061 5 view .LVU3353
 11754 0000 69B1     		cbz	r1, .L683
2062:Veno-Echo.cpp ****     {
2063:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
 11755              		.loc 19 2063 9 view .LVU3354
 11756              	.LVL777:
 11757              	.LBB1979:
 11758              	.LBI1979:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 356


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11759              		.loc 20 75 3 view .LVU3355
 11760              	.LBB1980:
 11761              		.loc 20 76 5 view .LVU3356
 11762              		.loc 20 76 5 is_stmt 0 view .LVU3357
 11763              	.LBE1980:
 11764              	.LBE1979:
 11765              		.loc 19 2063 15 view .LVU3358
 11766 0002 70EE600A 		vsub.f32	s1, s0, s1
 11767              	.LVL778:
 11768              		.loc 19 2063 9 view .LVU3359
 11769 0006 DFED0D7A 		vldr.32	s15, .L686
 11770              	.LBB1982:
 11771              	.LBB1981:
 11772              		.loc 20 76 31 view .LVU3360
 11773 000a B0EEE00A 		vabs.f32	s0, s1
 11774              	.LVL779:
 11775              		.loc 20 76 31 view .LVU3361
 11776              	.LBE1981:
 11777              	.LBE1982:
 11778              		.loc 19 2063 9 view .LVU3362
 11779 000e B4EEE70A 		vcmpe.f32	s0, s15
 11780 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11781 0016 D4BF     		ite	le
 11782 0018 0120     		movle	r0, #1
 11783              	.LVL780:
 11784              		.loc 19 2063 9 view .LVU3363
 11785 001a 0020     		movgt	r0, #0
 11786 001c 7047     		bx	lr
 11787              	.LVL781:
 11788              	.L683:
2064:Veno-Echo.cpp ****         {
2065:Veno-Echo.cpp ****             retval = false;
2066:Veno-Echo.cpp ****         }
2067:Veno-Echo.cpp ****         else
2068:Veno-Echo.cpp ****         {
2069:Veno-Echo.cpp ****             retval = true;
2070:Veno-Echo.cpp ****         }
2071:Veno-Echo.cpp ****     }
2072:Veno-Echo.cpp **** 
2073:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2074:Veno-Echo.cpp ****     {
2075:Veno-Echo.cpp ****     if(!lastState) //if not picked up
 11789              		.loc 19 2075 5 is_stmt 1 view .LVU3364
 11790 001e 60B9     		cbnz	r0, .L684
2076:Veno-Echo.cpp ****     {
2077:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
 11791              		.loc 19 2077 9 view .LVU3365
 11792              	.LVL782:
 11793              	.LBB1983:
 11794              	.LBI1983:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11795              		.loc 20 75 3 view .LVU3366
 11796              	.LBB1984:
 11797              		.loc 20 76 5 view .LVU3367
 11798              		.loc 20 76 5 is_stmt 0 view .LVU3368
 11799              	.LBE1984:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 357


 11800              	.LBE1983:
 11801              		.loc 19 2077 15 view .LVU3369
 11802 0020 30EE600A 		vsub.f32	s0, s0, s1
 11803              	.LVL783:
 11804              		.loc 19 2077 9 view .LVU3370
 11805 0024 DFED057A 		vldr.32	s15, .L686
 11806              	.LBB1986:
 11807              	.LBB1985:
 11808              		.loc 20 76 31 view .LVU3371
 11809 0028 B0EEC00A 		vabs.f32	s0, s0
 11810              	.LBE1985:
 11811              	.LBE1986:
 11812              		.loc 19 2077 9 view .LVU3372
 11813 002c B4EEE70A 		vcmpe.f32	s0, s15
 11814 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11815 0034 CCBF     		ite	gt
 11816 0036 0120     		movgt	r0, #1
 11817              	.LVL784:
 11818              		.loc 19 2077 9 view .LVU3373
 11819 0038 0020     		movle	r0, #0
 11820              	.L684:
 11821              	.LVL785:
2078:Veno-Echo.cpp ****         {
2079:Veno-Echo.cpp ****             retval = true;
2080:Veno-Echo.cpp ****         }
2081:Veno-Echo.cpp **** 
2082:Veno-Echo.cpp ****         else
2083:Veno-Echo.cpp ****         {
2084:Veno-Echo.cpp ****             retval = false;
2085:Veno-Echo.cpp ****         }
2086:Veno-Echo.cpp **** 
2087:Veno-Echo.cpp ****     }
2088:Veno-Echo.cpp ****     else    //previous state is picked up
2089:Veno-Echo.cpp ****     {
2090:Veno-Echo.cpp ****         retval = true;  //always return true
2091:Veno-Echo.cpp ****     }
2092:Veno-Echo.cpp **** 
2093:Veno-Echo.cpp ****     }
2094:Veno-Echo.cpp ****     return retval;
 11822              		.loc 19 2094 5 is_stmt 1 view .LVU3374
2095:Veno-Echo.cpp **** 
2096:Veno-Echo.cpp **** }
 11823              		.loc 19 2096 1 is_stmt 0 view .LVU3375
 11824 003a 7047     		bx	lr
 11825              	.L687:
 11826              		.align	2
 11827              	.L686:
 11828 003c 0AD7A33B 		.word	1000593162
 11829              		.cfi_endproc
 11830              	.LFE4317:
 11832              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11833              		.align	1
 11834              		.p2align 2,,3
 11835              		.global	_Z20checkPickupState_altff11pickupStateb
 11836              		.syntax unified
 11837              		.thumb
 11838              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 358


 11839              		.fpu fpv5-d16
 11841              	_Z20checkPickupState_altff11pickupStateb:
 11842              	.LVL786:
 11843              	.LFB4318:
2097:Veno-Echo.cpp **** 
2098:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2099:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2100:Veno-Echo.cpp **** {
 11844              		.loc 19 2100 1 is_stmt 1 view -0
 11845              		.cfi_startproc
 11846              		@ args = 0, pretend = 0, frame = 0
 11847              		@ frame_needed = 0, uses_anonymous_args = 0
 11848              		@ link register save eliminated.
2101:Veno-Echo.cpp ****     pickupState retval{};
 11849              		.loc 19 2101 5 view .LVU3377
2102:Veno-Echo.cpp **** 
2103:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 11850              		.loc 19 2103 5 view .LVU3378
 11851 0000 A1B1     		cbz	r1, .L689
2104:Veno-Echo.cpp ****     {
2105:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 11852              		.loc 19 2105 9 view .LVU3379
 11853              		.loc 19 2105 31 is_stmt 0 view .LVU3380
 11854 0002 DFED1A7A 		vldr.32	s15, .L706
 11855 0006 30EEE77A 		vsub.f32	s14, s1, s15
 11856              		.loc 19 2105 9 view .LVU3381
 11857 000a B4EEC07A 		vcmpe.f32	s14, s0
 11858 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11859 0012 01DD     		ble	.L704
 11860 0014 0020     		movs	r0, #0
 11861              	.LVL787:
 11862              		.loc 19 2105 9 view .LVU3382
 11863 0016 7047     		bx	lr
 11864              	.LVL788:
 11865              	.L704:
2106:Veno-Echo.cpp ****         {
2107:Veno-Echo.cpp ****             retval = BELOW;
2108:Veno-Echo.cpp ****         }
2109:Veno-Echo.cpp ****         
2110:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 11866              		.loc 19 2110 14 is_stmt 1 view .LVU3383
 11867              		.loc 19 2110 36 is_stmt 0 view .LVU3384
 11868 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11869              	.LVL789:
 11870              		.loc 19 2110 14 view .LVU3385
 11871 001c F4EEC00A 		vcmpe.f32	s1, s0
 11872 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2111:Veno-Echo.cpp ****         {
2112:Veno-Echo.cpp ****             retval = ABOVE;
2113:Veno-Echo.cpp ****         }
2114:Veno-Echo.cpp **** 
2115:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2116:Veno-Echo.cpp ****         {
2117:Veno-Echo.cpp ****             retval = PICKEDUP;
 11873              		.loc 19 2117 20 view .LVU3386
 11874 0024 4CBF     		ite	mi
 11875 0026 0120     		movmi	r0, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 359


 11876              	.LVL790:
 11877              		.loc 19 2117 20 view .LVU3387
 11878 0028 0220     		movpl	r0, #2
 11879 002a 7047     		bx	lr
 11880              	.LVL791:
 11881              	.L689:
2118:Veno-Echo.cpp ****         }
2119:Veno-Echo.cpp ****     }
2120:Veno-Echo.cpp **** 
2121:Veno-Echo.cpp ****     else    //not a recent shift change
2122:Veno-Echo.cpp ****     {
2123:Veno-Echo.cpp ****         switch(lastState)
 11882              		.loc 19 2123 9 is_stmt 1 view .LVU3388
 11883 002c 0128     		cmp	r0, #1
 11884 002e 04D0     		beq	.L692
 11885 0030 0228     		cmp	r0, #2
 11886 0032 01D0     		beq	.L690
 11887 0034 68B1     		cbz	r0, .L705
 11888 0036 0846     		mov	r0, r1
 11889              	.LVL792:
 11890              	.L690:
2124:Veno-Echo.cpp ****         {
2125:Veno-Echo.cpp ****             case BELOW:
2126:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2127:Veno-Echo.cpp ****                 retval = PICKEDUP;
2128:Veno-Echo.cpp ****             else
2129:Veno-Echo.cpp ****                 retval = lastState;
2130:Veno-Echo.cpp ****             break;
2131:Veno-Echo.cpp **** 
2132:Veno-Echo.cpp ****             case ABOVE:
2133:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2134:Veno-Echo.cpp ****                 retval = PICKEDUP;
2135:Veno-Echo.cpp ****             else
2136:Veno-Echo.cpp ****                 retval = lastState;
2137:Veno-Echo.cpp ****             break;
2138:Veno-Echo.cpp ****             case PICKEDUP:
2139:Veno-Echo.cpp ****                 retval = lastState;
2140:Veno-Echo.cpp ****             break;
2141:Veno-Echo.cpp ****         }
2142:Veno-Echo.cpp ****     }
2143:Veno-Echo.cpp ****     
2144:Veno-Echo.cpp ****     return retval;
 11891              		.loc 19 2144 5 view .LVU3389
2145:Veno-Echo.cpp **** }
 11892              		.loc 19 2145 1 is_stmt 0 view .LVU3390
 11893 0038 7047     		bx	lr
 11894              	.LVL793:
 11895              	.L692:
2132:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11896              		.loc 19 2132 13 is_stmt 1 view .LVU3391
2133:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11897              		.loc 19 2133 13 view .LVU3392
2133:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11898              		.loc 19 2133 35 is_stmt 0 view .LVU3393
 11899 003a DFED0C7A 		vldr.32	s15, .L706
 11900 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11901              	.LVL794:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 360


2133:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11902              		.loc 19 2133 13 view .LVU3394
 11903 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11904 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11905 004a CCBF     		ite	gt
 11906 004c 0220     		movgt	r0, #2
 11907              	.LVL795:
2133:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11908              		.loc 19 2133 13 view .LVU3395
 11909 004e 0120     		movle	r0, #1
 11910 0050 7047     		bx	lr
 11911              	.LVL796:
 11912              	.L705:
2125:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11913              		.loc 19 2125 13 is_stmt 1 view .LVU3396
2126:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11914              		.loc 19 2126 13 view .LVU3397
2126:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11915              		.loc 19 2126 35 is_stmt 0 view .LVU3398
 11916 0052 DFED067A 		vldr.32	s15, .L706
 11917 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11918              	.LVL797:
2126:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11919              		.loc 19 2126 13 view .LVU3399
 11920 005a F4EEC00A 		vcmpe.f32	s1, s0
 11921 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11922 0062 4CBF     		ite	mi
 11923 0064 0220     		movmi	r0, #2
 11924              	.LVL798:
2126:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11925              		.loc 19 2126 13 view .LVU3400
 11926 0066 0020     		movpl	r0, #0
 11927 0068 7047     		bx	lr
 11928              	.L707:
 11929 006a 00BF     		.align	2
 11930              	.L706:
 11931 006c 0AD7A33B 		.word	1000593162
 11932              		.cfi_endproc
 11933              	.LFE4318:
 11935              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11936              		.align	1
 11937              		.p2align 2,,3
 11938              		.syntax unified
 11939              		.thumb
 11940              		.thumb_func
 11941              		.fpu fpv5-d16
 11943              	_GLOBAL__sub_I_delMemsL:
 11944              	.LFB4897:
 11945              		.loc 19 2145 1 is_stmt 1 view -0
 11946              		.cfi_startproc
 11947              		@ args = 0, pretend = 0, frame = 0
 11948              		@ frame_needed = 0, uses_anonymous_args = 0
 11949              	.LBB2143:
 11950              	.LBI2143:
 11951              		.loc 19 2145 1 view .LVU3402
 11952              	.LVL799:
 11953              	.LBB2144:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 361


 11954              	.LBB2145:
 11955              	.LBI2145:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11956              		.loc 2 21 5 view .LVU3403
 11957              	.LBB2146:
 11958              	.LBB2147:
 11959              	.LBI2147:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11960              		.loc 6 36 5 view .LVU3404
 11961              	.LBE2147:
 11962              	.LBE2146:
 11963              	.LBE2145:
 11964              	.LBE2144:
 11965              	.LBE2143:
 11966              		.loc 19 2145 1 is_stmt 0 view .LVU3405
 11967 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11968              		.cfi_def_cfa_offset 24
 11969              		.cfi_offset 4, -24
 11970              		.cfi_offset 5, -20
 11971              		.cfi_offset 6, -16
 11972              		.cfi_offset 7, -12
 11973              		.cfi_offset 8, -8
 11974              		.cfi_offset 14, -4
 11975              	.LBB2266:
 11976              	.LBB2262:
 11977              	.LBB2162:
 11978              	.LBB2160:
 11979              	.LBB2152:
 11980              	.LBB2148:
 11981              	.LBB2149:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11982              		.loc 6 36 35 view .LVU3406
 11983 0004 9448     		ldr	r0, .L710
 11984 0006 0026     		movs	r6, #0
 11985              	.LBE2149:
 11986              	.LBE2148:
 11987              	.LBE2152:
 11988              	.LBE2160:
 11989              	.LBE2162:
 11990              		.file 25 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 362


  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11991              		.loc 25 33 18 view .LVU3407
 11992 0008 944C     		ldr	r4, .L710+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11993              		.loc 19 40 12 view .LVU3408
 11994 000a 954D     		ldr	r5, .L710+8
 11995              		.loc 25 33 18 view .LVU3409
 11996 000c 2246     		mov	r2, r4
 11997 000e 9549     		ldr	r1, .L710+12
 11998              	.LBB2163:
 11999              	.LBB2161:
 12000              	.LBB2153:
 12001              	.LBB2151:
 12002              	.LBB2150:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12003              		.loc 6 36 35 view .LVU3410
 12004 0010 4661     		str	r6, [r0, #20]
 12005              	.LVL800:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12006              		.loc 6 36 35 view .LVU3411
 12007              	.LBE2150:
 12008              	.LBE2151:
 12009              	.LBE2153:
 12010              	.LBB2154:
 12011              	.LBI2154:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12012              		.loc 5 84 5 is_stmt 1 view .LVU3412
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12013              		.loc 5 84 5 is_stmt 0 view .LVU3413
 12014              	.LBE2154:
 12015              	.LBB2155:
 12016              	.LBI2155:
 12017              		.file 26 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 363


  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 364


  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12018              		.loc 26 83 5 is_stmt 1 view .LVU3414
 12019              	.LBB2156:
 12020              	.LBB2157:
 12021              		.loc 26 83 33 is_stmt 0 view .LVU3415
 12022 0012 0662     		str	r6, [r0, #32]
 12023              	.LVL801:
 12024              		.loc 26 83 33 view .LVU3416
 12025              	.LBE2157:
 12026              	.LBE2156:
 12027              	.LBE2155:
 12028              	.LBB2158:
 12029              	.LBI2158:
  40:../libdaisy/src/hid/usb.h **** 
 12030              		.loc 4 40 5 is_stmt 1 view .LVU3417
  40:../libdaisy/src/hid/usb.h **** 
 12031              		.loc 4 40 5 is_stmt 0 view .LVU3418
 12032              	.LBE2158:
 12033              	.LBB2159:
 12034              	.LBI2159:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12035              		.loc 3 56 5 is_stmt 1 view .LVU3419
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12036              		.loc 3 56 5 is_stmt 0 view .LVU3420
 12037              	.LBE2159:
 12038              	.LBE2161:
 12039              	.LBE2163:
 12040              		.loc 25 33 18 view .LVU3421
 12041 0014 FFF7FEFF 		bl	__aeabi_atexit
 12042              	.LVL802:
 12043              	.LBB2164:
 12044              	.LBI2164:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12045              		.loc 9 21 5 is_stmt 1 view .LVU3422
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12046              		.loc 9 21 5 is_stmt 0 view .LVU3423
 12047              	.LBE2164:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12048              		.loc 19 40 12 view .LVU3424
 12049 0018 2246     		mov	r2, r4
 12050 001a 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 365


 12051 001c 9248     		ldr	r0, .L710+16
 12052 001e FFF7FEFF 		bl	__aeabi_atexit
 12053              	.LVL803:
 12054              	.LBB2165:
 12055              	.LBI2165:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12056              		.loc 9 21 5 is_stmt 1 view .LVU3425
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12057              		.loc 9 21 5 is_stmt 0 view .LVU3426
 12058              	.LBE2165:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12059              		.loc 19 41 12 view .LVU3427
 12060 0022 2246     		mov	r2, r4
 12061 0024 2946     		mov	r1, r5
 12062 0026 9148     		ldr	r0, .L710+20
 12063 0028 FFF7FEFF 		bl	__aeabi_atexit
 12064              	.LVL804:
 12065              	.LBB2166:
 12066              	.LBI2166:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12067              		.loc 9 21 5 is_stmt 1 view .LVU3428
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12068              		.loc 9 21 5 is_stmt 0 view .LVU3429
 12069              	.LBE2166:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12070              		.loc 19 42 12 view .LVU3430
 12071 002c 2246     		mov	r2, r4
 12072 002e 2946     		mov	r1, r5
 12073 0030 8F48     		ldr	r0, .L710+24
 12074 0032 FFF7FEFF 		bl	__aeabi_atexit
 12075              	.LVL805:
 12076              	.LBB2167:
 12077              	.LBI2167:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12078              		.loc 9 21 5 is_stmt 1 view .LVU3431
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12079              		.loc 9 21 5 is_stmt 0 view .LVU3432
 12080              	.LBE2167:
  43:Veno-Echo.cpp **** 
 12081              		.loc 19 43 12 view .LVU3433
 12082 0036 2246     		mov	r2, r4
 12083 0038 2946     		mov	r1, r5
 12084 003a 8E48     		ldr	r0, .L710+28
 12085 003c FFF7FEFF 		bl	__aeabi_atexit
 12086              	.LVL806:
 12087              	.LBB2168:
 12088              	.LBI2168:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12089              		.loc 9 21 5 is_stmt 1 view .LVU3434
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12090              		.loc 9 21 5 is_stmt 0 view .LVU3435
 12091              	.LBE2168:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12092              		.loc 19 45 12 view .LVU3436
 12093 0040 2246     		mov	r2, r4
 12094 0042 2946     		mov	r1, r5
 12095 0044 8C48     		ldr	r0, .L710+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 366


 12096 0046 FFF7FEFF 		bl	__aeabi_atexit
 12097              	.LVL807:
 12098              	.LBB2169:
 12099              	.LBI2169:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12100              		.loc 9 21 5 is_stmt 1 view .LVU3437
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12101              		.loc 9 21 5 is_stmt 0 view .LVU3438
 12102              	.LBE2169:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12103              		.loc 19 46 12 view .LVU3439
 12104 004a 2246     		mov	r2, r4
 12105 004c 2946     		mov	r1, r5
 12106 004e 8B48     		ldr	r0, .L710+36
 12107 0050 FFF7FEFF 		bl	__aeabi_atexit
 12108              	.LVL808:
 12109              	.LBB2170:
 12110              	.LBI2170:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12111              		.loc 9 21 5 is_stmt 1 view .LVU3440
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12112              		.loc 9 21 5 is_stmt 0 view .LVU3441
 12113              	.LBE2170:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12114              		.loc 19 47 12 view .LVU3442
 12115 0054 2246     		mov	r2, r4
 12116 0056 2946     		mov	r1, r5
 12117 0058 8948     		ldr	r0, .L710+40
 12118 005a FFF7FEFF 		bl	__aeabi_atexit
 12119              	.LVL809:
 12120              	.LBB2171:
 12121              	.LBI2171:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12122              		.loc 9 21 5 is_stmt 1 view .LVU3443
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12123              		.loc 9 21 5 is_stmt 0 view .LVU3444
 12124              	.LBE2171:
  48:Veno-Echo.cpp **** 
 12125              		.loc 19 48 12 view .LVU3445
 12126 005e 2246     		mov	r2, r4
 12127 0060 2946     		mov	r1, r5
 12128 0062 8848     		ldr	r0, .L710+44
 12129 0064 FFF7FEFF 		bl	__aeabi_atexit
 12130              	.LVL810:
 12131              	.LBB2172:
 12132              	.LBI2172:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12133              		.loc 8 15 5 is_stmt 1 view .LVU3446
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12134              		.loc 8 15 5 is_stmt 0 view .LVU3447
 12135              	.LBE2172:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12136              		.loc 19 50 19 view .LVU3448
 12137 0068 2246     		mov	r2, r4
 12138 006a 8749     		ldr	r1, .L710+48
 12139              	.LBB2173:
 12140              	.LBB2174:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 367


 12141              	.LBB2175:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12142              		.loc 12 45 13 view .LVU3449
 12143 006c 0025     		movs	r5, #0
 12144              	.LBE2175:
 12145              	.LBE2174:
 12146              	.LBE2173:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12147              		.loc 19 50 19 view .LVU3450
 12148 006e 8748     		ldr	r0, .L710+52
 12149 0070 FFF7FEFF 		bl	__aeabi_atexit
 12150              	.LVL811:
 12151              	.LBB2180:
 12152              	.LBI2173:
  43:envFollow.h   ****     {
 12153              		.loc 12 43 5 is_stmt 1 view .LVU3451
 12154              	.LBB2178:
 12155              	.LBB2176:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12156              		.loc 12 45 9 view .LVU3452
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12157              		.loc 12 48 11 is_stmt 0 view .LVU3453
 12158 0074 864F     		ldr	r7, .L710+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12159              		.loc 12 45 13 view .LVU3454
 12160 0076 8748     		ldr	r0, .L710+60
 12161              	.LBE2176:
 12162              	.LBE2178:
 12163              	.LBE2180:
  51:Veno-Echo.cpp **** 
 12164              		.loc 19 51 18 view .LVU3455
 12165 0078 2246     		mov	r2, r4
 12166 007a 8749     		ldr	r1, .L710+64
 12167              	.LBB2181:
 12168              	.LBB2179:
 12169              	.LBB2177:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12170              		.loc 12 45 13 view .LVU3456
 12171 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12172              		.loc 12 46 9 is_stmt 1 view .LVU3457
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12173              		.loc 12 46 20 is_stmt 0 view .LVU3458
 12174 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12175              		.loc 12 47 9 is_stmt 1 view .LVU3459
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12176              		.loc 12 47 17 is_stmt 0 view .LVU3460
 12177 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12178              		.loc 12 48 9 is_stmt 1 view .LVU3461
  50:envFollow.h   ****     }  
 12179              		.loc 12 50 21 is_stmt 0 view .LVU3462
 12180 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12181              		.loc 12 48 11 view .LVU3463
 12182 0084 0761     		str	r7, [r0, #16]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 368


  49:envFollow.h   ****         sample_noDC = 0.0f;
 12183              		.loc 12 49 9 is_stmt 1 view .LVU3464
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12184              		.loc 12 49 15 is_stmt 0 view .LVU3465
 12185 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12186              		.loc 12 50 9 is_stmt 1 view .LVU3466
 12187              	.LVL812:
  50:envFollow.h   ****     }  
 12188              		.loc 12 50 9 is_stmt 0 view .LVU3467
 12189              	.LBE2177:
 12190              	.LBE2179:
 12191              	.LBE2181:
  51:Veno-Echo.cpp **** 
 12192              		.loc 19 51 18 view .LVU3468
 12193 0088 FFF7FEFF 		bl	__aeabi_atexit
 12194              	.LVL813:
 12195              	.LBB2182:
 12196              	.LBI2182:
  43:envFollow.h   ****     {
 12197              		.loc 12 43 5 is_stmt 1 view .LVU3469
 12198              	.LBB2183:
 12199              	.LBB2184:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12200              		.loc 12 45 9 view .LVU3470
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12201              		.loc 12 45 13 is_stmt 0 view .LVU3471
 12202 008c 8348     		ldr	r0, .L710+68
 12203              	.LBE2184:
 12204              	.LBE2183:
 12205              	.LBE2182:
  53:Veno-Echo.cpp **** 
 12206              		.loc 19 53 16 view .LVU3472
 12207 008e DFF8D082 		ldr	r8, .L710+264
  51:Veno-Echo.cpp **** 
 12208              		.loc 19 51 27 view .LVU3473
 12209 0092 2246     		mov	r2, r4
 12210 0094 8049     		ldr	r1, .L710+64
 12211              	.LBB2187:
 12212              	.LBB2186:
 12213              	.LBB2185:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12214              		.loc 12 45 13 view .LVU3474
 12215 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12216              		.loc 12 46 9 is_stmt 1 view .LVU3475
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12217              		.loc 12 46 20 is_stmt 0 view .LVU3476
 12218 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12219              		.loc 12 47 9 is_stmt 1 view .LVU3477
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12220              		.loc 12 47 17 is_stmt 0 view .LVU3478
 12221 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12222              		.loc 12 48 9 is_stmt 1 view .LVU3479
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 369


 12223              		.loc 12 48 11 is_stmt 0 view .LVU3480
 12224 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12225              		.loc 12 49 9 is_stmt 1 view .LVU3481
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12226              		.loc 12 49 15 is_stmt 0 view .LVU3482
 12227 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12228              		.loc 12 50 9 is_stmt 1 view .LVU3483
  50:envFollow.h   ****     }  
 12229              		.loc 12 50 21 is_stmt 0 view .LVU3484
 12230 00a0 8560     		str	r5, [r0, #8]	@ float
 12231              	.LVL814:
  50:envFollow.h   ****     }  
 12232              		.loc 12 50 21 view .LVU3485
 12233              	.LBE2185:
 12234              	.LBE2186:
 12235              	.LBE2187:
  51:Veno-Echo.cpp **** 
 12236              		.loc 19 51 27 view .LVU3486
 12237 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12238              	.LVL815:
 12239              	.LBB2188:
 12240              	.LBI2188:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12241              		.loc 11 14 5 is_stmt 1 view .LVU3487
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12242              		.loc 11 14 5 is_stmt 0 view .LVU3488
 12243              	.LBE2188:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12244              		.loc 19 56 76 view .LVU3489
 12245 00a6 7E4F     		ldr	r7, .L710+72
  53:Veno-Echo.cpp **** 
 12246              		.loc 19 53 16 view .LVU3490
 12247 00a8 2246     		mov	r2, r4
 12248 00aa 4146     		mov	r1, r8
 12249 00ac 7D48     		ldr	r0, .L710+76
 12250 00ae FFF7FEFF 		bl	__aeabi_atexit
 12251              	.LVL816:
 12252              	.LBB2189:
 12253              	.LBI2189:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12254              		.loc 11 14 5 is_stmt 1 view .LVU3491
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12255              		.loc 11 14 5 is_stmt 0 view .LVU3492
 12256              	.LBE2189:
  53:Veno-Echo.cpp **** 
 12257              		.loc 19 53 29 view .LVU3493
 12258 00b2 2246     		mov	r2, r4
 12259 00b4 4146     		mov	r1, r8
 12260 00b6 7C48     		ldr	r0, .L710+80
 12261 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12262              	.LVL817:
 12263              	.LBB2190:
 12264              	.LBI2190:
  48:delayline_multitap.h ****     {
 12265              		.loc 17 48 5 is_stmt 1 view .LVU3494
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 370


  48:delayline_multitap.h ****     {
 12266              		.loc 17 48 5 is_stmt 0 view .LVU3495
 12267              	.LBE2190:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12268              		.loc 19 59 80 view .LVU3496
 12269 00bc 7B4D     		ldr	r5, .L710+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12270              		.loc 19 56 76 view .LVU3497
 12271 00be 2246     		mov	r2, r4
 12272 00c0 3946     		mov	r1, r7
 12273 00c2 7B48     		ldr	r0, .L710+88
 12274 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12275              	.LVL818:
 12276              	.LBB2191:
 12277              	.LBI2191:
  48:delayline_multitap.h ****     {
 12278              		.loc 17 48 5 is_stmt 1 view .LVU3498
  48:delayline_multitap.h ****     {
 12279              		.loc 17 48 5 is_stmt 0 view .LVU3499
 12280              	.LBE2191:
  57:Veno-Echo.cpp **** 
 12281              		.loc 19 57 76 view .LVU3500
 12282 00c8 2246     		mov	r2, r4
 12283 00ca 3946     		mov	r1, r7
 12284 00cc 7948     		ldr	r0, .L710+92
 12285 00ce FFF7FEFF 		bl	__aeabi_atexit
 12286              	.LVL819:
 12287              	.LBB2192:
 12288              	.LBI2192:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12289              		.loc 18 38 5 is_stmt 1 view .LVU3501
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12290              		.loc 18 38 5 is_stmt 0 view .LVU3502
 12291              	.LBE2192:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12292              		.loc 19 98 12 view .LVU3503
 12293 00d2 794F     		ldr	r7, .L710+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12294              		.loc 19 59 80 view .LVU3504
 12295 00d4 2246     		mov	r2, r4
 12296 00d6 2946     		mov	r1, r5
 12297 00d8 7848     		ldr	r0, .L710+100
 12298 00da FFF7FEFF 		bl	__aeabi_atexit
 12299              	.LVL820:
 12300              	.LBB2193:
 12301              	.LBI2193:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12302              		.loc 18 38 5 is_stmt 1 view .LVU3505
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12303              		.loc 18 38 5 is_stmt 0 view .LVU3506
 12304              	.LBE2193:
  60:Veno-Echo.cpp **** 
 12305              		.loc 19 60 80 view .LVU3507
 12306 00de 2246     		mov	r2, r4
 12307 00e0 2946     		mov	r1, r5
 12308 00e2 7748     		ldr	r0, .L710+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 371


 12309              		.loc 19 102 11 view .LVU3508
 12310 00e4 774D     		ldr	r5, .L710+108
  60:Veno-Echo.cpp **** 
 12311              		.loc 19 60 80 view .LVU3509
 12312 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12313              	.LVL821:
 12314              	.LBB2194:
 12315              	.LBI2194:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12316              		.loc 16 49 1 is_stmt 1 view .LVU3510
 12317              	.LBB2195:
 12318              	.LBB2196:
 12319              	.LBI2196:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12320              		.loc 14 40 1 view .LVU3511
 12321              	.LBB2197:
 12322              	.LBB2198:
 12323              	.LBI2198:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12324              		.loc 15 24 5 view .LVU3512
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12325              		.loc 15 24 5 is_stmt 0 view .LVU3513
 12326              	.LBE2198:
 12327              	.LBB2199:
 12328              	.LBI2199:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12329              		.loc 8 15 5 is_stmt 1 view .LVU3514
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12330              		.loc 8 15 5 is_stmt 0 view .LVU3515
 12331              	.LBE2199:
 12332              	.LBE2197:
 12333              	.LBE2196:
 12334              	.LBE2195:
 12335              	.LBE2194:
 12336              	.LBE2262:
 12337              	.LBE2266:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12338              		.loc 16 49 14 is_stmt 1 view .LVU3516
  49:DelayMulti.h  **** ~DelayMulti() {}
 12339              		.loc 16 49 14 view .LVU3517
 12340              	.LBB2267:
 12341              	.LBB2263:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12342              		.loc 19 98 12 is_stmt 0 view .LVU3518
 12343 00ea 2246     		mov	r2, r4
 12344 00ec 3946     		mov	r1, r7
 12345 00ee 7648     		ldr	r0, .L710+112
 12346 00f0 FFF7FEFF 		bl	__aeabi_atexit
 12347              	.LVL822:
 12348              	.LBB2200:
 12349              	.LBI2200:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12350              		.loc 16 49 1 is_stmt 1 view .LVU3519
 12351              	.LBB2201:
 12352              	.LBB2202:
 12353              	.LBI2202:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 372


 12354              		.loc 14 40 1 view .LVU3520
 12355              	.LBB2203:
 12356              	.LBB2204:
 12357              	.LBI2204:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12358              		.loc 15 24 5 view .LVU3521
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12359              		.loc 15 24 5 is_stmt 0 view .LVU3522
 12360              	.LBE2204:
 12361              	.LBB2205:
 12362              	.LBI2205:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12363              		.loc 8 15 5 is_stmt 1 view .LVU3523
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12364              		.loc 8 15 5 is_stmt 0 view .LVU3524
 12365              	.LBE2205:
 12366              	.LBE2203:
 12367              	.LBE2202:
 12368              	.LBE2201:
 12369              	.LBE2200:
 12370              	.LBE2263:
 12371              	.LBE2267:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12372              		.loc 16 49 14 is_stmt 1 view .LVU3525
  49:DelayMulti.h  **** ~DelayMulti() {}
 12373              		.loc 16 49 14 view .LVU3526
 12374              	.LBB2268:
 12375              	.LBB2264:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12376              		.loc 19 98 19 is_stmt 0 view .LVU3527
 12377 00f4 2246     		mov	r2, r4
 12378 00f6 3946     		mov	r1, r7
 12379 00f8 7448     		ldr	r0, .L710+116
 12380 00fa FFF7FEFF 		bl	__aeabi_atexit
 12381              	.LVL823:
 12382              	.LBB2206:
 12383              	.LBI2206:
  60:LEDs.h        ****     ~ButtonLED() {}
 12384              		.loc 14 60 5 is_stmt 1 view .LVU3528
 12385              	.LBB2207:
 12386              	.LBB2208:
 12387              	.LBI2208:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12388              		.loc 1 40 5 view .LVU3529
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12389              		.loc 1 40 5 is_stmt 0 view .LVU3530
 12390              	.LBE2208:
 12391              	.LBB2209:
 12392              	.LBI2209:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12393              		.loc 15 24 5 is_stmt 1 view .LVU3531
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12394              		.loc 15 24 5 is_stmt 0 view .LVU3532
 12395              	.LBE2209:
 12396              	.LBE2207:
 12397              	.LBE2206:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 373


 12398              		.loc 19 102 11 view .LVU3533
 12399 00fe 2246     		mov	r2, r4
 12400 0100 2946     		mov	r1, r5
 12401 0102 7348     		ldr	r0, .L710+120
 12402 0104 FFF7FEFF 		bl	__aeabi_atexit
 12403              	.LVL824:
 12404              	.LBB2210:
 12405              	.LBI2210:
  60:LEDs.h        ****     ~ButtonLED() {}
 12406              		.loc 14 60 5 is_stmt 1 view .LVU3534
 12407              	.LBB2211:
 12408              	.LBB2212:
 12409              	.LBI2212:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12410              		.loc 1 40 5 view .LVU3535
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12411              		.loc 1 40 5 is_stmt 0 view .LVU3536
 12412              	.LBE2212:
 12413              	.LBB2213:
 12414              	.LBI2213:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12415              		.loc 15 24 5 is_stmt 1 view .LVU3537
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12416              		.loc 15 24 5 is_stmt 0 view .LVU3538
 12417              	.LBE2213:
 12418              	.LBE2211:
 12419              	.LBE2210:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12420              		.loc 19 102 18 view .LVU3539
 12421 0108 2246     		mov	r2, r4
 12422 010a 2946     		mov	r1, r5
 12423 010c 7148     		ldr	r0, .L710+124
 12424 010e FFF7FEFF 		bl	__aeabi_atexit
 12425              	.LVL825:
 12426              	.LBB2214:
 12427              	.LBI2214:
  60:LEDs.h        ****     ~ButtonLED() {}
 12428              		.loc 14 60 5 is_stmt 1 view .LVU3540
 12429              	.LBB2215:
 12430              	.LBB2216:
 12431              	.LBI2216:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12432              		.loc 1 40 5 view .LVU3541
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12433              		.loc 1 40 5 is_stmt 0 view .LVU3542
 12434              	.LBE2216:
 12435              	.LBB2217:
 12436              	.LBI2217:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12437              		.loc 15 24 5 is_stmt 1 view .LVU3543
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12438              		.loc 15 24 5 is_stmt 0 view .LVU3544
 12439              	.LBE2217:
 12440              	.LBE2215:
 12441              	.LBE2214:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12442              		.loc 19 102 25 view .LVU3545
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 374


 12443 0112 2246     		mov	r2, r4
 12444 0114 2946     		mov	r1, r5
 12445 0116 7048     		ldr	r0, .L710+128
 12446 0118 FFF7FEFF 		bl	__aeabi_atexit
 12447              	.LVL826:
 12448              	.LBB2218:
 12449              	.LBI2218:
  60:LEDs.h        ****     ~ButtonLED() {}
 12450              		.loc 14 60 5 is_stmt 1 view .LVU3546
 12451              	.LBB2219:
 12452              	.LBB2220:
 12453              	.LBI2220:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12454              		.loc 1 40 5 view .LVU3547
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12455              		.loc 1 40 5 is_stmt 0 view .LVU3548
 12456              	.LBE2220:
 12457              	.LBB2221:
 12458              	.LBI2221:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12459              		.loc 15 24 5 is_stmt 1 view .LVU3549
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12460              		.loc 15 24 5 is_stmt 0 view .LVU3550
 12461              	.LBE2221:
 12462              	.LBE2219:
 12463              	.LBE2218:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12464              		.loc 19 102 34 view .LVU3551
 12465 011c 2246     		mov	r2, r4
 12466 011e 2946     		mov	r1, r5
 12467 0120 6E48     		ldr	r0, .L710+132
 12468 0122 FFF7FEFF 		bl	__aeabi_atexit
 12469              	.LVL827:
 12470              	.LBB2222:
 12471              	.LBI2222:
  60:LEDs.h        ****     ~ButtonLED() {}
 12472              		.loc 14 60 5 is_stmt 1 view .LVU3552
 12473              	.LBB2223:
 12474              	.LBB2224:
 12475              	.LBI2224:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12476              		.loc 1 40 5 view .LVU3553
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12477              		.loc 1 40 5 is_stmt 0 view .LVU3554
 12478              	.LBE2224:
 12479              	.LBB2225:
 12480              	.LBI2225:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12481              		.loc 15 24 5 is_stmt 1 view .LVU3555
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12482              		.loc 15 24 5 is_stmt 0 view .LVU3556
 12483              	.LBE2225:
 12484              	.LBE2223:
 12485              	.LBE2222:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12486              		.loc 19 147 13 view .LVU3557
 12487 0126 6E4F     		ldr	r7, .L710+136
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 375


 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12488              		.loc 19 102 44 view .LVU3558
 12489 0128 2246     		mov	r2, r4
 12490 012a 2946     		mov	r1, r5
 12491 012c 6D48     		ldr	r0, .L710+140
 12492 012e FFF7FEFF 		bl	__aeabi_atexit
 12493              	.LVL828:
 12494              	.LBB2226:
 12495              	.LBI2226:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12496              		.loc 14 40 1 is_stmt 1 view .LVU3559
 12497              	.LBB2227:
 12498              	.LBB2228:
 12499              	.LBI2228:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12500              		.loc 15 24 5 view .LVU3560
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12501              		.loc 15 24 5 is_stmt 0 view .LVU3561
 12502              	.LBE2228:
 12503              	.LBB2229:
 12504              	.LBI2229:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12505              		.loc 8 15 5 is_stmt 1 view .LVU3562
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12506              		.loc 8 15 5 is_stmt 0 view .LVU3563
 12507              	.LBE2229:
 12508              	.LBE2227:
 12509              	.LBE2226:
 103:Veno-Echo.cpp **** 
 12510              		.loc 19 103 10 view .LVU3564
 12511 0132 2246     		mov	r2, r4
 12512 0134 6C49     		ldr	r1, .L710+144
 12513 0136 6D48     		ldr	r0, .L710+148
 12514 0138 FFF7FEFF 		bl	__aeabi_atexit
 12515              	.LVL829:
 12516              	.LBB2230:
 12517              	.LBI2230:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12518              		.loc 7 38 5 is_stmt 1 view .LVU3565
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12519              		.loc 7 38 5 is_stmt 0 view .LVU3566
 12520              	.LBE2230:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12521              		.loc 19 147 13 view .LVU3567
 12522 013c 2246     		mov	r2, r4
 12523 013e 3946     		mov	r1, r7
 12524 0140 6B48     		ldr	r0, .L710+152
 12525 0142 FFF7FEFF 		bl	__aeabi_atexit
 12526              	.LVL830:
 12527              	.LBB2231:
 12528              	.LBI2231:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12529              		.loc 7 38 5 is_stmt 1 view .LVU3568
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12530              		.loc 7 38 5 is_stmt 0 view .LVU3569
 12531              	.LBE2231:
 148:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 376


 12532              		.loc 19 148 13 view .LVU3570
 12533 0146 2246     		mov	r2, r4
 12534 0148 3946     		mov	r1, r7
 12535 014a 6A48     		ldr	r0, .L710+156
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12536              		.loc 19 153 18 view .LVU3571
 12537 014c 6A4D     		ldr	r5, .L710+160
 148:Veno-Echo.cpp **** 
 12538              		.loc 19 148 13 view .LVU3572
 12539 014e FFF7FEFF 		bl	__aeabi_atexit
 12540              	.LVL831:
 12541              	.LBB2232:
 12542              	.LBI2232:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12543              		.loc 7 38 5 is_stmt 1 view .LVU3573
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12544              		.loc 7 38 5 is_stmt 0 view .LVU3574
 12545              	.LBE2232:
 150:Veno-Echo.cpp **** static Adsr HPF_Env;
 12546              		.loc 19 150 13 view .LVU3575
 12547 0152 2246     		mov	r2, r4
 12548 0154 3946     		mov	r1, r7
 12549 0156 6948     		ldr	r0, .L710+164
 12550 0158 FFF7FEFF 		bl	__aeabi_atexit
 12551              	.LVL832:
 12552              	.LBB2233:
 12553              	.LBI2233:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12554              		.loc 7 38 5 is_stmt 1 view .LVU3576
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12555              		.loc 7 38 5 is_stmt 0 view .LVU3577
 12556              	.LBE2233:
 151:Veno-Echo.cpp **** 
 12557              		.loc 19 151 13 view .LVU3578
 12558 015c 2246     		mov	r2, r4
 12559 015e 3946     		mov	r1, r7
 12560 0160 6748     		ldr	r0, .L710+168
 12561 0162 FFF7FEFF 		bl	__aeabi_atexit
 12562              	.LVL833:
 12563              	.LBB2234:
 12564              	.LBI2234:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12565              		.loc 10 36 5 is_stmt 1 view .LVU3579
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12566              		.loc 10 36 5 is_stmt 0 view .LVU3580
 12567              	.LBE2234:
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12568              		.loc 19 153 18 view .LVU3581
 12569 0166 2246     		mov	r2, r4
 12570 0168 2946     		mov	r1, r5
 12571 016a 6648     		ldr	r0, .L710+172
 12572 016c FFF7FEFF 		bl	__aeabi_atexit
 12573              	.LVL834:
 12574              	.LBB2235:
 12575              	.LBI2235:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12576              		.loc 10 36 5 is_stmt 1 view .LVU3582
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 377


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12577              		.loc 10 36 5 is_stmt 0 view .LVU3583
 12578              	.LBE2235:
 154:Veno-Echo.cpp **** 
 12579              		.loc 19 154 18 view .LVU3584
 12580 0170 2246     		mov	r2, r4
 12581 0172 2946     		mov	r1, r5
 12582 0174 6448     		ldr	r0, .L710+176
 12583 0176 FFF7FEFF 		bl	__aeabi_atexit
 12584              	.LVL835:
 12585              	.LBB2236:
 12586              	.LBI2236:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12587              		.loc 10 36 5 is_stmt 1 view .LVU3585
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12588              		.loc 10 36 5 is_stmt 0 view .LVU3586
 12589              	.LBE2236:
 156:Veno-Echo.cpp **** 
 12590              		.loc 19 156 18 view .LVU3587
 12591 017a 2246     		mov	r2, r4
 12592 017c 2946     		mov	r1, r5
 12593 017e 6348     		ldr	r0, .L710+180
 12594 0180 FFF7FEFF 		bl	__aeabi_atexit
 12595              	.LVL836:
 12596              	.LBB2237:
 12597              	.LBI2237:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12598              		.loc 10 36 5 is_stmt 1 view .LVU3588
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12599              		.loc 10 36 5 is_stmt 0 view .LVU3589
 12600              	.LBE2237:
 159:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12601              		.loc 19 159 18 view .LVU3590
 12602 0184 2246     		mov	r2, r4
 12603 0186 2946     		mov	r1, r5
 12604 0188 6148     		ldr	r0, .L710+184
 12605 018a FFF7FEFF 		bl	__aeabi_atexit
 12606              	.LVL837:
 12607              	.LBB2238:
 12608              	.LBI2238:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12609              		.loc 10 36 5 is_stmt 1 view .LVU3591
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12610              		.loc 10 36 5 is_stmt 0 view .LVU3592
 12611              	.LBE2238:
 160:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12612              		.loc 19 160 18 view .LVU3593
 12613 018e 2246     		mov	r2, r4
 12614 0190 2946     		mov	r1, r5
 12615 0192 6048     		ldr	r0, .L710+188
 12616 0194 FFF7FEFF 		bl	__aeabi_atexit
 12617              	.LVL838:
 12618              	.LBB2239:
 12619              	.LBI2239:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12620              		.loc 10 36 5 is_stmt 1 view .LVU3594
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 378


 12621              		.loc 10 36 5 is_stmt 0 view .LVU3595
 12622              	.LBE2239:
 161:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12623              		.loc 19 161 18 view .LVU3596
 12624 0198 2246     		mov	r2, r4
 12625 019a 2946     		mov	r1, r5
 12626 019c 5E48     		ldr	r0, .L710+192
 12627 019e FFF7FEFF 		bl	__aeabi_atexit
 12628              	.LVL839:
 12629              	.LBB2240:
 12630              	.LBI2240:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12631              		.loc 10 36 5 is_stmt 1 view .LVU3597
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12632              		.loc 10 36 5 is_stmt 0 view .LVU3598
 12633              	.LBE2240:
 162:Veno-Echo.cpp **** 
 12634              		.loc 19 162 18 view .LVU3599
 12635 01a2 2246     		mov	r2, r4
 12636 01a4 2946     		mov	r1, r5
 12637 01a6 5D48     		ldr	r0, .L710+196
 12638 01a8 FFF7FEFF 		bl	__aeabi_atexit
 12639              	.LVL840:
 12640              	.LBB2241:
 12641              	.LBI2241:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12642              		.loc 10 36 5 is_stmt 1 view .LVU3600
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12643              		.loc 10 36 5 is_stmt 0 view .LVU3601
 12644              	.LBE2241:
 165:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12645              		.loc 19 165 18 view .LVU3602
 12646 01ac 2246     		mov	r2, r4
 12647 01ae 2946     		mov	r1, r5
 12648 01b0 5B48     		ldr	r0, .L710+200
 12649 01b2 FFF7FEFF 		bl	__aeabi_atexit
 12650              	.LVL841:
 12651              	.LBB2242:
 12652              	.LBI2242:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12653              		.loc 10 36 5 is_stmt 1 view .LVU3603
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12654              		.loc 10 36 5 is_stmt 0 view .LVU3604
 12655              	.LBE2242:
 166:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12656              		.loc 19 166 18 view .LVU3605
 12657 01b6 2246     		mov	r2, r4
 12658 01b8 2946     		mov	r1, r5
 12659 01ba 5A48     		ldr	r0, .L710+204
 12660 01bc FFF7FEFF 		bl	__aeabi_atexit
 12661              	.LVL842:
 12662              	.LBB2243:
 12663              	.LBI2243:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12664              		.loc 10 36 5 is_stmt 1 view .LVU3606
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12665              		.loc 10 36 5 is_stmt 0 view .LVU3607
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 379


 12666              	.LBE2243:
 167:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12667              		.loc 19 167 18 view .LVU3608
 12668 01c0 2246     		mov	r2, r4
 12669 01c2 2946     		mov	r1, r5
 12670 01c4 5848     		ldr	r0, .L710+208
 12671 01c6 FFF7FEFF 		bl	__aeabi_atexit
 12672              	.LVL843:
 12673              	.LBB2244:
 12674              	.LBI2244:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12675              		.loc 10 36 5 is_stmt 1 view .LVU3609
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12676              		.loc 10 36 5 is_stmt 0 view .LVU3610
 12677              	.LBE2244:
 168:Veno-Echo.cpp **** 
 12678              		.loc 19 168 18 view .LVU3611
 12679 01ca 2246     		mov	r2, r4
 12680 01cc 2946     		mov	r1, r5
 12681 01ce 5748     		ldr	r0, .L710+212
 12682 01d0 FFF7FEFF 		bl	__aeabi_atexit
 12683              	.LVL844:
 12684              	.LBB2245:
 12685              	.LBI2245:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12686              		.loc 10 36 5 is_stmt 1 view .LVU3612
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12687              		.loc 10 36 5 is_stmt 0 view .LVU3613
 12688              	.LBE2245:
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12689              		.loc 19 171 18 view .LVU3614
 12690 01d4 2246     		mov	r2, r4
 12691 01d6 2946     		mov	r1, r5
 12692 01d8 5548     		ldr	r0, .L710+216
 12693 01da FFF7FEFF 		bl	__aeabi_atexit
 12694              	.LVL845:
 12695              	.LBB2246:
 12696              	.LBI2246:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12697              		.loc 10 36 5 is_stmt 1 view .LVU3615
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12698              		.loc 10 36 5 is_stmt 0 view .LVU3616
 12699              	.LBE2246:
 172:Veno-Echo.cpp **** 
 12700              		.loc 19 172 18 view .LVU3617
 12701 01de 2246     		mov	r2, r4
 12702 01e0 2946     		mov	r1, r5
 12703 01e2 5448     		ldr	r0, .L710+220
 12704 01e4 FFF7FEFF 		bl	__aeabi_atexit
 12705              	.LVL846:
 12706              	.LBB2247:
 12707              	.LBI2247:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12708              		.loc 10 36 5 is_stmt 1 view .LVU3618
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12709              		.loc 10 36 5 is_stmt 0 view .LVU3619
 12710              	.LBE2247:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 380


 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12711              		.loc 19 178 8 view .LVU3620
 12712 01e8 534F     		ldr	r7, .L710+224
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12713              		.loc 19 174 18 view .LVU3621
 12714 01ea 2246     		mov	r2, r4
 12715 01ec 2946     		mov	r1, r5
 12716 01ee 5348     		ldr	r0, .L710+228
 12717 01f0 FFF7FEFF 		bl	__aeabi_atexit
 12718              	.LVL847:
 12719              	.LBB2248:
 12720              	.LBI2248:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12721              		.loc 10 36 5 is_stmt 1 view .LVU3622
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12722              		.loc 10 36 5 is_stmt 0 view .LVU3623
 12723              	.LBE2248:
 175:Veno-Echo.cpp **** 
 12724              		.loc 19 175 18 view .LVU3624
 12725 01f4 2246     		mov	r2, r4
 12726 01f6 2946     		mov	r1, r5
 12727 01f8 5148     		ldr	r0, .L710+232
 12728 01fa FFF7FEFF 		bl	__aeabi_atexit
 12729              	.LVL848:
 12730              	.LBB2249:
 12731              	.LBI2249:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12732              		.loc 1 40 5 is_stmt 1 view .LVU3625
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12733              		.loc 1 40 5 is_stmt 0 view .LVU3626
 12734              	.LBE2249:
 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12735              		.loc 19 178 8 view .LVU3627
 12736 01fe 2246     		mov	r2, r4
 12737 0200 3946     		mov	r1, r7
 12738 0202 5048     		ldr	r0, .L710+236
 12739 0204 FFF7FEFF 		bl	__aeabi_atexit
 12740              	.LVL849:
 12741              	.LBB2250:
 12742              	.LBI2250:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12743              		.loc 1 40 5 is_stmt 1 view .LVU3628
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12744              		.loc 1 40 5 is_stmt 0 view .LVU3629
 12745              	.LBE2250:
 179:Veno-Echo.cpp **** 
 12746              		.loc 19 179 8 view .LVU3630
 12747 0208 2246     		mov	r2, r4
 12748 020a 3946     		mov	r1, r7
 12749 020c 4E48     		ldr	r0, .L710+240
 12750 020e FFF7FEFF 		bl	__aeabi_atexit
 12751              	.LVL850:
 12752              	.LBB2251:
 12753              	.LBI2251:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12754              		.loc 1 40 5 is_stmt 1 view .LVU3631
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 381


 12755              		.loc 1 40 5 is_stmt 0 view .LVU3632
 12756              	.LBE2251:
 182:Veno-Echo.cpp **** Switch ClockIn;
 12757              		.loc 19 182 8 view .LVU3633
 12758 0212 2246     		mov	r2, r4
 12759 0214 3946     		mov	r1, r7
 12760 0216 4D48     		ldr	r0, .L710+244
 12761 0218 FFF7FEFF 		bl	__aeabi_atexit
 12762              	.LVL851:
 12763              	.LBB2252:
 12764              	.LBI2252:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12765              		.loc 1 40 5 is_stmt 1 view .LVU3634
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12766              		.loc 1 40 5 is_stmt 0 view .LVU3635
 12767              	.LBE2252:
 183:Veno-Echo.cpp **** 
 12768              		.loc 19 183 8 view .LVU3636
 12769 021c 2246     		mov	r2, r4
 12770 021e 3946     		mov	r1, r7
 12771 0220 4B48     		ldr	r0, .L710+248
 12772 0222 FFF7FEFF 		bl	__aeabi_atexit
 12773              	.LVL852:
 12774              	.LBB2253:
 12775              	.LBI2253:
  41:taptempo.h    ****     {
 12776              		.loc 13 41 5 is_stmt 1 view .LVU3637
 12777              	.LBB2254:
 12778              	.LBB2255:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12779              		.loc 13 43 9 view .LVU3638
  46:taptempo.h    ****         lastTapLength_ = 0;
 12780              		.loc 13 46 17 is_stmt 0 view .LVU3639
 12781 0226 5027     		movs	r7, #80
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12782              		.loc 13 43 18 view .LVU3640
 12783 0228 4A48     		ldr	r0, .L710+252
  45:taptempo.h    ****         mintap_ = 80;
 12784              		.loc 13 45 17 view .LVU3641
 12785 022a 4FF4FA6C 		mov	ip, #2000
  44:taptempo.h    ****         maxtap_ = 2000;
 12786              		.loc 13 44 24 view .LVU3642
 12787 022e DFF834E1 		ldr	lr, .L710+268
  51:taptempo.h    **** 
 12788              		.loc 13 51 19 view .LVU3643
 12789 0232 4FF07E53 		mov	r3, #1065353216
  48:taptempo.h    ****         lastTime_ = 0;
 12790              		.loc 13 48 16 view .LVU3644
 12791 0236 484D     		ldr	r5, .L710+256
 12792              	.LBE2255:
 12793              	.LBE2254:
 12794              	.LBE2253:
 186:Veno-Echo.cpp **** 
 12795              		.loc 19 186 10 view .LVU3645
 12796 0238 2246     		mov	r2, r4
 12797              	.LBB2260:
 12798              	.LBB2258:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 382


 12799              	.LBB2256:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12800              		.loc 13 43 18 view .LVU3646
 12801 023a 0676     		strb	r6, [r0, #24]
  44:taptempo.h    ****         maxtap_ = 2000;
 12802              		.loc 13 44 9 is_stmt 1 view .LVU3647
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12803              		.loc 13 50 22 is_stmt 0 view .LVU3648
 12804 023c 8660     		str	r6, [r0, #8]
  44:taptempo.h    ****         maxtap_ = 2000;
 12805              		.loc 13 44 24 view .LVU3649
 12806 023e C0F81CE0 		str	lr, [r0, #28]	@ float
  45:taptempo.h    ****         mintap_ = 80;
 12807              		.loc 13 45 9 is_stmt 1 view .LVU3650
  48:taptempo.h    ****         lastTime_ = 0;
 12808              		.loc 13 48 16 is_stmt 0 view .LVU3651
 12809 0242 0562     		str	r5, [r0, #32]	@ float
 12810              	.LBE2256:
 12811              	.LBE2258:
 12812              	.LBE2260:
 186:Veno-Echo.cpp **** 
 12813              		.loc 19 186 10 view .LVU3652
 12814 0244 4549     		ldr	r1, .L710+260
 12815              	.LBB2261:
 12816              	.LBB2259:
 12817              	.LBB2257:
  51:taptempo.h    **** 
 12818              		.loc 13 51 19 view .LVU3653
 12819 0246 4362     		str	r3, [r0, #36]	@ float
  49:taptempo.h    ****         currentTime_ = 0;
 12820              		.loc 13 49 19 view .LVU3654
 12821 0248 C0E90366 		strd	r6, r6, [r0, #12]
  46:taptempo.h    ****         lastTapLength_ = 0;
 12822              		.loc 13 46 17 view .LVU3655
 12823 024c C0E9007C 		strd	r7, ip, [r0]
  47:taptempo.h    ****         tempo_ = 500.0f;
 12824              		.loc 13 47 9 is_stmt 1 view .LVU3656
  48:taptempo.h    ****         lastTime_ = 0;
 12825              		.loc 13 48 9 view .LVU3657
  49:taptempo.h    ****         currentTime_ = 0;
 12826              		.loc 13 49 9 view .LVU3658
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12827              		.loc 13 50 9 view .LVU3659
  51:taptempo.h    **** 
 12828              		.loc 13 51 9 view .LVU3660
 12829              	.LVL853:
  51:taptempo.h    **** 
 12830              		.loc 13 51 9 is_stmt 0 view .LVU3661
 12831              	.LBE2257:
 12832              	.LBE2259:
 12833              	.LBE2261:
 12834              	.LBE2264:
 12835              	.LBE2268:
 12836              		.loc 19 2145 1 view .LVU3662
 12837 0250 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12838              		.cfi_restore 14
 12839              		.cfi_restore 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 383


 12840              		.cfi_restore 7
 12841              		.cfi_restore 6
 12842              		.cfi_restore 5
 12843              		.cfi_restore 4
 12844              		.cfi_def_cfa_offset 0
 12845              	.LBB2269:
 12846              	.LBB2265:
 186:Veno-Echo.cpp **** 
 12847              		.loc 19 186 10 view .LVU3663
 12848 0254 FFF7FEBF 		b	__aeabi_atexit
 12849              	.LVL854:
 12850              	.L711:
 12851              		.align	2
 12852              	.L710:
 12853 0258 00000000 		.word	.LANCHOR4
 12854 025c 00000000 		.word	__dso_handle
 12855 0260 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12856 0264 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12857 0268 00000000 		.word	.LANCHOR29
 12858 026c 00000000 		.word	.LANCHOR30
 12859 0270 00000000 		.word	.LANCHOR16
 12860 0274 00000000 		.word	.LANCHOR17
 12861 0278 00000000 		.word	.LANCHOR31
 12862 027c 00000000 		.word	.LANCHOR32
 12863 0280 00000000 		.word	.LANCHOR18
 12864 0284 00000000 		.word	.LANCHOR19
 12865 0288 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12866 028c 00000000 		.word	.LANCHOR58
 12867 0290 17B7D138 		.word	953267991
 12868 0294 00000000 		.word	.LANCHOR131
 12869 0298 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12870 029c 00000000 		.word	.LANCHOR132
 12871 02a0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12872 02a4 00000000 		.word	.LANCHOR108
 12873 02a8 00000000 		.word	.LANCHOR109
 12874 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12875 02b0 00000000 		.word	delMemsL
 12876 02b4 00000000 		.word	delMemsR
 12877 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
 12878 02bc 00000000 		.word	delMemsL_REV
 12879 02c0 00000000 		.word	delMemsR_REV
 12880 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 12881 02c8 00000000 		.word	.LANCHOR0
 12882 02cc 00000000 		.word	.LANCHOR1
 12883 02d0 00000000 		.word	.LANCHOR94
 12884 02d4 00000000 		.word	.LANCHOR95
 12885 02d8 00000000 		.word	.LANCHOR96
 12886 02dc 00000000 		.word	.LANCHOR97
 12887 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12888 02e4 00000000 		.word	.LANCHOR98
 12889 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 12890 02ec 00000000 		.word	.LANCHOR72
 12891 02f0 00000000 		.word	.LANCHOR102
 12892 02f4 00000000 		.word	.LANCHOR103
 12893 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12894 02fc 00000000 		.word	.LANCHOR104
 12895 0300 00000000 		.word	.LANCHOR105
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 384


 12896 0304 00000000 		.word	.LANCHOR106
 12897 0308 00000000 		.word	.LANCHOR107
 12898 030c 00000000 		.word	.LANCHOR47
 12899 0310 00000000 		.word	.LANCHOR119
 12900 0314 00000000 		.word	.LANCHOR120
 12901 0318 00000000 		.word	.LANCHOR117
 12902 031c 00000000 		.word	.LANCHOR118
 12903 0320 00000000 		.word	.LANCHOR123
 12904 0324 00000000 		.word	.LANCHOR124
 12905 0328 00000000 		.word	.LANCHOR121
 12906 032c 00000000 		.word	.LANCHOR122
 12907 0330 00000000 		.word	.LANCHOR125
 12908 0334 00000000 		.word	.LANCHOR126
 12909 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12910 033c 00000000 		.word	.LANCHOR127
 12911 0340 00000000 		.word	.LANCHOR128
 12912 0344 00000000 		.word	.LANCHOR99
 12913 0348 00000000 		.word	.LANCHOR100
 12914 034c 00000000 		.word	.LANCHOR101
 12915 0350 00000000 		.word	.LANCHOR70
 12916 0354 00000000 		.word	.LANCHOR73
 12917 0358 0000FA43 		.word	1140457472
 12918 035c 00000000 		.word	_ZN8TaptempoD1Ev
 12919 0360 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12920 0364 0000A03F 		.word	1067450368
 12921              	.LBE2265:
 12922              	.LBE2269:
 12923              		.cfi_endproc
 12924              	.LFE4897:
 12926              		.section	.init_array,"aw",%init_array
 12927              		.align	2
 12928 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12929              		.global	AltControls
 12930              		.global	BaseTempo
 12931              		.global	ClockIn
 12932              		.global	Sync
 12933              		.global	ReverseGateR
 12934              		.global	ReverseGateL
 12935              		.global	save_flag
 12936              		.global	delayR_flag
 12937              		.global	delayL_flag
 12938              		.global	PostFilters
 12939              		.global	ClockInFlag
 12940              		.global	mute
 12941              		.global	shift
 12942              		.global	syncMode
 12943              		.global	modulation_CV_Raw
 12944              		.global	ModDepth
 12945              		.global	div_R
 12946              		.global	div_L
 12947              		.global	filterXfade
 12948              		.global	width_CV
 12949              		.global	width
 12950              		.global	drywet_CV
 12951              		.global	drywet
 12952              		.global	crossfeedback_CV
 12953              		.global	crossfeedback
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 385


 12954              		.global	feedbackR_CV
 12955              		.global	feedbackR
 12956              		.global	feedbackL_CV
 12957              		.global	feedbackL
 12958              		.global	delayTimeR_CV
 12959              		.global	delayTimeL_CV
 12960              		.global	tempoLED_BASE
 12961              		.global	Tap_Button
 12962              		.global	Rev_R_sw
 12963              		.global	Rev_L_sw
 12964              		.global	HPF_sw
 12965              		.global	LPF_sw
 12966              		.global	delaysR_REV
 12967              		.global	delaysL_REV
 12968              		.global	delayR
 12969              		.global	delayL
 12970              		.global	delMemsR_REV
 12971              		.global	delMemsL_REV
 12972              		.global	delMemsR
 12973              		.global	delMemsL
 12974              		.section	.bss.AltControls,"aw",%nobits
 12975              		.align	2
 12976              		.set	.LANCHOR20,. + 0
 12979              	AltControls:
 12980 0000 00000000 		.space	32
 12980      00000000 
 12980      00000000 
 12980      00000000 
 12980      00000000 
 12981              		.section	.bss.BaseTempo,"aw",%nobits
 12982              		.align	2
 12983              		.set	.LANCHOR73,. + 0
 12986              	BaseTempo:
 12987 0000 00000000 		.space	40
 12987      00000000 
 12987      00000000 
 12987      00000000 
 12987      00000000 
 12988              		.section	.bss.ClockIn,"aw",%nobits
 12989              		.align	2
 12990              		.set	.LANCHOR70,. + 0
 12993              	ClockIn:
 12994 0000 00000000 		.space	16
 12994      00000000 
 12994      00000000 
 12994      00000000 
 12995              		.section	.bss.ClockInFlag,"aw",%nobits
 12998              	ClockInFlag:
 12999 0000 00       		.space	1
 13000              		.section	.bss.HPF_sw,"aw",%nobits
 13001              		.align	2
 13002              		.set	.LANCHOR95,. + 0
 13005              	HPF_sw:
 13006 0000 00000000 		.space	52
 13006      00000000 
 13006      00000000 
 13006      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 386


 13006      00000000 
 13007              		.section	.bss.LPF_sw,"aw",%nobits
 13008              		.align	2
 13009              		.set	.LANCHOR94,. + 0
 13012              	LPF_sw:
 13013 0000 00000000 		.space	52
 13013      00000000 
 13013      00000000 
 13013      00000000 
 13013      00000000 
 13014              		.section	.bss.ModDepth,"aw",%nobits
 13015              		.align	2
 13016              		.set	.LANCHOR50,. + 0
 13019              	ModDepth:
 13020 0000 00000000 		.space	4
 13021              		.section	.bss.PostFilters,"aw",%nobits
 13022              		.set	.LANCHOR65,. + 0
 13025              	PostFilters:
 13026 0000 00       		.space	1
 13027              		.section	.bss.Rev_L_sw,"aw",%nobits
 13028              		.align	2
 13029              		.set	.LANCHOR96,. + 0
 13032              	Rev_L_sw:
 13033 0000 00000000 		.space	52
 13033      00000000 
 13033      00000000 
 13033      00000000 
 13033      00000000 
 13034              		.section	.bss.Rev_R_sw,"aw",%nobits
 13035              		.align	2
 13036              		.set	.LANCHOR97,. + 0
 13039              	Rev_R_sw:
 13040 0000 00000000 		.space	52
 13040      00000000 
 13040      00000000 
 13040      00000000 
 13040      00000000 
 13041              		.section	.bss.ReverseGateL,"aw",%nobits
 13042              		.align	2
 13043              		.set	.LANCHOR99,. + 0
 13046              	ReverseGateL:
 13047 0000 00000000 		.space	16
 13047      00000000 
 13047      00000000 
 13047      00000000 
 13048              		.section	.bss.ReverseGateR,"aw",%nobits
 13049              		.align	2
 13050              		.set	.LANCHOR100,. + 0
 13053              	ReverseGateR:
 13054 0000 00000000 		.space	16
 13054      00000000 
 13054      00000000 
 13054      00000000 
 13055              		.section	.bss.Sync,"aw",%nobits
 13056              		.align	2
 13057              		.set	.LANCHOR101,. + 0
 13060              	Sync:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 387


 13061 0000 00000000 		.space	16
 13061      00000000 
 13061      00000000 
 13061      00000000 
 13062              		.section	.bss.Tap_Button,"aw",%nobits
 13063              		.align	2
 13064              		.set	.LANCHOR98,. + 0
 13067              	Tap_Button:
 13068 0000 00000000 		.space	52
 13068      00000000 
 13068      00000000 
 13068      00000000 
 13068      00000000 
 13069              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13070              		.align	2
 13071              		.set	.LANCHOR102,. + 0
 13074              	_ZL10FwdRevLEnv:
 13075 0000 00000000 		.space	56
 13075      00000000 
 13075      00000000 
 13075      00000000 
 13075      00000000 
 13076              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13077              		.align	2
 13078              		.set	.LANCHOR103,. + 0
 13081              	_ZL10FwdRevREnv:
 13082 0000 00000000 		.space	56
 13082      00000000 
 13082      00000000 
 13082      00000000 
 13082      00000000 
 13083              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13084              		.align	2
 13085              		.set	.LANCHOR117,. + 0
 13088              	_ZL10HPF_LXfade:
 13089 0000 00000000 		.space	8
 13089      00000000 
 13090              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13091              		.align	2
 13092              		.set	.LANCHOR18,. + 0
 13095              	_ZL10HPF_L_post:
 13096 0000 00000000 		.space	76
 13096      00000000 
 13096      00000000 
 13096      00000000 
 13096      00000000 
 13097              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13098              		.align	2
 13099              		.set	.LANCHOR118,. + 0
 13102              	_ZL10HPF_RXfade:
 13103 0000 00000000 		.space	8
 13103      00000000 
 13104              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13105              		.align	2
 13106              		.set	.LANCHOR19,. + 0
 13109              	_ZL10HPF_R_post:
 13110 0000 00000000 		.space	76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 388


 13110      00000000 
 13110      00000000 
 13110      00000000 
 13110      00000000 
 13111              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13112              		.align	2
 13113              		.set	.LANCHOR119,. + 0
 13116              	_ZL10LPF_LXfade:
 13117 0000 00000000 		.space	8
 13117      00000000 
 13118              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13119              		.align	2
 13120              		.set	.LANCHOR31,. + 0
 13123              	_ZL10LPF_L_post:
 13124 0000 00000000 		.space	76
 13124      00000000 
 13124      00000000 
 13124      00000000 
 13124      00000000 
 13125              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13126              		.align	2
 13127              		.set	.LANCHOR120,. + 0
 13130              	_ZL10LPF_RXfade:
 13131 0000 00000000 		.space	8
 13131      00000000 
 13132              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13133              		.align	2
 13134              		.set	.LANCHOR32,. + 0
 13137              	_ZL10LPF_R_post:
 13138 0000 00000000 		.space	76
 13138      00000000 
 13138      00000000 
 13138      00000000 
 13138      00000000 
 13139              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13140              		.align	2
 13141              		.set	.LANCHOR47,. + 0
 13144              	_ZL10WidthXfade:
 13145 0000 00000000 		.space	8
 13145      00000000 
 13146              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13147              		.align	2
 13148              		.set	.LANCHOR108,. + 0
 13151              	_ZL11DcBlock_LFB:
 13152 0000 00000000 		.space	12
 13152      00000000 
 13152      00000000 
 13153              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13154              		.align	2
 13155              		.set	.LANCHOR109,. + 0
 13158              	_ZL11DcBlock_RFB:
 13159 0000 00000000 		.space	12
 13159      00000000 
 13159      00000000 
 13160              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13161              		.align	2
 13162              		.set	.LANCHOR125,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 389


 13165              	_ZL11FilterMix_L:
 13166 0000 00000000 		.space	8
 13166      00000000 
 13167              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13168              		.align	2
 13169              		.set	.LANCHOR126,. + 0
 13172              	_ZL11FilterMix_R:
 13173 0000 00000000 		.space	8
 13173      00000000 
 13174              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13175              		.align	2
 13176              		.set	.LANCHOR106,. + 0
 13179              	_ZL12FwdRevLXfade:
 13180 0000 00000000 		.space	8
 13180      00000000 
 13181              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13182              		.align	2
 13183              		.set	.LANCHOR107,. + 0
 13186              	_ZL12FwdRevRXfade:
 13187 0000 00000000 		.space	8
 13187      00000000 
 13188              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13189              		.align	2
 13190              		.set	.LANCHOR121,. + 0
 13193              	_ZL15HPF_LXfade_post:
 13194 0000 00000000 		.space	8
 13194      00000000 
 13195              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13196              		.align	2
 13197              		.set	.LANCHOR122,. + 0
 13200              	_ZL15HPF_RXfade_post:
 13201 0000 00000000 		.space	8
 13201      00000000 
 13202              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13203              		.align	2
 13204              		.set	.LANCHOR123,. + 0
 13207              	_ZL15LPF_LXfade_post:
 13208 0000 00000000 		.space	8
 13208      00000000 
 13209              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13210              		.align	2
 13211              		.set	.LANCHOR124,. + 0
 13214              	_ZL15LPF_RXfade_post:
 13215 0000 00000000 		.space	8
 13215      00000000 
 13216              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13217              		.align	2
 13218              		.set	.LANCHOR127,. + 0
 13221              	_ZL16FilterMix_L_post:
 13222 0000 00000000 		.space	8
 13222      00000000 
 13223              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13224              		.align	2
 13225              		.set	.LANCHOR128,. + 0
 13228              	_ZL16FilterMix_R_post:
 13229 0000 00000000 		.space	8
 13229      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 390


 13230              		.section	.bss._ZL2hw,"aw",%nobits
 13231              		.align	2
 13232              		.set	.LANCHOR4,. + 0
 13235              	_ZL2hw:
 13236 0000 00000000 		.space	60
 13236      00000000 
 13236      00000000 
 13236      00000000 
 13236      00000000 
 13237              		.section	.bss._ZL3lfo,"aw",%nobits
 13238              		.align	2
 13239              		.set	.LANCHOR58,. + 0
 13242              	_ZL3lfo:
 13243 0000 00000000 		.space	40
 13243      00000000 
 13243      00000000 
 13243      00000000 
 13243      00000000 
 13244              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13245              		.align	2
 13246              		.set	.LANCHOR16,. + 0
 13249              	_ZL5HPF_L:
 13250 0000 00000000 		.space	76
 13250      00000000 
 13250      00000000 
 13250      00000000 
 13250      00000000 
 13251              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13252              		.align	2
 13253              		.set	.LANCHOR17,. + 0
 13256              	_ZL5HPF_R:
 13257 0000 00000000 		.space	76
 13257      00000000 
 13257      00000000 
 13257      00000000 
 13257      00000000 
 13258              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13259              		.align	2
 13260              		.set	.LANCHOR29,. + 0
 13263              	_ZL5LPF_L:
 13264 0000 00000000 		.space	76
 13264      00000000 
 13264      00000000 
 13264      00000000 
 13264      00000000 
 13265              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13266              		.align	2
 13267              		.set	.LANCHOR30,. + 0
 13270              	_ZL5LPF_R:
 13271 0000 00000000 		.space	76
 13271      00000000 
 13271      00000000 
 13271      00000000 
 13271      00000000 
 13272              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13273              		.align	2
 13274              		.set	.LANCHOR105,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 391


 13277              	_ZL7HPF_Env:
 13278 0000 00000000 		.space	56
 13278      00000000 
 13278      00000000 
 13278      00000000 
 13278      00000000 
 13279              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13280              		.align	2
 13281              		.set	.LANCHOR104,. + 0
 13284              	_ZL7LPF_Env:
 13285 0000 00000000 		.space	56
 13285      00000000 
 13285      00000000 
 13285      00000000 
 13285      00000000 
 13286              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13287              		.align	2
 13288              		.set	.LANCHOR131,. + 0
 13291              	_ZL7LeftEnv:
 13292 0000 00000000 		.space	24
 13292      00000000 
 13292      00000000 
 13292      00000000 
 13292      00000000 
 13293              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13294              		.align	2
 13295              		.set	.LANCHOR132,. + 0
 13298              	_ZL8RightEnv:
 13299 0000 00000000 		.space	24
 13299      00000000 
 13299      00000000 
 13299      00000000 
 13299      00000000 
 13300              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13301              		.align	2
 13302              		.set	.LANCHOR68,. + 0
 13305              	_ZZ10Update_ModvE13modulation_CV:
 13306 0000 00000000 		.space	4
 13307              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13308              		.align	2
 13309              		.set	.LANCHOR69,. + 0
 13312              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13313 0000 00000000 		.space	4
 13314              		.section	.bss._ZZ11UpdateClockvE10divCounter,"aw",%nobits
 13315              		.align	2
 13316              		.set	.LANCHOR71,. + 0
 13319              	_ZZ11UpdateClockvE10divCounter:
 13320 0000 00000000 		.space	4
 13321              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 13322              		.align	2
 13323              		.set	.LANCHOR45,. + 0
 13326              	_ZZ12Update_widthvE10width_Last:
 13327 0000 00000000 		.space	4
 13328              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 13329              		.align	2
 13330              		.set	.LANCHOR49,. + 0
 13333              	_ZZ12Update_widthvE12ModDepth_new:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 392


 13334 0000 00000000 		.space	4
 13335              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 13336              		.set	.LANCHOR43,. + 0
 13339              	_ZZ12Update_widthvE12width_pickup:
 13340 0000 00       		.space	1
 13341              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 13342              		.set	.LANCHOR48,. + 0
 13345              	_ZZ12Update_widthvE15ModDepth_pickup:
 13346 0000 00       		.space	1
 13347              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 13348              		.set	.LANCHOR42,. + 0
 13351              	_ZZ12Update_widthvE9lastShift:
 13352 0000 00       		.space	1
 13353              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 13354              		.align	2
 13355              		.set	.LANCHOR44,. + 0
 13358              	_ZZ12Update_widthvE9width_new:
 13359 0000 00000000 		.space	4
 13360              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 13361              		.set	.LANCHOR39,. + 0
 13364              	_ZZ13Update_drywetvE10Res_pickup:
 13365 0000 00       		.space	1
 13366              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 13367              		.align	2
 13368              		.set	.LANCHOR36,. + 0
 13371              	_ZZ13Update_drywetvE10drywet_new:
 13372 0000 00000000 		.space	4
 13373              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13374              		.align	2
 13375              		.set	.LANCHOR37,. + 0
 13378              	_ZZ13Update_drywetvE11drywet_Last:
 13379 0000 00000000 		.space	4
 13380              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 13381              		.set	.LANCHOR35,. + 0
 13384              	_ZZ13Update_drywetvE13drywet_pickup:
 13385 0000 00       		.space	1
 13386              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 13387              		.align	2
 13388              		.set	.LANCHOR40,. + 0
 13391              	_ZZ13Update_drywetvE7Res_new:
 13392 0000 00000000 		.space	4
 13393              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13394              		.set	.LANCHOR34,. + 0
 13397              	_ZZ13Update_drywetvE9lastShift:
 13398 0000 00       		.space	1
 13399              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13400              		.align	2
 13401              		.set	.LANCHOR111,. + 0
 13404              	_ZZ14Update_ButtonsvE11buttonstate:
 13405 0000 00000000 		.space	4
 13406              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13407              		.align	2
 13408              		.set	.LANCHOR112,. + 0
 13411              	_ZZ14Update_ButtonsvE9resetTime:
 13412 0000 00000000 		.space	4
 13413              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 13414              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 393


 13415              		.set	.LANCHOR113,. + 0
 13418              	_ZZ14Update_ButtonsvE9shiftTime:
 13419 0000 00000000 		.space	4
 13420              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 13421              		.align	2
 13422              		.set	.LANCHOR15,. + 0
 13425              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 13426 0000 00000000 		.space	4
 13427              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 13428              		.align	2
 13429              		.set	.LANCHOR11,. + 0
 13432              	_ZZ16Update_feedbackLvE13feedbackL_new:
 13433 0000 00000000 		.space	4
 13434              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13435              		.align	2
 13436              		.set	.LANCHOR12,. + 0
 13439              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13440 0000 00000000 		.space	4
 13441              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13442              		.set	.LANCHOR14,. + 0
 13445              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13446 0000 00       		.space	1
 13447              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 13448              		.set	.LANCHOR10,. + 0
 13451              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13452 0000 00       		.space	1
 13453              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13454              		.set	.LANCHOR9,. + 0
 13457              	_ZZ16Update_feedbackLvE9lastShift:
 13458 0000 00       		.space	1
 13459              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 13460              		.align	2
 13461              		.set	.LANCHOR28,. + 0
 13464              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 13465 0000 00000000 		.space	4
 13466              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 13467              		.align	2
 13468              		.set	.LANCHOR25,. + 0
 13471              	_ZZ16Update_feedbackRvE13feedbackR_new:
 13472 0000 00000000 		.space	4
 13473              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13474              		.align	2
 13475              		.set	.LANCHOR24,. + 0
 13478              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13479 0000 00000000 		.space	4
 13480              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13481              		.set	.LANCHOR27,. + 0
 13484              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13485 0000 00       		.space	1
 13486              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13487              		.set	.LANCHOR23,. + 0
 13490              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13491 0000 00       		.space	1
 13492              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13493              		.set	.LANCHOR22,. + 0
 13496              	_ZZ16Update_feedbackRvE9lastShift:
 13497 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 394


 13498              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 13499              		.align	2
 13500              		.set	.LANCHOR90,. + 0
 13503              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 13504 0000 00000000 		.space	4
 13505              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 13506              		.align	2
 13507              		.set	.LANCHOR91,. + 0
 13510              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 13511 0000 00000000 		.space	4
 13512              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 13513              		.align	2
 13514              		.set	.LANCHOR93,. + 0
 13517              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 13518 0000 00000000 		.space	4
 13519              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13520              		.set	.LANCHOR89,. + 0
 13523              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13524 0000 00       		.space	1
 13525              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13526              		.set	.LANCHOR92,. + 0
 13529              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13530 0000 00       		.space	1
 13531              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13532              		.align	2
 13533              		.set	.LANCHOR87,. + 0
 13536              	_ZZ17Update_DelayTimeLvE8counterL:
 13537 0000 00000000 		.space	4
 13538              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13539              		.set	.LANCHOR88,. + 0
 13542              	_ZZ17Update_DelayTimeLvE9lastShift:
 13543 0000 00       		.space	1
 13544              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 13545              		.align	2
 13546              		.set	.LANCHOR85,. + 0
 13549              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 13550 0000 00000000 		.space	4
 13551              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 13552              		.align	2
 13553              		.set	.LANCHOR82,. + 0
 13556              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 13557 0000 00000000 		.space	4
 13558              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 13559              		.align	2
 13560              		.set	.LANCHOR83,. + 0
 13563              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 13564 0000 00000000 		.space	4
 13565              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13566              		.set	.LANCHOR84,. + 0
 13569              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13570 0000 00       		.space	1
 13571              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13572              		.set	.LANCHOR81,. + 0
 13575              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13576 0000 00       		.space	1
 13577              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13578              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 395


 13579              		.set	.LANCHOR79,. + 0
 13582              	_ZZ17Update_DelayTimeRvE8counterR:
 13583 0000 00000000 		.space	4
 13584              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13585              		.set	.LANCHOR80,. + 0
 13588              	_ZZ17Update_DelayTimeRvE9lastShift:
 13589 0000 00       		.space	1
 13590              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 13591              		.align	2
 13592              		.set	.LANCHOR64,. + 0
 13595              	_ZZ18Update_filterXfadevE15PostFilters_new:
 13596 0000 00000000 		.space	4
 13597              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 13598              		.align	2
 13599              		.set	.LANCHOR61,. + 0
 13602              	_ZZ18Update_filterXfadevE15filterXfade_new:
 13603 0000 00000000 		.space	4
 13604              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 13605              		.align	2
 13606              		.set	.LANCHOR66,. + 0
 13609              	_ZZ18Update_filterXfadevE16filterXfade_last:
 13610 0000 00000000 		.space	4
 13611              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 13612              		.set	.LANCHOR63,. + 0
 13615              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 13616 0000 00       		.space	1
 13617              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 13618              		.set	.LANCHOR60,. + 0
 13621              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 13622 0000 00       		.space	1
 13623              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 13624              		.set	.LANCHOR59,. + 0
 13627              	_ZZ18Update_filterXfadevE9lastShift:
 13628 0000 00       		.space	1
 13629              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 13630              		.align	2
 13631              		.set	.LANCHOR56,. + 0
 13634              	_ZZ20Update_crossfeedbackvE11modRate_new:
 13635 0000 00000000 		.space	4
 13636              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 13637              		.set	.LANCHOR55,. + 0
 13640              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 13641 0000 00       		.space	1
 13642              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 13643              		.align	2
 13644              		.set	.LANCHOR53,. + 0
 13647              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 13648 0000 00000000 		.space	4
 13649              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 13650              		.align	2
 13651              		.set	.LANCHOR57,. + 0
 13654              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 13655 0000 00000000 		.space	4
 13656              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 13657              		.set	.LANCHOR52,. + 0
 13660              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 13661 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 396


 13662              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 13663              		.set	.LANCHOR51,. + 0
 13666              	_ZZ20Update_crossfeedbackvE9lastShift:
 13667 0000 00       		.space	1
 13668              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13669              		.align	2
 13670              		.set	.LANCHOR129,. + 0
 13673              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13674 0000 00000000 		.space	4
 13675              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13676              		.align	2
 13677              		.set	.LANCHOR130,. + 0
 13680              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13681 0000 00000000 		.space	4
 13682              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13683              		.align	2
 13684              		.set	.LANCHOR115,. + 0
 13687              	_ZZL13AudioCallbackPfS_jE7Counter:
 13688 0000 00000000 		.space	4
 13689              		.section	.bss.crossfeedback,"aw",%nobits
 13690              		.align	2
 13691              		.set	.LANCHOR54,. + 0
 13694              	crossfeedback:
 13695 0000 00000000 		.space	4
 13696              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13697              		.align	2
 13700              	crossfeedback_CV:
 13701 0000 00000000 		.space	4
 13702              		.section	.bss.delayL,"aw",%nobits
 13703              		.align	2
 13704              		.set	.LANCHOR0,. + 0
 13707              	delayL:
 13708 0000 00000000 		.space	284
 13708      00000000 
 13708      00000000 
 13708      00000000 
 13708      00000000 
 13709              		.section	.bss.delayR,"aw",%nobits
 13710              		.align	2
 13711              		.set	.LANCHOR1,. + 0
 13714              	delayR:
 13715 0000 00000000 		.space	284
 13715      00000000 
 13715      00000000 
 13715      00000000 
 13715      00000000 
 13716              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13717              		.align	2
 13718              		.set	.LANCHOR5,. + 0
 13721              	delayTimeL_CV:
 13722 0000 00000000 		.space	4
 13723              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13724              		.align	2
 13725              		.set	.LANCHOR6,. + 0
 13728              	delayTimeR_CV:
 13729 0000 00000000 		.space	4
 13730              		.section	.bss.delaysL_REV,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 397


 13731              		.align	2
 13732              		.set	.LANCHOR2,. + 0
 13735              	delaysL_REV:
 13736 0000 00000000 		.space	8
 13736      00000000 
 13737              		.section	.bss.delaysR_REV,"aw",%nobits
 13738              		.align	2
 13739              		.set	.LANCHOR3,. + 0
 13742              	delaysR_REV:
 13743 0000 00000000 		.space	8
 13743      00000000 
 13744              		.section	.bss.div_L,"aw",%nobits
 13745              		.set	.LANCHOR75,. + 0
 13748              	div_L:
 13749 0000 00       		.space	1
 13750              		.section	.bss.div_R,"aw",%nobits
 13751              		.set	.LANCHOR76,. + 0
 13754              	div_R:
 13755 0000 00       		.space	1
 13756              		.section	.bss.drywet_CV,"aw",%nobits
 13757              		.align	2
 13758              		.set	.LANCHOR33,. + 0
 13761              	drywet_CV:
 13762 0000 00000000 		.space	4
 13763              		.section	.bss.feedbackL,"aw",%nobits
 13764              		.align	2
 13765              		.set	.LANCHOR13,. + 0
 13768              	feedbackL:
 13769 0000 00000000 		.space	4
 13770              		.section	.bss.feedbackL_CV,"aw",%nobits
 13771              		.align	2
 13772              		.set	.LANCHOR7,. + 0
 13775              	feedbackL_CV:
 13776 0000 00000000 		.space	4
 13777              		.section	.bss.feedbackR,"aw",%nobits
 13778              		.align	2
 13779              		.set	.LANCHOR26,. + 0
 13782              	feedbackR:
 13783 0000 00000000 		.space	4
 13784              		.section	.bss.feedbackR_CV,"aw",%nobits
 13785              		.align	2
 13786              		.set	.LANCHOR21,. + 0
 13789              	feedbackR_CV:
 13790 0000 00000000 		.space	4
 13791              		.section	.bss.filterXfade,"aw",%nobits
 13792              		.align	2
 13793              		.set	.LANCHOR62,. + 0
 13796              	filterXfade:
 13797 0000 00000000 		.space	4
 13798              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13799              		.align	2
 13800              		.set	.LANCHOR67,. + 0
 13803              	modulation_CV_Raw:
 13804 0000 00000000 		.space	4
 13805              		.section	.bss.mute,"aw",%nobits
 13806              		.set	.LANCHOR114,. + 0
 13809              	mute:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 398


 13810 0000 00       		.space	1
 13811              		.section	.bss.save_flag,"aw",%nobits
 13812              		.align	2
 13813              		.set	.LANCHOR116,. + 0
 13816              	save_flag:
 13817 0000 00       		.space	1
 13818              		.section	.bss.shift,"aw",%nobits
 13819              		.set	.LANCHOR8,. + 0
 13822              	shift:
 13823 0000 00       		.space	1
 13824              		.section	.bss.syncMode,"aw",%nobits
 13825              		.set	.LANCHOR74,. + 0
 13828              	syncMode:
 13829 0000 00       		.space	1
 13830              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13831              		.align	2
 13832              		.set	.LANCHOR72,. + 0
 13835              	tempoLED_BASE:
 13836 0000 00000000 		.space	68
 13836      00000000 
 13836      00000000 
 13836      00000000 
 13836      00000000 
 13837              		.section	.bss.width_CV,"aw",%nobits
 13838              		.align	2
 13839              		.set	.LANCHOR41,. + 0
 13842              	width_CV:
 13843 0000 00000000 		.space	4
 13844              		.section	.data.delayL_flag,"aw"
 13845              		.set	.LANCHOR77,. + 0
 13848              	delayL_flag:
 13849 0000 01       		.byte	1
 13850              		.section	.data.delayR_flag,"aw"
 13851              		.set	.LANCHOR78,. + 0
 13854              	delayR_flag:
 13855 0000 01       		.byte	1
 13856              		.section	.data.drywet,"aw"
 13857              		.align	2
 13858              		.set	.LANCHOR38,. + 0
 13861              	drywet:
 13862 0000 0000003F 		.word	1056964608
 13863              		.section	.data.width,"aw"
 13864              		.align	2
 13865              		.set	.LANCHOR46,. + 0
 13868              	width:
 13869 0000 0000803F 		.word	1065353216
 13870              		.section	.rodata.CSWTCH.335,"a"
 13871              		.align	2
 13872              		.set	.LANCHOR86,. + 0
 13875              	CSWTCH.335:
 13876 0000 0000C03F 		.word	1069547520
 13877 0004 00000040 		.word	1073741824
 13878 0008 00004040 		.word	1077936128
 13879              		.section	.rodata._ZL18defaultAltControls,"a"
 13880              		.align	2
 13881              		.set	.LANCHOR110,. + 0
 13884              	_ZL18defaultAltControls:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 399


 13885 0000 00650148 		.word	1208050944
 13886 0004 0000803F 		.word	1065353216
 13887 0008 00000000 		.word	0
 13888 000c 9A99A140 		.word	1084332442
 13889 0010 00004843 		.word	1128792064
 13890 0014 00803B46 		.word	1178304512
 13891 0018 00000000 		.word	0
 13892 001c 00000000 		.word	0
 13893              		.section	.sdram_bss,"aw"
 13894              		.align	2
 13897              	delMemsR_REV:
 13898 0000 00000000 		.space	2400040
 13898      00000000 
 13898      00000000 
 13898      00000000 
 13898      00000000 
 13901              	delMemsL_REV:
 13902 249f28 00000000 		.space	2400040
 13902      00000000 
 13902      00000000 
 13902      00000000 
 13902      00000000 
 13905              	delMemsR:
 13906 493e50 00000000 		.space	6912136
 13906      00000000 
 13906      00000000 
 13906      00000000 
 13906      00000000 
 13909              	delMemsL:
 13910 b2b6d8 00000000 		.space	6912136
 13910      00000000 
 13910      00000000 
 13910      00000000 
 13910      00000000 
 13911              		.text
 13912              	.Letext0:
 13913              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13914              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13915              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13916              		.file 30 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13917              		.file 31 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13918              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13919              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13920              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13921              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13922              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13923              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13924              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13925              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13926              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13927              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13928              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13929              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13930              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13931              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13932              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13933              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 400


 13934              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13935              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13936              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13937              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13938              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13939              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13940              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13941              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13942              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13943              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13944              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13945              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13946              		.file 60 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13947              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13948              		.file 62 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13949              		.file 63 "../libdaisy/src/daisy_core.h"
 13950              		.file 64 "../libdaisy/src/per/tim.h"
 13951              		.file 65 "../libdaisy/src/per/sai.h"
 13952              		.file 66 "../libdaisy/src/util/wav_format.h"
 13953              		.file 67 "../libdaisy/src/per/qspi.h"
 13954              		.file 68 "../libdaisy/src/per/gpio.h"
 13955              		.file 69 "../libdaisy/src/dev/sdram.h"
 13956              		.file 70 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13957              		.file 71 "<built-in>"
 13958              		.file 72 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13959              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13960              		.file 74 "../libdaisy/src/util/oled_fonts.h"
 13961              		.file 75 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13962              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13963              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13964              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13965              		.file 79 "../libdaisy/src/util/sd_diskio.h"
 13966              		.file 80 "../libdaisy/src/sys/fatfs.h"
 13967              		.file 81 "../DaisySP/Source/Control/adenv.h"
 13968              		.file 82 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13969              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13970              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13971              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13972              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13973              		.file 87 "QSPI_Settings.h"
 13974              		.file 88 "scale.h"
 13975              		.file 89 "constants.h"
 13976              		.file 90 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 401


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:303    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:337    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:376    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:401    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:426    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:434    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:998    .text._Z10InitDelaysf:000000000000018c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13909  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13905  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13901  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13897  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1024   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1032   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1057   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1063   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1071   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1096   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 402


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1102   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1110   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1135   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1141   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1149   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1567   .text._Z16Update_feedbackLv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1595   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1603   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1628   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1634   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:1642   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2064   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2092   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2100   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2125   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2131   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2139   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2611   .text._Z13Update_drywetv:00000000000001f0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2647   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2655   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2680   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2686   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:2694   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3118   .text._Z12Update_widthv:0000000000000180 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3143   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3151   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3477   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3496   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3504   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3802   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3824   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3832   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3862   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3870   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:3878   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4032   .text._Z10Update_Modv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4044   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4052   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4163   .text._Z11UpdateClockv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4178   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4186   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4268   .text._Z19Update_BaseTempoLEDv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4277   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4285   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 _Z11SetTempoDivfP9TempoDivs
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4505   .text._Z11SetTempoDivfP9TempoDivs:0000000000000108 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4522   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:4530   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5042   .text._Z17Update_DelayTimeRv:00000000000001dc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5067   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5075   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5702   .text._Z17Update_DelayTimeLv:0000000000000224 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5731   .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5739   .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5769   .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5774   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:5782   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:6479   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 403


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:6518   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:6526   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7404   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7438   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7808   .text.startup.main:00000000000005b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8499   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7826   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7834   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7896   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7907   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:7915   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8018   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8030   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8038   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8465   .text._Z14Update_Buttonsv:00000000000001b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8492   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8611   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8626   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8655   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:8666   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:9802   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:9858   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:10484  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:10506  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11261  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11298  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11623  .text._ZL13AudioCallbackPfS_j:0000000000000ca4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11634  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11642  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11676  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11684  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11731  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11736  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11744  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11828  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11833  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11841  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11931  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11936  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:11943  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12853  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000258 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12927  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12979  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12986  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12993  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13060  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13053  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13046  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13816  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13854  .data.delayR_flag:0000000000000000 delayR_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13848  .data.delayL_flag:0000000000000000 delayL_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13025  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12998  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13809  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13822  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13828  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13803  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 404


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13019  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13754  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13748  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13796  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13842  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13868  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13761  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13861  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13700  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13694  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13789  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13782  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13775  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13768  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13728  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13721  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13835  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13067  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13039  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13032  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13005  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13012  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13742  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13735  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13714  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13707  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12975  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12982  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12989  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:12999  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13001  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13008  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13015  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13026  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13028  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13035  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13042  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13049  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13056  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13063  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13070  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13074  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13077  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13081  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13084  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13088  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13091  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13095  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13098  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13102  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13105  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13109  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13112  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13116  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13119  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13123  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13126  .bss._ZL10LPF_RXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 405


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13130  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13133  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13137  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13140  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13144  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13147  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13151  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13154  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13158  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13161  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13165  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13168  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13172  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13175  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13179  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13182  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13186  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13189  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13193  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13196  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13200  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13203  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13207  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13210  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13214  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13217  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13221  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13224  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13228  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13231  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13235  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13238  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13242  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13245  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13249  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13252  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13256  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13259  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13263  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13266  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13270  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13273  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13277  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13280  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13284  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13287  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13291  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13294  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13298  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13301  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13305  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13308  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13312  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13315  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13319  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 _ZZ11UpdateClockvE10divCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13322  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13326  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 406


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13329  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13333  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13339  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13340  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13345  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13346  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13351  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13352  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13354  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13358  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13364  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13365  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13367  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13371  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13374  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13378  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13384  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13385  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13387  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13391  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13397  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13398  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13400  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13404  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13407  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13411  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13414  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13418  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13421  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13425  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13428  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13432  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13435  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13439  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13445  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13446  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13451  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13452  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13457  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13458  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13460  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13464  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13467  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13471  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13474  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13478  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13484  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13485  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13490  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13491  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13496  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13497  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13499  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13503  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13506  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13510  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13513  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 407


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13517  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13523  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13524  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13529  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13530  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13532  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13536  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13542  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13543  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13545  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13549  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13552  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13556  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13559  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13563  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13569  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13570  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13575  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13576  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13578  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13582  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13588  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13589  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13591  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13595  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13598  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13602  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13605  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13609  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13615  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13616  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13621  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13622  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13627  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13628  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13630  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13634  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13640  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13641  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13643  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13647  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13650  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13654  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13660  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13661  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13666  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13667  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13669  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13673  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13676  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13680  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13683  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13687  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13690  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13697  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13703  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13710  .bss.delayR:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 408


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13717  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13724  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13731  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13738  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13749  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13755  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13757  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13764  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13771  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13778  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13785  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13792  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13799  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13810  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13812  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13823  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13829  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13831  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13838  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13857  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13864  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13871  .rodata.CSWTCH.335:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13875  .rodata.CSWTCH.335:0000000000000000 CSWTCH.335
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13880  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13884  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s:13894  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZN10DelayMulti12SetDelayTimeEf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_Z5scalefff9CurveType
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN10DelayMulti13SetModulationERKf
_ZN5daisy6Switch8DebounceEv
_ZN8TempoLED10resetPhaseEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccctVb2K.s 			page 409


_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti16SetDelayTime_potEfb
_ZN8Taptempo11setTapRatioEf
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
