ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB890:
  61              	.LBI890:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE890:
  66              	.LBB891:
  67              	.LBI891:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE891:
  72              	.LBB892:
  73              	.LBI892:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE892:
  78              	.LBB893:
  79              	.LBI893:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE893:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 14


  41:taptempo.h    **** 
  42:taptempo.h    ****     public:
  43:taptempo.h    **** 
  44:taptempo.h    ****     Taptempo()  //default constructor
  45:taptempo.h    ****     {
  46:taptempo.h    ****         tapflag_ = false;
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
  48:taptempo.h    ****         maxtap_ = 2000000;
  49:taptempo.h    ****         mintap_ = 80000;
  50:taptempo.h    ****         lastTapLength_ = 0;
  51:taptempo.h    ****         tempo_ = 500000.0f;
  52:taptempo.h    ****         lastTime_ = 0;
  53:taptempo.h    ****         currentTime_ = 0;
  54:taptempo.h    ****         tapRatio_ = 1.0f;
  55:taptempo.h    ****         clockLength_ = 0;
  56:taptempo.h    ****         lastClockLength_ = 0;
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
  58:taptempo.h    ****     }
  59:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 59 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 59 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 15


  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB894:
 285              	.LBI894:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 16


 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE894:
 290              	.LBB895:
 291              	.LBI895:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE895:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 17


  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB896:
 321              	.LBI896:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE896:
 325              	.LBB897:
 326              	.LBI897:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE897:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 18


 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB898:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 19


 356              	.LBI898:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB899:
 359              	.LBI899:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE899:
 363              	.LBB900:
 364              	.LBI900:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE900:
 368              	.LBE898:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4914:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 20


  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4914:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4917:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 21


   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4917:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 22


   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 23


  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 24


 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** float CLOCK_DEBUG;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 151:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static Adsr LPF_Env;
 154:Veno-Echo.cpp **** static Adsr HPF_Env;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 157:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 158:Veno-Echo.cpp **** 
 159:Veno-Echo.cpp **** static CrossFade WidthXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 168:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 169:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 170:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 171:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 172:Veno-Echo.cpp **** 
 173:Veno-Echo.cpp **** //cross fades for manual filter crossfading
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 25


 174:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 178:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 179:Veno-Echo.cpp **** 
 180:Veno-Echo.cpp **** //Gate inputs
 181:Veno-Echo.cpp **** Switch ReverseGateL;
 182:Veno-Echo.cpp **** Switch ReverseGateR;
 183:Veno-Echo.cpp **** 
 184:Veno-Echo.cpp **** //Switch TapButton;
 185:Veno-Echo.cpp **** Switch Sync;
 186:Veno-Echo.cpp **** Switch ClockIn;
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** //Tap tempo
 189:Veno-Echo.cpp **** Taptempo BaseTempo; 
 190:Veno-Echo.cpp **** 
 191:Veno-Echo.cpp **** Settings AltControls;
 192:Veno-Echo.cpp **** 
 193:Veno-Echo.cpp **** //default alt control values
 194:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 195:Veno-Echo.cpp **** {
 196:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 197:Veno-Echo.cpp ****     1.0f,   //tapRatio
 198:Veno-Echo.cpp ****     0.0f,   //ModDepth
 199:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 200:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 201:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 202:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 203:Veno-Echo.cpp ****     0.0f,    //filter prepost
 204:Veno-Echo.cpp ****     500000.0f,     //base tempo (in us)
 205:Veno-Echo.cpp ****     0.0f,       //L_Rev
 206:Veno-Echo.cpp ****     0.0f    //R_Rev
 207:Veno-Echo.cpp **** };
 208:Veno-Echo.cpp **** 
 209:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 210:Veno-Echo.cpp **** void Update_DelayTimeL();
 211:Veno-Echo.cpp **** 
 212:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 213:Veno-Echo.cpp **** void Update_DelayTimeR();
 214:Veno-Echo.cpp **** 
 215:Veno-Echo.cpp **** void Update_feedbackL_CV();
 216:Veno-Echo.cpp **** void Update_feedbackL();
 217:Veno-Echo.cpp **** 
 218:Veno-Echo.cpp **** void Update_feedbackR_CV();
 219:Veno-Echo.cpp **** void Update_feedbackR();
 220:Veno-Echo.cpp **** 
 221:Veno-Echo.cpp **** void Update_drywet_CV();
 222:Veno-Echo.cpp **** void Update_drywet();
 223:Veno-Echo.cpp **** 
 224:Veno-Echo.cpp **** void Update_width_CV();
 225:Veno-Echo.cpp **** void Update_width();
 226:Veno-Echo.cpp **** 
 227:Veno-Echo.cpp **** void Update_crossfeedback();
 228:Veno-Echo.cpp **** void Update_filterXfade();
 229:Veno-Echo.cpp **** 
 230:Veno-Echo.cpp **** void Update_Buttons();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 26


 231:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 232:Veno-Echo.cpp **** void Update_BaseTempoLED();
 233:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 234:Veno-Echo.cpp **** void Update_Mod();
 235:Veno-Echo.cpp **** void GetModCV();
 236:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 237:Veno-Echo.cpp **** void UpdateClock();
 238:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 239:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 240:Veno-Echo.cpp **** void TurnOnAllLEDs();
 241:Veno-Echo.cpp **** void ResetAllLEDs();
 242:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 243:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 244:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 245:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 246:Veno-Echo.cpp **** 
 247:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 248:Veno-Echo.cpp **** {
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** /*
 251:Veno-Echo.cpp **** static uint32_t funcLength{};
 252:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 253:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 254:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 255:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 256:Veno-Echo.cpp **** 
 257:Veno-Echo.cpp **** */
 258:Veno-Echo.cpp **** 
 259:Veno-Echo.cpp **** static int Counter{};
 260:Veno-Echo.cpp **** 
 261:Veno-Echo.cpp **** /*
 262:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 265:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 266:Veno-Echo.cpp ****     {
 267:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 268:Veno-Echo.cpp ****     }
 269:Veno-Echo.cpp **** 
 270:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 271:Veno-Echo.cpp ****     {
 272:Veno-Echo.cpp ****         minFuncLength = funcLength;
 273:Veno-Echo.cpp ****     }
 274:Veno-Echo.cpp **** 
 275:Veno-Echo.cpp **** */
 276:Veno-Echo.cpp **** 
 277:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 278:Veno-Echo.cpp **** 
 279:Veno-Echo.cpp ****     /*
 280:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 281:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 282:Veno-Echo.cpp ****         //init timeofCall as current time
 283:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 284:Veno-Echo.cpp **** 
 285:Veno-Echo.cpp ****         //wait for random Dither time
 286:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 287:Veno-Echo.cpp ****         {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 27


 288:Veno-Echo.cpp ****     */
 289:Veno-Echo.cpp **** 
 290:Veno-Echo.cpp ****         switch (Counter)
 291:Veno-Echo.cpp ****         {
 292:Veno-Echo.cpp ****             case 0:
 293:Veno-Echo.cpp ****                 Update_Buttons();
 294:Veno-Echo.cpp ****                 GetModCV();
 295:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 296:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 297:Veno-Echo.cpp ****             break;
 298:Veno-Echo.cpp **** 
 299:Veno-Echo.cpp ****             case 1:
 300:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 301:Veno-Echo.cpp ****             break;
 302:Veno-Echo.cpp **** 
 303:Veno-Echo.cpp ****             case 2:
 304:Veno-Echo.cpp ****                 if(saveState != SAVING)
 305:Veno-Echo.cpp ****                 {
 306:Veno-Echo.cpp ****                     Update_DelayTimeL();
 307:Veno-Echo.cpp ****                 }
 308:Veno-Echo.cpp ****             break;
 309:Veno-Echo.cpp **** 
 310:Veno-Echo.cpp ****             case 3:
 311:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 312:Veno-Echo.cpp ****             break;
 313:Veno-Echo.cpp **** 
 314:Veno-Echo.cpp ****             case 4:
 315:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 316:Veno-Echo.cpp ****                 {
 317:Veno-Echo.cpp ****                     Update_DelayTimeR();
 318:Veno-Echo.cpp ****                 }
 319:Veno-Echo.cpp ****             break;
 320:Veno-Echo.cpp **** 
 321:Veno-Echo.cpp ****             case 5:
 322:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 323:Veno-Echo.cpp ****             break;
 324:Veno-Echo.cpp **** 
 325:Veno-Echo.cpp ****             case 6:
 326:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 327:Veno-Echo.cpp ****                 {
 328:Veno-Echo.cpp ****                     Update_feedbackL();
 329:Veno-Echo.cpp ****                 }
 330:Veno-Echo.cpp ****             break;
 331:Veno-Echo.cpp **** 
 332:Veno-Echo.cpp ****             case 7:
 333:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 334:Veno-Echo.cpp ****             break;
 335:Veno-Echo.cpp **** 
 336:Veno-Echo.cpp ****             case 8:
 337:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 338:Veno-Echo.cpp ****                 {
 339:Veno-Echo.cpp ****                     Update_feedbackR();
 340:Veno-Echo.cpp ****                 }
 341:Veno-Echo.cpp ****             break;
 342:Veno-Echo.cpp **** 
 343:Veno-Echo.cpp ****             case 9:
 344:Veno-Echo.cpp ****                 Update_drywet_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 28


 345:Veno-Echo.cpp ****             break;
 346:Veno-Echo.cpp **** 
 347:Veno-Echo.cpp ****             case 10:
 348:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 349:Veno-Echo.cpp ****                 {
 350:Veno-Echo.cpp ****                     Update_drywet();
 351:Veno-Echo.cpp ****                 }
 352:Veno-Echo.cpp ****             break;
 353:Veno-Echo.cpp **** 
 354:Veno-Echo.cpp ****             case 11:
 355:Veno-Echo.cpp ****                 Update_width_CV();
 356:Veno-Echo.cpp ****             break;
 357:Veno-Echo.cpp **** 
 358:Veno-Echo.cpp ****             case 12:
 359:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 360:Veno-Echo.cpp ****                 {
 361:Veno-Echo.cpp ****                     Update_width();
 362:Veno-Echo.cpp ****                 }
 363:Veno-Echo.cpp ****             break;
 364:Veno-Echo.cpp **** 
 365:Veno-Echo.cpp ****             case 13:
 366:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 367:Veno-Echo.cpp ****                 {
 368:Veno-Echo.cpp ****                     Update_crossfeedback();
 369:Veno-Echo.cpp ****                 }
 370:Veno-Echo.cpp ****             break;
 371:Veno-Echo.cpp **** 
 372:Veno-Echo.cpp ****             case 14:
 373:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 374:Veno-Echo.cpp ****                 {
 375:Veno-Echo.cpp ****                     Update_filterXfade();
 376:Veno-Echo.cpp ****                 }
 377:Veno-Echo.cpp ****             break;
 378:Veno-Echo.cpp ****         }
 379:Veno-Echo.cpp **** 
 380:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 381:Veno-Echo.cpp ****     {   
 382:Veno-Echo.cpp ****         UpdateClock(); 
 383:Veno-Echo.cpp ****         Update_Mod();
 384:Veno-Echo.cpp **** 
 385:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 386:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 387:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 388:Veno-Echo.cpp ****         
 389:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 390:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 391:Veno-Echo.cpp **** 
 392:Veno-Echo.cpp ****         //set xfade positions      
 393:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 394:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 395:Veno-Echo.cpp ****         
 396:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 397:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 398:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 399:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 400:Veno-Echo.cpp **** 
 401:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 29


 402:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 403:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 404:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 405:Veno-Echo.cpp **** 
 406:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 407:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 408:Veno-Echo.cpp **** 
 409:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 410:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 411:Veno-Echo.cpp **** 
 412:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 413:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 414:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 415:Veno-Echo.cpp **** 
 416:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 417:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 418:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 419:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 420:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 421:Veno-Echo.cpp **** 
 422:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 423:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 424:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 425:Veno-Echo.cpp **** 
 426:Veno-Echo.cpp ****         //Get combined output from all delay heads
 427:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 428:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 429:Veno-Echo.cpp **** 
 430:Veno-Echo.cpp ****         //Update Base Tempo LED
 431:Veno-Echo.cpp ****         Update_BaseTempoLED();
 432:Veno-Echo.cpp **** 
 433:Veno-Echo.cpp ****         //hard limit
 434:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 435:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp **** if(!PostFilters)
 438:Veno-Echo.cpp **** {
 439:Veno-Echo.cpp **** //****************************************************************************************
 440:Veno-Echo.cpp ****         //pre filters
 441:Veno-Echo.cpp ****         //process LPF
 442:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 443:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 444:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 445:Veno-Echo.cpp **** 
 446:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 447:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 448:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 449:Veno-Echo.cpp ****         
 450:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 451:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 452:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 453:Veno-Echo.cpp **** 
 454:Veno-Echo.cpp ****         //hard limit
 455:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 456:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 457:Veno-Echo.cpp **** 
 458:Veno-Echo.cpp ****         //process HPF
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 30


 459:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 460:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 461:Veno-Echo.cpp **** 
 462:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 463:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 464:Veno-Echo.cpp **** 
 465:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 466:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 469:Veno-Echo.cpp **** 
 470:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 471:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 472:Veno-Echo.cpp **** 
 473:Veno-Echo.cpp **** //****************************************************************************************
 474:Veno-Echo.cpp **** }
 475:Veno-Echo.cpp **** 
 476:Veno-Echo.cpp **** else
 477:Veno-Echo.cpp **** {
 478:Veno-Echo.cpp ****     /* code */
 479:Veno-Echo.cpp **** }
 480:Veno-Echo.cpp **** 
 481:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 482:Veno-Echo.cpp ****         static float RNegFB{};
 483:Veno-Echo.cpp **** 
 484:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 485:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 486:Veno-Echo.cpp ****             LNegFB = 0.0f;
 487:Veno-Echo.cpp ****         
 488:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 489:Veno-Echo.cpp ****             RNegFB = 0.0f;
 490:Veno-Echo.cpp **** 
 491:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 492:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 493:Veno-Echo.cpp **** 
 494:Veno-Echo.cpp ****         //crossfeedback:
 495:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 496:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 497:Veno-Echo.cpp **** 
 498:Veno-Echo.cpp **** 
 499:Veno-Echo.cpp ****         //get envelopes for feedback signals
 500:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 501:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 502:Veno-Echo.cpp **** 
 503:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 504:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 505:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 506:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 507:Veno-Echo.cpp ****             else LNegFB = 0.0;
 508:Veno-Echo.cpp ****             
 509:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 510:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 511:Veno-Echo.cpp ****             else RNegFB = 0.0;
 512:Veno-Echo.cpp **** 
 513:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 514:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 515:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 31


 516:Veno-Echo.cpp ****  
 517:Veno-Echo.cpp ****         //hard limit
 518:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 519:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 520:Veno-Echo.cpp **** 
 521:Veno-Echo.cpp ****         //delayL.Write( DcBlock_LFB.Process(combinedL ) );
 522:Veno-Echo.cpp ****         //delayR.Write( DcBlock_RFB.Process(combinedR ) );
 523:Veno-Echo.cpp **** 
 524:Veno-Echo.cpp ****         delayL.Write(combinedL);
 525:Veno-Echo.cpp ****         delayR.Write(combinedR);
 526:Veno-Echo.cpp **** 
 527:Veno-Echo.cpp ****         // floats for wet dry mix
 528:Veno-Echo.cpp ****         float mixL;
 529:Veno-Echo.cpp ****         float mixR;
 530:Veno-Echo.cpp **** 
 531:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 532:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp ****         //hard limit
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 537:Veno-Echo.cpp **** 
 538:Veno-Echo.cpp **** if(PostFilters)
 539:Veno-Echo.cpp **** {
 540:Veno-Echo.cpp ****     //****************************************************************************************
 541:Veno-Echo.cpp ****         //post filters
 542:Veno-Echo.cpp ****         //process LPF
 543:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 544:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 545:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 546:Veno-Echo.cpp **** 
 547:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 548:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 549:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 550:Veno-Echo.cpp ****         
 551:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 552:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 554:Veno-Echo.cpp **** 
 555:Veno-Echo.cpp ****         //hard limit
 556:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 557:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 558:Veno-Echo.cpp **** 
 559:Veno-Echo.cpp ****         //process HPF
 560:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 561:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 562:Veno-Echo.cpp **** 
 563:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 564:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 565:Veno-Echo.cpp **** 
 566:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 568:Veno-Echo.cpp **** 
 569:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 570:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 571:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 572:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 32


 573:Veno-Echo.cpp ****     //****************************************************************************************
 574:Veno-Echo.cpp **** }
 575:Veno-Echo.cpp **** else
 576:Veno-Echo.cpp **** {
 577:Veno-Echo.cpp ****     /* code */
 578:Veno-Echo.cpp **** }
 579:Veno-Echo.cpp ****         if(drywet < 0.5f)
 580:Veno-Echo.cpp ****         {
 581:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 582:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 583:Veno-Echo.cpp ****         }
 584:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 585:Veno-Echo.cpp ****         {
 586:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 588:Veno-Echo.cpp ****         }
 589:Veno-Echo.cpp ****         else
 590:Veno-Echo.cpp ****         {
 591:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 592:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 593:Veno-Echo.cpp ****         }
 594:Veno-Echo.cpp **** 
 595:Veno-Echo.cpp ****         //send mixes to outputs
 596:Veno-Echo.cpp ****         if(mute)
 597:Veno-Echo.cpp ****         {
 598:Veno-Echo.cpp ****             out[i] = 0.0f;
 599:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 600:Veno-Echo.cpp ****         }
 601:Veno-Echo.cpp ****         else
 602:Veno-Echo.cpp ****         {
 603:Veno-Echo.cpp ****             out[i] = mixL;
 604:Veno-Echo.cpp ****             out[i+1] = mixR;
 605:Veno-Echo.cpp ****         }
 606:Veno-Echo.cpp **** 
 607:Veno-Echo.cpp ****         //write to DAC for debug
 608:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp ****     }
 611:Veno-Echo.cpp **** 
 612:Veno-Echo.cpp **** }
 613:Veno-Echo.cpp **** 
 614:Veno-Echo.cpp **** void InitDelays(float samplerate)
 615:Veno-Echo.cpp **** {
 439              		.loc 20 615 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 616:Veno-Echo.cpp **** 
 617:Veno-Echo.cpp ****     //Init fwd delays
 618:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 618 5 view .LVU50
 444              	.LBB901:
 445              	.LBI901:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 33


 446              		.loc 18 56 10 view .LVU51
 447              	.LBB902:
 448              	.LBB903:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE903:
 453              	.LBE902:
 454              	.LBE901:
 615:Veno-Echo.cpp **** 
 455              		.loc 20 615 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB908:
 470              	.LBB907:
 471              	.LBB904:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE904:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB905:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE905:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 34


 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB906:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE906:
 525              	.LBE907:
 526              	.LBE908:
 527              	.LBB909:
 528              	.LBB910:
 529              	.LBB911:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 35


 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE911:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB912:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE912:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB913:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE913:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 36


 576              	.LBE910:
 577              	.LBE909:
 619:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 620:Veno-Echo.cpp **** 
 621:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 622:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 622 5 is_stmt 1 view .LVU91
 623:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 623 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 624:Veno-Echo.cpp **** 
 625:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 625 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 622:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 622 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 623:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 623 5 is_stmt 1 view .LVU95
 588              	.LBB914:
 589              	.LBB915:
 590              	.LBB916:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE916:
 594              	.LBE915:
 595              	.LBE914:
 623:Veno-Echo.cpp **** 
 596              		.loc 20 623 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 625 5 is_stmt 1 view .LVU98
 599              		.loc 20 625 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 625 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 626:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 37


 610              		.loc 20 626 5 is_stmt 1 view .LVU101
 611              		.loc 20 626 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB928:
 618              	.LBB923:
 619              	.LBB918:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE918:
 623              	.LBE923:
 624              	.LBE928:
 625              		.loc 20 626 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 627:Veno-Echo.cpp **** 
 628:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 629:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 630:Veno-Echo.cpp **** 
 631:Veno-Echo.cpp ****     //Init rev delays
 632:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 632 5 is_stmt 1 view .LVU105
 632              	.LBB929:
 633              	.LBI914:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB924:
 636              	.LBI915:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB919:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB917:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 38


 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE917:
 660              	.LBE919:
 661              	.LBE924:
 662              	.LBE929:
 663              	.LBB930:
 664              	.LBB931:
 665              	.LBB932:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE932:
 675              	.LBE931:
 676              	.LBE930:
 677              	.LBB955:
 678              	.LBB925:
 679              	.LBB920:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE920:
 683              	.LBE925:
 684              	.LBE955:
 685              	.LBB956:
 686              	.LBB945:
 687              	.LBB935:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE935:
 691              	.LBE945:
 692              	.LBE956:
 693              	.LBB957:
 694              	.LBB926:
 695              	.LBB921:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 39


  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE921:
 714              	.LBE926:
 715              	.LBE957:
 633:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 633 5 is_stmt 1 view .LVU128
 717              	.LBB958:
 718              	.LBI930:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB946:
 721              	.LBI931:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB936:
 724              	.LBB933:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE933:
 727              	.LBE936:
 728              	.LBE946:
 729              	.LBE958:
 730              	.LBB959:
 731              	.LBB927:
 732              	.LBB922:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE922:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 40


 742              	.LBE927:
 743              	.LBE959:
 744              	.LBB960:
 745              	.LBB947:
 746              	.LBB937:
 747              	.LBB934:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE934:
 756              	.LBE937:
 757              	.LBE947:
 758              	.LBE960:
 634:Veno-Echo.cpp **** 
 635:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 636:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 636 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB961:
 762              	.LBB948:
 763              	.LBB938:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE938:
 767              	.LBE948:
 768              	.LBE961:
 769              	.LBB962:
 770              	.LBB963:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE963:
 780              	.LBE962:
 781              	.LBB977:
 782              	.LBB949:
 783              	.LBB939:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE939:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 41


 787              	.LBE949:
 788              	.LBE977:
 789              	.LBB978:
 790              	.LBB972:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE972:
 794              	.LBE978:
 795              	.LBB979:
 796              	.LBB950:
 797              	.LBB940:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE940:
 803              	.LBE950:
 804              	.LBE979:
 805              	.LBB980:
 806              	.LBB973:
 807              	.LBB964:
 808              	.LBB965:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 42


  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE965:
 813              	.LBE964:
 814              	.LBE973:
 815              	.LBE980:
 816              	.LBB981:
 817              	.LBB951:
 818              	.LBB941:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 43


 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE941:
 826              	.LBE951:
 827              	.LBE981:
 828              	.LBB982:
 829              	.LBB974:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE974:
 833              	.LBE982:
 834              	.LBB983:
 835              	.LBB952:
 836              	.LBB942:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE942:
 842              	.LBE952:
 843              	.LBE983:
 844              		.loc 20 636 5 is_stmt 1 view .LVU155
 637:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 637 5 view .LVU156
 636:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 636 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB984:
 849              	.LBB953:
 850              	.LBB943:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE943:
 854              	.LBE953:
 855              	.LBE984:
 856              	.LBB985:
 857              	.LBB975:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE975:
 861              	.LBE985:
 862              	.LBB986:
 863              	.LBB954:
 864              	.LBB944:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE944:
 868              	.LBE954:
 869              	.LBE986:
 870              		.loc 20 637 21 view .LVU161
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 44


 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 638:Veno-Echo.cpp **** 
 639:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 640:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 640 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB987:
 876              	.LBI962:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB976:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB967:
 881              	.LBI964:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB966:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE966:
 887              	.LBE967:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB968:
 892              	.LBB969:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE969:
 896              	.LBE968:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB971:
 902              	.LBI968:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB970:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 45


 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE970:
 913              	.LBE971:
 914              	.LBE976:
 915              	.LBE987:
 641:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 641 5 is_stmt 1 view .LVU177
 917              	.LBB988:
 918              	.LBI988:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB989:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB990:
 926              	.LBI990:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB991:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE991:
 932              	.LBE990:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB993:
 942              	.LBB992:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE992:
 946              	.LBE993:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB994:
 953              	.LBB995:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 46


  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE995:
 959              	.LBE994:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB997:
 965              	.LBI994:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB996:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE996:
 976              	.LBE997:
 977              	.LBE989:
 978              	.LBE988:
 642:Veno-Echo.cpp **** 
 643:Veno-Echo.cpp **** }
 979              		.loc 20 643 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 47


 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 644:Veno-Echo.cpp **** 
 645:Veno-Echo.cpp **** int main(void)
 646:Veno-Echo.cpp **** {
 647:Veno-Echo.cpp ****     // initialize hardware.
 648:Veno-Echo.cpp ****     hw.Configure();
 649:Veno-Echo.cpp ****     hw.Init();
 650:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 651:Veno-Echo.cpp ****     
 652:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 653:Veno-Echo.cpp **** 
 654:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 659:Veno-Echo.cpp **** 
 660:Veno-Echo.cpp ****     //Gates
 661:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 663:Veno-Echo.cpp **** 
 664:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 665:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 666:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 667:Veno-Echo.cpp ****     
 668:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 669:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 673:Veno-Echo.cpp **** 
 674:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 678:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 679:Veno-Echo.cpp **** 
 680:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 684:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 48


 685:Veno-Echo.cpp **** 
 686:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 690:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 691:Veno-Echo.cpp **** 
 692:Veno-Echo.cpp ****     // set params for CrossFade objects
 693:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 694:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 695:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 696:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 697:Veno-Echo.cpp **** 
 698:Veno-Echo.cpp ****     WidthXfade.Init();
 699:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 700:Veno-Echo.cpp **** 
 701:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 702:Veno-Echo.cpp **** 
 703:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 704:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 705:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 706:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 707:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 708:Veno-Echo.cpp **** 
 709:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 710:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 711:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 712:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 713:Veno-Echo.cpp **** 
 714:Veno-Echo.cpp ****     //setup L and R High Pass filters
 715:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 716:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 717:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 718:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 721:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 722:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 723:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 724:Veno-Echo.cpp **** 
 725:Veno-Echo.cpp ****     //post filters
 726:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 727:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 728:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 729:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 730:Veno-Echo.cpp **** 
 731:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 732:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 733:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 734:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****     //setup L and R High Pass filters
 737:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 738:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 739:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 740:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 741:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 49


 742:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 743:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 744:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 745:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 746:Veno-Echo.cpp **** 
 747:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 748:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 749:Veno-Echo.cpp **** 
 750:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 751:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 752:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 753:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 754:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 755:Veno-Echo.cpp **** 
 756:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f);  //max 6 second tap
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp ****     //setup tempo indicators
 759:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 760:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 761:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 762:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 763:Veno-Echo.cpp **** 
 764:Veno-Echo.cpp ****     //load settings from flash
 765:Veno-Echo.cpp **** 
 766:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 767:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 768:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 769:Veno-Echo.cpp **** 
 770:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 771:Veno-Echo.cpp ****     AltControls = SavedSettings;
 772:Veno-Echo.cpp **** 
 773:Veno-Echo.cpp ****     //initialize DAC
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp ****    //ADC
 776:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 777:Veno-Echo.cpp **** 
 778:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 779:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 780:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 781:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 782:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 783:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 784:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 785:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 786:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 787:Veno-Echo.cpp **** 
 788:Veno-Echo.cpp **** 
 789:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 790:Veno-Echo.cpp ****     hw.adc.Start();
 791:Veno-Echo.cpp **** 
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 794:Veno-Echo.cpp ****     // start audio callback
 795:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 796:Veno-Echo.cpp **** 
 797:Veno-Echo.cpp ****     
 798:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 50


 799:Veno-Echo.cpp ****      for(;;)
 800:Veno-Echo.cpp ****      {  
 801:Veno-Echo.cpp **** 
 802:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 803:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 804:Veno-Echo.cpp ****        
 805:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 806:Veno-Echo.cpp ****         {
 807:Veno-Echo.cpp ****             save_flag = false;
 808:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 809:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 810:Veno-Echo.cpp ****         }
 811:Veno-Echo.cpp ****         
 812:Veno-Echo.cpp ****         else    //save flag not set
 813:Veno-Echo.cpp ****         {
 814:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 815:Veno-Echo.cpp ****            {
 816:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 817:Veno-Echo.cpp ****                 {
 818:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 819:Veno-Echo.cpp ****                     
 820:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 821:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 822:Veno-Echo.cpp ****                     {
 823:Veno-Echo.cpp ****                     }
 824:Veno-Echo.cpp ****                 }
 825:Veno-Echo.cpp **** 
 826:Veno-Echo.cpp ****                 else{} //still waiting
 827:Veno-Echo.cpp **** 
 828:Veno-Echo.cpp ****            }
 829:Veno-Echo.cpp **** 
 830:Veno-Echo.cpp ****            if(saveState == SAVING)
 831:Veno-Echo.cpp ****            {
 832:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 833:Veno-Echo.cpp ****             {
 834:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 835:Veno-Echo.cpp ****             }
 836:Veno-Echo.cpp ****             else{} //ADCs paused
 837:Veno-Echo.cpp **** 
 838:Veno-Echo.cpp ****            }
 839:Veno-Echo.cpp **** 
 840:Veno-Echo.cpp ****            else //IDLE - do nothing
 841:Veno-Echo.cpp ****            {
 842:Veno-Echo.cpp ****            }
 843:Veno-Echo.cpp ****         }
 844:Veno-Echo.cpp **** 
 845:Veno-Echo.cpp ****      }
 846:Veno-Echo.cpp **** 
 847:Veno-Echo.cpp **** }
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 850:Veno-Echo.cpp **** {
 1022              		.loc 20 850 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 851:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 51


 1026              		.loc 20 851 5 view .LVU201
 850:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 850 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 851 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 851 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 852:Veno-Echo.cpp **** }
 1040              		.loc 20 852 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 853:Veno-Echo.cpp **** 
 854:Veno-Echo.cpp **** void Update_DelayTimeL()
 855:Veno-Echo.cpp **** {
 1061              		.loc 20 855 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 856:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 856 5 view .LVU207
 857:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 857 5 view .LVU208
 858:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 858 5 view .LVU209
 859:Veno-Echo.cpp ****     
 860:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 860 5 view .LVU210
 861:Veno-Echo.cpp **** 
 862:Veno-Echo.cpp ****     //update pot values
 863:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 863 5 view .LVU211
 855:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 855 1 is_stmt 0 view .LVU212
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 52


 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 863 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7648     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 864:Veno-Echo.cpp **** 
 865:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 866:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 867:Veno-Echo.cpp ****     static int counterL{};
 868:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 868 26 view .LVU214
 1082 000c 7549     		ldr	r1, .L75+4
 1083              		.loc 20 868 31 view .LVU215
 1084 000e 764B     		ldr	r3, .L75+8
 1085              	.LVL41:
 867:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 867 5 is_stmt 1 view .LVU216
 1087              		.loc 20 868 5 view .LVU217
 1088              		.loc 20 868 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB998:
 869:Veno-Echo.cpp **** 
 870:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 870 9 view .LVU219
 1092 0012 7648     		ldr	r0, .L75+12
 1093              	.LBE998:
 868:Veno-Echo.cpp **** 
 1094              		.loc 20 868 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB1071:
 1097              		.loc 20 870 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE1071:
 868:Veno-Echo.cpp **** 
 1100              		.loc 20 868 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB1072:
 1107              	.LBB999:
 871:Veno-Echo.cpp ****     {
 872:Veno-Echo.cpp ****         static float delayTimeL_new{};
 873:Veno-Echo.cpp ****         //udpate pickup
 874:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 874 19 view .LVU223
 1109 002a 714A     		ldr	r2, .L75+16
 1110              	.LBE999:
 1111              	.LBE1072:
 868:Veno-Echo.cpp **** 
 1112              		.loc 20 868 14 view .LVU224
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 53


 1113 002c 0B60     		str	r3, [r1]
 870:Veno-Echo.cpp ****     {
 1114              		.loc 20 870 5 is_stmt 1 view .LVU225
 1115              	.LBB1073:
 1116 002e 80BB     		cbnz	r0, .L43
 1117              	.LBB1018:
 872:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 872 9 view .LVU226
 1119              		.loc 20 874 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 875:Veno-Echo.cpp ****         {
 876:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 876 13 view .LVU228
 877:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 877 31 is_stmt 0 view .LVU229
 1125 0036 6F4C     		ldr	r4, .L75+20
 878:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 878 28 view .LVU230
 1127 0038 6F49     		ldr	r1, .L75+24
 876:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 876 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 877:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 877 13 is_stmt 1 view .LVU232
 877:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 877 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 878 13 is_stmt 1 view .LVU234
 1134              		.loc 20 878 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
 879:Veno-Echo.cpp ****         } 
 880:Veno-Echo.cpp ****         else    //not a recent shift change
 881:Veno-Echo.cpp ****         {
 882:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 883:Veno-Echo.cpp ****             {
 884:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 885:Veno-Echo.cpp ****                 {
 886:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 887:Veno-Echo.cpp ****                 }
 888:Veno-Echo.cpp ****             }
 889:Veno-Echo.cpp ****         }
 890:Veno-Echo.cpp **** 
 891:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 891 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 892:Veno-Echo.cpp **** 
 893:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 893 9 view .LVU237
 894:Veno-Echo.cpp ****         {
 895:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 896:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 897:Veno-Echo.cpp ****         }
 898:Veno-Echo.cpp **** 
 899:Veno-Echo.cpp ****         else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 54


 900:Veno-Echo.cpp ****         {
 901:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 901 13 view .LVU238
 1141              	.LBB1000:
 1142              	.LBI1000:
 902:Veno-Echo.cpp ****         }
 903:Veno-Echo.cpp **** 
 904:Veno-Echo.cpp ****         if(counterL == 0)
 905:Veno-Echo.cpp ****         {
 906:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 907:Veno-Echo.cpp ****             {
 908:Veno-Echo.cpp ****             };
 909:Veno-Echo.cpp ****         }
 910:Veno-Echo.cpp **** 
 911:Veno-Echo.cpp ****     }   //not shift mode
 912:Veno-Echo.cpp **** 
 913:Veno-Echo.cpp ****     else    //shift mode
 914:Veno-Echo.cpp ****     {
 915:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 916:Veno-Echo.cpp **** 
 917:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 918:Veno-Echo.cpp ****         {
 919:Veno-Echo.cpp ****             lastShift = shift;
 920:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 921:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 922:Veno-Echo.cpp ****         }
 923:Veno-Echo.cpp **** 
 924:Veno-Echo.cpp ****         else    //not a recent shift change
 925:Veno-Echo.cpp ****         {
 926:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 927:Veno-Echo.cpp ****             {
 928:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 929:Veno-Echo.cpp ****                 {
 930:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 931:Veno-Echo.cpp ****                 }
 932:Veno-Echo.cpp ****             }
 933:Veno-Echo.cpp ****         }
 934:Veno-Echo.cpp **** 
 935:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 936:Veno-Echo.cpp ****         {
 937:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 938:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 939:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 940:Veno-Echo.cpp ****             //save setting:
 941:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 942:Veno-Echo.cpp ****             save_flag = true;
 943:Veno-Echo.cpp ****         }
 944:Veno-Echo.cpp ****     }
 945:Veno-Echo.cpp ****     
 946:Veno-Echo.cpp **** }
 947:Veno-Echo.cpp **** 
 948:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 949:Veno-Echo.cpp **** {
 950:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 951:Veno-Echo.cpp **** }
 952:Veno-Echo.cpp **** 
 953:Veno-Echo.cpp **** void Update_DelayTimeR()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 55


 954:Veno-Echo.cpp **** {
 955:Veno-Echo.cpp ****     static bool lastShift{};
 956:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 957:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 958:Veno-Echo.cpp ****     
 959:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 960:Veno-Echo.cpp **** 
 961:Veno-Echo.cpp ****     //update pot values
 962:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 963:Veno-Echo.cpp **** 
 964:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 965:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 966:Veno-Echo.cpp ****     static int counterR{};
 967:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 968:Veno-Echo.cpp **** 
 969:Veno-Echo.cpp ****     if (!shift) //default control
 970:Veno-Echo.cpp ****     {
 971:Veno-Echo.cpp ****         static float delayTimeR_new{};
 972:Veno-Echo.cpp ****         //udpate pickup
 973:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 974:Veno-Echo.cpp ****         {
 975:Veno-Echo.cpp ****             lastShift = shift;
 976:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 977:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 978:Veno-Echo.cpp ****         } 
 979:Veno-Echo.cpp ****         else    //not a default shift change
 980:Veno-Echo.cpp ****         {
 981:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 982:Veno-Echo.cpp ****             {
 983:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 984:Veno-Echo.cpp ****                 {
 985:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 986:Veno-Echo.cpp ****                 }
 987:Veno-Echo.cpp ****             }
 988:Veno-Echo.cpp ****         }
 989:Veno-Echo.cpp **** 
 990:Veno-Echo.cpp ****         float delayTimeR{};
 991:Veno-Echo.cpp **** 
 992:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 993:Veno-Echo.cpp ****         {
 994:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 995:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 996:Veno-Echo.cpp ****         }
 997:Veno-Echo.cpp **** 
 998:Veno-Echo.cpp ****         else
 999:Veno-Echo.cpp ****         {
1000:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
1001:Veno-Echo.cpp ****         }
1002:Veno-Echo.cpp **** 
1003:Veno-Echo.cpp ****         if(counterR == 0)
1004:Veno-Echo.cpp ****         {
1005:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1006:Veno-Echo.cpp ****             {
1007:Veno-Echo.cpp ****             };
1008:Veno-Echo.cpp **** 
1009:Veno-Echo.cpp ****         }
1010:Veno-Echo.cpp ****     }   //not shift mode
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 56


1011:Veno-Echo.cpp **** 
1012:Veno-Echo.cpp ****     else    //shift mode
1013:Veno-Echo.cpp ****     {
1014:Veno-Echo.cpp **** 
1015:Veno-Echo.cpp ****         static float tapRatio_new{};
1016:Veno-Echo.cpp **** 
1017:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1018:Veno-Echo.cpp ****         {
1019:Veno-Echo.cpp ****             lastShift = shift;
1020:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1021:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1022:Veno-Echo.cpp ****         }
1023:Veno-Echo.cpp **** 
1024:Veno-Echo.cpp ****         else    //not a recent shift change
1025:Veno-Echo.cpp ****         {
1026:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1027:Veno-Echo.cpp ****             {
1028:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1029:Veno-Echo.cpp ****                 {
1030:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1031:Veno-Echo.cpp ****                 }
1032:Veno-Echo.cpp ****             }
1033:Veno-Echo.cpp ****         }
1034:Veno-Echo.cpp **** 
1035:Veno-Echo.cpp ****         if(tapRatio_pickup)
1036:Veno-Echo.cpp ****         {
1037:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1038:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1039:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1040:Veno-Echo.cpp ****             //save setting:
1041:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1042:Veno-Echo.cpp ****             save_flag = true;
1043:Veno-Echo.cpp ****         }
1044:Veno-Echo.cpp ****     }
1045:Veno-Echo.cpp ****     
1046:Veno-Echo.cpp **** }
1047:Veno-Echo.cpp **** void Update_feedbackL_CV()
1048:Veno-Echo.cpp **** {
1049:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1050:Veno-Echo.cpp **** }
1051:Veno-Echo.cpp **** void Update_feedbackL()
1052:Veno-Echo.cpp **** {
1053:Veno-Echo.cpp ****     static bool lastShift{};
1054:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
1055:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
1056:Veno-Echo.cpp **** 
1057:Veno-Echo.cpp ****     static float feedbackL_Last{};
1058:Veno-Echo.cpp **** 
1059:Veno-Echo.cpp ****     //get pot values:
1060:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1061:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1062:Veno-Echo.cpp **** 
1063:Veno-Echo.cpp ****     if (!shift) //default controls
1064:Veno-Echo.cpp ****     {   
1065:Veno-Echo.cpp ****         static float feedbackL_new{};
1066:Veno-Echo.cpp ****         //update pickup
1067:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 57


1068:Veno-Echo.cpp ****         {
1069:Veno-Echo.cpp ****             lastShift = shift;
1070:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1071:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1072:Veno-Echo.cpp ****         } 
1073:Veno-Echo.cpp ****         else    //not a default shift change
1074:Veno-Echo.cpp ****         {
1075:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1076:Veno-Echo.cpp ****             {
1077:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1078:Veno-Echo.cpp ****                 {
1079:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1080:Veno-Echo.cpp ****                 }
1081:Veno-Echo.cpp ****             }
1082:Veno-Echo.cpp ****         }
1083:Veno-Echo.cpp **** 
1084:Veno-Echo.cpp ****         float feedbackL_combo{};
1085:Veno-Echo.cpp **** 
1086:Veno-Echo.cpp ****         if(feedbackL_pickup)
1087:Veno-Echo.cpp ****         {
1088:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1089:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1090:Veno-Echo.cpp ****         }
1091:Veno-Echo.cpp **** 
1092:Veno-Echo.cpp ****         else
1093:Veno-Echo.cpp ****         {
1094:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1095:Veno-Echo.cpp ****         }
1096:Veno-Echo.cpp ****   
1097:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1098:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1099:Veno-Echo.cpp ****     }
1100:Veno-Echo.cpp ****     else    //alternate controls
1101:Veno-Echo.cpp ****     {
1102:Veno-Echo.cpp ****         static float HPCutoff_new{};
1103:Veno-Echo.cpp **** 
1104:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1105:Veno-Echo.cpp ****         {
1106:Veno-Echo.cpp ****             lastShift = shift;
1107:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1108:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1109:Veno-Echo.cpp ****         }
1110:Veno-Echo.cpp **** 
1111:Veno-Echo.cpp ****         else    //not a recent shift change
1112:Veno-Echo.cpp ****         {
1113:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1114:Veno-Echo.cpp ****             {
1115:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1116:Veno-Echo.cpp ****                 {
1117:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1118:Veno-Echo.cpp ****                 }
1119:Veno-Echo.cpp ****             }
1120:Veno-Echo.cpp ****         }
1121:Veno-Echo.cpp **** 
1122:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1123:Veno-Echo.cpp ****         {
1124:Veno-Echo.cpp ****             float HPCutoff{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 58


1125:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1126:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1127:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1128:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1129:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1130:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1131:Veno-Echo.cpp ****             save_flag = true;
1132:Veno-Echo.cpp ****         }
1133:Veno-Echo.cpp ****     }
1134:Veno-Echo.cpp **** }
1135:Veno-Echo.cpp **** 
1136:Veno-Echo.cpp **** void Update_feedbackR_CV()
1137:Veno-Echo.cpp **** {
1138:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1139:Veno-Echo.cpp **** }
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp **** void Update_feedbackR()
1142:Veno-Echo.cpp **** {
1143:Veno-Echo.cpp ****     static bool lastShift{};
1144:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1145:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1146:Veno-Echo.cpp **** 
1147:Veno-Echo.cpp ****     static float feedbackR_Last{};
1148:Veno-Echo.cpp **** 
1149:Veno-Echo.cpp ****     //get pot values:
1150:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1151:Veno-Echo.cpp **** 
1152:Veno-Echo.cpp ****     if (!shift) //default controls
1153:Veno-Echo.cpp ****     {   
1154:Veno-Echo.cpp ****         static float feedbackR_new{};
1155:Veno-Echo.cpp ****         //update pickup
1156:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1157:Veno-Echo.cpp ****         {
1158:Veno-Echo.cpp ****             lastShift = shift;
1159:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1160:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1161:Veno-Echo.cpp ****         } 
1162:Veno-Echo.cpp ****         else    //not a recent shift change
1163:Veno-Echo.cpp ****         {
1164:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1165:Veno-Echo.cpp ****             {
1166:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1167:Veno-Echo.cpp ****                 {
1168:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1169:Veno-Echo.cpp ****                 }
1170:Veno-Echo.cpp ****             }
1171:Veno-Echo.cpp ****         }
1172:Veno-Echo.cpp **** 
1173:Veno-Echo.cpp ****         float feedbackR_combo{};
1174:Veno-Echo.cpp ****         
1175:Veno-Echo.cpp ****         if(feedbackR_pickup)
1176:Veno-Echo.cpp ****         {
1177:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1178:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1179:Veno-Echo.cpp ****         }
1180:Veno-Echo.cpp **** 
1181:Veno-Echo.cpp ****         else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 59


1182:Veno-Echo.cpp ****         {
1183:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1184:Veno-Echo.cpp ****         }
1185:Veno-Echo.cpp **** 
1186:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1187:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1188:Veno-Echo.cpp ****     }
1189:Veno-Echo.cpp ****     else    //alternate controls
1190:Veno-Echo.cpp ****     {
1191:Veno-Echo.cpp **** 
1192:Veno-Echo.cpp ****         static float LPCutoff_new{};
1193:Veno-Echo.cpp **** 
1194:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1195:Veno-Echo.cpp ****         {
1196:Veno-Echo.cpp ****             lastShift = shift;
1197:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1198:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1199:Veno-Echo.cpp ****         }
1200:Veno-Echo.cpp **** 
1201:Veno-Echo.cpp ****         else    //not a recent shift change
1202:Veno-Echo.cpp ****         {
1203:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1204:Veno-Echo.cpp ****             {
1205:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1206:Veno-Echo.cpp ****                 {
1207:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1208:Veno-Echo.cpp ****                 }
1209:Veno-Echo.cpp ****             }
1210:Veno-Echo.cpp ****         }
1211:Veno-Echo.cpp **** 
1212:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1213:Veno-Echo.cpp ****         {
1214:Veno-Echo.cpp ****             float LPCutoff{};
1215:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1216:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1217:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1218:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1219:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1220:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1221:Veno-Echo.cpp ****             save_flag = true;
1222:Veno-Echo.cpp ****         }
1223:Veno-Echo.cpp ****     }
1224:Veno-Echo.cpp **** }
1225:Veno-Echo.cpp **** 
1226:Veno-Echo.cpp **** void Update_drywet_CV()
1227:Veno-Echo.cpp **** {
1228:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1229:Veno-Echo.cpp **** }
1230:Veno-Echo.cpp **** 
1231:Veno-Echo.cpp **** void Update_drywet()
1232:Veno-Echo.cpp **** {
1233:Veno-Echo.cpp ****     static bool lastShift{};
1234:Veno-Echo.cpp ****     static bool drywet_pickup{};
1235:Veno-Echo.cpp ****     static bool Res_pickup{};
1236:Veno-Echo.cpp **** 
1237:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1238:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 60


1239:Veno-Echo.cpp **** 
1240:Veno-Echo.cpp ****     //get pot values:
1241:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1242:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1243:Veno-Echo.cpp **** 
1244:Veno-Echo.cpp ****     if (!shift) //default controls
1245:Veno-Echo.cpp ****     {   
1246:Veno-Echo.cpp **** 
1247:Veno-Echo.cpp ****         static float drywet_new{};
1248:Veno-Echo.cpp **** 
1249:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1250:Veno-Echo.cpp ****         {
1251:Veno-Echo.cpp ****             lastShift = shift;
1252:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1253:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1254:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1255:Veno-Echo.cpp ****         } 
1256:Veno-Echo.cpp ****         
1257:Veno-Echo.cpp ****         else    //not a recent shift change
1258:Veno-Echo.cpp ****         {
1259:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1260:Veno-Echo.cpp ****             {
1261:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1262:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1263:Veno-Echo.cpp ****                 {
1264:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1265:Veno-Echo.cpp ****                 }
1266:Veno-Echo.cpp ****             }
1267:Veno-Echo.cpp **** 
1268:Veno-Echo.cpp ****         }
1269:Veno-Echo.cpp ****         
1270:Veno-Echo.cpp ****         float drywetcombo{};
1271:Veno-Echo.cpp **** 
1272:Veno-Echo.cpp ****         if (drywet_pickup)
1273:Veno-Echo.cpp ****         {
1274:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1275:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1276:Veno-Echo.cpp ****         }
1277:Veno-Echo.cpp **** 
1278:Veno-Echo.cpp ****         else
1279:Veno-Echo.cpp ****         {
1280:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1281:Veno-Echo.cpp ****         }
1282:Veno-Echo.cpp **** 
1283:Veno-Echo.cpp ****         float drywetTarget{};
1284:Veno-Echo.cpp **** 
1285:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1286:Veno-Echo.cpp ****         {
1287:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1288:Veno-Echo.cpp ****         }
1289:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1290:Veno-Echo.cpp ****         {
1291:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1292:Veno-Echo.cpp ****         }
1293:Veno-Echo.cpp ****         else
1294:Veno-Echo.cpp ****         {
1295:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 61


1296:Veno-Echo.cpp ****         }
1297:Veno-Echo.cpp **** 
1298:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1299:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1300:Veno-Echo.cpp ****     }
1301:Veno-Echo.cpp ****     else    //alternate controls
1302:Veno-Echo.cpp ****     {
1303:Veno-Echo.cpp ****         static float Res_new{};
1304:Veno-Echo.cpp **** 
1305:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1306:Veno-Echo.cpp ****         {
1307:Veno-Echo.cpp ****             lastShift = shift;
1308:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1309:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1310:Veno-Echo.cpp ****         }
1311:Veno-Echo.cpp **** 
1312:Veno-Echo.cpp ****         else    //not a recent shift change
1313:Veno-Echo.cpp ****         {
1314:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1315:Veno-Echo.cpp ****             {
1316:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1317:Veno-Echo.cpp ****                 {
1318:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1319:Veno-Echo.cpp ****                 }
1320:Veno-Echo.cpp ****             }
1321:Veno-Echo.cpp ****         }
1322:Veno-Echo.cpp **** 
1323:Veno-Echo.cpp ****         if(Res_pickup)
1324:Veno-Echo.cpp ****         {
1325:Veno-Echo.cpp ****             float Res{};
1326:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1327:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1328:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1329:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1330:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1331:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1332:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1333:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1334:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1335:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1336:Veno-Echo.cpp ****             save_flag = true;
1337:Veno-Echo.cpp ****         }
1338:Veno-Echo.cpp ****     }
1339:Veno-Echo.cpp **** }
1340:Veno-Echo.cpp **** 
1341:Veno-Echo.cpp **** void Update_width_CV()
1342:Veno-Echo.cpp **** {
1343:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1344:Veno-Echo.cpp **** }
1345:Veno-Echo.cpp **** 
1346:Veno-Echo.cpp **** void Update_width()
1347:Veno-Echo.cpp **** {
1348:Veno-Echo.cpp ****     static bool lastShift{};
1349:Veno-Echo.cpp ****     static bool width_pickup{};
1350:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1351:Veno-Echo.cpp **** 
1352:Veno-Echo.cpp ****     static float width_Last{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 62


1353:Veno-Echo.cpp **** 
1354:Veno-Echo.cpp ****     //get pot values:
1355:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1356:Veno-Echo.cpp **** 
1357:Veno-Echo.cpp ****     if (!shift) //default controls
1358:Veno-Echo.cpp ****     {   
1359:Veno-Echo.cpp ****         static float width_new{};
1360:Veno-Echo.cpp ****         //update pickup
1361:Veno-Echo.cpp ****         if (shift != lastShift)
1362:Veno-Echo.cpp ****         {
1363:Veno-Echo.cpp ****             lastShift = shift;
1364:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1365:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1366:Veno-Echo.cpp ****         }
1367:Veno-Echo.cpp **** 
1368:Veno-Echo.cpp ****         else
1369:Veno-Echo.cpp ****         {
1370:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1371:Veno-Echo.cpp ****             {
1372:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1373:Veno-Echo.cpp ****                 {
1374:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1375:Veno-Echo.cpp ****                 }
1376:Veno-Echo.cpp ****             }
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****         }
1379:Veno-Echo.cpp **** 
1380:Veno-Echo.cpp ****         float widthTarget{};
1381:Veno-Echo.cpp **** 
1382:Veno-Echo.cpp ****         if(width_pickup)
1383:Veno-Echo.cpp ****         {
1384:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1385:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1386:Veno-Echo.cpp ****         }
1387:Veno-Echo.cpp **** 
1388:Veno-Echo.cpp ****         else
1389:Veno-Echo.cpp ****         {        
1390:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1391:Veno-Echo.cpp ****         }
1392:Veno-Echo.cpp ****             
1393:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1394:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1395:Veno-Echo.cpp ****     }
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****     else    //alternate controls
1398:Veno-Echo.cpp ****     {
1399:Veno-Echo.cpp ****         static float ModDepth_new{};
1400:Veno-Echo.cpp **** 
1401:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1402:Veno-Echo.cpp ****         {
1403:Veno-Echo.cpp ****             lastShift = shift;
1404:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1405:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1406:Veno-Echo.cpp ****         }
1407:Veno-Echo.cpp **** 
1408:Veno-Echo.cpp ****         else    //not a recent shift change
1409:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 63


1410:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1411:Veno-Echo.cpp ****             {
1412:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1413:Veno-Echo.cpp ****                 {
1414:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1415:Veno-Echo.cpp ****                 }
1416:Veno-Echo.cpp ****             }
1417:Veno-Echo.cpp ****         }
1418:Veno-Echo.cpp **** 
1419:Veno-Echo.cpp ****         if(ModDepth_pickup)
1420:Veno-Echo.cpp ****         {
1421:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1422:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1423:Veno-Echo.cpp ****             save_flag = true;
1424:Veno-Echo.cpp ****         }
1425:Veno-Echo.cpp ****     }
1426:Veno-Echo.cpp **** }
1427:Veno-Echo.cpp **** 
1428:Veno-Echo.cpp **** void Update_crossfeedback()
1429:Veno-Echo.cpp **** {
1430:Veno-Echo.cpp ****     static bool lastShift{};
1431:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1432:Veno-Echo.cpp ****     static bool modRate_pickup{};
1433:Veno-Echo.cpp **** 
1434:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1435:Veno-Echo.cpp **** 
1436:Veno-Echo.cpp ****     //get pot values:
1437:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1438:Veno-Echo.cpp **** 
1439:Veno-Echo.cpp ****     if (!shift) //default controls
1440:Veno-Echo.cpp ****     {   
1441:Veno-Echo.cpp ****         static float crossfeedback_new{};
1442:Veno-Echo.cpp ****         //update pickup
1443:Veno-Echo.cpp ****         if (shift != lastShift)
1444:Veno-Echo.cpp ****         {
1445:Veno-Echo.cpp ****             lastShift = shift;
1446:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1447:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1448:Veno-Echo.cpp ****         }
1449:Veno-Echo.cpp **** 
1450:Veno-Echo.cpp ****         else
1451:Veno-Echo.cpp ****         {
1452:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1453:Veno-Echo.cpp ****             {
1454:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1455:Veno-Echo.cpp ****                 {
1456:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1457:Veno-Echo.cpp ****                 }
1458:Veno-Echo.cpp ****             }
1459:Veno-Echo.cpp ****         }
1460:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1461:Veno-Echo.cpp **** 
1462:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1463:Veno-Echo.cpp ****         {
1464:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1465:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1466:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 64


1467:Veno-Echo.cpp **** 
1468:Veno-Echo.cpp ****         else
1469:Veno-Echo.cpp ****         {
1470:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1471:Veno-Echo.cpp ****         }
1472:Veno-Echo.cpp **** 
1473:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1474:Veno-Echo.cpp ****     }
1475:Veno-Echo.cpp ****     else    //alternate controls
1476:Veno-Echo.cpp ****     {
1477:Veno-Echo.cpp ****         static float modRate_new{};
1478:Veno-Echo.cpp **** 
1479:Veno-Echo.cpp ****         if (shift != lastShift)
1480:Veno-Echo.cpp ****         {
1481:Veno-Echo.cpp ****             lastShift = shift;
1482:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1483:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1484:Veno-Echo.cpp ****         }
1485:Veno-Echo.cpp **** 
1486:Veno-Echo.cpp ****         else
1487:Veno-Echo.cpp ****         {
1488:Veno-Echo.cpp ****             if(!modRate_pickup)
1489:Veno-Echo.cpp ****             {
1490:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1491:Veno-Echo.cpp ****                 {
1492:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1493:Veno-Echo.cpp ****                 }
1494:Veno-Echo.cpp ****             }
1495:Veno-Echo.cpp ****         }
1496:Veno-Echo.cpp **** 
1497:Veno-Echo.cpp ****         if(modRate_pickup)
1498:Veno-Echo.cpp ****         {
1499:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1500:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1501:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1502:Veno-Echo.cpp ****             save_flag = true;
1503:Veno-Echo.cpp ****         }
1504:Veno-Echo.cpp ****     }
1505:Veno-Echo.cpp **** }
1506:Veno-Echo.cpp **** 
1507:Veno-Echo.cpp **** void Update_filterXfade()
1508:Veno-Echo.cpp **** {
1509:Veno-Echo.cpp ****     static bool lastShift{};
1510:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1511:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1512:Veno-Echo.cpp **** 
1513:Veno-Echo.cpp ****     static float filterXfade_last{};
1514:Veno-Echo.cpp **** 
1515:Veno-Echo.cpp ****     //get pot values:
1516:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1517:Veno-Echo.cpp **** 
1518:Veno-Echo.cpp ****     if (!shift) //default controls
1519:Veno-Echo.cpp ****     {   
1520:Veno-Echo.cpp ****         static float filterXfade_new{};
1521:Veno-Echo.cpp ****         //update pickup
1522:Veno-Echo.cpp ****         if (shift != lastShift)
1523:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 65


1524:Veno-Echo.cpp ****             lastShift = shift;
1525:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1526:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1527:Veno-Echo.cpp ****         }
1528:Veno-Echo.cpp **** 
1529:Veno-Echo.cpp ****         else
1530:Veno-Echo.cpp ****         {
1531:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1532:Veno-Echo.cpp ****             {
1533:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1534:Veno-Echo.cpp ****                 {
1535:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1536:Veno-Echo.cpp ****                 }
1537:Veno-Echo.cpp ****             }
1538:Veno-Echo.cpp ****         }
1539:Veno-Echo.cpp **** 
1540:Veno-Echo.cpp ****         float filterXfadeTarget{};
1541:Veno-Echo.cpp **** 
1542:Veno-Echo.cpp ****         if(filterXfade_pickup)
1543:Veno-Echo.cpp ****         {
1544:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1545:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1546:Veno-Echo.cpp ****         }
1547:Veno-Echo.cpp **** 
1548:Veno-Echo.cpp ****         else
1549:Veno-Echo.cpp ****         {
1550:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1551:Veno-Echo.cpp ****         }
1552:Veno-Echo.cpp **** 
1553:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1554:Veno-Echo.cpp ****     }
1555:Veno-Echo.cpp ****     else    //alternate controls
1556:Veno-Echo.cpp ****     {
1557:Veno-Echo.cpp **** 
1558:Veno-Echo.cpp ****         static float PostFilters_new{};
1559:Veno-Echo.cpp **** 
1560:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1561:Veno-Echo.cpp ****         {
1562:Veno-Echo.cpp ****             lastShift = shift;
1563:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1564:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1565:Veno-Echo.cpp ****         }
1566:Veno-Echo.cpp **** 
1567:Veno-Echo.cpp ****         else    //not a recent shift change
1568:Veno-Echo.cpp ****         {
1569:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1570:Veno-Echo.cpp ****             {
1571:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1572:Veno-Echo.cpp ****                 {
1573:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1574:Veno-Echo.cpp ****                 }
1575:Veno-Echo.cpp ****             }
1576:Veno-Echo.cpp ****         }
1577:Veno-Echo.cpp ****         
1578:Veno-Echo.cpp ****         if(PostFilters_pickup)
1579:Veno-Echo.cpp ****         {
1580:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 66


1581:Veno-Echo.cpp ****             {
1582:Veno-Echo.cpp ****                 PostFilters = false;
1583:Veno-Echo.cpp ****             }
1584:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1585:Veno-Echo.cpp ****             {
1586:Veno-Echo.cpp ****                 PostFilters = true;
1587:Veno-Echo.cpp ****             }
1588:Veno-Echo.cpp ****             else
1589:Veno-Echo.cpp ****             {
1590:Veno-Echo.cpp ****               //do nothing
1591:Veno-Echo.cpp ****             }
1592:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1593:Veno-Echo.cpp ****             save_flag = true;
1594:Veno-Echo.cpp ****         }  
1595:Veno-Echo.cpp ****     }
1596:Veno-Echo.cpp **** }
1597:Veno-Echo.cpp **** 
1598:Veno-Echo.cpp **** void GetModCV()
1599:Veno-Echo.cpp **** {
1600:Veno-Echo.cpp ****     //get modulation CV input
1601:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1602:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1603:Veno-Echo.cpp **** }
1604:Veno-Echo.cpp **** 
1605:Veno-Echo.cpp **** void Update_Mod()
1606:Veno-Echo.cpp **** {    
1607:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1608:Veno-Echo.cpp ****     static float modulation_CV{};
1609:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1610:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1611:Veno-Echo.cpp ****     //calculate InternalMod
1612:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1613:Veno-Echo.cpp ****     //apply modulation to delay lines
1614:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1615:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1616:Veno-Echo.cpp **** }
1617:Veno-Echo.cpp **** 
1618:Veno-Echo.cpp **** void UpdateClock()
1619:Veno-Echo.cpp **** {
1620:Veno-Echo.cpp ****     static int divCounter{};
1621:Veno-Echo.cpp ****     ClockIn.Debounce();
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp ****     //if clock in pulse received
1624:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1625:Veno-Echo.cpp ****     {   
1626:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1627:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1628:Veno-Echo.cpp ****         if(divCounter == 0)
1629:Veno-Echo.cpp ****         {
1630:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1631:Veno-Echo.cpp ****             {
1632:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1633:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
1634:Veno-Echo.cpp ****                 save_flag = true;
1635:Veno-Echo.cpp ****             }
1636:Veno-Echo.cpp ****         }
1637:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 67


1638:Veno-Echo.cpp ****     
1639:Veno-Echo.cpp **** }
1640:Veno-Echo.cpp **** 
1641:Veno-Echo.cpp **** void Update_Buttons()
1642:Veno-Echo.cpp **** {  
1643:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1644:Veno-Echo.cpp ****     static uint32_t resetTime{};
1645:Veno-Echo.cpp ****     static int buttonstate{};
1646:Veno-Echo.cpp **** 
1647:Veno-Echo.cpp ****     Rev_L_sw.update();
1648:Veno-Echo.cpp ****     Rev_R_sw.update();
1649:Veno-Echo.cpp ****     LPF_sw.update();
1650:Veno-Echo.cpp ****     HPF_sw.update();
1651:Veno-Echo.cpp ****     Tap_Button.update();
1652:Veno-Echo.cpp **** 
1653:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1654:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1655:Veno-Echo.cpp ****     //TapButton.Debounce();
1656:Veno-Echo.cpp ****     Sync.Debounce();
1657:Veno-Echo.cpp ****     ClockIn.Debounce();
1658:Veno-Echo.cpp ****     //gate inputs
1659:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1660:Veno-Echo.cpp ****     {
1661:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1662:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1663:Veno-Echo.cpp ****         {
1664:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1665:Veno-Echo.cpp ****         }
1666:Veno-Echo.cpp ****         else
1667:Veno-Echo.cpp ****         {
1668:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1669:Veno-Echo.cpp ****         }
1670:Veno-Echo.cpp ****         save_flag = true;
1671:Veno-Echo.cpp ****     }
1672:Veno-Echo.cpp **** 
1673:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1674:Veno-Echo.cpp ****     {
1675:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1676:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1677:Veno-Echo.cpp ****         {
1678:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1679:Veno-Echo.cpp ****         }
1680:Veno-Echo.cpp ****         else
1681:Veno-Echo.cpp ****         {
1682:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1683:Veno-Echo.cpp ****         }
1684:Veno-Echo.cpp ****         save_flag = true;
1685:Veno-Echo.cpp ****     }
1686:Veno-Echo.cpp **** 
1687:Veno-Echo.cpp ****     //buttons
1688:Veno-Echo.cpp **** 
1689:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1690:Veno-Echo.cpp ****     {
1691:Veno-Echo.cpp ****         buttonstate += 1;
1692:Veno-Echo.cpp ****         if (buttonstate == 3)
1693:Veno-Echo.cpp ****         {
1694:Veno-Echo.cpp ****             resetTime = System::GetNow();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 68


1695:Veno-Echo.cpp ****         }
1696:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1697:Veno-Echo.cpp ****         {
1698:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1699:Veno-Echo.cpp ****         }
1700:Veno-Echo.cpp ****         else
1701:Veno-Echo.cpp ****         {
1702:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1703:Veno-Echo.cpp ****         }
1704:Veno-Echo.cpp ****         save_flag = true;
1705:Veno-Echo.cpp ****     }
1706:Veno-Echo.cpp **** 
1707:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1708:Veno-Echo.cpp ****     {
1709:Veno-Echo.cpp ****         buttonstate -= 1;
1710:Veno-Echo.cpp ****     }
1711:Veno-Echo.cpp **** 
1712:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1713:Veno-Echo.cpp ****     {
1714:Veno-Echo.cpp ****         buttonstate += 1;
1715:Veno-Echo.cpp ****         if (buttonstate == 3)
1716:Veno-Echo.cpp ****         {
1717:Veno-Echo.cpp ****             resetTime = System::GetNow();
1718:Veno-Echo.cpp ****         }
1719:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1720:Veno-Echo.cpp ****         {
1721:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1722:Veno-Echo.cpp ****         }
1723:Veno-Echo.cpp ****         else
1724:Veno-Echo.cpp ****         {
1725:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1726:Veno-Echo.cpp ****         }
1727:Veno-Echo.cpp ****         save_flag = true;
1728:Veno-Echo.cpp ****     }
1729:Veno-Echo.cpp **** 
1730:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         buttonstate -= 1;
1733:Veno-Echo.cpp ****     }
1734:Veno-Echo.cpp **** 
1735:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1736:Veno-Echo.cpp ****     {
1737:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1738:Veno-Echo.cpp ****         {
1739:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1740:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
1741:Veno-Echo.cpp ****             save_flag = true;
1742:Veno-Echo.cpp ****         }
1743:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1744:Veno-Echo.cpp ****         
1745:Veno-Echo.cpp **** 
1746:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1747:Veno-Echo.cpp ****         buttonstate += 1;
1748:Veno-Echo.cpp ****         
1749:Veno-Echo.cpp ****         if (buttonstate == 3)
1750:Veno-Echo.cpp ****         {
1751:Veno-Echo.cpp ****             resetTime = System::GetNow();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 69


1752:Veno-Echo.cpp ****         }
1753:Veno-Echo.cpp **** 
1754:Veno-Echo.cpp ****     }
1755:Veno-Echo.cpp **** 
1756:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1757:Veno-Echo.cpp ****     {
1758:Veno-Echo.cpp ****         shift = false;
1759:Veno-Echo.cpp ****         buttonstate -= 1;
1760:Veno-Echo.cpp ****         mute = false;
1761:Veno-Echo.cpp ****     }
1762:Veno-Echo.cpp **** 
1763:Veno-Echo.cpp ****     if (Tap_Button.getState())
1764:Veno-Echo.cpp ****     {
1765:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1766:Veno-Echo.cpp ****         {
1767:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1768:Veno-Echo.cpp ****         } 
1769:Veno-Echo.cpp ****     }
1770:Veno-Echo.cpp **** 
1771:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1772:Veno-Echo.cpp ****     {
1773:Veno-Echo.cpp **** 
1774:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1775:Veno-Echo.cpp ****             {
1776:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1777:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1778:Veno-Echo.cpp ****                 ResetAllLEDs();
1779:Veno-Echo.cpp ****                 //don't let reset or shift update
1780:Veno-Echo.cpp ****                 shift = false;
1781:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1782:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1783:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1784:Veno-Echo.cpp ****                 save_flag = true;
1785:Veno-Echo.cpp ****             }
1786:Veno-Echo.cpp ****     } 
1787:Veno-Echo.cpp **** 
1788:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1789:Veno-Echo.cpp **** }
1790:Veno-Echo.cpp **** 
1791:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1792:Veno-Echo.cpp **** {
1793:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
1794:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
1795:Veno-Echo.cpp **** }
1796:Veno-Echo.cpp **** 
1797:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1798:Veno-Echo.cpp **** {    
1799:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1800:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1801:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
1802:Veno-Echo.cpp ****     //DELAYR_DEBUG = delayR.GetDelayTime();
1803:Veno-Echo.cpp ****     //CLOCK_DEBUG = BaseTempo.getDelayLength();
1804:Veno-Echo.cpp **** }
1805:Veno-Echo.cpp **** 
1806:Veno-Echo.cpp **** void Update_BaseTempoLED()
1807:Veno-Echo.cpp **** {
1808:Veno-Echo.cpp ****     tempoLED_BASE.update();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 70


1809:Veno-Echo.cpp **** 
1810:Veno-Echo.cpp ****     static int phaseCounter{};
1811:Veno-Echo.cpp **** 
1812:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1813:Veno-Echo.cpp ****     {
1814:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1815:Veno-Echo.cpp ****     }
1816:Veno-Echo.cpp **** 
1817:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
1819:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1820:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1821:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1822:Veno-Echo.cpp **** }
1823:Veno-Echo.cpp **** 
1824:Veno-Echo.cpp **** 
1825:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1826:Veno-Echo.cpp **** {
1827:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1828:Veno-Echo.cpp ****     {
1829:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1830:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1831:Veno-Echo.cpp ****     }
1832:Veno-Echo.cpp ****     else
1833:Veno-Echo.cpp ****     {
1834:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1835:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1836:Veno-Echo.cpp ****     }
1837:Veno-Echo.cpp **** 
1838:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1839:Veno-Echo.cpp ****     {
1840:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1841:Veno-Echo.cpp ****     }
1842:Veno-Echo.cpp ****     else
1843:Veno-Echo.cpp ****     {
1844:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1845:Veno-Echo.cpp ****     }
1846:Veno-Echo.cpp **** 
1847:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1848:Veno-Echo.cpp ****     {
1849:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1850:Veno-Echo.cpp ****     }
1851:Veno-Echo.cpp ****     else
1852:Veno-Echo.cpp ****     {
1853:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1854:Veno-Echo.cpp ****     }
1855:Veno-Echo.cpp **** 
1856:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1857:Veno-Echo.cpp ****     {
1858:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1859:Veno-Echo.cpp ****     }
1860:Veno-Echo.cpp ****     else
1861:Veno-Echo.cpp ****     {
1862:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1863:Veno-Echo.cpp ****     }
1864:Veno-Echo.cpp **** 
1865:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 71


1866:Veno-Echo.cpp ****     {
1867:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1868:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1869:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1870:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1871:Veno-Echo.cpp ****     }
1872:Veno-Echo.cpp ****     else
1873:Veno-Echo.cpp ****     {
1874:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1875:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1876:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1877:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1878:Veno-Echo.cpp ****     }
1879:Veno-Echo.cpp ****     
1880:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1881:Veno-Echo.cpp ****     {
1882:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1883:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1884:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1885:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1886:Veno-Echo.cpp ****     }
1887:Veno-Echo.cpp ****     else
1888:Veno-Echo.cpp ****     {
1889:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1890:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1891:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1892:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1893:Veno-Echo.cpp **** 
1894:Veno-Echo.cpp ****     }
1895:Veno-Echo.cpp **** 
1896:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1897:Veno-Echo.cpp ****     {
1898:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1899:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1900:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1901:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1902:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1903:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1904:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1905:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1906:Veno-Echo.cpp ****     }
1907:Veno-Echo.cpp **** 
1908:Veno-Echo.cpp ****     else
1909:Veno-Echo.cpp ****     {
1910:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1911:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1912:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1913:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1914:Veno-Echo.cpp ****     }
1915:Veno-Echo.cpp **** 
1916:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1917:Veno-Echo.cpp ****     {
1918:Veno-Echo.cpp ****         PostFilters = false;
1919:Veno-Echo.cpp ****     }
1920:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1921:Veno-Echo.cpp ****     {
1922:Veno-Echo.cpp ****         PostFilters = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 72


1923:Veno-Echo.cpp ****     }
1924:Veno-Echo.cpp ****     else
1925:Veno-Echo.cpp ****     {
1926:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1927:Veno-Echo.cpp ****     }
1928:Veno-Echo.cpp **** 
1929:Veno-Echo.cpp ****     //if between min and max tap length
1930:Veno-Echo.cpp ****     if( (setting.tapLength >= static_cast<float> (mintap)) 
1931:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
1932:Veno-Echo.cpp ****     {
1933:Veno-Echo.cpp ****         BaseTempo.setTapLength(setting.tapLength);
1934:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1935:Veno-Echo.cpp ****     }
1936:Veno-Echo.cpp **** 
1937:Veno-Echo.cpp ****     else
1938:Veno-Echo.cpp ****     {
1939:Veno-Echo.cpp ****         BaseTempo.setTapLength(defaultAltControls.tapLength);
1940:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1941:Veno-Echo.cpp ****     }
1942:Veno-Echo.cpp **** 
1943:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1944:Veno-Echo.cpp ****     {
1945:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1946:Veno-Echo.cpp ****     }
1947:Veno-Echo.cpp ****     else    //default OFF
1948:Veno-Echo.cpp ****     {
1949:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1950:Veno-Echo.cpp ****     }
1951:Veno-Echo.cpp **** 
1952:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1953:Veno-Echo.cpp ****     {
1954:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1955:Veno-Echo.cpp ****     }
1956:Veno-Echo.cpp ****     else    //default OFF
1957:Veno-Echo.cpp ****     {
1958:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1959:Veno-Echo.cpp ****     }
1960:Veno-Echo.cpp **** 
1961:Veno-Echo.cpp **** }
1962:Veno-Echo.cpp **** 
1963:Veno-Echo.cpp **** void TurnOnAllLEDs()
1964:Veno-Echo.cpp **** {
1965:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1966:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1967:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1968:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1969:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1970:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1971:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1972:Veno-Echo.cpp **** }
1973:Veno-Echo.cpp **** 
1974:Veno-Echo.cpp **** void ResetAllLEDs()
1975:Veno-Echo.cpp **** {
1976:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1977:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1978:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1979:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 73


1980:Veno-Echo.cpp ****     {
1981:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1982:Veno-Echo.cpp ****     }
1983:Veno-Echo.cpp ****     else
1984:Veno-Echo.cpp ****     {
1985:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1986:Veno-Echo.cpp ****     }
1987:Veno-Echo.cpp **** 
1988:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1989:Veno-Echo.cpp ****     {
1990:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1991:Veno-Echo.cpp ****     }
1992:Veno-Echo.cpp ****     else
1993:Veno-Echo.cpp ****     {
1994:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1995:Veno-Echo.cpp ****     }
1996:Veno-Echo.cpp ****     
1997:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1998:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1999:Veno-Echo.cpp **** }
2000:Veno-Echo.cpp **** 
2001:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2002:Veno-Echo.cpp **** {
2003:Veno-Echo.cpp ****     float returnval{};
2004:Veno-Echo.cpp ****     if (input > limit)
2005:Veno-Echo.cpp ****         returnval = limit;
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2008:Veno-Echo.cpp ****     else
2009:Veno-Echo.cpp ****         returnval = input;
2010:Veno-Echo.cpp **** 
2011:Veno-Echo.cpp ****     return returnval;   
2012:Veno-Echo.cpp **** }
2013:Veno-Echo.cpp **** 
2014:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 2014 7 view .LVU239
 1144              	.LBB1001:
2015:Veno-Echo.cpp **** {
2016:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 2016 5 view .LVU240
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 2017 5 view .LVU241
 1147              	.LBE1001:
 1148              	.LBE1000:
 901:Veno-Echo.cpp ****         }
 1149              		.loc 20 901 36 is_stmt 0 view .LVU242
 1150 0042 6E49     		ldr	r1, .L75+28
 1151              	.LBB1005:
 1152              	.LBB1002:
 1153              		.loc 20 2017 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 2017 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE1002:
 1158              	.LBE1005:
 901:Veno-Echo.cpp ****         }
 1159              		.loc 20 901 36 view .LVU245
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 74


 1160 004c 6C4A     		ldr	r2, .L75+32
 1161              	.LBB1006:
 1162              	.LBB1003:
 1163              		.loc 20 2017 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
 1165              		.loc 20 2017 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 2017 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 2017 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 2017 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
2018:Veno-Echo.cpp **** 
2019:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 2019 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1B180 		bmi	.L73
2020:Veno-Echo.cpp ****     {
2021:Veno-Echo.cpp ****         output = 0.0f;
2022:Veno-Echo.cpp ****     }
2023:Veno-Echo.cpp **** 
2024:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 2024 5 view .LVU252
2025:Veno-Echo.cpp ****     {
2026:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 2026 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
 1186              		.loc 20 2026 16 view .LVU254
 1187              	.LBE1003:
 1188              	.LBE1006:
 904:Veno-Echo.cpp ****         {
 1189              		.loc 20 904 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 906:Veno-Echo.cpp ****             {
 1191              		.loc 20 906 13 view .LVU256
 906:Veno-Echo.cpp ****             {
 1192              		.loc 20 906 35 is_stmt 0 view .LVU257
 1193 0080 604B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 906:Veno-Echo.cpp ****             {
 1196              		.loc 20 906 35 view .LVU258
 1197 0086 6048     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE1018:
 1200              	.LBE1073:
 946:Veno-Echo.cpp **** 
 1201              		.loc 20 946 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 75


 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB1074:
 1208              	.LBB1019:
 906:Veno-Echo.cpp ****             {
 1209              		.loc 20 906 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 906:Veno-Echo.cpp ****             {
 1214              		.loc 20 906 35 view .LVU261
 1215              	.LBE1019:
 1216              	.LBB1020:
 915:Veno-Echo.cpp **** 
 1217              		.loc 20 915 9 is_stmt 1 view .LVU262
 917:Veno-Echo.cpp ****         {
 1218              		.loc 20 917 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 919:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 919 13 view .LVU264
 919:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 919 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 920:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 920 34 view .LVU266
 1226 009a 5C48     		ldr	r0, .L75+44
 921:Veno-Echo.cpp ****         }
 1227              		.loc 20 921 31 view .LVU267
 1228 009c 5C49     		ldr	r1, .L75+48
 919:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 919 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 920:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 920 13 is_stmt 1 view .LVU269
 920:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 920 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 921:Veno-Echo.cpp ****         }
 1234              		.loc 20 921 13 is_stmt 1 view .LVU271
 921:Veno-Echo.cpp ****         }
 1235              		.loc 20 921 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 921:Veno-Echo.cpp ****         }
 1238              		.loc 20 921 31 view .LVU273
 1239              	.LBE1020:
 1240              	.LBE1074:
 946:Veno-Echo.cpp **** 
 1241              		.loc 20 946 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB1075:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 76


 1245              	.LBB1068:
 882:Veno-Echo.cpp ****             {
 1246              		.loc 20 882 13 is_stmt 1 view .LVU275
 882:Veno-Echo.cpp ****             {
 1247              		.loc 20 882 16 is_stmt 0 view .LVU276
 1248 00a8 524A     		ldr	r2, .L75+20
 882:Veno-Echo.cpp ****             {
 1249              		.loc 20 882 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 884:Veno-Echo.cpp ****                 {
 1252              		.loc 20 884 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB1007:
 1255              	.LBI1007:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB1008:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE1008:
 1261              	.LBE1007:
 884:Veno-Echo.cpp ****                 {
 1262              		.loc 20 884 23 view .LVU282
 1263 00ae 5249     		ldr	r1, .L75+24
 884:Veno-Echo.cpp ****                 {
 1264              		.loc 20 884 17 view .LVU283
 1265 00b0 9FED587A 		vldr.32	s14, .L75+52
 884:Veno-Echo.cpp ****                 {
 1266              		.loc 20 884 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB1010:
 1270              	.LBB1009:
 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE1009:
 1274              	.LBE1010:
 884:Veno-Echo.cpp ****                 {
 1275              		.loc 20 884 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 886:Veno-Echo.cpp ****                 }
 1279              		.loc 20 886 21 is_stmt 1 view .LVU287
 886:Veno-Echo.cpp ****                 }
 1280              		.loc 20 886 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 891:Veno-Echo.cpp **** 
 1284              		.loc 20 891 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 893:Veno-Echo.cpp ****         {
 1286              		.loc 20 893 9 view .LVU290
 895:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 895 13 view .LVU291
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 77


 1288              	.LBB1011:
 1289              	.LBI1011:
2014:Veno-Echo.cpp **** {
 1290              		.loc 20 2014 7 view .LVU292
 1291              	.LBB1012:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 2016 5 view .LVU293
2017:Veno-Echo.cpp **** 
 1293              		.loc 20 2017 5 view .LVU294
 1294              	.LBE1012:
 1295              	.LBE1011:
 895:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 895 36 is_stmt 0 view .LVU295
 1297 00ce 4B4A     		ldr	r2, .L75+28
 1298              	.LBB1015:
 1299              	.LBB1013:
2017:Veno-Echo.cpp **** 
 1300              		.loc 20 2017 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 1302              		.loc 20 2017 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 1304              		.loc 20 2017 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
2017:Veno-Echo.cpp **** 
 1306              		.loc 20 2017 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 1308              		.loc 20 2017 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 1310              		.loc 20 2017 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 1312              		.loc 20 2017 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 1315              		.loc 20 2019 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 1317              		.loc 20 2017 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
2019:Veno-Echo.cpp ****     {
 1320              		.loc 20 2019 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 6DD4     		bmi	.L74
2024:Veno-Echo.cpp ****     {
 1323              		.loc 20 2024 5 view .LVU306
 1324              		.loc 20 2026 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 78


2027:Veno-Echo.cpp ****     }
2028:Veno-Echo.cpp **** 
2029:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 2029 5 is_stmt 1 view .LVU308
 1331              		.loc 20 2029 5 is_stmt 0 view .LVU309
 1332              	.LBE1013:
 1333              	.LBE1015:
 896:Veno-Echo.cpp ****         }
 1334              		.loc 20 896 13 is_stmt 1 view .LVU310
 896:Veno-Echo.cpp ****         }
 1335              		.loc 20 896 29 is_stmt 0 view .LVU311
 1336 010a 3D4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 896:Veno-Echo.cpp ****         }
 1341              		.loc 20 896 29 view .LVU312
 1342              	.LBE1068:
 1343              	.LBB1069:
 926:Veno-Echo.cpp ****             {
 1344              		.loc 20 926 13 is_stmt 1 view .LVU313
 926:Veno-Echo.cpp ****             {
 1345              		.loc 20 926 16 is_stmt 0 view .LVU314
 1346 0112 3E4B     		ldr	r3, .L75+44
 926:Veno-Echo.cpp ****             {
 1347              		.loc 20 926 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 928:Veno-Echo.cpp ****                 {
 1350              		.loc 20 928 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB1021:
 1353              	.LBI1021:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB1022:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE1022:
 1359              	.LBE1021:
 928:Veno-Echo.cpp ****                 {
 1360              		.loc 20 928 23 view .LVU320
 1361 0118 3D4A     		ldr	r2, .L75+48
 928:Veno-Echo.cpp ****                 {
 1362              		.loc 20 928 17 view .LVU321
 1363 011a 9FED3E7A 		vldr.32	s14, .L75+52
 928:Veno-Echo.cpp ****                 {
 1364              		.loc 20 928 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB1024:
 1368              	.LBB1023:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE1023:
 1372              	.LBE1024:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 79


 928:Veno-Echo.cpp ****                 {
 1373              		.loc 20 928 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
 930:Veno-Echo.cpp ****                 }
 1377              		.loc 20 930 21 is_stmt 1 view .LVU325
 930:Veno-Echo.cpp ****                 }
 1378              		.loc 20 930 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 935:Veno-Echo.cpp ****         {
 1382              		.loc 20 935 9 is_stmt 1 view .LVU327
 1383              	.LBB1025:
 937:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1384              		.loc 20 937 13 view .LVU328
 937:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 937 38 is_stmt 0 view .LVU329
 1386 0138 0120     		movs	r0, #1
 1387 013a 9FED371A 		vldr.32	s2, .L75+56
 1388 013e DFED370A 		vldr.32	s1, .L75+60
 1389 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1390              	.LVL53:
 1391              	.LBB1026:
 1392              	.LBB1027:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1393              		.loc 20 70 28 view .LVU330
 1394 0146 364B     		ldr	r3, .L75+64
 1395              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1396              		.loc 20 70 28 view .LVU331
 1397              	.LBE1027:
 1398              	.LBE1026:
 938:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1399              		.loc 20 938 13 is_stmt 1 view .LVU332
 1400              	.LBB1041:
 1401              	.LBI1026:
  68:Veno-Echo.cpp ****     {
 1402              		.loc 20 68 10 view .LVU333
 1403              	.LBB1039:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1404              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 is_stmt 0 view .LVU335
 1406 0148 DFED326A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1407              		.loc 20 70 28 view .LVU336
 1408 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1409              	.LVL55:
 1410              	.LBB1028:
 1411              	.LBI1028:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1412              		.loc 21 75 3 is_stmt 1 view .LVU337
 1413              	.LBB1029:
 1414              		.loc 21 76 5 view .LVU338
 1415              		.loc 21 76 5 is_stmt 0 view .LVU339
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 80


 1416              	.LBE1029:
 1417              	.LBE1028:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 20 70 15 view .LVU340
 1419 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1420              		.loc 20 70 53 view .LVU341
 1421 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1422              	.LBB1031:
 1423              	.LBB1030:
 1424              		.loc 21 76 31 view .LVU342
 1425 0158 B0EEC77A 		vabs.f32	s14, s14
 1426              	.LBE1030:
 1427              	.LBE1031:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1428              		.loc 20 70 9 view .LVU343
 1429 015c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1431 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1432              		.loc 20 74 29 view .LVU344
 1433 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1434              	.LBB1032:
 1435              	.LBB1033:
 1436              		.loc 19 72 9 view .LVU345
 1437 016a 2E4C     		ldr	r4, .L75+68
 1438              	.LBE1033:
 1439              	.LBE1032:
 1440              	.LBE1039:
 1441              	.LBE1041:
 938:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1442              		.loc 20 938 37 view .LVU346
 1443 016c 1968     		ldr	r1, [r3]
 1444              	.LBB1042:
 1445              	.LBB1040:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1446              		.loc 20 73 13 is_stmt 1 view .LVU347
 1447              	.LBB1036:
 1448              	.LBB1034:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1449              		.loc 19 71 9 is_stmt 0 view .LVU348
 1450 016e 0020     		movs	r0, #0
 1451              	.LBE1034:
 1452              	.LBE1036:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1453              		.loc 20 73 27 view .LVU349
 1454 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1455              		.loc 20 74 13 is_stmt 1 view .LVU350
 1456              	.LVL56:
 1457              	.LBB1037:
 1458              	.LBI1032:
  69:delayline_reverse.h ****     {
 1459              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 is_stmt 0 view .LVU352
 1461              	.LBE1037:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 81


  74:Veno-Echo.cpp ****             //del -> Reset();
 1462              		.loc 20 74 29 view .LVU353
 1463 0174 17EE902A 		vmov	r2, s15	@ int
 1464              	.LBB1038:
 1465              	.LBB1035:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1466              		.loc 19 71 9 view .LVU354
 1467 0178 0860     		str	r0, [r1]	@ float
 1468              		.loc 19 72 9 view .LVU355
 1469 017a A242     		cmp	r2, r4
 1470 017c 28BF     		it	cs
 1471 017e 2246     		movcs	r2, r4
 1472 0180 0A61     		str	r2, [r1, #16]
 1473              	.LVL57:
 1474              	.L62:
 1475              		.loc 19 72 9 view .LVU356
 1476              	.LBE1035:
 1477              	.LBE1038:
 1478              	.LBE1040:
 1479              	.LBE1042:
 939:Veno-Echo.cpp ****             //save setting:
 1480              		.loc 20 939 13 is_stmt 1 view .LVU357
 1481              	.LBB1043:
 1482              	.LBI1043:
  68:Veno-Echo.cpp ****     {
 1483              		.loc 20 68 10 view .LVU358
 1484              	.LBB1044:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1485              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 28 is_stmt 0 view .LVU360
 1487 0182 294B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU361
 1489 0184 DFED236A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1490              		.loc 20 70 28 view .LVU362
 1491 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1492              	.LVL58:
 1493              	.LBB1045:
 1494              	.LBI1045:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1495              		.loc 21 75 3 is_stmt 1 view .LVU363
 1496              	.LBB1046:
 1497              		.loc 21 76 5 view .LVU364
 1498              		.loc 21 76 5 is_stmt 0 view .LVU365
 1499              	.LBE1046:
 1500              	.LBE1045:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1501              		.loc 20 70 15 view .LVU366
 1502 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1503              		.loc 20 70 53 view .LVU367
 1504 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1505              	.LBB1048:
 1506              	.LBB1047:
 1507              		.loc 21 76 31 view .LVU368
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 82


 1508 0194 B0EEC77A 		vabs.f32	s14, s14
 1509              	.LBE1047:
 1510              	.LBE1048:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 20 70 9 view .LVU369
 1512 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1513 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1514 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1515              		.loc 20 74 29 view .LVU370
 1516 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1517              	.LBB1049:
 1518              	.LBB1050:
 1519              		.loc 19 72 9 view .LVU371
 1520 01a6 1F4C     		ldr	r4, .L75+68
 1521              	.LBE1050:
 1522              	.LBE1049:
 1523              	.LBE1044:
 1524              	.LBE1043:
 939:Veno-Echo.cpp ****             //save setting:
 1525              		.loc 20 939 37 view .LVU372
 1526 01a8 1968     		ldr	r1, [r3]
 1527              	.LBB1057:
 1528              	.LBB1056:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1529              		.loc 20 73 13 is_stmt 1 view .LVU373
 1530              	.LBB1053:
 1531              	.LBB1051:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1532              		.loc 19 71 9 is_stmt 0 view .LVU374
 1533 01aa 0020     		movs	r0, #0
 1534              	.LBE1051:
 1535              	.LBE1053:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1536              		.loc 20 73 27 view .LVU375
 1537 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1538              		.loc 20 74 13 is_stmt 1 view .LVU376
 1539              	.LVL59:
 1540              	.LBB1054:
 1541              	.LBI1049:
  69:delayline_reverse.h ****     {
 1542              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 is_stmt 0 view .LVU378
 1544              	.LBE1054:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1545              		.loc 20 74 29 view .LVU379
 1546 01b0 17EE902A 		vmov	r2, s15	@ int
 1547              	.LBB1055:
 1548              	.LBB1052:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1549              		.loc 19 71 9 view .LVU380
 1550 01b4 0860     		str	r0, [r1]	@ float
 1551              		.loc 19 72 9 view .LVU381
 1552 01b6 A242     		cmp	r2, r4
 1553 01b8 28BF     		it	cs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 83


 1554 01ba 2246     		movcs	r2, r4
 1555 01bc 0A61     		str	r2, [r1, #16]
 1556              	.LVL60:
 1557              	.L56:
 1558              		.loc 19 72 9 view .LVU382
 1559              	.LBE1052:
 1560              	.LBE1055:
 1561              	.LBE1056:
 1562              	.LBE1057:
 941:Veno-Echo.cpp ****             save_flag = true;
 1563              		.loc 20 941 13 is_stmt 1 view .LVU383
 941:Veno-Echo.cpp ****             save_flag = true;
 1564              		.loc 20 941 35 is_stmt 0 view .LVU384
 1565 01be 1B49     		ldr	r1, .L75+76
 1566              	.LBB1058:
 1567              	.LBB1059:
 1568              	.LBB1060:
 1569              	.LBB1061:
 1570              	.LBB1062:
 1571              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 84


  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 85


  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 86


 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 87


 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 88


 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 89


 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 90


 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1572              		.loc 22 397 18 view .LVU385
 1573 01c0 0122     		movs	r2, #1
 1574 01c2 1B4B     		ldr	r3, .L75+80
 1575              	.LBE1062:
 1576              	.LBE1061:
 1577              	.LBE1060:
 1578              	.LBE1059:
 1579              	.LBE1058:
 941:Veno-Echo.cpp ****             save_flag = true;
 1580              		.loc 20 941 35 view .LVU386
 1581 01c4 81ED000A 		vstr.32	s0, [r1]
 942:Veno-Echo.cpp ****         }
 1582              		.loc 20 942 13 is_stmt 1 view .LVU387
 1583              	.LVL61:
 1584              	.LBB1067:
 1585              	.LBI1058:
 1586              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 91


  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 92


  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1587              		.loc 23 80 5 view .LVU388
 1588              	.LBB1066:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1589              		.loc 23 81 7 view .LVU389
 1590              	.LBB1065:
 1591              	.LBI1060:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1592              		.loc 22 288 7 view .LVU390
 1593              	.LBB1064:
 1594              	.LBI1061:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1595              		.loc 22 390 7 view .LVU391
 1596              	.LBB1063:
 1597              		.loc 22 397 18 is_stmt 0 view .LVU392
 1598 01c8 BFF35B8F 		dmb	ish
 1599 01cc 1A70     		strb	r2, [r3]
 1600 01ce BFF35B8F 		dmb	ish
 1601              	.LVL62:
 1602              		.loc 22 397 18 view .LVU393
 1603              	.LBE1063:
 1604              	.LBE1064:
 1605              	.LBE1065:
 1606              	.LBE1066:
 1607              	.LBE1067:
 1608              	.LBE1025:
 1609              	.LBE1069:
 1610              	.LBE1075:
 946:Veno-Echo.cpp **** 
 1611              		.loc 20 946 1 view .LVU394
 1612 01d2 10BD     		pop	{r4, pc}
 1613              	.LVL63:
 1614              	.L73:
 1615              	.LBB1076:
 1616              	.LBB1070:
 1617              	.LBB1016:
 1618              	.LBB1004:
2021:Veno-Echo.cpp ****     }
 1619              		.loc 20 2021 16 view .LVU395
 1620 01d4 DFED177A 		vldr.32	s15, .L75+84
 1621              	.LVL64:
2021:Veno-Echo.cpp ****     }
 1622              		.loc 20 2021 16 view .LVU396
 1623 01d8 51E7     		b	.L50
 1624              	.LVL65:
 1625              	.L74:
2021:Veno-Echo.cpp ****     }
 1626              		.loc 20 2021 16 view .LVU397
 1627              	.LBE1004:
 1628              	.LBE1016:
 1629              	.LBB1017:
 1630              	.LBB1014:
 1631 01da DFED167A 		vldr.32	s15, .L75+84
 1632 01de 94E7     		b	.L48
 1633              	.L76:
 1634              		.align	2
 1635              	.L75:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 93


 1636 01e0 18000000 		.word	.LANCHOR4+24
 1637 01e4 00000000 		.word	.LANCHOR6
 1638 01e8 ABAAAA2A 		.word	715827883
 1639 01ec 00000000 		.word	.LANCHOR7
 1640 01f0 00000000 		.word	.LANCHOR8
 1641 01f4 00000000 		.word	.LANCHOR9
 1642 01f8 00000000 		.word	.LANCHOR10
 1643 01fc 00000000 		.word	.LANCHOR5
 1644 0200 00000000 		.word	.LANCHOR11
 1645 0204 00000000 		.word	.LANCHOR12
 1646 0208 00000000 		.word	.LANCHOR0
 1647 020c 00000000 		.word	.LANCHOR13
 1648 0210 00000000 		.word	.LANCHOR14
 1649 0214 0AD7A33B 		.word	1000593162
 1650 0218 0050C346 		.word	1187205120
 1651 021c 00606A48 		.word	1214930944
 1652 0220 00000000 		.word	.LANCHOR2
 1653 0224 BF270900 		.word	599999
 1654 0228 00000000 		.word	.LANCHOR3
 1655 022c 00000000 		.word	.LANCHOR15
 1656 0230 00000000 		.word	.LANCHOR16
 1657 0234 00000000 		.word	0
 1658              	.LBE1014:
 1659              	.LBE1017:
 1660              	.LBE1070:
 1661              	.LBE1076:
 1662              		.cfi_endproc
 1663              	.LFE4313:
 1665              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	_Z20Update_DelayTimeR_CVv
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv5-d16
 1674              	_Z20Update_DelayTimeR_CVv:
 1675              	.LFB4314:
 949:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1676              		.loc 20 949 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 950:Veno-Echo.cpp **** }
 1680              		.loc 20 950 5 view .LVU399
 949:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1681              		.loc 20 949 1 is_stmt 0 view .LVU400
 1682 0000 08B5     		push	{r3, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 3, -8
 1685              		.cfi_offset 14, -4
 950:Veno-Echo.cpp **** }
 1686              		.loc 20 950 36 view .LVU401
 1687 0002 0121     		movs	r1, #1
 1688 0004 0348     		ldr	r0, .L79
 1689 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1690              	.LVL66:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 94


 950:Veno-Echo.cpp **** }
 1691              		.loc 20 950 19 view .LVU402
 1692 000a 034B     		ldr	r3, .L79+4
 1693 000c 83ED000A 		vstr.32	s0, [r3]
 951:Veno-Echo.cpp **** 
 1694              		.loc 20 951 1 view .LVU403
 1695 0010 08BD     		pop	{r3, pc}
 1696              	.L80:
 1697 0012 00BF     		.align	2
 1698              	.L79:
 1699 0014 18000000 		.word	.LANCHOR4+24
 1700 0018 00000000 		.word	.LANCHOR17
 1701              		.cfi_endproc
 1702              	.LFE4314:
 1704              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	_Z17Update_DelayTimeRv
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	_Z17Update_DelayTimeRv:
 1714              	.LFB4315:
 954:Veno-Echo.cpp ****     static bool lastShift{};
 1715              		.loc 20 954 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 955:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1719              		.loc 20 955 5 view .LVU405
 956:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1720              		.loc 20 956 5 view .LVU406
 957:Veno-Echo.cpp ****     
 1721              		.loc 20 957 5 view .LVU407
 959:Veno-Echo.cpp **** 
 1722              		.loc 20 959 5 view .LVU408
 962:Veno-Echo.cpp **** 
 1723              		.loc 20 962 5 view .LVU409
 954:Veno-Echo.cpp ****     static bool lastShift{};
 1724              		.loc 20 954 1 is_stmt 0 view .LVU410
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 962:Veno-Echo.cpp **** 
 1729              		.loc 20 962 44 view .LVU411
 1730 0002 0622     		movs	r2, #6
 1731 0004 0721     		movs	r1, #7
 1732 0006 6948     		ldr	r0, .L111
 954:Veno-Echo.cpp ****     static bool lastShift{};
 1733              		.loc 20 954 1 view .LVU412
 1734 0008 2DED028B 		vpush.64	{d8}
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 80, -16
 1737              		.cfi_offset 81, -12
 962:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 95


 1738              		.loc 20 962 44 view .LVU413
 1739 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1740              	.LVL67:
 967:Veno-Echo.cpp **** 
 1741              		.loc 20 967 26 view .LVU414
 1742 0010 6749     		ldr	r1, .L111+4
 967:Veno-Echo.cpp **** 
 1743              		.loc 20 967 31 view .LVU415
 1744 0012 684B     		ldr	r3, .L111+8
 1745              	.LVL68:
 966:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1746              		.loc 20 966 5 is_stmt 1 view .LVU416
 967:Veno-Echo.cpp **** 
 1747              		.loc 20 967 5 view .LVU417
 967:Veno-Echo.cpp **** 
 1748              		.loc 20 967 26 is_stmt 0 view .LVU418
 1749 0014 0A68     		ldr	r2, [r1]
 1750              	.LBB1077:
 969:Veno-Echo.cpp ****     {
 1751              		.loc 20 969 9 view .LVU419
 1752 0016 6848     		ldr	r0, .L111+12
 1753              	.LBE1077:
 967:Veno-Echo.cpp **** 
 1754              		.loc 20 967 26 view .LVU420
 1755 0018 0132     		adds	r2, r2, #1
 1756              	.LBB1126:
 969:Veno-Echo.cpp ****     {
 1757              		.loc 20 969 5 view .LVU421
 1758 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1759              	.LBE1126:
 967:Veno-Echo.cpp **** 
 1760              		.loc 20 967 31 view .LVU422
 1761 001c 83FB0243 		smull	r4, r3, r3, r2
 1762 0020 D417     		asrs	r4, r2, #31
 1763 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1764 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1765 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1766              	.LBB1127:
 1767              	.LBB1078:
 973:Veno-Echo.cpp ****         {
 1768              		.loc 20 973 19 view .LVU423
 1769 002e 634A     		ldr	r2, .L111+16
 1770              	.LBE1078:
 1771              	.LBE1127:
 967:Veno-Echo.cpp **** 
 1772              		.loc 20 967 14 view .LVU424
 1773 0030 0B60     		str	r3, [r1]
 969:Veno-Echo.cpp ****     {
 1774              		.loc 20 969 5 is_stmt 1 view .LVU425
 1775              	.LBB1128:
 1776 0032 90BB     		cbnz	r0, .L82
 1777              	.LBB1097:
 971:Veno-Echo.cpp ****         //udpate pickup
 1778              		.loc 20 971 9 view .LVU426
 973:Veno-Echo.cpp ****         {
 1779              		.loc 20 973 9 view .LVU427
 1780 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 96


 1781 0036 0029     		cmp	r1, #0
 1782 0038 3CD0     		beq	.L83
 975:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1783              		.loc 20 975 13 view .LVU428
 976:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1784              		.loc 20 976 31 is_stmt 0 view .LVU429
 1785 003a 614C     		ldr	r4, .L111+20
 977:Veno-Echo.cpp ****         } 
 1786              		.loc 20 977 28 view .LVU430
 1787 003c 6149     		ldr	r1, .L111+24
 975:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1788              		.loc 20 975 23 view .LVU431
 1789 003e 1070     		strb	r0, [r2]
 976:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 976 13 is_stmt 1 view .LVU432
 976:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1791              		.loc 20 976 31 is_stmt 0 view .LVU433
 1792 0040 2070     		strb	r0, [r4]
 977:Veno-Echo.cpp ****         } 
 1793              		.loc 20 977 13 is_stmt 1 view .LVU434
 977:Veno-Echo.cpp ****         } 
 1794              		.loc 20 977 28 is_stmt 0 view .LVU435
 1795 0042 81ED000A 		vstr.32	s0, [r1]
 1796              	.L84:
 990:Veno-Echo.cpp **** 
 1797              		.loc 20 990 9 is_stmt 1 view .LVU436
 1798              	.LVL69:
 992:Veno-Echo.cpp ****         {
 1799              		.loc 20 992 9 view .LVU437
1000:Veno-Echo.cpp ****         }
 1800              		.loc 20 1000 13 view .LVU438
 1801              	.LBB1079:
 1802              	.LBI1079:
2014:Veno-Echo.cpp **** {
 1803              		.loc 20 2014 7 view .LVU439
 1804              	.LBB1080:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1805              		.loc 20 2016 5 view .LVU440
2017:Veno-Echo.cpp **** 
 1806              		.loc 20 2017 5 view .LVU441
 1807              	.LBE1080:
 1808              	.LBE1079:
1000:Veno-Echo.cpp ****         }
 1809              		.loc 20 1000 36 is_stmt 0 view .LVU442
 1810 0046 6049     		ldr	r1, .L111+28
 1811              	.LBB1084:
 1812              	.LBB1081:
2017:Veno-Echo.cpp **** 
 1813              		.loc 20 2017 39 view .LVU443
 1814 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 1815              		.loc 20 2017 49 view .LVU444
 1816 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1817              	.LBE1081:
 1818              	.LBE1084:
1000:Veno-Echo.cpp ****         }
 1819              		.loc 20 1000 36 view .LVU445
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 97


 1820 0050 5E4A     		ldr	r2, .L111+32
 1821              	.LBB1085:
 1822              	.LBB1082:
2017:Veno-Echo.cpp **** 
 1823              		.loc 20 2017 39 view .LVU446
 1824 0052 91ED007A 		vldr.32	s14, [r1]
2017:Veno-Echo.cpp **** 
 1825              		.loc 20 2017 12 view .LVU447
 1826 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1827 005a D2ED007A 		vldr.32	s15, [r2]
2017:Veno-Echo.cpp **** 
 1828              		.loc 20 2017 39 view .LVU448
 1829 005e 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
 1830              		.loc 20 2017 49 view .LVU449
 1831 0062 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 1832              		.loc 20 2017 12 view .LVU450
 1833 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1834              	.LVL70:
2019:Veno-Echo.cpp ****     {
 1835              		.loc 20 2019 5 is_stmt 1 view .LVU451
 1836 006a F5EEC07A 		vcmpe.f32	s15, #0
 1837 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1838 0072 00F18C80 		bmi	.L109
2024:Veno-Echo.cpp ****     {
 1839              		.loc 20 2024 5 view .LVU452
2026:Veno-Echo.cpp ****     }
 1840              		.loc 20 2026 16 is_stmt 0 view .LVU453
 1841 0076 F4EE667A 		vcmp.f32	s15, s13
 1842 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1843 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1844              	.LVL71:
 1845              	.L89:
2026:Veno-Echo.cpp ****     }
 1846              		.loc 20 2026 16 view .LVU454
 1847              	.LBE1082:
 1848              	.LBE1085:
1003:Veno-Echo.cpp ****         {
 1849              		.loc 20 1003 9 is_stmt 1 view .LVU455
 1850 0082 A3B9     		cbnz	r3, .L81
1005:Veno-Echo.cpp ****             {
 1851              		.loc 20 1005 13 view .LVU456
1005:Veno-Echo.cpp ****             {
 1852              		.loc 20 1005 35 is_stmt 0 view .LVU457
 1853 0084 524B     		ldr	r3, .L111+36
 1854 0086 B0EE670A 		vmov.f32	s0, s15
 1855              	.LVL72:
1005:Veno-Echo.cpp ****             {
 1856              		.loc 20 1005 35 view .LVU458
 1857 008a 5248     		ldr	r0, .L111+40
 1858 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1859              	.LBE1097:
 1860              	.LBE1128:
1046:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1861              		.loc 20 1046 1 view .LVU459
 1862 008e BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 98


 1863              		.cfi_remember_state
 1864              		.cfi_restore 80
 1865              		.cfi_restore 81
 1866              		.cfi_def_cfa_offset 8
 1867 0092 BDE81040 		pop	{r4, lr}
 1868              		.cfi_restore 14
 1869              		.cfi_restore 4
 1870              		.cfi_def_cfa_offset 0
 1871              	.LBB1129:
 1872              	.LBB1098:
1005:Veno-Echo.cpp ****             {
 1873              		.loc 20 1005 35 view .LVU460
 1874 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1875              	.LVL73:
 1876              	.L82:
 1877              		.cfi_restore_state
1005:Veno-Echo.cpp ****             {
 1878              		.loc 20 1005 35 view .LVU461
 1879              	.LBE1098:
 1880              	.LBB1099:
1015:Veno-Echo.cpp **** 
 1881              		.loc 20 1015 9 is_stmt 1 view .LVU462
1017:Veno-Echo.cpp ****         {
 1882              		.loc 20 1017 9 view .LVU463
 1883 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1884 009c 002B     		cmp	r3, #0
 1885 009e 3ED1     		bne	.L92
1019:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1886              		.loc 20 1019 13 view .LVU464
1019:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1887              		.loc 20 1019 23 is_stmt 0 view .LVU465
 1888 00a0 0124     		movs	r4, #1
1020:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1889              		.loc 20 1020 29 view .LVU466
 1890 00a2 4D48     		ldr	r0, .L111+44
1021:Veno-Echo.cpp ****         }
 1891              		.loc 20 1021 26 view .LVU467
 1892 00a4 4D49     		ldr	r1, .L111+48
1019:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1893              		.loc 20 1019 23 view .LVU468
 1894 00a6 1470     		strb	r4, [r2]
1020:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1895              		.loc 20 1020 13 is_stmt 1 view .LVU469
1020:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1896              		.loc 20 1020 29 is_stmt 0 view .LVU470
 1897 00a8 0370     		strb	r3, [r0]
1021:Veno-Echo.cpp ****         }
 1898              		.loc 20 1021 13 is_stmt 1 view .LVU471
1021:Veno-Echo.cpp ****         }
 1899              		.loc 20 1021 26 is_stmt 0 view .LVU472
 1900 00aa 81ED000A 		vstr.32	s0, [r1]
 1901              	.L81:
1021:Veno-Echo.cpp ****         }
 1902              		.loc 20 1021 26 view .LVU473
 1903              	.LBE1099:
 1904              	.LBE1129:
1046:Veno-Echo.cpp **** void Update_feedbackL_CV()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 99


 1905              		.loc 20 1046 1 view .LVU474
 1906 00ae BDEC028B 		vldm	sp!, {d8}
 1907              		.cfi_remember_state
 1908              		.cfi_restore 80
 1909              		.cfi_restore 81
 1910              		.cfi_def_cfa_offset 8
 1911 00b2 10BD     		pop	{r4, pc}
 1912              	.L83:
 1913              		.cfi_restore_state
 1914              	.LBB1130:
 1915              	.LBB1122:
 981:Veno-Echo.cpp ****             {
 1916              		.loc 20 981 13 is_stmt 1 view .LVU475
 981:Veno-Echo.cpp ****             {
 1917              		.loc 20 981 16 is_stmt 0 view .LVU476
 1918 00b4 424A     		ldr	r2, .L111+20
 981:Veno-Echo.cpp ****             {
 1919              		.loc 20 981 13 view .LVU477
 1920 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1921 00b8 79B9     		cbnz	r1, .L85
 983:Veno-Echo.cpp ****                 {
 1922              		.loc 20 983 17 is_stmt 1 view .LVU478
 1923              	.LVL74:
 1924              	.LBB1086:
 1925              	.LBI1086:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1926              		.loc 21 75 3 view .LVU479
 1927              	.LBB1087:
 1928              		.loc 21 76 5 view .LVU480
 1929              		.loc 21 76 5 is_stmt 0 view .LVU481
 1930              	.LBE1087:
 1931              	.LBE1086:
 983:Veno-Echo.cpp ****                 {
 1932              		.loc 20 983 23 view .LVU482
 1933 00ba 4249     		ldr	r1, .L111+24
 983:Veno-Echo.cpp ****                 {
 1934              		.loc 20 983 17 view .LVU483
 1935 00bc 9FED487A 		vldr.32	s14, .L111+52
 983:Veno-Echo.cpp ****                 {
 1936              		.loc 20 983 23 view .LVU484
 1937 00c0 D1ED007A 		vldr.32	s15, [r1]
 1938 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1939              	.LBB1089:
 1940              	.LBB1088:
 1941              		.loc 21 76 31 view .LVU485
 1942 00c8 F0EEE77A 		vabs.f32	s15, s15
 1943              	.LBE1088:
 1944              	.LBE1089:
 983:Veno-Echo.cpp ****                 {
 1945              		.loc 20 983 17 view .LVU486
 1946 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1947 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1948 00d4 B7DD     		ble	.L84
 985:Veno-Echo.cpp ****                 }
 1949              		.loc 20 985 21 is_stmt 1 view .LVU487
 985:Veno-Echo.cpp ****                 }
 1950              		.loc 20 985 39 is_stmt 0 view .LVU488
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 100


 1951 00d6 0121     		movs	r1, #1
 1952 00d8 1170     		strb	r1, [r2]
 1953              	.L85:
 990:Veno-Echo.cpp **** 
 1954              		.loc 20 990 9 is_stmt 1 view .LVU489
 1955              	.LVL75:
 992:Veno-Echo.cpp ****         {
 1956              		.loc 20 992 9 view .LVU490
 994:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1957              		.loc 20 994 13 view .LVU491
 1958              	.LBB1090:
 1959              	.LBI1090:
2014:Veno-Echo.cpp **** {
 1960              		.loc 20 2014 7 view .LVU492
 1961              	.LBB1091:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 20 2016 5 view .LVU493
2017:Veno-Echo.cpp **** 
 1963              		.loc 20 2017 5 view .LVU494
 1964              	.LBE1091:
 1965              	.LBE1090:
 994:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1966              		.loc 20 994 36 is_stmt 0 view .LVU495
 1967 00da 3B4A     		ldr	r2, .L111+28
 1968              	.LBB1094:
 1969              	.LBB1092:
2017:Veno-Echo.cpp **** 
 1970              		.loc 20 2017 39 view .LVU496
 1971 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 1972              		.loc 20 2017 49 view .LVU497
 1973 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 1974              		.loc 20 2017 39 view .LVU498
 1975 00e4 D2ED007A 		vldr.32	s15, [r2]
2017:Veno-Echo.cpp **** 
 1976              		.loc 20 2017 12 view .LVU499
 1977 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 1978              		.loc 20 2017 39 view .LVU500
 1979 00ec 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 1980              		.loc 20 2017 49 view .LVU501
 1981 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 1982              		.loc 20 2017 12 view .LVU502
 1983 00f4 B0EE406A 		vmov.f32	s12, s0
 1984 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 1985              		.loc 20 2019 5 view .LVU503
 1986 00fc B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 1987              		.loc 20 2017 12 view .LVU504
 1988 0100 F0EE467A 		vmov.f32	s15, s12
 1989              	.LVL76:
2019:Veno-Echo.cpp ****     {
 1990              		.loc 20 2019 5 is_stmt 1 view .LVU505
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 101


 1991 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1992 0108 44D4     		bmi	.L110
2024:Veno-Echo.cpp ****     {
 1993              		.loc 20 2024 5 view .LVU506
2026:Veno-Echo.cpp ****     }
 1994              		.loc 20 2026 16 is_stmt 0 view .LVU507
 1995 010a F4EE477A 		vcmp.f32	s15, s14
 1996 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1997 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1998              	.L87:
 1999              	.LVL77:
 2000              		.loc 20 2029 5 is_stmt 1 view .LVU508
 2001              		.loc 20 2029 5 is_stmt 0 view .LVU509
 2002              	.LBE1092:
 2003              	.LBE1094:
 995:Veno-Echo.cpp ****         }
 2004              		.loc 20 995 13 is_stmt 1 view .LVU510
 995:Veno-Echo.cpp ****         }
 2005              		.loc 20 995 29 is_stmt 0 view .LVU511
 2006 0116 2D4A     		ldr	r2, .L111+32
 2007 0118 82ED000A 		vstr.32	s0, [r2]
 2008 011c B1E7     		b	.L89
 2009              	.LVL78:
 2010              	.L92:
 995:Veno-Echo.cpp ****         }
 2011              		.loc 20 995 29 view .LVU512
 2012              	.LBE1122:
 2013              	.LBB1123:
1026:Veno-Echo.cpp ****             {
 2014              		.loc 20 1026 13 is_stmt 1 view .LVU513
1026:Veno-Echo.cpp ****             {
 2015              		.loc 20 1026 16 is_stmt 0 view .LVU514
 2016 011e 2E4B     		ldr	r3, .L111+44
1026:Veno-Echo.cpp ****             {
 2017              		.loc 20 1026 13 view .LVU515
 2018 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 0122 7AB9     		cbnz	r2, .L93
1028:Veno-Echo.cpp ****                 {
 2020              		.loc 20 1028 17 is_stmt 1 view .LVU516
 2021              	.LVL79:
 2022              	.LBB1100:
 2023              	.LBI1100:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2024              		.loc 21 75 3 view .LVU517
 2025              	.LBB1101:
 2026              		.loc 21 76 5 view .LVU518
 2027              		.loc 21 76 5 is_stmt 0 view .LVU519
 2028              	.LBE1101:
 2029              	.LBE1100:
1028:Veno-Echo.cpp ****                 {
 2030              		.loc 20 1028 23 view .LVU520
 2031 0124 2D4A     		ldr	r2, .L111+48
1028:Veno-Echo.cpp ****                 {
 2032              		.loc 20 1028 17 view .LVU521
 2033 0126 9FED2E7A 		vldr.32	s14, .L111+52
1028:Veno-Echo.cpp ****                 {
 2034              		.loc 20 1028 23 view .LVU522
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 102


 2035 012a D2ED007A 		vldr.32	s15, [r2]
 2036 012e 70EE677A 		vsub.f32	s15, s0, s15
 2037              	.LBB1103:
 2038              	.LBB1102:
 2039              		.loc 21 76 31 view .LVU523
 2040 0132 F0EEE77A 		vabs.f32	s15, s15
 2041              	.LBE1102:
 2042              	.LBE1103:
1028:Veno-Echo.cpp ****                 {
 2043              		.loc 20 1028 17 view .LVU524
 2044 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2045 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2046 013e B6DD     		ble	.L81
1030:Veno-Echo.cpp ****                 }
 2047              		.loc 20 1030 21 is_stmt 1 view .LVU525
1030:Veno-Echo.cpp ****                 }
 2048              		.loc 20 1030 37 is_stmt 0 view .LVU526
 2049 0140 0122     		movs	r2, #1
 2050 0142 1A70     		strb	r2, [r3]
 2051              	.L93:
1035:Veno-Echo.cpp ****         {
 2052              		.loc 20 1035 9 is_stmt 1 view .LVU527
 2053              	.LBB1104:
1037:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2054              		.loc 20 1037 13 view .LVU528
 2055              	.LVL80:
1038:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2056              		.loc 20 1038 13 view .LVU529
1038:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2057              		.loc 20 1038 61 is_stmt 0 view .LVU530
 2058 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2059 0148 0020     		movs	r0, #0
 2060 014a 9FED261A 		vldr.32	s2, .L111+56
 2061 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2062              	.LVL81:
 2063              	.LBB1105:
 2064              	.LBI1105:
 2065              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 103


  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 104


  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 105


 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 106


 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 107


 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 108


 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 109


 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 110


 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 111


 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 112


 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 113


 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 114


 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 115


 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 116


 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 117


 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 118


 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 119


 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 120


 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 121


1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 122


1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 123


1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 124


1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 125


1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 126


1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 127


1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 128


1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 129


1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 130


1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 131


1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 132


1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 133


1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2066              		.loc 24 1756 3 is_stmt 1 view .LVU531
 2067              	.LBB1106:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2068              		.loc 24 1757 5 view .LVU532
 2069              		.loc 24 1757 28 is_stmt 0 view .LVU533
 2070 0152 B8FE400A 		vrinta.f32	s0, s0
 2071              	.LVL82:
 2072              		.loc 24 1757 28 view .LVU534
 2073              	.LBE1106:
 2074              	.LBE1105:
1039:Veno-Echo.cpp ****             //save setting:
 2075              		.loc 20 1039 13 is_stmt 1 view .LVU535
 2076              	.LBB1107:
 2077              	.LBI1107:
2030:Veno-Echo.cpp **** }
2031:Veno-Echo.cpp **** 
2032:Veno-Echo.cpp **** //checks pickup state of primary controls
2033:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2034:Veno-Echo.cpp **** {
2035:Veno-Echo.cpp ****     bool retval{};
2036:Veno-Echo.cpp ****     
2037:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2038:Veno-Echo.cpp ****     {
2039:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2040:Veno-Echo.cpp ****         {
2041:Veno-Echo.cpp ****             retval = false;
2042:Veno-Echo.cpp ****         }
2043:Veno-Echo.cpp ****         else
2044:Veno-Echo.cpp ****         {
2045:Veno-Echo.cpp ****             retval = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 134


2046:Veno-Echo.cpp ****         }
2047:Veno-Echo.cpp ****     }
2048:Veno-Echo.cpp **** 
2049:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2050:Veno-Echo.cpp ****     {
2051:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2052:Veno-Echo.cpp ****     {
2053:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2054:Veno-Echo.cpp ****         {
2055:Veno-Echo.cpp ****             retval = true;
2056:Veno-Echo.cpp ****         }
2057:Veno-Echo.cpp **** 
2058:Veno-Echo.cpp ****         else
2059:Veno-Echo.cpp ****         {
2060:Veno-Echo.cpp ****             retval = false;
2061:Veno-Echo.cpp ****         }
2062:Veno-Echo.cpp **** 
2063:Veno-Echo.cpp ****     }
2064:Veno-Echo.cpp ****     else    //previous state is picked up
2065:Veno-Echo.cpp ****     {
2066:Veno-Echo.cpp ****         retval = true;  //always return true
2067:Veno-Echo.cpp ****     }
2068:Veno-Echo.cpp **** 
2069:Veno-Echo.cpp ****     }
2070:Veno-Echo.cpp ****     return retval;
2071:Veno-Echo.cpp **** 
2072:Veno-Echo.cpp **** }
2073:Veno-Echo.cpp **** 
2074:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2075:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2076:Veno-Echo.cpp **** {
2077:Veno-Echo.cpp ****     pickupState retval{};
2078:Veno-Echo.cpp **** 
2079:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
2080:Veno-Echo.cpp ****     {
2081:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2082:Veno-Echo.cpp ****         {
2083:Veno-Echo.cpp ****             retval = BELOW;
2084:Veno-Echo.cpp ****         }
2085:Veno-Echo.cpp ****         
2086:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2087:Veno-Echo.cpp ****         {
2088:Veno-Echo.cpp ****             retval = ABOVE;
2089:Veno-Echo.cpp ****         }
2090:Veno-Echo.cpp **** 
2091:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2092:Veno-Echo.cpp ****         {
2093:Veno-Echo.cpp ****             retval = PICKEDUP;
2094:Veno-Echo.cpp ****         }
2095:Veno-Echo.cpp ****     }
2096:Veno-Echo.cpp **** 
2097:Veno-Echo.cpp ****     else    //not a recent shift change
2098:Veno-Echo.cpp ****     {
2099:Veno-Echo.cpp ****         switch(lastState)
2100:Veno-Echo.cpp ****         {
2101:Veno-Echo.cpp ****             case BELOW:
2102:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 135


2103:Veno-Echo.cpp ****                 retval = PICKEDUP;
2104:Veno-Echo.cpp ****             else
2105:Veno-Echo.cpp ****                 retval = lastState;
2106:Veno-Echo.cpp ****             break;
2107:Veno-Echo.cpp **** 
2108:Veno-Echo.cpp ****             case ABOVE:
2109:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2110:Veno-Echo.cpp ****                 retval = PICKEDUP;
2111:Veno-Echo.cpp ****             else
2112:Veno-Echo.cpp ****                 retval = lastState;
2113:Veno-Echo.cpp ****             break;
2114:Veno-Echo.cpp ****             case PICKEDUP:
2115:Veno-Echo.cpp ****                 retval = lastState;
2116:Veno-Echo.cpp ****             break;
2117:Veno-Echo.cpp ****         }
2118:Veno-Echo.cpp ****     }
2119:Veno-Echo.cpp ****     
2120:Veno-Echo.cpp ****     return retval;
2121:Veno-Echo.cpp **** }
2122:Veno-Echo.cpp **** 
2123:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2078              		.loc 20 2123 8 view .LVU536
 2079              	.LBB1108:
2124:Veno-Echo.cpp **** {
2125:Veno-Echo.cpp **** double retVal{};
 2080              		.loc 20 2125 1 view .LVU537
2126:Veno-Echo.cpp ****     switch(ratio)
 2081              		.loc 20 2126 5 view .LVU538
 2082              	.LBE1108:
 2083              	.LBE1107:
1038:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2084              		.loc 20 1038 130 is_stmt 0 view .LVU539
 2085 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2086 015a 17EE903A 		vmov	r3, s15	@ int
 2087 015e 013B     		subs	r3, r3, #1
 2088 0160 DBB2     		uxtb	r3, r3
 2089 0162 022B     		cmp	r3, #2
 2090 0164 19D9     		bls	.L97
 2091 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2092              	.L98:
 2093              	.LVL83:
 2094              	.LBB1110:
 2095              	.LBB1109:
2127:Veno-Echo.cpp ****     {
2128:Veno-Echo.cpp ****         case QUARTER:
2129:Veno-Echo.cpp ****         retVal = 1.0;
2130:Veno-Echo.cpp ****         break;
2131:Veno-Echo.cpp **** 
2132:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2133:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2134:Veno-Echo.cpp ****         break;
2135:Veno-Echo.cpp **** 
2136:Veno-Echo.cpp ****         case EIGHT:
2137:Veno-Echo.cpp ****         retVal = 2.0;
2138:Veno-Echo.cpp ****         break;
2139:Veno-Echo.cpp **** 
2140:Veno-Echo.cpp ****         case TWELVE:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 136


2141:Veno-Echo.cpp ****         retVal = 3.0;
2142:Veno-Echo.cpp ****         break;
2143:Veno-Echo.cpp **** 
2144:Veno-Echo.cpp ****         default:
2145:Veno-Echo.cpp ****         retVal = 1.0;
2146:Veno-Echo.cpp ****         break;
2147:Veno-Echo.cpp ****     }
2148:Veno-Echo.cpp **** 
2149:Veno-Echo.cpp **** return retVal;
 2096              		.loc 20 2149 1 is_stmt 1 view .LVU540
 2097              		.loc 20 2149 1 is_stmt 0 view .LVU541
 2098              	.LBE1109:
 2099              	.LBE1110:
1039:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 20 1039 34 view .LVU542
 2101 016a B0EE480A 		vmov.f32	s0, s16
 2102              	.LVL84:
1039:Veno-Echo.cpp ****             //save setting:
 2103              		.loc 20 1039 34 view .LVU543
 2104 016e 1E48     		ldr	r0, .L111+60
 2105 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2106              	.LVL85:
1041:Veno-Echo.cpp ****             save_flag = true;
 2107              		.loc 20 1041 13 is_stmt 1 view .LVU544
1041:Veno-Echo.cpp ****             save_flag = true;
 2108              		.loc 20 1041 13 is_stmt 0 view .LVU545
 2109              	.LBE1104:
 2110              	.LBE1123:
 2111              	.LBE1130:
2125:Veno-Echo.cpp ****     switch(ratio)
 2112              		.loc 20 2125 1 is_stmt 1 view .LVU546
2126:Veno-Echo.cpp ****     {
 2113              		.loc 20 2126 5 view .LVU547
 2114              		.loc 20 2149 1 view .LVU548
 2115              	.LBB1131:
 2116              	.LBB1124:
 2117              	.LBB1121:
1041:Veno-Echo.cpp ****             save_flag = true;
 2118              		.loc 20 1041 34 is_stmt 0 view .LVU549
 2119 0174 1D49     		ldr	r1, .L111+64
 2120              	.LBB1111:
 2121              	.LBB1112:
 2122              	.LBB1113:
 2123              	.LBB1114:
 2124              	.LBB1115:
 2125              		.loc 22 397 18 view .LVU550
 2126 0176 1E4B     		ldr	r3, .L111+68
 2127 0178 0122     		movs	r2, #1
 2128              	.LBE1115:
 2129              	.LBE1114:
 2130              	.LBE1113:
 2131              	.LBE1112:
 2132              	.LBE1111:
1041:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 20 1041 34 view .LVU551
 2134 017a 81ED018A 		vstr.32	s16, [r1, #4]
1042:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 137


 2135              		.loc 20 1042 13 is_stmt 1 view .LVU552
 2136              	.LVL86:
 2137              	.LBB1120:
 2138              	.LBI1111:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2139              		.loc 23 80 5 view .LVU553
 2140              	.LBB1119:
 2141              		.loc 23 81 7 view .LVU554
 2142              	.LBB1118:
 2143              	.LBI1113:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2144              		.loc 22 288 7 view .LVU555
 2145              	.LBB1117:
 2146              	.LBI1114:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2147              		.loc 22 390 7 view .LVU556
 2148              	.LBB1116:
 2149              		.loc 22 397 18 is_stmt 0 view .LVU557
 2150 017e BFF35B8F 		dmb	ish
 2151 0182 1A70     		strb	r2, [r3]
 2152 0184 BFF35B8F 		dmb	ish
 2153              	.LVL87:
 2154              		.loc 22 397 18 view .LVU558
 2155              	.LBE1116:
 2156              	.LBE1117:
 2157              	.LBE1118:
 2158              	.LBE1119:
 2159              	.LBE1120:
 2160              	.LBE1121:
 2161              	.LBE1124:
 2162              	.LBE1131:
1046:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2163              		.loc 20 1046 1 view .LVU559
 2164 0188 BDEC028B 		vldm	sp!, {d8}
 2165              		.cfi_remember_state
 2166              		.cfi_restore 80
 2167              		.cfi_restore 81
 2168              		.cfi_def_cfa_offset 8
 2169 018c 10BD     		pop	{r4, pc}
 2170              	.LVL88:
 2171              	.L109:
 2172              		.cfi_restore_state
 2173              	.LBB1132:
 2174              	.LBB1125:
 2175              	.LBB1095:
 2176              	.LBB1083:
2021:Veno-Echo.cpp ****     }
 2177              		.loc 20 2021 16 view .LVU560
 2178 018e DFED157A 		vldr.32	s15, .L111+56
 2179              	.LVL89:
2021:Veno-Echo.cpp ****     }
 2180              		.loc 20 2021 16 view .LVU561
 2181 0192 76E7     		b	.L89
 2182              	.LVL90:
 2183              	.L110:
2021:Veno-Echo.cpp ****     }
 2184              		.loc 20 2021 16 view .LVU562
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 138


 2185              	.LBE1083:
 2186              	.LBE1095:
 2187              	.LBB1096:
 2188              	.LBB1093:
 2189 0194 DFED137A 		vldr.32	s15, .L111+56
 2190 0198 BDE7     		b	.L87
 2191              	.LVL91:
 2192              	.L97:
2021:Veno-Echo.cpp ****     }
 2193              		.loc 20 2021 16 view .LVU563
 2194 019a 164A     		ldr	r2, .L111+72
 2195 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2196 01a0 93ED008B 		vldr.64	d8, [r3]
 2197 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2198 01a8 DFE7     		b	.L98
 2199              	.L112:
 2200 01aa 00BF     		.align	2
 2201              	.L111:
 2202 01ac 18000000 		.word	.LANCHOR4+24
 2203 01b0 00000000 		.word	.LANCHOR18
 2204 01b4 ABAAAA2A 		.word	715827883
 2205 01b8 00000000 		.word	.LANCHOR7
 2206 01bc 00000000 		.word	.LANCHOR19
 2207 01c0 00000000 		.word	.LANCHOR20
 2208 01c4 00000000 		.word	.LANCHOR21
 2209 01c8 00000000 		.word	.LANCHOR17
 2210 01cc 00000000 		.word	.LANCHOR22
 2211 01d0 00000000 		.word	.LANCHOR12
 2212 01d4 00000000 		.word	.LANCHOR1
 2213 01d8 00000000 		.word	.LANCHOR23
 2214 01dc 00000000 		.word	.LANCHOR24
 2215 01e0 0AD7A33B 		.word	1000593162
 2216 01e4 00000000 		.word	0
 2217 01e8 00000000 		.word	.LANCHOR26
 2218 01ec 00000000 		.word	.LANCHOR15
 2219 01f0 00000000 		.word	.LANCHOR16
 2220 01f4 00000000 		.word	.LANCHOR25
 2221              	.LBE1093:
 2222              	.LBE1096:
 2223              	.LBE1125:
 2224              	.LBE1132:
 2225              		.cfi_endproc
 2226              	.LFE4315:
 2228              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2229              		.align	1
 2230              		.p2align 2,,3
 2231              		.global	_Z19Update_feedbackL_CVv
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z19Update_feedbackL_CVv:
 2238              	.LFB4316:
1048:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2239              		.loc 20 1048 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 139


 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1049:Veno-Echo.cpp **** }
 2243              		.loc 20 1049 5 view .LVU565
1048:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2244              		.loc 20 1048 1 is_stmt 0 view .LVU566
 2245 0000 08B5     		push	{r3, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 3, -8
 2248              		.cfi_offset 14, -4
1049:Veno-Echo.cpp **** }
 2249              		.loc 20 1049 35 view .LVU567
 2250 0002 0221     		movs	r1, #2
 2251 0004 0348     		ldr	r0, .L115
 2252 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2253              	.LVL92:
1049:Veno-Echo.cpp **** }
 2254              		.loc 20 1049 18 view .LVU568
 2255 000a 034B     		ldr	r3, .L115+4
 2256 000c 83ED000A 		vstr.32	s0, [r3]
1050:Veno-Echo.cpp **** void Update_feedbackL()
 2257              		.loc 20 1050 1 view .LVU569
 2258 0010 08BD     		pop	{r3, pc}
 2259              	.L116:
 2260 0012 00BF     		.align	2
 2261              	.L115:
 2262 0014 18000000 		.word	.LANCHOR4+24
 2263 0018 00000000 		.word	.LANCHOR27
 2264              		.cfi_endproc
 2265              	.LFE4316:
 2267              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2268              		.align	1
 2269              		.p2align 2,,3
 2270              		.global	_Z16Update_feedbackLv
 2271              		.syntax unified
 2272              		.thumb
 2273              		.thumb_func
 2274              		.fpu fpv5-d16
 2276              	_Z16Update_feedbackLv:
 2277              	.LFB4317:
1052:Veno-Echo.cpp ****     static bool lastShift{};
 2278              		.loc 20 1052 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
1053:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2282              		.loc 20 1053 5 view .LVU571
1054:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2283              		.loc 20 1054 5 view .LVU572
1055:Veno-Echo.cpp **** 
 2284              		.loc 20 1055 5 view .LVU573
1057:Veno-Echo.cpp **** 
 2285              		.loc 20 1057 5 view .LVU574
1061:Veno-Echo.cpp **** 
 2286              		.loc 20 1061 5 view .LVU575
1061:Veno-Echo.cpp **** 
 2287              		.loc 20 1061 43 is_stmt 0 view .LVU576
 2288 0000 0122     		movs	r2, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 140


 2289 0002 0721     		movs	r1, #7
 2290 0004 6548     		ldr	r0, .L145
1052:Veno-Echo.cpp ****     static bool lastShift{};
 2291              		.loc 20 1052 1 view .LVU577
 2292 0006 10B5     		push	{r4, lr}
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 4, -8
 2295              		.cfi_offset 14, -4
 2296 0008 2DED028B 		vpush.64	{d8}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 80, -16
 2299              		.cfi_offset 81, -12
1061:Veno-Echo.cpp **** 
 2300              		.loc 20 1061 43 view .LVU578
 2301 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2302              	.LVL93:
 2303              	.LBB1133:
1063:Veno-Echo.cpp ****     {   
 2304              		.loc 20 1063 9 view .LVU579
 2305 0010 634B     		ldr	r3, .L145+4
 2306              	.LVL94:
1063:Veno-Echo.cpp ****     {   
 2307              		.loc 20 1063 9 view .LVU580
 2308              	.LBE1133:
1063:Veno-Echo.cpp ****     {   
 2309              		.loc 20 1063 5 is_stmt 1 view .LVU581
 2310              	.LBB1178:
 2311              	.LBB1134:
1067:Veno-Echo.cpp ****         {
 2312              		.loc 20 1067 19 is_stmt 0 view .LVU582
 2313 0012 644A     		ldr	r2, .L145+8
 2314              	.LBE1134:
1063:Veno-Echo.cpp ****     {   
 2315              		.loc 20 1063 5 view .LVU583
 2316 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0016 002B     		cmp	r3, #0
 2318 0018 3DD1     		bne	.L118
 2319              	.LBB1157:
1065:Veno-Echo.cpp ****         //update pickup
 2320              		.loc 20 1065 9 is_stmt 1 view .LVU584
1067:Veno-Echo.cpp ****         {
 2321              		.loc 20 1067 9 view .LVU585
 2322 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 001c 0029     		cmp	r1, #0
 2324 001e 47D0     		beq	.L119
1069:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2325              		.loc 20 1069 13 view .LVU586
1070:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2326              		.loc 20 1070 30 is_stmt 0 view .LVU587
 2327 0020 6148     		ldr	r0, .L145+12
1071:Veno-Echo.cpp ****         } 
 2328              		.loc 20 1071 27 view .LVU588
 2329 0022 6249     		ldr	r1, .L145+16
1069:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2330              		.loc 20 1069 23 view .LVU589
 2331 0024 1370     		strb	r3, [r2]
1070:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 141


 2332              		.loc 20 1070 13 is_stmt 1 view .LVU590
1070:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2333              		.loc 20 1070 30 is_stmt 0 view .LVU591
 2334 0026 0370     		strb	r3, [r0]
1071:Veno-Echo.cpp ****         } 
 2335              		.loc 20 1071 13 is_stmt 1 view .LVU592
1071:Veno-Echo.cpp ****         } 
 2336              		.loc 20 1071 27 is_stmt 0 view .LVU593
 2337 0028 81ED000A 		vstr.32	s0, [r1]
 2338              	.L120:
1084:Veno-Echo.cpp **** 
 2339              		.loc 20 1084 9 is_stmt 1 view .LVU594
 2340              	.LVL95:
1086:Veno-Echo.cpp ****         {
 2341              		.loc 20 1086 9 view .LVU595
1094:Veno-Echo.cpp ****         }
 2342              		.loc 20 1094 13 view .LVU596
 2343              	.LBB1135:
 2344              	.LBI1135:
2014:Veno-Echo.cpp **** {
 2345              		.loc 20 2014 7 view .LVU597
 2346              	.LBB1136:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2347              		.loc 20 2016 5 view .LVU598
2017:Veno-Echo.cpp **** 
 2348              		.loc 20 2017 5 view .LVU599
 2349              	.LBE1136:
 2350              	.LBE1135:
1094:Veno-Echo.cpp ****         }
 2351              		.loc 20 1094 41 is_stmt 0 view .LVU600
 2352 002c 604A     		ldr	r2, .L145+20
 2353              	.LBB1140:
 2354              	.LBB1137:
2017:Veno-Echo.cpp **** 
 2355              		.loc 20 2017 39 view .LVU601
 2356 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 2357              		.loc 20 2017 49 view .LVU602
 2358 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2359              	.LBE1137:
 2360              	.LBE1140:
1094:Veno-Echo.cpp ****         }
 2361              		.loc 20 1094 41 view .LVU603
 2362 0036 5F4B     		ldr	r3, .L145+24
 2363              	.LBB1141:
 2364              	.LBB1138:
2017:Veno-Echo.cpp **** 
 2365              		.loc 20 2017 39 view .LVU604
 2366 0038 92ED007A 		vldr.32	s14, [r2]
2017:Veno-Echo.cpp **** 
 2367              		.loc 20 2017 12 view .LVU605
 2368 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2369 0040 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 2370              		.loc 20 2017 39 view .LVU606
 2371 0044 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 142


 2372              		.loc 20 2017 49 view .LVU607
 2373 0048 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 2374              		.loc 20 2017 12 view .LVU608
 2375 004c E7EE067A 		vfma.f32	s15, s14, s12
 2376              	.LVL96:
2019:Veno-Echo.cpp ****     {
 2377              		.loc 20 2019 5 is_stmt 1 view .LVU609
 2378 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2379 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2380 0058 00F19A80 		bmi	.L143
2024:Veno-Echo.cpp ****     {
 2381              		.loc 20 2024 5 view .LVU610
2026:Veno-Echo.cpp ****     }
 2382              		.loc 20 2026 16 is_stmt 0 view .LVU611
 2383 005c F4EE667A 		vcmp.f32	s15, s13
 2384 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2385 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2386              	.LVL97:
 2387              	.L125:
2026:Veno-Echo.cpp ****     }
 2388              		.loc 20 2026 16 view .LVU612
 2389              	.LBE1138:
 2390              	.LBE1141:
1097:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2391              		.loc 20 1097 9 is_stmt 1 view .LVU613
1097:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2392              		.loc 20 1097 37 is_stmt 0 view .LVU614
 2393 0068 B0EE670A 		vmov.f32	s0, s15
 2394              	.LVL98:
1097:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2395              		.loc 20 1097 37 view .LVU615
 2396 006c 0020     		movs	r0, #0
 2397 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2398 0072 DFED510A 		vldr.32	s1, .L145+28
 2399 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2400              	.LVL99:
1098:Veno-Echo.cpp ****     }
 2401              		.loc 20 1098 9 is_stmt 1 view .LVU616
 2402              	.LBB1142:
 2403              	.LBI1142:
 2404              		.file 25 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 143


  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 144


  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 145


 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2405              		.loc 25 135 13 view .LVU617
 2406              	.LBB1143:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2407              		.loc 25 137 5 view .LVU618
 2408              		.loc 25 137 9 is_stmt 0 view .LVU619
 2409 007a 504B     		ldr	r3, .L145+32
 2410 007c 9FED507A 		vldr.32	s14, .L145+36
 2411 0080 D3ED007A 		vldr.32	s15, [r3]
 2412              		.loc 25 137 24 view .LVU620
 2413 0084 30EE670A 		vsub.f32	s0, s0, s15
 2414              	.LVL100:
 2415              		.loc 25 137 24 view .LVU621
 2416              	.LBE1143:
 2417              	.LBE1142:
 2418              	.LBE1157:
 2419              	.LBE1178:
1134:Veno-Echo.cpp **** 
 2420              		.loc 20 1134 1 view .LVU622
 2421 0088 BDEC028B 		vldm	sp!, {d8}
 2422              		.cfi_remember_state
 2423              		.cfi_restore 80
 2424              		.cfi_restore 81
 2425              		.cfi_def_cfa_offset 8
 2426              	.LBB1179:
 2427              	.LBB1158:
 2428              	.LBB1145:
 2429              	.LBB1144:
 2430              		.loc 25 137 9 view .LVU623
 2431 008c E0EE077A 		vfma.f32	s15, s0, s14
 2432 0090 C3ED007A 		vstr.32	s15, [r3]
 2433              	.LBE1144:
 2434              	.LBE1145:
 2435              	.LBE1158:
 2436              	.LBE1179:
1134:Veno-Echo.cpp **** 
 2437              		.loc 20 1134 1 view .LVU624
 2438 0094 10BD     		pop	{r4, pc}
 2439              	.LVL101:
 2440              	.L118:
 2441              		.cfi_restore_state
 2442              	.LBB1180:
 2443              	.LBB1159:
1102:Veno-Echo.cpp **** 
 2444              		.loc 20 1102 9 is_stmt 1 view .LVU625
1104:Veno-Echo.cpp ****         {
 2445              		.loc 20 1104 9 view .LVU626
 2446 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2447 0098 002B     		cmp	r3, #0
 2448 009a 3ED1     		bne	.L128
1106:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 146


 2449              		.loc 20 1106 13 view .LVU627
1106:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2450              		.loc 20 1106 23 is_stmt 0 view .LVU628
 2451 009c 0124     		movs	r4, #1
1107:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2452              		.loc 20 1107 29 view .LVU629
 2453 009e 4948     		ldr	r0, .L145+40
1108:Veno-Echo.cpp ****         }
 2454              		.loc 20 1108 26 view .LVU630
 2455 00a0 4949     		ldr	r1, .L145+44
1106:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2456              		.loc 20 1106 23 view .LVU631
 2457 00a2 1470     		strb	r4, [r2]
1107:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2458              		.loc 20 1107 13 is_stmt 1 view .LVU632
1107:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2459              		.loc 20 1107 29 is_stmt 0 view .LVU633
 2460 00a4 0370     		strb	r3, [r0]
1108:Veno-Echo.cpp ****         }
 2461              		.loc 20 1108 13 is_stmt 1 view .LVU634
1108:Veno-Echo.cpp ****         }
 2462              		.loc 20 1108 26 is_stmt 0 view .LVU635
 2463 00a6 81ED000A 		vstr.32	s0, [r1]
 2464              	.L117:
1108:Veno-Echo.cpp ****         }
 2465              		.loc 20 1108 26 view .LVU636
 2466              	.LBE1159:
 2467              	.LBE1180:
1134:Veno-Echo.cpp **** 
 2468              		.loc 20 1134 1 view .LVU637
 2469 00aa BDEC028B 		vldm	sp!, {d8}
 2470              		.cfi_remember_state
 2471              		.cfi_restore 80
 2472              		.cfi_restore 81
 2473              		.cfi_def_cfa_offset 8
 2474 00ae 10BD     		pop	{r4, pc}
 2475              	.L119:
 2476              		.cfi_restore_state
 2477              	.LBB1181:
 2478              	.LBB1175:
1075:Veno-Echo.cpp ****             {
 2479              		.loc 20 1075 13 is_stmt 1 view .LVU638
1075:Veno-Echo.cpp ****             {
 2480              		.loc 20 1075 16 is_stmt 0 view .LVU639
 2481 00b0 3D4B     		ldr	r3, .L145+12
1075:Veno-Echo.cpp ****             {
 2482              		.loc 20 1075 13 view .LVU640
 2483 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2484 00b4 7AB9     		cbnz	r2, .L121
1077:Veno-Echo.cpp ****                 {
 2485              		.loc 20 1077 17 is_stmt 1 view .LVU641
 2486              	.LVL102:
 2487              	.LBB1146:
 2488              	.LBI1146:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2489              		.loc 21 75 3 view .LVU642
 2490              	.LBB1147:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 147


 2491              		.loc 21 76 5 view .LVU643
 2492              		.loc 21 76 5 is_stmt 0 view .LVU644
 2493              	.LBE1147:
 2494              	.LBE1146:
1077:Veno-Echo.cpp ****                 {
 2495              		.loc 20 1077 23 view .LVU645
 2496 00b6 3D4A     		ldr	r2, .L145+16
1077:Veno-Echo.cpp ****                 {
 2497              		.loc 20 1077 17 view .LVU646
 2498 00b8 9FED447A 		vldr.32	s14, .L145+48
1077:Veno-Echo.cpp ****                 {
 2499              		.loc 20 1077 23 view .LVU647
 2500 00bc D2ED007A 		vldr.32	s15, [r2]
 2501 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2502              	.LBB1149:
 2503              	.LBB1148:
 2504              		.loc 21 76 31 view .LVU648
 2505 00c4 F0EEE77A 		vabs.f32	s15, s15
 2506              	.LBE1148:
 2507              	.LBE1149:
1077:Veno-Echo.cpp ****                 {
 2508              		.loc 20 1077 17 view .LVU649
 2509 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2510 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2511 00d0 ACDD     		ble	.L120
1079:Veno-Echo.cpp ****                 }
 2512              		.loc 20 1079 21 is_stmt 1 view .LVU650
1079:Veno-Echo.cpp ****                 }
 2513              		.loc 20 1079 38 is_stmt 0 view .LVU651
 2514 00d2 0122     		movs	r2, #1
 2515 00d4 1A70     		strb	r2, [r3]
 2516              	.L121:
1084:Veno-Echo.cpp **** 
 2517              		.loc 20 1084 9 is_stmt 1 view .LVU652
 2518              	.LVL103:
1086:Veno-Echo.cpp ****         {
 2519              		.loc 20 1086 9 view .LVU653
1088:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2520              		.loc 20 1088 13 view .LVU654
 2521              	.LBB1150:
 2522              	.LBI1150:
2014:Veno-Echo.cpp **** {
 2523              		.loc 20 2014 7 view .LVU655
 2524              	.LBB1151:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 20 2016 5 view .LVU656
2017:Veno-Echo.cpp **** 
 2526              		.loc 20 2017 5 view .LVU657
 2527              	.LBE1151:
 2528              	.LBE1150:
1088:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2529              		.loc 20 1088 41 is_stmt 0 view .LVU658
 2530 00d6 364B     		ldr	r3, .L145+20
 2531              	.LBB1154:
 2532              	.LBB1152:
2017:Veno-Echo.cpp **** 
 2533              		.loc 20 2017 39 view .LVU659
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 148


 2534 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 2535              		.loc 20 2017 49 view .LVU660
 2536 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 2537              		.loc 20 2017 39 view .LVU661
 2538 00e0 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 2539              		.loc 20 2017 12 view .LVU662
 2540 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 2541              		.loc 20 2017 39 view .LVU663
 2542 00e8 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 2543              		.loc 20 2017 49 view .LVU664
 2544 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 2545              		.loc 20 2017 12 view .LVU665
 2546 00f0 B0EE406A 		vmov.f32	s12, s0
 2547 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 2548              		.loc 20 2019 5 view .LVU666
 2549 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 2550              		.loc 20 2017 12 view .LVU667
 2551 00fc F0EE467A 		vmov.f32	s15, s12
 2552              	.LVL104:
2019:Veno-Echo.cpp ****     {
 2553              		.loc 20 2019 5 is_stmt 1 view .LVU668
 2554 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2555 0104 47D4     		bmi	.L144
2024:Veno-Echo.cpp ****     {
 2556              		.loc 20 2024 5 view .LVU669
2026:Veno-Echo.cpp ****     }
 2557              		.loc 20 2026 16 is_stmt 0 view .LVU670
 2558 0106 F4EE477A 		vcmp.f32	s15, s14
 2559 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2560 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2561              	.L123:
 2562              	.LVL105:
2029:Veno-Echo.cpp **** }
 2563              		.loc 20 2029 5 is_stmt 1 view .LVU671
2029:Veno-Echo.cpp **** }
 2564              		.loc 20 2029 5 is_stmt 0 view .LVU672
 2565              	.LBE1152:
 2566              	.LBE1154:
1089:Veno-Echo.cpp ****         }
 2567              		.loc 20 1089 13 is_stmt 1 view .LVU673
1089:Veno-Echo.cpp ****         }
 2568              		.loc 20 1089 28 is_stmt 0 view .LVU674
 2569 0112 284B     		ldr	r3, .L145+24
 2570 0114 83ED000A 		vstr.32	s0, [r3]
 2571 0118 A6E7     		b	.L125
 2572              	.LVL106:
 2573              	.L128:
1089:Veno-Echo.cpp ****         }
 2574              		.loc 20 1089 28 view .LVU675
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 149


 2575              	.LBE1175:
 2576              	.LBB1176:
1113:Veno-Echo.cpp ****             {
 2577              		.loc 20 1113 13 is_stmt 1 view .LVU676
1113:Veno-Echo.cpp ****             {
 2578              		.loc 20 1113 16 is_stmt 0 view .LVU677
 2579 011a 2A4B     		ldr	r3, .L145+40
1113:Veno-Echo.cpp ****             {
 2580              		.loc 20 1113 13 view .LVU678
 2581 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2582 011e 7AB9     		cbnz	r2, .L130
1115:Veno-Echo.cpp ****                 {
 2583              		.loc 20 1115 17 is_stmt 1 view .LVU679
 2584              	.LVL107:
 2585              	.LBB1160:
 2586              	.LBI1160:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2587              		.loc 21 75 3 view .LVU680
 2588              	.LBB1161:
 2589              		.loc 21 76 5 view .LVU681
 2590              		.loc 21 76 5 is_stmt 0 view .LVU682
 2591              	.LBE1161:
 2592              	.LBE1160:
1115:Veno-Echo.cpp ****                 {
 2593              		.loc 20 1115 23 view .LVU683
 2594 0120 294A     		ldr	r2, .L145+44
1115:Veno-Echo.cpp ****                 {
 2595              		.loc 20 1115 17 view .LVU684
 2596 0122 9FED2A7A 		vldr.32	s14, .L145+48
1115:Veno-Echo.cpp ****                 {
 2597              		.loc 20 1115 23 view .LVU685
 2598 0126 D2ED007A 		vldr.32	s15, [r2]
 2599 012a 70EE677A 		vsub.f32	s15, s0, s15
 2600              	.LBB1163:
 2601              	.LBB1162:
 2602              		.loc 21 76 31 view .LVU686
 2603 012e F0EEE77A 		vabs.f32	s15, s15
 2604              	.LBE1162:
 2605              	.LBE1163:
1115:Veno-Echo.cpp ****                 {
 2606              		.loc 20 1115 17 view .LVU687
 2607 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2608 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 013a B6DD     		ble	.L117
1117:Veno-Echo.cpp ****                 }
 2610              		.loc 20 1117 21 is_stmt 1 view .LVU688
1117:Veno-Echo.cpp ****                 }
 2611              		.loc 20 1117 37 is_stmt 0 view .LVU689
 2612 013c 0122     		movs	r2, #1
 2613 013e 1A70     		strb	r2, [r3]
 2614              	.L130:
1122:Veno-Echo.cpp ****         {
 2615              		.loc 20 1122 9 is_stmt 1 view .LVU690
 2616              	.LBB1164:
1124:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2617              		.loc 20 1124 13 view .LVU691
 2618              	.LVL108:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 150


1125:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2619              		.loc 20 1125 13 view .LVU692
1125:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2620              		.loc 20 1125 29 is_stmt 0 view .LVU693
 2621 0140 9FED231A 		vldr.32	s2, .L145+52
 2622 0144 0120     		movs	r0, #1
 2623 0146 DFED230A 		vldr.32	s1, .L145+56
 2624 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2625              	.LVL109:
1125:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2626              		.loc 20 1125 29 view .LVU694
 2627 014e B0EE408A 		vmov.f32	s16, s0
 2628              	.LVL110:
1126:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2629              		.loc 20 1126 13 is_stmt 1 view .LVU695
1126:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2630              		.loc 20 1126 26 is_stmt 0 view .LVU696
 2631 0152 2148     		ldr	r0, .L145+60
 2632 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2633              	.LVL111:
1127:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2634              		.loc 20 1127 13 is_stmt 1 view .LVU697
1127:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2635              		.loc 20 1127 26 is_stmt 0 view .LVU698
 2636 0158 2048     		ldr	r0, .L145+64
 2637 015a B0EE480A 		vmov.f32	s0, s16
 2638 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2639              	.LVL112:
1128:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2640              		.loc 20 1128 13 is_stmt 1 view .LVU699
1128:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2641              		.loc 20 1128 31 is_stmt 0 view .LVU700
 2642 0162 B0EE480A 		vmov.f32	s0, s16
 2643 0166 1E48     		ldr	r0, .L145+68
 2644 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2645              	.LVL113:
1129:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2646              		.loc 20 1129 13 is_stmt 1 view .LVU701
1129:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2647              		.loc 20 1129 31 is_stmt 0 view .LVU702
 2648 016c B0EE480A 		vmov.f32	s0, s16
 2649 0170 1C48     		ldr	r0, .L145+72
 2650 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2651              	.LVL114:
1130:Veno-Echo.cpp ****             save_flag = true;
 2652              		.loc 20 1130 13 is_stmt 1 view .LVU703
1130:Veno-Echo.cpp ****             save_flag = true;
 2653              		.loc 20 1130 35 is_stmt 0 view .LVU704
 2654 0176 1C49     		ldr	r1, .L145+76
 2655              	.LBB1165:
 2656              	.LBB1166:
 2657              	.LBB1167:
 2658              	.LBB1168:
 2659              	.LBB1169:
 2660              		.loc 22 397 18 view .LVU705
 2661 0178 1C4B     		ldr	r3, .L145+80
 2662 017a 0122     		movs	r2, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 151


 2663              	.LBE1169:
 2664              	.LBE1168:
 2665              	.LBE1167:
 2666              	.LBE1166:
 2667              	.LBE1165:
1130:Veno-Echo.cpp ****             save_flag = true;
 2668              		.loc 20 1130 35 view .LVU706
 2669 017c 81ED048A 		vstr.32	s16, [r1, #16]
1131:Veno-Echo.cpp ****         }
 2670              		.loc 20 1131 13 is_stmt 1 view .LVU707
 2671              	.LVL115:
 2672              	.LBB1174:
 2673              	.LBI1165:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2674              		.loc 23 80 5 view .LVU708
 2675              	.LBB1173:
 2676              		.loc 23 81 7 view .LVU709
 2677              	.LBB1172:
 2678              	.LBI1167:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2679              		.loc 22 288 7 view .LVU710
 2680              	.LBB1171:
 2681              	.LBI1168:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2682              		.loc 22 390 7 view .LVU711
 2683              	.LBB1170:
 2684              		.loc 22 397 18 is_stmt 0 view .LVU712
 2685 0180 BFF35B8F 		dmb	ish
 2686 0184 1A70     		strb	r2, [r3]
 2687 0186 BFF35B8F 		dmb	ish
 2688              	.LVL116:
 2689              		.loc 22 397 18 view .LVU713
 2690              	.LBE1170:
 2691              	.LBE1171:
 2692              	.LBE1172:
 2693              	.LBE1173:
 2694              	.LBE1174:
 2695              	.LBE1164:
 2696              	.LBE1176:
 2697              	.LBE1181:
1134:Veno-Echo.cpp **** 
 2698              		.loc 20 1134 1 view .LVU714
 2699 018a BDEC028B 		vldm	sp!, {d8}
 2700              		.cfi_remember_state
 2701              		.cfi_restore 80
 2702              		.cfi_restore 81
 2703              		.cfi_def_cfa_offset 8
 2704              	.LVL117:
1134:Veno-Echo.cpp **** 
 2705              		.loc 20 1134 1 view .LVU715
 2706 018e 10BD     		pop	{r4, pc}
 2707              	.LVL118:
 2708              	.L143:
 2709              		.cfi_restore_state
 2710              	.LBB1182:
 2711              	.LBB1177:
 2712              	.LBB1155:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 152


 2713              	.LBB1139:
2021:Veno-Echo.cpp ****     }
 2714              		.loc 20 2021 16 view .LVU716
 2715 0190 DFED097A 		vldr.32	s15, .L145+28
 2716              	.LVL119:
2021:Veno-Echo.cpp ****     }
 2717              		.loc 20 2021 16 view .LVU717
 2718 0194 68E7     		b	.L125
 2719              	.LVL120:
 2720              	.L144:
2021:Veno-Echo.cpp ****     }
 2721              		.loc 20 2021 16 view .LVU718
 2722              	.LBE1139:
 2723              	.LBE1155:
 2724              	.LBB1156:
 2725              	.LBB1153:
 2726 0196 DFED087A 		vldr.32	s15, .L145+28
 2727 019a BAE7     		b	.L123
 2728              	.L146:
 2729              		.align	2
 2730              	.L145:
 2731 019c 18000000 		.word	.LANCHOR4+24
 2732 01a0 00000000 		.word	.LANCHOR7
 2733 01a4 00000000 		.word	.LANCHOR28
 2734 01a8 00000000 		.word	.LANCHOR29
 2735 01ac 00000000 		.word	.LANCHOR30
 2736 01b0 00000000 		.word	.LANCHOR27
 2737 01b4 00000000 		.word	.LANCHOR31
 2738 01b8 00000000 		.word	0
 2739 01bc 00000000 		.word	.LANCHOR32
 2740 01c0 6F12033D 		.word	1023611503
 2741 01c4 00000000 		.word	.LANCHOR33
 2742 01c8 00000000 		.word	.LANCHOR34
 2743 01cc 0AD7A33B 		.word	1000593162
 2744 01d0 00004844 		.word	1145569280
 2745 01d4 0000C842 		.word	1120403456
 2746 01d8 00000000 		.word	.LANCHOR35
 2747 01dc 00000000 		.word	.LANCHOR36
 2748 01e0 00000000 		.word	.LANCHOR37
 2749 01e4 00000000 		.word	.LANCHOR38
 2750 01e8 00000000 		.word	.LANCHOR15
 2751 01ec 00000000 		.word	.LANCHOR16
 2752              	.LBE1153:
 2753              	.LBE1156:
 2754              	.LBE1177:
 2755              	.LBE1182:
 2756              		.cfi_endproc
 2757              	.LFE4317:
 2759              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.global	_Z19Update_feedbackR_CVv
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv5-d16
 2768              	_Z19Update_feedbackR_CVv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 153


 2769              	.LFB4318:
1137:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2770              		.loc 20 1137 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1138:Veno-Echo.cpp **** }
 2774              		.loc 20 1138 5 view .LVU720
1137:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2775              		.loc 20 1137 1 is_stmt 0 view .LVU721
 2776 0000 08B5     		push	{r3, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 3, -8
 2779              		.cfi_offset 14, -4
1138:Veno-Echo.cpp **** }
 2780              		.loc 20 1138 35 view .LVU722
 2781 0002 0321     		movs	r1, #3
 2782 0004 0348     		ldr	r0, .L149
 2783 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2784              	.LVL121:
1138:Veno-Echo.cpp **** }
 2785              		.loc 20 1138 18 view .LVU723
 2786 000a 034B     		ldr	r3, .L149+4
 2787 000c 83ED000A 		vstr.32	s0, [r3]
1139:Veno-Echo.cpp **** 
 2788              		.loc 20 1139 1 view .LVU724
 2789 0010 08BD     		pop	{r3, pc}
 2790              	.L150:
 2791 0012 00BF     		.align	2
 2792              	.L149:
 2793 0014 18000000 		.word	.LANCHOR4+24
 2794 0018 00000000 		.word	.LANCHOR39
 2795              		.cfi_endproc
 2796              	.LFE4318:
 2798              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.global	_Z16Update_feedbackRv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu fpv5-d16
 2807              	_Z16Update_feedbackRv:
 2808              	.LFB4319:
1142:Veno-Echo.cpp ****     static bool lastShift{};
 2809              		.loc 20 1142 1 is_stmt 1 view -0
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1143:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2813              		.loc 20 1143 5 view .LVU726
1144:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2814              		.loc 20 1144 5 view .LVU727
1145:Veno-Echo.cpp **** 
 2815              		.loc 20 1145 5 view .LVU728
1147:Veno-Echo.cpp **** 
 2816              		.loc 20 1147 5 view .LVU729
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 154


1150:Veno-Echo.cpp **** 
 2817              		.loc 20 1150 5 view .LVU730
1150:Veno-Echo.cpp **** 
 2818              		.loc 20 1150 43 is_stmt 0 view .LVU731
 2819 0000 0422     		movs	r2, #4
 2820 0002 0721     		movs	r1, #7
 2821 0004 6548     		ldr	r0, .L179
1142:Veno-Echo.cpp ****     static bool lastShift{};
 2822              		.loc 20 1142 1 view .LVU732
 2823 0006 10B5     		push	{r4, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0008 2DED028B 		vpush.64	{d8}
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 80, -16
 2830              		.cfi_offset 81, -12
1150:Veno-Echo.cpp **** 
 2831              		.loc 20 1150 43 view .LVU733
 2832 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2833              	.LVL122:
 2834              	.LBB1183:
1152:Veno-Echo.cpp ****     {   
 2835              		.loc 20 1152 9 view .LVU734
 2836 0010 634B     		ldr	r3, .L179+4
 2837              	.LVL123:
1152:Veno-Echo.cpp ****     {   
 2838              		.loc 20 1152 9 view .LVU735
 2839              	.LBE1183:
1152:Veno-Echo.cpp ****     {   
 2840              		.loc 20 1152 5 is_stmt 1 view .LVU736
 2841              	.LBB1228:
 2842              	.LBB1184:
1156:Veno-Echo.cpp ****         {
 2843              		.loc 20 1156 19 is_stmt 0 view .LVU737
 2844 0012 644A     		ldr	r2, .L179+8
 2845              	.LBE1184:
1152:Veno-Echo.cpp ****     {   
 2846              		.loc 20 1152 5 view .LVU738
 2847 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 0016 002B     		cmp	r3, #0
 2849 0018 3DD1     		bne	.L152
 2850              	.LBB1207:
1154:Veno-Echo.cpp ****         //update pickup
 2851              		.loc 20 1154 9 is_stmt 1 view .LVU739
1156:Veno-Echo.cpp ****         {
 2852              		.loc 20 1156 9 view .LVU740
 2853 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 001c 0029     		cmp	r1, #0
 2855 001e 47D0     		beq	.L153
1158:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2856              		.loc 20 1158 13 view .LVU741
1159:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2857              		.loc 20 1159 30 is_stmt 0 view .LVU742
 2858 0020 6148     		ldr	r0, .L179+12
1160:Veno-Echo.cpp ****         } 
 2859              		.loc 20 1160 27 view .LVU743
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 155


 2860 0022 6249     		ldr	r1, .L179+16
1158:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2861              		.loc 20 1158 23 view .LVU744
 2862 0024 1370     		strb	r3, [r2]
1159:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2863              		.loc 20 1159 13 is_stmt 1 view .LVU745
1159:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2864              		.loc 20 1159 30 is_stmt 0 view .LVU746
 2865 0026 0370     		strb	r3, [r0]
1160:Veno-Echo.cpp ****         } 
 2866              		.loc 20 1160 13 is_stmt 1 view .LVU747
1160:Veno-Echo.cpp ****         } 
 2867              		.loc 20 1160 27 is_stmt 0 view .LVU748
 2868 0028 81ED000A 		vstr.32	s0, [r1]
 2869              	.L154:
1173:Veno-Echo.cpp ****         
 2870              		.loc 20 1173 9 is_stmt 1 view .LVU749
 2871              	.LVL124:
1175:Veno-Echo.cpp ****         {
 2872              		.loc 20 1175 9 view .LVU750
1183:Veno-Echo.cpp ****         }
 2873              		.loc 20 1183 13 view .LVU751
 2874              	.LBB1185:
 2875              	.LBI1185:
2014:Veno-Echo.cpp **** {
 2876              		.loc 20 2014 7 view .LVU752
 2877              	.LBB1186:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2878              		.loc 20 2016 5 view .LVU753
2017:Veno-Echo.cpp **** 
 2879              		.loc 20 2017 5 view .LVU754
 2880              	.LBE1186:
 2881              	.LBE1185:
1183:Veno-Echo.cpp ****         }
 2882              		.loc 20 1183 41 is_stmt 0 view .LVU755
 2883 002c 604A     		ldr	r2, .L179+20
 2884              	.LBB1190:
 2885              	.LBB1187:
2017:Veno-Echo.cpp **** 
 2886              		.loc 20 2017 39 view .LVU756
 2887 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 2888              		.loc 20 2017 49 view .LVU757
 2889 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2890              	.LBE1187:
 2891              	.LBE1190:
1183:Veno-Echo.cpp ****         }
 2892              		.loc 20 1183 41 view .LVU758
 2893 0036 5F4B     		ldr	r3, .L179+24
 2894              	.LBB1191:
 2895              	.LBB1188:
2017:Veno-Echo.cpp **** 
 2896              		.loc 20 2017 39 view .LVU759
 2897 0038 92ED007A 		vldr.32	s14, [r2]
2017:Veno-Echo.cpp **** 
 2898              		.loc 20 2017 12 view .LVU760
 2899 003c B0EE006A 		vmov.f32	s12, #2.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 156


 2900 0040 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 2901              		.loc 20 2017 39 view .LVU761
 2902 0044 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
 2903              		.loc 20 2017 49 view .LVU762
 2904 0048 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 2905              		.loc 20 2017 12 view .LVU763
 2906 004c E7EE067A 		vfma.f32	s15, s14, s12
 2907              	.LVL125:
2019:Veno-Echo.cpp ****     {
 2908              		.loc 20 2019 5 is_stmt 1 view .LVU764
 2909 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2910 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2911 0058 00F19A80 		bmi	.L177
2024:Veno-Echo.cpp ****     {
 2912              		.loc 20 2024 5 view .LVU765
2026:Veno-Echo.cpp ****     }
 2913              		.loc 20 2026 16 is_stmt 0 view .LVU766
 2914 005c F4EE667A 		vcmp.f32	s15, s13
 2915 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2916 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2917              	.LVL126:
 2918              	.L159:
2026:Veno-Echo.cpp ****     }
 2919              		.loc 20 2026 16 view .LVU767
 2920              	.LBE1188:
 2921              	.LBE1191:
1186:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2922              		.loc 20 1186 9 is_stmt 1 view .LVU768
1186:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2923              		.loc 20 1186 37 is_stmt 0 view .LVU769
 2924 0068 B0EE670A 		vmov.f32	s0, s15
 2925              	.LVL127:
1186:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2926              		.loc 20 1186 37 view .LVU770
 2927 006c 0020     		movs	r0, #0
 2928 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2929 0072 DFED510A 		vldr.32	s1, .L179+28
 2930 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2931              	.LVL128:
1187:Veno-Echo.cpp ****     }
 2932              		.loc 20 1187 9 is_stmt 1 view .LVU771
 2933              	.LBB1192:
 2934              	.LBI1192:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2935              		.loc 25 135 13 view .LVU772
 2936              	.LBB1193:
 2937              		.loc 25 137 5 view .LVU773
 2938              		.loc 25 137 9 is_stmt 0 view .LVU774
 2939 007a 504B     		ldr	r3, .L179+32
 2940 007c 9FED507A 		vldr.32	s14, .L179+36
 2941 0080 D3ED007A 		vldr.32	s15, [r3]
 2942              		.loc 25 137 24 view .LVU775
 2943 0084 30EE670A 		vsub.f32	s0, s0, s15
 2944              	.LVL129:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 157


 2945              		.loc 25 137 24 view .LVU776
 2946              	.LBE1193:
 2947              	.LBE1192:
 2948              	.LBE1207:
 2949              	.LBE1228:
1224:Veno-Echo.cpp **** 
 2950              		.loc 20 1224 1 view .LVU777
 2951 0088 BDEC028B 		vldm	sp!, {d8}
 2952              		.cfi_remember_state
 2953              		.cfi_restore 80
 2954              		.cfi_restore 81
 2955              		.cfi_def_cfa_offset 8
 2956              	.LBB1229:
 2957              	.LBB1208:
 2958              	.LBB1195:
 2959              	.LBB1194:
 2960              		.loc 25 137 9 view .LVU778
 2961 008c E0EE077A 		vfma.f32	s15, s0, s14
 2962 0090 C3ED007A 		vstr.32	s15, [r3]
 2963              	.LBE1194:
 2964              	.LBE1195:
 2965              	.LBE1208:
 2966              	.LBE1229:
1224:Veno-Echo.cpp **** 
 2967              		.loc 20 1224 1 view .LVU779
 2968 0094 10BD     		pop	{r4, pc}
 2969              	.LVL130:
 2970              	.L152:
 2971              		.cfi_restore_state
 2972              	.LBB1230:
 2973              	.LBB1209:
1192:Veno-Echo.cpp **** 
 2974              		.loc 20 1192 9 is_stmt 1 view .LVU780
1194:Veno-Echo.cpp ****         {
 2975              		.loc 20 1194 10 view .LVU781
 2976 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2977 0098 002B     		cmp	r3, #0
 2978 009a 3ED1     		bne	.L162
1196:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2979              		.loc 20 1196 13 view .LVU782
1196:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2980              		.loc 20 1196 23 is_stmt 0 view .LVU783
 2981 009c 0124     		movs	r4, #1
1197:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2982              		.loc 20 1197 29 view .LVU784
 2983 009e 4948     		ldr	r0, .L179+40
1198:Veno-Echo.cpp ****         }
 2984              		.loc 20 1198 26 view .LVU785
 2985 00a0 4949     		ldr	r1, .L179+44
1196:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2986              		.loc 20 1196 23 view .LVU786
 2987 00a2 1470     		strb	r4, [r2]
1197:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2988              		.loc 20 1197 13 is_stmt 1 view .LVU787
1197:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2989              		.loc 20 1197 29 is_stmt 0 view .LVU788
 2990 00a4 0370     		strb	r3, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 158


1198:Veno-Echo.cpp ****         }
 2991              		.loc 20 1198 13 is_stmt 1 view .LVU789
1198:Veno-Echo.cpp ****         }
 2992              		.loc 20 1198 26 is_stmt 0 view .LVU790
 2993 00a6 81ED000A 		vstr.32	s0, [r1]
 2994              	.L151:
1198:Veno-Echo.cpp ****         }
 2995              		.loc 20 1198 26 view .LVU791
 2996              	.LBE1209:
 2997              	.LBE1230:
1224:Veno-Echo.cpp **** 
 2998              		.loc 20 1224 1 view .LVU792
 2999 00aa BDEC028B 		vldm	sp!, {d8}
 3000              		.cfi_remember_state
 3001              		.cfi_restore 80
 3002              		.cfi_restore 81
 3003              		.cfi_def_cfa_offset 8
 3004 00ae 10BD     		pop	{r4, pc}
 3005              	.L153:
 3006              		.cfi_restore_state
 3007              	.LBB1231:
 3008              	.LBB1225:
1164:Veno-Echo.cpp ****             {
 3009              		.loc 20 1164 13 is_stmt 1 view .LVU793
1164:Veno-Echo.cpp ****             {
 3010              		.loc 20 1164 16 is_stmt 0 view .LVU794
 3011 00b0 3D4B     		ldr	r3, .L179+12
1164:Veno-Echo.cpp ****             {
 3012              		.loc 20 1164 13 view .LVU795
 3013 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3014 00b4 7AB9     		cbnz	r2, .L155
1166:Veno-Echo.cpp ****                 {
 3015              		.loc 20 1166 17 is_stmt 1 view .LVU796
 3016              	.LVL131:
 3017              	.LBB1196:
 3018              	.LBI1196:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3019              		.loc 21 75 3 view .LVU797
 3020              	.LBB1197:
 3021              		.loc 21 76 5 view .LVU798
 3022              		.loc 21 76 5 is_stmt 0 view .LVU799
 3023              	.LBE1197:
 3024              	.LBE1196:
1166:Veno-Echo.cpp ****                 {
 3025              		.loc 20 1166 23 view .LVU800
 3026 00b6 3D4A     		ldr	r2, .L179+16
1166:Veno-Echo.cpp ****                 {
 3027              		.loc 20 1166 17 view .LVU801
 3028 00b8 9FED447A 		vldr.32	s14, .L179+48
1166:Veno-Echo.cpp ****                 {
 3029              		.loc 20 1166 23 view .LVU802
 3030 00bc D2ED007A 		vldr.32	s15, [r2]
 3031 00c0 70EE677A 		vsub.f32	s15, s0, s15
 3032              	.LBB1199:
 3033              	.LBB1198:
 3034              		.loc 21 76 31 view .LVU803
 3035 00c4 F0EEE77A 		vabs.f32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 159


 3036              	.LBE1198:
 3037              	.LBE1199:
1166:Veno-Echo.cpp ****                 {
 3038              		.loc 20 1166 17 view .LVU804
 3039 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 3040 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3041 00d0 ACDD     		ble	.L154
1168:Veno-Echo.cpp ****                 }
 3042              		.loc 20 1168 21 is_stmt 1 view .LVU805
1168:Veno-Echo.cpp ****                 }
 3043              		.loc 20 1168 38 is_stmt 0 view .LVU806
 3044 00d2 0122     		movs	r2, #1
 3045 00d4 1A70     		strb	r2, [r3]
 3046              	.L155:
1173:Veno-Echo.cpp ****         
 3047              		.loc 20 1173 9 is_stmt 1 view .LVU807
 3048              	.LVL132:
1175:Veno-Echo.cpp ****         {
 3049              		.loc 20 1175 9 view .LVU808
1177:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3050              		.loc 20 1177 13 view .LVU809
 3051              	.LBB1200:
 3052              	.LBI1200:
2014:Veno-Echo.cpp **** {
 3053              		.loc 20 2014 7 view .LVU810
 3054              	.LBB1201:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3055              		.loc 20 2016 5 view .LVU811
2017:Veno-Echo.cpp **** 
 3056              		.loc 20 2017 5 view .LVU812
 3057              	.LBE1201:
 3058              	.LBE1200:
1177:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3059              		.loc 20 1177 41 is_stmt 0 view .LVU813
 3060 00d6 364B     		ldr	r3, .L179+20
 3061              	.LBB1204:
 3062              	.LBB1202:
2017:Veno-Echo.cpp **** 
 3063              		.loc 20 2017 39 view .LVU814
 3064 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 3065              		.loc 20 2017 49 view .LVU815
 3066 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 3067              		.loc 20 2017 39 view .LVU816
 3068 00e0 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 3069              		.loc 20 2017 12 view .LVU817
 3070 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 3071              		.loc 20 2017 39 view .LVU818
 3072 00e8 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 3073              		.loc 20 2017 49 view .LVU819
 3074 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 3075              		.loc 20 2017 12 view .LVU820
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 160


 3076 00f0 B0EE406A 		vmov.f32	s12, s0
 3077 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 3078              		.loc 20 2019 5 view .LVU821
 3079 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 3080              		.loc 20 2017 12 view .LVU822
 3081 00fc F0EE467A 		vmov.f32	s15, s12
 3082              	.LVL133:
2019:Veno-Echo.cpp ****     {
 3083              		.loc 20 2019 5 is_stmt 1 view .LVU823
 3084 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3085 0104 47D4     		bmi	.L178
2024:Veno-Echo.cpp ****     {
 3086              		.loc 20 2024 5 view .LVU824
2026:Veno-Echo.cpp ****     }
 3087              		.loc 20 2026 16 is_stmt 0 view .LVU825
 3088 0106 F4EE477A 		vcmp.f32	s15, s14
 3089 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3090 010e 77FE277A 		vselgt.f32	s15, s14, s15
 3091              	.L157:
 3092              	.LVL134:
2029:Veno-Echo.cpp **** }
 3093              		.loc 20 2029 5 is_stmt 1 view .LVU826
2029:Veno-Echo.cpp **** }
 3094              		.loc 20 2029 5 is_stmt 0 view .LVU827
 3095              	.LBE1202:
 3096              	.LBE1204:
1178:Veno-Echo.cpp ****         }
 3097              		.loc 20 1178 13 is_stmt 1 view .LVU828
1178:Veno-Echo.cpp ****         }
 3098              		.loc 20 1178 28 is_stmt 0 view .LVU829
 3099 0112 284B     		ldr	r3, .L179+24
 3100 0114 83ED000A 		vstr.32	s0, [r3]
 3101 0118 A6E7     		b	.L159
 3102              	.LVL135:
 3103              	.L162:
1178:Veno-Echo.cpp ****         }
 3104              		.loc 20 1178 28 view .LVU830
 3105              	.LBE1225:
 3106              	.LBB1226:
1203:Veno-Echo.cpp ****             {
 3107              		.loc 20 1203 13 is_stmt 1 view .LVU831
1203:Veno-Echo.cpp ****             {
 3108              		.loc 20 1203 16 is_stmt 0 view .LVU832
 3109 011a 2A4B     		ldr	r3, .L179+40
1203:Veno-Echo.cpp ****             {
 3110              		.loc 20 1203 13 view .LVU833
 3111 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3112 011e 7AB9     		cbnz	r2, .L164
1205:Veno-Echo.cpp ****                 {
 3113              		.loc 20 1205 17 is_stmt 1 view .LVU834
 3114              	.LVL136:
 3115              	.LBB1210:
 3116              	.LBI1210:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3117              		.loc 21 75 3 view .LVU835
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 161


 3118              	.LBB1211:
 3119              		.loc 21 76 5 view .LVU836
 3120              		.loc 21 76 5 is_stmt 0 view .LVU837
 3121              	.LBE1211:
 3122              	.LBE1210:
1205:Veno-Echo.cpp ****                 {
 3123              		.loc 20 1205 23 view .LVU838
 3124 0120 294A     		ldr	r2, .L179+44
1205:Veno-Echo.cpp ****                 {
 3125              		.loc 20 1205 17 view .LVU839
 3126 0122 9FED2A7A 		vldr.32	s14, .L179+48
1205:Veno-Echo.cpp ****                 {
 3127              		.loc 20 1205 23 view .LVU840
 3128 0126 D2ED007A 		vldr.32	s15, [r2]
 3129 012a 70EE677A 		vsub.f32	s15, s0, s15
 3130              	.LBB1213:
 3131              	.LBB1212:
 3132              		.loc 21 76 31 view .LVU841
 3133 012e F0EEE77A 		vabs.f32	s15, s15
 3134              	.LBE1212:
 3135              	.LBE1213:
1205:Veno-Echo.cpp ****                 {
 3136              		.loc 20 1205 17 view .LVU842
 3137 0132 F4EEC77A 		vcmpe.f32	s15, s14
 3138 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3139 013a B6DD     		ble	.L151
1207:Veno-Echo.cpp ****                 }
 3140              		.loc 20 1207 21 is_stmt 1 view .LVU843
1207:Veno-Echo.cpp ****                 }
 3141              		.loc 20 1207 37 is_stmt 0 view .LVU844
 3142 013c 0122     		movs	r2, #1
 3143 013e 1A70     		strb	r2, [r3]
 3144              	.L164:
1212:Veno-Echo.cpp ****         {
 3145              		.loc 20 1212 9 is_stmt 1 view .LVU845
 3146              	.LBB1214:
1214:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3147              		.loc 20 1214 13 view .LVU846
 3148              	.LVL137:
1215:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3149              		.loc 20 1215 13 view .LVU847
1215:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3150              		.loc 20 1215 29 is_stmt 0 view .LVU848
 3151 0140 9FED231A 		vldr.32	s2, .L179+52
 3152 0144 0120     		movs	r0, #1
 3153 0146 DFED230A 		vldr.32	s1, .L179+56
 3154 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3155              	.LVL138:
1215:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3156              		.loc 20 1215 29 view .LVU849
 3157 014e B0EE408A 		vmov.f32	s16, s0
 3158              	.LVL139:
1216:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3159              		.loc 20 1216 13 is_stmt 1 view .LVU850
1216:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3160              		.loc 20 1216 26 is_stmt 0 view .LVU851
 3161 0152 2148     		ldr	r0, .L179+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 162


 3162 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3163              	.LVL140:
1217:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3164              		.loc 20 1217 13 is_stmt 1 view .LVU852
1217:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3165              		.loc 20 1217 26 is_stmt 0 view .LVU853
 3166 0158 2048     		ldr	r0, .L179+64
 3167 015a B0EE480A 		vmov.f32	s0, s16
 3168 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3169              	.LVL141:
1218:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3170              		.loc 20 1218 13 is_stmt 1 view .LVU854
1218:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3171              		.loc 20 1218 31 is_stmt 0 view .LVU855
 3172 0162 B0EE480A 		vmov.f32	s0, s16
 3173 0166 1E48     		ldr	r0, .L179+68
 3174 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3175              	.LVL142:
1219:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3176              		.loc 20 1219 13 is_stmt 1 view .LVU856
1219:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3177              		.loc 20 1219 31 is_stmt 0 view .LVU857
 3178 016c B0EE480A 		vmov.f32	s0, s16
 3179 0170 1C48     		ldr	r0, .L179+72
 3180 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3181              	.LVL143:
1220:Veno-Echo.cpp ****             save_flag = true;
 3182              		.loc 20 1220 13 is_stmt 1 view .LVU858
1220:Veno-Echo.cpp ****             save_flag = true;
 3183              		.loc 20 1220 35 is_stmt 0 view .LVU859
 3184 0176 1C49     		ldr	r1, .L179+76
 3185              	.LBB1215:
 3186              	.LBB1216:
 3187              	.LBB1217:
 3188              	.LBB1218:
 3189              	.LBB1219:
 3190              		.loc 22 397 18 view .LVU860
 3191 0178 1C4B     		ldr	r3, .L179+80
 3192 017a 0122     		movs	r2, #1
 3193              	.LBE1219:
 3194              	.LBE1218:
 3195              	.LBE1217:
 3196              	.LBE1216:
 3197              	.LBE1215:
1220:Veno-Echo.cpp ****             save_flag = true;
 3198              		.loc 20 1220 35 view .LVU861
 3199 017c 81ED058A 		vstr.32	s16, [r1, #20]
1221:Veno-Echo.cpp ****         }
 3200              		.loc 20 1221 13 is_stmt 1 view .LVU862
 3201              	.LVL144:
 3202              	.LBB1224:
 3203              	.LBI1215:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3204              		.loc 23 80 5 view .LVU863
 3205              	.LBB1223:
 3206              		.loc 23 81 7 view .LVU864
 3207              	.LBB1222:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 163


 3208              	.LBI1217:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3209              		.loc 22 288 7 view .LVU865
 3210              	.LBB1221:
 3211              	.LBI1218:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3212              		.loc 22 390 7 view .LVU866
 3213              	.LBB1220:
 3214              		.loc 22 397 18 is_stmt 0 view .LVU867
 3215 0180 BFF35B8F 		dmb	ish
 3216 0184 1A70     		strb	r2, [r3]
 3217 0186 BFF35B8F 		dmb	ish
 3218              	.LVL145:
 3219              		.loc 22 397 18 view .LVU868
 3220              	.LBE1220:
 3221              	.LBE1221:
 3222              	.LBE1222:
 3223              	.LBE1223:
 3224              	.LBE1224:
 3225              	.LBE1214:
 3226              	.LBE1226:
 3227              	.LBE1231:
1224:Veno-Echo.cpp **** 
 3228              		.loc 20 1224 1 view .LVU869
 3229 018a BDEC028B 		vldm	sp!, {d8}
 3230              		.cfi_remember_state
 3231              		.cfi_restore 80
 3232              		.cfi_restore 81
 3233              		.cfi_def_cfa_offset 8
 3234              	.LVL146:
1224:Veno-Echo.cpp **** 
 3235              		.loc 20 1224 1 view .LVU870
 3236 018e 10BD     		pop	{r4, pc}
 3237              	.LVL147:
 3238              	.L177:
 3239              		.cfi_restore_state
 3240              	.LBB1232:
 3241              	.LBB1227:
 3242              	.LBB1205:
 3243              	.LBB1189:
2021:Veno-Echo.cpp ****     }
 3244              		.loc 20 2021 16 view .LVU871
 3245 0190 DFED097A 		vldr.32	s15, .L179+28
 3246              	.LVL148:
2021:Veno-Echo.cpp ****     }
 3247              		.loc 20 2021 16 view .LVU872
 3248 0194 68E7     		b	.L159
 3249              	.LVL149:
 3250              	.L178:
2021:Veno-Echo.cpp ****     }
 3251              		.loc 20 2021 16 view .LVU873
 3252              	.LBE1189:
 3253              	.LBE1205:
 3254              	.LBB1206:
 3255              	.LBB1203:
 3256 0196 DFED087A 		vldr.32	s15, .L179+28
 3257 019a BAE7     		b	.L157
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 164


 3258              	.L180:
 3259              		.align	2
 3260              	.L179:
 3261 019c 18000000 		.word	.LANCHOR4+24
 3262 01a0 00000000 		.word	.LANCHOR7
 3263 01a4 00000000 		.word	.LANCHOR40
 3264 01a8 00000000 		.word	.LANCHOR41
 3265 01ac 00000000 		.word	.LANCHOR42
 3266 01b0 00000000 		.word	.LANCHOR39
 3267 01b4 00000000 		.word	.LANCHOR43
 3268 01b8 00000000 		.word	0
 3269 01bc 00000000 		.word	.LANCHOR44
 3270 01c0 6F12033D 		.word	1023611503
 3271 01c4 00000000 		.word	.LANCHOR45
 3272 01c8 00000000 		.word	.LANCHOR46
 3273 01cc 0AD7A33B 		.word	1000593162
 3274 01d0 00803B46 		.word	1178304512
 3275 01d4 0080BB44 		.word	1153138688
 3276 01d8 00000000 		.word	.LANCHOR47
 3277 01dc 00000000 		.word	.LANCHOR48
 3278 01e0 00000000 		.word	.LANCHOR49
 3279 01e4 00000000 		.word	.LANCHOR50
 3280 01e8 00000000 		.word	.LANCHOR15
 3281 01ec 00000000 		.word	.LANCHOR16
 3282              	.LBE1203:
 3283              	.LBE1206:
 3284              	.LBE1227:
 3285              	.LBE1232:
 3286              		.cfi_endproc
 3287              	.LFE4319:
 3289              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3290              		.align	1
 3291              		.p2align 2,,3
 3292              		.global	_Z16Update_drywet_CVv
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3296              		.fpu fpv5-d16
 3298              	_Z16Update_drywet_CVv:
 3299              	.LFB4320:
1227:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3300              		.loc 20 1227 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1228:Veno-Echo.cpp **** }
 3304              		.loc 20 1228 5 view .LVU875
1227:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3305              		.loc 20 1227 1 is_stmt 0 view .LVU876
 3306 0000 08B5     		push	{r3, lr}
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 3, -8
 3309              		.cfi_offset 14, -4
1228:Veno-Echo.cpp **** }
 3310              		.loc 20 1228 32 view .LVU877
 3311 0002 0421     		movs	r1, #4
 3312 0004 0348     		ldr	r0, .L183
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 165


 3313 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3314              	.LVL150:
1228:Veno-Echo.cpp **** }
 3315              		.loc 20 1228 15 view .LVU878
 3316 000a 034B     		ldr	r3, .L183+4
 3317 000c 83ED000A 		vstr.32	s0, [r3]
1229:Veno-Echo.cpp **** 
 3318              		.loc 20 1229 1 view .LVU879
 3319 0010 08BD     		pop	{r3, pc}
 3320              	.L184:
 3321 0012 00BF     		.align	2
 3322              	.L183:
 3323 0014 18000000 		.word	.LANCHOR4+24
 3324 0018 00000000 		.word	.LANCHOR51
 3325              		.cfi_endproc
 3326              	.LFE4320:
 3328              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 2,,3
 3331              		.global	_Z13Update_drywetv
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu fpv5-d16
 3337              	_Z13Update_drywetv:
 3338              	.LFB4321:
1232:Veno-Echo.cpp ****     static bool lastShift{};
 3339              		.loc 20 1232 1 is_stmt 1 view -0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
1233:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3343              		.loc 20 1233 5 view .LVU881
1234:Veno-Echo.cpp ****     static bool Res_pickup{};
 3344              		.loc 20 1234 5 view .LVU882
1235:Veno-Echo.cpp **** 
 3345              		.loc 20 1235 5 view .LVU883
1237:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3346              		.loc 20 1237 5 view .LVU884
1242:Veno-Echo.cpp **** 
 3347              		.loc 20 1242 5 view .LVU885
1242:Veno-Echo.cpp **** 
 3348              		.loc 20 1242 40 is_stmt 0 view .LVU886
 3349 0000 0522     		movs	r2, #5
 3350 0002 0721     		movs	r1, #7
 3351 0004 8248     		ldr	r0, .L218+24
1232:Veno-Echo.cpp ****     static bool lastShift{};
 3352              		.loc 20 1232 1 view .LVU887
 3353 0006 10B5     		push	{r4, lr}
 3354              		.cfi_def_cfa_offset 8
 3355              		.cfi_offset 4, -8
 3356              		.cfi_offset 14, -4
 3357 0008 2DED028B 		vpush.64	{d8}
 3358              		.cfi_def_cfa_offset 16
 3359              		.cfi_offset 80, -16
 3360              		.cfi_offset 81, -12
1242:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 166


 3361              		.loc 20 1242 40 view .LVU888
 3362 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3363              	.LVL151:
 3364              	.LBB1233:
1244:Veno-Echo.cpp ****     {   
 3365              		.loc 20 1244 9 view .LVU889
 3366 0010 804B     		ldr	r3, .L218+28
 3367              	.LVL152:
1244:Veno-Echo.cpp ****     {   
 3368              		.loc 20 1244 9 view .LVU890
 3369              	.LBE1233:
1244:Veno-Echo.cpp ****     {   
 3370              		.loc 20 1244 5 is_stmt 1 view .LVU891
 3371              	.LBB1276:
 3372              	.LBB1234:
1249:Veno-Echo.cpp ****         {
 3373              		.loc 20 1249 19 is_stmt 0 view .LVU892
 3374 0012 814A     		ldr	r2, .L218+32
 3375              	.LBE1234:
1244:Veno-Echo.cpp ****     {   
 3376              		.loc 20 1244 5 view .LVU893
 3377 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3378 0016 B3BB     		cbnz	r3, .L186
 3379              	.LBB1255:
1247:Veno-Echo.cpp **** 
 3380              		.loc 20 1247 9 is_stmt 1 view .LVU894
1249:Veno-Echo.cpp ****         {
 3381              		.loc 20 1249 9 view .LVU895
 3382 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3383 001a 0029     		cmp	r1, #0
 3384 001c 40D0     		beq	.L187
1251:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3385              		.loc 20 1251 13 view .LVU896
1253:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3386              		.loc 20 1253 27 is_stmt 0 view .LVU897
 3387 001e 7F48     		ldr	r0, .L218+36
1254:Veno-Echo.cpp ****         } 
 3388              		.loc 20 1254 24 view .LVU898
 3389 0020 7F49     		ldr	r1, .L218+40
1251:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3390              		.loc 20 1251 23 view .LVU899
 3391 0022 1370     		strb	r3, [r2]
1253:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3392              		.loc 20 1253 13 is_stmt 1 view .LVU900
1253:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3393              		.loc 20 1253 27 is_stmt 0 view .LVU901
 3394 0024 0370     		strb	r3, [r0]
1254:Veno-Echo.cpp ****         } 
 3395              		.loc 20 1254 13 is_stmt 1 view .LVU902
1254:Veno-Echo.cpp ****         } 
 3396              		.loc 20 1254 24 is_stmt 0 view .LVU903
 3397 0026 81ED000A 		vstr.32	s0, [r1]
 3398              	.L188:
1270:Veno-Echo.cpp **** 
 3399              		.loc 20 1270 9 is_stmt 1 view .LVU904
 3400              	.LVL153:
1272:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 167


 3401              		.loc 20 1272 9 view .LVU905
1280:Veno-Echo.cpp ****         }
 3402              		.loc 20 1280 13 view .LVU906
 3403              	.LBB1235:
 3404              	.LBI1235:
2014:Veno-Echo.cpp **** {
 3405              		.loc 20 2014 7 view .LVU907
 3406              	.LBB1236:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3407              		.loc 20 2016 5 view .LVU908
2017:Veno-Echo.cpp **** 
 3408              		.loc 20 2017 5 view .LVU909
 3409              	.LBE1236:
 3410              	.LBE1235:
1280:Veno-Echo.cpp ****         }
 3411              		.loc 20 1280 37 is_stmt 0 view .LVU910
 3412 002a 7E4A     		ldr	r2, .L218+44
 3413              	.LBB1239:
 3414              	.LBB1237:
2017:Veno-Echo.cpp **** 
 3415              		.loc 20 2017 39 view .LVU911
 3416 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 3417              		.loc 20 2017 49 view .LVU912
 3418 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3419              	.LBE1237:
 3420              	.LBE1239:
1280:Veno-Echo.cpp ****         }
 3421              		.loc 20 1280 37 view .LVU913
 3422 0034 7C4B     		ldr	r3, .L218+48
 3423              	.LBB1240:
 3424              	.LBB1238:
2017:Veno-Echo.cpp **** 
 3425              		.loc 20 2017 39 view .LVU914
 3426 0036 92ED007A 		vldr.32	s14, [r2]
2017:Veno-Echo.cpp **** 
 3427              		.loc 20 2017 12 view .LVU915
 3428 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3429 003e D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 3430              		.loc 20 2017 39 view .LVU916
 3431 0042 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
 3432              		.loc 20 2017 49 view .LVU917
 3433 0046 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 3434              		.loc 20 2017 12 view .LVU918
 3435 004a E7EE067A 		vfma.f32	s15, s14, s12
 3436              	.LVL154:
2019:Veno-Echo.cpp ****     {
 3437              		.loc 20 2019 5 is_stmt 1 view .LVU919
 3438 004e F5EEC07A 		vcmpe.f32	s15, #0
 3439 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3440 0056 00F1C180 		bmi	.L205
2024:Veno-Echo.cpp ****     {
 3441              		.loc 20 2024 5 view .LVU920
 3442 005a F4EEE67A 		vcmpe.f32	s15, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 168


 3443 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3444 0062 40F3C680 		ble	.L211
 3445              	.LVL155:
 3446              	.L196:
2024:Veno-Echo.cpp ****     {
 3447              		.loc 20 2024 5 is_stmt 0 view .LVU921
 3448              	.LBE1238:
 3449              	.LBE1240:
1287:Veno-Echo.cpp ****         }
 3450              		.loc 20 1287 26 view .LVU922
 3451 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3452              	.LVL156:
 3453              	.L195:
1299:Veno-Echo.cpp ****     }
 3454              		.loc 20 1299 9 is_stmt 1 view .LVU923
 3455              	.LBB1241:
 3456              	.LBI1241:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3457              		.loc 25 135 13 view .LVU924
 3458              	.LBB1242:
 3459              		.loc 25 137 5 view .LVU925
 3460              		.loc 25 137 9 is_stmt 0 view .LVU926
 3461 006a 704B     		ldr	r3, .L218+52
 3462 006c 9FED707A 		vldr.32	s14, .L218+56
 3463 0070 D3ED007A 		vldr.32	s15, [r3]
 3464              		.loc 25 137 24 view .LVU927
 3465 0074 30EE670A 		vsub.f32	s0, s0, s15
 3466              	.LVL157:
 3467              		.loc 25 137 24 view .LVU928
 3468              	.LBE1242:
 3469              	.LBE1241:
 3470              	.LBE1255:
 3471              	.LBE1276:
1339:Veno-Echo.cpp **** 
 3472              		.loc 20 1339 1 view .LVU929
 3473 0078 BDEC028B 		vldm	sp!, {d8}
 3474              		.cfi_remember_state
 3475              		.cfi_restore 80
 3476              		.cfi_restore 81
 3477              		.cfi_def_cfa_offset 8
 3478              	.LBB1277:
 3479              	.LBB1256:
 3480              	.LBB1244:
 3481              	.LBB1243:
 3482              		.loc 25 137 9 view .LVU930
 3483 007c E0EE077A 		vfma.f32	s15, s0, s14
 3484 0080 C3ED007A 		vstr.32	s15, [r3]
 3485              	.LBE1243:
 3486              	.LBE1244:
 3487              	.LBE1256:
 3488              	.LBE1277:
1339:Veno-Echo.cpp **** 
 3489              		.loc 20 1339 1 view .LVU931
 3490 0084 10BD     		pop	{r4, pc}
 3491              	.LVL158:
 3492              	.L186:
 3493              		.cfi_restore_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 169


 3494              	.LBB1278:
 3495              	.LBB1257:
1303:Veno-Echo.cpp **** 
 3496              		.loc 20 1303 9 is_stmt 1 view .LVU932
1305:Veno-Echo.cpp ****         {
 3497              		.loc 20 1305 9 view .LVU933
 3498 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3499 0088 002B     		cmp	r3, #0
 3500 008a 58D1     		bne	.L200
1307:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3501              		.loc 20 1307 13 view .LVU934
1307:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3502              		.loc 20 1307 23 is_stmt 0 view .LVU935
 3503 008c 0124     		movs	r4, #1
1308:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3504              		.loc 20 1308 24 view .LVU936
 3505 008e 6948     		ldr	r0, .L218+60
1309:Veno-Echo.cpp ****         }
 3506              		.loc 20 1309 21 view .LVU937
 3507 0090 6949     		ldr	r1, .L218+64
1307:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3508              		.loc 20 1307 23 view .LVU938
 3509 0092 1470     		strb	r4, [r2]
1308:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3510              		.loc 20 1308 13 is_stmt 1 view .LVU939
1308:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3511              		.loc 20 1308 24 is_stmt 0 view .LVU940
 3512 0094 0370     		strb	r3, [r0]
1309:Veno-Echo.cpp ****         }
 3513              		.loc 20 1309 13 is_stmt 1 view .LVU941
1309:Veno-Echo.cpp ****         }
 3514              		.loc 20 1309 21 is_stmt 0 view .LVU942
 3515 0096 81ED000A 		vstr.32	s0, [r1]
 3516              	.L185:
1309:Veno-Echo.cpp ****         }
 3517              		.loc 20 1309 21 view .LVU943
 3518              	.LBE1257:
 3519              	.LBE1278:
1339:Veno-Echo.cpp **** 
 3520              		.loc 20 1339 1 view .LVU944
 3521 009a BDEC028B 		vldm	sp!, {d8}
 3522              		.cfi_remember_state
 3523              		.cfi_restore 80
 3524              		.cfi_restore 81
 3525              		.cfi_def_cfa_offset 8
 3526 009e 10BD     		pop	{r4, pc}
 3527              	.L187:
 3528              		.cfi_restore_state
 3529              	.LBB1279:
 3530              	.LBB1273:
1259:Veno-Echo.cpp ****             {
 3531              		.loc 20 1259 13 is_stmt 1 view .LVU945
1259:Veno-Echo.cpp ****             {
 3532              		.loc 20 1259 16 is_stmt 0 view .LVU946
 3533 00a0 5E4B     		ldr	r3, .L218+36
1259:Veno-Echo.cpp ****             {
 3534              		.loc 20 1259 13 view .LVU947
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 170


 3535 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 00a4 7AB9     		cbnz	r2, .L189
1262:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1262 17 is_stmt 1 view .LVU948
 3538              	.LVL159:
 3539              	.LBB1245:
 3540              	.LBI1245:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3541              		.loc 21 75 3 view .LVU949
 3542              	.LBB1246:
 3543              		.loc 21 76 5 view .LVU950
 3544              		.loc 21 76 5 is_stmt 0 view .LVU951
 3545              	.LBE1246:
 3546              	.LBE1245:
1262:Veno-Echo.cpp ****                 {
 3547              		.loc 20 1262 23 view .LVU952
 3548 00a6 5E4A     		ldr	r2, .L218+40
1262:Veno-Echo.cpp ****                 {
 3549              		.loc 20 1262 17 view .LVU953
 3550 00a8 9FED647A 		vldr.32	s14, .L218+68
1262:Veno-Echo.cpp ****                 {
 3551              		.loc 20 1262 23 view .LVU954
 3552 00ac D2ED007A 		vldr.32	s15, [r2]
 3553 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3554              	.LBB1248:
 3555              	.LBB1247:
 3556              		.loc 21 76 31 view .LVU955
 3557 00b4 F0EEE77A 		vabs.f32	s15, s15
 3558              	.LBE1247:
 3559              	.LBE1248:
1262:Veno-Echo.cpp ****                 {
 3560              		.loc 20 1262 17 view .LVU956
 3561 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3562 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3563 00c0 B3DD     		ble	.L188
1264:Veno-Echo.cpp ****                 }
 3564              		.loc 20 1264 21 is_stmt 1 view .LVU957
1264:Veno-Echo.cpp ****                 }
 3565              		.loc 20 1264 35 is_stmt 0 view .LVU958
 3566 00c2 0122     		movs	r2, #1
 3567 00c4 1A70     		strb	r2, [r3]
 3568              	.L189:
1270:Veno-Echo.cpp **** 
 3569              		.loc 20 1270 9 is_stmt 1 view .LVU959
 3570              	.LVL160:
1272:Veno-Echo.cpp ****         {
 3571              		.loc 20 1272 9 view .LVU960
1274:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3572              		.loc 20 1274 13 view .LVU961
 3573              	.LBB1249:
 3574              	.LBI1249:
2014:Veno-Echo.cpp **** {
 3575              		.loc 20 2014 7 view .LVU962
 3576              	.LBB1250:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3577              		.loc 20 2016 5 view .LVU963
2017:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 171


 3578              		.loc 20 2017 5 view .LVU964
 3579              	.LBE1250:
 3580              	.LBE1249:
1274:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3581              		.loc 20 1274 37 is_stmt 0 view .LVU965
 3582 00c6 574B     		ldr	r3, .L218+44
 3583              	.LBB1253:
 3584              	.LBB1251:
2017:Veno-Echo.cpp **** 
 3585              		.loc 20 2017 39 view .LVU966
 3586 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 3587              		.loc 20 2017 49 view .LVU967
 3588 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 3589              		.loc 20 2017 39 view .LVU968
 3590 00d0 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 3591              		.loc 20 2017 12 view .LVU969
 3592 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 3593              		.loc 20 2017 39 view .LVU970
 3594 00d8 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 3595              		.loc 20 2017 49 view .LVU971
 3596 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 3597              		.loc 20 2017 12 view .LVU972
 3598 00e0 B0EE406A 		vmov.f32	s12, s0
 3599 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 3600              		.loc 20 2019 5 view .LVU973
 3601 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 3602              		.loc 20 2017 12 view .LVU974
 3603 00ec F0EE467A 		vmov.f32	s15, s12
 3604              	.LVL161:
2019:Veno-Echo.cpp ****     {
 3605              		.loc 20 2019 5 is_stmt 1 view .LVU975
 3606 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3607 00f4 75D4     		bmi	.L216
2024:Veno-Echo.cpp ****     {
 3608              		.loc 20 2024 5 view .LVU976
 3609 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3610 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3611 00fe 75DD     		ble	.L217
2026:Veno-Echo.cpp ****     }
 3612              		.loc 20 2026 16 is_stmt 0 view .LVU977
 3613 0100 F0EE477A 		vmov.f32	s15, s14
 3614 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3615              	.LVL162:
 3616              	.L191:
2029:Veno-Echo.cpp **** }
 3617              		.loc 20 2029 5 is_stmt 1 view .LVU978
2029:Veno-Echo.cpp **** }
 3618              		.loc 20 2029 5 is_stmt 0 view .LVU979
 3619              	.LBE1251:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 172


 3620              	.LBE1253:
1275:Veno-Echo.cpp ****         }
 3621              		.loc 20 1275 13 is_stmt 1 view .LVU980
1275:Veno-Echo.cpp ****         }
 3622              		.loc 20 1275 25 is_stmt 0 view .LVU981
 3623 0108 474B     		ldr	r3, .L218+48
 3624 010a 83ED000A 		vstr.32	s0, [r3]
 3625              	.LVL163:
 3626              	.L192:
1283:Veno-Echo.cpp **** 
 3627              		.loc 20 1283 9 is_stmt 1 view .LVU982
1285:Veno-Echo.cpp ****         {
 3628              		.loc 20 1285 9 view .LVU983
 3629 010e 9FED3A5B 		vldr.64	d5, .L218
 3630 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3631 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3632 011a A4DA     		bge	.L196
1289:Veno-Echo.cpp ****         {
 3633              		.loc 20 1289 14 view .LVU984
 3634 011c 9FED385B 		vldr.64	d5, .L218+8
 3635 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3636 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3637 0128 58D9     		bls	.L205
1295:Veno-Echo.cpp ****         }
 3638              		.loc 20 1295 13 view .LVU985
1295:Veno-Echo.cpp ****         }
 3639              		.loc 20 1295 33 is_stmt 0 view .LVU986
 3640 012a B0EE670A 		vmov.f32	s0, s15
 3641              	.LVL164:
1295:Veno-Echo.cpp ****         }
 3642              		.loc 20 1295 33 view .LVU987
 3643 012e 0020     		movs	r0, #0
 3644 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3645 0134 DFED420A 		vldr.32	s1, .L218+72
 3646 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3647              	.LVL165:
1295:Veno-Echo.cpp ****         }
 3648              		.loc 20 1295 33 view .LVU988
 3649 013c 95E7     		b	.L195
 3650              	.LVL166:
 3651              	.L200:
1295:Veno-Echo.cpp ****         }
 3652              		.loc 20 1295 33 view .LVU989
 3653              	.LBE1273:
 3654              	.LBB1274:
1314:Veno-Echo.cpp ****             {
 3655              		.loc 20 1314 13 is_stmt 1 view .LVU990
1314:Veno-Echo.cpp ****             {
 3656              		.loc 20 1314 16 is_stmt 0 view .LVU991
 3657 013e 3D4B     		ldr	r3, .L218+60
1314:Veno-Echo.cpp ****             {
 3658              		.loc 20 1314 13 view .LVU992
 3659 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3660 0142 7AB9     		cbnz	r2, .L202
1316:Veno-Echo.cpp ****                 {
 3661              		.loc 20 1316 17 is_stmt 1 view .LVU993
 3662              	.LVL167:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 173


 3663              	.LBB1258:
 3664              	.LBI1258:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3665              		.loc 21 75 3 view .LVU994
 3666              	.LBB1259:
 3667              		.loc 21 76 5 view .LVU995
 3668              		.loc 21 76 5 is_stmt 0 view .LVU996
 3669              	.LBE1259:
 3670              	.LBE1258:
1316:Veno-Echo.cpp ****                 {
 3671              		.loc 20 1316 23 view .LVU997
 3672 0144 3C4A     		ldr	r2, .L218+64
1316:Veno-Echo.cpp ****                 {
 3673              		.loc 20 1316 17 view .LVU998
 3674 0146 9FED3D7A 		vldr.32	s14, .L218+68
1316:Veno-Echo.cpp ****                 {
 3675              		.loc 20 1316 23 view .LVU999
 3676 014a D2ED007A 		vldr.32	s15, [r2]
 3677 014e 70EE677A 		vsub.f32	s15, s0, s15
 3678              	.LBB1261:
 3679              	.LBB1260:
 3680              		.loc 21 76 31 view .LVU1000
 3681 0152 F0EEE77A 		vabs.f32	s15, s15
 3682              	.LBE1260:
 3683              	.LBE1261:
1316:Veno-Echo.cpp ****                 {
 3684              		.loc 20 1316 17 view .LVU1001
 3685 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3686 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3687 015e 9CDD     		ble	.L185
1318:Veno-Echo.cpp ****                 }
 3688              		.loc 20 1318 21 is_stmt 1 view .LVU1002
1318:Veno-Echo.cpp ****                 }
 3689              		.loc 20 1318 32 is_stmt 0 view .LVU1003
 3690 0160 0122     		movs	r2, #1
 3691 0162 1A70     		strb	r2, [r3]
 3692              	.L202:
1323:Veno-Echo.cpp ****         {
 3693              		.loc 20 1323 9 is_stmt 1 view .LVU1004
 3694              	.LBB1262:
1325:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3695              		.loc 20 1325 13 view .LVU1005
 3696              	.LVL168:
1326:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3697              		.loc 20 1326 13 view .LVU1006
1326:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3698              		.loc 20 1326 24 is_stmt 0 view .LVU1007
 3699 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3700 0168 DFED350A 		vldr.32	s1, .L218+72
 3701 016c 0020     		movs	r0, #0
 3702 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3703              	.LVL169:
1326:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3704              		.loc 20 1326 24 view .LVU1008
 3705 0172 B0EE408A 		vmov.f32	s16, s0
 3706              	.LVL170:
1327:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 174


 3707              		.loc 20 1327 13 is_stmt 1 view .LVU1009
1327:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3708              		.loc 20 1327 25 is_stmt 0 view .LVU1010
 3709 0176 3348     		ldr	r0, .L218+76
 3710 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3711              	.LVL171:
1328:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3712              		.loc 20 1328 13 is_stmt 1 view .LVU1011
1328:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3713              		.loc 20 1328 25 is_stmt 0 view .LVU1012
 3714 017c 3248     		ldr	r0, .L218+80
 3715 017e B0EE480A 		vmov.f32	s0, s16
 3716 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3717              	.LVL172:
1329:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3718              		.loc 20 1329 13 is_stmt 1 view .LVU1013
1329:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3719              		.loc 20 1329 25 is_stmt 0 view .LVU1014
 3720 0186 B0EE480A 		vmov.f32	s0, s16
 3721 018a 3048     		ldr	r0, .L218+84
 3722 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3723              	.LVL173:
1330:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3724              		.loc 20 1330 13 is_stmt 1 view .LVU1015
1330:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3725              		.loc 20 1330 25 is_stmt 0 view .LVU1016
 3726 0190 B0EE480A 		vmov.f32	s0, s16
 3727 0194 2E48     		ldr	r0, .L218+88
 3728 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3729              	.LVL174:
1331:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3730              		.loc 20 1331 13 is_stmt 1 view .LVU1017
1331:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3731              		.loc 20 1331 30 is_stmt 0 view .LVU1018
 3732 019a B0EE480A 		vmov.f32	s0, s16
 3733 019e 2D48     		ldr	r0, .L218+92
 3734 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3735              	.LVL175:
1332:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3736              		.loc 20 1332 13 is_stmt 1 view .LVU1019
1332:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3737              		.loc 20 1332 30 is_stmt 0 view .LVU1020
 3738 01a4 B0EE480A 		vmov.f32	s0, s16
 3739 01a8 2B48     		ldr	r0, .L218+96
 3740 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3741              	.LVL176:
1333:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3742              		.loc 20 1333 13 is_stmt 1 view .LVU1021
1333:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3743              		.loc 20 1333 30 is_stmt 0 view .LVU1022
 3744 01ae B0EE480A 		vmov.f32	s0, s16
 3745 01b2 2A48     		ldr	r0, .L218+100
 3746 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3747              	.LVL177:
1334:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3748              		.loc 20 1334 13 is_stmt 1 view .LVU1023
1334:Veno-Echo.cpp ****             AltControls.Resonance = Res;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 175


 3749              		.loc 20 1334 30 is_stmt 0 view .LVU1024
 3750 01b8 B0EE480A 		vmov.f32	s0, s16
 3751 01bc 2848     		ldr	r0, .L218+104
 3752 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3753              	.LVL178:
1335:Veno-Echo.cpp ****             save_flag = true;
 3754              		.loc 20 1335 13 is_stmt 1 view .LVU1025
1335:Veno-Echo.cpp ****             save_flag = true;
 3755              		.loc 20 1335 35 is_stmt 0 view .LVU1026
 3756 01c2 2849     		ldr	r1, .L218+108
 3757              	.LBB1263:
 3758              	.LBB1264:
 3759              	.LBB1265:
 3760              	.LBB1266:
 3761              	.LBB1267:
 3762              		.loc 22 397 18 view .LVU1027
 3763 01c4 284B     		ldr	r3, .L218+112
 3764 01c6 0122     		movs	r2, #1
 3765              	.LBE1267:
 3766              	.LBE1266:
 3767              	.LBE1265:
 3768              	.LBE1264:
 3769              	.LBE1263:
1335:Veno-Echo.cpp ****             save_flag = true;
 3770              		.loc 20 1335 35 view .LVU1028
 3771 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1336:Veno-Echo.cpp ****         }
 3772              		.loc 20 1336 13 is_stmt 1 view .LVU1029
 3773              	.LVL179:
 3774              	.LBB1272:
 3775              	.LBI1263:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3776              		.loc 23 80 5 view .LVU1030
 3777              	.LBB1271:
 3778              		.loc 23 81 7 view .LVU1031
 3779              	.LBB1270:
 3780              	.LBI1265:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3781              		.loc 22 288 7 view .LVU1032
 3782              	.LBB1269:
 3783              	.LBI1266:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3784              		.loc 22 390 7 view .LVU1033
 3785              	.LBB1268:
 3786              		.loc 22 397 18 is_stmt 0 view .LVU1034
 3787 01cc BFF35B8F 		dmb	ish
 3788 01d0 1A70     		strb	r2, [r3]
 3789 01d2 BFF35B8F 		dmb	ish
 3790              	.LVL180:
 3791              		.loc 22 397 18 view .LVU1035
 3792              	.LBE1268:
 3793              	.LBE1269:
 3794              	.LBE1270:
 3795              	.LBE1271:
 3796              	.LBE1272:
 3797              	.LBE1262:
 3798              	.LBE1274:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 176


 3799              	.LBE1279:
1339:Veno-Echo.cpp **** 
 3800              		.loc 20 1339 1 view .LVU1036
 3801 01d6 BDEC028B 		vldm	sp!, {d8}
 3802              		.cfi_remember_state
 3803              		.cfi_restore 80
 3804              		.cfi_restore 81
 3805              		.cfi_def_cfa_offset 8
 3806              	.LVL181:
1339:Veno-Echo.cpp **** 
 3807              		.loc 20 1339 1 view .LVU1037
 3808 01da 10BD     		pop	{r4, pc}
 3809              	.LVL182:
 3810              	.L205:
 3811              		.cfi_restore_state
 3812              	.LBB1280:
 3813              	.LBB1275:
1291:Veno-Echo.cpp ****         }
 3814              		.loc 20 1291 26 view .LVU1038
 3815 01dc 9FED180A 		vldr.32	s0, .L218+72
 3816              	.LVL183:
1291:Veno-Echo.cpp ****         }
 3817              		.loc 20 1291 26 view .LVU1039
 3818 01e0 43E7     		b	.L195
 3819              	.LVL184:
 3820              	.L216:
 3821              	.LBB1254:
 3822              	.LBB1252:
1291:Veno-Echo.cpp ****         }
 3823              		.loc 20 1291 26 view .LVU1040
 3824 01e2 9FED096B 		vldr.64	d6, .L218+16
 3825              	.LVL185:
2021:Veno-Echo.cpp ****     }
 3826              		.loc 20 2021 16 view .LVU1041
 3827 01e6 DFED167A 		vldr.32	s15, .L218+72
 3828              	.LVL186:
2021:Veno-Echo.cpp ****     }
 3829              		.loc 20 2021 16 view .LVU1042
 3830 01ea 8DE7     		b	.L191
 3831              	.LVL187:
 3832              	.L217:
2021:Veno-Echo.cpp ****     }
 3833              		.loc 20 2021 16 view .LVU1043
 3834 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3835              	.LVL188:
2021:Veno-Echo.cpp ****     }
 3836              		.loc 20 2021 16 view .LVU1044
 3837 01f0 8AE7     		b	.L191
 3838              	.LVL189:
 3839              	.L211:
2021:Veno-Echo.cpp ****     }
 3840              		.loc 20 2021 16 view .LVU1045
 3841 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
 3842 01f6 8AE7     		b	.L192
 3843              	.L219:
 3844              		.align	3
 3845              	.L218:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 177


 3846 01f8 5C8FC2F5 		.word	4123168604
 3847 01fc 285CEF3F 		.word	1072651304
 3848 0200 7B14AE47 		.word	1202590843
 3849 0204 E17A943F 		.word	1066695393
 3850 0208 00000000 		.word	0
 3851 020c 00000000 		.word	0
 3852 0210 18000000 		.word	.LANCHOR4+24
 3853 0214 00000000 		.word	.LANCHOR7
 3854 0218 00000000 		.word	.LANCHOR52
 3855 021c 00000000 		.word	.LANCHOR53
 3856 0220 00000000 		.word	.LANCHOR54
 3857 0224 00000000 		.word	.LANCHOR51
 3858 0228 00000000 		.word	.LANCHOR55
 3859 022c 00000000 		.word	.LANCHOR56
 3860 0230 6F12833C 		.word	1015222895
 3861 0234 00000000 		.word	.LANCHOR57
 3862 0238 00000000 		.word	.LANCHOR58
 3863 023c 0AD7A33B 		.word	1000593162
 3864 0240 00000000 		.word	0
 3865 0244 00000000 		.word	.LANCHOR47
 3866 0248 00000000 		.word	.LANCHOR48
 3867 024c 00000000 		.word	.LANCHOR35
 3868 0250 00000000 		.word	.LANCHOR36
 3869 0254 00000000 		.word	.LANCHOR49
 3870 0258 00000000 		.word	.LANCHOR50
 3871 025c 00000000 		.word	.LANCHOR37
 3872 0260 00000000 		.word	.LANCHOR38
 3873 0264 00000000 		.word	.LANCHOR15
 3874 0268 00000000 		.word	.LANCHOR16
 3875              	.LBE1252:
 3876              	.LBE1254:
 3877              	.LBE1275:
 3878              	.LBE1280:
 3879              		.cfi_endproc
 3880              	.LFE4321:
 3882              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3883              		.align	1
 3884              		.p2align 2,,3
 3885              		.global	_Z15Update_width_CVv
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv5-d16
 3891              	_Z15Update_width_CVv:
 3892              	.LFB4322:
1342:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3893              		.loc 20 1342 1 is_stmt 1 view -0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
1343:Veno-Echo.cpp **** }
 3897              		.loc 20 1343 5 view .LVU1047
1342:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3898              		.loc 20 1342 1 is_stmt 0 view .LVU1048
 3899 0000 08B5     		push	{r3, lr}
 3900              		.cfi_def_cfa_offset 8
 3901              		.cfi_offset 3, -8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 178


 3902              		.cfi_offset 14, -4
1343:Veno-Echo.cpp **** }
 3903              		.loc 20 1343 30 view .LVU1049
 3904 0002 0521     		movs	r1, #5
 3905 0004 0348     		ldr	r0, .L222
 3906 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3907              	.LVL190:
1343:Veno-Echo.cpp **** }
 3908              		.loc 20 1343 13 view .LVU1050
 3909 000a 034B     		ldr	r3, .L222+4
 3910 000c 83ED000A 		vstr.32	s0, [r3]
1344:Veno-Echo.cpp **** 
 3911              		.loc 20 1344 1 view .LVU1051
 3912 0010 08BD     		pop	{r3, pc}
 3913              	.L223:
 3914 0012 00BF     		.align	2
 3915              	.L222:
 3916 0014 18000000 		.word	.LANCHOR4+24
 3917 0018 00000000 		.word	.LANCHOR59
 3918              		.cfi_endproc
 3919              	.LFE4322:
 3921              		.section	.text._Z12Update_widthv,"ax",%progbits
 3922              		.align	1
 3923              		.p2align 2,,3
 3924              		.global	_Z12Update_widthv
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv5-d16
 3930              	_Z12Update_widthv:
 3931              	.LFB4323:
1347:Veno-Echo.cpp ****     static bool lastShift{};
 3932              		.loc 20 1347 1 is_stmt 1 view -0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 0
 3935              		@ frame_needed = 0, uses_anonymous_args = 0
1348:Veno-Echo.cpp ****     static bool width_pickup{};
 3936              		.loc 20 1348 5 view .LVU1053
1349:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3937              		.loc 20 1349 5 view .LVU1054
1350:Veno-Echo.cpp **** 
 3938              		.loc 20 1350 5 view .LVU1055
1352:Veno-Echo.cpp **** 
 3939              		.loc 20 1352 5 view .LVU1056
1355:Veno-Echo.cpp **** 
 3940              		.loc 20 1355 5 view .LVU1057
1355:Veno-Echo.cpp **** 
 3941              		.loc 20 1355 39 is_stmt 0 view .LVU1058
 3942 0000 0722     		movs	r2, #7
 3943 0002 6348     		ldr	r0, .L253
 3944 0004 1146     		mov	r1, r2
1347:Veno-Echo.cpp ****     static bool lastShift{};
 3945              		.loc 20 1347 1 view .LVU1059
 3946 0006 10B5     		push	{r4, lr}
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 4, -8
 3949              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 179


 3950 0008 2DED028B 		vpush.64	{d8}
 3951              		.cfi_def_cfa_offset 16
 3952              		.cfi_offset 80, -16
 3953              		.cfi_offset 81, -12
1355:Veno-Echo.cpp **** 
 3954              		.loc 20 1355 39 view .LVU1060
 3955 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3956              	.LVL191:
 3957              	.LBB1281:
1357:Veno-Echo.cpp ****     {   
 3958              		.loc 20 1357 9 view .LVU1061
 3959 0010 604B     		ldr	r3, .L253+4
 3960              	.LBE1281:
1355:Veno-Echo.cpp **** 
 3961              		.loc 20 1355 39 view .LVU1062
 3962 0012 B0EE408A 		vmov.f32	s16, s0
 3963              	.LVL192:
1357:Veno-Echo.cpp ****     {   
 3964              		.loc 20 1357 5 is_stmt 1 view .LVU1063
 3965              	.LBB1336:
 3966              	.LBB1282:
1361:Veno-Echo.cpp ****         {
 3967              		.loc 20 1361 19 is_stmt 0 view .LVU1064
 3968 0016 604A     		ldr	r2, .L253+8
 3969              	.LBE1282:
1357:Veno-Echo.cpp ****     {   
 3970              		.loc 20 1357 5 view .LVU1065
 3971 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3972 001a 002B     		cmp	r3, #0
 3973 001c 3ED1     		bne	.L225
 3974              	.LBB1311:
1359:Veno-Echo.cpp ****         //update pickup
 3975              		.loc 20 1359 9 is_stmt 1 view .LVU1066
1361:Veno-Echo.cpp ****         {
 3976              		.loc 20 1361 9 view .LVU1067
 3977 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3978 0020 0029     		cmp	r1, #0
 3979 0022 48D0     		beq	.L226
1363:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3980              		.loc 20 1363 13 view .LVU1068
1364:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3981              		.loc 20 1364 26 is_stmt 0 view .LVU1069
 3982 0024 5D48     		ldr	r0, .L253+12
1365:Veno-Echo.cpp ****         }
 3983              		.loc 20 1365 23 view .LVU1070
 3984 0026 5E49     		ldr	r1, .L253+16
1363:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3985              		.loc 20 1363 23 view .LVU1071
 3986 0028 1370     		strb	r3, [r2]
1364:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3987              		.loc 20 1364 13 is_stmt 1 view .LVU1072
1364:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3988              		.loc 20 1364 26 is_stmt 0 view .LVU1073
 3989 002a 0370     		strb	r3, [r0]
1365:Veno-Echo.cpp ****         }
 3990              		.loc 20 1365 13 is_stmt 1 view .LVU1074
1365:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 180


 3991              		.loc 20 1365 23 is_stmt 0 view .LVU1075
 3992 002c 81ED000A 		vstr.32	s0, [r1]
 3993              	.L227:
1380:Veno-Echo.cpp **** 
 3994              		.loc 20 1380 9 is_stmt 1 view .LVU1076
 3995              	.LVL193:
1382:Veno-Echo.cpp ****         {
 3996              		.loc 20 1382 9 view .LVU1077
1390:Veno-Echo.cpp ****         }
 3997              		.loc 20 1390 13 view .LVU1078
 3998              	.LBB1283:
 3999              	.LBI1283:
2014:Veno-Echo.cpp **** {
 4000              		.loc 20 2014 7 view .LVU1079
 4001              	.LBB1284:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4002              		.loc 20 2016 5 view .LVU1080
2017:Veno-Echo.cpp **** 
 4003              		.loc 20 2017 5 view .LVU1081
 4004              	.LBE1284:
 4005              	.LBE1283:
1390:Veno-Echo.cpp ****         }
 4006              		.loc 20 1390 32 is_stmt 0 view .LVU1082
 4007 0030 5C4A     		ldr	r2, .L253+20
 4008              	.LBB1288:
 4009              	.LBB1285:
2017:Veno-Echo.cpp **** 
 4010              		.loc 20 2017 39 view .LVU1083
 4011 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 4012              		.loc 20 2017 49 view .LVU1084
 4013 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4014              	.LBE1285:
 4015              	.LBE1288:
1390:Veno-Echo.cpp ****         }
 4016              		.loc 20 1390 32 view .LVU1085
 4017 003a 5B4B     		ldr	r3, .L253+24
 4018              	.LBB1289:
 4019              	.LBB1286:
2017:Veno-Echo.cpp **** 
 4020              		.loc 20 2017 39 view .LVU1086
 4021 003c D2ED007A 		vldr.32	s15, [r2]
2017:Veno-Echo.cpp **** 
 4022              		.loc 20 2017 12 view .LVU1087
 4023 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4024 0044 93ED000A 		vldr.32	s0, [r3]
 4025              	.LVL194:
2017:Veno-Echo.cpp **** 
 4026              		.loc 20 2017 39 view .LVU1088
 4027 0048 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 4028              		.loc 20 2017 49 view .LVU1089
 4029 004c 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 4030              		.loc 20 2017 12 view .LVU1090
 4031 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4032              	.LVL195:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 181


2019:Veno-Echo.cpp ****     {
 4033              		.loc 20 2019 5 is_stmt 1 view .LVU1091
 4034 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4035 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4036 005c 00F19180 		bmi	.L251
2024:Veno-Echo.cpp ****     {
 4037              		.loc 20 2024 5 view .LVU1092
2026:Veno-Echo.cpp ****     }
 4038              		.loc 20 2026 16 is_stmt 0 view .LVU1093
 4039 0060 B4EE470A 		vcmp.f32	s0, s14
 4040 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4041 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4042              	.LVL196:
 4043              	.L233:
2029:Veno-Echo.cpp **** }
 4044              		.loc 20 2029 5 is_stmt 1 view .LVU1094
2029:Veno-Echo.cpp **** }
 4045              		.loc 20 2029 5 is_stmt 0 view .LVU1095
 4046              	.LBE1286:
 4047              	.LBE1289:
1390:Veno-Echo.cpp ****         }
 4048              		.loc 20 1390 32 view .LVU1096
 4049 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4050 0070 0020     		movs	r0, #0
 4051 0072 9FED4E1A 		vldr.32	s2, .L253+28
 4052 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4053              	.LVL197:
 4054              	.L232:
1393:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4055              		.loc 20 1393 13 is_stmt 1 view .LVU1097
 4056              	.LBB1290:
 4057              	.LBI1290:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4058              		.loc 25 135 13 view .LVU1098
 4059              	.LBB1291:
 4060              		.loc 25 137 5 view .LVU1099
 4061              		.loc 25 137 9 is_stmt 0 view .LVU1100
 4062 007a 4D4B     		ldr	r3, .L253+32
 4063 007c 9FED4D7A 		vldr.32	s14, .L253+36
 4064 0080 D3ED007A 		vldr.32	s15, [r3]
 4065              	.LBE1291:
 4066              	.LBE1290:
 4067              	.LBB1294:
 4068              	.LBB1295:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 182


  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4069              		.loc 10 60 42 view .LVU1101
 4070 0084 4C4A     		ldr	r2, .L253+40
 4071              	.LBE1295:
 4072              	.LBE1294:
 4073              	.LBB1297:
 4074              	.LBB1292:
 4075              		.loc 25 137 24 view .LVU1102
 4076 0086 30EE670A 		vsub.f32	s0, s0, s15
 4077              	.LVL198:
 4078              		.loc 25 137 24 view .LVU1103
 4079              	.LBE1292:
 4080              	.LBE1297:
 4081              	.LBE1311:
 4082              	.LBE1336:
1426:Veno-Echo.cpp **** 
 4083              		.loc 20 1426 1 view .LVU1104
 4084 008a BDEC028B 		vldm	sp!, {d8}
 4085              		.cfi_remember_state
 4086              		.cfi_restore 80
 4087              		.cfi_restore 81
 4088              		.cfi_def_cfa_offset 8
 4089              	.LVL199:
 4090              	.LBB1337:
 4091              	.LBB1312:
 4092              	.LBB1298:
 4093              	.LBB1293:
 4094              		.loc 25 137 9 view .LVU1105
 4095 008e E0EE077A 		vfma.f32	s15, s0, s14
 4096 0092 C3ED007A 		vstr.32	s15, [r3]
 4097              	.LVL200:
 4098              		.loc 25 137 9 view .LVU1106
 4099              	.LBE1293:
 4100              	.LBE1298:
1394:Veno-Echo.cpp ****     }
 4101              		.loc 20 1394 13 is_stmt 1 view .LVU1107
 4102              	.LBB1299:
 4103              	.LBI1294:
 4104              		.loc 10 60 17 view .LVU1108
 4105              	.LBB1296:
 4106              		.loc 10 60 37 view .LVU1109
 4107              		.loc 10 60 42 is_stmt 0 view .LVU1110
 4108 0096 C2ED007A 		vstr.32	s15, [r2]
 4109              	.LBE1296:
 4110              	.LBE1299:
 4111              	.LBE1312:
 4112              	.LBE1337:
1426:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 183


 4113              		.loc 20 1426 1 view .LVU1111
 4114 009a 10BD     		pop	{r4, pc}
 4115              	.LVL201:
 4116              	.L225:
 4117              		.cfi_restore_state
 4118              	.LBB1338:
 4119              	.LBB1313:
1399:Veno-Echo.cpp **** 
 4120              		.loc 20 1399 9 is_stmt 1 view .LVU1112
1401:Veno-Echo.cpp ****         {
 4121              		.loc 20 1401 9 view .LVU1113
 4122 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4123 009e 002B     		cmp	r3, #0
 4124 00a0 43D1     		bne	.L236
1403:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4125              		.loc 20 1403 13 view .LVU1114
1403:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4126              		.loc 20 1403 23 is_stmt 0 view .LVU1115
 4127 00a2 0124     		movs	r4, #1
1404:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4128              		.loc 20 1404 29 view .LVU1116
 4129 00a4 4548     		ldr	r0, .L253+44
1405:Veno-Echo.cpp ****         }
 4130              		.loc 20 1405 26 view .LVU1117
 4131 00a6 4649     		ldr	r1, .L253+48
1403:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4132              		.loc 20 1403 23 view .LVU1118
 4133 00a8 1470     		strb	r4, [r2]
1404:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4134              		.loc 20 1404 13 is_stmt 1 view .LVU1119
1404:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4135              		.loc 20 1404 29 is_stmt 0 view .LVU1120
 4136 00aa 0370     		strb	r3, [r0]
1405:Veno-Echo.cpp ****         }
 4137              		.loc 20 1405 13 is_stmt 1 view .LVU1121
1405:Veno-Echo.cpp ****         }
 4138              		.loc 20 1405 26 is_stmt 0 view .LVU1122
 4139 00ac 81ED000A 		vstr.32	s0, [r1]
 4140              	.L224:
1405:Veno-Echo.cpp ****         }
 4141              		.loc 20 1405 26 view .LVU1123
 4142              	.LBE1313:
 4143              	.LBE1338:
1426:Veno-Echo.cpp **** 
 4144              		.loc 20 1426 1 view .LVU1124
 4145 00b0 BDEC028B 		vldm	sp!, {d8}
 4146              		.cfi_remember_state
 4147              		.cfi_restore 80
 4148              		.cfi_restore 81
 4149              		.cfi_def_cfa_offset 8
 4150 00b4 10BD     		pop	{r4, pc}
 4151              	.L226:
 4152              		.cfi_restore_state
 4153              	.LBB1339:
 4154              	.LBB1333:
1370:Veno-Echo.cpp ****             {
 4155              		.loc 20 1370 13 is_stmt 1 view .LVU1125
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 184


1370:Veno-Echo.cpp ****             {
 4156              		.loc 20 1370 16 is_stmt 0 view .LVU1126
 4157 00b6 394B     		ldr	r3, .L253+12
1370:Veno-Echo.cpp ****             {
 4158              		.loc 20 1370 13 view .LVU1127
 4159 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4160 00ba 7AB9     		cbnz	r2, .L228
1372:Veno-Echo.cpp ****                 {
 4161              		.loc 20 1372 17 is_stmt 1 view .LVU1128
 4162              	.LVL202:
 4163              	.LBB1300:
 4164              	.LBI1300:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4165              		.loc 21 75 3 view .LVU1129
 4166              	.LBB1301:
 4167              		.loc 21 76 5 view .LVU1130
 4168              		.loc 21 76 5 is_stmt 0 view .LVU1131
 4169              	.LBE1301:
 4170              	.LBE1300:
1372:Veno-Echo.cpp ****                 {
 4171              		.loc 20 1372 23 view .LVU1132
 4172 00bc 384A     		ldr	r2, .L253+16
1372:Veno-Echo.cpp ****                 {
 4173              		.loc 20 1372 17 view .LVU1133
 4174 00be 9FED417A 		vldr.32	s14, .L253+52
1372:Veno-Echo.cpp ****                 {
 4175              		.loc 20 1372 23 view .LVU1134
 4176 00c2 D2ED007A 		vldr.32	s15, [r2]
 4177 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4178              	.LBB1303:
 4179              	.LBB1302:
 4180              		.loc 21 76 31 view .LVU1135
 4181 00ca F0EEE77A 		vabs.f32	s15, s15
 4182              	.LBE1302:
 4183              	.LBE1303:
1372:Veno-Echo.cpp ****                 {
 4184              		.loc 20 1372 17 view .LVU1136
 4185 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4186 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4187 00d6 ABDD     		ble	.L227
1374:Veno-Echo.cpp ****                 }
 4188              		.loc 20 1374 21 is_stmt 1 view .LVU1137
1374:Veno-Echo.cpp ****                 }
 4189              		.loc 20 1374 34 is_stmt 0 view .LVU1138
 4190 00d8 0122     		movs	r2, #1
 4191 00da 1A70     		strb	r2, [r3]
 4192              	.L228:
1380:Veno-Echo.cpp **** 
 4193              		.loc 20 1380 9 is_stmt 1 view .LVU1139
 4194              	.LVL203:
1382:Veno-Echo.cpp ****         {
 4195              		.loc 20 1382 9 view .LVU1140
1384:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4196              		.loc 20 1384 13 view .LVU1141
 4197              	.LBB1304:
 4198              	.LBI1304:
2014:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 185


 4199              		.loc 20 2014 7 view .LVU1142
 4200              	.LBB1305:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4201              		.loc 20 2016 5 view .LVU1143
2017:Veno-Echo.cpp **** 
 4202              		.loc 20 2017 5 view .LVU1144
 4203              	.LBE1305:
 4204              	.LBE1304:
1384:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4205              		.loc 20 1384 32 is_stmt 0 view .LVU1145
 4206 00dc 314B     		ldr	r3, .L253+20
 4207              	.LBB1308:
 4208              	.LBB1306:
2017:Veno-Echo.cpp **** 
 4209              		.loc 20 2017 39 view .LVU1146
 4210 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 4211              		.loc 20 2017 49 view .LVU1147
 4212 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 4213              		.loc 20 2017 39 view .LVU1148
 4214 00e6 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 4215              		.loc 20 2017 12 view .LVU1149
 4216 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4217 00ee B0EE480A 		vmov.f32	s0, s16
 4218              	.LVL204:
2017:Veno-Echo.cpp **** 
 4219              		.loc 20 2017 39 view .LVU1150
 4220 00f2 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 4221              		.loc 20 2017 49 view .LVU1151
 4222 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 4223              		.loc 20 2017 12 view .LVU1152
 4224 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4225              	.LVL205:
2019:Veno-Echo.cpp ****     {
 4226              		.loc 20 2019 5 is_stmt 1 view .LVU1153
 4227 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4228 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4229 0106 3FD4     		bmi	.L252
2024:Veno-Echo.cpp ****     {
 4230              		.loc 20 2024 5 view .LVU1154
2026:Veno-Echo.cpp ****     }
 4231              		.loc 20 2026 16 is_stmt 0 view .LVU1155
 4232 0108 B4EE470A 		vcmp.f32	s0, s14
 4233 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4234 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4235              	.LVL206:
 4236              	.L230:
2029:Veno-Echo.cpp **** }
 4237              		.loc 20 2029 5 is_stmt 1 view .LVU1156
2029:Veno-Echo.cpp **** }
 4238              		.loc 20 2029 5 is_stmt 0 view .LVU1157
 4239              	.LBE1306:
 4240              	.LBE1308:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 186


1384:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4241              		.loc 20 1384 32 view .LVU1158
 4242 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4243 0118 0020     		movs	r0, #0
 4244 011a 9FED241A 		vldr.32	s2, .L253+28
 4245 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4246              	.LVL207:
1385:Veno-Echo.cpp ****         }
 4247              		.loc 20 1385 24 view .LVU1159
 4248 0122 214B     		ldr	r3, .L253+24
 4249              	.LVL208:
1385:Veno-Echo.cpp ****         }
 4250              		.loc 20 1385 13 is_stmt 1 view .LVU1160
1385:Veno-Echo.cpp ****         }
 4251              		.loc 20 1385 24 is_stmt 0 view .LVU1161
 4252 0124 83ED008A 		vstr.32	s16, [r3]
 4253 0128 A7E7     		b	.L232
 4254              	.LVL209:
 4255              	.L236:
1385:Veno-Echo.cpp ****         }
 4256              		.loc 20 1385 24 view .LVU1162
 4257              	.LBE1333:
 4258              	.LBB1334:
1410:Veno-Echo.cpp ****             {
 4259              		.loc 20 1410 13 is_stmt 1 view .LVU1163
1410:Veno-Echo.cpp ****             {
 4260              		.loc 20 1410 16 is_stmt 0 view .LVU1164
 4261 012a 244B     		ldr	r3, .L253+44
1410:Veno-Echo.cpp ****             {
 4262              		.loc 20 1410 13 view .LVU1165
 4263 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4264 012e 7AB9     		cbnz	r2, .L238
1412:Veno-Echo.cpp ****                 {
 4265              		.loc 20 1412 17 is_stmt 1 view .LVU1166
 4266              	.LVL210:
 4267              	.LBB1314:
 4268              	.LBI1314:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4269              		.loc 21 75 3 view .LVU1167
 4270              	.LBB1315:
 4271              		.loc 21 76 5 view .LVU1168
 4272              		.loc 21 76 5 is_stmt 0 view .LVU1169
 4273              	.LBE1315:
 4274              	.LBE1314:
1412:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1412 23 view .LVU1170
 4276 0130 234A     		ldr	r2, .L253+48
1412:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1412 17 view .LVU1171
 4278 0132 9FED247A 		vldr.32	s14, .L253+52
1412:Veno-Echo.cpp ****                 {
 4279              		.loc 20 1412 23 view .LVU1172
 4280 0136 D2ED007A 		vldr.32	s15, [r2]
 4281 013a 70EE677A 		vsub.f32	s15, s0, s15
 4282              	.LBB1317:
 4283              	.LBB1316:
 4284              		.loc 21 76 31 view .LVU1173
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 187


 4285 013e F0EEE77A 		vabs.f32	s15, s15
 4286              	.LBE1316:
 4287              	.LBE1317:
1412:Veno-Echo.cpp ****                 {
 4288              		.loc 20 1412 17 view .LVU1174
 4289 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4290 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4291 014a B1DD     		ble	.L224
1414:Veno-Echo.cpp ****                 }
 4292              		.loc 20 1414 21 is_stmt 1 view .LVU1175
1414:Veno-Echo.cpp ****                 }
 4293              		.loc 20 1414 37 is_stmt 0 view .LVU1176
 4294 014c 0122     		movs	r2, #1
 4295 014e 1A70     		strb	r2, [r3]
 4296              	.L238:
1419:Veno-Echo.cpp ****         {
 4297              		.loc 20 1419 9 is_stmt 1 view .LVU1177
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4298              		.loc 20 1421 13 view .LVU1178
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4299              		.loc 20 1421 29 is_stmt 0 view .LVU1179
 4300 0150 B0EE480A 		vmov.f32	s0, s16
 4301              	.LVL211:
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4302              		.loc 20 1421 29 view .LVU1180
 4303 0154 0020     		movs	r0, #0
 4304 0156 9FED1C1A 		vldr.32	s2, .L253+56
 4305 015a DFED140A 		vldr.32	s1, .L253+28
 4306 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4307              	.LVL212:
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4308              		.loc 20 1421 22 view .LVU1181
 4309 0162 1A48     		ldr	r0, .L253+60
 4310              	.LBB1318:
 4311              	.LBB1319:
 4312              	.LBB1320:
 4313              	.LBB1321:
 4314              	.LBB1322:
 4315              		.loc 22 397 18 view .LVU1182
 4316 0164 0122     		movs	r2, #1
 4317              	.LBE1322:
 4318              	.LBE1321:
 4319              	.LBE1320:
 4320              	.LBE1319:
 4321              	.LBE1318:
1422:Veno-Echo.cpp ****             save_flag = true;
 4322              		.loc 20 1422 34 view .LVU1183
 4323 0166 1A49     		ldr	r1, .L253+64
 4324              	.LBB1331:
 4325              	.LBB1329:
 4326              	.LBB1327:
 4327              	.LBB1325:
 4328              	.LBB1323:
 4329              		.loc 22 397 18 view .LVU1184
 4330 0168 1A4B     		ldr	r3, .L253+68
 4331              	.LBE1323:
 4332              	.LBE1325:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 188


 4333              	.LBE1327:
 4334              	.LBE1329:
 4335              	.LBE1331:
1421:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4336              		.loc 20 1421 22 view .LVU1185
 4337 016a 80ED000A 		vstr.32	s0, [r0]
1422:Veno-Echo.cpp ****             save_flag = true;
 4338              		.loc 20 1422 13 is_stmt 1 view .LVU1186
1422:Veno-Echo.cpp ****             save_flag = true;
 4339              		.loc 20 1422 34 is_stmt 0 view .LVU1187
 4340 016e 81ED020A 		vstr.32	s0, [r1, #8]
1423:Veno-Echo.cpp ****         }
 4341              		.loc 20 1423 13 is_stmt 1 view .LVU1188
 4342              	.LVL213:
 4343              	.LBB1332:
 4344              	.LBI1318:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4345              		.loc 23 80 5 view .LVU1189
 4346              	.LBB1330:
 4347              		.loc 23 81 7 view .LVU1190
 4348              	.LBB1328:
 4349              	.LBI1320:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4350              		.loc 22 288 7 view .LVU1191
 4351              	.LBB1326:
 4352              	.LBI1321:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4353              		.loc 22 390 7 view .LVU1192
 4354              	.LBB1324:
 4355              		.loc 22 397 18 is_stmt 0 view .LVU1193
 4356 0172 BFF35B8F 		dmb	ish
 4357 0176 1A70     		strb	r2, [r3]
 4358 0178 BFF35B8F 		dmb	ish
 4359              	.LVL214:
 4360              		.loc 22 397 18 view .LVU1194
 4361              	.LBE1324:
 4362              	.LBE1326:
 4363              	.LBE1328:
 4364              	.LBE1330:
 4365              	.LBE1332:
 4366              	.LBE1334:
 4367              	.LBE1339:
1426:Veno-Echo.cpp **** 
 4368              		.loc 20 1426 1 view .LVU1195
 4369 017c BDEC028B 		vldm	sp!, {d8}
 4370              		.cfi_remember_state
 4371              		.cfi_restore 80
 4372              		.cfi_restore 81
 4373              		.cfi_def_cfa_offset 8
 4374              	.LVL215:
1426:Veno-Echo.cpp **** 
 4375              		.loc 20 1426 1 view .LVU1196
 4376 0180 10BD     		pop	{r4, pc}
 4377              	.LVL216:
 4378              	.L251:
 4379              		.cfi_restore_state
 4380              	.LBB1340:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 189


 4381              	.LBB1335:
 4382              	.LBB1309:
 4383              	.LBB1287:
2021:Veno-Echo.cpp ****     }
 4384              		.loc 20 2021 16 view .LVU1197
 4385 0182 9FED0A0A 		vldr.32	s0, .L253+28
 4386              	.LVL217:
2021:Veno-Echo.cpp ****     }
 4387              		.loc 20 2021 16 view .LVU1198
 4388 0186 71E7     		b	.L233
 4389              	.LVL218:
 4390              	.L252:
2021:Veno-Echo.cpp ****     }
 4391              		.loc 20 2021 16 view .LVU1199
 4392              	.LBE1287:
 4393              	.LBE1309:
 4394              	.LBB1310:
 4395              	.LBB1307:
 4396 0188 9FED080A 		vldr.32	s0, .L253+28
 4397              	.LVL219:
2021:Veno-Echo.cpp ****     }
 4398              		.loc 20 2021 16 view .LVU1200
 4399 018c C2E7     		b	.L230
 4400              	.L254:
 4401 018e 00BF     		.align	2
 4402              	.L253:
 4403 0190 18000000 		.word	.LANCHOR4+24
 4404 0194 00000000 		.word	.LANCHOR7
 4405 0198 00000000 		.word	.LANCHOR60
 4406 019c 00000000 		.word	.LANCHOR61
 4407 01a0 00000000 		.word	.LANCHOR62
 4408 01a4 00000000 		.word	.LANCHOR59
 4409 01a8 00000000 		.word	.LANCHOR63
 4410 01ac 00000000 		.word	0
 4411 01b0 00000000 		.word	.LANCHOR64
 4412 01b4 6F12033D 		.word	1023611503
 4413 01b8 00000000 		.word	.LANCHOR65
 4414 01bc 00000000 		.word	.LANCHOR66
 4415 01c0 00000000 		.word	.LANCHOR67
 4416 01c4 0AD7A33B 		.word	1000593162
 4417 01c8 0000FA43 		.word	1140457472
 4418 01cc 00000000 		.word	.LANCHOR68
 4419 01d0 00000000 		.word	.LANCHOR15
 4420 01d4 00000000 		.word	.LANCHOR16
 4421              	.LBE1307:
 4422              	.LBE1310:
 4423              	.LBE1335:
 4424              	.LBE1340:
 4425              		.cfi_endproc
 4426              	.LFE4323:
 4428              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4429              		.align	1
 4430              		.p2align 2,,3
 4431              		.global	_Z20Update_crossfeedbackv
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 190


 4435              		.fpu fpv5-d16
 4437              	_Z20Update_crossfeedbackv:
 4438              	.LFB4324:
1429:Veno-Echo.cpp ****     static bool lastShift{};
 4439              		.loc 20 1429 1 is_stmt 1 view -0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 0
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
1430:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4443              		.loc 20 1430 5 view .LVU1202
1431:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4444              		.loc 20 1431 5 view .LVU1203
1432:Veno-Echo.cpp **** 
 4445              		.loc 20 1432 5 view .LVU1204
1434:Veno-Echo.cpp **** 
 4446              		.loc 20 1434 5 view .LVU1205
1437:Veno-Echo.cpp **** 
 4447              		.loc 20 1437 5 view .LVU1206
1437:Veno-Echo.cpp **** 
 4448              		.loc 20 1437 47 is_stmt 0 view .LVU1207
 4449 0000 0022     		movs	r2, #0
 4450 0002 0721     		movs	r1, #7
 4451 0004 4548     		ldr	r0, .L270
1429:Veno-Echo.cpp ****     static bool lastShift{};
 4452              		.loc 20 1429 1 view .LVU1208
 4453 0006 10B5     		push	{r4, lr}
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 4, -8
 4456              		.cfi_offset 14, -4
 4457 0008 2DED028B 		vpush.64	{d8}
 4458              		.cfi_def_cfa_offset 16
 4459              		.cfi_offset 80, -16
 4460              		.cfi_offset 81, -12
1437:Veno-Echo.cpp **** 
 4461              		.loc 20 1437 47 view .LVU1209
 4462 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4463              	.LVL220:
 4464              	.LBB1341:
1439:Veno-Echo.cpp ****     {   
 4465              		.loc 20 1439 9 view .LVU1210
 4466 0010 434B     		ldr	r3, .L270+4
 4467              	.LBE1341:
1437:Veno-Echo.cpp **** 
 4468              		.loc 20 1437 47 view .LVU1211
 4469 0012 B0EE408A 		vmov.f32	s16, s0
 4470              	.LVL221:
1439:Veno-Echo.cpp ****     {   
 4471              		.loc 20 1439 5 is_stmt 1 view .LVU1212
 4472              	.LBB1379:
 4473              	.LBB1342:
1443:Veno-Echo.cpp ****         {
 4474              		.loc 20 1443 19 is_stmt 0 view .LVU1213
 4475 0016 434A     		ldr	r2, .L270+8
 4476              	.LBE1342:
1439:Veno-Echo.cpp ****     {   
 4477              		.loc 20 1439 5 view .LVU1214
 4478 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 191


 4479 001a FBB9     		cbnz	r3, .L256
 4480              	.LBB1351:
1441:Veno-Echo.cpp ****         //update pickup
 4481              		.loc 20 1441 9 is_stmt 1 view .LVU1215
1443:Veno-Echo.cpp ****         {
 4482              		.loc 20 1443 9 view .LVU1216
 4483 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4484 001e 49B3     		cbz	r1, .L257
1445:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4485              		.loc 20 1445 13 view .LVU1217
1446:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4486              		.loc 20 1446 34 is_stmt 0 view .LVU1218
 4487 0020 4148     		ldr	r0, .L270+12
1447:Veno-Echo.cpp ****         }
 4488              		.loc 20 1447 31 view .LVU1219
 4489 0022 4249     		ldr	r1, .L270+16
1445:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4490              		.loc 20 1445 23 view .LVU1220
 4491 0024 1370     		strb	r3, [r2]
1446:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4492              		.loc 20 1446 13 is_stmt 1 view .LVU1221
1446:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4493              		.loc 20 1446 34 is_stmt 0 view .LVU1222
 4494 0026 0370     		strb	r3, [r0]
1447:Veno-Echo.cpp ****         }
 4495              		.loc 20 1447 13 is_stmt 1 view .LVU1223
1447:Veno-Echo.cpp ****         }
 4496              		.loc 20 1447 31 is_stmt 0 view .LVU1224
 4497 0028 81ED000A 		vstr.32	s0, [r1]
 4498              	.L258:
1460:Veno-Echo.cpp **** 
 4499              		.loc 20 1460 9 is_stmt 1 view .LVU1225
 4500              	.LVL222:
1462:Veno-Echo.cpp ****         {
 4501              		.loc 20 1462 9 view .LVU1226
1470:Veno-Echo.cpp ****         }
 4502              		.loc 20 1470 13 view .LVU1227
1470:Veno-Echo.cpp ****         }
 4503              		.loc 20 1470 40 is_stmt 0 view .LVU1228
 4504 002c 404B     		ldr	r3, .L270+20
 4505 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4506 0032 0020     		movs	r0, #0
 4507 0034 DFED3F0A 		vldr.32	s1, .L270+24
 4508 0038 93ED000A 		vldr.32	s0, [r3]
 4509              	.LVL223:
1470:Veno-Echo.cpp ****         }
 4510              		.loc 20 1470 40 view .LVU1229
 4511 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4512              	.LVL224:
 4513              	.L266:
1473:Veno-Echo.cpp ****     }
 4514              		.loc 20 1473 9 is_stmt 1 view .LVU1230
 4515              	.LBB1343:
 4516              	.LBI1343:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4517              		.loc 25 135 13 view .LVU1231
 4518              	.LBB1344:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 192


 4519              		.loc 25 137 5 view .LVU1232
 4520              		.loc 25 137 9 is_stmt 0 view .LVU1233
 4521 0040 3D4B     		ldr	r3, .L270+28
 4522 0042 9FED3E7A 		vldr.32	s14, .L270+32
 4523 0046 D3ED007A 		vldr.32	s15, [r3]
 4524              		.loc 25 137 24 view .LVU1234
 4525 004a 30EE670A 		vsub.f32	s0, s0, s15
 4526              	.LVL225:
 4527              		.loc 25 137 24 view .LVU1235
 4528              	.LBE1344:
 4529              	.LBE1343:
 4530              	.LBE1351:
 4531              	.LBE1379:
1505:Veno-Echo.cpp **** 
 4532              		.loc 20 1505 1 view .LVU1236
 4533 004e BDEC028B 		vldm	sp!, {d8}
 4534              		.cfi_remember_state
 4535              		.cfi_restore 80
 4536              		.cfi_restore 81
 4537              		.cfi_def_cfa_offset 8
 4538              	.LVL226:
 4539              	.LBB1380:
 4540              	.LBB1352:
 4541              	.LBB1346:
 4542              	.LBB1345:
 4543              		.loc 25 137 9 view .LVU1237
 4544 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4545 0056 C3ED007A 		vstr.32	s15, [r3]
 4546              	.LBE1345:
 4547              	.LBE1346:
 4548              	.LBE1352:
 4549              	.LBE1380:
1505:Veno-Echo.cpp **** 
 4550              		.loc 20 1505 1 view .LVU1238
 4551 005a 10BD     		pop	{r4, pc}
 4552              	.LVL227:
 4553              	.L256:
 4554              		.cfi_restore_state
 4555              	.LBB1381:
 4556              	.LBB1353:
1477:Veno-Echo.cpp **** 
 4557              		.loc 20 1477 9 is_stmt 1 view .LVU1239
1479:Veno-Echo.cpp ****         {
 4558              		.loc 20 1479 9 view .LVU1240
 4559 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4560 005e 4BBB     		cbnz	r3, .L262
1481:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4561              		.loc 20 1481 13 view .LVU1241
1481:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4562              		.loc 20 1481 23 is_stmt 0 view .LVU1242
 4563 0060 0124     		movs	r4, #1
1482:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4564              		.loc 20 1482 28 view .LVU1243
 4565 0062 3748     		ldr	r0, .L270+36
1483:Veno-Echo.cpp ****         }
 4566              		.loc 20 1483 25 view .LVU1244
 4567 0064 3749     		ldr	r1, .L270+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 193


1481:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4568              		.loc 20 1481 23 view .LVU1245
 4569 0066 1470     		strb	r4, [r2]
1482:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4570              		.loc 20 1482 13 is_stmt 1 view .LVU1246
1482:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4571              		.loc 20 1482 28 is_stmt 0 view .LVU1247
 4572 0068 0370     		strb	r3, [r0]
1483:Veno-Echo.cpp ****         }
 4573              		.loc 20 1483 13 is_stmt 1 view .LVU1248
1483:Veno-Echo.cpp ****         }
 4574              		.loc 20 1483 25 is_stmt 0 view .LVU1249
 4575 006a 81ED000A 		vstr.32	s0, [r1]
 4576              	.L255:
1483:Veno-Echo.cpp ****         }
 4577              		.loc 20 1483 25 view .LVU1250
 4578              	.LBE1353:
 4579              	.LBE1381:
1505:Veno-Echo.cpp **** 
 4580              		.loc 20 1505 1 view .LVU1251
 4581 006e BDEC028B 		vldm	sp!, {d8}
 4582              		.cfi_remember_state
 4583              		.cfi_restore 80
 4584              		.cfi_restore 81
 4585              		.cfi_def_cfa_offset 8
 4586 0072 10BD     		pop	{r4, pc}
 4587              	.L257:
 4588              		.cfi_restore_state
 4589              	.LBB1382:
 4590              	.LBB1377:
1452:Veno-Echo.cpp ****             {
 4591              		.loc 20 1452 13 is_stmt 1 view .LVU1252
1452:Veno-Echo.cpp ****             {
 4592              		.loc 20 1452 16 is_stmt 0 view .LVU1253
 4593 0074 2C4B     		ldr	r3, .L270+12
1452:Veno-Echo.cpp ****             {
 4594              		.loc 20 1452 13 view .LVU1254
 4595 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4596 0078 7AB9     		cbnz	r2, .L259
1454:Veno-Echo.cpp ****                 {
 4597              		.loc 20 1454 17 is_stmt 1 view .LVU1255
 4598              	.LVL228:
 4599              	.LBB1347:
 4600              	.LBI1347:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4601              		.loc 21 75 3 view .LVU1256
 4602              	.LBB1348:
 4603              		.loc 21 76 5 view .LVU1257
 4604              		.loc 21 76 5 is_stmt 0 view .LVU1258
 4605              	.LBE1348:
 4606              	.LBE1347:
1454:Veno-Echo.cpp ****                 {
 4607              		.loc 20 1454 23 view .LVU1259
 4608 007a 2C4A     		ldr	r2, .L270+16
1454:Veno-Echo.cpp ****                 {
 4609              		.loc 20 1454 17 view .LVU1260
 4610 007c 9FED327A 		vldr.32	s14, .L270+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 194


1454:Veno-Echo.cpp ****                 {
 4611              		.loc 20 1454 23 view .LVU1261
 4612 0080 D2ED007A 		vldr.32	s15, [r2]
 4613 0084 70EE677A 		vsub.f32	s15, s0, s15
 4614              	.LBB1350:
 4615              	.LBB1349:
 4616              		.loc 21 76 31 view .LVU1262
 4617 0088 F0EEE77A 		vabs.f32	s15, s15
 4618              	.LBE1349:
 4619              	.LBE1350:
1454:Veno-Echo.cpp ****                 {
 4620              		.loc 20 1454 17 view .LVU1263
 4621 008c F4EEC77A 		vcmpe.f32	s15, s14
 4622 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4623 0094 CADD     		ble	.L258
1456:Veno-Echo.cpp ****                 }
 4624              		.loc 20 1456 21 is_stmt 1 view .LVU1264
1456:Veno-Echo.cpp ****                 }
 4625              		.loc 20 1456 42 is_stmt 0 view .LVU1265
 4626 0096 0122     		movs	r2, #1
 4627 0098 1A70     		strb	r2, [r3]
 4628              	.L259:
1460:Veno-Echo.cpp **** 
 4629              		.loc 20 1460 9 is_stmt 1 view .LVU1266
 4630              	.LVL229:
1462:Veno-Echo.cpp ****         {
 4631              		.loc 20 1462 9 view .LVU1267
1464:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4632              		.loc 20 1464 13 view .LVU1268
1464:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4633              		.loc 20 1464 40 is_stmt 0 view .LVU1269
 4634 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4635 009e 0020     		movs	r0, #0
 4636 00a0 B0EE480A 		vmov.f32	s0, s16
 4637              	.LVL230:
1464:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4638              		.loc 20 1464 40 view .LVU1270
 4639 00a4 DFED230A 		vldr.32	s1, .L270+24
 4640 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4641              	.LVL231:
1465:Veno-Echo.cpp ****         }
 4642              		.loc 20 1465 32 view .LVU1271
 4643 00ac 204B     		ldr	r3, .L270+20
 4644              	.LVL232:
1465:Veno-Echo.cpp ****         }
 4645              		.loc 20 1465 13 is_stmt 1 view .LVU1272
1465:Veno-Echo.cpp ****         }
 4646              		.loc 20 1465 32 is_stmt 0 view .LVU1273
 4647 00ae 83ED008A 		vstr.32	s16, [r3]
 4648 00b2 C5E7     		b	.L266
 4649              	.LVL233:
 4650              	.L262:
1465:Veno-Echo.cpp ****         }
 4651              		.loc 20 1465 32 view .LVU1274
 4652              	.LBE1377:
 4653              	.LBB1378:
1488:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 195


 4654              		.loc 20 1488 13 is_stmt 1 view .LVU1275
1488:Veno-Echo.cpp ****             {
 4655              		.loc 20 1488 16 is_stmt 0 view .LVU1276
 4656 00b4 224B     		ldr	r3, .L270+36
1488:Veno-Echo.cpp ****             {
 4657              		.loc 20 1488 13 view .LVU1277
 4658 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4659 00b8 7AB9     		cbnz	r2, .L264
1490:Veno-Echo.cpp ****                 {
 4660              		.loc 20 1490 17 is_stmt 1 view .LVU1278
 4661              	.LVL234:
 4662              	.LBB1354:
 4663              	.LBI1354:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4664              		.loc 21 75 3 view .LVU1279
 4665              	.LBB1355:
 4666              		.loc 21 76 5 view .LVU1280
 4667              		.loc 21 76 5 is_stmt 0 view .LVU1281
 4668              	.LBE1355:
 4669              	.LBE1354:
1490:Veno-Echo.cpp ****                 {
 4670              		.loc 20 1490 23 view .LVU1282
 4671 00ba 224A     		ldr	r2, .L270+40
1490:Veno-Echo.cpp ****                 {
 4672              		.loc 20 1490 17 view .LVU1283
 4673 00bc 9FED227A 		vldr.32	s14, .L270+44
1490:Veno-Echo.cpp ****                 {
 4674              		.loc 20 1490 23 view .LVU1284
 4675 00c0 D2ED007A 		vldr.32	s15, [r2]
 4676 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4677              	.LBB1357:
 4678              	.LBB1356:
 4679              		.loc 21 76 31 view .LVU1285
 4680 00c8 F0EEE77A 		vabs.f32	s15, s15
 4681              	.LBE1356:
 4682              	.LBE1357:
1490:Veno-Echo.cpp ****                 {
 4683              		.loc 20 1490 17 view .LVU1286
 4684 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4685 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4686 00d4 CBDD     		ble	.L255
1492:Veno-Echo.cpp ****                 }
 4687              		.loc 20 1492 21 is_stmt 1 view .LVU1287
1492:Veno-Echo.cpp ****                 }
 4688              		.loc 20 1492 36 is_stmt 0 view .LVU1288
 4689 00d6 0122     		movs	r2, #1
 4690 00d8 1A70     		strb	r2, [r3]
 4691              	.L264:
1497:Veno-Echo.cpp ****         {
 4692              		.loc 20 1497 9 is_stmt 1 view .LVU1289
 4693              	.LBB1358:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4694              		.loc 20 1499 13 view .LVU1290
 4695              	.LBB1359:
 4696              	.LBB1360:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 196


  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4697              		.loc 8 60 20 is_stmt 0 view .LVU1291
 4698 00da 1C4C     		ldr	r4, .L270+48
 4699              	.LBE1360:
 4700              	.LBE1359:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4701              		.loc 20 1499 32 view .LVU1292
 4702 00dc B0EE480A 		vmov.f32	s0, s16
 4703              	.LVL235:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4704              		.loc 20 1499 32 view .LVU1293
 4705 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4706 00e4 0020     		movs	r0, #0
 4707 00e6 DFED1A0A 		vldr.32	s1, .L270+52
 4708 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4709              	.LVL236:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 197


 4710              	.LBB1364:
 4711              	.LBB1361:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4712              		.loc 8 61 34 view .LVU1294
 4713 00ee 2046     		mov	r0, r4
 4714              	.LBE1361:
 4715              	.LBE1364:
1499:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4716              		.loc 20 1499 32 view .LVU1295
 4717 00f0 B0EE408A 		vmov.f32	s16, s0
 4718              	.LVL237:
1500:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4719              		.loc 20 1500 13 is_stmt 1 view .LVU1296
 4720              	.LBB1365:
 4721              	.LBI1359:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4722              		.loc 8 58 17 view .LVU1297
 4723              	.LBB1362:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4724              		.loc 8 60 9 view .LVU1298
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4725              		.loc 8 60 20 is_stmt 0 view .LVU1299
 4726 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4727              		.loc 8 61 9 is_stmt 1 view .LVU1300
 4728              		.loc 8 61 34 is_stmt 0 view .LVU1301
 4729 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4730              	.LVL238:
 4731              		.loc 8 61 34 view .LVU1302
 4732              	.LBE1362:
 4733              	.LBE1365:
1501:Veno-Echo.cpp ****             save_flag = true;
 4734              		.loc 20 1501 33 view .LVU1303
 4735 00fc 1549     		ldr	r1, .L270+56
 4736              	.LBB1366:
 4737              	.LBB1367:
 4738              	.LBB1368:
 4739              	.LBB1369:
 4740              	.LBB1370:
 4741              		.loc 22 397 18 view .LVU1304
 4742 00fe 164B     		ldr	r3, .L270+60
 4743 0100 0122     		movs	r2, #1
 4744              	.LBE1370:
 4745              	.LBE1369:
 4746              	.LBE1368:
 4747              	.LBE1367:
 4748              	.LBE1366:
1501:Veno-Echo.cpp ****             save_flag = true;
 4749              		.loc 20 1501 33 view .LVU1305
 4750 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4751              	.LBB1375:
 4752              	.LBB1363:
 4753              		.loc 8 61 20 view .LVU1306
 4754 0106 84ED060A 		vstr.32	s0, [r4, #24]
 4755              	.LVL239:
 4756              		.loc 8 61 20 view .LVU1307
 4757              	.LBE1363:
 4758              	.LBE1375:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 198


1501:Veno-Echo.cpp ****             save_flag = true;
 4759              		.loc 20 1501 13 is_stmt 1 view .LVU1308
1502:Veno-Echo.cpp ****         }
 4760              		.loc 20 1502 13 view .LVU1309
 4761              	.LBB1376:
 4762              	.LBI1366:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4763              		.loc 23 80 5 view .LVU1310
 4764              	.LBB1374:
 4765              		.loc 23 81 7 view .LVU1311
 4766              	.LBB1373:
 4767              	.LBI1368:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4768              		.loc 22 288 7 view .LVU1312
 4769              	.LBB1372:
 4770              	.LBI1369:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4771              		.loc 22 390 7 view .LVU1313
 4772              	.LBB1371:
 4773              		.loc 22 397 18 is_stmt 0 view .LVU1314
 4774 010a BFF35B8F 		dmb	ish
 4775 010e 1A70     		strb	r2, [r3]
 4776 0110 BFF35B8F 		dmb	ish
 4777              	.LVL240:
 4778              		.loc 22 397 18 view .LVU1315
 4779              	.LBE1371:
 4780              	.LBE1372:
 4781              	.LBE1373:
 4782              	.LBE1374:
 4783              	.LBE1376:
 4784              	.LBE1358:
 4785              	.LBE1378:
 4786              	.LBE1382:
1505:Veno-Echo.cpp **** 
 4787              		.loc 20 1505 1 view .LVU1316
 4788 0114 BDEC028B 		vldm	sp!, {d8}
 4789              		.cfi_restore 80
 4790              		.cfi_restore 81
 4791              		.cfi_def_cfa_offset 8
 4792              	.LVL241:
1505:Veno-Echo.cpp **** 
 4793              		.loc 20 1505 1 view .LVU1317
 4794 0118 10BD     		pop	{r4, pc}
 4795              	.L271:
 4796 011a 00BF     		.align	2
 4797              	.L270:
 4798 011c 18000000 		.word	.LANCHOR4+24
 4799 0120 00000000 		.word	.LANCHOR7
 4800 0124 00000000 		.word	.LANCHOR69
 4801 0128 00000000 		.word	.LANCHOR70
 4802 012c 00000000 		.word	.LANCHOR71
 4803 0130 00000000 		.word	.LANCHOR75
 4804 0134 00000000 		.word	0
 4805 0138 00000000 		.word	.LANCHOR72
 4806 013c 6F12033D 		.word	1023611503
 4807 0140 00000000 		.word	.LANCHOR73
 4808 0144 00000000 		.word	.LANCHOR74
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 199


 4809 0148 0AD7A33B 		.word	1000593162
 4810 014c 00000000 		.word	.LANCHOR76
 4811 0150 CDCCCC3D 		.word	1036831949
 4812 0154 00000000 		.word	.LANCHOR15
 4813 0158 00000000 		.word	.LANCHOR16
 4814              		.cfi_endproc
 4815              	.LFE4324:
 4817              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4818              		.align	1
 4819              		.p2align 2,,3
 4820              		.global	_Z18Update_filterXfadev
 4821              		.syntax unified
 4822              		.thumb
 4823              		.thumb_func
 4824              		.fpu fpv5-d16
 4826              	_Z18Update_filterXfadev:
 4827              	.LFB4325:
1508:Veno-Echo.cpp ****     static bool lastShift{};
 4828              		.loc 20 1508 1 is_stmt 1 view -0
 4829              		.cfi_startproc
 4830              		@ args = 0, pretend = 0, frame = 0
 4831              		@ frame_needed = 0, uses_anonymous_args = 0
1509:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4832              		.loc 20 1509 5 view .LVU1319
1510:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4833              		.loc 20 1510 5 view .LVU1320
1511:Veno-Echo.cpp **** 
 4834              		.loc 20 1511 5 view .LVU1321
1513:Veno-Echo.cpp **** 
 4835              		.loc 20 1513 5 view .LVU1322
1516:Veno-Echo.cpp **** 
 4836              		.loc 20 1516 5 view .LVU1323
1516:Veno-Echo.cpp **** 
 4837              		.loc 20 1516 45 is_stmt 0 view .LVU1324
 4838 0000 0322     		movs	r2, #3
 4839 0002 0721     		movs	r1, #7
 4840 0004 4648     		ldr	r0, .L294
1508:Veno-Echo.cpp ****     static bool lastShift{};
 4841              		.loc 20 1508 1 view .LVU1325
 4842 0006 10B5     		push	{r4, lr}
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
 4846 0008 2DED028B 		vpush.64	{d8}
 4847              		.cfi_def_cfa_offset 16
 4848              		.cfi_offset 80, -16
 4849              		.cfi_offset 81, -12
1516:Veno-Echo.cpp **** 
 4850              		.loc 20 1516 45 view .LVU1326
 4851 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4852              	.LVL242:
 4853              	.LBB1383:
1518:Veno-Echo.cpp ****     {   
 4854              		.loc 20 1518 9 view .LVU1327
 4855 0010 444B     		ldr	r3, .L294+4
 4856              	.LBE1383:
1516:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 200


 4857              		.loc 20 1516 45 view .LVU1328
 4858 0012 B0EE408A 		vmov.f32	s16, s0
 4859              	.LVL243:
1518:Veno-Echo.cpp ****     {   
 4860              		.loc 20 1518 5 is_stmt 1 view .LVU1329
 4861              	.LBB1413:
 4862              	.LBB1384:
1522:Veno-Echo.cpp ****         {
 4863              		.loc 20 1522 19 is_stmt 0 view .LVU1330
 4864 0016 444A     		ldr	r2, .L294+8
 4865              	.LBE1384:
1518:Veno-Echo.cpp ****     {   
 4866              		.loc 20 1518 5 view .LVU1331
 4867 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4868 001a FBB9     		cbnz	r3, .L273
 4869              	.LBB1393:
1520:Veno-Echo.cpp ****         //update pickup
 4870              		.loc 20 1520 9 is_stmt 1 view .LVU1332
1522:Veno-Echo.cpp ****         {
 4871              		.loc 20 1522 9 view .LVU1333
 4872 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4873 001e 49B3     		cbz	r1, .L274
1524:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4874              		.loc 20 1524 13 view .LVU1334
1525:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4875              		.loc 20 1525 32 is_stmt 0 view .LVU1335
 4876 0020 4248     		ldr	r0, .L294+12
1526:Veno-Echo.cpp ****         }
 4877              		.loc 20 1526 29 view .LVU1336
 4878 0022 4349     		ldr	r1, .L294+16
1524:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4879              		.loc 20 1524 23 view .LVU1337
 4880 0024 1370     		strb	r3, [r2]
1525:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4881              		.loc 20 1525 13 is_stmt 1 view .LVU1338
1525:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4882              		.loc 20 1525 32 is_stmt 0 view .LVU1339
 4883 0026 0370     		strb	r3, [r0]
1526:Veno-Echo.cpp ****         }
 4884              		.loc 20 1526 13 is_stmt 1 view .LVU1340
1526:Veno-Echo.cpp ****         }
 4885              		.loc 20 1526 29 is_stmt 0 view .LVU1341
 4886 0028 81ED000A 		vstr.32	s0, [r1]
 4887              	.L275:
1540:Veno-Echo.cpp **** 
 4888              		.loc 20 1540 9 is_stmt 1 view .LVU1342
 4889              	.LVL244:
1542:Veno-Echo.cpp ****         {
 4890              		.loc 20 1542 9 view .LVU1343
1550:Veno-Echo.cpp ****         }
 4891              		.loc 20 1550 13 view .LVU1344
1550:Veno-Echo.cpp ****         }
 4892              		.loc 20 1550 38 is_stmt 0 view .LVU1345
 4893 002c 414B     		ldr	r3, .L294+20
 4894 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4895 0032 0120     		movs	r0, #1
 4896 0034 DFED400A 		vldr.32	s1, .L294+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 201


 4897 0038 93ED000A 		vldr.32	s0, [r3]
 4898              	.LVL245:
1550:Veno-Echo.cpp ****         }
 4899              		.loc 20 1550 38 view .LVU1346
 4900 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4901              	.LVL246:
 4902              	.L285:
1553:Veno-Echo.cpp ****     }
 4903              		.loc 20 1553 9 is_stmt 1 view .LVU1347
 4904              	.LBB1385:
 4905              	.LBI1385:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4906              		.loc 25 135 13 view .LVU1348
 4907              	.LBB1386:
 4908              		.loc 25 137 5 view .LVU1349
 4909              		.loc 25 137 9 is_stmt 0 view .LVU1350
 4910 0040 3E4B     		ldr	r3, .L294+28
 4911 0042 9FED3F7A 		vldr.32	s14, .L294+32
 4912 0046 D3ED007A 		vldr.32	s15, [r3]
 4913              		.loc 25 137 24 view .LVU1351
 4914 004a 30EE670A 		vsub.f32	s0, s0, s15
 4915              	.LVL247:
 4916              		.loc 25 137 24 view .LVU1352
 4917              	.LBE1386:
 4918              	.LBE1385:
 4919              	.LBE1393:
 4920              	.LBE1413:
1596:Veno-Echo.cpp **** 
 4921              		.loc 20 1596 1 view .LVU1353
 4922 004e BDEC028B 		vldm	sp!, {d8}
 4923              		.cfi_remember_state
 4924              		.cfi_restore 80
 4925              		.cfi_restore 81
 4926              		.cfi_def_cfa_offset 8
 4927              	.LVL248:
 4928              	.LBB1414:
 4929              	.LBB1394:
 4930              	.LBB1388:
 4931              	.LBB1387:
 4932              		.loc 25 137 9 view .LVU1354
 4933 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4934 0056 C3ED007A 		vstr.32	s15, [r3]
 4935              	.LBE1387:
 4936              	.LBE1388:
 4937              	.LBE1394:
 4938              	.LBE1414:
1596:Veno-Echo.cpp **** 
 4939              		.loc 20 1596 1 view .LVU1355
 4940 005a 10BD     		pop	{r4, pc}
 4941              	.LVL249:
 4942              	.L273:
 4943              		.cfi_restore_state
 4944              	.LBB1415:
 4945              	.LBB1395:
1558:Veno-Echo.cpp **** 
 4946              		.loc 20 1558 9 is_stmt 1 view .LVU1356
1560:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 202


 4947              		.loc 20 1560 9 view .LVU1357
 4948 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4949 005e 4BBB     		cbnz	r3, .L279
1562:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4950              		.loc 20 1562 13 view .LVU1358
1562:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4951              		.loc 20 1562 23 is_stmt 0 view .LVU1359
 4952 0060 0124     		movs	r4, #1
1563:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4953              		.loc 20 1563 32 view .LVU1360
 4954 0062 3848     		ldr	r0, .L294+36
1564:Veno-Echo.cpp ****         }
 4955              		.loc 20 1564 29 view .LVU1361
 4956 0064 3849     		ldr	r1, .L294+40
1562:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4957              		.loc 20 1562 23 view .LVU1362
 4958 0066 1470     		strb	r4, [r2]
1563:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4959              		.loc 20 1563 13 is_stmt 1 view .LVU1363
1563:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4960              		.loc 20 1563 32 is_stmt 0 view .LVU1364
 4961 0068 0370     		strb	r3, [r0]
1564:Veno-Echo.cpp ****         }
 4962              		.loc 20 1564 13 is_stmt 1 view .LVU1365
1564:Veno-Echo.cpp ****         }
 4963              		.loc 20 1564 29 is_stmt 0 view .LVU1366
 4964 006a 81ED000A 		vstr.32	s0, [r1]
 4965              	.L272:
1564:Veno-Echo.cpp ****         }
 4966              		.loc 20 1564 29 view .LVU1367
 4967              	.LBE1395:
 4968              	.LBE1415:
1596:Veno-Echo.cpp **** 
 4969              		.loc 20 1596 1 view .LVU1368
 4970 006e BDEC028B 		vldm	sp!, {d8}
 4971              		.cfi_remember_state
 4972              		.cfi_restore 80
 4973              		.cfi_restore 81
 4974              		.cfi_def_cfa_offset 8
 4975 0072 10BD     		pop	{r4, pc}
 4976              	.L274:
 4977              		.cfi_restore_state
 4978              	.LBB1416:
 4979              	.LBB1410:
1531:Veno-Echo.cpp ****             {
 4980              		.loc 20 1531 13 is_stmt 1 view .LVU1369
1531:Veno-Echo.cpp ****             {
 4981              		.loc 20 1531 16 is_stmt 0 view .LVU1370
 4982 0074 2D4B     		ldr	r3, .L294+12
1531:Veno-Echo.cpp ****             {
 4983              		.loc 20 1531 13 view .LVU1371
 4984 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4985 0078 7AB9     		cbnz	r2, .L276
1533:Veno-Echo.cpp ****                 {
 4986              		.loc 20 1533 17 is_stmt 1 view .LVU1372
 4987              	.LVL250:
 4988              	.LBB1389:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 203


 4989              	.LBI1389:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4990              		.loc 21 75 3 view .LVU1373
 4991              	.LBB1390:
 4992              		.loc 21 76 5 view .LVU1374
 4993              		.loc 21 76 5 is_stmt 0 view .LVU1375
 4994              	.LBE1390:
 4995              	.LBE1389:
1533:Veno-Echo.cpp ****                 {
 4996              		.loc 20 1533 23 view .LVU1376
 4997 007a 2D4A     		ldr	r2, .L294+16
1533:Veno-Echo.cpp ****                 {
 4998              		.loc 20 1533 17 view .LVU1377
 4999 007c 9FED337A 		vldr.32	s14, .L294+44
1533:Veno-Echo.cpp ****                 {
 5000              		.loc 20 1533 23 view .LVU1378
 5001 0080 D2ED007A 		vldr.32	s15, [r2]
 5002 0084 70EE677A 		vsub.f32	s15, s0, s15
 5003              	.LBB1392:
 5004              	.LBB1391:
 5005              		.loc 21 76 31 view .LVU1379
 5006 0088 F0EEE77A 		vabs.f32	s15, s15
 5007              	.LBE1391:
 5008              	.LBE1392:
1533:Veno-Echo.cpp ****                 {
 5009              		.loc 20 1533 17 view .LVU1380
 5010 008c F4EEC77A 		vcmpe.f32	s15, s14
 5011 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5012 0094 CADD     		ble	.L275
1535:Veno-Echo.cpp ****                 }
 5013              		.loc 20 1535 21 is_stmt 1 view .LVU1381
1535:Veno-Echo.cpp ****                 }
 5014              		.loc 20 1535 40 is_stmt 0 view .LVU1382
 5015 0096 0122     		movs	r2, #1
 5016 0098 1A70     		strb	r2, [r3]
 5017              	.L276:
1540:Veno-Echo.cpp **** 
 5018              		.loc 20 1540 9 is_stmt 1 view .LVU1383
 5019              	.LVL251:
1542:Veno-Echo.cpp ****         {
 5020              		.loc 20 1542 9 view .LVU1384
1544:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5021              		.loc 20 1544 13 view .LVU1385
1544:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5022              		.loc 20 1544 38 is_stmt 0 view .LVU1386
 5023 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 5024 009e 0120     		movs	r0, #1
 5025 00a0 B0EE480A 		vmov.f32	s0, s16
 5026              	.LVL252:
1544:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5027              		.loc 20 1544 38 view .LVU1387
 5028 00a4 DFED240A 		vldr.32	s1, .L294+24
 5029 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5030              	.LVL253:
1545:Veno-Echo.cpp ****         }
 5031              		.loc 20 1545 30 view .LVU1388
 5032 00ac 214B     		ldr	r3, .L294+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 204


 5033              	.LVL254:
1545:Veno-Echo.cpp ****         }
 5034              		.loc 20 1545 13 is_stmt 1 view .LVU1389
1545:Veno-Echo.cpp ****         }
 5035              		.loc 20 1545 30 is_stmt 0 view .LVU1390
 5036 00ae 83ED008A 		vstr.32	s16, [r3]
 5037 00b2 C5E7     		b	.L285
 5038              	.LVL255:
 5039              	.L279:
1545:Veno-Echo.cpp ****         }
 5040              		.loc 20 1545 30 view .LVU1391
 5041              	.LBE1410:
 5042              	.LBB1411:
1569:Veno-Echo.cpp ****             {
 5043              		.loc 20 1569 13 is_stmt 1 view .LVU1392
1569:Veno-Echo.cpp ****             {
 5044              		.loc 20 1569 16 is_stmt 0 view .LVU1393
 5045 00b4 234B     		ldr	r3, .L294+36
1569:Veno-Echo.cpp ****             {
 5046              		.loc 20 1569 13 view .LVU1394
 5047 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5048 00b8 7AB9     		cbnz	r2, .L281
1571:Veno-Echo.cpp ****                 {
 5049              		.loc 20 1571 17 is_stmt 1 view .LVU1395
 5050              	.LVL256:
 5051              	.LBB1396:
 5052              	.LBI1396:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5053              		.loc 21 75 3 view .LVU1396
 5054              	.LBB1397:
 5055              		.loc 21 76 5 view .LVU1397
 5056              		.loc 21 76 5 is_stmt 0 view .LVU1398
 5057              	.LBE1397:
 5058              	.LBE1396:
1571:Veno-Echo.cpp ****                 {
 5059              		.loc 20 1571 23 view .LVU1399
 5060 00ba 234A     		ldr	r2, .L294+40
1571:Veno-Echo.cpp ****                 {
 5061              		.loc 20 1571 17 view .LVU1400
 5062 00bc 9FED237A 		vldr.32	s14, .L294+44
1571:Veno-Echo.cpp ****                 {
 5063              		.loc 20 1571 23 view .LVU1401
 5064 00c0 D2ED007A 		vldr.32	s15, [r2]
 5065 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5066              	.LBB1399:
 5067              	.LBB1398:
 5068              		.loc 21 76 31 view .LVU1402
 5069 00c8 F0EEE77A 		vabs.f32	s15, s15
 5070              	.LBE1398:
 5071              	.LBE1399:
1571:Veno-Echo.cpp ****                 {
 5072              		.loc 20 1571 17 view .LVU1403
 5073 00cc F4EEC77A 		vcmpe.f32	s15, s14
 5074 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5075 00d4 CBDD     		ble	.L272
1573:Veno-Echo.cpp ****                 }
 5076              		.loc 20 1573 21 is_stmt 1 view .LVU1404
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 205


1573:Veno-Echo.cpp ****                 }
 5077              		.loc 20 1573 40 is_stmt 0 view .LVU1405
 5078 00d6 0122     		movs	r2, #1
 5079 00d8 1A70     		strb	r2, [r3]
 5080              	.L281:
1578:Veno-Echo.cpp ****         {
 5081              		.loc 20 1578 9 is_stmt 1 view .LVU1406
1580:Veno-Echo.cpp ****             {
 5082              		.loc 20 1580 13 view .LVU1407
 5083 00da DFED1D7A 		vldr.32	s15, .L294+48
 5084 00de B4EEE78A 		vcmpe.f32	s16, s15
 5085 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5086 00e6 0FD5     		bpl	.L293
1582:Veno-Echo.cpp ****             }
 5087              		.loc 20 1582 17 view .LVU1408
1582:Veno-Echo.cpp ****             }
 5088              		.loc 20 1582 29 is_stmt 0 view .LVU1409
 5089 00e8 1A4B     		ldr	r3, .L294+52
 5090 00ea 0022     		movs	r2, #0
 5091 00ec 1A70     		strb	r2, [r3]
 5092              	.L283:
1592:Veno-Echo.cpp ****             save_flag = true;
 5093              		.loc 20 1592 13 is_stmt 1 view .LVU1410
1592:Veno-Echo.cpp ****             save_flag = true;
 5094              		.loc 20 1592 39 is_stmt 0 view .LVU1411
 5095 00ee 1A49     		ldr	r1, .L294+56
 5096              	.LBB1400:
 5097              	.LBB1401:
 5098              	.LBB1402:
 5099              	.LBB1403:
 5100              	.LBB1404:
 5101              		.loc 22 397 18 view .LVU1412
 5102 00f0 0122     		movs	r2, #1
 5103 00f2 1A4B     		ldr	r3, .L294+60
 5104              	.LBE1404:
 5105              	.LBE1403:
 5106              	.LBE1402:
 5107              	.LBE1401:
 5108              	.LBE1400:
1592:Veno-Echo.cpp ****             save_flag = true;
 5109              		.loc 20 1592 39 view .LVU1413
 5110 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1593:Veno-Echo.cpp ****         }  
 5111              		.loc 20 1593 13 is_stmt 1 view .LVU1414
 5112              	.LVL257:
 5113              	.LBB1409:
 5114              	.LBI1400:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5115              		.loc 23 80 5 view .LVU1415
 5116              	.LBB1408:
 5117              		.loc 23 81 7 view .LVU1416
 5118              	.LBB1407:
 5119              	.LBI1402:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5120              		.loc 22 288 7 view .LVU1417
 5121              	.LBB1406:
 5122              	.LBI1403:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 206


 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5123              		.loc 22 390 7 view .LVU1418
 5124              	.LBB1405:
 5125              		.loc 22 397 18 is_stmt 0 view .LVU1419
 5126 00f8 BFF35B8F 		dmb	ish
 5127 00fc 1A70     		strb	r2, [r3]
 5128 00fe BFF35B8F 		dmb	ish
 5129              	.LVL258:
 5130              		.loc 22 397 18 view .LVU1420
 5131              	.LBE1405:
 5132              	.LBE1406:
 5133              	.LBE1407:
 5134              	.LBE1408:
 5135              	.LBE1409:
 5136              	.LBE1411:
 5137              	.LBE1416:
1596:Veno-Echo.cpp **** 
 5138              		.loc 20 1596 1 view .LVU1421
 5139 0102 BDEC028B 		vldm	sp!, {d8}
 5140              		.cfi_remember_state
 5141              		.cfi_restore 80
 5142              		.cfi_restore 81
 5143              		.cfi_def_cfa_offset 8
 5144 0106 10BD     		pop	{r4, pc}
 5145              	.L293:
 5146              		.cfi_restore_state
 5147              	.LBB1417:
 5148              	.LBB1412:
1584:Veno-Echo.cpp ****             {
 5149              		.loc 20 1584 18 is_stmt 1 view .LVU1422
 5150 0108 DFED157A 		vldr.32	s15, .L294+64
 5151 010c B4EEE78A 		vcmpe.f32	s16, s15
 5152 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5153 0114 EBDD     		ble	.L283
1586:Veno-Echo.cpp ****             }
 5154              		.loc 20 1586 17 view .LVU1423
1586:Veno-Echo.cpp ****             }
 5155              		.loc 20 1586 29 is_stmt 0 view .LVU1424
 5156 0116 0F4B     		ldr	r3, .L294+52
 5157 0118 0122     		movs	r2, #1
 5158 011a 1A70     		strb	r2, [r3]
 5159 011c E7E7     		b	.L283
 5160              	.L295:
 5161 011e 00BF     		.align	2
 5162              	.L294:
 5163 0120 18000000 		.word	.LANCHOR4+24
 5164 0124 00000000 		.word	.LANCHOR7
 5165 0128 00000000 		.word	.LANCHOR77
 5166 012c 00000000 		.word	.LANCHOR78
 5167 0130 00000000 		.word	.LANCHOR79
 5168 0134 00000000 		.word	.LANCHOR84
 5169 0138 00000000 		.word	0
 5170 013c 00000000 		.word	.LANCHOR80
 5171 0140 6F12033D 		.word	1023611503
 5172 0144 00000000 		.word	.LANCHOR81
 5173 0148 00000000 		.word	.LANCHOR82
 5174 014c 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 207


 5175 0150 6666E63E 		.word	1055286886
 5176 0154 00000000 		.word	.LANCHOR83
 5177 0158 00000000 		.word	.LANCHOR15
 5178 015c 00000000 		.word	.LANCHOR16
 5179 0160 CDCC0C3F 		.word	1057803469
 5180              	.LBE1412:
 5181              	.LBE1417:
 5182              		.cfi_endproc
 5183              	.LFE4325:
 5185              		.section	.text._Z8GetModCVv,"ax",%progbits
 5186              		.align	1
 5187              		.p2align 2,,3
 5188              		.global	_Z8GetModCVv
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv5-d16
 5194              	_Z8GetModCVv:
 5195              	.LFB4326:
1599:Veno-Echo.cpp ****     //get modulation CV input
 5196              		.loc 20 1599 1 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
1601:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5200              		.loc 20 1601 5 view .LVU1426
1599:Veno-Echo.cpp ****     //get modulation CV input
 5201              		.loc 20 1599 1 is_stmt 0 view .LVU1427
 5202 0000 08B5     		push	{r3, lr}
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 3, -8
 5205              		.cfi_offset 14, -4
1601:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5206              		.loc 20 1601 30 view .LVU1428
 5207 0002 0621     		movs	r1, #6
 5208 0004 0648     		ldr	r0, .L298
 5209 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5210              	.LVL259:
 5211 000a 0020     		movs	r0, #0
 5212 000c 9FED051A 		vldr.32	s2, .L298+4
 5213 0010 DFED050A 		vldr.32	s1, .L298+8
 5214 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5215              	.LVL260:
1601:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5216              		.loc 20 1601 23 view .LVU1429
 5217 0018 044B     		ldr	r3, .L298+12
 5218 001a 83ED000A 		vstr.32	s0, [r3]
1603:Veno-Echo.cpp **** 
 5219              		.loc 20 1603 1 view .LVU1430
 5220 001e 08BD     		pop	{r3, pc}
 5221              	.L299:
 5222              		.align	2
 5223              	.L298:
 5224 0020 18000000 		.word	.LANCHOR4+24
 5225 0024 00004843 		.word	1128792064
 5226 0028 000048C3 		.word	3276275712
 5227 002c 00000000 		.word	.LANCHOR85
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 208


 5228              		.cfi_endproc
 5229              	.LFE4326:
 5231              		.section	.text._Z10Update_Modv,"ax",%progbits
 5232              		.align	1
 5233              		.p2align 2,,3
 5234              		.global	_Z10Update_Modv
 5235              		.syntax unified
 5236              		.thumb
 5237              		.thumb_func
 5238              		.fpu fpv5-d16
 5240              	_Z10Update_Modv:
 5241              	.LFB4327:
1606:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5242              		.loc 20 1606 1 is_stmt 1 view -0
 5243              		.cfi_startproc
 5244              		@ args = 0, pretend = 0, frame = 0
 5245              		@ frame_needed = 0, uses_anonymous_args = 0
1607:Veno-Echo.cpp ****     static float modulation_CV{};
 5246              		.loc 20 1607 5 view .LVU1432
1608:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5247              		.loc 20 1608 5 view .LVU1433
1609:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5248              		.loc 20 1609 5 view .LVU1434
 5249              	.LVL261:
 5250              	.LBB1418:
 5251              	.LBI1418:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5252              		.loc 25 135 13 view .LVU1435
 5253              	.LBB1419:
 5254              		.loc 25 137 5 view .LVU1436
 5255              	.LBE1419:
 5256              	.LBE1418:
1606:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5257              		.loc 20 1606 1 is_stmt 0 view .LVU1437
 5258 0000 38B5     		push	{r3, r4, r5, lr}
 5259              		.cfi_def_cfa_offset 16
 5260              		.cfi_offset 3, -16
 5261              		.cfi_offset 4, -12
 5262              		.cfi_offset 5, -8
 5263              		.cfi_offset 14, -4
1609:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5264              		.loc 20 1609 13 view .LVU1438
 5265 0002 154A     		ldr	r2, .L302
 5266              	.LBB1426:
 5267              	.LBB1420:
 5268              		.loc 25 137 9 view .LVU1439
 5269 0004 154C     		ldr	r4, .L302+4
 5270              	.LBE1420:
 5271              	.LBE1426:
 5272              	.LBB1427:
 5273              	.LBB1428:
 5274 0006 164D     		ldr	r5, .L302+8
 5275              	.LBE1428:
 5276              	.LBE1427:
1610:Veno-Echo.cpp ****     //calculate InternalMod
 5277              		.loc 20 1610 13 view .LVU1440
 5278 0008 164B     		ldr	r3, .L302+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 209


 5279              	.LBB1434:
 5280              	.LBB1421:
 5281              		.loc 25 137 9 view .LVU1441
 5282 000a 94ED007A 		vldr.32	s14, [r4]
 5283              	.LBE1421:
 5284              	.LBE1434:
 5285              	.LBB1435:
 5286              	.LBB1429:
 5287 000e D5ED007A 		vldr.32	s15, [r5]
 5288              	.LBE1429:
 5289              	.LBE1435:
 5290              	.LBB1436:
 5291              	.LBB1422:
 5292              		.loc 25 137 24 view .LVU1442
 5293 0012 92ED006A 		vldr.32	s12, [r2]
 5294              	.LBE1422:
 5295              	.LBE1436:
 5296              	.LBB1437:
 5297              	.LBB1430:
 5298 0016 D3ED006A 		vldr.32	s13, [r3]
 5299              	.LBE1430:
 5300              	.LBE1437:
 5301              	.LBB1438:
 5302              	.LBB1423:
 5303 001a 36EE476A 		vsub.f32	s12, s12, s14
 5304              		.loc 25 137 9 view .LVU1443
 5305 001e DFED125A 		vldr.32	s11, .L302+16
 5306              	.LBE1423:
 5307              	.LBE1438:
 5308              	.LBB1439:
 5309              	.LBB1431:
 5310              		.loc 25 137 24 view .LVU1444
 5311 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5312              	.LBE1431:
 5313              	.LBE1439:
1612:Veno-Echo.cpp ****     //apply modulation to delay lines
 5314              		.loc 20 1612 34 view .LVU1445
 5315 0026 1148     		ldr	r0, .L302+20
 5316              	.LBB1440:
 5317              	.LBB1424:
 5318              		.loc 25 137 9 view .LVU1446
 5319 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5320              	.LBE1424:
 5321              	.LBE1440:
 5322              	.LBB1441:
 5323              	.LBB1432:
 5324 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5325              	.LBE1432:
 5326              	.LBE1441:
 5327              	.LBB1442:
 5328              	.LBB1425:
 5329 0030 84ED007A 		vstr.32	s14, [r4]
 5330              	.LVL262:
 5331              		.loc 25 137 9 view .LVU1447
 5332              	.LBE1425:
 5333              	.LBE1442:
1610:Veno-Echo.cpp ****     //calculate InternalMod
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 210


 5334              		.loc 20 1610 5 is_stmt 1 view .LVU1448
 5335              	.LBB1443:
 5336              	.LBI1427:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5337              		.loc 25 135 13 view .LVU1449
 5338              	.LBB1433:
 5339              		.loc 25 137 5 view .LVU1450
 5340              		.loc 25 137 9 is_stmt 0 view .LVU1451
 5341 0034 C5ED007A 		vstr.32	s15, [r5]
 5342              	.LVL263:
 5343              		.loc 25 137 9 view .LVU1452
 5344              	.LBE1433:
 5345              	.LBE1443:
1612:Veno-Echo.cpp ****     //apply modulation to delay lines
 5346              		.loc 20 1612 5 is_stmt 1 view .LVU1453
1612:Veno-Echo.cpp ****     //apply modulation to delay lines
 5347              		.loc 20 1612 34 is_stmt 0 view .LVU1454
 5348 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5349              	.LVL264:
1614:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5350              		.loc 20 1614 5 is_stmt 1 view .LVU1455
1614:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5351              		.loc 20 1614 40 is_stmt 0 view .LVU1456
 5352 003c 95ED007A 		vldr.32	s14, [r5]
 5353 0040 D4ED007A 		vldr.32	s15, [r4]
 5354              	.LBB1444:
 5355              	.LBB1445:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5356              		.loc 17 69 43 view .LVU1457
 5357 0044 0A4A     		ldr	r2, .L302+24
 5358              	.LBE1445:
 5359              	.LBE1444:
1614:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5360              		.loc 20 1614 40 view .LVU1458
 5361 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5362              	.LBB1448:
 5363              	.LBI1444:
 5364              		.loc 17 69 6 is_stmt 1 view .LVU1459
 5365              	.LVL265:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 211


 5366              	.LBB1446:
 5367              		.loc 17 69 38 view .LVU1460
 5368              	.LBE1446:
 5369              	.LBE1448:
 5370              	.LBB1449:
 5371              	.LBB1450:
 5372              		.loc 17 69 43 is_stmt 0 view .LVU1461
 5373 004a 0A4B     		ldr	r3, .L302+28
 5374              	.LBE1450:
 5375              	.LBE1449:
 5376              	.LBB1452:
 5377              	.LBB1447:
 5378 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5379              	.LBE1447:
 5380              	.LBE1452:
1615:Veno-Echo.cpp **** }
 5381              		.loc 20 1615 5 is_stmt 1 view .LVU1462
 5382              	.LVL266:
 5383              	.LBB1453:
 5384              	.LBI1449:
 5385              		.loc 17 69 6 view .LVU1463
 5386              	.LBB1451:
 5387              		.loc 17 69 38 view .LVU1464
 5388              		.loc 17 69 43 is_stmt 0 view .LVU1465
 5389 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5390              	.LBE1451:
 5391              	.LBE1453:
1616:Veno-Echo.cpp **** 
 5392              		.loc 20 1616 1 view .LVU1466
 5393 0054 38BD     		pop	{r3, r4, r5, pc}
 5394              	.L303:
 5395 0056 00BF     		.align	2
 5396              	.L302:
 5397 0058 00000000 		.word	.LANCHOR85
 5398 005c 00000000 		.word	.LANCHOR86
 5399 0060 00000000 		.word	.LANCHOR87
 5400 0064 00000000 		.word	.LANCHOR68
 5401 0068 0AD7233C 		.word	1008981770
 5402 006c 00000000 		.word	.LANCHOR76
 5403 0070 00000000 		.word	.LANCHOR0
 5404 0074 00000000 		.word	.LANCHOR1
 5405              		.cfi_endproc
 5406              	.LFE4327:
 5408              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5409              		.align	1
 5410              		.p2align 2,,3
 5411              		.global	_Z11UpdateClockv
 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5415              		.fpu fpv5-d16
 5417              	_Z11UpdateClockv:
 5418              	.LFB4328:
1619:Veno-Echo.cpp ****     static int divCounter{};
 5419              		.loc 20 1619 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 212


 5422              		@ frame_needed = 0, uses_anonymous_args = 0
1620:Veno-Echo.cpp ****     ClockIn.Debounce();
 5423              		.loc 20 1620 5 view .LVU1468
1621:Veno-Echo.cpp **** 
 5424              		.loc 20 1621 5 view .LVU1469
1619:Veno-Echo.cpp ****     static int divCounter{};
 5425              		.loc 20 1619 1 is_stmt 0 view .LVU1470
 5426 0000 10B5     		push	{r4, lr}
 5427              		.cfi_def_cfa_offset 8
 5428              		.cfi_offset 4, -8
 5429              		.cfi_offset 14, -4
1621:Veno-Echo.cpp **** 
 5430              		.loc 20 1621 21 view .LVU1471
 5431 0002 104C     		ldr	r4, .L313
 5432 0004 2046     		mov	r0, r4
 5433 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5434              	.LVL267:
1624:Veno-Echo.cpp ****     {   
 5435              		.loc 20 1624 5 is_stmt 1 view .LVU1472
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 5436              		.loc 1 69 38 view .LVU1473
1624:Veno-Echo.cpp ****     {   
 5437              		.loc 20 1624 5 is_stmt 0 view .LVU1474
 5438 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5439 000c 7F2B     		cmp	r3, #127
 5440 000e 00D0     		beq	.L312
 5441              	.L304:
1639:Veno-Echo.cpp **** 
 5442              		.loc 20 1639 1 view .LVU1475
 5443 0010 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 213


 5444              	.L312:
1626:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5445              		.loc 20 1626 9 is_stmt 1 view .LVU1476
1628:Veno-Echo.cpp ****         {
 5446              		.loc 20 1628 9 view .LVU1477
1630:Veno-Echo.cpp ****             {
 5447              		.loc 20 1630 13 view .LVU1478
1630:Veno-Echo.cpp ****             {
 5448              		.loc 20 1630 29 is_stmt 0 view .LVU1479
 5449 0012 0D48     		ldr	r0, .L313+4
 5450 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5451              	.LVL268:
1630:Veno-Echo.cpp ****             {
 5452              		.loc 20 1630 13 view .LVU1480
 5453 0018 0028     		cmp	r0, #0
 5454 001a F9D0     		beq	.L304
 5455              	.LBB1463:
 5456              	.LBI1463:
1618:Veno-Echo.cpp **** {
 5457              		.loc 20 1618 6 is_stmt 1 view .LVU1481
 5458              	.LBB1464:
1632:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5459              		.loc 20 1632 17 view .LVU1482
1632:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5460              		.loc 20 1632 39 is_stmt 0 view .LVU1483
 5461 001c 0A48     		ldr	r0, .L313+4
 5462 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5463              	.LVL269:
 5464 0022 0A48     		ldr	r0, .L313+8
 5465 0024 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5466              	.LVL270:
1633:Veno-Echo.cpp ****                 save_flag = true;
 5467              		.loc 20 1633 17 is_stmt 1 view .LVU1484
1633:Veno-Echo.cpp ****                 save_flag = true;
 5468              		.loc 20 1633 63 is_stmt 0 view .LVU1485
 5469 0028 0748     		ldr	r0, .L313+4
 5470 002a FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5471              	.LVL271:
1633:Veno-Echo.cpp ****                 save_flag = true;
 5472              		.loc 20 1633 39 view .LVU1486
 5473 002e 0849     		ldr	r1, .L313+12
 5474              	.LBB1465:
 5475              	.LBB1466:
 5476              	.LBB1467:
 5477              	.LBB1468:
 5478              		.loc 22 397 18 view .LVU1487
 5479 0030 0122     		movs	r2, #1
 5480 0032 084B     		ldr	r3, .L313+16
 5481              	.LBE1468:
 5482              	.LBE1467:
 5483              	.LBE1466:
 5484              	.LBE1465:
1633:Veno-Echo.cpp ****                 save_flag = true;
 5485              		.loc 20 1633 39 view .LVU1488
 5486 0034 81ED080A 		vstr.32	s0, [r1, #32]
1634:Veno-Echo.cpp ****             }
 5487              		.loc 20 1634 17 is_stmt 1 view .LVU1489
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 214


 5488              	.LVL272:
 5489              	.LBB1472:
 5490              	.LBI1465:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5491              		.loc 23 80 5 view .LVU1490
 5492              	.LBE1472:
 5493              	.LBE1464:
 5494              	.LBE1463:
 5495              		.loc 23 81 7 view .LVU1491
 5496              	.LBB1475:
 5497              	.LBB1474:
 5498              	.LBB1473:
 5499              	.LBB1471:
 5500              	.LBI1466:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5501              		.loc 22 288 7 view .LVU1492
 5502              	.LBB1470:
 5503              	.LBI1467:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5504              		.loc 22 390 7 view .LVU1493
 5505              	.LBB1469:
 5506              		.loc 22 397 18 is_stmt 0 view .LVU1494
 5507 0038 BFF35B8F 		dmb	ish
 5508 003c 1A70     		strb	r2, [r3]
 5509 003e BFF35B8F 		dmb	ish
 5510              	.LVL273:
 5511              		.loc 22 397 18 view .LVU1495
 5512              	.LBE1469:
 5513              	.LBE1470:
 5514              	.LBE1471:
 5515              	.LBE1473:
 5516              	.LBE1474:
 5517              	.LBE1475:
1639:Veno-Echo.cpp **** 
 5518              		.loc 20 1639 1 view .LVU1496
 5519 0042 10BD     		pop	{r4, pc}
 5520              	.L314:
 5521              		.align	2
 5522              	.L313:
 5523 0044 00000000 		.word	.LANCHOR88
 5524 0048 00000000 		.word	.LANCHOR26
 5525 004c 00000000 		.word	.LANCHOR89
 5526 0050 00000000 		.word	.LANCHOR15
 5527 0054 00000000 		.word	.LANCHOR16
 5528              		.cfi_endproc
 5529              	.LFE4328:
 5531              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5532              		.align	1
 5533              		.p2align 2,,3
 5534              		.global	_Z21Update_DelayBaseTempov
 5535              		.syntax unified
 5536              		.thumb
 5537              		.thumb_func
 5538              		.fpu fpv5-d16
 5540              	_Z21Update_DelayBaseTempov:
 5541              	.LFB4330:
1792:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 215


 5542              		.loc 20 1792 1 is_stmt 1 view -0
 5543              		.cfi_startproc
 5544              		@ args = 0, pretend = 0, frame = 0
 5545              		@ frame_needed = 0, uses_anonymous_args = 0
1793:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5546              		.loc 20 1793 5 view .LVU1498
1792:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5547              		.loc 20 1792 1 is_stmt 0 view .LVU1499
 5548 0000 08B5     		push	{r3, lr}
 5549              		.cfi_def_cfa_offset 8
 5550              		.cfi_offset 3, -8
 5551              		.cfi_offset 14, -4
1793:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5552              		.loc 20 1793 49 view .LVU1500
 5553 0002 0648     		ldr	r0, .L317
 5554 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5555              	.LVL274:
 5556              	.LBB1476:
 5557              	.LBI1476:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5558              		.loc 17 71 6 is_stmt 1 view .LVU1501
 5559              	.LBB1477:
 5560              		.loc 17 71 39 view .LVU1502
 5561              		.loc 17 71 50 is_stmt 0 view .LVU1503
 5562 0008 054B     		ldr	r3, .L317+4
 5563              	.LBE1477:
 5564              	.LBE1476:
1794:Veno-Echo.cpp **** }
 5565              		.loc 20 1794 49 view .LVU1504
 5566 000a 0448     		ldr	r0, .L317
 5567              	.LBB1479:
 5568              	.LBB1478:
 5569              		.loc 17 71 50 view .LVU1505
 5570 000c 83ED480A 		vstr.32	s0, [r3, #288]
 5571              	.LBE1478:
 5572              	.LBE1479:
1794:Veno-Echo.cpp **** }
 5573              		.loc 20 1794 5 is_stmt 1 view .LVU1506
1794:Veno-Echo.cpp **** }
 5574              		.loc 20 1794 49 is_stmt 0 view .LVU1507
 5575 0010 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5576              	.LVL275:
 5577              	.LBB1480:
 5578              	.LBI1480:
 5579              		.loc 17 71 6 is_stmt 1 view .LVU1508
 5580              	.LBB1481:
 5581              		.loc 17 71 39 view .LVU1509
 5582              		.loc 17 71 50 is_stmt 0 view .LVU1510
 5583 0014 034B     		ldr	r3, .L317+8
 5584 0016 83ED480A 		vstr.32	s0, [r3, #288]
 5585              	.LBE1481:
 5586              	.LBE1480:
1795:Veno-Echo.cpp **** 
 5587              		.loc 20 1795 1 view .LVU1511
 5588 001a 08BD     		pop	{r3, pc}
 5589              	.L318:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 216


 5590              		.align	2
 5591              	.L317:
 5592 001c 00000000 		.word	.LANCHOR26
 5593 0020 00000000 		.word	.LANCHOR0
 5594 0024 00000000 		.word	.LANCHOR1
 5595              		.cfi_endproc
 5596              	.LFE4330:
 5598              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5599              		.align	1
 5600              		.p2align 2,,3
 5601              		.global	_Z21Update_DelayTempoLEDsv
 5602              		.syntax unified
 5603              		.thumb
 5604              		.thumb_func
 5605              		.fpu fpv5-d16
 5607              	_Z21Update_DelayTempoLEDsv:
 5608              	.LFB4331:
1798:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5609              		.loc 20 1798 1 is_stmt 1 view -0
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 0
 5612              		@ frame_needed = 0, uses_anonymous_args = 0
1799:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5613              		.loc 20 1799 5 view .LVU1513
1798:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5614              		.loc 20 1798 1 is_stmt 0 view .LVU1514
 5615 0000 10B5     		push	{r4, lr}
 5616              		.cfi_def_cfa_offset 8
 5617              		.cfi_offset 4, -8
 5618              		.cfi_offset 14, -4
1799:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5619              		.loc 20 1799 26 view .LVU1515
 5620 0002 054C     		ldr	r4, .L321
 5621 0004 0548     		ldr	r0, .L321+4
 5622 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5623 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5624              	.LVL276:
1800:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5625              		.loc 20 1800 5 is_stmt 1 view .LVU1516
1800:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5626              		.loc 20 1800 26 is_stmt 0 view .LVU1517
 5627 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5628 000e 0448     		ldr	r0, .L321+8
1804:Veno-Echo.cpp **** 
 5629              		.loc 20 1804 1 view .LVU1518
 5630 0010 BDE81040 		pop	{r4, lr}
 5631              		.cfi_restore 14
 5632              		.cfi_restore 4
 5633              		.cfi_def_cfa_offset 0
1800:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5634              		.loc 20 1800 26 view .LVU1519
 5635 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5636              	.LVL277:
 5637              	.L322:
 5638              		.align	2
 5639              	.L321:
 5640 0018 00000000 		.word	.LANCHOR12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 217


 5641 001c 00000000 		.word	.LANCHOR0
 5642 0020 00000000 		.word	.LANCHOR1
 5643              		.cfi_endproc
 5644              	.LFE4331:
 5646              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5647              		.align	1
 5648              		.p2align 2,,3
 5649              		.global	_Z19Update_BaseTempoLEDv
 5650              		.syntax unified
 5651              		.thumb
 5652              		.thumb_func
 5653              		.fpu fpv5-d16
 5655              	_Z19Update_BaseTempoLEDv:
 5656              	.LFB4332:
1807:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5657              		.loc 20 1807 1 is_stmt 1 view -0
 5658              		.cfi_startproc
 5659              		@ args = 0, pretend = 0, frame = 0
 5660              		@ frame_needed = 0, uses_anonymous_args = 0
1808:Veno-Echo.cpp **** 
 5661              		.loc 20 1808 5 view .LVU1521
1808:Veno-Echo.cpp **** 
 5662              		.loc 20 1808 25 is_stmt 0 view .LVU1522
 5663 0000 1848     		ldr	r0, .L327
1807:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5664              		.loc 20 1807 1 view .LVU1523
 5665 0002 08B5     		push	{r3, lr}
 5666              		.cfi_def_cfa_offset 8
 5667              		.cfi_offset 3, -8
 5668              		.cfi_offset 14, -4
1808:Veno-Echo.cpp **** 
 5669              		.loc 20 1808 25 view .LVU1524
 5670 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5671              	.LVL278:
1810:Veno-Echo.cpp **** 
 5672              		.loc 20 1810 5 is_stmt 1 view .LVU1525
1812:Veno-Echo.cpp ****     {
 5673              		.loc 20 1812 5 view .LVU1526
1812:Veno-Echo.cpp ****     {
 5674              		.loc 20 1812 27 is_stmt 0 view .LVU1527
 5675 0008 1648     		ldr	r0, .L327
 5676 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5677              	.LVL279:
1812:Veno-Echo.cpp ****     {
 5678              		.loc 20 1812 5 view .LVU1528
 5679 000e D0B9     		cbnz	r0, .L324
 5680 0010 154B     		ldr	r3, .L327+4
 5681 0012 1B68     		ldr	r3, [r3]
 5682              	.L325:
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5683              		.loc 20 1817 5 is_stmt 1 view .LVU1529
 5684              	.LVL280:
 5685              	.LBB1482:
 5686              	.LBI1482:
  71:LEDs.h        **** 
 5687              		.loc 14 71 7 view .LVU1530
 5688              	.LBB1483:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 218


  71:LEDs.h        **** 
 5689              		.loc 14 71 20 view .LVU1531
  71:LEDs.h        **** 
 5690              		.loc 14 71 20 is_stmt 0 view .LVU1532
 5691              	.LBE1483:
 5692              	.LBE1482:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 219


  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5693              		.loc 15 92 31 is_stmt 1 view .LVU1533
 5694              	.LBB1485:
 5695              	.LBB1484:
  71:LEDs.h        **** 
 5696              		.loc 14 71 41 is_stmt 0 view .LVU1534
 5697 0014 134A     		ldr	r2, .L327
 5698              	.LBE1484:
 5699              	.LBE1485:
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5700              		.loc 20 1817 50 view .LVU1535
 5701 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5702              		.loc 20 1817 73 view .LVU1536
 5703 001a 07EE903A 		vmov	s15, r3	@ int
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5704              		.loc 20 1817 55 view .LVU1537
 5705 001e DFED136A 		vldr.32	s13, .L327+8
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5706              		.loc 20 1817 50 view .LVU1538
 5707 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5708              		.loc 20 1817 73 view .LVU1539
 5709 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5710              	.LBB1486:
 5711              	.LBB1487:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5712              		.loc 17 72 54 view .LVU1540
 5713 002a 1149     		ldr	r1, .L327+12
 5714              	.LBE1487:
 5715              	.LBE1486:
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5716              		.loc 20 1817 50 view .LVU1541
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 220


 5717 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5718              	.LBB1489:
 5719              	.LBB1490:
 5720              		.loc 17 72 54 view .LVU1542
 5721 0030 104A     		ldr	r2, .L327+16
 5722              	.LBE1490:
 5723              	.LBE1489:
1821:Veno-Echo.cpp **** }
 5724              		.loc 20 1821 17 view .LVU1543
 5725 0032 114B     		ldr	r3, .L327+20
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5726              		.loc 20 1817 55 view .LVU1544
 5727 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5728              	.LVL281:
1819:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5729              		.loc 20 1819 5 is_stmt 1 view .LVU1545
 5730              	.LBB1492:
 5731              	.LBI1486:
 5732              		.loc 17 72 6 view .LVU1546
 5733              	.LBB1488:
 5734              		.loc 17 72 43 view .LVU1547
 5735              		.loc 17 72 54 is_stmt 0 view .LVU1548
 5736 0038 81ED477A 		vstr.32	s14, [r1, #284]
 5737              	.LBE1488:
 5738              	.LBE1492:
1820:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5739              		.loc 20 1820 5 is_stmt 1 view .LVU1549
 5740              	.LVL282:
 5741              	.LBB1493:
 5742              	.LBI1489:
 5743              		.loc 17 72 6 view .LVU1550
 5744              	.LBB1491:
 5745              		.loc 17 72 43 view .LVU1551
 5746              		.loc 17 72 54 is_stmt 0 view .LVU1552
 5747 003c 82ED477A 		vstr.32	s14, [r2, #284]
 5748              	.LBE1491:
 5749              	.LBE1493:
1821:Veno-Echo.cpp **** }
 5750              		.loc 20 1821 5 is_stmt 1 view .LVU1553
1821:Veno-Echo.cpp **** }
 5751              		.loc 20 1821 17 is_stmt 0 view .LVU1554
 5752 0040 83ED007A 		vstr.32	s14, [r3]
 5753              	.LVL283:
1822:Veno-Echo.cpp **** 
 5754              		.loc 20 1822 1 view .LVU1555
 5755 0044 08BD     		pop	{r3, pc}
 5756              	.LVL284:
 5757              	.L324:
1814:Veno-Echo.cpp ****     }
 5758              		.loc 20 1814 9 is_stmt 1 view .LVU1556
1814:Veno-Echo.cpp ****     }
 5759              		.loc 20 1814 38 is_stmt 0 view .LVU1557
 5760 0046 0849     		ldr	r1, .L327+4
1814:Veno-Echo.cpp ****     }
 5761              		.loc 20 1814 43 view .LVU1558
 5762 0048 0C4B     		ldr	r3, .L327+24
1814:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 221


 5763              		.loc 20 1814 38 view .LVU1559
 5764 004a 0A68     		ldr	r2, [r1]
 5765 004c 0132     		adds	r2, r2, #1
1814:Veno-Echo.cpp ****     }
 5766              		.loc 20 1814 43 view .LVU1560
 5767 004e 83FB0203 		smull	r0, r3, r3, r2
 5768 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5769 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5770 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1814:Veno-Echo.cpp ****     }
 5771              		.loc 20 1814 22 view .LVU1561
 5772 005e 0B60     		str	r3, [r1]
 5773 0060 D8E7     		b	.L325
 5774              	.L328:
 5775 0062 00BF     		.align	2
 5776              	.L327:
 5777 0064 00000000 		.word	.LANCHOR89
 5778 0068 00000000 		.word	.LANCHOR90
 5779 006c 920A863F 		.word	1065749138
 5780 0070 00000000 		.word	.LANCHOR0
 5781 0074 00000000 		.word	.LANCHOR1
 5782 0078 00000000 		.word	.LANCHOR91
 5783 007c ABAAAA2A 		.word	715827883
 5784              		.cfi_endproc
 5785              	.LFE4332:
 5787              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5788              		.align	1
 5789              		.p2align 2,,3
 5790              		.global	_Z13ApplySettingsRK8Settings
 5791              		.syntax unified
 5792              		.thumb
 5793              		.thumb_func
 5794              		.fpu fpv5-d16
 5796              	_Z13ApplySettingsRK8Settings:
 5797              	.LVL285:
 5798              	.LFB4333:
1826:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5799              		.loc 20 1826 1 is_stmt 1 view -0
 5800              		.cfi_startproc
 5801              		@ args = 0, pretend = 0, frame = 0
 5802              		@ frame_needed = 0, uses_anonymous_args = 0
1827:Veno-Echo.cpp ****     {
 5803              		.loc 20 1827 5 view .LVU1563
 5804 0000 9FEDDA7A 		vldr.32	s14, .L414
1827:Veno-Echo.cpp ****     {
 5805              		.loc 20 1827 17 is_stmt 0 view .LVU1564
 5806 0004 D0ED007A 		vldr.32	s15, [r0]
1827:Veno-Echo.cpp ****     {
 5807              		.loc 20 1827 5 view .LVU1565
 5808 0008 F4EEC77A 		vcmpe.f32	s15, s14
1826:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5809              		.loc 20 1826 1 view .LVU1566
 5810 000c 38B5     		push	{r3, r4, r5, lr}
 5811              		.cfi_def_cfa_offset 16
 5812              		.cfi_offset 3, -16
 5813              		.cfi_offset 4, -12
 5814              		.cfi_offset 5, -8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 222


 5815              		.cfi_offset 14, -4
1827:Veno-Echo.cpp ****     {
 5816              		.loc 20 1827 5 view .LVU1567
 5817 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1826:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5818              		.loc 20 1826 1 view .LVU1568
 5819 0012 0446     		mov	r4, r0
 5820              	.LBB1494:
 5821              	.LBB1495:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5822              		.loc 20 70 28 view .LVU1569
 5823 0014 D64B     		ldr	r3, .L414+4
 5824              	.LBE1495:
 5825              	.LBE1494:
1827:Veno-Echo.cpp ****     {
 5826              		.loc 20 1827 5 view .LVU1570
 5827 0016 C0F23281 		blt	.L330
1827:Veno-Echo.cpp ****     {
 5828              		.loc 20 1827 43 discriminator 1 view .LVU1571
 5829 001a 9FEDD67A 		vldr.32	s14, .L414+8
 5830 001e F4EEC77A 		vcmpe.f32	s15, s14
 5831 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5832 0026 00F22A81 		bhi	.L330
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5833              		.loc 20 1829 9 is_stmt 1 view .LVU1572
 5834              	.LVL286:
 5835              	.LBB1509:
 5836              	.LBI1494:
  68:Veno-Echo.cpp ****     {
 5837              		.loc 20 68 10 view .LVU1573
 5838              	.LBB1507:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5839              		.loc 20 70 9 view .LVU1574
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5840              		.loc 20 70 28 is_stmt 0 view .LVU1575
 5841 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5842              	.LVL287:
 5843              	.LBB1496:
 5844              	.LBI1496:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5845              		.loc 21 75 3 is_stmt 1 view .LVU1576
 5846              	.LBB1497:
 5847              		.loc 21 76 5 view .LVU1577
 5848              		.loc 21 76 5 is_stmt 0 view .LVU1578
 5849              	.LBE1497:
 5850              	.LBE1496:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5851              		.loc 20 70 53 view .LVU1579
 5852 002e 9FEDD26A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5853              		.loc 20 70 15 view .LVU1580
 5854 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5855              		.loc 20 70 53 view .LVU1581
 5856 0036 27EE067A 		vmul.f32	s14, s14, s12
 5857              	.LBB1499:
 5858              	.LBB1498:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 223


 5859              		.loc 21 76 31 view .LVU1582
 5860 003a F0EEE66A 		vabs.f32	s13, s13
 5861              	.LBE1498:
 5862              	.LBE1499:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5863              		.loc 20 70 9 view .LVU1583
 5864 003e F4EEC76A 		vcmpe.f32	s13, s14
 5865 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5866 0046 0FDD     		ble	.L333
  74:Veno-Echo.cpp ****             //del -> Reset();
 5867              		.loc 20 74 29 view .LVU1584
 5868 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5869              	.LBB1500:
 5870              	.LBB1501:
 5871              		.loc 19 72 9 view .LVU1585
 5872 004c CB4D     		ldr	r5, .L414+16
 5873              	.LBE1501:
 5874              	.LBE1500:
 5875              	.LBE1507:
 5876              	.LBE1509:
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5877              		.loc 20 1829 33 view .LVU1586
 5878 004e 1968     		ldr	r1, [r3]
 5879              	.LBB1510:
 5880              	.LBB1508:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5881              		.loc 20 73 13 is_stmt 1 view .LVU1587
 5882              	.LBB1504:
 5883              	.LBB1502:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5884              		.loc 19 71 9 is_stmt 0 view .LVU1588
 5885 0050 0020     		movs	r0, #0
 5886              	.LVL288:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5887              		.loc 19 71 9 view .LVU1589
 5888              	.LBE1502:
 5889              	.LBE1504:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5890              		.loc 20 73 27 view .LVU1590
 5891 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5892              		.loc 20 74 13 is_stmt 1 view .LVU1591
 5893              	.LVL289:
 5894              	.LBB1505:
 5895              	.LBI1500:
  69:delayline_reverse.h ****     {
 5896              		.loc 19 69 17 view .LVU1592
  69:delayline_reverse.h ****     {
 5897              		.loc 19 69 17 is_stmt 0 view .LVU1593
 5898              	.LBE1505:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5899              		.loc 20 74 29 view .LVU1594
 5900 0056 17EE102A 		vmov	r2, s14	@ int
 5901              	.LBB1506:
 5902              	.LBB1503:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5903              		.loc 19 71 9 view .LVU1595
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 224


 5904 005a 0860     		str	r0, [r1]	@ float
 5905 005c D4ED007A 		vldr.32	s15, [r4]
 5906              	.LVL290:
 5907              		.loc 19 72 9 view .LVU1596
 5908 0060 AA42     		cmp	r2, r5
 5909 0062 28BF     		it	cs
 5910 0064 2A46     		movcs	r2, r5
 5911 0066 0A61     		str	r2, [r1, #16]
 5912              	.LVL291:
 5913              	.L333:
 5914              		.loc 19 72 9 view .LVU1597
 5915              	.LBE1503:
 5916              	.LBE1506:
 5917              	.LBE1508:
 5918              	.LBE1510:
1830:Veno-Echo.cpp ****     }
 5919              		.loc 20 1830 9 is_stmt 1 view .LVU1598
 5920              	.LBB1511:
 5921              	.LBI1511:
  68:Veno-Echo.cpp ****     {
 5922              		.loc 20 68 10 view .LVU1599
 5923              	.LBB1512:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5924              		.loc 20 70 9 view .LVU1600
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5925              		.loc 20 70 28 is_stmt 0 view .LVU1601
 5926 0068 C54B     		ldr	r3, .L414+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5927              		.loc 20 70 53 view .LVU1602
 5928 006a 9FEDC36A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5929              		.loc 20 70 28 view .LVU1603
 5930 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5931              	.LVL292:
 5932              	.LBB1513:
 5933              	.LBI1513:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5934              		.loc 21 75 3 is_stmt 1 view .LVU1604
 5935              	.LBB1514:
 5936              		.loc 21 76 5 view .LVU1605
 5937              		.loc 21 76 5 is_stmt 0 view .LVU1606
 5938              	.LBE1514:
 5939              	.LBE1513:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5940              		.loc 20 70 15 view .LVU1607
 5941 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5942              		.loc 20 70 53 view .LVU1608
 5943 0076 27EE067A 		vmul.f32	s14, s14, s12
 5944              	.LBB1516:
 5945              	.LBB1515:
 5946              		.loc 21 76 31 view .LVU1609
 5947 007a F0EEE66A 		vabs.f32	s13, s13
 5948              	.LBE1515:
 5949              	.LBE1516:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5950              		.loc 20 70 9 view .LVU1610
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 225


 5951 007e F4EEC76A 		vcmpe.f32	s13, s14
 5952 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5953 0086 00F3D381 		bgt	.L409
 5954              	.LVL293:
 5955              	.L336:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5956              		.loc 20 70 9 view .LVU1611
 5957              	.LBE1512:
 5958              	.LBE1511:
1838:Veno-Echo.cpp ****     {
 5959              		.loc 20 1838 5 is_stmt 1 view .LVU1612
 5960 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1838:Veno-Echo.cpp ****     {
 5961              		.loc 20 1838 17 is_stmt 0 view .LVU1613
 5962 008e 94ED010A 		vldr.32	s0, [r4, #4]
1838:Veno-Echo.cpp ****     {
 5963              		.loc 20 1838 5 view .LVU1614
 5964 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5965 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5966 009a 06DB     		blt	.L341
1838:Veno-Echo.cpp ****     {
 5967              		.loc 20 1838 35 discriminator 1 view .LVU1615
 5968 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5969 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5970 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5971 00a8 01D9     		bls	.L406
 5972              	.L341:
1844:Veno-Echo.cpp ****     }
 5973              		.loc 20 1844 9 is_stmt 1 view .LVU1616
1844:Veno-Echo.cpp ****     }
 5974              		.loc 20 1844 30 is_stmt 0 view .LVU1617
 5975 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5976              	.L406:
 5977 00ae B548     		ldr	r0, .L414+24
 5978 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5979              	.LVL294:
1847:Veno-Echo.cpp ****     {
 5980              		.loc 20 1847 5 is_stmt 1 view .LVU1618
1847:Veno-Echo.cpp ****     {
 5981              		.loc 20 1847 17 is_stmt 0 view .LVU1619
 5982 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1847:Veno-Echo.cpp ****     {
 5983              		.loc 20 1847 5 view .LVU1620
 5984 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5985 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5986 00c0 C0F2B381 		blt	.L401
1847:Veno-Echo.cpp ****     {
 5987              		.loc 20 1847 42 discriminator 1 view .LVU1621
 5988 00c4 DFEDB06A 		vldr.32	s13, .L414+28
1853:Veno-Echo.cpp ****     }
 5989              		.loc 20 1853 18 discriminator 1 view .LVU1622
 5990 00c8 9FEDB07A 		vldr.32	s14, .L414+32
 5991 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5992 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5993 00d4 88BF     		it	hi
 5994 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5995              	.L345:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 226


1856:Veno-Echo.cpp ****     {
 5996              		.loc 20 1856 17 view .LVU1623
 5997 00da 94ED030A 		vldr.32	s0, [r4, #12]
1856:Veno-Echo.cpp ****     {
 5998              		.loc 20 1856 5 view .LVU1624
 5999 00de 9FEDAC7A 		vldr.32	s14, .L414+36
 6000 00e2 AC4B     		ldr	r3, .L414+40
 6001 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6002              	.LBB1527:
 6003              	.LBB1528:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6004              		.loc 8 60 20 view .LVU1625
 6005 00e8 AB4D     		ldr	r5, .L414+44
 6006 00ea C3ED007A 		vstr.32	s15, [r3]
 6007              	.LBE1528:
 6008              	.LBE1527:
1856:Veno-Echo.cpp ****     {
 6009              		.loc 20 1856 5 is_stmt 1 view .LVU1626
 6010 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6011 00f2 06DB     		blt	.L348
1856:Veno-Echo.cpp ****     {
 6012              		.loc 20 1856 40 is_stmt 0 discriminator 1 view .LVU1627
 6013 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6014 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6015 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6016 0100 01D9     		bls	.L407
 6017              	.L348:
1862:Veno-Echo.cpp ****     }
 6018              		.loc 20 1862 9 is_stmt 1 view .LVU1628
 6019              	.LVL295:
 6020              	.LBB1529:
 6021              	.LBI1529:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6022              		.loc 8 58 17 view .LVU1629
 6023              	.LBB1530:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6024              		.loc 8 60 9 view .LVU1630
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6025              		.loc 8 60 20 is_stmt 0 view .LVU1631
 6026 0102 9FEDA60A 		vldr.32	s0, .L414+48
 6027              	.LVL296:
 6028              	.L407:
 6029              		.loc 8 61 34 view .LVU1632
 6030 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6031              		.loc 8 60 20 view .LVU1633
 6032 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6033              		.loc 8 61 9 is_stmt 1 view .LVU1634
 6034              		.loc 8 61 34 is_stmt 0 view .LVU1635
 6035 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6036              	.LVL297:
 6037              	.LBE1530:
 6038              	.LBE1529:
1865:Veno-Echo.cpp ****     {
 6039              		.loc 20 1865 5 view .LVU1636
 6040 0110 DFEDA37A 		vldr.32	s15, .L414+52
 6041              	.LBB1532:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 227


 6042              	.LBB1531:
 6043              		.loc 8 61 20 view .LVU1637
 6044 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6045              	.LBE1531:
 6046              	.LBE1532:
1865:Veno-Echo.cpp ****     {
 6047              		.loc 20 1865 5 is_stmt 1 view .LVU1638
1865:Veno-Echo.cpp ****     {
 6048              		.loc 20 1865 17 is_stmt 0 view .LVU1639
 6049 0118 94ED050A 		vldr.32	s0, [r4, #20]
1865:Veno-Echo.cpp ****     {
 6050              		.loc 20 1865 5 view .LVU1640
 6051 011c B4EEE70A 		vcmpe.f32	s0, s15
 6052 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6053 0124 07DB     		blt	.L352
1865:Veno-Echo.cpp ****     {
 6054              		.loc 20 1865 40 discriminator 1 view .LVU1641
 6055 0126 DFED9F7A 		vldr.32	s15, .L414+56
 6056 012a B4EEE70A 		vcmpe.f32	s0, s15
 6057 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6058 0132 40F26781 		bls	.L410
 6059              	.L352:
1874:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6060              		.loc 20 1874 9 is_stmt 1 view .LVU1642
1874:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6061              		.loc 20 1874 22 is_stmt 0 view .LVU1643
 6062 0136 9FED9B0A 		vldr.32	s0, .L414+56
 6063 013a 9B48     		ldr	r0, .L414+60
 6064 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6065              	.LVL298:
1875:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6066              		.loc 20 1875 9 is_stmt 1 view .LVU1644
1875:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6067              		.loc 20 1875 22 is_stmt 0 view .LVU1645
 6068 0140 9FED980A 		vldr.32	s0, .L414+56
 6069 0144 9948     		ldr	r0, .L414+64
 6070 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6071              	.LVL299:
1876:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6072              		.loc 20 1876 9 is_stmt 1 view .LVU1646
1876:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6073              		.loc 20 1876 27 is_stmt 0 view .LVU1647
 6074 014a 9FED960A 		vldr.32	s0, .L414+56
 6075 014e 9848     		ldr	r0, .L414+68
 6076 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6077              	.LVL300:
1877:Veno-Echo.cpp ****     }
 6078              		.loc 20 1877 9 is_stmt 1 view .LVU1648
1877:Veno-Echo.cpp ****     }
 6079              		.loc 20 1877 27 is_stmt 0 view .LVU1649
 6080 0154 9FED930A 		vldr.32	s0, .L414+56
 6081 0158 9648     		ldr	r0, .L414+72
 6082 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6083              	.LVL301:
 6084              	.L355:
1880:Veno-Echo.cpp ****     {
 6085              		.loc 20 1880 5 is_stmt 1 view .LVU1650
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 228


1880:Veno-Echo.cpp ****     {
 6086              		.loc 20 1880 17 is_stmt 0 view .LVU1651
 6087 015e 94ED040A 		vldr.32	s0, [r4, #16]
1880:Veno-Echo.cpp ****     {
 6088              		.loc 20 1880 5 view .LVU1652
 6089 0162 DFED957A 		vldr.32	s15, .L414+76
 6090 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6091 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6092 016e 07DB     		blt	.L356
1880:Veno-Echo.cpp ****     {
 6093              		.loc 20 1880 40 discriminator 1 view .LVU1653
 6094 0170 DFED927A 		vldr.32	s15, .L414+80
 6095 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6096 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6097 017c 40F2E380 		bls	.L411
 6098              	.L356:
1889:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6099              		.loc 20 1889 9 is_stmt 1 view .LVU1654
1889:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6100              		.loc 20 1889 22 is_stmt 0 view .LVU1655
 6101 0180 9FED8F0A 		vldr.32	s0, .L414+84
 6102 0184 8F48     		ldr	r0, .L414+88
 6103 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6104              	.LVL302:
1890:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6105              		.loc 20 1890 9 is_stmt 1 view .LVU1656
1890:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6106              		.loc 20 1890 22 is_stmt 0 view .LVU1657
 6107 018a 9FED8D0A 		vldr.32	s0, .L414+84
 6108 018e 8E48     		ldr	r0, .L414+92
 6109 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6110              	.LVL303:
1891:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6111              		.loc 20 1891 9 is_stmt 1 view .LVU1658
1891:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6112              		.loc 20 1891 27 is_stmt 0 view .LVU1659
 6113 0194 9FED8A0A 		vldr.32	s0, .L414+84
 6114 0198 8C48     		ldr	r0, .L414+96
 6115 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6116              	.LVL304:
1892:Veno-Echo.cpp **** 
 6117              		.loc 20 1892 9 is_stmt 1 view .LVU1660
1892:Veno-Echo.cpp **** 
 6118              		.loc 20 1892 27 is_stmt 0 view .LVU1661
 6119 019e 9FED880A 		vldr.32	s0, .L414+84
 6120 01a2 8B48     		ldr	r0, .L414+100
 6121 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6122              	.LVL305:
 6123              	.L359:
1896:Veno-Echo.cpp ****     {
 6124              		.loc 20 1896 5 is_stmt 1 view .LVU1662
1896:Veno-Echo.cpp ****     {
 6125              		.loc 20 1896 17 is_stmt 0 view .LVU1663
 6126 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1896:Veno-Echo.cpp ****     {
 6127              		.loc 20 1896 5 view .LVU1664
 6128 01ac B5EEC00A 		vcmpe.f32	s0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 229


 6129 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6130 01b4 07DB     		blt	.L360
1896:Veno-Echo.cpp ****     {
 6131              		.loc 20 1896 38 discriminator 1 view .LVU1665
 6132 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6133 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6134 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6135 01c2 40F29980 		bls	.L412
 6136              	.L360:
1910:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6137              		.loc 20 1910 9 is_stmt 1 view .LVU1666
1910:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6138              		.loc 20 1910 26 is_stmt 0 view .LVU1667
 6139 01c6 9FED710A 		vldr.32	s0, .L414+32
 6140 01ca 7948     		ldr	r0, .L414+68
 6141 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6142              	.LVL306:
1911:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6143              		.loc 20 1911 9 is_stmt 1 view .LVU1668
1911:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6144              		.loc 20 1911 26 is_stmt 0 view .LVU1669
 6145 01d0 9FED6E0A 		vldr.32	s0, .L414+32
 6146 01d4 7D48     		ldr	r0, .L414+96
 6147 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6148              	.LVL307:
1912:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6149              		.loc 20 1912 9 is_stmt 1 view .LVU1670
1912:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6150              		.loc 20 1912 26 is_stmt 0 view .LVU1671
 6151 01da 9FED6C0A 		vldr.32	s0, .L414+32
 6152 01de 7548     		ldr	r0, .L414+72
 6153 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6154              	.LVL308:
1913:Veno-Echo.cpp ****     }
 6155              		.loc 20 1913 9 is_stmt 1 view .LVU1672
1913:Veno-Echo.cpp ****     }
 6156              		.loc 20 1913 26 is_stmt 0 view .LVU1673
 6157 01e4 9FED690A 		vldr.32	s0, .L414+32
 6158 01e8 7948     		ldr	r0, .L414+100
 6159 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6160              	.LVL309:
 6161              	.L363:
1916:Veno-Echo.cpp ****     {
 6162              		.loc 20 1916 5 is_stmt 1 view .LVU1674
1916:Veno-Echo.cpp ****     {
 6163              		.loc 20 1916 16 is_stmt 0 view .LVU1675
 6164 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1916:Veno-Echo.cpp ****     {
 6165              		.loc 20 1916 5 view .LVU1676
 6166 01f2 9FED787A 		vldr.32	s14, .L414+104
1922:Veno-Echo.cpp ****     }
 6167              		.loc 20 1922 21 view .LVU1677
 6168 01f6 784B     		ldr	r3, .L414+108
1916:Veno-Echo.cpp ****     {
 6169              		.loc 20 1916 5 view .LVU1678
 6170 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6171 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 230


 6172 0200 06D4     		bmi	.L367
1920:Veno-Echo.cpp ****     {
 6173              		.loc 20 1920 14 is_stmt 1 view .LVU1679
 6174 0202 9FED767A 		vldr.32	s14, .L414+112
 6175 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6176 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6177 020e 70DC     		bgt	.L413
 6178              	.L367:
1918:Veno-Echo.cpp ****     }
 6179              		.loc 20 1918 9 view .LVU1680
1918:Veno-Echo.cpp ****     }
 6180              		.loc 20 1918 21 is_stmt 0 view .LVU1681
 6181 0210 0022     		movs	r2, #0
 6182 0212 1A70     		strb	r2, [r3]
 6183              	.L366:
1930:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6184              		.loc 20 1930 5 is_stmt 1 view .LVU1682
1930:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6185              		.loc 20 1930 18 is_stmt 0 view .LVU1683
 6186 0214 94ED080A 		vldr.32	s0, [r4, #32]
1930:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6187              		.loc 20 1930 5 view .LVU1684
 6188 0218 DFED717A 		vldr.32	s15, .L414+116
 6189 021c B4EEE70A 		vcmpe.f32	s0, s15
 6190 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6191 0224 06DB     		blt	.L369
1931:Veno-Echo.cpp ****     {
 6192              		.loc 20 1931 9 view .LVU1685
 6193 0226 DFED6F7A 		vldr.32	s15, .L414+120
 6194 022a B4EEE70A 		vcmpe.f32	s0, s15
 6195 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6196 0232 01D9     		bls	.L408
 6197              	.L369:
1939:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6198              		.loc 20 1939 9 is_stmt 1 view .LVU1686
1939:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6199              		.loc 20 1939 31 is_stmt 0 view .LVU1687
 6200 0234 9FED6C0A 		vldr.32	s0, .L414+124
 6201              	.L408:
 6202 0238 5248     		ldr	r0, .L414+24
 6203 023a FFF7FEFF 		bl	_ZN8Taptempo12setTapLengthEf
 6204              	.LVL310:
1940:Veno-Echo.cpp ****     }
 6205              		.loc 20 1940 9 is_stmt 1 view .LVU1688
1940:Veno-Echo.cpp ****     }
 6206              		.loc 20 1940 31 is_stmt 0 view .LVU1689
 6207 023e 5148     		ldr	r0, .L414+24
 6208 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6209              	.LVL311:
 6210 0244 6948     		ldr	r0, .L414+128
 6211 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6212              	.LVL312:
1943:Veno-Echo.cpp ****     {
 6213              		.loc 20 1943 5 is_stmt 1 view .LVU1690
 6214 024a DFED697A 		vldr.32	s15, .L414+132
 6215 024e 94ED097A 		vldr.32	s14, [r4, #36]
1945:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 231


 6216              		.loc 20 1945 24 is_stmt 0 view .LVU1691
 6217 0252 6848     		ldr	r0, .L414+136
1943:Veno-Echo.cpp ****     {
 6218              		.loc 20 1943 5 view .LVU1692
 6219 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6220 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6221 025c 42DD     		ble	.L403
1945:Veno-Echo.cpp ****     }
 6222              		.loc 20 1945 9 is_stmt 1 view .LVU1693
1945:Veno-Echo.cpp ****     }
 6223              		.loc 20 1945 24 is_stmt 0 view .LVU1694
 6224 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
 6225              	.LVL313:
 6226              	.L375:
1952:Veno-Echo.cpp ****     {
 6227              		.loc 20 1952 5 is_stmt 1 view .LVU1695
 6228 0262 DFED637A 		vldr.32	s15, .L414+132
 6229 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1954:Veno-Echo.cpp ****     }
 6230              		.loc 20 1954 24 is_stmt 0 view .LVU1696
 6231 026a 6348     		ldr	r0, .L414+140
1952:Veno-Echo.cpp ****     {
 6232              		.loc 20 1952 5 view .LVU1697
 6233 026c B4EEE77A 		vcmpe.f32	s14, s15
 6234 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6235 0274 39DD     		ble	.L404
1954:Veno-Echo.cpp ****     }
 6236              		.loc 20 1954 9 is_stmt 1 view .LVU1698
1961:Veno-Echo.cpp **** 
 6237              		.loc 20 1961 1 is_stmt 0 view .LVU1699
 6238 0276 BDE83840 		pop	{r3, r4, r5, lr}
 6239              		.cfi_remember_state
 6240              		.cfi_restore 14
 6241              		.cfi_restore 5
 6242              		.cfi_restore 4
 6243              		.cfi_restore 3
 6244              		.cfi_def_cfa_offset 0
 6245              	.LVL314:
1954:Veno-Echo.cpp ****     }
 6246              		.loc 20 1954 24 view .LVU1700
 6247 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6248              	.LVL315:
 6249              	.L330:
 6250              		.cfi_restore_state
1834:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6251              		.loc 20 1834 9 is_stmt 1 view .LVU1701
 6252              	.LBB1533:
 6253              	.LBI1533:
  68:Veno-Echo.cpp ****     {
 6254              		.loc 20 68 10 view .LVU1702
 6255              	.LBB1534:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6256              		.loc 20 70 9 view .LVU1703
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6257              		.loc 20 70 28 is_stmt 0 view .LVU1704
 6258 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6259              	.LVL316:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 232


 6260              	.LBB1535:
 6261              	.LBI1535:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6262              		.loc 21 75 3 is_stmt 1 view .LVU1705
 6263              	.LBB1536:
 6264              		.loc 21 76 5 view .LVU1706
 6265              		.loc 21 76 5 is_stmt 0 view .LVU1707
 6266              	.LBE1536:
 6267              	.LBE1535:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6268              		.loc 20 70 15 view .LVU1708
 6269 0282 DFED5E6A 		vldr.32	s13, .L414+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6270              		.loc 20 70 53 view .LVU1709
 6271 0286 9FED3C6A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6272              		.loc 20 70 15 view .LVU1710
 6273 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6274              		.loc 20 70 53 view .LVU1711
 6275 028e 67EE867A 		vmul.f32	s15, s15, s12
 6276              	.LBB1538:
 6277              	.LBB1537:
 6278              		.loc 21 76 31 view .LVU1712
 6279 0292 B0EEC77A 		vabs.f32	s14, s14
 6280              	.LBE1537:
 6281              	.LBE1538:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6282              		.loc 20 70 9 view .LVU1713
 6283 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6284 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6285 029e 06DD     		ble	.L337
 6286              	.LBE1534:
 6287              	.LBE1533:
1834:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6288              		.loc 20 1834 33 view .LVU1714
 6289 02a0 1A68     		ldr	r2, [r3]
 6290              	.LBB1544:
 6291              	.LBB1543:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6292              		.loc 20 73 13 is_stmt 1 view .LVU1715
 6293              	.LBB1539:
 6294              	.LBB1540:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6295              		.loc 19 71 9 is_stmt 0 view .LVU1716
 6296 02a2 0021     		movs	r1, #0
 6297              		.loc 19 72 9 view .LVU1717
 6298 02a4 5648     		ldr	r0, .L414+148
 6299              	.LVL317:
 6300              		.loc 19 72 9 view .LVU1718
 6301              	.LBE1540:
 6302              	.LBE1539:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6303              		.loc 20 73 27 view .LVU1719
 6304 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6305              		.loc 20 74 13 is_stmt 1 view .LVU1720
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 233


 6306              	.LVL318:
 6307              	.LBB1542:
 6308              	.LBI1539:
  69:delayline_reverse.h ****     {
 6309              		.loc 19 69 17 view .LVU1721
 6310              	.LBB1541:
 6311              		.loc 19 72 9 is_stmt 0 view .LVU1722
 6312 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6313              		.loc 19 71 9 view .LVU1723
 6314 02ac 1160     		str	r1, [r2]	@ float
 6315              	.LVL319:
 6316              	.L337:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6317              		.loc 19 71 9 view .LVU1724
 6318              	.LBE1541:
 6319              	.LBE1542:
 6320              	.LBE1543:
 6321              	.LBE1544:
1835:Veno-Echo.cpp ****     }
 6322              		.loc 20 1835 9 is_stmt 1 view .LVU1725
 6323              	.LBB1545:
 6324              	.LBI1545:
  68:Veno-Echo.cpp ****     {
 6325              		.loc 20 68 10 view .LVU1726
 6326              	.LBB1546:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6327              		.loc 20 70 9 view .LVU1727
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6328              		.loc 20 70 28 is_stmt 0 view .LVU1728
 6329 02ae 344B     		ldr	r3, .L414+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6330              		.loc 20 70 15 view .LVU1729
 6331 02b0 DFED526A 		vldr.32	s13, .L414+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6332              		.loc 20 70 28 view .LVU1730
 6333 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6334              	.LVL320:
 6335              	.LBB1547:
 6336              	.LBI1547:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6337              		.loc 21 75 3 is_stmt 1 view .LVU1731
 6338              	.LBB1548:
 6339              		.loc 21 76 5 view .LVU1732
 6340              		.loc 21 76 5 is_stmt 0 view .LVU1733
 6341              	.LBE1548:
 6342              	.LBE1547:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6343              		.loc 20 70 53 view .LVU1734
 6344 02b8 9FED2F6A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6345              		.loc 20 70 15 view .LVU1735
 6346 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6347              		.loc 20 70 53 view .LVU1736
 6348 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6349              	.LBB1550:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 234


 6350              	.LBB1549:
 6351              		.loc 21 76 31 view .LVU1737
 6352 02c4 B0EEC77A 		vabs.f32	s14, s14
 6353              	.LBE1549:
 6354              	.LBE1550:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6355              		.loc 20 70 9 view .LVU1738
 6356 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6357 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6358 02d0 7FF7DBAE 		ble	.L336
 6359              	.LBE1546:
 6360              	.LBE1545:
1835:Veno-Echo.cpp ****     }
 6361              		.loc 20 1835 33 view .LVU1739
 6362 02d4 1A68     		ldr	r2, [r3]
 6363              	.LBB1556:
 6364              	.LBB1555:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6365              		.loc 20 73 13 is_stmt 1 view .LVU1740
 6366              	.LBB1551:
 6367              	.LBB1552:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6368              		.loc 19 71 9 is_stmt 0 view .LVU1741
 6369 02d6 0021     		movs	r1, #0
 6370              		.loc 19 72 9 view .LVU1742
 6371 02d8 4948     		ldr	r0, .L414+148
 6372              	.LBE1552:
 6373              	.LBE1551:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6374              		.loc 20 73 27 view .LVU1743
 6375 02da C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6376              		.loc 20 74 13 is_stmt 1 view .LVU1744
 6377              	.LVL321:
 6378              	.LBB1554:
 6379              	.LBI1551:
  69:delayline_reverse.h ****     {
 6380              		.loc 19 69 17 view .LVU1745
 6381              	.LBB1553:
 6382              		.loc 19 72 9 is_stmt 0 view .LVU1746
 6383 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6384              		.loc 19 71 9 view .LVU1747
 6385 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6386              		.loc 19 73 5 view .LVU1748
 6387 02e2 D2E6     		b	.L336
 6388              	.LVL322:
 6389              	.L403:
 6390              		.loc 19 73 5 view .LVU1749
 6391              	.LBE1553:
 6392              	.LBE1554:
 6393              	.LBE1555:
 6394              	.LBE1556:
1949:Veno-Echo.cpp ****     }
 6395              		.loc 20 1949 9 is_stmt 1 view .LVU1750
1949:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 235


 6396              		.loc 20 1949 25 is_stmt 0 view .LVU1751
 6397 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6398              	.LVL323:
 6399 02e8 BBE7     		b	.L375
 6400              	.L404:
1958:Veno-Echo.cpp ****     }
 6401              		.loc 20 1958 9 is_stmt 1 view .LVU1752
1961:Veno-Echo.cpp **** 
 6402              		.loc 20 1961 1 is_stmt 0 view .LVU1753
 6403 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6404              		.cfi_remember_state
 6405              		.cfi_restore 14
 6406              		.cfi_restore 5
 6407              		.cfi_restore 4
 6408              		.cfi_restore 3
 6409              		.cfi_def_cfa_offset 0
 6410              	.LVL324:
1958:Veno-Echo.cpp ****     }
 6411              		.loc 20 1958 25 view .LVU1754
 6412 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6413              	.LVL325:
 6414              	.L413:
 6415              		.cfi_restore_state
1922:Veno-Echo.cpp ****     }
 6416              		.loc 20 1922 9 is_stmt 1 view .LVU1755
1922:Veno-Echo.cpp ****     }
 6417              		.loc 20 1922 21 is_stmt 0 view .LVU1756
 6418 02f2 0122     		movs	r2, #1
 6419 02f4 1A70     		strb	r2, [r3]
 6420 02f6 8DE7     		b	.L366
 6421              	.L412:
1898:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6422              		.loc 20 1898 9 is_stmt 1 view .LVU1757
1898:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6423              		.loc 20 1898 21 is_stmt 0 view .LVU1758
 6424 02f8 2B48     		ldr	r0, .L414+60
 6425 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6426              	.LVL326:
1899:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6427              		.loc 20 1899 9 is_stmt 1 view .LVU1759
1899:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6428              		.loc 20 1899 21 is_stmt 0 view .LVU1760
 6429 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6430 0302 3048     		ldr	r0, .L414+88
 6431 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6432              	.LVL327:
1900:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6433              		.loc 20 1900 9 is_stmt 1 view .LVU1761
1900:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6434              		.loc 20 1900 21 is_stmt 0 view .LVU1762
 6435 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6436 030c 2748     		ldr	r0, .L414+64
 6437 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6438              	.LVL328:
1901:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6439              		.loc 20 1901 9 is_stmt 1 view .LVU1763
1901:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 236


 6440              		.loc 20 1901 21 is_stmt 0 view .LVU1764
 6441 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6442 0316 2C48     		ldr	r0, .L414+92
 6443 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6444              	.LVL329:
1902:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6445              		.loc 20 1902 9 is_stmt 1 view .LVU1765
1902:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6446              		.loc 20 1902 26 is_stmt 0 view .LVU1766
 6447 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6448 0320 2348     		ldr	r0, .L414+68
 6449 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6450              	.LVL330:
1903:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6451              		.loc 20 1903 9 is_stmt 1 view .LVU1767
1903:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6452              		.loc 20 1903 26 is_stmt 0 view .LVU1768
 6453 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6454 032a 2848     		ldr	r0, .L414+96
 6455 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6456              	.LVL331:
1904:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6457              		.loc 20 1904 9 is_stmt 1 view .LVU1769
1904:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6458              		.loc 20 1904 26 is_stmt 0 view .LVU1770
 6459 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6460 0334 1F48     		ldr	r0, .L414+72
 6461 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6462              	.LVL332:
1905:Veno-Echo.cpp ****     }
 6463              		.loc 20 1905 9 is_stmt 1 view .LVU1771
1905:Veno-Echo.cpp ****     }
 6464              		.loc 20 1905 26 is_stmt 0 view .LVU1772
 6465 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6466 033e 2448     		ldr	r0, .L414+100
 6467 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6468              	.LVL333:
 6469 0344 53E7     		b	.L363
 6470              	.L411:
1882:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6471              		.loc 20 1882 9 is_stmt 1 view .LVU1773
1882:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6472              		.loc 20 1882 22 is_stmt 0 view .LVU1774
 6473 0346 1F48     		ldr	r0, .L414+88
 6474 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6475              	.LVL334:
1883:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6476              		.loc 20 1883 9 is_stmt 1 view .LVU1775
1883:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6477              		.loc 20 1883 22 is_stmt 0 view .LVU1776
 6478 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6479 0350 1D48     		ldr	r0, .L414+92
 6480 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6481              	.LVL335:
1884:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6482              		.loc 20 1884 9 is_stmt 1 view .LVU1777
1884:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 237


 6483              		.loc 20 1884 27 is_stmt 0 view .LVU1778
 6484 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6485 035a 1C48     		ldr	r0, .L414+96
 6486 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6487              	.LVL336:
1885:Veno-Echo.cpp ****     }
 6488              		.loc 20 1885 9 is_stmt 1 view .LVU1779
1885:Veno-Echo.cpp ****     }
 6489              		.loc 20 1885 27 is_stmt 0 view .LVU1780
 6490 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6491 0364 1A48     		ldr	r0, .L414+100
 6492 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6493              	.LVL337:
 6494 036a 1DE7     		b	.L359
 6495              	.L415:
 6496              		.align	2
 6497              	.L414:
 6498 036c 0050C346 		.word	1187205120
 6499 0370 00000000 		.word	.LANCHOR2
 6500 0374 00606A48 		.word	1214930944
 6501 0378 0AD7A33B 		.word	1000593162
 6502 037c BF270900 		.word	599999
 6503 0380 00000000 		.word	.LANCHOR3
 6504 0384 00000000 		.word	.LANCHOR26
 6505 0388 0000FA43 		.word	1140457472
 6506 038c 00000000 		.word	0
 6507 0390 CDCCCC3D 		.word	1036831949
 6508 0394 00000000 		.word	.LANCHOR68
 6509 0398 00000000 		.word	.LANCHOR76
 6510 039c 9A99A140 		.word	1084332442
 6511 03a0 0080BB44 		.word	1153138688
 6512 03a4 00803B46 		.word	1178304512
 6513 03a8 00000000 		.word	.LANCHOR47
 6514 03ac 00000000 		.word	.LANCHOR48
 6515 03b0 00000000 		.word	.LANCHOR49
 6516 03b4 00000000 		.word	.LANCHOR50
 6517 03b8 0000C842 		.word	1120403456
 6518 03bc 00004844 		.word	1145569280
 6519 03c0 00004843 		.word	1128792064
 6520 03c4 00000000 		.word	.LANCHOR35
 6521 03c8 00000000 		.word	.LANCHOR36
 6522 03cc 00000000 		.word	.LANCHOR37
 6523 03d0 00000000 		.word	.LANCHOR38
 6524 03d4 6666E63E 		.word	1055286886
 6525 03d8 00000000 		.word	.LANCHOR83
 6526 03dc CDCC0C3F 		.word	1057803469
 6527 03e0 00409C46 		.word	1184645120
 6528 03e4 001BB74A 		.word	1253513984
 6529 03e8 0024F448 		.word	1223959552
 6530 03ec 00000000 		.word	.LANCHOR89
 6531 03f0 48E1FA3E 		.word	1056629064
 6532 03f4 00000000 		.word	.LANCHOR92
 6533 03f8 00000000 		.word	.LANCHOR93
 6534 03fc 00650148 		.word	1208050944
 6535 0400 94050200 		.word	132500
 6536              	.L410:
1867:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 238


 6537              		.loc 20 1867 9 is_stmt 1 view .LVU1781
1867:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6538              		.loc 20 1867 22 is_stmt 0 view .LVU1782
 6539 0404 1248     		ldr	r0, .L416
 6540 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6541              	.LVL338:
1868:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6542              		.loc 20 1868 9 is_stmt 1 view .LVU1783
1868:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6543              		.loc 20 1868 22 is_stmt 0 view .LVU1784
 6544 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6545 040e 1148     		ldr	r0, .L416+4
 6546 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6547              	.LVL339:
1869:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6548              		.loc 20 1869 9 is_stmt 1 view .LVU1785
1869:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6549              		.loc 20 1869 27 is_stmt 0 view .LVU1786
 6550 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6551 0418 0F48     		ldr	r0, .L416+8
 6552 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6553              	.LVL340:
1870:Veno-Echo.cpp ****     }
 6554              		.loc 20 1870 9 is_stmt 1 view .LVU1787
1870:Veno-Echo.cpp ****     }
 6555              		.loc 20 1870 27 is_stmt 0 view .LVU1788
 6556 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6557 0422 0E48     		ldr	r0, .L416+12
 6558 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6559              	.LVL341:
 6560 0428 99E6     		b	.L355
 6561              	.L401:
1853:Veno-Echo.cpp ****     }
 6562              		.loc 20 1853 18 view .LVU1789
 6563 042a DFED0D7A 		vldr.32	s15, .L416+16
 6564 042e 54E6     		b	.L345
 6565              	.LVL342:
 6566              	.L409:
 6567              	.LBB1557:
 6568              	.LBB1525:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6569              		.loc 20 74 29 view .LVU1790
 6570 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6571              	.LBB1517:
 6572              	.LBB1518:
  72:delayline_reverse.h ****     }
 6573              		.loc 19 72 9 view .LVU1791
 6574 0434 0B4D     		ldr	r5, .L416+20
 6575              	.LBE1518:
 6576              	.LBE1517:
 6577              	.LBE1525:
 6578              	.LBE1557:
1830:Veno-Echo.cpp ****     }
 6579              		.loc 20 1830 33 view .LVU1792
 6580 0436 1968     		ldr	r1, [r3]
 6581              	.LBB1558:
 6582              	.LBB1526:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 239


  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6583              		.loc 20 73 13 is_stmt 1 view .LVU1793
 6584              	.LBB1522:
 6585              	.LBB1519:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6586              		.loc 19 71 9 is_stmt 0 view .LVU1794
 6587 0438 0020     		movs	r0, #0
 6588              	.LBE1519:
 6589              	.LBE1522:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6590              		.loc 20 73 27 view .LVU1795
 6591 043a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6592              		.loc 20 74 29 view .LVU1796
 6593 043e 17EE102A 		vmov	r2, s14	@ int
 6594              	.LBB1523:
 6595              	.LBB1520:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6596              		.loc 19 71 9 view .LVU1797
 6597 0442 0860     		str	r0, [r1]	@ float
 6598              	.LVL343:
  72:delayline_reverse.h ****     }
 6599              		.loc 19 72 9 view .LVU1798
 6600 0444 AA42     		cmp	r2, r5
 6601 0446 28BF     		it	cs
 6602 0448 2A46     		movcs	r2, r5
 6603              	.LBE1520:
 6604              	.LBE1523:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6605              		.loc 20 74 13 is_stmt 1 view .LVU1799
 6606              	.LVL344:
 6607              	.LBB1524:
 6608              	.LBI1517:
  69:delayline_reverse.h ****     {
 6609              		.loc 19 69 17 view .LVU1800
 6610              	.LBB1521:
  72:delayline_reverse.h ****     }
 6611              		.loc 19 72 9 is_stmt 0 view .LVU1801
 6612 044a 0A61     		str	r2, [r1, #16]
 6613              		.loc 19 73 5 view .LVU1802
 6614 044c 1DE6     		b	.L336
 6615              	.L417:
 6616 044e 00BF     		.align	2
 6617              	.L416:
 6618 0450 00000000 		.word	.LANCHOR47
 6619 0454 00000000 		.word	.LANCHOR48
 6620 0458 00000000 		.word	.LANCHOR49
 6621 045c 00000000 		.word	.LANCHOR50
 6622 0460 00000000 		.word	0
 6623 0464 BF270900 		.word	599999
 6624              	.LBE1521:
 6625              	.LBE1524:
 6626              	.LBE1526:
 6627              	.LBE1558:
 6628              		.cfi_endproc
 6629              	.LFE4333:
 6631              		.section	.text.startup.main,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 240


 6632              		.align	1
 6633              		.p2align 2,,3
 6634              		.global	main
 6635              		.syntax unified
 6636              		.thumb
 6637              		.thumb_func
 6638              		.fpu fpv5-d16
 6640              	main:
 6641              	.LFB4311:
 646:Veno-Echo.cpp ****     // initialize hardware.
 6642              		.loc 20 646 1 is_stmt 1 view -0
 6643              		.cfi_startproc
 6644              		@ Volatile: function does not return.
 6645              		@ args = 0, pretend = 0, frame = 328
 6646              		@ frame_needed = 0, uses_anonymous_args = 0
 648:Veno-Echo.cpp ****     hw.Init();
 6647              		.loc 20 648 5 view .LVU1804
 646:Veno-Echo.cpp ****     // initialize hardware.
 6648              		.loc 20 646 1 is_stmt 0 view .LVU1805
 6649 0000 80B5     		push	{r7, lr}
 6650              		.cfi_def_cfa_offset 8
 6651              		.cfi_offset 7, -8
 6652              		.cfi_offset 14, -4
 648:Veno-Echo.cpp ****     hw.Init();
 6653              		.loc 20 648 17 view .LVU1806
 6654 0002 CF48     		ldr	r0, .L428
 646:Veno-Echo.cpp ****     // initialize hardware.
 6655              		.loc 20 646 1 view .LVU1807
 6656 0004 D4B0     		sub	sp, sp, #336
 6657              		.cfi_def_cfa_offset 344
 648:Veno-Echo.cpp ****     hw.Init();
 6658              		.loc 20 648 17 view .LVU1808
 6659 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6660              	.LVL345:
 649:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 6661              		.loc 20 649 5 is_stmt 1 view .LVU1809
 649:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 6662              		.loc 20 649 12 is_stmt 0 view .LVU1810
 6663 000a 0021     		movs	r1, #0
 6664 000c CC48     		ldr	r0, .L428
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6665              		.loc 20 654 16 view .LVU1811
 6666 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 649:Veno-Echo.cpp ****     //hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_96KHZ);
 6667              		.loc 20 649 12 view .LVU1812
 6668 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6669              	.LVL346:
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6670              		.loc 20 654 5 is_stmt 1 view .LVU1813
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6671              		.loc 20 654 16 is_stmt 0 view .LVU1814
 6672 0016 1D20     		movs	r0, #29
 6673 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6674              	.LVL347:
 6675 001c 0346     		mov	r3, r0	@ movhi
 6676 001e 0620     		movs	r0, #6
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 241


 6677              		.loc 20 661 22 view .LVU1815
 6678 0020 0224     		movs	r4, #2
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6679              		.loc 20 654 16 view .LVU1816
 6680 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6681 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6682              	.LVL348:
 6683 002a 0346     		mov	r3, r0	@ movhi
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6684              		.loc 20 654 80 view .LVU1817
 6685 002c C448     		ldr	r0, .L428
 6686              	.LBB1559:
 6687              	.LBB1560:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6688              		.loc 10 64 50 view .LVU1818
 6689 002e 4FF00108 		mov	r8, #1
 6690              	.LBE1560:
 6691              	.LBE1559:
 6692              	.LBB1563:
 6693              	.LBB1564:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6694              		.loc 7 58 57 view .LVU1819
 6695 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6696              	.LBE1564:
 6697              	.LBE1563:
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6698              		.loc 20 654 16 view .LVU1820
 6699 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6700              		.loc 20 654 80 view .LVU1821
 6701 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6702              	.LVL349:
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6703              		.loc 20 654 16 view .LVU1822
 6704 003e 0123     		movs	r3, #1
 6705 0040 80EE080A 		vdiv.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 242


 6706 0044 BF48     		ldr	r0, .L428+4
 668:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6707              		.loc 20 668 20 view .LVU1823
 6708 0046 C04F     		ldr	r7, .L428+8
 6709              	.LBB1567:
 6710              	.LBB1568:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6711              		.loc 7 54 63 view .LVU1824
 6712 0048 C04D     		ldr	r5, .L428+12
 6713              	.LBE1568:
 6714              	.LBE1567:
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6715              		.loc 20 674 20 view .LVU1825
 6716 004a C14E     		ldr	r6, .L428+16
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6717              		.loc 20 654 16 view .LVU1826
 6718 004c DDE90212 		ldrd	r1, r2, [sp, #8]
 6719 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6720              	.LVL350:
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6721              		.loc 20 655 5 is_stmt 1 view .LVU1827
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6722              		.loc 20 655 16 is_stmt 0 view .LVU1828
 6723 0054 1E20     		movs	r0, #30
 6724 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6725              	.LVL351:
 6726 005a 0346     		mov	r3, r0	@ movhi
 6727 005c 0720     		movs	r0, #7
 6728 005e ADF81030 		strh	r3, [sp, #16]	@ movhi
 6729 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6730              	.LVL352:
 6731 0066 0346     		mov	r3, r0	@ movhi
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6732              		.loc 20 655 80 view .LVU1829
 6733 0068 B548     		ldr	r0, .L428
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6734              		.loc 20 655 16 view .LVU1830
 6735 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6736              		.loc 20 655 80 view .LVU1831
 6737 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6738              	.LVL353:
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6739              		.loc 20 655 16 view .LVU1832
 6740 0072 0123     		movs	r3, #1
 6741 0074 80EE080A 		vdiv.f32	s0, s0, s16
 6742 0078 B648     		ldr	r0, .L428+20
 6743 007a DDE90412 		ldrd	r1, r2, [sp, #16]
 6744 007e FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6745              	.LVL354:
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6746              		.loc 20 656 5 is_stmt 1 view .LVU1833
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6747              		.loc 20 656 18 is_stmt 0 view .LVU1834
 6748 0082 0A20     		movs	r0, #10
 6749 0084 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6750              	.LVL355:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 243


 6751 0088 0346     		mov	r3, r0	@ movhi
 6752 008a 0220     		movs	r0, #2
 6753 008c ADF81830 		strh	r3, [sp, #24]	@ movhi
 6754 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6755              	.LVL356:
 6756 0094 0346     		mov	r3, r0	@ movhi
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6757              		.loc 20 656 85 view .LVU1835
 6758 0096 AA48     		ldr	r0, .L428
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6759              		.loc 20 656 18 view .LVU1836
 6760 0098 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6761              		.loc 20 656 85 view .LVU1837
 6762 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6763              	.LVL357:
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6764              		.loc 20 656 18 view .LVU1838
 6765 00a0 0023     		movs	r3, #0
 6766 00a2 80EE080A 		vdiv.f32	s0, s0, s16
 6767 00a6 AC48     		ldr	r0, .L428+24
 6768 00a8 DDE90612 		ldrd	r1, r2, [sp, #24]
 6769 00ac FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6770              	.LVL358:
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6771              		.loc 20 657 5 is_stmt 1 view .LVU1839
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6772              		.loc 20 657 18 is_stmt 0 view .LVU1840
 6773 00b0 0B20     		movs	r0, #11
 6774 00b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6775              	.LVL359:
 6776 00b6 0346     		mov	r3, r0	@ movhi
 6777 00b8 0320     		movs	r0, #3
 6778 00ba ADF82030 		strh	r3, [sp, #32]	@ movhi
 6779 00be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6780              	.LVL360:
 6781 00c2 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6782              		.loc 20 657 85 view .LVU1841
 6783 00c4 9E48     		ldr	r0, .L428
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6784              		.loc 20 657 18 view .LVU1842
 6785 00c6 ADF82430 		strh	r3, [sp, #36]	@ movhi
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6786              		.loc 20 657 85 view .LVU1843
 6787 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6788              	.LVL361:
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6789              		.loc 20 657 18 view .LVU1844
 6790 00ce 0023     		movs	r3, #0
 6791 00d0 80EE080A 		vdiv.f32	s0, s0, s16
 6792 00d4 A148     		ldr	r0, .L428+28
 6793 00d6 DDE90812 		ldrd	r1, r2, [sp, #32]
 6794 00da FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6795              	.LVL362:
 658:Veno-Echo.cpp **** 
 6796              		.loc 20 658 5 is_stmt 1 view .LVU1845
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 244


 658:Veno-Echo.cpp **** 
 6797              		.loc 20 658 20 is_stmt 0 view .LVU1846
 6798 00de 1820     		movs	r0, #24
 6799 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6800              	.LVL363:
 6801 00e4 0346     		mov	r3, r0	@ movhi
 6802 00e6 0420     		movs	r0, #4
 6803 00e8 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6804 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6805              	.LVL364:
 6806 00f0 0346     		mov	r3, r0	@ movhi
 658:Veno-Echo.cpp **** 
 6807              		.loc 20 658 93 view .LVU1847
 6808 00f2 9348     		ldr	r0, .L428
 658:Veno-Echo.cpp **** 
 6809              		.loc 20 658 20 view .LVU1848
 6810 00f4 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 658:Veno-Echo.cpp **** 
 6811              		.loc 20 658 93 view .LVU1849
 6812 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6813              	.LVL365:
 658:Veno-Echo.cpp **** 
 6814              		.loc 20 658 20 view .LVU1850
 6815 00fc 2346     		mov	r3, r4
 6816 00fe 80EE080A 		vdiv.f32	s0, s0, s16
 6817 0102 9748     		ldr	r0, .L428+32
 6818 0104 DDE90A12 		ldrd	r1, r2, [sp, #40]
 6819 0108 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6820              	.LVL366:
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6821              		.loc 20 661 5 is_stmt 1 view .LVU1851
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6822              		.loc 20 661 22 is_stmt 0 view .LVU1852
 6823 010c 0020     		movs	r0, #0
 6824 010e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6825              	.LVL367:
 6826 0112 0346     		mov	r3, r0	@ movhi
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6827              		.loc 20 661 55 view .LVU1853
 6828 0114 8A48     		ldr	r0, .L428
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6829              		.loc 20 661 22 view .LVU1854
 6830 0116 ADF83030 		strh	r3, [sp, #48]	@ movhi
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6831              		.loc 20 661 55 view .LVU1855
 6832 011a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6833              	.LVL368:
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6834              		.loc 20 661 22 view .LVU1856
 6835 011e 0123     		movs	r3, #1
 6836 0120 80EE080A 		vdiv.f32	s0, s0, s16
 6837 0124 0C99     		ldr	r1, [sp, #48]
 6838 0126 1A46     		mov	r2, r3
 6839 0128 8E48     		ldr	r0, .L428+36
 6840 012a 0094     		str	r4, [sp]
 6841 012c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6842              	.LVL369:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 245


 662:Veno-Echo.cpp **** 
 6843              		.loc 20 662 5 is_stmt 1 view .LVU1857
 662:Veno-Echo.cpp **** 
 6844              		.loc 20 662 22 is_stmt 0 view .LVU1858
 6845 0130 0120     		movs	r0, #1
 6846 0132 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6847              	.LVL370:
 6848 0136 0346     		mov	r3, r0	@ movhi
 662:Veno-Echo.cpp **** 
 6849              		.loc 20 662 55 view .LVU1859
 6850 0138 8148     		ldr	r0, .L428
 662:Veno-Echo.cpp **** 
 6851              		.loc 20 662 22 view .LVU1860
 6852 013a ADF83430 		strh	r3, [sp, #52]	@ movhi
 662:Veno-Echo.cpp **** 
 6853              		.loc 20 662 55 view .LVU1861
 6854 013e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6855              	.LVL371:
 662:Veno-Echo.cpp **** 
 6856              		.loc 20 662 22 view .LVU1862
 6857 0142 4246     		mov	r2, r8
 6858 0144 80EE080A 		vdiv.f32	s0, s0, s16
 6859 0148 0D99     		ldr	r1, [sp, #52]
 6860 014a 4346     		mov	r3, r8
 6861 014c 8648     		ldr	r0, .L428+40
 6862 014e 0094     		str	r4, [sp]
 6863              	.LBB1571:
 6864              	.LBB1572:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6865              		.loc 7 54 63 view .LVU1863
 6866 0150 4FF07C54 		mov	r4, #1056964608
 6867              	.LBE1572:
 6868              	.LBE1571:
 662:Veno-Echo.cpp **** 
 6869              		.loc 20 662 22 view .LVU1864
 6870 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6871              	.LVL372:
 665:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6872              		.loc 20 665 5 is_stmt 1 view .LVU1865
 665:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6873              		.loc 20 665 14 is_stmt 0 view .LVU1866
 6874 0158 1720     		movs	r0, #23
 6875 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6876              	.LVL373:
 6877 015e 0346     		mov	r3, r0	@ movhi
 665:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6878              		.loc 20 665 48 view .LVU1867
 6879 0160 7748     		ldr	r0, .L428
 665:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6880              		.loc 20 665 14 view .LVU1868
 6881 0162 ADF83830 		strh	r3, [sp, #56]	@ movhi
 665:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6882              		.loc 20 665 48 view .LVU1869
 6883 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6884              	.LVL374:
 665:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6885              		.loc 20 665 14 view .LVU1870
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 246


 6886 016a 0E99     		ldr	r1, [sp, #56]
 6887 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6888 0170 7E48     		ldr	r0, .L428+44
 6889 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6890              	.LVL375:
 666:Veno-Echo.cpp ****     
 6891              		.loc 20 666 5 is_stmt 1 view .LVU1871
 666:Veno-Echo.cpp ****     
 6892              		.loc 20 666 17 is_stmt 0 view .LVU1872
 6893 0176 0520     		movs	r0, #5
 6894 0178 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6895              	.LVL376:
 6896 017c 0346     		mov	r3, r0	@ movhi
 6897 017e 7048     		ldr	r0, .L428
 6898 0180 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6899 0184 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6900              	.LVL377:
 6901 0188 0F99     		ldr	r1, [sp, #60]
 6902 018a 7948     		ldr	r0, .L428+48
 6903 018c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6904              	.LVL378:
 668:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6905              		.loc 20 668 5 is_stmt 1 view .LVU1873
 668:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6906              		.loc 20 668 20 is_stmt 0 view .LVU1874
 6907 0190 6B48     		ldr	r0, .L428
 6908 0192 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6909              	.LVL379:
 6910 0196 3846     		mov	r0, r7
 6911 0198 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6912              	.LVL380:
 669:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6913              		.loc 20 669 5 is_stmt 1 view .LVU1875
 6914              	.LBB1575:
 6915              	.LBI1571:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6916              		.loc 7 54 17 view .LVU1876
 6917              	.LBB1573:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6918              		.loc 7 54 48 view .LVU1877
 6919              	.LBE1573:
 6920              	.LBE1575:
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6921              		.loc 20 674 20 is_stmt 0 view .LVU1878
 6922 019c 6848     		ldr	r0, .L428
 6923              	.LBB1576:
 6924              	.LBB1565:
 6925              		.loc 7 58 57 view .LVU1879
 6926 019e C7ED008A 		vstr.32	s17, [r7]
 6927              	.LBE1565:
 6928              	.LBE1576:
 6929              	.LBB1577:
 6930              	.LBB1574:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6931              		.loc 7 54 63 view .LVU1880
 6932 01a2 BC60     		str	r4, [r7, #8]	@ float
 6933              	.LVL381:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 247


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6934              		.loc 7 54 63 view .LVU1881
 6935              	.LBE1574:
 6936              	.LBE1577:
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6937              		.loc 20 670 5 is_stmt 1 view .LVU1882
 6938              	.LBB1578:
 6939              	.LBI1567:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6940              		.loc 7 54 17 view .LVU1883
 6941              	.LBB1569:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6942              		.loc 7 54 48 view .LVU1884
 6943              	.LBE1569:
 6944              	.LBE1578:
 6945              	.LBB1579:
 6946              	.LBB1580:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6947              		.loc 7 54 63 is_stmt 0 view .LVU1885
 6948 01a4 7C61     		str	r4, [r7, #20]	@ float
 6949              	.LBE1580:
 6950              	.LBE1579:
 6951              	.LBB1582:
 6952              	.LBB1570:
 6953 01a6 FD60     		str	r5, [r7, #12]	@ float
 6954              	.LVL382:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6955              		.loc 7 54 63 view .LVU1886
 6956              	.LBE1570:
 6957              	.LBE1582:
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6958              		.loc 20 671 5 is_stmt 1 view .LVU1887
 6959              	.LBB1583:
 6960              	.LBI1579:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6961              		.loc 7 54 17 view .LVU1888
 6962              	.LBB1581:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6963              		.loc 7 54 48 view .LVU1889
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6964              		.loc 7 54 48 is_stmt 0 view .LVU1890
 6965              	.LBE1581:
 6966              	.LBE1583:
 672:Veno-Echo.cpp **** 
 6967              		.loc 20 672 5 is_stmt 1 view .LVU1891
 6968              	.LBB1584:
 6969              	.LBI1563:
 6970              		.loc 7 58 17 view .LVU1892
 6971              	.LBB1566:
 6972              		.loc 7 58 52 view .LVU1893
 6973              		.loc 7 58 52 is_stmt 0 view .LVU1894
 6974              	.LBE1566:
 6975              	.LBE1584:
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6976              		.loc 20 674 5 is_stmt 1 view .LVU1895
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6977              		.loc 20 674 20 is_stmt 0 view .LVU1896
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 248


 6978 01a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6979              	.LVL383:
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6980              		.loc 20 680 17 view .LVU1897
 6981 01ac 714F     		ldr	r7, .L428+52
 674:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6982              		.loc 20 674 20 view .LVU1898
 6983 01ae 3046     		mov	r0, r6
 6984 01b0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6985              	.LVL384:
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6986              		.loc 20 675 5 is_stmt 1 view .LVU1899
 6987              	.LBB1585:
 6988              	.LBI1585:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6989              		.loc 7 54 17 view .LVU1900
 6990              	.LBB1586:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6991              		.loc 7 54 48 view .LVU1901
 6992              	.LBE1586:
 6993              	.LBE1585:
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6994              		.loc 20 680 17 is_stmt 0 view .LVU1902
 6995 01b4 6248     		ldr	r0, .L428
 6996              	.LBB1588:
 6997              	.LBB1589:
 6998              		.loc 7 58 57 view .LVU1903
 6999 01b6 C6ED008A 		vstr.32	s17, [r6]
 7000              	.LBE1589:
 7001              	.LBE1588:
 7002              	.LBB1591:
 7003              	.LBB1587:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7004              		.loc 7 54 63 view .LVU1904
 7005 01ba B460     		str	r4, [r6, #8]	@ float
 7006              	.LVL385:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7007              		.loc 7 54 63 view .LVU1905
 7008              	.LBE1587:
 7009              	.LBE1591:
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7010              		.loc 20 676 5 is_stmt 1 view .LVU1906
 7011              	.LBB1592:
 7012              	.LBI1592:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7013              		.loc 7 54 17 view .LVU1907
 7014              	.LBB1593:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7015              		.loc 7 54 48 view .LVU1908
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7016              		.loc 7 54 63 is_stmt 0 view .LVU1909
 7017 01bc F560     		str	r5, [r6, #12]	@ float
 7018              	.LVL386:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7019              		.loc 7 54 63 view .LVU1910
 7020              	.LBE1593:
 7021              	.LBE1592:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 249


 677:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7022              		.loc 20 677 5 is_stmt 1 view .LVU1911
 7023              	.LBB1594:
 7024              	.LBI1594:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7025              		.loc 7 54 17 view .LVU1912
 7026              	.LBB1595:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7027              		.loc 7 54 48 view .LVU1913
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7028              		.loc 7 54 63 is_stmt 0 view .LVU1914
 7029 01be 7461     		str	r4, [r6, #20]	@ float
 7030              	.LVL387:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7031              		.loc 7 54 63 view .LVU1915
 7032              	.LBE1595:
 7033              	.LBE1594:
 678:Veno-Echo.cpp **** 
 7034              		.loc 20 678 5 is_stmt 1 view .LVU1916
 7035              	.LBB1596:
 7036              	.LBI1588:
 7037              		.loc 7 58 17 view .LVU1917
 7038              	.LBB1590:
 7039              		.loc 7 58 52 view .LVU1918
 7040              		.loc 7 58 52 is_stmt 0 view .LVU1919
 7041              	.LBE1590:
 7042              	.LBE1596:
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7043              		.loc 20 680 5 is_stmt 1 view .LVU1920
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7044              		.loc 20 680 17 is_stmt 0 view .LVU1921
 7045 01c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7046              	.LVL388:
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7047              		.loc 20 686 17 view .LVU1922
 7048 01c4 6C4E     		ldr	r6, .L428+56
 680:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7049              		.loc 20 680 17 view .LVU1923
 7050 01c6 3846     		mov	r0, r7
 7051 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7052              	.LVL389:
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7053              		.loc 20 681 5 is_stmt 1 view .LVU1924
 7054              	.LBB1597:
 7055              	.LBI1597:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7056              		.loc 7 54 17 view .LVU1925
 7057              	.LBB1598:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7058              		.loc 7 54 48 view .LVU1926
 7059              	.LBE1598:
 7060              	.LBE1597:
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7061              		.loc 20 686 17 is_stmt 0 view .LVU1927
 7062 01cc 5C48     		ldr	r0, .L428
 7063              	.LBB1600:
 7064              	.LBB1601:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 250


 7065              		.loc 7 58 57 view .LVU1928
 7066 01ce C7ED008A 		vstr.32	s17, [r7]
 7067              	.LBE1601:
 7068              	.LBE1600:
 7069              	.LBB1603:
 7070              	.LBB1599:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7071              		.loc 7 54 63 view .LVU1929
 7072 01d2 BD60     		str	r5, [r7, #8]	@ float
 7073              	.LVL390:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7074              		.loc 7 54 63 view .LVU1930
 7075              	.LBE1599:
 7076              	.LBE1603:
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7077              		.loc 20 682 5 is_stmt 1 view .LVU1931
 7078              	.LBB1604:
 7079              	.LBI1604:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7080              		.loc 7 54 17 view .LVU1932
 7081              	.LBB1605:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7082              		.loc 7 54 48 view .LVU1933
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7083              		.loc 7 54 63 is_stmt 0 view .LVU1934
 7084 01d4 FD60     		str	r5, [r7, #12]	@ float
 7085              	.LVL391:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7086              		.loc 7 54 63 view .LVU1935
 7087              	.LBE1605:
 7088              	.LBE1604:
 683:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7089              		.loc 20 683 5 is_stmt 1 view .LVU1936
 7090              	.LBB1606:
 7091              	.LBI1606:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7092              		.loc 7 54 17 view .LVU1937
 7093              	.LBB1607:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7094              		.loc 7 54 48 view .LVU1938
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7095              		.loc 7 54 63 is_stmt 0 view .LVU1939
 7096 01d6 7D61     		str	r5, [r7, #20]	@ float
 7097              	.LVL392:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7098              		.loc 7 54 63 view .LVU1940
 7099              	.LBE1607:
 7100              	.LBE1606:
 684:Veno-Echo.cpp **** 
 7101              		.loc 20 684 5 is_stmt 1 view .LVU1941
 7102              	.LBB1608:
 7103              	.LBI1600:
 7104              		.loc 7 58 17 view .LVU1942
 7105              	.LBB1602:
 7106              		.loc 7 58 52 view .LVU1943
 7107              		.loc 7 58 52 is_stmt 0 view .LVU1944
 7108              	.LBE1602:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 251


 7109              	.LBE1608:
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7110              		.loc 20 686 5 is_stmt 1 view .LVU1945
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7111              		.loc 20 686 17 is_stmt 0 view .LVU1946
 7112 01d8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7113              	.LVL393:
 7114 01dc 3046     		mov	r0, r6
 705:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7115              		.loc 20 705 17 view .LVU1947
 7116 01de 9FED678A 		vldr.32	s16, .L428+60
 686:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7117              		.loc 20 686 17 view .LVU1948
 7118 01e2 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7119              	.LVL394:
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7120              		.loc 20 687 5 is_stmt 1 view .LVU1949
 7121              	.LBB1609:
 7122              	.LBI1609:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7123              		.loc 7 54 17 view .LVU1950
 7124              	.LBB1610:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7125              		.loc 7 54 48 view .LVU1951
 7126              	.LBE1610:
 7127              	.LBE1609:
 7128              	.LBB1612:
 7129              	.LBB1613:
 7130              	.LBB1614:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7131              		.loc 10 45 16 is_stmt 0 view .LVU1952
 7132 01e6 6649     		ldr	r1, .L428+64
 7133              	.LBE1614:
 7134              	.LBE1613:
 7135              	.LBE1612:
 7136              	.LBB1619:
 7137              	.LBB1620:
 7138              	.LBB1621:
 7139 01e8 664A     		ldr	r2, .L428+68
 7140              	.LBE1621:
 7141              	.LBE1620:
 7142              	.LBE1619:
 7143              	.LBB1626:
 7144              	.LBB1627:
 7145              	.LBB1628:
 7146 01ea 674B     		ldr	r3, .L428+72
 7147              	.LBE1628:
 7148              	.LBE1627:
 7149              	.LBE1626:
 7150              	.LBB1633:
 7151              	.LBB1617:
 7152              	.LBB1615:
 7153 01ec 0C60     		str	r4, [r1]	@ float
 7154              	.LBE1615:
 7155              	.LBE1617:
 7156              	.LBE1633:
 7157              	.LBB1634:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 252


 7158              	.LBB1624:
 7159              	.LBB1622:
 7160 01ee 1460     		str	r4, [r2]	@ float
 7161              	.LBE1622:
 7162              	.LBE1624:
 7163              	.LBE1634:
 7164              	.LBB1635:
 7165              	.LBB1631:
 7166              	.LBB1629:
 7167 01f0 1C60     		str	r4, [r3]	@ float
 7168              	.LBE1629:
 7169              	.LBE1631:
 7170              	.LBE1635:
 7171              	.LBB1636:
 7172              	.LBB1561:
 7173              		.loc 10 64 50 view .LVU1953
 7174 01f2 81F80480 		strb	r8, [r1, #4]
 7175              	.LBE1561:
 7176              	.LBE1636:
 7177              	.LBB1637:
 7178              	.LBB1638:
 7179 01f6 82F80480 		strb	r8, [r2, #4]
 7180              	.LBE1638:
 7181              	.LBE1637:
 7182              	.LBB1640:
 7183              	.LBB1641:
 7184 01fa 83F80480 		strb	r8, [r3, #4]
 7185              	.LBE1641:
 7186              	.LBE1640:
 701:Veno-Echo.cpp **** 
 7187              		.loc 20 701 15 view .LVU1954
 7188 01fe 5048     		ldr	r0, .L428
 7189              	.LBB1643:
 7190              	.LBB1644:
 7191              		.loc 7 58 57 view .LVU1955
 7192 0200 C6ED008A 		vstr.32	s17, [r6]
 7193              	.LBE1644:
 7194              	.LBE1643:
 7195              	.LBB1646:
 7196              	.LBB1611:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7197              		.loc 7 54 63 view .LVU1956
 7198 0204 B560     		str	r5, [r6, #8]	@ float
 7199              	.LVL395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7200              		.loc 7 54 63 view .LVU1957
 7201              	.LBE1611:
 7202              	.LBE1646:
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7203              		.loc 20 688 5 is_stmt 1 view .LVU1958
 7204              	.LBB1647:
 7205              	.LBI1647:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7206              		.loc 7 54 17 view .LVU1959
 7207              	.LBB1648:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7208              		.loc 7 54 48 view .LVU1960
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 253


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7209              		.loc 7 54 63 is_stmt 0 view .LVU1961
 7210 0206 F560     		str	r5, [r6, #12]	@ float
 7211              	.LVL396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7212              		.loc 7 54 63 view .LVU1962
 7213              	.LBE1648:
 7214              	.LBE1647:
 689:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7215              		.loc 20 689 5 is_stmt 1 view .LVU1963
 7216              	.LBB1649:
 7217              	.LBI1649:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7218              		.loc 7 54 17 view .LVU1964
 7219              	.LBB1650:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7220              		.loc 7 54 48 view .LVU1965
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7221              		.loc 7 54 63 is_stmt 0 view .LVU1966
 7222 0208 7561     		str	r5, [r6, #20]	@ float
 7223              	.LVL397:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7224              		.loc 7 54 63 view .LVU1967
 7225              	.LBE1650:
 7226              	.LBE1649:
 690:Veno-Echo.cpp **** 
 7227              		.loc 20 690 5 is_stmt 1 view .LVU1968
 7228              	.LBB1651:
 7229              	.LBI1643:
 7230              		.loc 7 58 17 view .LVU1969
 7231              	.LBB1645:
 7232              		.loc 7 58 52 view .LVU1970
 7233              		.loc 7 58 52 is_stmt 0 view .LVU1971
 7234              	.LBE1645:
 7235              	.LBE1651:
 693:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7236              		.loc 20 693 5 is_stmt 1 view .LVU1972
 7237              	.LBB1652:
 7238              	.LBI1612:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7239              		.loc 10 51 17 view .LVU1973
 7240              	.LBE1652:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7241              		.loc 10 51 26 view .LVU1974
 7242              	.LBB1653:
 7243              	.LBB1618:
 7244              	.LBI1613:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7245              		.loc 10 43 17 view .LVU1975
 7246              	.LBB1616:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7247              		.loc 10 45 9 view .LVU1976
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7248              		.loc 10 46 9 view .LVU1977
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7249              		.loc 10 46 9 is_stmt 0 view .LVU1978
 7250              	.LBE1616:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 254


 7251              	.LBE1618:
 7252              	.LBE1653:
 694:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7253              		.loc 20 694 5 is_stmt 1 view .LVU1979
 7254              	.LBB1654:
 7255              	.LBI1559:
 7256              		.loc 10 64 17 view .LVU1980
 7257              	.LBB1562:
 7258              		.loc 10 64 43 view .LVU1981
 7259              		.loc 10 64 43 is_stmt 0 view .LVU1982
 7260              	.LBE1562:
 7261              	.LBE1654:
 695:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7262              		.loc 20 695 5 is_stmt 1 view .LVU1983
 7263              	.LBB1655:
 7264              	.LBI1619:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7265              		.loc 10 51 17 view .LVU1984
 7266              	.LBE1655:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7267              		.loc 10 51 26 view .LVU1985
 7268              	.LBB1656:
 7269              	.LBB1625:
 7270              	.LBI1620:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7271              		.loc 10 43 17 view .LVU1986
 7272              	.LBB1623:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7273              		.loc 10 45 9 view .LVU1987
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7274              		.loc 10 46 9 view .LVU1988
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7275              		.loc 10 46 9 is_stmt 0 view .LVU1989
 7276              	.LBE1623:
 7277              	.LBE1625:
 7278              	.LBE1656:
 696:Veno-Echo.cpp **** 
 7279              		.loc 20 696 5 is_stmt 1 view .LVU1990
 7280              	.LBB1657:
 7281              	.LBI1637:
 7282              		.loc 10 64 17 view .LVU1991
 7283              	.LBB1639:
 7284              		.loc 10 64 43 view .LVU1992
 7285              		.loc 10 64 43 is_stmt 0 view .LVU1993
 7286              	.LBE1639:
 7287              	.LBE1657:
 698:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7288              		.loc 20 698 5 is_stmt 1 view .LVU1994
 7289              	.LBB1658:
 7290              	.LBI1626:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7291              		.loc 10 51 17 view .LVU1995
 7292              	.LBE1658:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7293              		.loc 10 51 26 view .LVU1996
 7294              	.LBB1659:
 7295              	.LBB1632:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 255


 7296              	.LBI1627:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7297              		.loc 10 43 17 view .LVU1997
 7298              	.LBB1630:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7299              		.loc 10 45 9 view .LVU1998
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7300              		.loc 10 46 9 view .LVU1999
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7301              		.loc 10 46 9 is_stmt 0 view .LVU2000
 7302              	.LBE1630:
 7303              	.LBE1632:
 7304              	.LBE1659:
 699:Veno-Echo.cpp **** 
 7305              		.loc 20 699 5 is_stmt 1 view .LVU2001
 7306              	.LBB1660:
 7307              	.LBI1640:
 7308              		.loc 10 64 17 view .LVU2002
 7309              	.LBB1642:
 7310              		.loc 10 64 43 view .LVU2003
 7311              		.loc 10 64 43 is_stmt 0 view .LVU2004
 7312              	.LBE1642:
 7313              	.LBE1660:
 701:Veno-Echo.cpp **** 
 7314              		.loc 20 701 5 is_stmt 1 view .LVU2005
 701:Veno-Echo.cpp **** 
 7315              		.loc 20 701 15 is_stmt 0 view .LVU2006
 7316 020a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7317              	.LVL398:
 7318 020e FFF7FEFF 		bl	_Z10InitDelaysf
 7319              	.LVL399:
 704:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7320              		.loc 20 704 5 is_stmt 1 view .LVU2007
 704:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7321              		.loc 20 704 15 is_stmt 0 view .LVU2008
 7322 0212 4B48     		ldr	r0, .L428
 7323 0214 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7324              	.LVL400:
 7325 0218 5C48     		ldr	r0, .L428+76
 7326 021a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7327              	.LVL401:
 705:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7328              		.loc 20 705 5 is_stmt 1 view .LVU2009
 705:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7329              		.loc 20 705 17 is_stmt 0 view .LVU2010
 7330 021e B0EE480A 		vmov.f32	s0, s16
 7331 0222 5A48     		ldr	r0, .L428+76
 7332 0224 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7333              	.LVL402:
 706:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7334              		.loc 20 706 5 is_stmt 1 view .LVU2011
 706:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7335              		.loc 20 706 18 is_stmt 0 view .LVU2012
 7336 0228 9FED590A 		vldr.32	s0, .L428+80
 7337 022c 5748     		ldr	r0, .L428+76
 7338 022e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7339              	.LVL403:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 256


 707:Veno-Echo.cpp **** 
 7340              		.loc 20 707 5 is_stmt 1 view .LVU2013
 707:Veno-Echo.cpp **** 
 7341              		.loc 20 707 19 is_stmt 0 view .LVU2014
 7342 0232 9FED580A 		vldr.32	s0, .L428+84
 7343 0236 5548     		ldr	r0, .L428+76
 7344 0238 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7345              	.LVL404:
 709:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7346              		.loc 20 709 5 is_stmt 1 view .LVU2015
 709:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7347              		.loc 20 709 15 is_stmt 0 view .LVU2016
 7348 023c 4048     		ldr	r0, .L428
 7349 023e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7350              	.LVL405:
 7351 0242 5548     		ldr	r0, .L428+88
 7352 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7353              	.LVL406:
 710:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7354              		.loc 20 710 5 is_stmt 1 view .LVU2017
 710:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7355              		.loc 20 710 17 is_stmt 0 view .LVU2018
 7356 0248 B0EE480A 		vmov.f32	s0, s16
 7357 024c 5248     		ldr	r0, .L428+88
 7358 024e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7359              	.LVL407:
 711:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7360              		.loc 20 711 5 is_stmt 1 view .LVU2019
 711:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7361              		.loc 20 711 18 is_stmt 0 view .LVU2020
 7362 0252 9FED4F0A 		vldr.32	s0, .L428+80
 7363 0256 5048     		ldr	r0, .L428+88
 7364 0258 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7365              	.LVL408:
 712:Veno-Echo.cpp **** 
 7366              		.loc 20 712 5 is_stmt 1 view .LVU2021
 712:Veno-Echo.cpp **** 
 7367              		.loc 20 712 19 is_stmt 0 view .LVU2022
 7368 025c 9FED4D0A 		vldr.32	s0, .L428+84
 7369 0260 4D48     		ldr	r0, .L428+88
 7370 0262 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7371              	.LVL409:
 715:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7372              		.loc 20 715 5 is_stmt 1 view .LVU2023
 715:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7373              		.loc 20 715 15 is_stmt 0 view .LVU2024
 7374 0266 3648     		ldr	r0, .L428
 7375 0268 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7376              	.LVL410:
 7377 026c 4B48     		ldr	r0, .L428+92
 7378 026e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7379              	.LVL411:
 716:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7380              		.loc 20 716 5 is_stmt 1 view .LVU2025
 716:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7381              		.loc 20 716 17 is_stmt 0 view .LVU2026
 7382 0272 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 257


 7383 0276 4948     		ldr	r0, .L428+92
 7384 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7385              	.LVL412:
 717:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7386              		.loc 20 717 5 is_stmt 1 view .LVU2027
 717:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7387              		.loc 20 717 18 is_stmt 0 view .LVU2028
 7388 027c 9FED480A 		vldr.32	s0, .L428+96
 7389 0280 4648     		ldr	r0, .L428+92
 7390 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7391              	.LVL413:
 718:Veno-Echo.cpp **** 
 7392              		.loc 20 718 5 is_stmt 1 view .LVU2029
 718:Veno-Echo.cpp **** 
 7393              		.loc 20 718 19 is_stmt 0 view .LVU2030
 7394 0286 9FED430A 		vldr.32	s0, .L428+84
 7395 028a 4448     		ldr	r0, .L428+92
 7396 028c FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7397              	.LVL414:
 720:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7398              		.loc 20 720 5 is_stmt 1 view .LVU2031
 720:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7399              		.loc 20 720 15 is_stmt 0 view .LVU2032
 7400 0290 2B48     		ldr	r0, .L428
 7401 0292 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7402              	.LVL415:
 7403 0296 4348     		ldr	r0, .L428+100
 7404 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7405              	.LVL416:
 721:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7406              		.loc 20 721 5 is_stmt 1 view .LVU2033
 721:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7407              		.loc 20 721 17 is_stmt 0 view .LVU2034
 7408 029c B0EE480A 		vmov.f32	s0, s16
 7409 02a0 4048     		ldr	r0, .L428+100
 7410 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7411              	.LVL417:
 722:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7412              		.loc 20 722 5 is_stmt 1 view .LVU2035
 722:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7413              		.loc 20 722 18 is_stmt 0 view .LVU2036
 7414 02a6 9FED3E0A 		vldr.32	s0, .L428+96
 7415 02aa 3E48     		ldr	r0, .L428+100
 7416 02ac FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7417              	.LVL418:
 723:Veno-Echo.cpp **** 
 7418              		.loc 20 723 5 is_stmt 1 view .LVU2037
 723:Veno-Echo.cpp **** 
 7419              		.loc 20 723 19 is_stmt 0 view .LVU2038
 7420 02b0 9FED380A 		vldr.32	s0, .L428+84
 7421 02b4 3B48     		ldr	r0, .L428+100
 7422 02b6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7423              	.LVL419:
 726:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7424              		.loc 20 726 5 is_stmt 1 view .LVU2039
 726:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7425              		.loc 20 726 20 is_stmt 0 view .LVU2040
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 258


 7426 02ba 2148     		ldr	r0, .L428
 7427 02bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7428              	.LVL420:
 7429 02c0 3948     		ldr	r0, .L428+104
 7430 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7431              	.LVL421:
 727:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7432              		.loc 20 727 5 is_stmt 1 view .LVU2041
 727:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7433              		.loc 20 727 22 is_stmt 0 view .LVU2042
 7434 02c6 B0EE480A 		vmov.f32	s0, s16
 7435 02ca 3748     		ldr	r0, .L428+104
 7436 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7437              	.LVL422:
 728:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7438              		.loc 20 728 5 is_stmt 1 view .LVU2043
 728:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7439              		.loc 20 728 23 is_stmt 0 view .LVU2044
 7440 02d0 9FED2F0A 		vldr.32	s0, .L428+80
 7441 02d4 3448     		ldr	r0, .L428+104
 7442 02d6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7443              	.LVL423:
 729:Veno-Echo.cpp **** 
 7444              		.loc 20 729 5 is_stmt 1 view .LVU2045
 729:Veno-Echo.cpp **** 
 7445              		.loc 20 729 24 is_stmt 0 view .LVU2046
 7446 02da 9FED2E0A 		vldr.32	s0, .L428+84
 7447 02de 3248     		ldr	r0, .L428+104
 7448 02e0 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7449              	.LVL424:
 731:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7450              		.loc 20 731 5 is_stmt 1 view .LVU2047
 731:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7451              		.loc 20 731 20 is_stmt 0 view .LVU2048
 7452 02e4 1648     		ldr	r0, .L428
 7453 02e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7454              	.LVL425:
 7455 02ea 3048     		ldr	r0, .L428+108
 7456 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7457              	.LVL426:
 732:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7458              		.loc 20 732 5 is_stmt 1 view .LVU2049
 732:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7459              		.loc 20 732 22 is_stmt 0 view .LVU2050
 7460 02f0 B0EE480A 		vmov.f32	s0, s16
 7461 02f4 2D48     		ldr	r0, .L428+108
 7462 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7463              	.LVL427:
 733:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7464              		.loc 20 733 5 is_stmt 1 view .LVU2051
 733:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7465              		.loc 20 733 23 is_stmt 0 view .LVU2052
 7466 02fa 9FED250A 		vldr.32	s0, .L428+80
 7467 02fe 2B48     		ldr	r0, .L428+108
 7468 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7469              	.LVL428:
 734:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 259


 7470              		.loc 20 734 5 is_stmt 1 view .LVU2053
 734:Veno-Echo.cpp **** 
 7471              		.loc 20 734 24 is_stmt 0 view .LVU2054
 7472 0304 9FED230A 		vldr.32	s0, .L428+84
 7473 0308 2848     		ldr	r0, .L428+108
 7474 030a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7475              	.LVL429:
 737:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7476              		.loc 20 737 5 is_stmt 1 view .LVU2055
 737:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7477              		.loc 20 737 20 is_stmt 0 view .LVU2056
 7478 030e 0C48     		ldr	r0, .L428
 7479 0310 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7480              	.LVL430:
 7481 0314 2648     		ldr	r0, .L428+112
 7482 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7483              	.LVL431:
 738:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7484              		.loc 20 738 5 is_stmt 1 view .LVU2057
 738:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7485              		.loc 20 738 22 is_stmt 0 view .LVU2058
 7486 031a B0EE480A 		vmov.f32	s0, s16
 7487 031e 2448     		ldr	r0, .L428+112
 7488 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7489              	.LVL432:
 739:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7490              		.loc 20 739 5 is_stmt 1 view .LVU2059
 739:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7491              		.loc 20 739 23 is_stmt 0 view .LVU2060
 7492 0324 9FED1E0A 		vldr.32	s0, .L428+96
 7493 0328 2148     		ldr	r0, .L428+112
 7494 032a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7495              	.LVL433:
 740:Veno-Echo.cpp **** 
 7496              		.loc 20 740 5 is_stmt 1 view .LVU2061
 740:Veno-Echo.cpp **** 
 7497              		.loc 20 740 24 is_stmt 0 view .LVU2062
 7498 032e 9FED190A 		vldr.32	s0, .L428+84
 7499 0332 1F48     		ldr	r0, .L428+112
 7500 0334 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7501              	.LVL434:
 742:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7502              		.loc 20 742 5 is_stmt 1 view .LVU2063
 742:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7503              		.loc 20 742 20 is_stmt 0 view .LVU2064
 7504 0338 0148     		ldr	r0, .L428
 7505 033a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7506              	.LVL435:
 7507 033e 39E0     		b	.L429
 7508              	.L430:
 7509              		.align	2
 7510              	.L428:
 7511 0340 00000000 		.word	.LANCHOR4
 7512 0344 00000000 		.word	.LANCHOR94
 7513 0348 00000000 		.word	.LANCHOR100
 7514 034c 0AD7233C 		.word	1008981770
 7515 0350 00000000 		.word	.LANCHOR101
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 260


 7516 0354 00000000 		.word	.LANCHOR95
 7517 0358 00000000 		.word	.LANCHOR92
 7518 035c 00000000 		.word	.LANCHOR93
 7519 0360 00000000 		.word	.LANCHOR96
 7520 0364 00000000 		.word	.LANCHOR97
 7521 0368 00000000 		.word	.LANCHOR98
 7522 036c 00000000 		.word	.LANCHOR99
 7523 0370 00000000 		.word	.LANCHOR88
 7524 0374 00000000 		.word	.LANCHOR102
 7525 0378 00000000 		.word	.LANCHOR103
 7526 037c 00000000 		.word	0
 7527 0380 00000000 		.word	.LANCHOR104
 7528 0384 00000000 		.word	.LANCHOR105
 7529 0388 00000000 		.word	.LANCHOR65
 7530 038c 00000000 		.word	.LANCHOR47
 7531 0390 00803B46 		.word	1178304512
 7532 0394 3333333F 		.word	1060320051
 7533 0398 00000000 		.word	.LANCHOR48
 7534 039c 00000000 		.word	.LANCHOR35
 7535 03a0 00004843 		.word	1128792064
 7536 03a4 00000000 		.word	.LANCHOR36
 7537 03a8 00000000 		.word	.LANCHOR49
 7538 03ac 00000000 		.word	.LANCHOR50
 7539 03b0 00000000 		.word	.LANCHOR37
 7540              	.L429:
 7541 03b4 9E48     		ldr	r0, .L431
 7542 03b6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7543              	.LVL436:
 743:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7544              		.loc 20 743 5 is_stmt 1 view .LVU2065
 743:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7545              		.loc 20 743 22 is_stmt 0 view .LVU2066
 7546 03ba B0EE480A 		vmov.f32	s0, s16
 7547 03be 9C48     		ldr	r0, .L431
 7548 03c0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7549              	.LVL437:
 744:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7550              		.loc 20 744 5 is_stmt 1 view .LVU2067
 744:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7551              		.loc 20 744 23 is_stmt 0 view .LVU2068
 7552 03c4 9FED9B0A 		vldr.32	s0, .L431+4
 7553 03c8 9948     		ldr	r0, .L431
 7554 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7555              	.LVL438:
 745:Veno-Echo.cpp **** 
 7556              		.loc 20 745 5 is_stmt 1 view .LVU2069
 745:Veno-Echo.cpp **** 
 7557              		.loc 20 745 24 is_stmt 0 view .LVU2070
 7558 03ce 9FED9A0A 		vldr.32	s0, .L431+8
 7559 03d2 9748     		ldr	r0, .L431
 7560 03d4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7561              	.LVL439:
 747:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7562              		.loc 20 747 5 is_stmt 1 view .LVU2071
 747:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7563              		.loc 20 747 21 is_stmt 0 view .LVU2072
 7564 03d8 9848     		ldr	r0, .L431+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 261


 7565 03da FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7566              	.LVL440:
 7567 03de 9848     		ldr	r0, .L431+16
 7568 03e0 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7569              	.LVL441:
 748:Veno-Echo.cpp **** 
 7570              		.loc 20 748 5 is_stmt 1 view .LVU2073
 748:Veno-Echo.cpp **** 
 7571              		.loc 20 748 21 is_stmt 0 view .LVU2074
 7572 03e4 9548     		ldr	r0, .L431+12
 7573 03e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7574              	.LVL442:
 7575 03ea 9648     		ldr	r0, .L431+20
 7576 03ec FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7577              	.LVL443:
 751:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7578              		.loc 20 751 5 is_stmt 1 view .LVU2075
 751:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7579              		.loc 20 751 13 is_stmt 0 view .LVU2076
 7580 03f0 9248     		ldr	r0, .L431+12
 7581 03f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7582              	.LVL444:
 7583 03f6 F0EE407A 		vmov.f32	s15, s0
 7584              	.LVL445:
 7585              	.LBB1661:
 7586              	.LBI1661:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7587              		.loc 8 42 10 is_stmt 1 view .LVU2077
 7588              	.LBB1662:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7589              		.loc 8 44 9 view .LVU2078
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7590              		.loc 8 44 20 is_stmt 0 view .LVU2079
 7591 03fa 934F     		ldr	r7, .L431+24
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7592              		.loc 8 46 20 view .LVU2080
 7593 03fc 9FED930A 		vldr.32	s0, .L431+28
 7594              	.LVL446:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7595              		.loc 8 45 27 view .LVU2081
 7596 0400 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7597              		.loc 8 49 34 view .LVU2082
 7598 0404 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7599              		.loc 8 47 20 view .LVU2083
 7600 0406 7C60     		str	r4, [r7, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7601              		.loc 8 44 20 view .LVU2084
 7602 0408 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7603              		.loc 8 45 9 is_stmt 1 view .LVU2085
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7604              		.loc 8 48 20 is_stmt 0 view .LVU2086
 7605 040c 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7606              		.loc 8 46 20 view .LVU2087
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 262


 7607 0410 87ED020A 		vstr.32	s0, [r7, #8]
 7608 0414 8E4C     		ldr	r4, .L431+32
 7609 0416 8F4D     		ldr	r5, .L431+36
 7610 0418 8F4E     		ldr	r6, .L431+40
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7611              		.loc 8 45 20 view .LVU2088
 7612 041a 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7613              		.loc 8 46 9 is_stmt 1 view .LVU2089
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7614              		.loc 8 47 9 view .LVU2090
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7615              		.loc 8 48 9 view .LVU2091
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7616              		.loc 8 49 9 view .LVU2092
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7617              		.loc 8 49 34 is_stmt 0 view .LVU2093
 7618 041e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7619              	.LVL447:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7620              		.loc 8 52 20 view .LVU2094
 7621 0422 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7622              		.loc 8 49 34 view .LVU2095
 7623 0426 F0EE407A 		vmov.f32	s15, s0
 7624              	.LBE1662:
 7625              	.LBE1661:
 7626              	.LBB1665:
 7627              	.LBB1666:
 7628              		.loc 8 61 34 view .LVU2096
 7629 042a 3846     		mov	r0, r7
 7630              	.LBE1666:
 7631              	.LBE1665:
 7632              	.LBB1670:
 7633              	.LBB1671:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7634              		.loc 8 72 19 view .LVU2097
 7635 042c 87F80080 		strb	r8, [r7]
 7636              	.LBE1671:
 7637              	.LBE1670:
 7638              	.LBB1673:
 7639              	.LBB1663:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7640              		.loc 8 52 20 view .LVU2098
 7641 0430 BB84     		strh	r3, [r7, #36]	@ movhi
 7642              	.LBE1663:
 7643              	.LBE1673:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 263


 7644              	.LBB1674:
 7645              	.LBB1667:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7646              		.loc 8 61 34 view .LVU2099
 7647 0432 B0EE680A 		vmov.f32	s0, s17
 7648              	.LBE1667:
 7649              	.LBE1674:
 7650              	.LBB1675:
 7651              	.LBB1664:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7652              		.loc 8 49 20 view .LVU2100
 7653 0436 C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7654              		.loc 8 50 9 is_stmt 1 view .LVU2101
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7655              		.loc 8 51 9 view .LVU2102
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7656              		.loc 8 52 9 view .LVU2103
 7657              	.LVL448:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7658              		.loc 8 52 9 is_stmt 0 view .LVU2104
 7659              	.LBE1664:
 7660              	.LBE1675:
 752:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7661              		.loc 20 752 5 is_stmt 1 view .LVU2105
 7662              	.LBB1676:
 7663              	.LBI1670:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7664              		.loc 8 70 17 view .LVU2106
 7665              	.LBB1672:
 7666              		.loc 8 72 9 view .LVU2107
 7667              		.loc 8 72 9 is_stmt 0 view .LVU2108
 7668              	.LBE1672:
 7669              	.LBE1676:
 753:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7670              		.loc 20 753 5 is_stmt 1 view .LVU2109
 7671              	.LBB1677:
 7672              	.LBI1665:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7673              		.loc 8 58 17 view .LVU2110
 7674              	.LBB1668:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7675              		.loc 8 60 9 view .LVU2111
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7676              		.loc 8 61 9 view .LVU2112
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7677              		.loc 8 60 20 is_stmt 0 view .LVU2113
 7678 043a C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7679              		.loc 8 61 34 view .LVU2114
 7680 043e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7681              	.LVL449:
 7682 0442 F0EE407A 		vmov.f32	s15, s0
 7683              	.LBE1668:
 7684              	.LBE1677:
 756:Veno-Echo.cpp **** 
 7685              		.loc 20 756 19 view .LVU2115
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 264


 7686 0446 854A     		ldr	r2, .L431+44
 7687 0448 44F62061 		movw	r1, #20000
 7688 044c B7EE040A 		vmov.f32	s0, #1.25e+0
 7689 0450 8348     		ldr	r0, .L431+48
 7690              	.LBB1678:
 7691              	.LBB1679:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7692              		.loc 8 67 46 view .LVU2116
 7693 0452 C7ED018A 		vstr.32	s17, [r7, #4]
 7694              	.LBE1679:
 7695              	.LBE1678:
 7696              	.LBB1681:
 7697              	.LBB1669:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7698              		.loc 8 61 20 view .LVU2117
 7699 0456 C7ED067A 		vstr.32	s15, [r7, #24]
 7700              	.LVL450:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7701              		.loc 8 61 20 view .LVU2118
 7702              	.LBE1669:
 7703              	.LBE1681:
 754:Veno-Echo.cpp **** 
 7704              		.loc 20 754 5 is_stmt 1 view .LVU2119
 7705              	.LBB1682:
 7706              	.LBI1678:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7707              		.loc 8 67 17 view .LVU2120
 7708              	.LBB1680:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7709              		.loc 8 67 41 view .LVU2121
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7710              		.loc 8 67 41 is_stmt 0 view .LVU2122
 7711              	.LBE1680:
 7712              	.LBE1682:
 756:Veno-Echo.cpp **** 
 7713              		.loc 20 756 5 is_stmt 1 view .LVU2123
 756:Veno-Echo.cpp **** 
 7714              		.loc 20 756 19 is_stmt 0 view .LVU2124
 7715 045a FFF7FEFF 		bl	_ZN8Taptempo4initEmmf
 7716              	.LVL451:
 760:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7717              		.loc 20 760 5 is_stmt 1 view .LVU2125
 760:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7718              		.loc 20 760 23 is_stmt 0 view .LVU2126
 7719 045e 1820     		movs	r0, #24
 771:Veno-Echo.cpp **** 
 7720              		.loc 20 771 17 view .LVU2127
 7721 0460 1CAF     		add	r7, sp, #112
 760:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7722              		.loc 20 760 23 view .LVU2128
 7723 0462 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7724              	.LVL452:
 7725 0466 0346     		mov	r3, r0	@ movhi
 7726 0468 7448     		ldr	r0, .L431+12
 7727 046a ADF84030 		strh	r3, [sp, #64]	@ movhi
 7728 046e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7729              	.LVL453:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 265


 7730 0472 1099     		ldr	r1, [sp, #64]
 7731 0474 7B48     		ldr	r0, .L431+52
 7732 0476 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7733              	.LVL454:
 761:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7734              		.loc 20 761 5 is_stmt 1 view .LVU2129
 761:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7735              		.loc 20 761 27 is_stmt 0 view .LVU2130
 7736 047a 7948     		ldr	r0, .L431+48
 7737 047c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7738              	.LVL455:
 7739 0480 7848     		ldr	r0, .L431+52
 7740 0482 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7741              	.LVL456:
 762:Veno-Echo.cpp **** 
 7742              		.loc 20 762 5 is_stmt 1 view .LVU2131
 762:Veno-Echo.cpp **** 
 7743              		.loc 20 762 29 is_stmt 0 view .LVU2132
 7744 0486 7748     		ldr	r0, .L431+52
 7745 0488 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7746              	.LVL457:
 766:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7747              		.loc 20 766 5 is_stmt 1 view .LVU2133
 766:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7748              		.loc 20 766 41 is_stmt 0 view .LVU2134
 7749 048c 1CA8     		add	r0, sp, #112
 7750 048e FFF7FEFF 		bl	_Z12LoadSettingsv
 7751              	.LVL458:
 770:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7752              		.loc 20 770 5 is_stmt 1 view .LVU2135
 770:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7753              		.loc 20 770 18 is_stmt 0 view .LVU2136
 7754 0492 1CA8     		add	r0, sp, #112
 7755 0494 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7756              	.LVL459:
 771:Veno-Echo.cpp **** 
 7757              		.loc 20 771 5 is_stmt 1 view .LVU2137
 771:Veno-Echo.cpp **** 
 7758              		.loc 20 771 17 is_stmt 0 view .LVU2138
 7759 0498 DFF8D4C1 		ldr	ip, .L431+64
 7760 049c 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7761 049e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7762 04a2 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7763 04a4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7764 04a8 97E80700 		ldm	r7, {r0, r1, r2}
 7765 04ac 8CE80700 		stm	ip, {r0, r1, r2}
 776:Veno-Echo.cpp **** 
 7766              		.loc 20 776 5 is_stmt 1 view .LVU2139
 778:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7767              		.loc 20 778 5 view .LVU2140
 778:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7768              		.loc 20 778 28 is_stmt 0 view .LVU2141
 7769 04b0 0F20     		movs	r0, #15
 7770 04b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7771              	.LVL460:
 7772 04b6 0346     		mov	r3, r0	@ movhi
 7773 04b8 32A8     		add	r0, sp, #200
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 266


 7774 04ba ADF84430 		strh	r3, [sp, #68]	@ movhi
 7775 04be 1199     		ldr	r1, [sp, #68]
 7776 04c0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7777              	.LVL461:
 779:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7778              		.loc 20 779 5 is_stmt 1 view .LVU2142
 779:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7779              		.loc 20 779 28 is_stmt 0 view .LVU2143
 7780 04c4 1020     		movs	r0, #16
 7781 04c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7782              	.LVL462:
 7783 04ca 0346     		mov	r3, r0	@ movhi
 7784 04cc 0DF1D900 		add	r0, sp, #217
 7785 04d0 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7786 04d4 1299     		ldr	r1, [sp, #72]
 7787 04d6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7788              	.LVL463:
 780:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7789              		.loc 20 780 5 is_stmt 1 view .LVU2144
 780:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7790              		.loc 20 780 28 is_stmt 0 view .LVU2145
 7791 04da 1120     		movs	r0, #17
 7792 04dc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7793              	.LVL464:
 7794 04e0 0346     		mov	r3, r0	@ movhi
 7795 04e2 0DF1EA00 		add	r0, sp, #234
 7796 04e6 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7797 04ea 1399     		ldr	r1, [sp, #76]
 7798 04ec FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7799              	.LVL465:
 781:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7800              		.loc 20 781 5 is_stmt 1 view .LVU2146
 781:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7801              		.loc 20 781 28 is_stmt 0 view .LVU2147
 7802 04f0 1220     		movs	r0, #18
 7803 04f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7804              	.LVL466:
 7805 04f6 0346     		mov	r3, r0	@ movhi
 7806 04f8 0DF1FB00 		add	r0, sp, #251
 7807 04fc ADF85030 		strh	r3, [sp, #80]	@ movhi
 7808 0500 1499     		ldr	r1, [sp, #80]
 7809 0502 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7810              	.LVL467:
 782:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7811              		.loc 20 782 5 is_stmt 1 view .LVU2148
 782:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7812              		.loc 20 782 28 is_stmt 0 view .LVU2149
 7813 0506 1320     		movs	r0, #19
 7814 0508 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7815              	.LVL468:
 7816 050c 0346     		mov	r3, r0	@ movhi
 7817 050e 43A8     		add	r0, sp, #268
 7818 0510 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7819 0514 1599     		ldr	r1, [sp, #84]
 7820 0516 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7821              	.LVL469:
 783:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 267


 7822              		.loc 20 783 5 is_stmt 1 view .LVU2150
 783:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7823              		.loc 20 783 28 is_stmt 0 view .LVU2151
 7824 051a 1420     		movs	r0, #20
 7825 051c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7826              	.LVL470:
 7827 0520 0346     		mov	r3, r0	@ movhi
 7828 0522 0DF21D10 		addw	r0, sp, #285
 7829 0526 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7830 052a 1699     		ldr	r1, [sp, #88]
 7831 052c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7832              	.LVL471:
 785:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7833              		.loc 20 785 5 is_stmt 1 view .LVU2152
 785:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7834              		.loc 20 785 28 is_stmt 0 view .LVU2153
 7835 0530 1620     		movs	r0, #22
 7836 0532 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7837              	.LVL472:
 7838 0536 0346     		mov	r3, r0	@ movhi
 7839 0538 0DF59770 		add	r0, sp, #302
 7840 053c ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7841 0540 1799     		ldr	r1, [sp, #92]
 7842 0542 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7843              	.LVL473:
 786:Veno-Echo.cpp **** 
 7844              		.loc 20 786 5 is_stmt 1 view .LVU2154
 786:Veno-Echo.cpp **** 
 7845              		.loc 20 786 25 is_stmt 0 view .LVU2155
 7846 0546 1920     		movs	r0, #25
 7847 0548 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7848              	.LVL474:
 7849 054c 0346     		mov	r3, r0	@ movhi
 7850 054e 0E20     		movs	r0, #14
 7851 0550 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7852 0554 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7853              	.LVL475:
 7854 0558 0346     		mov	r3, r0	@ movhi
 7855 055a 0D20     		movs	r0, #13
 7856 055c ADF86430 		strh	r3, [sp, #100]	@ movhi
 7857 0560 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7858              	.LVL476:
 7859 0564 0346     		mov	r3, r0	@ movhi
 7860 0566 0C20     		movs	r0, #12
 7861 0568 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7862 056c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7863              	.LVL477:
 7864 0570 BDF86810 		ldrh	r1, [sp, #104]
 7865 0574 0822     		movs	r2, #8
 7866 0576 199B     		ldr	r3, [sp, #100]
 7867 0578 ADF80010 		strh	r1, [sp]	@ movhi
 7868 057c ADF80400 		strh	r0, [sp, #4]	@ movhi
 7869 0580 1899     		ldr	r1, [sp, #96]
 7870 0582 ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7871 0586 0DF23F10 		addw	r0, sp, #319
 7872 058a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7873              	.LVL478:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 268


 789:Veno-Echo.cpp ****     hw.adc.Start();
 7874              		.loc 20 789 5 is_stmt 1 view .LVU2156
 789:Veno-Echo.cpp ****     hw.adc.Start();
 7875              		.loc 20 789 16 is_stmt 0 view .LVU2157
 7876 058e 32A9     		add	r1, sp, #200
 7877 0590 0623     		movs	r3, #6
 7878 0592 0822     		movs	r2, #8
 7879 0594 3448     		ldr	r0, .L431+56
 7880 0596 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7881              	.LVL479:
 790:Veno-Echo.cpp **** 
 7882              		.loc 20 790 5 is_stmt 1 view .LVU2158
 790:Veno-Echo.cpp **** 
 7883              		.loc 20 790 17 is_stmt 0 view .LVU2159
 7884 059a 3348     		ldr	r0, .L431+56
 7885 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7886              	.LVL480:
 793:Veno-Echo.cpp ****     // start audio callback
 7887              		.loc 20 793 5 is_stmt 1 view .LVU2160
 793:Veno-Echo.cpp ****     // start audio callback
 7888              		.loc 20 793 25 is_stmt 0 view .LVU2161
 7889 05a0 4146     		mov	r1, r8
 7890 05a2 2648     		ldr	r0, .L431+12
 7891 05a4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7892              	.LVL481:
 795:Veno-Echo.cpp **** 
 7893              		.loc 20 795 5 is_stmt 1 view .LVU2162
 795:Veno-Echo.cpp **** 
 7894              		.loc 20 795 18 is_stmt 0 view .LVU2163
 7895 05a8 3049     		ldr	r1, .L431+60
 7896 05aa 2448     		ldr	r0, .L431+12
 7897 05ac FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7898              	.LVL482:
 7899              	.L419:
 799:Veno-Echo.cpp ****      {  
 7900              		.loc 20 799 6 is_stmt 1 view .LVU2164
 7901              	.LBB1683:
 802:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 7902              		.loc 20 802 9 view .LVU2165
 805:Veno-Echo.cpp ****         {
 7903              		.loc 20 805 9 view .LVU2166
 7904              	.LBB1684:
 7905              	.LBB1685:
 7906              	.LBI1685:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7907              		.loc 23 87 5 view .LVU2167
 7908              	.LBE1685:
 7909              	.LBE1684:
 7910              	.LBE1683:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7911              		.loc 23 88 7 view .LVU2168
 7912              	.LBB1716:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 269


 7913              	.LBB1713:
 7914              	.LBB1691:
 7915              	.LBB1686:
 7916              	.LBI1686:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7917              		.loc 22 413 7 view .LVU2169
 7918              		.loc 22 413 7 is_stmt 0 view .LVU2170
 7919              	.LBE1686:
 7920              	.LBE1691:
 807:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7921              		.loc 20 807 13 is_stmt 1 view .LVU2171
 7922              	.LBB1692:
 7923              	.LBI1692:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 7924              		.loc 23 80 5 view .LVU2172
 7925              	.LBE1692:
 7926              	.LBE1713:
 7927              	.LBE1716:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7928              		.loc 23 81 7 view .LVU2173
 7929              	.LBB1717:
 7930              	.LBB1714:
 7931              	.LBB1701:
 7932              	.LBB1693:
 7933              	.LBI1693:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7934              		.loc 22 288 7 view .LVU2174
 7935              	.LBB1694:
 7936              	.LBI1694:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7937              		.loc 22 390 7 view .LVU2175
 7938              	.LBE1694:
 7939              	.LBE1693:
 7940              	.LBE1701:
 7941              	.LBB1702:
 814:Veno-Echo.cpp ****            {
 7942              		.loc 20 814 12 view .LVU2176
 7943              	.LBE1702:
 7944              	.LBB1707:
 7945              	.LBB1689:
 7946              	.LBB1687:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 270


 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7947              		.loc 22 419 24 is_stmt 0 view .LVU2177
 7948 05b0 BFF35B8F 		dmb	ish
 7949 05b4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7950              	.LBE1687:
 7951              	.LBE1689:
 7952              	.LBE1707:
 7953              	.LBB1708:
 7954              	.LBB1699:
 7955              	.LBB1697:
 7956              	.LBB1695:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7957              		.loc 22 397 18 view .LVU2178
 7958 05b6 0021     		movs	r1, #0
 7959              	.LBE1695:
 7960              	.LBE1697:
 7961              	.LBE1699:
 7962              	.LBE1708:
 808:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7963              		.loc 20 808 23 view .LVU2179
 7964 05b8 0122     		movs	r2, #1
 7965              	.LBB1709:
 7966              	.LBB1690:
 7967              	.LBB1688:
 7968              		.loc 22 419 24 view .LVU2180
 7969 05ba BFF35B8F 		dmb	ish
 7970              	.LBE1688:
 7971              	.LBE1690:
 7972              	.LBE1709:
 805:Veno-Echo.cpp ****         {
 7973              		.loc 20 805 9 view .LVU2181
 7974 05be 4BB1     		cbz	r3, .L420
 7975              	.LBB1710:
 7976              	.LBB1700:
 7977              	.LBB1698:
 7978              	.LBB1696:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7979              		.loc 22 397 18 view .LVU2182
 7980 05c0 BFF35B8F 		dmb	ish
 7981 05c4 2170     		strb	r1, [r4]
 7982 05c6 BFF35B8F 		dmb	ish
 7983              	.LVL483:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7984              		.loc 22 397 18 view .LVU2183
 7985              	.LBE1696:
 7986              	.LBE1698:
 7987              	.LBE1700:
 7988              	.LBE1710:
 808:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7989              		.loc 20 808 13 is_stmt 1 view .LVU2184
 808:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7990              		.loc 20 808 23 is_stmt 0 view .LVU2185
 7991 05ca 2A70     		strb	r2, [r5]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 271


 809:Veno-Echo.cpp ****         }
 7992              		.loc 20 809 13 is_stmt 1 view .LVU2186
 809:Veno-Echo.cpp ****         }
 7993              		.loc 20 809 39 is_stmt 0 view .LVU2187
 7994 05cc FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7995              	.LVL484:
 809:Veno-Echo.cpp ****         }
 7996              		.loc 20 809 23 view .LVU2188
 7997 05d0 3060     		str	r0, [r6]
 7998 05d2 EDE7     		b	.L419
 7999              	.LVL485:
 8000              	.L420:
 8001              	.LBB1711:
 8002              	.LBB1703:
 814:Veno-Echo.cpp ****            {
 8003              		.loc 20 814 25 view .LVU2189
 8004 05d4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 814:Veno-Echo.cpp ****            {
 8005              		.loc 20 814 12 view .LVU2190
 8006 05d6 012B     		cmp	r3, #1
 8007 05d8 0BD0     		beq	.L427
 8008              	.L422:
 8009              	.LBE1703:
 830:Veno-Echo.cpp ****            {
 8010              		.loc 20 830 12 is_stmt 1 view .LVU2191
 8011 05da 022B     		cmp	r3, #2
 8012 05dc E8D1     		bne	.L419
 832:Veno-Echo.cpp ****             {
 8013              		.loc 20 832 13 view .LVU2192
 832:Veno-Echo.cpp ****             {
 8014              		.loc 20 832 30 is_stmt 0 view .LVU2193
 8015 05de FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8016              	.LVL486:
 834:Veno-Echo.cpp ****             }
 8017              		.loc 20 834 21 is_stmt 1 view .LVU2194
 832:Veno-Echo.cpp ****             {
 8018              		.loc 20 832 33 is_stmt 0 view .LVU2195
 8019 05e2 3368     		ldr	r3, [r6]
 834:Veno-Echo.cpp ****             }
 8020              		.loc 20 834 31 view .LVU2196
 8021 05e4 0022     		movs	r2, #0
 832:Veno-Echo.cpp ****             {
 8022              		.loc 20 832 33 view .LVU2197
 8023 05e6 C01A     		subs	r0, r0, r3
 832:Veno-Echo.cpp ****             {
 8024              		.loc 20 832 13 view .LVU2198
 8025 05e8 B0F5966F 		cmp	r0, #1200
 8026 05ec E0D9     		bls	.L419
 834:Veno-Echo.cpp ****             }
 8027              		.loc 20 834 31 view .LVU2199
 8028 05ee 2A70     		strb	r2, [r5]
 8029 05f0 DEE7     		b	.L419
 8030              	.L427:
 8031              	.LBE1711:
 8032              	.LBE1714:
 8033              	.LBE1717:
 816:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 272


 8034              		.loc 20 816 16 is_stmt 1 view .LVU2200
 8035              	.LBB1718:
 8036              	.LBB1715:
 8037              	.LBB1712:
 8038              	.LBB1706:
 8039              	.LBB1704:
 816:Veno-Echo.cpp ****                 {
 8040              		.loc 20 816 33 is_stmt 0 view .LVU2201
 8041 05f2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8042              	.LVL487:
 816:Veno-Echo.cpp ****                 {
 8043              		.loc 20 816 36 view .LVU2202
 8044 05f6 3368     		ldr	r3, [r6]
 8045 05f8 C01A     		subs	r0, r0, r3
 816:Veno-Echo.cpp ****                 {
 8046              		.loc 20 816 16 view .LVU2203
 8047 05fa B0F57A7F 		cmp	r0, #1000
 8048 05fe 01D8     		bhi	.L423
 8049              	.L426:
 8050 0600 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8051 0602 EAE7     		b	.L422
 8052              	.L423:
 8053              	.LBB1705:
 818:Veno-Echo.cpp ****                     
 8054              		.loc 20 818 21 is_stmt 1 view .LVU2204
 820:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8055              		.loc 20 820 30 is_stmt 0 view .LVU2205
 8056 0604 DFF868C0 		ldr	ip, .L431+64
 8057 0608 27AF     		add	r7, sp, #156
 818:Veno-Echo.cpp ****                     
 8058              		.loc 20 818 31 view .LVU2206
 8059 060a 4FF0020E 		mov	lr, #2
 820:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8060              		.loc 20 820 30 view .LVU2207
 8061 060e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8062 0612 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8063 0614 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8064 0618 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8065 061a 9CE80700 		ldm	ip, {r0, r1, r2}
 8066 061e 87E80700 		stm	r7, {r0, r1, r2}
 821:Veno-Echo.cpp ****                     {
 8067              		.loc 20 821 37 view .LVU2208
 8068 0622 27A8     		add	r0, sp, #156
 818:Veno-Echo.cpp ****                     
 8069              		.loc 20 818 31 view .LVU2209
 8070 0624 85F800E0 		strb	lr, [r5]
 820:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8071              		.loc 20 820 21 is_stmt 1 view .LVU2210
 821:Veno-Echo.cpp ****                     {
 8072              		.loc 20 821 21 view .LVU2211
 821:Veno-Echo.cpp ****                     {
 8073              		.loc 20 821 37 is_stmt 0 view .LVU2212
 8074 0628 FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 8075              	.LVL488:
 8076 062c E8E7     		b	.L426
 8077              	.L432:
 8078 062e 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 273


 8079              	.L431:
 8080 0630 00000000 		.word	.LANCHOR38
 8081 0634 00004843 		.word	1128792064
 8082 0638 3333333F 		.word	1060320051
 8083 063c 00000000 		.word	.LANCHOR4
 8084 0640 00000000 		.word	.LANCHOR106
 8085 0644 00000000 		.word	.LANCHOR107
 8086 0648 00000000 		.word	.LANCHOR76
 8087 064c 0000C842 		.word	1120403456
 8088 0650 00000000 		.word	.LANCHOR16
 8089 0654 00000000 		.word	.LANCHOR108
 8090 0658 00000000 		.word	.LANCHOR109
 8091 065c 808D5B00 		.word	6000000
 8092 0660 00000000 		.word	.LANCHOR26
 8093 0664 00000000 		.word	.LANCHOR89
 8094 0668 18000000 		.word	.LANCHOR4+24
 8095 066c 00000000 		.word	_ZL13AudioCallbackPfS_j
 8096 0670 00000000 		.word	.LANCHOR15
 8097              	.LBE1705:
 8098              	.LBE1704:
 8099              	.LBE1706:
 8100              	.LBE1712:
 8101              	.LBE1715:
 8102              	.LBE1718:
 8103              		.cfi_endproc
 8104              	.LFE4311:
 8106              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8107              		.align	1
 8108              		.p2align 2,,3
 8109              		.global	_Z13TurnOnAllLEDsv
 8110              		.syntax unified
 8111              		.thumb
 8112              		.thumb_func
 8113              		.fpu fpv5-d16
 8115              	_Z13TurnOnAllLEDsv:
 8116              	.LFB4334:
1964:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8117              		.loc 20 1964 1 is_stmt 1 view -0
 8118              		.cfi_startproc
 8119              		@ args = 0, pretend = 0, frame = 0
 8120              		@ frame_needed = 0, uses_anonymous_args = 0
1965:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8121              		.loc 20 1965 5 view .LVU2214
1964:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8122              		.loc 20 1964 1 is_stmt 0 view .LVU2215
 8123 0000 08B5     		push	{r3, lr}
 8124              		.cfi_def_cfa_offset 8
 8125              		.cfi_offset 3, -8
 8126              		.cfi_offset 14, -4
1965:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8127              		.loc 20 1965 26 view .LVU2216
 8128 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8129 0006 1148     		ldr	r0, .L435
 8130 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8131              	.LVL489:
1966:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8132              		.loc 20 1966 5 is_stmt 1 view .LVU2217
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 274


1966:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8133              		.loc 20 1966 28 is_stmt 0 view .LVU2218
 8134 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8135 0010 0F48     		ldr	r0, .L435+4
 8136 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8137              	.LVL490:
1967:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8138              		.loc 20 1967 5 is_stmt 1 view .LVU2219
1967:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8139              		.loc 20 1967 28 is_stmt 0 view .LVU2220
 8140 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8141 001a 0E48     		ldr	r0, .L435+8
 8142 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8143              	.LVL491:
1968:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8144              		.loc 20 1968 5 is_stmt 1 view .LVU2221
1968:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8145              		.loc 20 1968 21 is_stmt 0 view .LVU2222
 8146 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8147 0024 0C48     		ldr	r0, .L435+12
 8148 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8149              	.LVL492:
1969:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8150              		.loc 20 1969 5 is_stmt 1 view .LVU2223
1969:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8151              		.loc 20 1969 21 is_stmt 0 view .LVU2224
 8152 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8153 002e 0B48     		ldr	r0, .L435+16
 8154 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8155              	.LVL493:
1970:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8156              		.loc 20 1970 5 is_stmt 1 view .LVU2225
1970:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8157              		.loc 20 1970 19 is_stmt 0 view .LVU2226
 8158 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8159 0038 0948     		ldr	r0, .L435+20
 8160 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8161              	.LVL494:
1971:Veno-Echo.cpp **** }
 8162              		.loc 20 1971 5 is_stmt 1 view .LVU2227
1971:Veno-Echo.cpp **** }
 8163              		.loc 20 1971 19 is_stmt 0 view .LVU2228
 8164 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8165 0042 0848     		ldr	r0, .L435+24
1972:Veno-Echo.cpp **** 
 8166              		.loc 20 1972 1 view .LVU2229
 8167 0044 BDE80840 		pop	{r3, lr}
 8168              		.cfi_restore 14
 8169              		.cfi_restore 3
 8170              		.cfi_def_cfa_offset 0
1971:Veno-Echo.cpp **** }
 8171              		.loc 20 1971 19 view .LVU2230
 8172 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8173              	.LVL495:
 8174              	.L436:
 8175              		.align	2
 8176              	.L435:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 275


 8177 004c 00000000 		.word	.LANCHOR89
 8178 0050 04000000 		.word	.LANCHOR0+4
 8179 0054 04000000 		.word	.LANCHOR1+4
 8180 0058 00000000 		.word	.LANCHOR92
 8181 005c 00000000 		.word	.LANCHOR93
 8182 0060 00000000 		.word	.LANCHOR94
 8183 0064 00000000 		.word	.LANCHOR95
 8184              		.cfi_endproc
 8185              	.LFE4334:
 8187              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8188              		.align	1
 8189              		.p2align 2,,3
 8190              		.global	_Z12ResetAllLEDsv
 8191              		.syntax unified
 8192              		.thumb
 8193              		.thumb_func
 8194              		.fpu fpv5-d16
 8196              	_Z12ResetAllLEDsv:
 8197              	.LFB4335:
1975:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8198              		.loc 20 1975 1 is_stmt 1 view -0
 8199              		.cfi_startproc
 8200              		@ args = 0, pretend = 0, frame = 0
 8201              		@ frame_needed = 0, uses_anonymous_args = 0
1976:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8202              		.loc 20 1976 5 view .LVU2232
1975:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8203              		.loc 20 1975 1 is_stmt 0 view .LVU2233
 8204 0000 08B5     		push	{r3, lr}
 8205              		.cfi_def_cfa_offset 8
 8206              		.cfi_offset 3, -8
 8207              		.cfi_offset 14, -4
1976:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8208              		.loc 20 1976 26 view .LVU2234
 8209 0002 9FED1E0A 		vldr.32	s0, .L444
 8210 0006 1E48     		ldr	r0, .L444+4
 8211 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8212              	.LVL496:
1977:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8213              		.loc 20 1977 5 is_stmt 1 view .LVU2235
1977:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8214              		.loc 20 1977 28 is_stmt 0 view .LVU2236
 8215 000c 9FED1B0A 		vldr.32	s0, .L444
 8216 0010 1C48     		ldr	r0, .L444+8
 8217 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8218              	.LVL497:
1978:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8219              		.loc 20 1978 5 is_stmt 1 view .LVU2237
1978:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8220              		.loc 20 1978 28 is_stmt 0 view .LVU2238
 8221 0016 1C48     		ldr	r0, .L444+12
 8222 0018 9FED180A 		vldr.32	s0, .L444
 8223 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8224              	.LVL498:
1979:Veno-Echo.cpp ****     {
 8225              		.loc 20 1979 5 is_stmt 1 view .LVU2239
1979:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 276


 8226              		.loc 20 1979 26 is_stmt 0 view .LVU2240
 8227 0020 1A48     		ldr	r0, .L444+16
 8228 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8229              	.LVL499:
1979:Veno-Echo.cpp ****     {
 8230              		.loc 20 1979 5 view .LVU2241
 8231 0026 C8B9     		cbnz	r0, .L438
1981:Veno-Echo.cpp ****     }
 8232              		.loc 20 1981 9 is_stmt 1 view .LVU2242
1981:Veno-Echo.cpp ****     }
 8233              		.loc 20 1981 25 is_stmt 0 view .LVU2243
 8234 0028 1848     		ldr	r0, .L444+16
 8235 002a 9FED140A 		vldr.32	s0, .L444
 8236 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8237              	.LVL500:
1988:Veno-Echo.cpp ****     {
 8238              		.loc 20 1988 5 is_stmt 1 view .LVU2244
1988:Veno-Echo.cpp ****     {
 8239              		.loc 20 1988 26 is_stmt 0 view .LVU2245
 8240 0032 1748     		ldr	r0, .L444+20
 8241 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8242              	.LVL501:
1988:Veno-Echo.cpp ****     {
 8243              		.loc 20 1988 5 view .LVU2246
 8244 0038 D0B9     		cbnz	r0, .L440
 8245              	.L443:
1990:Veno-Echo.cpp ****     }
 8246              		.loc 20 1990 9 is_stmt 1 view .LVU2247
1990:Veno-Echo.cpp ****     }
 8247              		.loc 20 1990 25 is_stmt 0 view .LVU2248
 8248 003a 9FED100A 		vldr.32	s0, .L444
 8249 003e 1448     		ldr	r0, .L444+20
 8250 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8251              	.LVL502:
 8252              	.L441:
1997:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8253              		.loc 20 1997 5 is_stmt 1 view .LVU2249
1997:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8254              		.loc 20 1997 19 is_stmt 0 view .LVU2250
 8255 0044 9FED0D0A 		vldr.32	s0, .L444
 8256 0048 1248     		ldr	r0, .L444+24
 8257 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8258              	.LVL503:
1998:Veno-Echo.cpp **** }
 8259              		.loc 20 1998 5 is_stmt 1 view .LVU2251
1998:Veno-Echo.cpp **** }
 8260              		.loc 20 1998 19 is_stmt 0 view .LVU2252
 8261 004e 9FED0B0A 		vldr.32	s0, .L444
 8262 0052 1148     		ldr	r0, .L444+28
1999:Veno-Echo.cpp **** 
 8263              		.loc 20 1999 1 view .LVU2253
 8264 0054 BDE80840 		pop	{r3, lr}
 8265              		.cfi_remember_state
 8266              		.cfi_restore 14
 8267              		.cfi_restore 3
 8268              		.cfi_def_cfa_offset 0
1998:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 277


 8269              		.loc 20 1998 19 view .LVU2254
 8270 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8271              	.LVL504:
 8272              	.L438:
 8273              		.cfi_restore_state
1985:Veno-Echo.cpp ****     }
 8274              		.loc 20 1985 8 is_stmt 1 view .LVU2255
1985:Veno-Echo.cpp ****     }
 8275              		.loc 20 1985 24 is_stmt 0 view .LVU2256
 8276 005c 0B48     		ldr	r0, .L444+16
 8277 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8278 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8279              	.LVL505:
1988:Veno-Echo.cpp ****     {
 8280              		.loc 20 1988 5 is_stmt 1 view .LVU2257
1988:Veno-Echo.cpp ****     {
 8281              		.loc 20 1988 26 is_stmt 0 view .LVU2258
 8282 0066 0A48     		ldr	r0, .L444+20
 8283 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8284              	.LVL506:
1988:Veno-Echo.cpp ****     {
 8285              		.loc 20 1988 5 view .LVU2259
 8286 006c 0028     		cmp	r0, #0
 8287 006e E4D0     		beq	.L443
 8288              	.L440:
1994:Veno-Echo.cpp ****     }
 8289              		.loc 20 1994 9 is_stmt 1 view .LVU2260
1994:Veno-Echo.cpp ****     }
 8290              		.loc 20 1994 25 is_stmt 0 view .LVU2261
 8291 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8292 0074 0648     		ldr	r0, .L444+20
 8293 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8294              	.LVL507:
 8295 007a E3E7     		b	.L441
 8296              	.L445:
 8297              		.align	2
 8298              	.L444:
 8299 007c 00000000 		.word	0
 8300 0080 00000000 		.word	.LANCHOR89
 8301 0084 04000000 		.word	.LANCHOR0+4
 8302 0088 04000000 		.word	.LANCHOR1+4
 8303 008c 00000000 		.word	.LANCHOR92
 8304 0090 00000000 		.word	.LANCHOR93
 8305 0094 00000000 		.word	.LANCHOR94
 8306 0098 00000000 		.word	.LANCHOR95
 8307              		.cfi_endproc
 8308              	.LFE4335:
 8310              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8311              		.align	1
 8312              		.p2align 2,,3
 8313              		.global	_Z14Update_Buttonsv
 8314              		.syntax unified
 8315              		.thumb
 8316              		.thumb_func
 8317              		.fpu fpv5-d16
 8319              	_Z14Update_Buttonsv:
 8320              	.LFB4329:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 278


1642:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8321              		.loc 20 1642 1 is_stmt 1 view -0
 8322              		.cfi_startproc
 8323              		@ args = 0, pretend = 0, frame = 0
 8324              		@ frame_needed = 0, uses_anonymous_args = 0
1643:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8325              		.loc 20 1643 5 view .LVU2263
1644:Veno-Echo.cpp ****     static int buttonstate{};
 8326              		.loc 20 1644 5 view .LVU2264
1645:Veno-Echo.cpp **** 
 8327              		.loc 20 1645 5 view .LVU2265
1647:Veno-Echo.cpp ****     Rev_R_sw.update();
 8328              		.loc 20 1647 5 view .LVU2266
1642:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8329              		.loc 20 1642 1 is_stmt 0 view .LVU2267
 8330 0000 70B5     		push	{r4, r5, r6, lr}
 8331              		.cfi_def_cfa_offset 16
 8332              		.cfi_offset 4, -16
 8333              		.cfi_offset 5, -12
 8334              		.cfi_offset 6, -8
 8335              		.cfi_offset 14, -4
1647:Veno-Echo.cpp ****     Rev_R_sw.update();
 8336              		.loc 20 1647 20 view .LVU2268
 8337 0002 9948     		ldr	r0, .L501
 8338 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8339              	.LVL508:
1648:Veno-Echo.cpp ****     LPF_sw.update();
 8340              		.loc 20 1648 5 is_stmt 1 view .LVU2269
1648:Veno-Echo.cpp ****     LPF_sw.update();
 8341              		.loc 20 1648 20 is_stmt 0 view .LVU2270
 8342 0008 9848     		ldr	r0, .L501+4
 8343 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8344              	.LVL509:
1649:Veno-Echo.cpp ****     HPF_sw.update();
 8345              		.loc 20 1649 5 is_stmt 1 view .LVU2271
1649:Veno-Echo.cpp ****     HPF_sw.update();
 8346              		.loc 20 1649 18 is_stmt 0 view .LVU2272
 8347 000e 9848     		ldr	r0, .L501+8
 8348 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8349              	.LVL510:
1650:Veno-Echo.cpp ****     Tap_Button.update();
 8350              		.loc 20 1650 5 is_stmt 1 view .LVU2273
1653:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8351              		.loc 20 1653 26 is_stmt 0 view .LVU2274
 8352 0014 974C     		ldr	r4, .L501+12
1650:Veno-Echo.cpp ****     Tap_Button.update();
 8353              		.loc 20 1650 18 view .LVU2275
 8354 0016 9848     		ldr	r0, .L501+16
 8355 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8356              	.LVL511:
1651:Veno-Echo.cpp **** 
 8357              		.loc 20 1651 5 is_stmt 1 view .LVU2276
1651:Veno-Echo.cpp **** 
 8358              		.loc 20 1651 22 is_stmt 0 view .LVU2277
 8359 001c 9748     		ldr	r0, .L501+20
 8360 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8361              	.LVL512:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 279


1653:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8362              		.loc 20 1653 5 is_stmt 1 view .LVU2278
1653:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8363              		.loc 20 1653 26 is_stmt 0 view .LVU2279
 8364 0022 2046     		mov	r0, r4
 8365 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8366              	.LVL513:
1654:Veno-Echo.cpp ****     //TapButton.Debounce();
 8367              		.loc 20 1654 5 is_stmt 1 view .LVU2280
1654:Veno-Echo.cpp ****     //TapButton.Debounce();
 8368              		.loc 20 1654 26 is_stmt 0 view .LVU2281
 8369 0028 9548     		ldr	r0, .L501+24
 8370 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8371              	.LVL514:
1656:Veno-Echo.cpp ****     ClockIn.Debounce();
 8372              		.loc 20 1656 5 is_stmt 1 view .LVU2282
1656:Veno-Echo.cpp ****     ClockIn.Debounce();
 8373              		.loc 20 1656 18 is_stmt 0 view .LVU2283
 8374 002e 9548     		ldr	r0, .L501+28
 8375 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8376              	.LVL515:
1657:Veno-Echo.cpp ****     //gate inputs
 8377              		.loc 20 1657 5 is_stmt 1 view .LVU2284
1657:Veno-Echo.cpp ****     //gate inputs
 8378              		.loc 20 1657 21 is_stmt 0 view .LVU2285
 8379 0034 9448     		ldr	r0, .L501+32
 8380 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8381              	.LVL516:
1659:Veno-Echo.cpp ****     {
 8382              		.loc 20 1659 5 is_stmt 1 view .LVU2286
 8383              		.loc 1 69 38 view .LVU2287
1659:Veno-Echo.cpp ****     {
 8384              		.loc 20 1659 5 is_stmt 0 view .LVU2288
 8385 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8386 003c 7F2B     		cmp	r3, #127
 8387 003e 00F0DC80 		beq	.L493
 8388              	.L447:
1673:Veno-Echo.cpp ****     {
 8389              		.loc 20 1673 5 is_stmt 1 view .LVU2289
 8390              	.LVL517:
 8391              		.loc 1 69 38 view .LVU2290
1673:Veno-Echo.cpp ****     {
 8392              		.loc 20 1673 32 is_stmt 0 view .LVU2291
 8393 0042 8F4B     		ldr	r3, .L501+24
1673:Veno-Echo.cpp ****     {
 8394              		.loc 20 1673 5 view .LVU2292
 8395 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8396 0046 7F2B     		cmp	r3, #127
 8397 0048 00F0BE80 		beq	.L494
 8398              	.L449:
1689:Veno-Echo.cpp ****     {
 8399              		.loc 20 1689 5 is_stmt 1 view .LVU2293
1689:Veno-Echo.cpp ****     {
 8400              		.loc 20 1689 28 is_stmt 0 view .LVU2294
 8401 004c 8648     		ldr	r0, .L501
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8402              		.loc 20 1691 21 view .LVU2295
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 280


 8403 004e 8F4C     		ldr	r4, .L501+36
1689:Veno-Echo.cpp ****     {
 8404              		.loc 20 1689 28 view .LVU2296
 8405 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8406              	.LVL518:
1689:Veno-Echo.cpp ****     {
 8407              		.loc 20 1689 5 view .LVU2297
 8408 0054 D0B1     		cbz	r0, .L451
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8409              		.loc 20 1691 9 is_stmt 1 view .LVU2298
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8410              		.loc 20 1691 21 is_stmt 0 view .LVU2299
 8411 0056 2368     		ldr	r3, [r4]
 8412 0058 0133     		adds	r3, r3, #1
1692:Veno-Echo.cpp ****         {
 8413              		.loc 20 1692 9 view .LVU2300
 8414 005a 032B     		cmp	r3, #3
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8415              		.loc 20 1691 21 view .LVU2301
 8416 005c 2360     		str	r3, [r4]
1692:Veno-Echo.cpp ****         {
 8417              		.loc 20 1692 9 is_stmt 1 view .LVU2302
 8418 005e 00F0E580 		beq	.L495
 8419              	.L452:
1696:Veno-Echo.cpp ****         {
 8420              		.loc 20 1696 9 view .LVU2303
1696:Veno-Echo.cpp ****         {
 8421              		.loc 20 1696 29 is_stmt 0 view .LVU2304
 8422 0062 8148     		ldr	r0, .L501
 8423 0064 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8424              	.LVL519:
1702:Veno-Echo.cpp ****         }
 8425              		.loc 20 1702 31 view .LVU2305
 8426 0068 F7EE007A 		vmov.f32	s15, #1.0e+0
 8427 006c 9FED887A 		vldr.32	s14, .L501+40
 8428 0070 0028     		cmp	r0, #0
 8429 0072 8849     		ldr	r1, .L501+44
 8430              	.LBB1719:
 8431              	.LBB1720:
 8432              	.LBB1721:
 8433              	.LBB1722:
 8434              	.LBB1723:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8435              		.loc 22 397 18 view .LVU2306
 8436 0074 4FF00102 		mov	r2, #1
 8437 0078 874B     		ldr	r3, .L501+48
 8438              	.LBE1723:
 8439              	.LBE1722:
 8440              	.LBE1721:
 8441              	.LBE1720:
 8442              	.LBE1719:
1702:Veno-Echo.cpp ****         }
 8443              		.loc 20 1702 31 view .LVU2307
 8444 007a 47FE277A 		vseleq.f32	s15, s14, s15
 8445 007e C1ED097A 		vstr.32	s15, [r1, #36]
1704:Veno-Echo.cpp ****     }
 8446              		.loc 20 1704 9 is_stmt 1 view .LVU2308
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 281


 8447              	.LVL520:
 8448              	.LBB1728:
 8449              	.LBI1719:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8450              		.loc 23 80 5 view .LVU2309
 8451              	.LBB1727:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8452              		.loc 23 81 7 view .LVU2310
 8453              	.LBB1726:
 8454              	.LBI1721:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8455              		.loc 22 288 7 view .LVU2311
 8456              	.LBB1725:
 8457              	.LBI1722:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8458              		.loc 22 390 7 view .LVU2312
 8459              	.LBB1724:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8460              		.loc 22 397 18 is_stmt 0 view .LVU2313
 8461 0082 BFF35B8F 		dmb	ish
 8462 0086 1A70     		strb	r2, [r3]
 8463 0088 BFF35B8F 		dmb	ish
 8464              	.LVL521:
 8465              	.L451:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8466              		.loc 22 397 18 view .LVU2314
 8467              	.LBE1724:
 8468              	.LBE1725:
 8469              	.LBE1726:
 8470              	.LBE1727:
 8471              	.LBE1728:
1707:Veno-Echo.cpp ****     {
 8472              		.loc 20 1707 5 is_stmt 1 view .LVU2315
1707:Veno-Echo.cpp ****     {
 8473              		.loc 20 1707 29 is_stmt 0 view .LVU2316
 8474 008c 7648     		ldr	r0, .L501
 8475 008e FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8476              	.LVL522:
1707:Veno-Echo.cpp ****     {
 8477              		.loc 20 1707 5 view .LVU2317
 8478 0092 10B1     		cbz	r0, .L454
1709:Veno-Echo.cpp ****     }
 8479              		.loc 20 1709 9 is_stmt 1 view .LVU2318
1709:Veno-Echo.cpp ****     }
 8480              		.loc 20 1709 21 is_stmt 0 view .LVU2319
 8481 0094 2368     		ldr	r3, [r4]
 8482 0096 013B     		subs	r3, r3, #1
 8483 0098 2360     		str	r3, [r4]
 8484              	.L454:
1712:Veno-Echo.cpp ****     {
 8485              		.loc 20 1712 5 is_stmt 1 view .LVU2320
1712:Veno-Echo.cpp ****     {
 8486              		.loc 20 1712 28 is_stmt 0 view .LVU2321
 8487 009a 7448     		ldr	r0, .L501+4
 8488 009c FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8489              	.LVL523:
1712:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 282


 8490              		.loc 20 1712 5 view .LVU2322
 8491 00a0 D0B1     		cbz	r0, .L455
1714:Veno-Echo.cpp ****         if (buttonstate == 3)
 8492              		.loc 20 1714 9 is_stmt 1 view .LVU2323
1714:Veno-Echo.cpp ****         if (buttonstate == 3)
 8493              		.loc 20 1714 21 is_stmt 0 view .LVU2324
 8494 00a2 2368     		ldr	r3, [r4]
 8495 00a4 0133     		adds	r3, r3, #1
1715:Veno-Echo.cpp ****         {
 8496              		.loc 20 1715 9 view .LVU2325
 8497 00a6 032B     		cmp	r3, #3
1714:Veno-Echo.cpp ****         if (buttonstate == 3)
 8498              		.loc 20 1714 21 view .LVU2326
 8499 00a8 2360     		str	r3, [r4]
1715:Veno-Echo.cpp ****         {
 8500              		.loc 20 1715 9 is_stmt 1 view .LVU2327
 8501 00aa 00F0C480 		beq	.L496
 8502              	.L456:
1719:Veno-Echo.cpp ****         {
 8503              		.loc 20 1719 9 view .LVU2328
1719:Veno-Echo.cpp ****         {
 8504              		.loc 20 1719 29 is_stmt 0 view .LVU2329
 8505 00ae 6F48     		ldr	r0, .L501+4
 8506 00b0 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8507              	.LVL524:
1725:Veno-Echo.cpp ****         }
 8508              		.loc 20 1725 31 view .LVU2330
 8509 00b4 F7EE007A 		vmov.f32	s15, #1.0e+0
 8510 00b8 9FED757A 		vldr.32	s14, .L501+40
 8511 00bc 0028     		cmp	r0, #0
 8512 00be 7549     		ldr	r1, .L501+44
 8513              	.LBB1729:
 8514              	.LBB1730:
 8515              	.LBB1731:
 8516              	.LBB1732:
 8517              	.LBB1733:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8518              		.loc 22 397 18 view .LVU2331
 8519 00c0 4FF00102 		mov	r2, #1
 8520 00c4 744B     		ldr	r3, .L501+48
 8521              	.LBE1733:
 8522              	.LBE1732:
 8523              	.LBE1731:
 8524              	.LBE1730:
 8525              	.LBE1729:
1725:Veno-Echo.cpp ****         }
 8526              		.loc 20 1725 31 view .LVU2332
 8527 00c6 47FE277A 		vseleq.f32	s15, s14, s15
 8528 00ca C1ED0A7A 		vstr.32	s15, [r1, #40]
1727:Veno-Echo.cpp ****     }
 8529              		.loc 20 1727 9 is_stmt 1 view .LVU2333
 8530              	.LVL525:
 8531              	.LBB1738:
 8532              	.LBI1729:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8533              		.loc 23 80 5 view .LVU2334
 8534              	.LBB1737:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 283


  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8535              		.loc 23 81 7 view .LVU2335
 8536              	.LBB1736:
 8537              	.LBI1731:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8538              		.loc 22 288 7 view .LVU2336
 8539              	.LBB1735:
 8540              	.LBI1732:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8541              		.loc 22 390 7 view .LVU2337
 8542              	.LBB1734:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8543              		.loc 22 397 18 is_stmt 0 view .LVU2338
 8544 00ce BFF35B8F 		dmb	ish
 8545 00d2 1A70     		strb	r2, [r3]
 8546 00d4 BFF35B8F 		dmb	ish
 8547              	.LVL526:
 8548              	.L455:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8549              		.loc 22 397 18 view .LVU2339
 8550              	.LBE1734:
 8551              	.LBE1735:
 8552              	.LBE1736:
 8553              	.LBE1737:
 8554              	.LBE1738:
1730:Veno-Echo.cpp ****     {
 8555              		.loc 20 1730 5 is_stmt 1 view .LVU2340
1730:Veno-Echo.cpp ****     {
 8556              		.loc 20 1730 29 is_stmt 0 view .LVU2341
 8557 00d8 6448     		ldr	r0, .L501+4
 8558 00da FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8559              	.LVL527:
1730:Veno-Echo.cpp ****     {
 8560              		.loc 20 1730 5 view .LVU2342
 8561 00de 10B1     		cbz	r0, .L458
1732:Veno-Echo.cpp ****     }
 8562              		.loc 20 1732 9 is_stmt 1 view .LVU2343
1732:Veno-Echo.cpp ****     }
 8563              		.loc 20 1732 21 is_stmt 0 view .LVU2344
 8564 00e0 2368     		ldr	r3, [r4]
 8565 00e2 013B     		subs	r3, r3, #1
 8566 00e4 2360     		str	r3, [r4]
 8567              	.L458:
1735:Veno-Echo.cpp ****     {
 8568              		.loc 20 1735 5 is_stmt 1 view .LVU2345
1735:Veno-Echo.cpp ****     {
 8569              		.loc 20 1735 30 is_stmt 0 view .LVU2346
 8570 00e6 6548     		ldr	r0, .L501+20
 8571 00e8 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8572              	.LVL528:
1735:Veno-Echo.cpp ****     {
 8573              		.loc 20 1735 5 view .LVU2347
 8574 00ec 0028     		cmp	r0, #0
 8575 00ee 55D1     		bne	.L497
 8576              	.L460:
1756:Veno-Echo.cpp ****     {
 8577              		.loc 20 1756 5 is_stmt 1 view .LVU2348
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 284


1756:Veno-Echo.cpp ****     {
 8578              		.loc 20 1756 31 is_stmt 0 view .LVU2349
 8579 00f0 6248     		ldr	r0, .L501+20
 8580 00f2 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8581              	.LVL529:
1756:Veno-Echo.cpp ****     {
 8582              		.loc 20 1756 5 view .LVU2350
 8583 00f6 38B1     		cbz	r0, .L463
1758:Veno-Echo.cpp ****         buttonstate -= 1;
 8584              		.loc 20 1758 9 is_stmt 1 view .LVU2351
1759:Veno-Echo.cpp ****         mute = false;
 8585              		.loc 20 1759 21 is_stmt 0 view .LVU2352
 8586 00f8 2368     		ldr	r3, [r4]
1758:Veno-Echo.cpp ****         buttonstate -= 1;
 8587              		.loc 20 1758 15 view .LVU2353
 8588 00fa 0022     		movs	r2, #0
 8589 00fc 6748     		ldr	r0, .L501+52
1759:Veno-Echo.cpp ****         mute = false;
 8590              		.loc 20 1759 21 view .LVU2354
 8591 00fe 013B     		subs	r3, r3, #1
1760:Veno-Echo.cpp ****     }
 8592              		.loc 20 1760 14 view .LVU2355
 8593 0100 6749     		ldr	r1, .L501+56
1758:Veno-Echo.cpp ****         buttonstate -= 1;
 8594              		.loc 20 1758 15 view .LVU2356
 8595 0102 0270     		strb	r2, [r0]
1759:Veno-Echo.cpp ****         mute = false;
 8596              		.loc 20 1759 9 is_stmt 1 view .LVU2357
1759:Veno-Echo.cpp ****         mute = false;
 8597              		.loc 20 1759 21 is_stmt 0 view .LVU2358
 8598 0104 2360     		str	r3, [r4]
1760:Veno-Echo.cpp ****     }
 8599              		.loc 20 1760 9 is_stmt 1 view .LVU2359
1760:Veno-Echo.cpp ****     }
 8600              		.loc 20 1760 14 is_stmt 0 view .LVU2360
 8601 0106 0A70     		strb	r2, [r1]
 8602              	.L463:
1763:Veno-Echo.cpp ****     {
 8603              		.loc 20 1763 5 is_stmt 1 view .LVU2361
1763:Veno-Echo.cpp ****     {
 8604              		.loc 20 1763 28 is_stmt 0 view .LVU2362
 8605 0108 5C48     		ldr	r0, .L501+20
 8606 010a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8607              	.LVL530:
1763:Veno-Echo.cpp ****     {
 8608              		.loc 20 1763 5 view .LVU2363
 8609 010e 60B9     		cbnz	r0, .L498
 8610              	.L465:
1771:Veno-Echo.cpp ****     {
 8611              		.loc 20 1771 5 is_stmt 1 view .LVU2364
 8612 0110 2368     		ldr	r3, [r4]
 8613 0112 032B     		cmp	r3, #3
 8614 0114 16D0     		beq	.L499
 8615              	.L468:
1788:Veno-Echo.cpp **** }
 8616              		.loc 20 1788 5 view .LVU2365
 8617              	.LBB1739:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 285


 8618              	.LBI1739:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8619              		.loc 1 75 17 view .LVU2366
 8620              	.LVL531:
 8621              	.LBB1740:
 8622              		.loc 1 75 35 view .LVU2367
 8623              	.LBE1740:
 8624              	.LBE1739:
1788:Veno-Echo.cpp **** }
 8625              		.loc 20 1788 31 is_stmt 0 view .LVU2368
 8626 0116 5B4B     		ldr	r3, .L501+28
1788:Veno-Echo.cpp **** }
 8627              		.loc 20 1788 14 view .LVU2369
 8628 0118 624A     		ldr	r2, .L501+60
 8629              	.LBB1742:
 8630              	.LBB1741:
 8631              		.loc 1 75 52 view .LVU2370
 8632 011a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8633 011c A3F1FF03 		sub	r3, #255
 8634 0120 B3FA83F3 		clz	r3, r3
 8635 0124 5B09     		lsrs	r3, r3, #5
 8636 0126 1370     		strb	r3, [r2]
 8637              	.LBE1741:
 8638              	.LBE1742:
1789:Veno-Echo.cpp **** 
 8639              		.loc 20 1789 1 view .LVU2371
 8640 0128 70BD     		pop	{r4, r5, r6, pc}
 8641              	.LVL532:
 8642              	.L498:
1765:Veno-Echo.cpp ****         {
 8643              		.loc 20 1765 9 is_stmt 1 view .LVU2372
1765:Veno-Echo.cpp ****         {
 8644              		.loc 20 1765 29 is_stmt 0 view .LVU2373
 8645 012a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8646              	.LVL533:
1765:Veno-Echo.cpp ****         {
 8647              		.loc 20 1765 32 view .LVU2374
 8648 012e 5E4B     		ldr	r3, .L501+64
 8649 0130 1B68     		ldr	r3, [r3]
 8650 0132 C01A     		subs	r0, r0, r3
1765:Veno-Echo.cpp ****         {
 8651              		.loc 20 1765 9 view .LVU2375
 8652 0134 3228     		cmp	r0, #50
 8653 0136 EBD9     		bls	.L465
1767:Veno-Echo.cpp ****         } 
 8654              		.loc 20 1767 13 is_stmt 1 view .LVU2376
1767:Veno-Echo.cpp ****         } 
 8655              		.loc 20 1767 19 is_stmt 0 view .LVU2377
 8656 0138 584B     		ldr	r3, .L501+52
 8657 013a 0122     		movs	r2, #1
 8658 013c 1A70     		strb	r2, [r3]
1771:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 286


 8659              		.loc 20 1771 5 is_stmt 1 view .LVU2378
 8660 013e 2368     		ldr	r3, [r4]
 8661 0140 032B     		cmp	r3, #3
 8662 0142 E8D1     		bne	.L468
 8663              	.L499:
1774:Veno-Echo.cpp ****             {
 8664              		.loc 20 1774 13 view .LVU2379
1774:Veno-Echo.cpp ****             {
 8665              		.loc 20 1774 36 is_stmt 0 view .LVU2380
 8666 0144 594E     		ldr	r6, .L501+68
1774:Veno-Echo.cpp ****             {
 8667              		.loc 20 1774 33 view .LVU2381
 8668 0146 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8669              	.LVL534:
1774:Veno-Echo.cpp ****             {
 8670              		.loc 20 1774 13 view .LVU2382
 8671 014a 40F6B833 		movw	r3, #3000
1774:Veno-Echo.cpp ****             {
 8672              		.loc 20 1774 36 view .LVU2383
 8673 014e 3268     		ldr	r2, [r6]
 8674 0150 801A     		subs	r0, r0, r2
1774:Veno-Echo.cpp ****             {
 8675              		.loc 20 1774 13 view .LVU2384
 8676 0152 9842     		cmp	r0, r3
 8677 0154 DFD9     		bls	.L468
1776:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8678              		.loc 20 1776 17 is_stmt 1 view .LVU2385
1776:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8679              		.loc 20 1776 32 is_stmt 0 view .LVU2386
 8680 0156 4448     		ldr	r0, .L501
 8681 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8682              	.LVL535:
1777:Veno-Echo.cpp ****                 ResetAllLEDs();
 8683              		.loc 20 1777 17 is_stmt 1 view .LVU2387
1777:Veno-Echo.cpp ****                 ResetAllLEDs();
 8684              		.loc 20 1777 32 is_stmt 0 view .LVU2388
 8685 015c 4348     		ldr	r0, .L501+4
 8686 015e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8687              	.LVL536:
1778:Veno-Echo.cpp ****                 //don't let reset or shift update
 8688              		.loc 20 1778 17 is_stmt 1 view .LVU2389
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8689              		.loc 20 1782 29 is_stmt 0 view .LVU2390
 8690 0162 534D     		ldr	r5, .L501+72
1778:Veno-Echo.cpp ****                 //don't let reset or shift update
 8691              		.loc 20 1778 29 view .LVU2391
 8692 0164 FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8693              	.LVL537:
1780:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8694              		.loc 20 1780 17 is_stmt 1 view .LVU2392
1780:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8695              		.loc 20 1780 23 is_stmt 0 view .LVU2393
 8696 0168 4C4B     		ldr	r3, .L501+52
 8697 016a 0022     		movs	r2, #0
1781:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8698              		.loc 20 1781 30 view .LVU2394
 8699 016c 5048     		ldr	r0, .L501+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 287


1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8700              		.loc 20 1782 29 view .LVU2395
 8701 016e 494C     		ldr	r4, .L501+44
1780:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8702              		.loc 20 1780 23 view .LVU2396
 8703 0170 1A70     		strb	r2, [r3]
1781:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8704              		.loc 20 1781 17 is_stmt 1 view .LVU2397
1781:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8705              		.loc 20 1781 30 is_stmt 0 view .LVU2398
 8706 0172 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8707              	.LVL538:
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8708              		.loc 20 1782 17 is_stmt 1 view .LVU2399
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8709              		.loc 20 1782 29 is_stmt 0 view .LVU2400
 8710 0176 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8711 0178 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8712 017a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8713 017c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8714 017e 95E80700 		ldm	r5, {r0, r1, r2}
 8715 0182 84E80700 		stm	r4, {r0, r1, r2}
1783:Veno-Echo.cpp ****                 save_flag = true;
 8716              		.loc 20 1783 17 is_stmt 1 view .LVU2401
1783:Veno-Echo.cpp ****                 save_flag = true;
 8717              		.loc 20 1783 43 is_stmt 0 view .LVU2402
 8718 0186 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8719              	.LVL539:
 8720              	.LBB1743:
 8721              	.LBB1744:
 8722              	.LBB1745:
 8723              	.LBB1746:
 8724              	.LBB1747:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8725              		.loc 22 397 18 view .LVU2403
 8726 018a 434B     		ldr	r3, .L501+48
 8727 018c 0122     		movs	r2, #1
 8728              	.LBE1747:
 8729              	.LBE1746:
 8730              	.LBE1745:
 8731              	.LBE1744:
 8732              	.LBE1743:
1783:Veno-Echo.cpp ****                 save_flag = true;
 8733              		.loc 20 1783 27 view .LVU2404
 8734 018e 3060     		str	r0, [r6]
1784:Veno-Echo.cpp ****             }
 8735              		.loc 20 1784 17 is_stmt 1 view .LVU2405
 8736              	.LVL540:
 8737              	.LBB1752:
 8738              	.LBI1743:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8739              		.loc 23 80 5 view .LVU2406
 8740              	.LBB1751:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8741              		.loc 23 81 7 view .LVU2407
 8742              	.LBB1750:
 8743              	.LBI1745:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 288


 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8744              		.loc 22 288 7 view .LVU2408
 8745              	.LBB1749:
 8746              	.LBI1746:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8747              		.loc 22 390 7 view .LVU2409
 8748              	.LBB1748:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8749              		.loc 22 397 18 is_stmt 0 view .LVU2410
 8750 0190 BFF35B8F 		dmb	ish
 8751 0194 1A70     		strb	r2, [r3]
 8752 0196 BFF35B8F 		dmb	ish
 8753              	.LVL541:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8754              		.loc 22 397 18 view .LVU2411
 8755              	.LBE1748:
 8756              	.LBE1749:
 8757              	.LBE1750:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8758              		.loc 23 81 35 view .LVU2412
 8759 019a BCE7     		b	.L468
 8760              	.LVL542:
 8761              	.L497:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8762              		.loc 23 81 35 view .LVU2413
 8763              	.LBE1751:
 8764              	.LBE1752:
1737:Veno-Echo.cpp ****         {
 8765              		.loc 20 1737 9 is_stmt 1 view .LVU2414
1737:Veno-Echo.cpp ****         {
 8766              		.loc 20 1737 25 is_stmt 0 view .LVU2415
 8767 019c 4548     		ldr	r0, .L501+76
 8768 019e FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8769              	.LVL543:
1737:Veno-Echo.cpp ****         {
 8770              		.loc 20 1737 9 view .LVU2416
 8771 01a2 0028     		cmp	r0, #0
 8772 01a4 4CD1     		bne	.L500
 8773              	.L461:
1743:Veno-Echo.cpp ****         
 8774              		.loc 20 1743 9 is_stmt 1 view .LVU2417
1743:Veno-Echo.cpp ****         
 8775              		.loc 20 1743 33 is_stmt 0 view .LVU2418
 8776 01a6 4448     		ldr	r0, .L501+80
 8777 01a8 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8778              	.LVL544:
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8779              		.loc 20 1746 9 is_stmt 1 view .LVU2419
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8780              		.loc 20 1746 35 is_stmt 0 view .LVU2420
 8781 01ac FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8782              	.LVL545:
1747:Veno-Echo.cpp ****         
 8783              		.loc 20 1747 21 view .LVU2421
 8784 01b0 2368     		ldr	r3, [r4]
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8785              		.loc 20 1746 19 view .LVU2422
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 289


 8786 01b2 3D4A     		ldr	r2, .L501+64
1747:Veno-Echo.cpp ****         
 8787              		.loc 20 1747 21 view .LVU2423
 8788 01b4 0133     		adds	r3, r3, #1
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8789              		.loc 20 1746 19 view .LVU2424
 8790 01b6 1060     		str	r0, [r2]
1747:Veno-Echo.cpp ****         
 8791              		.loc 20 1747 9 is_stmt 1 view .LVU2425
1749:Veno-Echo.cpp ****         {
 8792              		.loc 20 1749 9 is_stmt 0 view .LVU2426
 8793 01b8 032B     		cmp	r3, #3
1747:Veno-Echo.cpp ****         
 8794              		.loc 20 1747 21 view .LVU2427
 8795 01ba 2360     		str	r3, [r4]
1749:Veno-Echo.cpp ****         {
 8796              		.loc 20 1749 9 is_stmt 1 view .LVU2428
 8797 01bc 98D1     		bne	.L460
1751:Veno-Echo.cpp ****         }
 8798              		.loc 20 1751 13 view .LVU2429
1751:Veno-Echo.cpp ****         }
 8799              		.loc 20 1751 39 is_stmt 0 view .LVU2430
 8800 01be FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8801              	.LVL546:
1751:Veno-Echo.cpp ****         }
 8802              		.loc 20 1751 23 view .LVU2431
 8803 01c2 3A4B     		ldr	r3, .L501+68
 8804 01c4 1860     		str	r0, [r3]
 8805 01c6 93E7     		b	.L460
 8806              	.L494:
1675:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8807              		.loc 20 1675 9 is_stmt 1 view .LVU2432
1675:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8808              		.loc 20 1675 24 is_stmt 0 view .LVU2433
 8809 01c8 2848     		ldr	r0, .L501+4
 8810 01ca FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8811              	.LVL547:
1676:Veno-Echo.cpp ****         {
 8812              		.loc 20 1676 9 is_stmt 1 view .LVU2434
1676:Veno-Echo.cpp ****         {
 8813              		.loc 20 1676 29 is_stmt 0 view .LVU2435
 8814 01ce 2748     		ldr	r0, .L501+4
 8815 01d0 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8816              	.LVL548:
1682:Veno-Echo.cpp ****         }
 8817              		.loc 20 1682 31 view .LVU2436
 8818 01d4 F7EE007A 		vmov.f32	s15, #1.0e+0
 8819 01d8 9FED2D7A 		vldr.32	s14, .L501+40
 8820 01dc 0028     		cmp	r0, #0
 8821 01de 2D49     		ldr	r1, .L501+44
 8822              	.LBB1753:
 8823              	.LBB1754:
 8824              	.LBB1755:
 8825              	.LBB1756:
 8826              	.LBB1757:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8827              		.loc 22 397 18 view .LVU2437
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 290


 8828 01e0 4FF00102 		mov	r2, #1
 8829 01e4 2C4B     		ldr	r3, .L501+48
 8830              	.LBE1757:
 8831              	.LBE1756:
 8832              	.LBE1755:
 8833              	.LBE1754:
 8834              	.LBE1753:
1682:Veno-Echo.cpp ****         }
 8835              		.loc 20 1682 31 view .LVU2438
 8836 01e6 47FE277A 		vseleq.f32	s15, s14, s15
 8837 01ea C1ED0A7A 		vstr.32	s15, [r1, #40]
1684:Veno-Echo.cpp ****     }
 8838              		.loc 20 1684 9 is_stmt 1 view .LVU2439
 8839              	.LVL549:
 8840              	.LBB1762:
 8841              	.LBI1753:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8842              		.loc 23 80 5 view .LVU2440
 8843              	.LBB1761:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8844              		.loc 23 81 7 view .LVU2441
 8845              	.LBB1760:
 8846              	.LBI1755:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8847              		.loc 22 288 7 view .LVU2442
 8848              	.LBB1759:
 8849              	.LBI1756:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8850              		.loc 22 390 7 view .LVU2443
 8851              	.LBB1758:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8852              		.loc 22 397 18 is_stmt 0 view .LVU2444
 8853 01ee BFF35B8F 		dmb	ish
 8854 01f2 1A70     		strb	r2, [r3]
 8855 01f4 BFF35B8F 		dmb	ish
 8856              	.LVL550:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8857              		.loc 22 397 18 view .LVU2445
 8858              	.LBE1758:
 8859              	.LBE1759:
 8860              	.LBE1760:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8861              		.loc 23 81 35 view .LVU2446
 8862 01f8 28E7     		b	.L449
 8863              	.LVL551:
 8864              	.L493:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8865              		.loc 23 81 35 view .LVU2447
 8866              	.LBE1761:
 8867              	.LBE1762:
1661:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8868              		.loc 20 1661 9 is_stmt 1 view .LVU2448
1661:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8869              		.loc 20 1661 24 is_stmt 0 view .LVU2449
 8870 01fa 1B48     		ldr	r0, .L501
 8871 01fc FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8872              	.LVL552:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 291


1662:Veno-Echo.cpp ****         {
 8873              		.loc 20 1662 9 is_stmt 1 view .LVU2450
1662:Veno-Echo.cpp ****         {
 8874              		.loc 20 1662 29 is_stmt 0 view .LVU2451
 8875 0200 1948     		ldr	r0, .L501
 8876 0202 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8877              	.LVL553:
1668:Veno-Echo.cpp ****         }
 8878              		.loc 20 1668 31 view .LVU2452
 8879 0206 F7EE007A 		vmov.f32	s15, #1.0e+0
 8880 020a 9FED217A 		vldr.32	s14, .L501+40
 8881 020e 0028     		cmp	r0, #0
 8882 0210 2049     		ldr	r1, .L501+44
 8883              	.LBB1763:
 8884              	.LBB1764:
 8885              	.LBB1765:
 8886              	.LBB1766:
 8887              	.LBB1767:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8888              		.loc 22 397 18 view .LVU2453
 8889 0212 4FF00102 		mov	r2, #1
 8890 0216 204B     		ldr	r3, .L501+48
 8891              	.LBE1767:
 8892              	.LBE1766:
 8893              	.LBE1765:
 8894              	.LBE1764:
 8895              	.LBE1763:
1668:Veno-Echo.cpp ****         }
 8896              		.loc 20 1668 31 view .LVU2454
 8897 0218 47FE277A 		vseleq.f32	s15, s14, s15
 8898 021c C1ED097A 		vstr.32	s15, [r1, #36]
1670:Veno-Echo.cpp ****     }
 8899              		.loc 20 1670 9 is_stmt 1 view .LVU2455
 8900              	.LVL554:
 8901              	.LBB1772:
 8902              	.LBI1763:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8903              		.loc 23 80 5 view .LVU2456
 8904              	.LBB1771:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8905              		.loc 23 81 7 view .LVU2457
 8906              	.LBB1770:
 8907              	.LBI1765:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8908              		.loc 22 288 7 view .LVU2458
 8909              	.LBB1769:
 8910              	.LBI1766:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8911              		.loc 22 390 7 view .LVU2459
 8912              	.LBB1768:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8913              		.loc 22 397 18 is_stmt 0 view .LVU2460
 8914 0220 BFF35B8F 		dmb	ish
 8915 0224 1A70     		strb	r2, [r3]
 8916 0226 BFF35B8F 		dmb	ish
 8917              	.LVL555:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 292


 8918              		.loc 22 397 18 view .LVU2461
 8919              	.LBE1768:
 8920              	.LBE1769:
 8921              	.LBE1770:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8922              		.loc 23 81 35 view .LVU2462
 8923 022a 0AE7     		b	.L447
 8924              	.LVL556:
 8925              	.L495:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8926              		.loc 23 81 35 view .LVU2463
 8927              	.LBE1771:
 8928              	.LBE1772:
1694:Veno-Echo.cpp ****         }
 8929              		.loc 20 1694 13 is_stmt 1 view .LVU2464
1694:Veno-Echo.cpp ****         }
 8930              		.loc 20 1694 39 is_stmt 0 view .LVU2465
 8931 022c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8932              	.LVL557:
1694:Veno-Echo.cpp ****         }
 8933              		.loc 20 1694 23 view .LVU2466
 8934 0230 1E4B     		ldr	r3, .L501+68
 8935 0232 1860     		str	r0, [r3]
 8936 0234 15E7     		b	.L452
 8937              	.L496:
1717:Veno-Echo.cpp ****         }
 8938              		.loc 20 1717 13 is_stmt 1 view .LVU2467
1717:Veno-Echo.cpp ****         }
 8939              		.loc 20 1717 39 is_stmt 0 view .LVU2468
 8940 0236 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8941              	.LVL558:
1717:Veno-Echo.cpp ****         }
 8942              		.loc 20 1717 23 view .LVU2469
 8943 023a 1C4B     		ldr	r3, .L501+68
 8944 023c 1860     		str	r0, [r3]
 8945 023e 36E7     		b	.L456
 8946              	.L500:
1739:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8947              		.loc 20 1739 13 is_stmt 1 view .LVU2470
1739:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8948              		.loc 20 1739 35 is_stmt 0 view .LVU2471
 8949 0240 1C48     		ldr	r0, .L501+76
 8950 0242 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8951              	.LVL559:
 8952 0246 1C48     		ldr	r0, .L501+80
 8953 0248 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8954              	.LVL560:
1740:Veno-Echo.cpp ****             save_flag = true;
 8955              		.loc 20 1740 13 is_stmt 1 view .LVU2472
1740:Veno-Echo.cpp ****             save_flag = true;
 8956              		.loc 20 1740 59 is_stmt 0 view .LVU2473
 8957 024c 1948     		ldr	r0, .L501+76
 8958 024e FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 8959              	.LVL561:
1740:Veno-Echo.cpp ****             save_flag = true;
 8960              		.loc 20 1740 35 view .LVU2474
 8961 0252 1049     		ldr	r1, .L501+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 293


 8962              	.LBB1773:
 8963              	.LBB1774:
 8964              	.LBB1775:
 8965              	.LBB1776:
 8966              	.LBB1777:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8967              		.loc 22 397 18 view .LVU2475
 8968 0254 0122     		movs	r2, #1
 8969 0256 104B     		ldr	r3, .L501+48
 8970              	.LBE1777:
 8971              	.LBE1776:
 8972              	.LBE1775:
 8973              	.LBE1774:
 8974              	.LBE1773:
1740:Veno-Echo.cpp ****             save_flag = true;
 8975              		.loc 20 1740 35 view .LVU2476
 8976 0258 81ED080A 		vstr.32	s0, [r1, #32]
1741:Veno-Echo.cpp ****         }
 8977              		.loc 20 1741 13 is_stmt 1 view .LVU2477
 8978              	.LVL562:
 8979              	.LBB1782:
 8980              	.LBI1773:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8981              		.loc 23 80 5 view .LVU2478
 8982              	.LBB1781:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8983              		.loc 23 81 7 view .LVU2479
 8984              	.LBB1780:
 8985              	.LBI1775:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8986              		.loc 22 288 7 view .LVU2480
 8987              	.LBB1779:
 8988              	.LBI1776:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8989              		.loc 22 390 7 view .LVU2481
 8990              	.LBB1778:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8991              		.loc 22 397 18 is_stmt 0 view .LVU2482
 8992 025c BFF35B8F 		dmb	ish
 8993 0260 1A70     		strb	r2, [r3]
 8994 0262 BFF35B8F 		dmb	ish
 8995              	.LVL563:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8996              		.loc 22 397 18 view .LVU2483
 8997              	.LBE1778:
 8998              	.LBE1779:
 8999              	.LBE1780:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 9000              		.loc 23 81 35 view .LVU2484
 9001 0266 9EE7     		b	.L461
 9002              	.L502:
 9003              		.align	2
 9004              	.L501:
 9005 0268 00000000 		.word	.LANCHOR92
 9006 026c 00000000 		.word	.LANCHOR93
 9007 0270 00000000 		.word	.LANCHOR94
 9008 0274 00000000 		.word	.LANCHOR97
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 294


 9009 0278 00000000 		.word	.LANCHOR95
 9010 027c 00000000 		.word	.LANCHOR96
 9011 0280 00000000 		.word	.LANCHOR98
 9012 0284 00000000 		.word	.LANCHOR99
 9013 0288 00000000 		.word	.LANCHOR88
 9014 028c 00000000 		.word	.LANCHOR110
 9015 0290 00000000 		.word	0
 9016 0294 00000000 		.word	.LANCHOR15
 9017 0298 00000000 		.word	.LANCHOR16
 9018 029c 00000000 		.word	.LANCHOR7
 9019 02a0 00000000 		.word	.LANCHOR113
 9020 02a4 00000000 		.word	.LANCHOR12
 9021 02a8 00000000 		.word	.LANCHOR112
 9022 02ac 00000000 		.word	.LANCHOR111
 9023 02b0 00000000 		.word	.LANCHOR114
 9024 02b4 00000000 		.word	.LANCHOR26
 9025 02b8 00000000 		.word	.LANCHOR89
 9026              	.LBE1781:
 9027              	.LBE1782:
 9028              		.cfi_endproc
 9029              	.LFE4329:
 9031              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 9032              		.align	1
 9033              		.p2align 2,,3
 9034              		.syntax unified
 9035              		.thumb
 9036              		.thumb_func
 9037              		.fpu fpv5-d16
 9039              	_ZL13AudioCallbackPfS_j:
 9040              	.LVL564:
 9041              	.LFB4309:
 248:Veno-Echo.cpp **** 
 9042              		.loc 20 248 1 is_stmt 1 view -0
 9043              		.cfi_startproc
 9044              		@ args = 0, pretend = 0, frame = 80
 9045              		@ frame_needed = 0, uses_anonymous_args = 0
 259:Veno-Echo.cpp **** 
 9046              		.loc 20 259 1 view .LVU2486
 277:Veno-Echo.cpp **** 
 9047              		.loc 20 277 1 view .LVU2487
 277:Veno-Echo.cpp **** 
 9048              		.loc 20 277 20 is_stmt 0 view .LVU2488
 9049 0000 DFF890C0 		ldr	ip, .L644+12
 277:Veno-Echo.cpp **** 
 9050              		.loc 20 277 25 view .LVU2489
 9051 0004 204B     		ldr	r3, .L644
 248:Veno-Echo.cpp **** 
 9052              		.loc 20 248 1 view .LVU2490
 9053 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9054              		.cfi_def_cfa_offset 36
 9055              		.cfi_offset 4, -36
 9056              		.cfi_offset 5, -32
 9057              		.cfi_offset 6, -28
 9058              		.cfi_offset 7, -24
 9059              		.cfi_offset 8, -20
 9060              		.cfi_offset 9, -16
 9061              		.cfi_offset 10, -12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 295


 9062              		.cfi_offset 11, -8
 9063              		.cfi_offset 14, -4
 277:Veno-Echo.cpp **** 
 9064              		.loc 20 277 20 view .LVU2491
 9065 000a DCF80040 		ldr	r4, [ip]
 248:Veno-Echo.cpp **** 
 9066              		.loc 20 248 1 view .LVU2492
 9067 000e 1546     		mov	r5, r2
 9068 0010 0646     		mov	r6, r0
 9069 0012 0F46     		mov	r7, r1
 277:Veno-Echo.cpp **** 
 9070              		.loc 20 277 20 view .LVU2493
 9071 0014 0134     		adds	r4, r4, #1
 277:Veno-Echo.cpp **** 
 9072              		.loc 20 277 25 view .LVU2494
 9073 0016 83FB0432 		smull	r3, r2, r3, r4
 9074              	.LVL565:
 277:Veno-Echo.cpp **** 
 9075              		.loc 20 277 25 view .LVU2495
 9076 001a E317     		asrs	r3, r4, #31
 9077 001c 2244     		add	r2, r2, r4
 9078 001e C3EBE203 		rsb	r3, r3, r2, asr #3
 9079 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9080 0026 E31A     		subs	r3, r4, r3
 248:Veno-Echo.cpp **** 
 9081              		.loc 20 248 1 view .LVU2496
 9082 0028 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 9083              		.cfi_def_cfa_offset 92
 9084              		.cfi_offset 80, -92
 9085              		.cfi_offset 81, -88
 9086              		.cfi_offset 82, -84
 9087              		.cfi_offset 83, -80
 9088              		.cfi_offset 84, -76
 9089              		.cfi_offset 85, -72
 9090              		.cfi_offset 86, -68
 9091              		.cfi_offset 87, -64
 9092              		.cfi_offset 88, -60
 9093              		.cfi_offset 89, -56
 9094              		.cfi_offset 90, -52
 9095              		.cfi_offset 91, -48
 9096              		.cfi_offset 92, -44
 9097              		.cfi_offset 93, -40
 277:Veno-Echo.cpp **** 
 9098              		.loc 20 277 9 view .LVU2497
 9099 002c CCF80030 		str	r3, [ip]
 290:Veno-Echo.cpp ****         {
 9100              		.loc 20 290 9 is_stmt 1 view .LVU2498
 248:Veno-Echo.cpp **** 
 9101              		.loc 20 248 1 is_stmt 0 view .LVU2499
 9102 0030 95B0     		sub	sp, sp, #84
 9103              		.cfi_def_cfa_offset 176
 9104 0032 0E2B     		cmp	r3, #14
 9105 0034 17D8     		bhi	.L504
 9106 0036 DFE813F0 		tbh	[pc, r3, lsl #1]
 9107              	.L506:
 9108 003a 9005     		.2byte	(.L520-.L506)/2
 9109 003c 0F00     		.2byte	(.L519-.L506)/2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 296


 9110 003e 9A05     		.2byte	(.L518-.L506)/2
 9111 0040 A305     		.2byte	(.L517-.L506)/2
 9112 0042 E505     		.2byte	(.L516-.L506)/2
 9113 0044 EE05     		.2byte	(.L515-.L506)/2
 9114 0046 F705     		.2byte	(.L514-.L506)/2
 9115 0048 0006     		.2byte	(.L513-.L506)/2
 9116 004a 0906     		.2byte	(.L512-.L506)/2
 9117 004c 1206     		.2byte	(.L511-.L506)/2
 9118 004e 1B06     		.2byte	(.L510-.L506)/2
 9119 0050 2406     		.2byte	(.L509-.L506)/2
 9120 0052 2D06     		.2byte	(.L508-.L506)/2
 9121 0054 3606     		.2byte	(.L507-.L506)/2
 9122 0056 8705     		.2byte	(.L505-.L506)/2
 9123              		.p2align 1
 9124              	.L519:
 299:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9125              		.loc 20 299 13 is_stmt 1 view .LVU2500
 300:Veno-Echo.cpp ****             break;
 9126              		.loc 20 300 17 view .LVU2501
 9127              	.LBB1869:
 9128              	.LBI1869:
 849:Veno-Echo.cpp **** {
 9129              		.loc 20 849 6 view .LVU2502
 9130              	.LBB1870:
 851:Veno-Echo.cpp **** }
 9131              		.loc 20 851 5 view .LVU2503
 851:Veno-Echo.cpp **** }
 9132              		.loc 20 851 36 is_stmt 0 view .LVU2504
 9133 0058 0021     		movs	r1, #0
 9134              	.LVL566:
 851:Veno-Echo.cpp **** }
 9135              		.loc 20 851 36 view .LVU2505
 9136 005a 0C48     		ldr	r0, .L644+4
 9137              	.LVL567:
 851:Veno-Echo.cpp **** }
 9138              		.loc 20 851 36 view .LVU2506
 9139 005c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9140              	.LVL568:
 851:Veno-Echo.cpp **** }
 9141              		.loc 20 851 19 view .LVU2507
 9142 0060 0B4B     		ldr	r3, .L644+8
 9143 0062 83ED000A 		vstr.32	s0, [r3]
 9144              	.L504:
 9145              	.LVL569:
 851:Veno-Echo.cpp **** }
 9146              		.loc 20 851 19 view .LVU2508
 9147              	.LBE1870:
 9148              	.LBE1869:
 9149              	.LBB1871:
 380:Veno-Echo.cpp ****     {   
 9150              		.loc 20 380 25 is_stmt 1 discriminator 1 view .LVU2509
 9151 0066 002D     		cmp	r5, #0
 9152 0068 00F05085 		beq	.L503
 380:Veno-Echo.cpp ****     {   
 9153              		.loc 20 380 25 is_stmt 0 view .LVU2510
 9154 006c 0023     		movs	r3, #0
 9155 006e 013D     		subs	r5, r5, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 297


 9156              	.LVL570:
 380:Veno-Echo.cpp ****     {   
 9157              		.loc 20 380 25 view .LVU2511
 9158 0070 DFF82480 		ldr	r8, .L644+16
 9159 0074 B346     		mov	fp, r6
 9160 0076 0293     		str	r3, [sp, #8]
 9161 0078 25F00103 		bic	r3, r5, #1
 9162 007c DFF81C90 		ldr	r9, .L644+20
 9163 0080 0097     		str	r7, [sp]
 9164 0082 0593     		str	r3, [sp, #20]
 9165 0084 5AE1     		b	.L576
 9166              	.L645:
 9167 0086 00BF     		.align	2
 9168              	.L644:
 9169 0088 89888888 		.word	-2004318071
 9170 008c 18000000 		.word	.LANCHOR4+24
 9171 0090 00000000 		.word	.LANCHOR5
 9172 0094 00000000 		.word	.LANCHOR115
 9173 0098 00000000 		.word	.LANCHOR130
 9174 009c 00000000 		.word	.LANCHOR131
 9175              	.LVL571:
 9176              	.L643:
 9177              	.LBB1872:
 9178              	.LBB1873:
 9179              	.LBB1874:
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9180              		.loc 20 2006 10 is_stmt 1 view .LVU2512
 9181 00a0 B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 9182              		.loc 20 2007 19 is_stmt 0 view .LVU2513
 9183 00a4 F4EE477A 		vcmp.f32	s15, s14
 9184 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9185 00ac 48BF     		it	mi
 9186 00ae F0EE477A 		vmovmi.f32	s15, s14
 9187              	.LVL572:
 9188              	.L542:
2011:Veno-Echo.cpp **** }
 9189              		.loc 20 2011 5 is_stmt 1 view .LVU2514
2011:Veno-Echo.cpp **** }
 9190              		.loc 20 2011 5 is_stmt 0 view .LVU2515
 9191              	.LBE1874:
 9192              	.LBE1873:
 9193              	.LBB1877:
 9194              	.LBB1878:
2004:Veno-Echo.cpp ****         returnval = limit;
 9195              		.loc 20 2004 5 view .LVU2516
 9196 00b2 B0EE007A 		vmov.f32	s14, #2.0e+0
 9197              	.LBE1878:
 9198              	.LBE1877:
 435:Veno-Echo.cpp **** 
 9199              		.loc 20 435 34 view .LVU2517
 9200 00b6 9DED090A 		vldr.32	s0, [sp, #36]
 434:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9201              		.loc 20 434 23 view .LVU2518
 9202 00ba CDED087A 		vstr.32	s15, [sp, #32]
 435:Veno-Echo.cpp **** 
 9203              		.loc 20 435 9 is_stmt 1 view .LVU2519
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 298


 9204              	.LVL573:
 9205              	.LBB1882:
 9206              	.LBI1877:
2001:Veno-Echo.cpp **** {
 9207              		.loc 20 2001 7 view .LVU2520
 9208              	.LBB1879:
2003:Veno-Echo.cpp ****     if (input > limit)
 9209              		.loc 20 2003 5 view .LVU2521
2004:Veno-Echo.cpp ****         returnval = limit;
 9210              		.loc 20 2004 5 view .LVU2522
 9211 00be B4EEC70A 		vcmpe.f32	s0, s14
 9212 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9213 00c6 00F36084 		bgt	.L580
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9214              		.loc 20 2006 10 view .LVU2523
 9215 00ca B8EE007A 		vmov.f32	s14, #-2.0e+0
 9216              	.LBE1879:
 9217              	.LBE1882:
 9218              	.LBB1883:
 437:Veno-Echo.cpp **** {
 9219              		.loc 20 437 1 is_stmt 0 view .LVU2524
 9220 00ce DD4B     		ldr	r3, .L646
 9221 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9222              	.LBE1883:
 9223              	.LBB1905:
 9224              	.LBB1880:
2007:Veno-Echo.cpp ****     else
 9225              		.loc 20 2007 19 view .LVU2525
 9226 00d2 B4EE470A 		vcmp.f32	s0, s14
 9227 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9228 00da 48BF     		it	mi
 9229 00dc B0EE470A 		vmovmi.f32	s0, s14
 9230              	.LVL574:
2011:Veno-Echo.cpp **** }
 9231              		.loc 20 2011 5 is_stmt 1 view .LVU2526
2011:Veno-Echo.cpp **** }
 9232              		.loc 20 2011 5 is_stmt 0 view .LVU2527
 9233              	.LBE1880:
 9234              	.LBE1905:
 435:Veno-Echo.cpp **** 
 9235              		.loc 20 435 23 view .LVU2528
 9236 00e0 8DED090A 		vstr.32	s0, [sp, #36]
 437:Veno-Echo.cpp **** {
 9237              		.loc 20 437 1 is_stmt 1 view .LVU2529
 9238              	.LBB1906:
 9239 00e4 002B     		cmp	r3, #0
 9240 00e6 00F05984 		beq	.L640
 9241              	.L546:
 9242              	.LBE1906:
 481:Veno-Echo.cpp ****         static float RNegFB{};
 9243              		.loc 20 481 9 view .LVU2530
 482:Veno-Echo.cpp **** 
 9244              		.loc 20 482 9 view .LVU2531
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9245              		.loc 20 485 9 view .LVU2532
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9246              		.loc 20 485 22 is_stmt 0 view .LVU2533
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 299


 9247 00ea D74B     		ldr	r3, .L646+4
 9248              	.LBB1907:
 9249              	.LBB1908:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9250              		.loc 12 57 16 view .LVU2534
 9251 00ec D8ED042A 		vldr.32	s5, [r8, #16]
 9252              	.LBE1908:
 9253              	.LBE1907:
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9254              		.loc 20 485 22 view .LVU2535
 9255 00f0 D3ED004A 		vldr.32	s9, [r3]
 9256 00f4 D54B     		ldr	r3, .L646+8
 9257              	.LBB1920:
 9258              	.LBB1909:
 9259              		.loc 12 57 37 view .LVU2536
 9260 00f6 98ED006A 		vldr.32	s12, [r8]
 9261              	.LBE1909:
 9262              	.LBE1920:
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9263              		.loc 20 485 22 view .LVU2537
 9264 00fa 93ED007A 		vldr.32	s14, [r3]
 488:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9265              		.loc 20 488 22 view .LVU2538
 9266 00fe D44B     		ldr	r3, .L646+12
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9267              		.loc 20 485 9 view .LVU2539
 9268 0100 F4EEC74A 		vcmpe.f32	s9, s14
 9269              	.LBB1921:
 9270              	.LBB1922:
 9271              		.loc 12 57 16 view .LVU2540
 9272 0104 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9273              		.loc 12 65 20 view .LVU2541
 9274 0108 99ED054A 		vldr.32	s8, [r9, #20]
 9275              		.loc 12 65 53 view .LVU2542
 9276 010c 99ED032A 		vldr.32	s4, [r9, #12]
 9277              	.LBE1922:
 9278              	.LBE1921:
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9279              		.loc 20 485 9 view .LVU2543
 9280 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9281              	.LBB1931:
 9282              	.LBB1910:
 9283              		.loc 12 65 20 view .LVU2544
 9284 0114 98ED053A 		vldr.32	s6, [r8, #20]
 9285              		.loc 12 65 53 view .LVU2545
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 300


 9286 0118 98ED031A 		vldr.32	s2, [r8, #12]
 9287              	.LBE1910:
 9288              	.LBE1931:
 504:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9289              		.loc 20 504 13 view .LVU2546
 9290 011c DFEDCD1A 		vldr.32	s3, .L646+16
 9291 0120 58BF     		it	pl
 9292 0122 74EEC74A 		vsubpl.f32	s9, s9, s14
 488:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9293              		.loc 20 488 9 is_stmt 1 view .LVU2547
 488:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9294              		.loc 20 488 22 is_stmt 0 view .LVU2548
 9295 0126 93ED007A 		vldr.32	s14, [r3]
 9296 012a CB4B     		ldr	r3, .L646+20
 9297 012c D3ED006A 		vldr.32	s13, [r3]
 491:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9298              		.loc 20 491 15 view .LVU2549
 9299 0130 67EEA44A 		vmul.f32	s9, s15, s9
 9300              	.LBB1932:
 9301              	.LBB1923:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9302              		.loc 12 57 37 view .LVU2550
 9303 0134 D9ED007A 		vldr.32	s15, [r9]
 9304              	.LBE1923:
 9305              	.LBE1932:
 488:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9306              		.loc 20 488 9 view .LVU2551
 9307 0138 B4EEE67A 		vcmpe.f32	s14, s13
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9308              		.loc 20 495 36 view .LVU2552
 9309 013c C74B     		ldr	r3, .L646+24
 488:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9310              		.loc 20 488 9 view .LVU2553
 9311 013e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9312 0142 58BF     		it	pl
 9313 0144 37EE667A 		vsubpl.f32	s14, s14, s13
 491:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9314              		.loc 20 491 9 is_stmt 1 view .LVU2554
 9315              	.LVL575:
 492:Veno-Echo.cpp **** 
 9316              		.loc 20 492 9 view .LVU2555
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9317              		.loc 20 495 36 is_stmt 0 view .LVU2556
 9318 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 492:Veno-Echo.cpp **** 
 9319              		.loc 20 492 15 view .LVU2557
 9320 014c 20EE070A 		vmul.f32	s0, s0, s14
 9321              	.LVL576:
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9322              		.loc 20 495 9 is_stmt 1 view .LVU2558
 9323              	.LBB1933:
 9324              	.LBB1911:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9325              		.loc 12 57 33 is_stmt 0 view .LVU2559
 9326 0150 36EEE25A 		vsub.f32	s10, s13, s5
 9327              	.LBE1911:
 9328              	.LBE1933:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 301


 9329              	.LBB1934:
 9330              	.LBB1924:
 9331 0154 76EEE35A 		vsub.f32	s11, s13, s7
 9332              	.LBE1924:
 9333              	.LBE1934:
 9334              	.LBB1935:
 9335              	.LBB1912:
 9336              		.loc 12 65 45 view .LVU2560
 9337 0158 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9338              		.loc 12 57 37 view .LVU2561
 9339 015c 25EE065A 		vmul.f32	s10, s10, s12
 9340              	.LBE1912:
 9341              	.LBE1935:
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9342              		.loc 20 495 36 view .LVU2562
 9343 0160 93ED006A 		vldr.32	s12, [r3]
 9344              	.LBB1936:
 9345              	.LBB1925:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9346              		.loc 12 57 37 view .LVU2563
 9347 0164 65EEA75A 		vmul.f32	s11, s11, s15
 9348              		.loc 12 65 45 view .LVU2564
 9349 0168 76EEC47A 		vsub.f32	s15, s13, s8
 9350              	.LBE1925:
 9351              	.LBE1936:
 9352              	.LBB1937:
 9353              	.LBB1913:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9354              		.loc 12 57 28 view .LVU2565
 9355 016c A4EEA25A 		vfma.f32	s10, s9, s5
 9356              	.LBE1913:
 9357              	.LBE1937:
 9358              	.LBB1938:
 9359              	.LBB1926:
 9360 0170 E0EE235A 		vfma.f32	s11, s0, s7
 9361              		.loc 12 65 53 view .LVU2566
 9362 0174 67EE827A 		vmul.f32	s15, s15, s4
 9363              	.LBE1926:
 9364              	.LBE1938:
 9365              	.LBB1939:
 9366              	.LBB1914:
 9367 0178 27EE017A 		vmul.f32	s14, s14, s2
 9368              	.LBE1914:
 9369              	.LBE1939:
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9370              		.loc 20 495 36 view .LVU2567
 9371 017c 76EEC66A 		vsub.f32	s13, s13, s12
 9372              	.LBB1940:
 9373              	.LBB1915:
  58:envFollow.h   **** 
 9374              		.loc 12 58 30 view .LVU2568
 9375 0180 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9376              		.loc 12 57 13 view .LVU2569
 9377 0184 88ED005A 		vstr.32	s10, [r8]
 9378              	.LBE1915:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 302


 9379              	.LBE1940:
 9380              	.LBB1941:
 9381              	.LBB1927:
  58:envFollow.h   **** 
 9382              		.loc 12 58 30 view .LVU2570
 9383 0188 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9384              		.loc 12 57 13 view .LVU2571
 9385 018c C9ED005A 		vstr.32	s11, [r9]
 9386              	.LBE1927:
 9387              	.LBE1941:
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9388              		.loc 20 495 89 view .LVU2572
 9389 0190 66EE005A 		vmul.f32	s11, s12, s0
 9390              	.LBB1942:
 9391              	.LBB1916:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9392              		.loc 12 61 27 view .LVU2573
 9393 0194 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9394              		.loc 12 58 21 view .LVU2574
 9395 0198 88ED022A 		vstr.32	s4, [r8, #8]
 9396              	.LBE1916:
 9397              	.LBE1942:
 9398              	.LBB1943:
 9399              	.LBB1928:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9400              		.loc 12 61 27 view .LVU2575
 9401 019c B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9402              		.loc 12 58 21 view .LVU2576
 9403 01a0 C9ED022A 		vstr.32	s5, [r9, #8]
 9404              	.LBE1928:
 9405              	.LBE1943:
 496:Veno-Echo.cpp **** 
 9406              		.loc 20 496 89 view .LVU2577
 9407 01a4 26EE246A 		vmul.f32	s12, s12, s9
 9408              	.LBB1944:
 9409              	.LBB1917:
 9410              		.loc 12 65 40 view .LVU2578
 9411 01a8 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9412              		.loc 12 61 20 view .LVU2579
 9413 01ac C8ED013A 		vstr.32	s7, [r8, #4]
 9414              	.LBE1917:
 9415              	.LBE1944:
 9416              	.LBB1945:
 9417              	.LBB1929:
 9418              		.loc 12 65 40 view .LVU2580
 9419 01b0 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9420              		.loc 12 61 20 view .LVU2581
 9421 01b4 89ED015A 		vstr.32	s10, [r9, #4]
 9422              	.LBE1929:
 9423              	.LBE1945:
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9424              		.loc 20 495 15 view .LVU2582
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 303


 9425 01b8 E6EEA45A 		vfma.f32	s11, s13, s9
 9426              	.LVL577:
 496:Veno-Echo.cpp **** 
 9427              		.loc 20 496 9 is_stmt 1 view .LVU2583
 496:Veno-Echo.cpp **** 
 9428              		.loc 20 496 15 is_stmt 0 view .LVU2584
 9429 01bc A6EE806A 		vfma.f32	s12, s13, s0
 9430              	.LVL578:
 500:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9431              		.loc 20 500 9 is_stmt 1 view .LVU2585
 9432              	.LBB1946:
 9433              	.LBI1907:
  54:envFollow.h   ****     {
 9434              		.loc 12 54 11 view .LVU2586
 9435              	.LBB1918:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9436              		.loc 12 57 9 view .LVU2587
  58:envFollow.h   **** 
 9437              		.loc 12 58 9 view .LVU2588
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9438              		.loc 12 61 9 view .LVU2589
 9439              		.loc 12 65 9 view .LVU2590
 9440              	.LBE1918:
 9441              	.LBE1946:
 504:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9442              		.loc 20 504 13 is_stmt 0 view .LVU2591
 9443 01c0 B4EEE17A 		vcmpe.f32	s14, s3
 9444              	.LBB1947:
 9445              	.LBB1919:
 9446              		.loc 12 65 17 view .LVU2592
 9447 01c4 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9448              		.loc 12 67 9 is_stmt 1 view .LVU2593
 9449              	.LVL579:
 9450              		.loc 12 67 9 is_stmt 0 view .LVU2594
 9451              	.LBE1919:
 9452              	.LBE1947:
 501:Veno-Echo.cpp **** 
 9453              		.loc 20 501 9 is_stmt 1 view .LVU2595
 9454              	.LBB1948:
 9455              	.LBI1921:
  54:envFollow.h   ****     {
 9456              		.loc 12 54 11 view .LVU2596
 9457              	.LBB1930:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9458              		.loc 12 57 9 view .LVU2597
  58:envFollow.h   **** 
 9459              		.loc 12 58 9 view .LVU2598
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9460              		.loc 12 61 9 view .LVU2599
  65:envFollow.h   **** 
 9461              		.loc 12 65 9 view .LVU2600
  65:envFollow.h   **** 
 9462              		.loc 12 65 17 is_stmt 0 view .LVU2601
 9463 01c8 C9ED037A 		vstr.32	s15, [r9, #12]
 9464              		.loc 12 67 9 is_stmt 1 view .LVU2602
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 304


 9465              	.LVL580:
 9466              		.loc 12 67 9 is_stmt 0 view .LVU2603
 9467              	.LBE1930:
 9468              	.LBE1948:
 504:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9469              		.loc 20 504 13 is_stmt 1 view .LVU2604
 9470 01cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9471 01d0 C0F2D883 		blt	.L632
 505:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9472              		.loc 20 505 17 view .LVU2605
 505:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9473              		.loc 20 505 32 is_stmt 0 view .LVU2606
 9474 01d4 37EE617A 		vsub.f32	s14, s14, s3
 9475              	.LVL581:
 505:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9476              		.loc 20 505 47 view .LVU2607
 9477 01d8 F0EE086A 		vmov.f32	s13, #3.0e+0
 9478 01dc 27EE267A 		vmul.f32	s14, s14, s13
 9479              	.L552:
 509:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9480              		.loc 20 509 13 view .LVU2608
 9481 01e0 DFED9C6A 		vldr.32	s13, .L646+16
 9482 01e4 994B     		ldr	r3, .L646+8
 9483 01e6 F4EEE67A 		vcmpe.f32	s15, s13
 9484 01ea 83ED007A 		vstr.32	s14, [r3]
 509:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9485              		.loc 20 509 13 is_stmt 1 view .LVU2609
 9486 01ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9487 01f2 C0F2C483 		blt	.L633
 510:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9488              		.loc 20 510 17 view .LVU2610
 510:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9489              		.loc 20 510 32 is_stmt 0 view .LVU2611
 9490 01f6 77EEE67A 		vsub.f32	s15, s15, s13
 9491              	.LVL582:
 510:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9492              		.loc 20 510 47 view .LVU2612
 9493 01fa B0EE087A 		vmov.f32	s14, #3.0e+0
 9494 01fe 67EE877A 		vmul.f32	s15, s15, s14
 9495              	.L554:
 9496 0202 954B     		ldr	r3, .L646+20
 514:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9497              		.loc 20 514 42 view .LVU2613
 9498 0204 78EEA58A 		vadd.f32	s17, s17, s11
 9499              	.LVL583:
 515:Veno-Echo.cpp ****  
 9500              		.loc 20 515 42 view .LVU2614
 9501 0208 38EE066A 		vadd.f32	s12, s16, s12
 9502              	.LVL584:
 515:Veno-Echo.cpp ****  
 9503              		.loc 20 515 42 view .LVU2615
 9504 020c C3ED007A 		vstr.32	s15, [r3]
 514:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9505              		.loc 20 514 9 is_stmt 1 view .LVU2616
 515:Veno-Echo.cpp ****  
 9506              		.loc 20 515 9 view .LVU2617
 518:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 305


 9507              		.loc 20 518 9 view .LVU2618
 9508              	.LVL585:
 9509              	.LBB1949:
 9510              	.LBI1949:
2001:Veno-Echo.cpp **** {
 9511              		.loc 20 2001 7 view .LVU2619
 9512              	.LBB1950:
2003:Veno-Echo.cpp ****     if (input > limit)
 9513              		.loc 20 2003 5 view .LVU2620
2004:Veno-Echo.cpp ****         returnval = limit;
 9514              		.loc 20 2004 5 view .LVU2621
 9515 0210 F0EE007A 		vmov.f32	s15, #2.0e+0
 9516 0214 F4EEE78A 		vcmpe.f32	s17, s15
 9517 0218 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9518 021c 00F35184 		bgt	.L586
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9519              		.loc 20 2006 10 view .LVU2622
 9520 0220 F8EE007A 		vmov.f32	s15, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 9521              		.loc 20 2007 19 is_stmt 0 view .LVU2623
 9522 0224 F4EE678A 		vcmp.f32	s17, s15
 9523 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9524 022c 48BF     		it	mi
 9525 022e F0EE678A 		vmovmi.f32	s17, s15
 9526              	.LVL586:
 9527              	.L556:
2011:Veno-Echo.cpp **** }
 9528              		.loc 20 2011 5 is_stmt 1 view .LVU2624
2011:Veno-Echo.cpp **** }
 9529              		.loc 20 2011 5 is_stmt 0 view .LVU2625
 9530              	.LBE1950:
 9531              	.LBE1949:
 9532              	.LBB1952:
 9533              	.LBB1953:
2004:Veno-Echo.cpp ****         returnval = limit;
 9534              		.loc 20 2004 5 view .LVU2626
 9535 0232 F0EE007A 		vmov.f32	s15, #2.0e+0
 9536              	.LBE1953:
 9537              	.LBE1952:
 518:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9538              		.loc 20 518 19 view .LVU2627
 9539 0236 CDED0A8A 		vstr.32	s17, [sp, #40]
 519:Veno-Echo.cpp **** 
 9540              		.loc 20 519 9 is_stmt 1 view .LVU2628
 9541              	.LVL587:
 9542              	.LBB1956:
 9543              	.LBI1952:
2001:Veno-Echo.cpp **** {
 9544              		.loc 20 2001 7 view .LVU2629
 9545              	.LBB1954:
2003:Veno-Echo.cpp ****     if (input > limit)
 9546              		.loc 20 2003 5 view .LVU2630
2004:Veno-Echo.cpp ****         returnval = limit;
 9547              		.loc 20 2004 5 view .LVU2631
 9548 023a B4EEE76A 		vcmpe.f32	s12, s15
 9549 023e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9550 0242 00F33A84 		bgt	.L587
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 306


2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9551              		.loc 20 2006 10 view .LVU2632
 9552 0246 F8EE007A 		vmov.f32	s15, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 9553              		.loc 20 2007 19 is_stmt 0 view .LVU2633
 9554 024a B4EE676A 		vcmp.f32	s12, s15
 9555 024e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9556 0252 48BF     		it	mi
 9557 0254 B0EE676A 		vmovmi.f32	s12, s15
 9558              	.LVL588:
 9559              	.L558:
2011:Veno-Echo.cpp **** }
 9560              		.loc 20 2011 5 is_stmt 1 view .LVU2634
2011:Veno-Echo.cpp **** }
 9561              		.loc 20 2011 5 is_stmt 0 view .LVU2635
 9562              	.LBE1954:
 9563              	.LBE1956:
 524:Veno-Echo.cpp ****         delayR.Write(combinedR);
 9564              		.loc 20 524 21 view .LVU2636
 9565 0258 0AA9     		add	r1, sp, #40
 9566 025a 8148     		ldr	r0, .L646+28
 519:Veno-Echo.cpp **** 
 9567              		.loc 20 519 19 view .LVU2637
 9568 025c 8DED0B6A 		vstr.32	s12, [sp, #44]
 524:Veno-Echo.cpp ****         delayR.Write(combinedR);
 9569              		.loc 20 524 9 is_stmt 1 view .LVU2638
 524:Veno-Echo.cpp ****         delayR.Write(combinedR);
 9570              		.loc 20 524 21 is_stmt 0 view .LVU2639
 9571 0260 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9572              	.LVL589:
 525:Veno-Echo.cpp **** 
 9573              		.loc 20 525 9 is_stmt 1 view .LVU2640
 525:Veno-Echo.cpp **** 
 9574              		.loc 20 525 21 is_stmt 0 view .LVU2641
 9575 0264 0BA9     		add	r1, sp, #44
 9576 0266 7F48     		ldr	r0, .L646+32
 9577 0268 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9578              	.LVL590:
 528:Veno-Echo.cpp ****         float mixR;
 9579              		.loc 20 528 9 is_stmt 1 view .LVU2642
 529:Veno-Echo.cpp **** 
 9580              		.loc 20 529 9 view .LVU2643
 531:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9581              		.loc 20 531 9 view .LVU2644
 531:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9582              		.loc 20 531 53 is_stmt 0 view .LVU2645
 9583 026c 09AA     		add	r2, sp, #36
 9584 026e 08A9     		add	r1, sp, #32
 9585 0270 7D48     		ldr	r0, .L646+36
 9586 0272 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9587              	.LVL591:
 532:Veno-Echo.cpp **** 
 9588              		.loc 20 532 53 view .LVU2646
 9589 0276 08AA     		add	r2, sp, #32
 9590 0278 09A9     		add	r1, sp, #36
 9591 027a 7B48     		ldr	r0, .L646+36
 531:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 307


 9592              		.loc 20 531 81 view .LVU2647
 9593 027c 8DED0C0A 		vstr.32	s0, [sp, #48]
 532:Veno-Echo.cpp **** 
 9594              		.loc 20 532 9 is_stmt 1 view .LVU2648
 532:Veno-Echo.cpp **** 
 9595              		.loc 20 532 53 is_stmt 0 view .LVU2649
 9596 0280 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9597              	.LVL592:
 9598              	.LBB1957:
 9599              	.LBB1958:
2004:Veno-Echo.cpp ****         returnval = limit;
 9600              		.loc 20 2004 5 view .LVU2650
 9601 0284 B0EE007A 		vmov.f32	s14, #2.0e+0
 9602              	.LBE1958:
 9603              	.LBE1957:
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9604              		.loc 20 535 38 view .LVU2651
 9605 0288 DDED0C7A 		vldr.32	s15, [sp, #48]
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9606              		.loc 20 535 9 is_stmt 1 view .LVU2652
 9607              	.LVL593:
 9608              	.LBB1961:
 9609              	.LBI1957:
2001:Veno-Echo.cpp **** {
 9610              		.loc 20 2001 7 view .LVU2653
 9611              	.LBB1959:
2003:Veno-Echo.cpp ****     if (input > limit)
 9612              		.loc 20 2003 5 view .LVU2654
2004:Veno-Echo.cpp ****         returnval = limit;
 9613              		.loc 20 2004 5 view .LVU2655
 9614 028c F4EEC77A 		vcmpe.f32	s15, s14
 9615 0290 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9616 0294 00F31984 		bgt	.L588
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9617              		.loc 20 2006 10 view .LVU2656
 9618 0298 B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 9619              		.loc 20 2007 19 is_stmt 0 view .LVU2657
 9620 029c F4EE477A 		vcmp.f32	s15, s14
 9621 02a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9622 02a4 48BF     		it	mi
 9623 02a6 F0EE477A 		vmovmi.f32	s15, s14
 9624              	.LVL594:
 9625              	.L560:
2011:Veno-Echo.cpp **** }
 9626              		.loc 20 2011 5 is_stmt 1 view .LVU2658
2011:Veno-Echo.cpp **** }
 9627              		.loc 20 2011 5 is_stmt 0 view .LVU2659
 9628              	.LBE1959:
 9629              	.LBE1961:
 9630              	.LBB1962:
 9631              	.LBB1963:
2004:Veno-Echo.cpp ****         returnval = limit;
 9632              		.loc 20 2004 5 view .LVU2660
 9633 02aa B0EE007A 		vmov.f32	s14, #2.0e+0
 9634              	.LBE1963:
 9635              	.LBE1962:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 308


 535:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9636              		.loc 20 535 27 view .LVU2661
 9637 02ae CDED0C7A 		vstr.32	s15, [sp, #48]
 536:Veno-Echo.cpp **** 
 9638              		.loc 20 536 9 is_stmt 1 view .LVU2662
 9639              	.LVL595:
 9640              	.LBB1967:
 9641              	.LBI1962:
2001:Veno-Echo.cpp **** {
 9642              		.loc 20 2001 7 view .LVU2663
 9643              	.LBB1964:
2003:Veno-Echo.cpp ****     if (input > limit)
 9644              		.loc 20 2003 5 view .LVU2664
2004:Veno-Echo.cpp ****         returnval = limit;
 9645              		.loc 20 2004 5 view .LVU2665
 9646 02b2 B4EEC70A 		vcmpe.f32	s0, s14
 9647 02b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9648 02ba 00F3C782 		bgt	.L589
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9649              		.loc 20 2006 10 view .LVU2666
 9650 02be B8EE007A 		vmov.f32	s14, #-2.0e+0
 9651              	.LBE1964:
 9652              	.LBE1967:
 9653              	.LBB1968:
 538:Veno-Echo.cpp **** {
 9654              		.loc 20 538 1 is_stmt 0 view .LVU2667
 9655 02c2 604B     		ldr	r3, .L646
 9656 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9657              	.LBE1968:
 9658              	.LBB1991:
 9659              	.LBB1965:
2007:Veno-Echo.cpp ****     else
 9660              		.loc 20 2007 19 view .LVU2668
 9661 02c6 B4EE470A 		vcmp.f32	s0, s14
 9662 02ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9663 02ce 48BF     		it	mi
 9664 02d0 B0EE470A 		vmovmi.f32	s0, s14
 9665              	.LVL596:
2011:Veno-Echo.cpp **** }
 9666              		.loc 20 2011 5 is_stmt 1 view .LVU2669
2011:Veno-Echo.cpp **** }
 9667              		.loc 20 2011 5 is_stmt 0 view .LVU2670
 9668              	.LBE1965:
 9669              	.LBE1991:
 536:Veno-Echo.cpp **** 
 9670              		.loc 20 536 27 view .LVU2671
 9671 02d4 8DED0D0A 		vstr.32	s0, [sp, #52]
 538:Veno-Echo.cpp **** {
 9672              		.loc 20 538 1 is_stmt 1 view .LVU2672
 9673              	.LBB1992:
 9674 02d8 002B     		cmp	r3, #0
 9675 02da 40F0C082 		bne	.L641
 9676              	.LVL597:
 9677              	.L564:
 538:Veno-Echo.cpp **** {
 9678              		.loc 20 538 1 is_stmt 0 view .LVU2673
 9679              	.LBE1992:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 309


 579:Veno-Echo.cpp ****         {
 9680              		.loc 20 579 9 is_stmt 1 view .LVU2674
 579:Veno-Echo.cpp ****         {
 9681              		.loc 20 579 19 is_stmt 0 view .LVU2675
 9682 02de 634B     		ldr	r3, .L646+40
 579:Veno-Echo.cpp ****         {
 9683              		.loc 20 579 9 view .LVU2676
 9684 02e0 F6EE006A 		vmov.f32	s13, #5.0e-1
 579:Veno-Echo.cpp ****         {
 9685              		.loc 20 579 19 view .LVU2677
 9686 02e4 93ED007A 		vldr.32	s14, [r3]
 579:Veno-Echo.cpp ****         {
 9687              		.loc 20 579 9 view .LVU2678
 9688 02e8 B4EEE67A 		vcmpe.f32	s14, s13
 9689 02ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9690 02f0 40F18382 		bpl	.L634
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9691              		.loc 20 581 13 is_stmt 1 view .LVU2679
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9692              		.loc 20 581 34 is_stmt 0 view .LVU2680
 9693 02f4 37EE077A 		vadd.f32	s14, s14, s14
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9694              		.loc 20 581 18 view .LVU2681
 9695 02f8 9BED006A 		vldr.32	s12, [fp]
 582:Veno-Echo.cpp ****         }
 9696              		.loc 20 582 18 view .LVU2682
 9697 02fc DBED016A 		vldr.32	s13, [fp, #4]
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9698              		.loc 20 581 18 view .LVU2683
 9699 0300 A7EE276A 		vfma.f32	s12, s14, s15
 582:Veno-Echo.cpp ****         }
 9700              		.loc 20 582 18 view .LVU2684
 9701 0304 E7EE006A 		vfma.f32	s13, s14, s0
 581:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9702              		.loc 20 581 18 view .LVU2685
 9703 0308 F0EE467A 		vmov.f32	s15, s12
 9704              	.LVL598:
 582:Veno-Echo.cpp ****         }
 9705              		.loc 20 582 13 is_stmt 1 view .LVU2686
 582:Veno-Echo.cpp ****         }
 9706              		.loc 20 582 18 is_stmt 0 view .LVU2687
 9707 030c B0EE660A 		vmov.f32	s0, s13
 9708              	.LVL599:
 9709              	.L570:
 596:Veno-Echo.cpp ****         {
 9710              		.loc 20 596 9 is_stmt 1 view .LVU2688
 9711 0310 574B     		ldr	r3, .L646+44
 9712 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9713 0314 002B     		cmp	r3, #0
 9714 0316 00F06A82 		beq	.L573
 598:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9715              		.loc 20 598 13 view .LVU2689
 598:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9716              		.loc 20 598 20 is_stmt 0 view .LVU2690
 9717 031a 0023     		movs	r3, #0
 9718 031c 009A     		ldr	r2, [sp]
 9719 031e 1360     		str	r3, [r2]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 310


 599:Veno-Echo.cpp ****         }
 9720              		.loc 20 599 13 is_stmt 1 view .LVU2691
 599:Veno-Echo.cpp ****         }
 9721              		.loc 20 599 22 is_stmt 0 view .LVU2692
 9722 0320 5360     		str	r3, [r2, #4]	@ float
 9723              	.L574:
 9724              	.LBE1872:
 380:Veno-Echo.cpp ****     {   
 9725              		.loc 20 380 5 is_stmt 1 discriminator 2 view .LVU2693
 9726 0322 009B     		ldr	r3, [sp]
 9727 0324 0BF1080B 		add	fp, fp, #8
 380:Veno-Echo.cpp ****     {   
 9728              		.loc 20 380 35 is_stmt 0 discriminator 2 view .LVU2694
 9729 0328 029A     		ldr	r2, [sp, #8]
 380:Veno-Echo.cpp ****     {   
 9730              		.loc 20 380 25 discriminator 2 view .LVU2695
 9731 032a 0599     		ldr	r1, [sp, #20]
 9732 032c 0833     		adds	r3, r3, #8
 9733 032e 8A42     		cmp	r2, r1
 9734 0330 0093     		str	r3, [sp]
 380:Veno-Echo.cpp ****     {   
 9735              		.loc 20 380 35 discriminator 2 view .LVU2696
 9736 0332 02F10203 		add	r3, r2, #2
 9737              	.LVL600:
 380:Veno-Echo.cpp ****     {   
 9738              		.loc 20 380 25 is_stmt 1 discriminator 2 view .LVU2697
 9739 0336 00F0E983 		beq	.L503
 9740 033a 0293     		str	r3, [sp, #8]
 9741              	.LVL601:
 9742              	.L576:
 9743              	.LBB2253:
 382:Veno-Echo.cpp ****         Update_Mod();
 9744              		.loc 20 382 9 view .LVU2698
 382:Veno-Echo.cpp ****         Update_Mod();
 9745              		.loc 20 382 20 is_stmt 0 view .LVU2699
 9746 033c FFF7FEFF 		bl	_Z11UpdateClockv
 9747              	.LVL602:
 383:Veno-Echo.cpp **** 
 9748              		.loc 20 383 9 is_stmt 1 view .LVU2700
 9749              	.LBB1993:
 9750              	.LBB1994:
 9751              	.LBB1995:
 9752              	.LBB1996:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 311


  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 312


 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9753              		.loc 19 174 71 is_stmt 0 view .LVU2701
 9754 0340 DFF89CA1 		ldr	r10, .L646+156
 9755              	.LBE1996:
 9756              	.LBE1995:
 9757              	.LBE1994:
 9758              	.LBE1993:
 383:Veno-Echo.cpp **** 
 9759              		.loc 20 383 19 view .LVU2702
 9760 0344 FFF7FEFF 		bl	_Z10Update_Modv
 9761              	.LVL603:
 386:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9762              		.loc 20 386 9 is_stmt 1 view .LVU2703
 386:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9763              		.loc 20 386 51 is_stmt 0 view .LVU2704
 9764 0348 4A48     		ldr	r0, .L646+48
 9765 034a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9766              	.LVL604:
 9767 034e 0146     		mov	r1, r0
 9768 0350 4948     		ldr	r0, .L646+52
 9769              	.LBB2048:
 9770              	.LBB2031:
 9771              	.LBB2014:
 9772              	.LBB1997:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9773              		.loc 19 175 77 view .LVU2705
 9774 0352 F7EE00AA 		vmov.f32	s21, #1.0e+0
 9775              	.LBE1997:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 313


 9776              	.LBE2014:
 9777              	.LBE2031:
 9778              	.LBE2048:
 386:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9779              		.loc 20 386 51 view .LVU2706
 9780 0356 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9781              	.LVL605:
 387:Veno-Echo.cpp ****         
 9782              		.loc 20 387 51 view .LVU2707
 9783 035a 4848     		ldr	r0, .L646+56
 386:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9784              		.loc 20 386 51 view .LVU2708
 9785 035c F0EE40BA 		vmov.f32	s23, s0
 9786              	.LVL606:
 387:Veno-Echo.cpp ****         
 9787              		.loc 20 387 9 is_stmt 1 view .LVU2709
 387:Veno-Echo.cpp ****         
 9788              		.loc 20 387 51 is_stmt 0 view .LVU2710
 9789 0360 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9790              	.LVL607:
 387:Veno-Echo.cpp ****         
 9791              		.loc 20 387 51 view .LVU2711
 9792 0364 0146     		mov	r1, r0
 9793 0366 4648     		ldr	r0, .L646+60
 9794 0368 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9795              	.LVL608:
 389:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9796              		.loc 20 389 44 view .LVU2712
 9797 036c 4548     		ldr	r0, .L646+64
 387:Veno-Echo.cpp ****         
 9798              		.loc 20 387 51 view .LVU2713
 9799 036e B0EE409A 		vmov.f32	s18, s0
 9800              	.LVL609:
 389:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9801              		.loc 20 389 9 is_stmt 1 view .LVU2714
 389:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9802              		.loc 20 389 44 is_stmt 0 view .LVU2715
 9803 0372 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9804              	.LVL610:
 389:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9805              		.loc 20 389 44 view .LVU2716
 9806 0376 0146     		mov	r1, r0
 9807 0378 4348     		ldr	r0, .L646+68
 9808 037a FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9809              	.LVL611:
 390:Veno-Echo.cpp **** 
 9810              		.loc 20 390 44 view .LVU2717
 9811 037e 4348     		ldr	r0, .L646+72
 389:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9812              		.loc 20 389 44 view .LVU2718
 9813 0380 B0EE408A 		vmov.f32	s16, s0
 9814              	.LVL612:
 390:Veno-Echo.cpp **** 
 9815              		.loc 20 390 9 is_stmt 1 view .LVU2719
 390:Veno-Echo.cpp **** 
 9816              		.loc 20 390 44 is_stmt 0 view .LVU2720
 9817 0384 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 314


 9818              	.LVL613:
 390:Veno-Echo.cpp **** 
 9819              		.loc 20 390 44 view .LVU2721
 9820 0388 0146     		mov	r1, r0
 9821 038a 4148     		ldr	r0, .L646+76
 9822 038c FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9823              	.LVL614:
 9824              	.LBB2049:
 9825              	.LBB2050:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9826              		.loc 10 60 42 view .LVU2722
 9827 0390 4048     		ldr	r0, .L646+80
 9828              	.LBE2050:
 9829              	.LBE2049:
 413:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9830              		.loc 20 413 49 view .LVU2723
 9831 0392 414B     		ldr	r3, .L646+84
 390:Veno-Echo.cpp **** 
 9832              		.loc 20 390 44 view .LVU2724
 9833 0394 F0EE407A 		vmov.f32	s15, s0
 9834              	.LVL615:
 393:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9835              		.loc 20 393 9 is_stmt 1 view .LVU2725
 9836              	.LBB2052:
 9837              	.LBI2049:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9838              		.loc 10 60 17 view .LVU2726
 9839              	.LBB2051:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9840              		.loc 10 60 37 view .LVU2727
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9841              		.loc 10 60 42 is_stmt 0 view .LVU2728
 9842 0398 C0ED00BA 		vstr.32	s23, [r0]
 9843              	.LVL616:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9844              		.loc 10 60 42 view .LVU2729
 9845              	.LBE2051:
 9846              	.LBE2052:
 394:Veno-Echo.cpp ****         
 9847              		.loc 20 394 9 is_stmt 1 view .LVU2730
 9848              	.LBB2053:
 9849              	.LBI2053:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9850              		.loc 10 60 17 view .LVU2731
 9851              	.LBB2054:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9852              		.loc 10 60 37 view .LVU2732
 9853              	.LBE2054:
 9854              	.LBE2053:
 9855              	.LBB2057:
 9856              	.LBB2032:
 9857              	.LBB2015:
 9858              	.LBB1998:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9859              		.loc 19 174 82 is_stmt 0 view .LVU2733
 9860 039c F6EE028A 		vmov.f32	s17, #5.625e-1
 9861              	.LBE1998:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 315


 9862              	.LBE2015:
 9863              	.LBE2032:
 9864              	.LBE2057:
 9865              	.LBB2058:
 9866              	.LBB2055:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9867              		.loc 10 60 42 view .LVU2734
 9868 03a0 3E48     		ldr	r0, .L646+88
 9869              	.LBE2055:
 9870              	.LBE2058:
 413:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9871              		.loc 20 413 49 view .LVU2735
 9872 03a2 1D68     		ldr	r5, [r3]
 9873              	.LBB2059:
 9874              	.LBB2056:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9875              		.loc 10 60 42 view .LVU2736
 9876 03a4 80ED009A 		vstr.32	s18, [r0]
 9877              	.LVL617:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9878              		.loc 10 60 42 view .LVU2737
 9879              	.LBE2056:
 9880              	.LBE2059:
 396:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9881              		.loc 20 396 9 is_stmt 1 view .LVU2738
 9882              	.LBB2060:
 9883              	.LBI2060:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9884              		.loc 10 60 17 view .LVU2739
 9885              	.LBB2061:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9886              		.loc 10 60 37 view .LVU2740
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9887              		.loc 10 60 42 is_stmt 0 view .LVU2741
 9888 03a8 3D48     		ldr	r0, .L646+92
 9889              	.LBE2061:
 9890              	.LBE2060:
 9891              	.LBB2063:
 9892              	.LBB2033:
 9893              	.LBB2016:
 9894              	.LBB1999:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9895              		.loc 19 174 71 view .LVU2742
 9896 03aa 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9897              		.loc 19 174 46 view .LVU2743
 9898 03ae 9FED3DAA 		vldr.32	s20, .L646+96
 9899              	.LBE1999:
 9900              	.LBE2016:
 9901              	.LBE2033:
 9902              	.LBE2063:
 9903              	.LBB2064:
 9904              	.LBB2062:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9905              		.loc 10 60 42 view .LVU2744
 9906 03b2 80ED008A 		vstr.32	s16, [r0]
 9907              	.LVL618:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 316


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9908              		.loc 10 60 42 view .LVU2745
 9909              	.LBE2062:
 9910              	.LBE2064:
 397:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9911              		.loc 20 397 9 is_stmt 1 view .LVU2746
 9912              	.LBB2065:
 9913              	.LBI2065:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9914              		.loc 10 60 17 view .LVU2747
 9915              	.LBB2066:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9916              		.loc 10 60 37 view .LVU2748
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9917              		.loc 10 60 42 is_stmt 0 view .LVU2749
 9918 03b6 3C48     		ldr	r0, .L646+100
 9919              	.LBE2066:
 9920              	.LBE2065:
 9921              	.LBB2068:
 9922              	.LBB2034:
 9923              	.LBB2017:
 9924              	.LBB2000:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9925              		.loc 19 174 71 view .LVU2750
 9926 03b8 93ED00BA 		vldr.32	s22, [r3]
 9927              	.LBE2000:
 9928              	.LBE2017:
 9929              	.LBE2034:
 9930              	.LBE2068:
 9931              	.LBB2069:
 9932              	.LBB2067:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9933              		.loc 10 60 42 view .LVU2751
 9934 03bc 80ED008A 		vstr.32	s16, [r0]
 9935              	.LVL619:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9936              		.loc 10 60 42 view .LVU2752
 9937              	.LBE2067:
 9938              	.LBE2069:
 398:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9939              		.loc 20 398 9 is_stmt 1 view .LVU2753
 9940              	.LBB2070:
 9941              	.LBI2070:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9942              		.loc 10 60 17 view .LVU2754
 9943              	.LBB2071:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9944              		.loc 10 60 37 view .LVU2755
 9945              	.LBE2071:
 9946              	.LBE2070:
 9947              	.LBB2074:
 9948              	.LBB2075:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9949              		.loc 10 60 42 is_stmt 0 view .LVU2756
 9950 03c0 3A48     		ldr	r0, .L646+104
 9951              	.LBE2075:
 9952              	.LBE2074:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 317


 9953              	.LBB2078:
 9954              	.LBB2035:
 9955              	.LBB2018:
 9956              	.LBB2001:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9957              		.loc 19 174 46 view .LVU2757
 9958 03c2 2BEE0A0A 		vmul.f32	s0, s22, s20
 9959              	.LVL620:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9960              		.loc 19 174 71 view .LVU2758
 9961 03c6 0493     		str	r3, [sp, #16]
 9962              		.loc 19 175 77 view .LVU2759
 9963 03c8 3AEECBCA 		vsub.f32	s24, s21, s22
 9964              	.LBE2001:
 9965              	.LBE2018:
 9966              	.LBE2035:
 9967              	.LBE2078:
 9968              	.LBB2079:
 9969              	.LBB2076:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9970              		.loc 10 60 42 view .LVU2760
 9971 03cc 80ED008A 		vstr.32	s16, [r0]
 9972              	.LBE2076:
 9973              	.LBE2079:
 406:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9974              		.loc 20 406 27 view .LVU2761
 9975 03d0 374B     		ldr	r3, .L646+108
 9976              	.LBB2080:
 9977              	.LBB2081:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9978              		.loc 10 60 42 view .LVU2762
 9979 03d2 3848     		ldr	r0, .L646+112
 9980              	.LBE2081:
 9981              	.LBE2080:
 406:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9982              		.loc 20 406 27 view .LVU2763
 9983 03d4 1B68     		ldr	r3, [r3]	@ float
 9984              	.LBB2084:
 9985              	.LBB2082:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9986              		.loc 10 60 42 view .LVU2764
 9987 03d6 80ED008A 		vstr.32	s16, [r0]
 9988              	.LBE2082:
 9989              	.LBE2084:
 9990              	.LBB2085:
 9991              	.LBB2072:
 9992 03da 3748     		ldr	r0, .L646+116
 9993              	.LBE2072:
 9994              	.LBE2085:
 9995              	.LBB2086:
 9996              	.LBB2036:
 9997              	.LBB2019:
 9998              	.LBB2002:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9999              		.loc 19 174 103 view .LVU2765
 10000 03dc DFED379A 		vldr.32	s19, .L646+120
 10001              	.LBE2002:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 318


 10002              	.LBE2019:
 10003              	.LBE2036:
 10004              	.LBE2086:
 10005              	.LBB2087:
 10006              	.LBB2073:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10007              		.loc 10 60 42 view .LVU2766
 10008 03e0 C0ED007A 		vstr.32	s15, [r0]
 10009              	.LVL621:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10010              		.loc 10 60 42 view .LVU2767
 10011              	.LBE2073:
 10012              	.LBE2087:
 399:Veno-Echo.cpp **** 
 10013              		.loc 20 399 9 is_stmt 1 view .LVU2768
 10014              	.LBB2088:
 10015              	.LBI2088:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10016              		.loc 10 60 17 view .LVU2769
 10017              	.LBB2089:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10018              		.loc 10 60 37 view .LVU2770
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10019              		.loc 10 60 42 is_stmt 0 view .LVU2771
 10020 03e4 3648     		ldr	r0, .L646+124
 10021              	.LBE2089:
 10022              	.LBE2088:
 10023              	.LBB2091:
 10024              	.LBB2037:
 10025              	.LBB2020:
 10026              	.LBB2003:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10027              		.loc 19 174 98 view .LVU2772
 10028 03e6 9FED379A 		vldr.32	s18, .L646+128
 10029              	.LVL622:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10030              		.loc 19 174 98 view .LVU2773
 10031              	.LBE2003:
 10032              	.LBE2020:
 10033              	.LBE2037:
 10034              	.LBE2091:
 10035              	.LBB2092:
 10036              	.LBB2090:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10037              		.loc 10 60 42 view .LVU2774
 10038 03ea C0ED007A 		vstr.32	s15, [r0]
 10039              	.LVL623:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10040              		.loc 10 60 42 view .LVU2775
 10041              	.LBE2090:
 10042              	.LBE2092:
 401:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10043              		.loc 20 401 9 is_stmt 1 view .LVU2776
 10044              	.LBB2093:
 10045              	.LBI2074:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10046              		.loc 10 60 17 view .LVU2777
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 319


 10047              	.LBB2077:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10048              		.loc 10 60 37 view .LVU2778
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10049              		.loc 10 60 37 is_stmt 0 view .LVU2779
 10050              	.LBE2077:
 10051              	.LBE2093:
 402:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10052              		.loc 20 402 9 is_stmt 1 view .LVU2780
 10053              	.LBB2094:
 10054              	.LBI2080:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10055              		.loc 10 60 17 view .LVU2781
 10056              	.LBB2083:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10057              		.loc 10 60 37 view .LVU2782
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10058              		.loc 10 60 37 is_stmt 0 view .LVU2783
 10059              	.LBE2083:
 10060              	.LBE2094:
 403:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10061              		.loc 20 403 9 is_stmt 1 view .LVU2784
 10062              	.LBB2095:
 10063              	.LBI2095:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10064              		.loc 10 60 17 view .LVU2785
 10065              	.LBB2096:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10066              		.loc 10 60 37 view .LVU2786
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10067              		.loc 10 60 42 is_stmt 0 view .LVU2787
 10068 03ee 3648     		ldr	r0, .L646+132
 10069              	.LBE2096:
 10070              	.LBE2095:
 10071              	.LBB2098:
 10072              	.LBB2038:
 10073              	.LBB2021:
 10074              	.LBB2004:
 162:delayline_reverse.h **** 
 10075              		.loc 19 162 23 view .LVU2788
 10076 03f0 D5E90267 		ldrd	r6, r7, [r5, #8]
 10077              	.LBE2004:
 10078              	.LBE2021:
 10079              	.LBE2038:
 10080              	.LBE2098:
 10081              	.LBB2099:
 10082              	.LBB2097:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10083              		.loc 10 60 42 view .LVU2789
 10084 03f4 C0ED007A 		vstr.32	s15, [r0]
 10085              	.LVL624:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10086              		.loc 10 60 42 view .LVU2790
 10087              	.LBE2097:
 10088              	.LBE2099:
 404:Veno-Echo.cpp **** 
 10089              		.loc 20 404 9 is_stmt 1 view .LVU2791
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 320


 10090              	.LBB2100:
 10091              	.LBI2100:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10092              		.loc 10 60 17 view .LVU2792
 10093              	.LBB2101:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10094              		.loc 10 60 37 view .LVU2793
 10095              	.LBE2101:
 10096              	.LBE2100:
 10097              	.LBB2104:
 10098              	.LBB2039:
 10099              	.LBB2022:
 10100              	.LBB2005:
 162:delayline_reverse.h **** 
 10101              		.loc 19 162 11 is_stmt 0 view .LVU2794
 10102 03f8 05EB8702 		add	r2, r5, r7, lsl #2
 10103              	.LBE2005:
 10104              	.LBE2022:
 10105              	.LBE2039:
 10106              	.LBE2104:
 10107              	.LBB2105:
 10108              	.LBB2102:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10109              		.loc 10 60 42 view .LVU2795
 10110 03fc 3348     		ldr	r0, .L646+136
 10111              	.LBE2102:
 10112              	.LBE2105:
 10113              	.LBB2106:
 10114              	.LBB2040:
 10115              	.LBB2023:
 10116              	.LBB2006:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10117              		.loc 19 161 11 view .LVU2796
 10118 03fe 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 10119              		.loc 19 162 11 view .LVU2797
 10120 0402 D2ED06DA 		vldr.32	s27, [r2, #24]
 10121              	.LBE2006:
 10122              	.LBE2023:
 10123              	.LBE2040:
 10124              	.LBE2106:
 10125              	.LBB2107:
 10126              	.LBB2108:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10127              		.loc 10 60 42 view .LVU2798
 10128 0406 324A     		ldr	r2, .L646+140
 10129              	.LBE2108:
 10130              	.LBE2107:
 10131              	.LBB2110:
 10132              	.LBB2103:
 10133 0408 C0ED007A 		vstr.32	s15, [r0]
 10134              	.LVL625:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10135              		.loc 10 60 42 view .LVU2799
 10136              	.LBE2103:
 10137              	.LBE2110:
 406:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 321


 10138              		.loc 20 406 9 is_stmt 1 view .LVU2800
 10139              	.LBB2111:
 10140              	.LBI2107:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10141              		.loc 10 60 17 view .LVU2801
 10142              	.LBB2109:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10143              		.loc 10 60 37 view .LVU2802
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10144              		.loc 10 60 42 is_stmt 0 view .LVU2803
 10145 040c 1360     		str	r3, [r2]	@ float
 10146              	.LVL626:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10147              		.loc 10 60 42 view .LVU2804
 10148              	.LBE2109:
 10149              	.LBE2111:
 407:Veno-Echo.cpp **** 
 10150              		.loc 20 407 9 is_stmt 1 view .LVU2805
 10151              	.LBB2112:
 10152              	.LBI2112:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10153              		.loc 10 60 17 view .LVU2806
 10154              	.LBB2113:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10155              		.loc 10 60 37 view .LVU2807
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10156              		.loc 10 60 42 is_stmt 0 view .LVU2808
 10157 040e 314A     		ldr	r2, .L646+144
 10158              	.LBE2113:
 10159              	.LBE2112:
 10160              	.LBB2115:
 10161              	.LBB2041:
 10162              	.LBB2024:
 10163              	.LBB2007:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10164              		.loc 19 161 11 view .LVU2809
 10165 0410 91ED06EA 		vldr.32	s28, [r1, #24]
 10166              	.LBE2007:
 10167              	.LBE2024:
 10168              	.LBE2041:
 10169              	.LBE2115:
 10170              	.LBB2116:
 10171              	.LBB2114:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10172              		.loc 10 60 42 view .LVU2810
 10173 0414 1360     		str	r3, [r2]	@ float
 10174              	.LVL627:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10175              		.loc 10 60 42 view .LVU2811
 10176              	.LBE2114:
 10177              	.LBE2116:
 409:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10178              		.loc 20 409 9 is_stmt 1 view .LVU2812
 10179              	.LBB2117:
 10180              	.LBI2117:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10181              		.loc 10 60 17 view .LVU2813
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 322


 10182              	.LBB2118:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10183              		.loc 10 60 37 view .LVU2814
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10184              		.loc 10 60 42 is_stmt 0 view .LVU2815
 10185 0416 304A     		ldr	r2, .L646+148
 10186 0418 1360     		str	r3, [r2]	@ float
 10187              	.LVL628:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10188              		.loc 10 60 42 view .LVU2816
 10189              	.LBE2118:
 10190              	.LBE2117:
 410:Veno-Echo.cpp **** 
 10191              		.loc 20 410 9 is_stmt 1 view .LVU2817
 10192              	.LBB2119:
 10193              	.LBI2119:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10194              		.loc 10 60 17 view .LVU2818
 10195              	.LBB2120:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10196              		.loc 10 60 37 view .LVU2819
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10197              		.loc 10 60 42 is_stmt 0 view .LVU2820
 10198 041a 304A     		ldr	r2, .L646+152
 10199 041c 1360     		str	r3, [r2]	@ float
 10200              	.LVL629:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10201              		.loc 10 60 42 view .LVU2821
 10202              	.LBE2120:
 10203              	.LBE2119:
 413:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10204              		.loc 20 413 9 is_stmt 1 view .LVU2822
 10205              	.LBB2121:
 10206              	.LBI1993:
  79:Veno-Echo.cpp ****     {
 10207              		.loc 20 79 11 view .LVU2823
 10208              	.LBB2042:
  82:Veno-Echo.cpp ****         return read;
 10209              		.loc 20 82 9 view .LVU2824
 10210              	.LBB2025:
 10211              	.LBI1995:
 159:delayline_reverse.h ****     {
 10212              		.loc 19 159 20 view .LVU2825
 10213              	.LBB2008:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10214              		.loc 19 174 46 is_stmt 0 view .LVU2826
 10215 041e FFF7FEFF 		bl	sinf
 10216              	.LVL630:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10217              		.loc 19 174 46 view .LVU2827
 10218 0422 F0EE40BA 		vmov.f32	s23, s0
 10219              	.LVL631:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10220              		.loc 19 174 103 view .LVU2828
 10221 0426 2BEE290A 		vmul.f32	s0, s22, s19
 10222 042a FFF7FEFF 		bl	sinf
 10223              	.LVL632:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 323


 10224 042e B0EE408A 		vmov.f32	s16, s0
 10225              	.LVL633:
 10226              		.loc 19 175 46 view .LVU2829
 10227 0432 2CEE0A0A 		vmul.f32	s0, s24, s20
 10228 0436 FFF7FEFF 		bl	sinf
 10229              	.LVL634:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10230              		.loc 19 174 98 view .LVU2830
 10231 043a 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10232              		.loc 19 174 82 view .LVU2831
 10233 043e ABEEA88A 		vfma.f32	s16, s23, s17
 10234 0442 4FE0     		b	.L647
 10235              	.L648:
 10236              		.align	2
 10237              	.L646:
 10238 0444 00000000 		.word	.LANCHOR83
 10239 0448 00000000 		.word	.LANCHOR32
 10240 044c 00000000 		.word	.LANCHOR128
 10241 0450 00000000 		.word	.LANCHOR44
 10242 0454 CDCCCC3E 		.word	1053609165
 10243 0458 00000000 		.word	.LANCHOR129
 10244 045c 00000000 		.word	.LANCHOR72
 10245 0460 00000000 		.word	.LANCHOR0
 10246 0464 00000000 		.word	.LANCHOR1
 10247 0468 00000000 		.word	.LANCHOR65
 10248 046c 00000000 		.word	.LANCHOR56
 10249 0470 00000000 		.word	.LANCHOR113
 10250 0474 00000000 		.word	.LANCHOR92
 10251 0478 00000000 		.word	.LANCHOR100
 10252 047c 00000000 		.word	.LANCHOR93
 10253 0480 00000000 		.word	.LANCHOR101
 10254 0484 00000000 		.word	.LANCHOR95
 10255 0488 00000000 		.word	.LANCHOR103
 10256 048c 00000000 		.word	.LANCHOR94
 10257 0490 00000000 		.word	.LANCHOR102
 10258 0494 00000000 		.word	.LANCHOR104
 10259 0498 00000000 		.word	.LANCHOR2
 10260 049c 00000000 		.word	.LANCHOR105
 10261 04a0 00000000 		.word	.LANCHOR116
 10262 04a4 DB0FC93F 		.word	1070141403
 10263 04a8 00000000 		.word	.LANCHOR117
 10264 04ac 00000000 		.word	.LANCHOR120
 10265 04b0 00000000 		.word	.LANCHOR80
 10266 04b4 00000000 		.word	.LANCHOR121
 10267 04b8 00000000 		.word	.LANCHOR118
 10268 04bc E4CB9640 		.word	1083624420
 10269 04c0 00000000 		.word	.LANCHOR119
 10270 04c4 0000803D 		.word	1031798784
 10271 04c8 00000000 		.word	.LANCHOR122
 10272 04cc 00000000 		.word	.LANCHOR123
 10273 04d0 00000000 		.word	.LANCHOR124
 10274 04d4 00000000 		.word	.LANCHOR125
 10275 04d8 00000000 		.word	.LANCHOR126
 10276 04dc 00000000 		.word	.LANCHOR127
 10277 04e0 209F2400 		.word	2400032
 10278              	.L647:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 324


 10279              	.LVL635:
 10280              		.loc 19 175 46 view .LVU2832
 10281 04e4 F0EE40BA 		vmov.f32	s23, s0
 10282              		.loc 19 175 112 view .LVU2833
 10283 04e8 2CEE290A 		vmul.f32	s0, s24, s19
 10284 04ec FFF7FEFF 		bl	sinf
 10285              	.LVL636:
 10286              		.loc 19 175 107 view .LVU2834
 10287 04f0 60EE097A 		vmul.f32	s15, s0, s18
 10288              	.LBE2008:
 10289              	.LBE2025:
 10290              	.LBE2042:
 10291              	.LBE2121:
 414:Veno-Echo.cpp **** 
 10292              		.loc 20 414 49 view .LVU2835
 10293 04f4 C94B     		ldr	r3, .L649
 10294              	.LBB2122:
 10295              	.LBB2043:
 10296              	.LBB2026:
 10297              	.LBB2009:
 10298              		.loc 19 175 91 view .LVU2836
 10299 04f6 EBEEA87A 		vfma.f32	s15, s23, s17
 10300              	.LVL637:
 10301              		.loc 19 175 91 view .LVU2837
 10302              	.LBE2009:
 10303              	.LBE2026:
 10304              	.LBE2043:
 10305              	.LBE2122:
 414:Veno-Echo.cpp **** 
 10306              		.loc 20 414 49 view .LVU2838
 10307 04fa 1C68     		ldr	r4, [r3]
 10308              	.LBB2123:
 10309              	.LBB2044:
 10310              	.LBB2027:
 10311              	.LBB2010:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10312              		.loc 19 174 9 view .LVU2839
 10313 04fc 38EE088A 		vadd.f32	s16, s16, s16
 10314              	.LVL638:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10315              		.loc 19 174 9 view .LVU2840
 10316              	.LBE2010:
 10317              	.LBE2027:
 10318              	.LBE2044:
 10319              	.LBE2123:
 10320              	.LBB2124:
 10321              	.LBB2125:
 10322              	.LBB2126:
 10323              	.LBB2127:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10324              		.loc 19 174 71 view .LVU2841
 10325 0500 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 10326              		.loc 19 162 11 view .LVU2842
 10327 0504 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10328              		.loc 19 174 71 view .LVU2843
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 325


 10329 0508 91ED00CA 		vldr.32	s24, [r1]
 10330              	.LBE2127:
 10331              	.LBE2126:
 10332              	.LBE2125:
 10333              	.LBE2124:
 10334              	.LBB2158:
 10335              	.LBB2045:
 10336              	.LBB2028:
 10337              	.LBB2011:
 10338              		.loc 19 175 9 view .LVU2844
 10339 050c 77EEA77A 		vadd.f32	s15, s15, s15
 10340              	.LVL639:
 10341              		.loc 19 175 9 view .LVU2845
 10342              	.LBE2011:
 10343              	.LBE2028:
 10344              	.LBE2045:
 10345              	.LBE2158:
 10346              	.LBB2159:
 10347              	.LBB2148:
 10348              	.LBB2138:
 10349              	.LBB2128:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10350              		.loc 19 161 11 view .LVU2846
 10351 0510 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10352              		.loc 19 162 11 view .LVU2847
 10353 0514 04EB8303 		add	r3, r4, r3, lsl #2
 10354              		.loc 19 175 77 view .LVU2848
 10355 0518 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10356              		.loc 19 174 46 view .LVU2849
 10357 051c 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10358              		.loc 19 161 11 view .LVU2850
 10359 0520 92ED06DA 		vldr.32	s26, [r2, #24]
 10360              	.LBE2128:
 10361              	.LBE2138:
 10362              	.LBE2148:
 10363              	.LBE2159:
 10364              	.LBB2160:
 10365              	.LBB2046:
 10366              	.LBB2029:
 10367              	.LBB2012:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10368              		.loc 19 177 44 view .LVU2851
 10369 0524 67EE8E7A 		vmul.f32	s15, s15, s28
 10370              	.LVL640:
 10371              		.loc 19 177 44 view .LVU2852
 10372              	.LBE2012:
 10373              	.LBE2029:
 10374              	.LBE2046:
 10375              	.LBE2160:
 10376              	.LBB2161:
 10377              	.LBB2149:
 10378              	.LBB2139:
 10379              	.LBB2129:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 326


 162:delayline_reverse.h **** 
 10380              		.loc 19 162 11 view .LVU2853
 10381 0528 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10382              		.loc 19 174 71 view .LVU2854
 10383 052c 0391     		str	r1, [sp, #12]
 10384              	.LBE2129:
 10385              	.LBE2139:
 10386              	.LBE2149:
 10387              	.LBE2161:
 10388              	.LBB2162:
 10389              	.LBB2047:
 10390              	.LBB2030:
 10391              	.LBB2013:
 10392              		.loc 19 177 54 view .LVU2855
 10393 052e EDEE887A 		vfma.f32	s15, s27, s16
 10394              	.LVL641:
 10395              		.loc 19 177 54 view .LVU2856
 10396              	.LBE2013:
 10397              	.LBE2030:
  83:Veno-Echo.cpp ****     }
 10398              		.loc 20 83 9 is_stmt 1 view .LVU2857
  83:Veno-Echo.cpp ****     }
 10399              		.loc 20 83 9 is_stmt 0 view .LVU2858
 10400              	.LBE2047:
 10401              	.LBE2162:
 413:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10402              		.loc 20 413 50 view .LVU2859
 10403 0532 CDED067A 		vstr.32	s15, [sp, #24]
 414:Veno-Echo.cpp **** 
 10404              		.loc 20 414 9 is_stmt 1 view .LVU2860
 10405              	.LVL642:
 10406              	.LBB2163:
 10407              	.LBI2124:
  79:Veno-Echo.cpp ****     {
 10408              		.loc 20 79 11 view .LVU2861
 10409              	.LBB2150:
  82:Veno-Echo.cpp ****         return read;
 10410              		.loc 20 82 9 view .LVU2862
 10411              	.LBB2140:
 10412              	.LBI2126:
 159:delayline_reverse.h ****     {
 10413              		.loc 19 159 20 view .LVU2863
 10414              	.LBB2130:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10415              		.loc 19 174 46 is_stmt 0 view .LVU2864
 10416 0536 FFF7FEFF 		bl	sinf
 10417              	.LVL643:
 10418 053a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10419              		.loc 19 174 103 view .LVU2865
 10420 053e 2CEE290A 		vmul.f32	s0, s24, s19
 10421 0542 FFF7FEFF 		bl	sinf
 10422              	.LVL644:
 10423 0546 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10424              		.loc 19 175 46 view .LVU2866
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 327


 10425 054a 2AEE8A0A 		vmul.f32	s0, s21, s20
 10426 054e FFF7FEFF 		bl	sinf
 10427              	.LVL645:
 10428 0552 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10429              		.loc 19 175 112 view .LVU2867
 10430 0556 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10431              		.loc 19 174 98 view .LVU2868
 10432 055a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10433              		.loc 19 175 46 view .LVU2869
 10434 055e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 10435              		.loc 19 175 112 view .LVU2870
 10436 0562 FFF7FEFF 		bl	sinf
 10437              	.LVL646:
 10438              	.LBE2130:
 10439              	.LBE2140:
 10440              	.LBE2150:
 10441              	.LBE2163:
 10442              	.LBB2164:
 10443              	.LBB2165:
 10444              	.LBB2166:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10445              		.loc 19 98 38 view .LVU2871
 10446 0566 AE48     		ldr	r0, .L649+4
 10447              	.LBE2166:
 10448              	.LBE2165:
 10449              	.LBE2164:
 10450              	.LBB2189:
 10451              	.LBB2151:
 10452              	.LBB2141:
 10453              	.LBB2131:
 175:delayline_reverse.h **** 
 10454              		.loc 19 175 107 view .LVU2872
 10455 0568 60EE097A 		vmul.f32	s15, s0, s18
 10456              	.LBE2131:
 10457              	.LBE2141:
 10458              	.LBE2151:
 10459              	.LBE2189:
 10460              	.LBB2190:
 10461              	.LBB2178:
 10462              	.LBB2167:
  92:delayline_reverse.h ****         
 10463              		.loc 19 92 57 view .LVU2873
 10464 056c AD4B     		ldr	r3, .L649+8
 10465              	.LBE2167:
 10466              	.LBE2178:
 10467              	.LBE2190:
 10468              	.LBB2191:
 10469              	.LBB2152:
 10470              	.LBB2142:
 10471              	.LBB2132:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10472              		.loc 19 174 82 view .LVU2874
 10473 056e ABEEA88A 		vfma.f32	s16, s23, s17
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 328


 10474              	.LVL647:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10475              		.loc 19 174 82 view .LVU2875
 10476              	.LBE2132:
 10477              	.LBE2142:
 10478              	.LBE2152:
 10479              	.LBE2191:
 10480              	.LBB2192:
 10481              	.LBB2179:
 10482              	.LBB2168:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10483              		.loc 19 98 38 view .LVU2876
 10484 0572 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10485              		.loc 19 90 15 view .LVU2877
 10486 0574 D5F804E0 		ldr	lr, [r5, #4]
 10487              	.LBE2168:
 10488              	.LBE2179:
 10489              	.LBE2192:
 10490              	.LBB2193:
 10491              	.LBB2153:
 10492              	.LBB2143:
 10493              	.LBB2133:
 175:delayline_reverse.h **** 
 10494              		.loc 19 175 91 view .LVU2878
 10495 0578 E9EEA87A 		vfma.f32	s15, s19, s17
 10496              	.LVL648:
 175:delayline_reverse.h **** 
 10497              		.loc 19 175 91 view .LVU2879
 10498              	.LBE2133:
 10499              	.LBE2143:
 10500              	.LBE2153:
 10501              	.LBE2193:
 10502              	.LBB2194:
 10503              	.LBB2180:
 10504              	.LBB2169:
  99:delayline_reverse.h ****  
 10505              		.loc 19 99 38 view .LVU2880
 10506 057c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10507              		.loc 19 98 50 view .LVU2881
 10508 057e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 10509              		.loc 19 92 57 view .LVU2882
 10510 0582 DFF8C4C2 		ldr	ip, .L649+44
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10511              		.loc 19 90 9 view .LVU2883
 10512 0586 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10513              		.loc 19 98 50 view .LVU2884
 10514 058a 890C     		lsrs	r1, r1, #18
 10515              	.LBE2169:
 10516              	.LBE2180:
 10517              	.LBE2194:
 10518              	.LBB2195:
 10519              	.LBB2154:
 10520              	.LBB2144:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 329


 10521              	.LBB2134:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10522              		.loc 19 174 9 view .LVU2885
 10523 058c 38EE088A 		vadd.f32	s16, s16, s16
 10524              	.LVL649:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10525              		.loc 19 174 9 view .LVU2886
 10526              	.LBE2134:
 10527              	.LBE2144:
 10528              	.LBE2154:
 10529              	.LBE2195:
 10530              	.LBB2196:
 10531              	.LBB2181:
 10532              	.LBB2170:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10533              		.loc 19 98 50 view .LVU2887
 10534 0590 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 10535              		.loc 19 92 45 view .LVU2888
 10536 0594 A44E     		ldr	r6, .L649+12
 10537              	.LBE2170:
 10538              	.LBE2181:
 10539              	.LBE2196:
 10540              	.LBB2197:
 10541              	.LBB2155:
 10542              	.LBB2145:
 10543              	.LBB2135:
 175:delayline_reverse.h **** 
 10544              		.loc 19 175 9 view .LVU2889
 10545 0596 37EEA70A 		vadd.f32	s0, s15, s15
 10546              	.LVL650:
 175:delayline_reverse.h **** 
 10547              		.loc 19 175 9 view .LVU2890
 10548              	.LBE2135:
 10549              	.LBE2145:
 10550              	.LBE2155:
 10551              	.LBE2197:
 417:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10552              		.loc 20 417 26 view .LVU2891
 10553 059a DBED007A 		vldr.32	s15, [fp]
 10554              	.LBB2198:
 10555              	.LBB2182:
 10556              	.LBB2171:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10557              		.loc 19 98 50 view .LVU2892
 10558 059e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10559              		.loc 19 92 45 view .LVU2893
 10560 05a0 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 10561              		.loc 19 99 50 view .LVU2894
 10562 05a2 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 10563              		.loc 19 92 57 view .LVU2895
 10564 05a6 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10565              		.loc 19 98 9 view .LVU2896
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 330


 10566 05aa 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 10567              		.loc 19 99 50 view .LVU2897
 10568 05ac 4FEA9E4E 		lsr	lr, lr, #18
 10569              	.LBE2171:
 10570              	.LBE2182:
 10571              	.LBE2198:
 10572              	.LBB2199:
 10573              	.LBB2156:
 10574              	.LBB2146:
 10575              	.LBB2136:
 10576              		.loc 19 177 44 view .LVU2898
 10577 05b0 20EE0D0A 		vmul.f32	s0, s0, s26
 10578              	.LVL651:
 10579              		.loc 19 177 44 view .LVU2899
 10580              	.LBE2136:
 10581              	.LBE2146:
 10582              	.LBE2156:
 10583              	.LBE2199:
 10584              	.LBB2200:
 10585              	.LBB2183:
 10586              	.LBB2172:
  92:delayline_reverse.h ****         
 10587              		.loc 19 92 57 view .LVU2900
 10588 05b4 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 10589              		.loc 19 99 50 view .LVU2901
 10590 05b6 0CFB1E00 		mls	r0, ip, lr, r0
 10591              	.LBE2172:
 10592              	.LBE2183:
 10593              	.LBE2200:
 10594              	.LBB2201:
 10595              	.LBB2157:
 10596              	.LBB2147:
 10597              	.LBB2137:
 10598              		.loc 19 177 54 view .LVU2902
 10599 05ba ACEE880A 		vfma.f32	s0, s25, s16
 10600              	.LVL652:
 10601              		.loc 19 177 54 view .LVU2903
 10602              	.LBE2137:
 10603              	.LBE2147:
  83:Veno-Echo.cpp ****     }
 10604              		.loc 20 83 9 is_stmt 1 view .LVU2904
  83:Veno-Echo.cpp ****     }
 10605              		.loc 20 83 9 is_stmt 0 view .LVU2905
 10606              	.LBE2157:
 10607              	.LBE2201:
 10608              	.LBB2202:
 10609              	.LBB2184:
 10610              	.LBB2173:
  92:delayline_reverse.h ****         
 10611              		.loc 19 92 57 view .LVU2906
 10612 05be 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 10613              		.loc 19 95 43 view .LVU2907
 10614 05c2 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 331


 10615              		.loc 19 90 9 view .LVU2908
 10616 05c6 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 10617              		.loc 19 95 43 view .LVU2909
 10618 05ca 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 10619              		.loc 19 101 36 view .LVU2910
 10620 05cc DFF864A2 		ldr	r10, .L649+24
  95:delayline_reverse.h **** 
 10621              		.loc 19 95 43 view .LVU2911
 10622 05d0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 10623              		.loc 19 101 36 view .LVU2912
 10624 05d2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 10625              		.loc 19 101 45 view .LVU2913
 10626 05d6 07F1FF3A 		add	r10, r7, #-1
 10627              	.LBE2173:
 10628              	.LBE2184:
 10629              	.LBE2202:
 414:Veno-Echo.cpp **** 
 10630              		.loc 20 414 50 view .LVU2914
 10631 05da 8DED070A 		vstr.32	s0, [sp, #28]
 417:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10632              		.loc 20 417 9 is_stmt 1 view .LVU2915
 10633              	.LVL653:
 10634              	.LBB2203:
 10635              	.LBI2164:
  92:Veno-Echo.cpp ****     {
 10636              		.loc 20 92 10 view .LVU2916
  92:Veno-Echo.cpp ****     {
 10637              		.loc 20 92 10 is_stmt 0 view .LVU2917
 10638              	.LBE2203:
 10639              	.LBE2253:
 10640              	.LBE1871:
  94:Veno-Echo.cpp ****     }
 10641              		.loc 20 94 9 is_stmt 1 view .LVU2918
 10642              	.LBB2265:
 10643              	.LBB2254:
 10644              	.LBB2204:
 10645              	.LBB2185:
 10646              	.LBI2165:
  88:delayline_reverse.h ****     {
 10647              		.loc 19 88 17 view .LVU2919
 10648              	.LBB2174:
  99:delayline_reverse.h ****  
 10649              		.loc 19 99 9 is_stmt 0 view .LVU2920
 10650 05de C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 10651              		.loc 19 95 54 view .LVU2921
 10652 05e2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 10653              		.loc 19 101 45 view .LVU2922
 10654 05e6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 10655              		.loc 19 95 54 view .LVU2923
 10656 05ea 07FB1122 		mls	r2, r7, r1, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 332


  92:delayline_reverse.h ****         
 10657              		.loc 19 92 9 view .LVU2924
 10658 05ee 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 10659              		.loc 19 101 9 view .LVU2925
 10660 05f0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 10661              		.loc 19 95 9 view .LVU2926
 10662 05f2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 10663              		.loc 19 101 9 view .LVU2927
 10664 05f4 40F2DA80 		bls	.L522
 103:delayline_reverse.h ****             {
 10665              		.loc 19 103 17 view .LVU2928
 10666 05f8 8C49     		ldr	r1, .L649+16
 103:delayline_reverse.h ****             {
 10667              		.loc 19 103 13 view .LVU2929
 10668 05fa 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10669              		.loc 19 103 17 view .LVU2930
 10670 05fc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 10671              		.loc 19 103 13 view .LVU2931
 10672 05fe 0028     		cmp	r0, #0
 10673 0600 40F0DA80 		bne	.L637
 107:delayline_reverse.h ****                 {
 10674              		.loc 19 107 21 view .LVU2932
 10675 0604 8A48     		ldr	r0, .L649+20
 105:delayline_reverse.h ****                 
 10676              		.loc 19 105 17 view .LVU2933
 10677 0606 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10678              		.loc 19 110 45 view .LVU2934
 10679 0608 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 10680              		.loc 19 107 17 view .LVU2935
 10681 060a 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10682              		.loc 19 107 21 view .LVU2936
 10683 060c 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 10684              		.loc 19 105 17 view .LVU2937
 10685 060e 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 10686              		.loc 19 107 17 view .LVU2938
 10687 0610 002E     		cmp	r6, #0
 10688 0612 40F07782 		bne	.L524
 110:delayline_reverse.h ****                 }
 10689              		.loc 19 110 21 view .LVU2939
 10690 0616 EB60     		str	r3, [r5, #12]
 10691              	.L525:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10692              		.loc 19 130 45 view .LVU2940
 10693 0618 07EE90EA 		vmov	s15, lr	@ int
 10694              	.LVL654:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10695              		.loc 19 130 45 view .LVU2941
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 333


 10696 061c B7EE007A 		vmov.f32	s14, #1.0e+0
 10697 0620 F8EE676A 		vcvt.f32.u32	s13, s15
 10698 0624 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10699              		.loc 19 130 37 view .LVU2942
 10700 0628 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10701              		.loc 19 131 17 view .LVU2943
 10702 062c B4EEC7BA 		vcmpe.f32	s22, s14
 10703 0630 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10704 0634 40F3D780 		ble	.L638
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10705              		.loc 19 133 21 view .LVU2944
 10706 0638 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10707              		.loc 19 134 21 view .LVU2945
 10708 063a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10709              		.loc 19 133 21 view .LVU2946
 10710 063c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 10711              		.loc 19 135 21 view .LVU2947
 10712 0640 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10713              		.loc 19 134 21 view .LVU2948
 10714 0642 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 10715              		.loc 19 135 21 view .LVU2949
 10716 0644 0370     		strb	r3, [r0]
 10717              	.LVL655:
 10718              	.L528:
 135:delayline_reverse.h ****                 }
 10719              		.loc 19 135 21 view .LVU2950
 10720              	.LBE2174:
 10721              	.LBE2185:
 10722              	.LBE2204:
 418:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10723              		.loc 20 418 9 is_stmt 1 view .LVU2951
 10724              	.LBB2205:
 10725              	.LBB2206:
 10726              	.LBB2207:
  95:delayline_reverse.h **** 
 10727              		.loc 19 95 45 is_stmt 0 view .LVU2952
 10728 0646 2169     		ldr	r1, [r4, #16]
 10729 0648 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10730              		.loc 19 95 43 view .LVU2953
 10731 064c 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10732              		.loc 19 90 15 view .LVU2954
 10733 064e 6568     		ldr	r5, [r4, #4]
 10734 0650 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10735              		.loc 19 95 43 view .LVU2955
 10736 0654 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10737              		.loc 19 92 45 view .LVU2956
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 334


 10738 0656 744F     		ldr	r7, .L649+12
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10739              		.loc 19 90 9 view .LVU2957
 10740 0658 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10741              		.loc 19 98 38 view .LVU2958
 10742 065c 704B     		ldr	r3, .L649+4
  95:delayline_reverse.h **** 
 10743              		.loc 19 95 43 view .LVU2959
 10744 065e 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10745              		.loc 19 92 45 view .LVU2960
 10746 0660 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 10747              		.loc 19 101 45 view .LVU2961
 10748 0662 01F1FF3C 		add	ip, r1, #-1
 10749              	.LBE2207:
 10750              	.LBE2206:
 10751              	.LBE2205:
 418:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10752              		.loc 20 418 26 view .LVU2962
 10753 0666 DBED017A 		vldr.32	s15, [fp, #4]
 10754              	.LVL656:
 10755              	.LBB2218:
 10756              	.LBI2205:
  92:Veno-Echo.cpp ****     {
 10757              		.loc 20 92 10 is_stmt 1 view .LVU2963
  92:Veno-Echo.cpp ****     {
 10758              		.loc 20 92 10 is_stmt 0 view .LVU2964
 10759              	.LBE2218:
 10760              	.LBE2254:
 10761              	.LBE2265:
  94:Veno-Echo.cpp ****     }
 10762              		.loc 20 94 9 is_stmt 1 view .LVU2965
 10763              	.LBB2266:
 10764              	.LBB2255:
 10765              	.LBB2219:
 10766              	.LBB2213:
 10767              	.LBI2206:
  88:delayline_reverse.h ****     {
 10768              		.loc 19 88 17 view .LVU2966
 10769              	.LBB2208:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10770              		.loc 19 98 38 is_stmt 0 view .LVU2967
 10771 066a D4E90205 		ldrd	r0, r5, [r4, #8]
 10772 066e 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10773              		.loc 19 99 38 view .LVU2968
 10774 0672 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10775              		.loc 19 92 57 view .LVU2969
 10776 0674 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10777              		.loc 19 95 54 view .LVU2970
 10778 0678 B2FBF1F0 		udiv	r0, r2, r1
 10779 067c 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 335


 10780              		.loc 19 101 36 view .LVU2971
 10781 0680 6C49     		ldr	r1, .L649+24
  92:delayline_reverse.h ****         
 10782              		.loc 19 92 57 view .LVU2972
 10783 0682 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 10784              		.loc 19 101 36 view .LVU2973
 10785 0686 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10786              		.loc 19 92 57 view .LVU2974
 10787 0688 A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10788              		.loc 19 90 9 view .LVU2975
 10789 068c CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 10790              		.loc 19 101 36 view .LVU2976
 10791 0690 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10792              		.loc 19 92 57 view .LVU2977
 10793 0692 A3FB0762 		umull	r6, r2, r3, r7
 10794 0696 DFF8B0E1 		ldr	lr, .L649+44
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10795              		.loc 19 98 50 view .LVU2978
 10796 069a A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10797              		.loc 19 99 50 view .LVU2979
 10798 069e A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10799              		.loc 19 101 45 view .LVU2980
 10800 06a2 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10801              		.loc 19 92 57 view .LVU2981
 10802 06a4 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10803              		.loc 19 95 9 view .LVU2982
 10804 06a6 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10805              		.loc 19 98 50 view .LVU2983
 10806 06a8 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 10807              		.loc 19 101 45 view .LVU2984
 10808 06aa ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10809              		.loc 19 99 50 view .LVU2985
 10810 06ae 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10811              		.loc 19 92 57 view .LVU2986
 10812 06b0 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10813              		.loc 19 98 50 view .LVU2987
 10814 06b4 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10815              		.loc 19 101 9 view .LVU2988
 10816 06b8 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10817              		.loc 19 99 50 view .LVU2989
 10818 06ba 0EFB1353 		mls	r3, lr, r3, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 336


  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10819              		.loc 19 98 9 view .LVU2990
 10820 06be C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10821              		.loc 19 99 9 view .LVU2991
 10822 06c2 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10823              		.loc 19 101 9 view .LVU2992
 10824 06c4 51D9     		bls	.L532
 103:delayline_reverse.h ****             {
 10825              		.loc 19 103 17 view .LVU2993
 10826 06c6 5949     		ldr	r1, .L649+16
 103:delayline_reverse.h ****             {
 10827              		.loc 19 103 13 view .LVU2994
 10828 06c8 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10829              		.loc 19 103 17 view .LVU2995
 10830 06ca 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10831              		.loc 19 103 13 view .LVU2996
 10832 06cc 0028     		cmp	r0, #0
 10833 06ce 51D1     		bne	.L639
 107:delayline_reverse.h ****                 {
 10834              		.loc 19 107 21 view .LVU2997
 10835 06d0 5748     		ldr	r0, .L649+20
 105:delayline_reverse.h ****                 
 10836              		.loc 19 105 17 view .LVU2998
 10837 06d2 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10838              		.loc 19 110 45 view .LVU2999
 10839 06d4 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10840              		.loc 19 107 17 view .LVU3000
 10841 06d6 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10842              		.loc 19 107 21 view .LVU3001
 10843 06d8 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10844              		.loc 19 105 17 view .LVU3002
 10845 06da 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 10846              		.loc 19 107 17 view .LVU3003
 10847 06dc 002D     		cmp	r5, #0
 10848 06de 40F01382 		bne	.L534
 110:delayline_reverse.h ****                 }
 10849              		.loc 19 110 21 view .LVU3004
 10850 06e2 E260     		str	r2, [r4, #12]
 10851              	.L535:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10852              		.loc 19 130 45 view .LVU3005
 10853 06e4 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10854              	.LVL657:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10855              		.loc 19 130 45 view .LVU3006
 10856 06e8 B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10857              		.loc 19 130 37 view .LVU3007
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 337


 10858 06ec 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10859              		.loc 19 130 45 view .LVU3008
 10860 06ee B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10861              		.loc 19 130 37 view .LVU3009
 10862 06f2 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10863              		.loc 19 130 45 view .LVU3010
 10864 06f6 C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10865              		.loc 19 130 37 view .LVU3011
 10866 06fa 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10867              		.loc 19 131 17 view .LVU3012
 10868 06fe F4EEC77A 		vcmpe.f32	s15, s14
 10869 0702 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10870 0706 40F31282 		ble	.L642
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10871              		.loc 19 133 21 view .LVU3013
 10872 070a 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10873              		.loc 19 134 21 view .LVU3014
 10874 070c 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10875              		.loc 19 133 21 view .LVU3015
 10876 070e 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10877              		.loc 19 135 21 view .LVU3016
 10878 0712 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10879              		.loc 19 134 21 view .LVU3017
 10880 0714 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10881              		.loc 19 135 21 view .LVU3018
 10882 0716 0270     		strb	r2, [r0]
 10883              	.LVL658:
 10884              	.L538:
 135:delayline_reverse.h ****                 }
 10885              		.loc 19 135 21 view .LVU3019
 10886              	.LBE2208:
 10887              	.LBE2213:
 10888              	.LBE2219:
 423:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10889              		.loc 20 423 9 is_stmt 1 view .LVU3020
 423:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10890              		.loc 20 423 56 is_stmt 0 view .LVU3021
 10891 0718 06AA     		add	r2, sp, #24
 10892 071a 5946     		mov	r1, fp
 10893 071c 4648     		ldr	r0, .L649+28
 10894 071e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10895              	.LVL659:
 424:Veno-Echo.cpp **** 
 10896              		.loc 20 424 56 view .LVU3022
 10897 0722 18EE101A 		vmov	r1, s16	@ int
 10898 0726 07AA     		add	r2, sp, #28
 10899 0728 4448     		ldr	r0, .L649+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 338


 423:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10900              		.loc 20 423 56 view .LVU3023
 10901 072a F0EE408A 		vmov.f32	s17, s0
 10902              	.LVL660:
 424:Veno-Echo.cpp **** 
 10903              		.loc 20 424 9 is_stmt 1 view .LVU3024
 424:Veno-Echo.cpp **** 
 10904              		.loc 20 424 56 is_stmt 0 view .LVU3025
 10905 072e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10906              	.LVL661:
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10907              		.loc 20 427 46 view .LVU3026
 10908 0732 4348     		ldr	r0, .L649+36
 424:Veno-Echo.cpp **** 
 10909              		.loc 20 424 56 view .LVU3027
 10910 0734 B0EE408A 		vmov.f32	s16, s0
 10911              	.LVL662:
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10912              		.loc 20 427 9 is_stmt 1 view .LVU3028
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10913              		.loc 20 427 46 is_stmt 0 view .LVU3029
 10914 0738 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10915              	.LVL663:
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10916              		.loc 20 427 46 view .LVU3030
 10917 073c 0346     		mov	r3, r0
 428:Veno-Echo.cpp **** 
 10918              		.loc 20 428 46 view .LVU3031
 10919 073e 4148     		ldr	r0, .L649+40
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10920              		.loc 20 427 45 view .LVU3032
 10921 0740 1B68     		ldr	r3, [r3]	@ float
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10922              		.loc 20 427 47 view .LVU3033
 10923 0742 0893     		str	r3, [sp, #32]	@ float
 428:Veno-Echo.cpp **** 
 10924              		.loc 20 428 9 is_stmt 1 view .LVU3034
 428:Veno-Echo.cpp **** 
 10925              		.loc 20 428 46 is_stmt 0 view .LVU3035
 10926 0744 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10927              	.LVL664:
 428:Veno-Echo.cpp **** 
 10928              		.loc 20 428 45 view .LVU3036
 10929 0748 0368     		ldr	r3, [r0]	@ float
 428:Veno-Echo.cpp **** 
 10930              		.loc 20 428 47 view .LVU3037
 10931 074a 0993     		str	r3, [sp, #36]	@ float
 431:Veno-Echo.cpp **** 
 10932              		.loc 20 431 9 is_stmt 1 view .LVU3038
 431:Veno-Echo.cpp **** 
 10933              		.loc 20 431 28 is_stmt 0 view .LVU3039
 10934 074c FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10935              	.LVL665:
 434:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10936              		.loc 20 434 9 is_stmt 1 view .LVU3040
 10937              	.LBB2220:
 10938              	.LBB1875:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 339


2004:Veno-Echo.cpp ****         returnval = limit;
 10939              		.loc 20 2004 5 is_stmt 0 view .LVU3041
 10940 0750 B0EE007A 		vmov.f32	s14, #2.0e+0
 10941              	.LBE1875:
 10942              	.LBE2220:
 434:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10943              		.loc 20 434 34 view .LVU3042
 10944 0754 DDED087A 		vldr.32	s15, [sp, #32]
 10945              	.LVL666:
 10946              	.LBB2221:
 10947              	.LBI1873:
2001:Veno-Echo.cpp **** {
 10948              		.loc 20 2001 7 is_stmt 1 view .LVU3043
 10949              	.LBB1876:
2003:Veno-Echo.cpp ****     if (input > limit)
 10950              		.loc 20 2003 5 view .LVU3044
2004:Veno-Echo.cpp ****         returnval = limit;
 10951              		.loc 20 2004 5 view .LVU3045
 10952 0758 F4EEC77A 		vcmpe.f32	s15, s14
 10953 075c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10954 0760 7FF79EAC 		ble	.L643
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10955              		.loc 20 2005 19 is_stmt 0 view .LVU3046
 10956 0764 F0EE477A 		vmov.f32	s15, s14
 10957              	.LVL667:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10958              		.loc 20 2005 19 view .LVU3047
 10959 0768 A3E4     		b	.L542
 10960              	.LVL668:
 10961              	.L532:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10962              		.loc 20 2005 19 view .LVU3048
 10963              	.LBE1876:
 10964              	.LBE2221:
 10965              	.LBB2222:
 10966              	.LBB2214:
 10967              	.LBB2209:
 126:delayline_reverse.h ****         {
 10968              		.loc 19 126 12 view .LVU3049
 10969 076a 304B     		ldr	r3, .L649+16
 126:delayline_reverse.h ****         {
 10970              		.loc 19 126 9 view .LVU3050
 10971 076c E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10972              		.loc 19 126 12 view .LVU3051
 10973 076e 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10974              		.loc 19 126 9 view .LVU3052
 10975 0770 002A     		cmp	r2, #0
 10976 0772 D1D0     		beq	.L538
 10977              	.L639:
 126:delayline_reverse.h ****         {
 10978              		.loc 19 126 9 view .LVU3053
 10979 0774 2E4A     		ldr	r2, .L649+20
 10980 0776 A018     		adds	r0, r4, r2
 10981 0778 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 340


 10982              		.loc 19 128 13 view .LVU3054
 10983 077a 002A     		cmp	r2, #0
 10984 077c B2D0     		beq	.L535
 10985              	.L536:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10986              		.loc 19 141 45 view .LVU3055
 10987 077e DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10988              	.LVL669:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10989              		.loc 19 141 45 view .LVU3056
 10990 0782 B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10991              		.loc 19 141 37 view .LVU3057
 10992 0786 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10993              		.loc 19 142 17 view .LVU3058
 10994 0788 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10995              		.loc 19 141 45 view .LVU3059
 10996 078a F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10997              		.loc 19 141 37 view .LVU3060
 10998 078e D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10999              		.loc 19 141 45 view .LVU3061
 11000 0792 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11001              		.loc 19 141 37 view .LVU3062
 11002 0796 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 11003              		.loc 19 142 17 view .LVU3063
 11004 079a F5EEC07A 		vcmpe.f32	s15, #0
 11005 079e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11006 07a2 00F1B881 		bmi	.L541
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11007              		.loc 19 141 17 view .LVU3064
 11008 07a6 C1ED007A 		vstr.32	s15, [r1]
 11009 07aa B5E7     		b	.L538
 11010              	.LVL670:
 11011              	.L522:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11012              		.loc 19 141 17 view .LVU3065
 11013              	.LBE2209:
 11014              	.LBE2214:
 11015              	.LBE2222:
 11016              	.LBB2223:
 11017              	.LBB2186:
 11018              	.LBB2175:
 126:delayline_reverse.h ****         {
 11019              		.loc 19 126 12 view .LVU3066
 11020 07ac 1F4A     		ldr	r2, .L649+16
 126:delayline_reverse.h ****         {
 11021              		.loc 19 126 9 view .LVU3067
 11022 07ae AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11023              		.loc 19 126 12 view .LVU3068
 11024 07b0 2A44     		add	r2, r2, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 341


 126:delayline_reverse.h ****         {
 11025              		.loc 19 126 9 view .LVU3069
 11026 07b2 002B     		cmp	r3, #0
 11027 07b4 3FF447AF 		beq	.L528
 11028              	.L637:
 126:delayline_reverse.h ****         {
 11029              		.loc 19 126 9 view .LVU3070
 11030 07b8 1D4B     		ldr	r3, .L649+20
 11031 07ba E818     		adds	r0, r5, r3
 11032 07bc EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11033              		.loc 19 128 13 view .LVU3071
 11034 07be 002B     		cmp	r3, #0
 11035 07c0 3FF42AAF 		beq	.L525
 11036              	.L526:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11037              		.loc 19 141 45 view .LVU3072
 11038 07c4 07EE90EA 		vmov	s15, lr	@ int
 11039              	.LVL671:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11040              		.loc 19 141 45 view .LVU3073
 11041 07c8 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 11042              		.loc 19 142 17 view .LVU3074
 11043 07cc 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11044              		.loc 19 141 45 view .LVU3075
 11045 07ce B8EE677A 		vcvt.f32.u32	s14, s15
 11046 07d2 C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11047              		.loc 19 141 37 view .LVU3076
 11048 07d6 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11049              		.loc 19 142 17 view .LVU3077
 11050 07da B5EEC0BA 		vcmpe.f32	s22, #0
 11051 07de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11052 07e2 00F19E81 		bmi	.L531
 11053              	.L638:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11054              		.loc 19 141 17 view .LVU3078
 11055 07e6 049B     		ldr	r3, [sp, #16]
 11056 07e8 83ED00BA 		vstr.32	s22, [r3]
 11057 07ec 2BE7     		b	.L528
 11058              	.LVL672:
 11059              	.L573:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11060              		.loc 19 141 17 view .LVU3079
 11061              	.LBE2175:
 11062              	.LBE2186:
 11063              	.LBE2223:
 603:Veno-Echo.cpp ****             out[i+1] = mixR;
 11064              		.loc 20 603 13 is_stmt 1 view .LVU3080
 603:Veno-Echo.cpp ****             out[i+1] = mixR;
 11065              		.loc 20 603 20 is_stmt 0 view .LVU3081
 11066 07ee 009B     		ldr	r3, [sp]
 11067 07f0 C3ED007A 		vstr.32	s15, [r3]
 604:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 342


 11068              		.loc 20 604 13 is_stmt 1 view .LVU3082
 604:Veno-Echo.cpp ****         }
 11069              		.loc 20 604 22 is_stmt 0 view .LVU3083
 11070 07f4 83ED010A 		vstr.32	s0, [r3, #4]
 11071 07f8 93E5     		b	.L574
 11072              	.LVL673:
 11073              	.L634:
 584:Veno-Echo.cpp ****         {
 11074              		.loc 20 584 14 is_stmt 1 view .LVU3084
 11075 07fa 40F36A81 		ble	.L635
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11076              		.loc 20 586 13 view .LVU3085
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11077              		.loc 20 586 24 is_stmt 0 view .LVU3086
 11078 07fe F7EE006A 		vmov.f32	s13, #1.0e+0
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11079              		.loc 20 586 18 view .LVU3087
 11080 0802 DBED005A 		vldr.32	s11, [fp]
 587:Veno-Echo.cpp ****         }
 11081              		.loc 20 587 18 view .LVU3088
 11082 0806 9BED016A 		vldr.32	s12, [fp, #4]
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11083              		.loc 20 586 24 view .LVU3089
 11084 080a 36EEC77A 		vsub.f32	s14, s13, s14
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11085              		.loc 20 586 33 view .LVU3090
 11086 080e 37EE077A 		vadd.f32	s14, s14, s14
 586:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11087              		.loc 20 586 18 view .LVU3091
 11088 0812 E7EE257A 		vfma.f32	s15, s14, s11
 11089              	.LVL674:
 587:Veno-Echo.cpp ****         }
 11090              		.loc 20 587 13 is_stmt 1 view .LVU3092
 587:Veno-Echo.cpp ****         }
 11091              		.loc 20 587 18 is_stmt 0 view .LVU3093
 11092 0816 A7EE060A 		vfma.f32	s0, s14, s12
 11093              	.LVL675:
 587:Veno-Echo.cpp ****         }
 11094              		.loc 20 587 18 view .LVU3094
 11095 081a 79E5     		b	.L570
 11096              	.L650:
 11097              		.align	2
 11098              	.L649:
 11099 081c 00000000 		.word	.LANCHOR3
 11100 0820 BF270900 		.word	599999
 11101 0824 851DD96F 		.word	1876499845
 11102 0828 C1270900 		.word	600001
 11103 082c 249F2400 		.word	2400036
 11104 0830 1C9F2400 		.word	2400028
 11105 0834 189F2400 		.word	2400024
 11106 0838 00000000 		.word	.LANCHOR104
 11107 083c 00000000 		.word	.LANCHOR105
 11108 0840 00000000 		.word	.LANCHOR0
 11109 0844 00000000 		.word	.LANCHOR1
 11110 0848 C0270900 		.word	600000
 11111              	.LVL676:
 11112              	.L589:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 343


 11113              	.LBB2224:
 538:Veno-Echo.cpp **** {
 11114              		.loc 20 538 1 view .LVU3095
 11115 084c D14B     		ldr	r3, .L651
 11116              	.LBE2224:
 11117              	.LBB2225:
 11118              	.LBB1966:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11119              		.loc 20 2005 19 view .LVU3096
 11120 084e B0EE470A 		vmov.f32	s0, s14
 11121              	.LVL677:
2011:Veno-Echo.cpp **** }
 11122              		.loc 20 2011 5 is_stmt 1 view .LVU3097
2011:Veno-Echo.cpp **** }
 11123              		.loc 20 2011 5 is_stmt 0 view .LVU3098
 11124              	.LBE1966:
 11125              	.LBE2225:
 11126              	.LBB2226:
 538:Veno-Echo.cpp **** {
 11127              		.loc 20 538 1 view .LVU3099
 11128 0852 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11129              	.LBE2226:
 536:Veno-Echo.cpp **** 
 11130              		.loc 20 536 27 view .LVU3100
 11131 0854 8DED0D0A 		vstr.32	s0, [sp, #52]
 538:Veno-Echo.cpp **** {
 11132              		.loc 20 538 1 is_stmt 1 view .LVU3101
 11133              	.LBB2227:
 11134 0858 002B     		cmp	r3, #0
 11135 085a 3FF440AD 		beq	.L564
 11136              	.L641:
 11137              	.LBB1969:
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11138              		.loc 20 544 9 view .LVU3102
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11139              		.loc 20 544 27 is_stmt 0 view .LVU3103
 11140 085e 9FEDCE8A 		vldr.32	s16, .L651+4
 11141              	.LVL678:
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11142              		.loc 20 544 27 view .LVU3104
 11143 0862 CE4D     		ldr	r5, .L651+8
 11144 0864 27EE880A 		vmul.f32	s0, s15, s16
 545:Veno-Echo.cpp **** 
 11145              		.loc 20 545 27 view .LVU3105
 11146 0868 CD4C     		ldr	r4, .L651+12
 544:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11147              		.loc 20 544 27 view .LVU3106
 11148 086a 2846     		mov	r0, r5
 11149 086c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11150              	.LVL679:
 545:Veno-Echo.cpp **** 
 11151              		.loc 20 545 9 is_stmt 1 view .LVU3107
 545:Veno-Echo.cpp **** 
 11152              		.loc 20 545 27 is_stmt 0 view .LVU3108
 11153 0870 9DED0D0A 		vldr.32	s0, [sp, #52]
 11154 0874 2046     		mov	r0, r4
 11155 0876 20EE080A 		vmul.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 344


 11156 087a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11157              	.LVL680:
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11158              		.loc 20 548 9 is_stmt 1 view .LVU3109
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11159              		.loc 20 548 9 is_stmt 0 view .LVU3110
 11160              	.LBE1969:
 11161              	.LBE2227:
 11162              	.LBE2255:
 11163              	.LBE2266:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 11164              		.loc 9 52 26 is_stmt 1 view .LVU3111
 11165              	.LBB2267:
 11166              	.LBB2256:
 11167              	.LBB2228:
 11168              	.LBB1984:
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11169              		.loc 20 548 50 is_stmt 0 view .LVU3112
 11170 087e F2EE046A 		vmov.f32	s13, #1.0e+1
 11171 0882 95ED0C7A 		vldr.32	s14, [r5, #48]
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11172              		.loc 20 552 59 view .LVU3113
 11173 0886 0CA9     		add	r1, sp, #48
 549:Veno-Echo.cpp ****         
 11174              		.loc 20 549 50 view .LVU3114
 11175 0888 D4ED0C7A 		vldr.32	s15, [r4, #48]
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11176              		.loc 20 552 59 view .LVU3115
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 345


 11177 088c 0EAA     		add	r2, sp, #56
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11178              		.loc 20 548 50 view .LVU3116
 11179 088e 27EE267A 		vmul.f32	s14, s14, s13
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11180              		.loc 20 552 59 view .LVU3117
 11181 0892 C448     		ldr	r0, .L651+16
 549:Veno-Echo.cpp ****         
 11182              		.loc 20 549 50 view .LVU3118
 11183 0894 67EEA67A 		vmul.f32	s15, s15, s13
 548:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11184              		.loc 20 548 57 view .LVU3119
 11185 0898 8DED0E7A 		vstr.32	s14, [sp, #56]
 549:Veno-Echo.cpp ****         
 11186              		.loc 20 549 9 is_stmt 1 view .LVU3120
 11187              	.LVL681:
 549:Veno-Echo.cpp ****         
 11188              		.loc 20 549 9 is_stmt 0 view .LVU3121
 11189              	.LBE1984:
 11190              	.LBE2228:
 11191              	.LBE2256:
 11192              	.LBE2267:
 11193              		.loc 9 52 26 is_stmt 1 view .LVU3122
 11194              	.LBB2268:
 11195              	.LBB2257:
 11196              	.LBB2229:
 11197              	.LBB1985:
 549:Veno-Echo.cpp ****         
 11198              		.loc 20 549 57 is_stmt 0 view .LVU3123
 11199 089c CDED0F7A 		vstr.32	s15, [sp, #60]
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11200              		.loc 20 552 9 is_stmt 1 view .LVU3124
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11201              		.loc 20 552 59 is_stmt 0 view .LVU3125
 11202 08a0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11203              	.LVL682:
 553:Veno-Echo.cpp **** 
 11204              		.loc 20 553 59 view .LVU3126
 11205 08a4 0DA9     		add	r1, sp, #52
 11206 08a6 0FAA     		add	r2, sp, #60
 11207 08a8 BF48     		ldr	r0, .L651+20
 552:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11208              		.loc 20 552 97 view .LVU3127
 11209 08aa 8DED100A 		vstr.32	s0, [sp, #64]
 553:Veno-Echo.cpp **** 
 11210              		.loc 20 553 9 is_stmt 1 view .LVU3128
 553:Veno-Echo.cpp **** 
 11211              		.loc 20 553 59 is_stmt 0 view .LVU3129
 11212 08ae FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11213              	.LVL683:
 11214              	.LBB1970:
 11215              	.LBB1971:
2004:Veno-Echo.cpp ****         returnval = limit;
 11216              		.loc 20 2004 5 view .LVU3130
 11217 08b2 F0EE006A 		vmov.f32	s13, #2.0e+0
 11218              	.LBE1971:
 11219              	.LBE1970:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 346


 556:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11220              		.loc 20 556 41 view .LVU3131
 11221 08b6 9DED107A 		vldr.32	s14, [sp, #64]
 553:Veno-Echo.cpp **** 
 11222              		.loc 20 553 59 view .LVU3132
 11223 08ba F0EE407A 		vmov.f32	s15, s0
 556:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11224              		.loc 20 556 9 is_stmt 1 view .LVU3133
 11225              	.LVL684:
 11226              	.LBB1975:
 11227              	.LBI1970:
2001:Veno-Echo.cpp **** {
 11228              		.loc 20 2001 7 view .LVU3134
 11229              	.LBB1972:
2003:Veno-Echo.cpp ****     if (input > limit)
 11230              		.loc 20 2003 5 view .LVU3135
2004:Veno-Echo.cpp ****         returnval = limit;
 11231              		.loc 20 2004 5 view .LVU3136
 11232 08be B4EEE67A 		vcmpe.f32	s14, s13
 11233 08c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11234 08c6 00F30D81 		bgt	.L590
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11235              		.loc 20 2006 10 view .LVU3137
 11236 08ca F8EE006A 		vmov.f32	s13, #-2.0e+0
 11237 08ce B4EEE67A 		vcmpe.f32	s14, s13
 11238 08d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11239 08d6 00F12D81 		bmi	.L591
 11240 08da 27EE080A 		vmul.f32	s0, s14, s16
 11241              	.LVL685:
 11242              	.L565:
2011:Veno-Echo.cpp **** }
 11243              		.loc 20 2011 5 view .LVU3138
2011:Veno-Echo.cpp **** }
 11244              		.loc 20 2011 5 is_stmt 0 view .LVU3139
 11245              	.LBE1972:
 11246              	.LBE1975:
 11247              	.LBB1976:
 11248              	.LBB1977:
2004:Veno-Echo.cpp ****         returnval = limit;
 11249              		.loc 20 2004 5 view .LVU3140
 11250 08de F0EE006A 		vmov.f32	s13, #2.0e+0
 11251              	.LBE1977:
 11252              	.LBE1976:
 556:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11253              		.loc 20 556 30 view .LVU3141
 11254 08e2 8DED107A 		vstr.32	s14, [sp, #64]
 557:Veno-Echo.cpp **** 
 11255              		.loc 20 557 9 is_stmt 1 view .LVU3142
 11256              	.LVL686:
 11257              	.LBB1980:
 11258              	.LBI1976:
2001:Veno-Echo.cpp **** {
 11259              		.loc 20 2001 7 view .LVU3143
 11260              	.LBB1978:
2003:Veno-Echo.cpp ****     if (input > limit)
 11261              		.loc 20 2003 5 view .LVU3144
2004:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 347


 11262              		.loc 20 2004 5 view .LVU3145
 11263 08e6 F4EEE67A 		vcmpe.f32	s15, s13
 11264 08ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11265 08ee 00F30681 		bgt	.L592
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11266              		.loc 20 2006 10 view .LVU3146
 11267 08f2 B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 11268              		.loc 20 2007 19 is_stmt 0 view .LVU3147
 11269 08f6 F4EE477A 		vcmp.f32	s15, s14
 11270 08fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11271 08fe 48BF     		it	mi
 11272 0900 F0EE477A 		vmovmi.f32	s15, s14
 11273              	.LVL687:
 11274              	.L566:
2011:Veno-Echo.cpp **** }
 11275              		.loc 20 2011 5 is_stmt 1 view .LVU3148
2011:Veno-Echo.cpp **** }
 11276              		.loc 20 2011 5 is_stmt 0 view .LVU3149
 11277              	.LBE1978:
 11278              	.LBE1980:
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11279              		.loc 20 560 27 view .LVU3150
 11280 0904 A94D     		ldr	r5, .L651+24
 561:Veno-Echo.cpp **** 
 11281              		.loc 20 561 27 view .LVU3151
 11282 0906 AA4C     		ldr	r4, .L651+28
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11283              		.loc 20 560 27 view .LVU3152
 11284 0908 2846     		mov	r0, r5
 557:Veno-Echo.cpp **** 
 11285              		.loc 20 557 30 view .LVU3153
 11286 090a CDED117A 		vstr.32	s15, [sp, #68]
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11287              		.loc 20 560 9 is_stmt 1 view .LVU3154
 560:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11288              		.loc 20 560 27 is_stmt 0 view .LVU3155
 11289 090e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11290              	.LVL688:
 561:Veno-Echo.cpp **** 
 11291              		.loc 20 561 9 is_stmt 1 view .LVU3156
 561:Veno-Echo.cpp **** 
 11292              		.loc 20 561 27 is_stmt 0 view .LVU3157
 11293 0912 DFEDA17A 		vldr.32	s15, .L651+4
 11294 0916 9DED110A 		vldr.32	s0, [sp, #68]
 11295 091a 2046     		mov	r0, r4
 11296 091c 20EE270A 		vmul.f32	s0, s0, s15
 11297 0920 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11298              	.LVL689:
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11299              		.loc 20 563 9 is_stmt 1 view .LVU3158
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11300              		.loc 20 563 9 is_stmt 0 view .LVU3159
 11301              	.LBE1985:
 11302              	.LBE2229:
 11303              	.LBE2257:
 11304              	.LBE2268:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 348


  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11305              		.loc 9 56 27 is_stmt 1 view .LVU3160
 11306              	.LBB2269:
 11307              	.LBB2258:
 11308              	.LBB2230:
 11309              	.LBB1986:
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11310              		.loc 20 563 51 is_stmt 0 view .LVU3161
 11311 0924 F2EE046A 		vmov.f32	s13, #1.0e+1
 11312 0928 95ED0D7A 		vldr.32	s14, [r5, #52]
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11313              		.loc 20 566 55 view .LVU3162
 11314 092c 10A9     		add	r1, sp, #64
 564:Veno-Echo.cpp **** 
 11315              		.loc 20 564 51 view .LVU3163
 11316 092e D4ED0D7A 		vldr.32	s15, [r4, #52]
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11317              		.loc 20 566 55 view .LVU3164
 11318 0932 12AA     		add	r2, sp, #72
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11319              		.loc 20 563 51 view .LVU3165
 11320 0934 27EE267A 		vmul.f32	s14, s14, s13
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11321              		.loc 20 566 55 view .LVU3166
 11322 0938 9E48     		ldr	r0, .L651+32
 564:Veno-Echo.cpp **** 
 11323              		.loc 20 564 51 view .LVU3167
 11324 093a 67EEA67A 		vmul.f32	s15, s15, s13
 563:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11325              		.loc 20 563 58 view .LVU3168
 11326 093e 8DED127A 		vstr.32	s14, [sp, #72]
 564:Veno-Echo.cpp **** 
 11327              		.loc 20 564 9 is_stmt 1 view .LVU3169
 11328              	.LVL690:
 564:Veno-Echo.cpp **** 
 11329              		.loc 20 564 9 is_stmt 0 view .LVU3170
 11330              	.LBE1986:
 11331              	.LBE2230:
 11332              	.LBE2258:
 11333              	.LBE2269:
 11334              		.loc 9 56 27 is_stmt 1 view .LVU3171
 11335              	.LBB2270:
 11336              	.LBB2259:
 11337              	.LBB2231:
 11338              	.LBB1987:
 564:Veno-Echo.cpp **** 
 11339              		.loc 20 564 58 is_stmt 0 view .LVU3172
 11340 0942 CDED137A 		vstr.32	s15, [sp, #76]
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11341              		.loc 20 566 9 is_stmt 1 view .LVU3173
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11342              		.loc 20 566 55 is_stmt 0 view .LVU3174
 11343 0946 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11344              	.LVL691:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 349


 567:Veno-Echo.cpp **** 
 11345              		.loc 20 567 55 view .LVU3175
 11346 094a 11A9     		add	r1, sp, #68
 11347 094c 13AA     		add	r2, sp, #76
 11348 094e 9A48     		ldr	r0, .L651+36
 566:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11349              		.loc 20 566 30 view .LVU3176
 11350 0950 8DED100A 		vstr.32	s0, [sp, #64]
 567:Veno-Echo.cpp **** 
 11351              		.loc 20 567 9 is_stmt 1 view .LVU3177
 567:Veno-Echo.cpp **** 
 11352              		.loc 20 567 55 is_stmt 0 view .LVU3178
 11353 0954 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11354              	.LVL692:
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11355              		.loc 20 570 53 view .LVU3179
 11356 0958 10AA     		add	r2, sp, #64
 11357 095a 0CA9     		add	r1, sp, #48
 11358 095c 9748     		ldr	r0, .L651+40
 567:Veno-Echo.cpp **** 
 11359              		.loc 20 567 30 view .LVU3180
 11360 095e 8DED110A 		vstr.32	s0, [sp, #68]
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11361              		.loc 20 570 9 is_stmt 1 view .LVU3181
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11362              		.loc 20 570 53 is_stmt 0 view .LVU3182
 11363 0962 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11364              	.LVL693:
 571:Veno-Echo.cpp **** 
 11365              		.loc 20 571 53 view .LVU3183
 11366 0966 11AA     		add	r2, sp, #68
 11367 0968 0DA9     		add	r1, sp, #52
 11368 096a 9548     		ldr	r0, .L651+44
 570:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11369              		.loc 20 570 27 view .LVU3184
 11370 096c 8DED0C0A 		vstr.32	s0, [sp, #48]
 571:Veno-Echo.cpp **** 
 11371              		.loc 20 571 9 is_stmt 1 view .LVU3185
 571:Veno-Echo.cpp **** 
 11372              		.loc 20 571 53 is_stmt 0 view .LVU3186
 11373 0970 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11374              	.LVL694:
 11375 0974 DDED0C7A 		vldr.32	s15, [sp, #48]
 571:Veno-Echo.cpp **** 
 11376              		.loc 20 571 27 view .LVU3187
 11377 0978 8DED0D0A 		vstr.32	s0, [sp, #52]
 11378              	.LBE1987:
 11379 097c AFE4     		b	.L564
 11380              	.LVL695:
 11381              	.L633:
 571:Veno-Echo.cpp **** 
 11382              		.loc 20 571 27 view .LVU3188
 11383              	.LBE2231:
 511:Veno-Echo.cpp **** 
 11384              		.loc 20 511 25 view .LVU3189
 11385 097e DFED917A 		vldr.32	s15, .L651+48
 11386              	.LVL696:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 350


 511:Veno-Echo.cpp **** 
 11387              		.loc 20 511 25 view .LVU3190
 11388 0982 3EE4     		b	.L554
 11389              	.LVL697:
 11390              	.L632:
 507:Veno-Echo.cpp ****             
 11391              		.loc 20 507 25 view .LVU3191
 11392 0984 9FED8F7A 		vldr.32	s14, .L651+48
 11393              	.LVL698:
 507:Veno-Echo.cpp ****             
 11394              		.loc 20 507 25 view .LVU3192
 11395 0988 2AE4     		b	.L552
 11396              	.LVL699:
 11397              	.L580:
 11398              	.LBB2232:
 437:Veno-Echo.cpp **** {
 11399              		.loc 20 437 1 view .LVU3193
 11400 098a 824B     		ldr	r3, .L651
 11401              	.LBE2232:
 11402              	.LBB2233:
 11403              	.LBB1881:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11404              		.loc 20 2005 19 view .LVU3194
 11405 098c B0EE470A 		vmov.f32	s0, s14
 11406              	.LVL700:
2011:Veno-Echo.cpp **** }
 11407              		.loc 20 2011 5 is_stmt 1 view .LVU3195
2011:Veno-Echo.cpp **** }
 11408              		.loc 20 2011 5 is_stmt 0 view .LVU3196
 11409              	.LBE1881:
 11410              	.LBE2233:
 11411              	.LBB2234:
 437:Veno-Echo.cpp **** {
 11412              		.loc 20 437 1 view .LVU3197
 11413 0990 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11414              	.LBE2234:
 435:Veno-Echo.cpp **** 
 11415              		.loc 20 435 23 view .LVU3198
 11416 0992 8DED090A 		vstr.32	s0, [sp, #36]
 437:Veno-Echo.cpp **** {
 11417              		.loc 20 437 1 is_stmt 1 view .LVU3199
 11418              	.LBB2235:
 11419 0996 002B     		cmp	r3, #0
 11420 0998 7FF4A7AB 		bne	.L546
 11421              	.L640:
 11422              	.LBB1884:
 443:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11423              		.loc 20 443 9 view .LVU3200
 443:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11424              		.loc 20 443 22 is_stmt 0 view .LVU3201
 11425 099c 9FED7E9A 		vldr.32	s18, .L651+4
 11426 09a0 894D     		ldr	r5, .L651+52
 11427 09a2 27EE890A 		vmul.f32	s0, s15, s18
 444:Veno-Echo.cpp **** 
 11428              		.loc 20 444 22 view .LVU3202
 11429 09a6 894C     		ldr	r4, .L651+56
 443:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 351


 11430              		.loc 20 443 22 view .LVU3203
 11431 09a8 2846     		mov	r0, r5
 11432 09aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11433              	.LVL701:
 444:Veno-Echo.cpp **** 
 11434              		.loc 20 444 9 is_stmt 1 view .LVU3204
 444:Veno-Echo.cpp **** 
 11435              		.loc 20 444 22 is_stmt 0 view .LVU3205
 11436 09ae 9DED090A 		vldr.32	s0, [sp, #36]
 11437 09b2 2046     		mov	r0, r4
 11438 09b4 20EE090A 		vmul.f32	s0, s0, s18
 11439 09b8 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11440              	.LVL702:
 447:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11441              		.loc 20 447 9 is_stmt 1 view .LVU3206
 447:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11442              		.loc 20 447 9 is_stmt 0 view .LVU3207
 11443              	.LBE1884:
 11444              	.LBE2235:
 11445              	.LBE2259:
 11446              	.LBE2270:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11447              		.loc 9 52 26 is_stmt 1 view .LVU3208
 11448              	.LBB2271:
 11449              	.LBB2260:
 11450              	.LBB2236:
 11451              	.LBB1899:
 447:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11452              		.loc 20 447 40 is_stmt 0 view .LVU3209
 11453 09bc F2EE046A 		vmov.f32	s13, #1.0e+1
 11454 09c0 95ED0C7A 		vldr.32	s14, [r5, #48]
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11455              		.loc 20 451 49 view .LVU3210
 11456 09c4 0EAA     		add	r2, sp, #56
 448:Veno-Echo.cpp ****         
 11457              		.loc 20 448 40 view .LVU3211
 11458 09c6 D4ED0C7A 		vldr.32	s15, [r4, #48]
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11459              		.loc 20 451 49 view .LVU3212
 11460 09ca 08A9     		add	r1, sp, #32
 447:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11461              		.loc 20 447 40 view .LVU3213
 11462 09cc 27EE267A 		vmul.f32	s14, s14, s13
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11463              		.loc 20 451 49 view .LVU3214
 11464 09d0 7F48     		ldr	r0, .L651+60
 448:Veno-Echo.cpp ****         
 11465              		.loc 20 448 40 view .LVU3215
 11466 09d2 67EEA67A 		vmul.f32	s15, s15, s13
 447:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11467              		.loc 20 447 47 view .LVU3216
 11468 09d6 8DED0E7A 		vstr.32	s14, [sp, #56]
 448:Veno-Echo.cpp ****         
 11469              		.loc 20 448 9 is_stmt 1 view .LVU3217
 11470              	.LVL703:
 448:Veno-Echo.cpp ****         
 11471              		.loc 20 448 9 is_stmt 0 view .LVU3218
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 352


 11472              	.LBE1899:
 11473              	.LBE2236:
 11474              	.LBE2260:
 11475              	.LBE2271:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11476              		.loc 9 52 26 is_stmt 1 view .LVU3219
 11477              	.LBB2272:
 11478              	.LBB2261:
 11479              	.LBB2237:
 11480              	.LBB1900:
 448:Veno-Echo.cpp ****         
 11481              		.loc 20 448 47 is_stmt 0 view .LVU3220
 11482 09da CDED0F7A 		vstr.32	s15, [sp, #60]
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11483              		.loc 20 451 9 is_stmt 1 view .LVU3221
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11484              		.loc 20 451 49 is_stmt 0 view .LVU3222
 11485 09de FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11486              	.LVL704:
 452:Veno-Echo.cpp **** 
 11487              		.loc 20 452 49 view .LVU3223
 11488 09e2 0FAA     		add	r2, sp, #60
 11489 09e4 09A9     		add	r1, sp, #36
 11490 09e6 7B48     		ldr	r0, .L651+64
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11491              		.loc 20 451 78 view .LVU3224
 11492 09e8 8DED100A 		vstr.32	s0, [sp, #64]
 452:Veno-Echo.cpp **** 
 11493              		.loc 20 452 9 is_stmt 1 view .LVU3225
 452:Veno-Echo.cpp **** 
 11494              		.loc 20 452 49 is_stmt 0 view .LVU3226
 11495 09ec FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11496              	.LVL705:
 11497              	.LBB1885:
 11498              	.LBB1886:
2004:Veno-Echo.cpp ****         returnval = limit;
 11499              		.loc 20 2004 5 view .LVU3227
 11500 09f0 F0EE006A 		vmov.f32	s13, #2.0e+0
 11501              	.LBE1886:
 11502              	.LBE1885:
 455:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11503              		.loc 20 455 36 view .LVU3228
 11504 09f4 9DED107A 		vldr.32	s14, [sp, #64]
 452:Veno-Echo.cpp **** 
 11505              		.loc 20 452 49 view .LVU3229
 11506 09f8 F0EE407A 		vmov.f32	s15, s0
 455:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11507              		.loc 20 455 9 is_stmt 1 view .LVU3230
 11508              	.LVL706:
 11509              	.LBB1890:
 11510              	.LBI1885:
2001:Veno-Echo.cpp **** {
 11511              		.loc 20 2001 7 view .LVU3231
 11512              	.LBB1887:
2003:Veno-Echo.cpp ****     if (input > limit)
 11513              		.loc 20 2003 5 view .LVU3232
2004:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 353


 11514              		.loc 20 2004 5 view .LVU3233
 11515 09fc B4EEE67A 		vcmpe.f32	s14, s13
 11516 0a00 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11517 0a04 76DC     		bgt	.L581
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11518              		.loc 20 2006 10 view .LVU3234
 11519 0a06 F8EE006A 		vmov.f32	s13, #-2.0e+0
 11520 0a0a B4EEE67A 		vcmpe.f32	s14, s13
 11521 0a0e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11522 0a12 00F19480 		bmi	.L582
 11523 0a16 27EE090A 		vmul.f32	s0, s14, s18
 11524              	.LVL707:
 11525              	.L547:
2011:Veno-Echo.cpp **** }
 11526              		.loc 20 2011 5 view .LVU3235
2011:Veno-Echo.cpp **** }
 11527              		.loc 20 2011 5 is_stmt 0 view .LVU3236
 11528              	.LBE1887:
 11529              	.LBE1890:
 11530              	.LBB1891:
 11531              	.LBB1892:
2004:Veno-Echo.cpp ****         returnval = limit;
 11532              		.loc 20 2004 5 view .LVU3237
 11533 0a1a F0EE006A 		vmov.f32	s13, #2.0e+0
 11534              	.LBE1892:
 11535              	.LBE1891:
 455:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11536              		.loc 20 455 25 view .LVU3238
 11537 0a1e 8DED107A 		vstr.32	s14, [sp, #64]
 456:Veno-Echo.cpp **** 
 11538              		.loc 20 456 9 is_stmt 1 view .LVU3239
 11539              	.LVL708:
 11540              	.LBB1895:
 11541              	.LBI1891:
2001:Veno-Echo.cpp **** {
 11542              		.loc 20 2001 7 view .LVU3240
 11543              	.LBB1893:
2003:Veno-Echo.cpp ****     if (input > limit)
 11544              		.loc 20 2003 5 view .LVU3241
2004:Veno-Echo.cpp ****         returnval = limit;
 11545              		.loc 20 2004 5 view .LVU3242
 11546 0a22 F4EEE67A 		vcmpe.f32	s15, s13
 11547 0a26 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11548 0a2a 60DC     		bgt	.L583
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11549              		.loc 20 2006 10 view .LVU3243
 11550 0a2c B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 11551              		.loc 20 2007 19 is_stmt 0 view .LVU3244
 11552 0a30 F4EE477A 		vcmp.f32	s15, s14
 11553 0a34 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11554 0a38 48BF     		it	mi
 11555 0a3a F0EE477A 		vmovmi.f32	s15, s14
 11556              	.LVL709:
 11557              	.L548:
2011:Veno-Echo.cpp **** }
 11558              		.loc 20 2011 5 is_stmt 1 view .LVU3245
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 354


2011:Veno-Echo.cpp **** }
 11559              		.loc 20 2011 5 is_stmt 0 view .LVU3246
 11560              	.LBE1893:
 11561              	.LBE1895:
 459:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11562              		.loc 20 459 22 view .LVU3247
 11563 0a3e 664D     		ldr	r5, .L651+68
 460:Veno-Echo.cpp **** 
 11564              		.loc 20 460 22 view .LVU3248
 11565 0a40 664C     		ldr	r4, .L651+72
 459:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11566              		.loc 20 459 22 view .LVU3249
 11567 0a42 2846     		mov	r0, r5
 456:Veno-Echo.cpp **** 
 11568              		.loc 20 456 25 view .LVU3250
 11569 0a44 CDED117A 		vstr.32	s15, [sp, #68]
 459:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11570              		.loc 20 459 9 is_stmt 1 view .LVU3251
 459:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11571              		.loc 20 459 22 is_stmt 0 view .LVU3252
 11572 0a48 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11573              	.LVL710:
 460:Veno-Echo.cpp **** 
 11574              		.loc 20 460 9 is_stmt 1 view .LVU3253
 460:Veno-Echo.cpp **** 
 11575              		.loc 20 460 22 is_stmt 0 view .LVU3254
 11576 0a4c DFED527A 		vldr.32	s15, .L651+4
 11577 0a50 9DED110A 		vldr.32	s0, [sp, #68]
 11578 0a54 2046     		mov	r0, r4
 11579 0a56 20EE270A 		vmul.f32	s0, s0, s15
 11580 0a5a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11581              	.LVL711:
 462:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11582              		.loc 20 462 9 is_stmt 1 view .LVU3255
 462:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11583              		.loc 20 462 9 is_stmt 0 view .LVU3256
 11584              	.LBE1900:
 11585              	.LBE2237:
 11586              	.LBE2261:
 11587              	.LBE2272:
 11588              		.loc 9 56 27 is_stmt 1 view .LVU3257
 11589              	.LBB2273:
 11590              	.LBB2262:
 11591              	.LBB2238:
 11592              	.LBB1901:
 462:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11593              		.loc 20 462 41 is_stmt 0 view .LVU3258
 11594 0a5e F2EE046A 		vmov.f32	s13, #1.0e+1
 11595 0a62 95ED0D7A 		vldr.32	s14, [r5, #52]
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11596              		.loc 20 465 45 view .LVU3259
 11597 0a66 10A9     		add	r1, sp, #64
 463:Veno-Echo.cpp **** 
 11598              		.loc 20 463 41 view .LVU3260
 11599 0a68 D4ED0D7A 		vldr.32	s15, [r4, #52]
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11600              		.loc 20 465 45 view .LVU3261
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 355


 11601 0a6c 12AA     		add	r2, sp, #72
 462:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11602              		.loc 20 462 41 view .LVU3262
 11603 0a6e 27EE267A 		vmul.f32	s14, s14, s13
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11604              		.loc 20 465 45 view .LVU3263
 11605 0a72 5B48     		ldr	r0, .L651+76
 463:Veno-Echo.cpp **** 
 11606              		.loc 20 463 41 view .LVU3264
 11607 0a74 67EEA67A 		vmul.f32	s15, s15, s13
 462:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11608              		.loc 20 462 48 view .LVU3265
 11609 0a78 8DED127A 		vstr.32	s14, [sp, #72]
 463:Veno-Echo.cpp **** 
 11610              		.loc 20 463 9 is_stmt 1 view .LVU3266
 11611              	.LVL712:
 463:Veno-Echo.cpp **** 
 11612              		.loc 20 463 9 is_stmt 0 view .LVU3267
 11613              	.LBE1901:
 11614              	.LBE2238:
 11615              	.LBE2262:
 11616              	.LBE2273:
 11617              		.loc 9 56 27 is_stmt 1 view .LVU3268
 11618              	.LBB2274:
 11619              	.LBB2263:
 11620              	.LBB2239:
 11621              	.LBB1902:
 463:Veno-Echo.cpp **** 
 11622              		.loc 20 463 48 is_stmt 0 view .LVU3269
 11623 0a7c CDED137A 		vstr.32	s15, [sp, #76]
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11624              		.loc 20 465 9 is_stmt 1 view .LVU3270
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11625              		.loc 20 465 45 is_stmt 0 view .LVU3271
 11626 0a80 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11627              	.LVL713:
 466:Veno-Echo.cpp **** 
 11628              		.loc 20 466 45 view .LVU3272
 11629 0a84 11A9     		add	r1, sp, #68
 11630 0a86 13AA     		add	r2, sp, #76
 11631 0a88 5648     		ldr	r0, .L651+80
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11632              		.loc 20 465 25 view .LVU3273
 11633 0a8a 8DED100A 		vstr.32	s0, [sp, #64]
 466:Veno-Echo.cpp **** 
 11634              		.loc 20 466 9 is_stmt 1 view .LVU3274
 466:Veno-Echo.cpp **** 
 11635              		.loc 20 466 45 is_stmt 0 view .LVU3275
 11636 0a8e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11637              	.LVL714:
 470:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11638              		.loc 20 470 44 view .LVU3276
 11639 0a92 10AA     		add	r2, sp, #64
 11640 0a94 08A9     		add	r1, sp, #32
 11641 0a96 5448     		ldr	r0, .L651+84
 466:Veno-Echo.cpp **** 
 11642              		.loc 20 466 25 view .LVU3277
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 356


 11643 0a98 8DED110A 		vstr.32	s0, [sp, #68]
 470:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11644              		.loc 20 470 9 is_stmt 1 view .LVU3278
 470:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11645              		.loc 20 470 44 is_stmt 0 view .LVU3279
 11646 0a9c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11647              	.LVL715:
 471:Veno-Echo.cpp **** 
 11648              		.loc 20 471 44 view .LVU3280
 11649 0aa0 11AA     		add	r2, sp, #68
 11650 0aa2 09A9     		add	r1, sp, #36
 11651 0aa4 5148     		ldr	r0, .L651+88
 470:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11652              		.loc 20 470 23 view .LVU3281
 11653 0aa6 8DED080A 		vstr.32	s0, [sp, #32]
 471:Veno-Echo.cpp **** 
 11654              		.loc 20 471 9 is_stmt 1 view .LVU3282
 471:Veno-Echo.cpp **** 
 11655              		.loc 20 471 44 is_stmt 0 view .LVU3283
 11656 0aaa FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11657              	.LVL716:
 11658 0aae DDED087A 		vldr.32	s15, [sp, #32]
 471:Veno-Echo.cpp **** 
 11659              		.loc 20 471 23 view .LVU3284
 11660 0ab2 8DED090A 		vstr.32	s0, [sp, #36]
 11661              	.LBE1902:
 11662 0ab6 FFF718BB 		b	.L546
 11663              	.LVL717:
 11664              	.L587:
 471:Veno-Echo.cpp **** 
 11665              		.loc 20 471 23 view .LVU3285
 11666              	.LBE2239:
 11667              	.LBB2240:
 11668              	.LBB1955:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11669              		.loc 20 2005 19 view .LVU3286
 11670 0aba B0EE676A 		vmov.f32	s12, s15
 11671              	.LVL718:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11672              		.loc 20 2005 19 view .LVU3287
 11673 0abe FFF7CBBB 		b	.L558
 11674              	.LVL719:
 11675              	.L586:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11676              		.loc 20 2005 19 view .LVU3288
 11677              	.LBE1955:
 11678              	.LBE2240:
 11679              	.LBB2241:
 11680              	.LBB1951:
 11681 0ac2 F0EE678A 		vmov.f32	s17, s15
 11682              	.LVL720:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11683              		.loc 20 2005 19 view .LVU3289
 11684 0ac6 FFF7B4BB 		b	.L556
 11685              	.LVL721:
 11686              	.L588:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 357


 11687              		.loc 20 2005 19 view .LVU3290
 11688              	.LBE1951:
 11689              	.LBE2241:
 11690              	.LBB2242:
 11691              	.LBB1960:
 11692 0aca F0EE477A 		vmov.f32	s15, s14
 11693              	.LVL722:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11694              		.loc 20 2005 19 view .LVU3291
 11695 0ace FFF7ECBB 		b	.L560
 11696              	.LVL723:
 11697              	.L635:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11698              		.loc 20 2005 19 view .LVU3292
 11699              	.LBE1960:
 11700              	.LBE2242:
 591:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11701              		.loc 20 591 13 is_stmt 1 view .LVU3293
 591:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11702              		.loc 20 591 18 is_stmt 0 view .LVU3294
 11703 0ad2 DBED006A 		vldr.32	s13, [fp]
 592:Veno-Echo.cpp ****         }
 11704              		.loc 20 592 18 view .LVU3295
 11705 0ad6 9BED017A 		vldr.32	s14, [fp, #4]
 591:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11706              		.loc 20 591 18 view .LVU3296
 11707 0ada 77EEA67A 		vadd.f32	s15, s15, s13
 11708              	.LVL724:
 592:Veno-Echo.cpp ****         }
 11709              		.loc 20 592 13 is_stmt 1 view .LVU3297
 592:Veno-Echo.cpp ****         }
 11710              		.loc 20 592 18 is_stmt 0 view .LVU3298
 11711 0ade 30EE070A 		vadd.f32	s0, s0, s14
 11712              	.LVL725:
 592:Veno-Echo.cpp ****         }
 11713              		.loc 20 592 18 view .LVU3299
 11714 0ae2 15E4     		b	.L570
 11715              	.LVL726:
 11716              	.L590:
 11717              	.LBB2243:
 11718              	.LBB1988:
 11719              	.LBB1981:
 11720              	.LBB1973:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11721              		.loc 20 2005 19 view .LVU3300
 11722 0ae4 B0EE667A 		vmov.f32	s14, s13
 11723              	.LVL727:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11724              		.loc 20 2005 19 view .LVU3301
 11725 0ae8 9FED410A 		vldr.32	s0, .L651+92
 11726 0aec F7E6     		b	.L565
 11727              	.LVL728:
 11728              	.L583:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11729              		.loc 20 2005 19 view .LVU3302
 11730              	.LBE1973:
 11731              	.LBE1981:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 358


 11732              	.LBE1988:
 11733              	.LBE2243:
 11734              	.LBB2244:
 11735              	.LBB1903:
 11736              	.LBB1896:
 11737              	.LBB1894:
 11738 0aee F0EE667A 		vmov.f32	s15, s13
 11739              	.LVL729:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11740              		.loc 20 2005 19 view .LVU3303
 11741 0af2 A4E7     		b	.L548
 11742              	.LVL730:
 11743              	.L581:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11744              		.loc 20 2005 19 view .LVU3304
 11745              	.LBE1894:
 11746              	.LBE1896:
 11747              	.LBB1897:
 11748              	.LBB1888:
 11749 0af4 B0EE667A 		vmov.f32	s14, s13
 11750              	.LVL731:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11751              		.loc 20 2005 19 view .LVU3305
 11752 0af8 9FED3D0A 		vldr.32	s0, .L651+92
 11753 0afc 8DE7     		b	.L547
 11754              	.LVL732:
 11755              	.L592:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11756              		.loc 20 2005 19 view .LVU3306
 11757              	.LBE1888:
 11758              	.LBE1897:
 11759              	.LBE1903:
 11760              	.LBE2244:
 11761              	.LBB2245:
 11762              	.LBB1989:
 11763              	.LBB1982:
 11764              	.LBB1979:
 11765 0afe F0EE667A 		vmov.f32	s15, s13
 11766              	.LVL733:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11767              		.loc 20 2005 19 view .LVU3307
 11768 0b02 FFE6     		b	.L566
 11769              	.LVL734:
 11770              	.L524:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11771              		.loc 20 2005 19 view .LVU3308
 11772              	.LBE1979:
 11773              	.LBE1982:
 11774              	.LBE1989:
 11775              	.LBE2245:
 11776              	.LBB2246:
 11777              	.LBB2187:
 11778              	.LBB2176:
 116:delayline_reverse.h ****                 }
 11779              		.loc 19 116 21 view .LVU3309
 11780 0b04 AB60     		str	r3, [r5, #8]
 11781 0b06 5DE6     		b	.L526
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 359


 11782              	.LVL735:
 11783              	.L534:
 116:delayline_reverse.h ****                 }
 11784              		.loc 19 116 21 view .LVU3310
 11785              	.LBE2176:
 11786              	.LBE2187:
 11787              	.LBE2246:
 11788              	.LBB2247:
 11789              	.LBB2215:
 11790              	.LBB2210:
 11791 0b08 A260     		str	r2, [r4, #8]
 11792 0b0a 38E6     		b	.L536
 11793              	.LVL736:
 11794              	.L503:
 116:delayline_reverse.h ****                 }
 11795              		.loc 19 116 21 view .LVU3311
 11796              	.LBE2210:
 11797              	.LBE2215:
 11798              	.LBE2247:
 11799              	.LBE2263:
 11800              	.LBE2274:
 612:Veno-Echo.cpp **** 
 11801              		.loc 20 612 1 view .LVU3312
 11802 0b0c 15B0     		add	sp, sp, #84
 11803              		.cfi_remember_state
 11804              		.cfi_def_cfa_offset 92
 11805              		@ sp needed
 11806 0b0e BDEC0E8B 		vldm	sp!, {d8-d14}
 11807              		.cfi_restore 92
 11808              		.cfi_restore 93
 11809              		.cfi_restore 90
 11810              		.cfi_restore 91
 11811              		.cfi_restore 88
 11812              		.cfi_restore 89
 11813              		.cfi_restore 86
 11814              		.cfi_restore 87
 11815              		.cfi_restore 84
 11816              		.cfi_restore 85
 11817              		.cfi_restore 82
 11818              		.cfi_restore 83
 11819              		.cfi_restore 80
 11820              		.cfi_restore 81
 11821              		.cfi_def_cfa_offset 36
 11822 0b12 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11823              	.LVL737:
 11824              	.L541:
 11825              		.cfi_restore_state
 11826              	.LBB2275:
 11827              	.LBB2264:
 11828              	.LBB2248:
 11829              	.LBB2216:
 11830              	.LBB2211:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11831              		.loc 19 145 21 view .LVU3313
 11832 0b16 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11833              		.loc 19 144 21 view .LVU3314
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 360


 11834 0b18 039C     		ldr	r4, [sp, #12]
 11835              	.LVL738:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11836              		.loc 19 144 21 view .LVU3315
 11837 0b1a 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11838              		.loc 19 145 21 view .LVU3316
 11839 0b1c 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11840              		.loc 19 146 21 view .LVU3317
 11841 0b1e 0170     		strb	r1, [r0]
 11842 0b20 FAE5     		b	.L538
 11843              	.LVL739:
 11844              	.L531:
 146:delayline_reverse.h ****                 }
 11845              		.loc 19 146 21 view .LVU3318
 11846              	.LBE2211:
 11847              	.LBE2216:
 11848              	.LBE2248:
 11849              	.LBB2249:
 11850              	.LBB2188:
 11851              	.LBB2177:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11852              		.loc 19 145 21 view .LVU3319
 11853 0b22 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11854              		.loc 19 144 21 view .LVU3320
 11855 0b24 049D     		ldr	r5, [sp, #16]
 11856              	.LVL740:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11857              		.loc 19 144 21 view .LVU3321
 11858 0b26 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11859              		.loc 19 145 21 view .LVU3322
 11860 0b28 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11861              		.loc 19 146 21 view .LVU3323
 11862 0b2a 0170     		strb	r1, [r0]
 11863 0b2c 8BE5     		b	.L528
 11864              	.LVL741:
 11865              	.L642:
 146:delayline_reverse.h ****                 }
 11866              		.loc 19 146 21 view .LVU3324
 11867              	.LBE2177:
 11868              	.LBE2188:
 11869              	.LBE2249:
 11870              	.LBB2250:
 11871              	.LBB2217:
 11872              	.LBB2212:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11873              		.loc 19 130 17 view .LVU3325
 11874 0b2e C2ED007A 		vstr.32	s15, [r2]
 11875 0b32 F1E5     		b	.L538
 11876              	.LVL742:
 11877              	.L591:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11878              		.loc 19 130 17 view .LVU3326
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 361


 11879              	.LBE2212:
 11880              	.LBE2217:
 11881              	.LBE2250:
 11882              	.LBB2251:
 11883              	.LBB1990:
 11884              	.LBB1983:
 11885              	.LBB1974:
2007:Veno-Echo.cpp ****     else
 11886              		.loc 20 2007 19 view .LVU3327
 11887 0b34 B0EE667A 		vmov.f32	s14, s13
 11888              	.LVL743:
2007:Veno-Echo.cpp ****     else
 11889              		.loc 20 2007 19 view .LVU3328
 11890 0b38 9FED2E0A 		vldr.32	s0, .L651+96
 11891 0b3c CFE6     		b	.L565
 11892              	.LVL744:
 11893              	.L582:
2007:Veno-Echo.cpp ****     else
 11894              		.loc 20 2007 19 view .LVU3329
 11895              	.LBE1974:
 11896              	.LBE1983:
 11897              	.LBE1990:
 11898              	.LBE2251:
 11899              	.LBB2252:
 11900              	.LBB1904:
 11901              	.LBB1898:
 11902              	.LBB1889:
 11903 0b3e B0EE667A 		vmov.f32	s14, s13
 11904              	.LVL745:
2007:Veno-Echo.cpp ****     else
 11905              		.loc 20 2007 19 view .LVU3330
 11906 0b42 9FED2C0A 		vldr.32	s0, .L651+96
 11907 0b46 68E7     		b	.L547
 11908              	.LVL746:
 11909              	.L505:
2007:Veno-Echo.cpp ****     else
 11910              		.loc 20 2007 19 view .LVU3331
 11911              	.LBE1889:
 11912              	.LBE1898:
 11913              	.LBE1904:
 11914              	.LBE2252:
 11915              	.LBE2264:
 11916              	.LBE2275:
 372:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11917              		.loc 20 372 13 is_stmt 1 view .LVU3332
 373:Veno-Echo.cpp ****                 {
 11918              		.loc 20 373 17 view .LVU3333
 373:Veno-Echo.cpp ****                 {
 11919              		.loc 20 373 30 is_stmt 0 view .LVU3334
 11920 0b48 2B4B     		ldr	r3, .L651+100
 373:Veno-Echo.cpp ****                 {
 11921              		.loc 20 373 17 view .LVU3335
 11922 0b4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11923 0b4c 022B     		cmp	r3, #2
 11924 0b4e 3FF48AAA 		beq	.L504
 375:Veno-Echo.cpp ****                 }
 11925              		.loc 20 375 21 is_stmt 1 view .LVU3336
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 362


 375:Veno-Echo.cpp ****                 }
 11926              		.loc 20 375 39 is_stmt 0 view .LVU3337
 11927 0b52 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11928              	.LVL747:
 375:Veno-Echo.cpp ****                 }
 11929              		.loc 20 375 39 view .LVU3338
 11930 0b56 FFF786BA 		b	.L504
 11931              	.LVL748:
 11932              	.L520:
 292:Veno-Echo.cpp ****                 Update_Buttons();
 11933              		.loc 20 292 13 is_stmt 1 view .LVU3339
 293:Veno-Echo.cpp ****                 GetModCV();
 11934              		.loc 20 293 17 view .LVU3340
 293:Veno-Echo.cpp ****                 GetModCV();
 11935              		.loc 20 293 31 is_stmt 0 view .LVU3341
 11936 0b5a FFF7FEFF 		bl	_Z14Update_Buttonsv
 11937              	.LVL749:
 294:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11938              		.loc 20 294 17 is_stmt 1 view .LVU3342
 294:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11939              		.loc 20 294 25 is_stmt 0 view .LVU3343
 11940 0b5e FFF7FEFF 		bl	_Z8GetModCVv
 11941              	.LVL750:
 295:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11942              		.loc 20 295 17 is_stmt 1 view .LVU3344
 295:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11943              		.loc 20 295 38 is_stmt 0 view .LVU3345
 11944 0b62 FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 11945              	.LVL751:
 296:Veno-Echo.cpp ****             break;
 11946              		.loc 20 296 17 is_stmt 1 view .LVU3346
 296:Veno-Echo.cpp ****             break;
 11947              		.loc 20 296 38 is_stmt 0 view .LVU3347
 11948 0b66 FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11949              	.LVL752:
 297:Veno-Echo.cpp **** 
 11950              		.loc 20 297 13 is_stmt 1 view .LVU3348
 11951 0b6a FFF77CBA 		b	.L504
 11952              	.LVL753:
 11953              	.L518:
 303:Veno-Echo.cpp ****                 if(saveState != SAVING)
 11954              		.loc 20 303 13 view .LVU3349
 304:Veno-Echo.cpp ****                 {
 11955              		.loc 20 304 17 view .LVU3350
 304:Veno-Echo.cpp ****                 {
 11956              		.loc 20 304 30 is_stmt 0 view .LVU3351
 11957 0b6e 224B     		ldr	r3, .L651+100
 304:Veno-Echo.cpp ****                 {
 11958              		.loc 20 304 17 view .LVU3352
 11959 0b70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11960 0b72 022B     		cmp	r3, #2
 11961 0b74 3FF477AA 		beq	.L504
 306:Veno-Echo.cpp ****                 }
 11962              		.loc 20 306 21 is_stmt 1 view .LVU3353
 306:Veno-Echo.cpp ****                 }
 11963              		.loc 20 306 38 is_stmt 0 view .LVU3354
 11964 0b78 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 363


 11965              	.LVL754:
 306:Veno-Echo.cpp ****                 }
 11966              		.loc 20 306 38 view .LVU3355
 11967 0b7c FFF773BA 		b	.L504
 11968              	.LVL755:
 11969              	.L517:
 310:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11970              		.loc 20 310 13 is_stmt 1 view .LVU3356
 311:Veno-Echo.cpp ****             break;
 11971              		.loc 20 311 17 view .LVU3357
 11972              	.LBB2276:
 11973              	.LBI2276:
 948:Veno-Echo.cpp **** {
 11974              		.loc 20 948 6 view .LVU3358
 11975              	.LBB2277:
 950:Veno-Echo.cpp **** }
 11976              		.loc 20 950 5 view .LVU3359
 950:Veno-Echo.cpp **** }
 11977              		.loc 20 950 36 is_stmt 0 view .LVU3360
 11978 0b80 0121     		movs	r1, #1
 11979              	.LVL756:
 950:Veno-Echo.cpp **** }
 11980              		.loc 20 950 36 view .LVU3361
 11981 0b82 1E48     		ldr	r0, .L651+104
 11982              	.LVL757:
 950:Veno-Echo.cpp **** }
 11983              		.loc 20 950 36 view .LVU3362
 11984 0b84 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11985              	.LVL758:
 950:Veno-Echo.cpp **** }
 11986              		.loc 20 950 19 view .LVU3363
 11987 0b88 1D4B     		ldr	r3, .L651+108
 11988 0b8a 83ED000A 		vstr.32	s0, [r3]
 951:Veno-Echo.cpp **** 
 11989              		.loc 20 951 1 view .LVU3364
 11990 0b8e FFF76ABA 		b	.L504
 11991              	.L652:
 11992 0b92 00BF     		.align	2
 11993              	.L651:
 11994 0b94 00000000 		.word	.LANCHOR83
 11995 0b98 CDCCCC3D 		.word	1036831949
 11996 0b9c 00000000 		.word	.LANCHOR49
 11997 0ba0 00000000 		.word	.LANCHOR50
 11998 0ba4 00000000 		.word	.LANCHOR122
 11999 0ba8 00000000 		.word	.LANCHOR123
 12000 0bac 00000000 		.word	.LANCHOR37
 12001 0bb0 00000000 		.word	.LANCHOR38
 12002 0bb4 00000000 		.word	.LANCHOR120
 12003 0bb8 00000000 		.word	.LANCHOR121
 12004 0bbc 00000000 		.word	.LANCHOR126
 12005 0bc0 00000000 		.word	.LANCHOR127
 12006 0bc4 00000000 		.word	0
 12007 0bc8 00000000 		.word	.LANCHOR47
 12008 0bcc 00000000 		.word	.LANCHOR48
 12009 0bd0 00000000 		.word	.LANCHOR118
 12010 0bd4 00000000 		.word	.LANCHOR119
 12011 0bd8 00000000 		.word	.LANCHOR35
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 364


 12012 0bdc 00000000 		.word	.LANCHOR36
 12013 0be0 00000000 		.word	.LANCHOR116
 12014 0be4 00000000 		.word	.LANCHOR117
 12015 0be8 00000000 		.word	.LANCHOR124
 12016 0bec 00000000 		.word	.LANCHOR125
 12017 0bf0 CDCC4C3E 		.word	1045220557
 12018 0bf4 CDCC4CBE 		.word	3192704205
 12019 0bf8 00000000 		.word	.LANCHOR108
 12020 0bfc 18000000 		.word	.LANCHOR4+24
 12021 0c00 00000000 		.word	.LANCHOR17
 12022              	.LVL759:
 12023              	.L516:
 951:Veno-Echo.cpp **** 
 12024              		.loc 20 951 1 view .LVU3365
 12025              	.LBE2277:
 12026              	.LBE2276:
 314:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12027              		.loc 20 314 13 is_stmt 1 view .LVU3366
 315:Veno-Echo.cpp ****                 {
 12028              		.loc 20 315 17 view .LVU3367
 315:Veno-Echo.cpp ****                 {
 12029              		.loc 20 315 30 is_stmt 0 view .LVU3368
 12030 0c04 2C4B     		ldr	r3, .L653
 315:Veno-Echo.cpp ****                 {
 12031              		.loc 20 315 17 view .LVU3369
 12032 0c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12033 0c08 022B     		cmp	r3, #2
 12034 0c0a 3FF42CAA 		beq	.L504
 317:Veno-Echo.cpp ****                 }
 12035              		.loc 20 317 21 is_stmt 1 view .LVU3370
 317:Veno-Echo.cpp ****                 }
 12036              		.loc 20 317 38 is_stmt 0 view .LVU3371
 12037 0c0e FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 12038              	.LVL760:
 317:Veno-Echo.cpp ****                 }
 12039              		.loc 20 317 38 view .LVU3372
 12040 0c12 FFF728BA 		b	.L504
 12041              	.LVL761:
 12042              	.L515:
 321:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 12043              		.loc 20 321 13 is_stmt 1 view .LVU3373
 322:Veno-Echo.cpp ****             break;
 12044              		.loc 20 322 17 view .LVU3374
 12045              	.LBB2278:
 12046              	.LBI2278:
1047:Veno-Echo.cpp **** {
 12047              		.loc 20 1047 6 view .LVU3375
 12048              	.LBB2279:
1049:Veno-Echo.cpp **** }
 12049              		.loc 20 1049 5 view .LVU3376
1049:Veno-Echo.cpp **** }
 12050              		.loc 20 1049 35 is_stmt 0 view .LVU3377
 12051 0c16 0221     		movs	r1, #2
 12052              	.LVL762:
1049:Veno-Echo.cpp **** }
 12053              		.loc 20 1049 35 view .LVU3378
 12054 0c18 2848     		ldr	r0, .L653+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 365


 12055              	.LVL763:
1049:Veno-Echo.cpp **** }
 12056              		.loc 20 1049 35 view .LVU3379
 12057 0c1a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12058              	.LVL764:
1049:Veno-Echo.cpp **** }
 12059              		.loc 20 1049 18 view .LVU3380
 12060 0c1e 284B     		ldr	r3, .L653+8
 12061 0c20 83ED000A 		vstr.32	s0, [r3]
1050:Veno-Echo.cpp **** void Update_feedbackL()
 12062              		.loc 20 1050 1 view .LVU3381
 12063 0c24 FFF71FBA 		b	.L504
 12064              	.LVL765:
 12065              	.L514:
1050:Veno-Echo.cpp **** void Update_feedbackL()
 12066              		.loc 20 1050 1 view .LVU3382
 12067              	.LBE2279:
 12068              	.LBE2278:
 325:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12069              		.loc 20 325 13 is_stmt 1 view .LVU3383
 326:Veno-Echo.cpp ****                 {
 12070              		.loc 20 326 17 view .LVU3384
 326:Veno-Echo.cpp ****                 {
 12071              		.loc 20 326 30 is_stmt 0 view .LVU3385
 12072 0c28 234B     		ldr	r3, .L653
 326:Veno-Echo.cpp ****                 {
 12073              		.loc 20 326 17 view .LVU3386
 12074 0c2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12075 0c2c 022B     		cmp	r3, #2
 12076 0c2e 3FF41AAA 		beq	.L504
 328:Veno-Echo.cpp ****                 }
 12077              		.loc 20 328 21 is_stmt 1 view .LVU3387
 328:Veno-Echo.cpp ****                 }
 12078              		.loc 20 328 37 is_stmt 0 view .LVU3388
 12079 0c32 FFF7FEFF 		bl	_Z16Update_feedbackLv
 12080              	.LVL766:
 328:Veno-Echo.cpp ****                 }
 12081              		.loc 20 328 37 view .LVU3389
 12082 0c36 FFF716BA 		b	.L504
 12083              	.LVL767:
 12084              	.L513:
 332:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 12085              		.loc 20 332 13 is_stmt 1 view .LVU3390
 333:Veno-Echo.cpp ****             break;
 12086              		.loc 20 333 17 view .LVU3391
 12087              	.LBB2280:
 12088              	.LBI2280:
1136:Veno-Echo.cpp **** {
 12089              		.loc 20 1136 6 view .LVU3392
 12090              	.LBB2281:
1138:Veno-Echo.cpp **** }
 12091              		.loc 20 1138 5 view .LVU3393
1138:Veno-Echo.cpp **** }
 12092              		.loc 20 1138 35 is_stmt 0 view .LVU3394
 12093 0c3a 0321     		movs	r1, #3
 12094              	.LVL768:
1138:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 366


 12095              		.loc 20 1138 35 view .LVU3395
 12096 0c3c 1F48     		ldr	r0, .L653+4
 12097              	.LVL769:
1138:Veno-Echo.cpp **** }
 12098              		.loc 20 1138 35 view .LVU3396
 12099 0c3e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12100              	.LVL770:
1138:Veno-Echo.cpp **** }
 12101              		.loc 20 1138 18 view .LVU3397
 12102 0c42 204B     		ldr	r3, .L653+12
 12103 0c44 83ED000A 		vstr.32	s0, [r3]
1139:Veno-Echo.cpp **** 
 12104              		.loc 20 1139 1 view .LVU3398
 12105 0c48 FFF70DBA 		b	.L504
 12106              	.LVL771:
 12107              	.L512:
1139:Veno-Echo.cpp **** 
 12108              		.loc 20 1139 1 view .LVU3399
 12109              	.LBE2281:
 12110              	.LBE2280:
 336:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12111              		.loc 20 336 13 is_stmt 1 view .LVU3400
 337:Veno-Echo.cpp ****                 {
 12112              		.loc 20 337 17 view .LVU3401
 337:Veno-Echo.cpp ****                 {
 12113              		.loc 20 337 30 is_stmt 0 view .LVU3402
 12114 0c4c 1A4B     		ldr	r3, .L653
 337:Veno-Echo.cpp ****                 {
 12115              		.loc 20 337 17 view .LVU3403
 12116 0c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12117 0c50 022B     		cmp	r3, #2
 12118 0c52 3FF408AA 		beq	.L504
 339:Veno-Echo.cpp ****                 }
 12119              		.loc 20 339 21 is_stmt 1 view .LVU3404
 339:Veno-Echo.cpp ****                 }
 12120              		.loc 20 339 37 is_stmt 0 view .LVU3405
 12121 0c56 FFF7FEFF 		bl	_Z16Update_feedbackRv
 12122              	.LVL772:
 339:Veno-Echo.cpp ****                 }
 12123              		.loc 20 339 37 view .LVU3406
 12124 0c5a FFF704BA 		b	.L504
 12125              	.LVL773:
 12126              	.L511:
 343:Veno-Echo.cpp ****                 Update_drywet_CV();
 12127              		.loc 20 343 13 is_stmt 1 view .LVU3407
 344:Veno-Echo.cpp ****             break;
 12128              		.loc 20 344 17 view .LVU3408
 12129              	.LBB2282:
 12130              	.LBI2282:
1226:Veno-Echo.cpp **** {
 12131              		.loc 20 1226 6 view .LVU3409
 12132              	.LBB2283:
1228:Veno-Echo.cpp **** }
 12133              		.loc 20 1228 5 view .LVU3410
1228:Veno-Echo.cpp **** }
 12134              		.loc 20 1228 32 is_stmt 0 view .LVU3411
 12135 0c5e 0421     		movs	r1, #4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 367


 12136              	.LVL774:
1228:Veno-Echo.cpp **** }
 12137              		.loc 20 1228 32 view .LVU3412
 12138 0c60 1648     		ldr	r0, .L653+4
 12139              	.LVL775:
1228:Veno-Echo.cpp **** }
 12140              		.loc 20 1228 32 view .LVU3413
 12141 0c62 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12142              	.LVL776:
1228:Veno-Echo.cpp **** }
 12143              		.loc 20 1228 15 view .LVU3414
 12144 0c66 184B     		ldr	r3, .L653+16
 12145 0c68 83ED000A 		vstr.32	s0, [r3]
1229:Veno-Echo.cpp **** 
 12146              		.loc 20 1229 1 view .LVU3415
 12147 0c6c FFF7FBB9 		b	.L504
 12148              	.LVL777:
 12149              	.L510:
1229:Veno-Echo.cpp **** 
 12150              		.loc 20 1229 1 view .LVU3416
 12151              	.LBE2283:
 12152              	.LBE2282:
 347:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12153              		.loc 20 347 13 is_stmt 1 view .LVU3417
 348:Veno-Echo.cpp ****                 {
 12154              		.loc 20 348 17 view .LVU3418
 348:Veno-Echo.cpp ****                 {
 12155              		.loc 20 348 30 is_stmt 0 view .LVU3419
 12156 0c70 114B     		ldr	r3, .L653
 348:Veno-Echo.cpp ****                 {
 12157              		.loc 20 348 17 view .LVU3420
 12158 0c72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12159 0c74 022B     		cmp	r3, #2
 12160 0c76 3FF4F6A9 		beq	.L504
 350:Veno-Echo.cpp ****                 }
 12161              		.loc 20 350 21 is_stmt 1 view .LVU3421
 350:Veno-Echo.cpp ****                 }
 12162              		.loc 20 350 34 is_stmt 0 view .LVU3422
 12163 0c7a FFF7FEFF 		bl	_Z13Update_drywetv
 12164              	.LVL778:
 350:Veno-Echo.cpp ****                 }
 12165              		.loc 20 350 34 view .LVU3423
 12166 0c7e FFF7F2B9 		b	.L504
 12167              	.LVL779:
 12168              	.L509:
 354:Veno-Echo.cpp ****                 Update_width_CV();
 12169              		.loc 20 354 13 is_stmt 1 view .LVU3424
 355:Veno-Echo.cpp ****             break;
 12170              		.loc 20 355 17 view .LVU3425
 12171              	.LBB2284:
 12172              	.LBI2284:
1341:Veno-Echo.cpp **** {
 12173              		.loc 20 1341 6 view .LVU3426
 12174              	.LBB2285:
1343:Veno-Echo.cpp **** }
 12175              		.loc 20 1343 5 view .LVU3427
1343:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 368


 12176              		.loc 20 1343 30 is_stmt 0 view .LVU3428
 12177 0c82 0521     		movs	r1, #5
 12178              	.LVL780:
1343:Veno-Echo.cpp **** }
 12179              		.loc 20 1343 30 view .LVU3429
 12180 0c84 0D48     		ldr	r0, .L653+4
 12181              	.LVL781:
1343:Veno-Echo.cpp **** }
 12182              		.loc 20 1343 30 view .LVU3430
 12183 0c86 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12184              	.LVL782:
1343:Veno-Echo.cpp **** }
 12185              		.loc 20 1343 13 view .LVU3431
 12186 0c8a 104B     		ldr	r3, .L653+20
 12187 0c8c 83ED000A 		vstr.32	s0, [r3]
1344:Veno-Echo.cpp **** 
 12188              		.loc 20 1344 1 view .LVU3432
 12189 0c90 FFF7E9B9 		b	.L504
 12190              	.LVL783:
 12191              	.L508:
1344:Veno-Echo.cpp **** 
 12192              		.loc 20 1344 1 view .LVU3433
 12193              	.LBE2285:
 12194              	.LBE2284:
 358:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12195              		.loc 20 358 13 is_stmt 1 view .LVU3434
 359:Veno-Echo.cpp ****                 {
 12196              		.loc 20 359 17 view .LVU3435
 359:Veno-Echo.cpp ****                 {
 12197              		.loc 20 359 30 is_stmt 0 view .LVU3436
 12198 0c94 084B     		ldr	r3, .L653
 359:Veno-Echo.cpp ****                 {
 12199              		.loc 20 359 17 view .LVU3437
 12200 0c96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12201 0c98 022B     		cmp	r3, #2
 12202 0c9a 3FF4E4A9 		beq	.L504
 361:Veno-Echo.cpp ****                 }
 12203              		.loc 20 361 21 is_stmt 1 view .LVU3438
 361:Veno-Echo.cpp ****                 }
 12204              		.loc 20 361 33 is_stmt 0 view .LVU3439
 12205 0c9e FFF7FEFF 		bl	_Z12Update_widthv
 12206              	.LVL784:
 361:Veno-Echo.cpp ****                 }
 12207              		.loc 20 361 33 view .LVU3440
 12208 0ca2 FFF7E0B9 		b	.L504
 12209              	.LVL785:
 12210              	.L507:
 365:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12211              		.loc 20 365 13 is_stmt 1 view .LVU3441
 366:Veno-Echo.cpp ****                 {
 12212              		.loc 20 366 17 view .LVU3442
 366:Veno-Echo.cpp ****                 {
 12213              		.loc 20 366 30 is_stmt 0 view .LVU3443
 12214 0ca6 044B     		ldr	r3, .L653
 366:Veno-Echo.cpp ****                 {
 12215              		.loc 20 366 17 view .LVU3444
 12216 0ca8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 369


 12217 0caa 022B     		cmp	r3, #2
 12218 0cac 3FF4DBA9 		beq	.L504
 368:Veno-Echo.cpp ****                 }
 12219              		.loc 20 368 21 is_stmt 1 view .LVU3445
 368:Veno-Echo.cpp ****                 }
 12220              		.loc 20 368 41 is_stmt 0 view .LVU3446
 12221 0cb0 FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 12222              	.LVL786:
 368:Veno-Echo.cpp ****                 }
 12223              		.loc 20 368 41 view .LVU3447
 12224 0cb4 FFF7D7B9 		b	.L504
 12225              	.L654:
 12226              		.align	2
 12227              	.L653:
 12228 0cb8 00000000 		.word	.LANCHOR108
 12229 0cbc 18000000 		.word	.LANCHOR4+24
 12230 0cc0 00000000 		.word	.LANCHOR27
 12231 0cc4 00000000 		.word	.LANCHOR39
 12232 0cc8 00000000 		.word	.LANCHOR51
 12233 0ccc 00000000 		.word	.LANCHOR59
 12234              		.cfi_endproc
 12235              	.LFE4309:
 12237              		.section	.text._Z9HardLimitff,"ax",%progbits
 12238              		.align	1
 12239              		.p2align 2,,3
 12240              		.global	_Z9HardLimitff
 12241              		.syntax unified
 12242              		.thumb
 12243              		.thumb_func
 12244              		.fpu fpv5-d16
 12246              	_Z9HardLimitff:
 12247              	.LVL787:
 12248              	.LFB4336:
2002:Veno-Echo.cpp ****     float returnval{};
 12249              		.loc 20 2002 1 is_stmt 1 view -0
 12250              		.cfi_startproc
 12251              		@ args = 0, pretend = 0, frame = 0
 12252              		@ frame_needed = 0, uses_anonymous_args = 0
 12253              		@ link register save eliminated.
2003:Veno-Echo.cpp ****     if (input > limit)
 12254              		.loc 20 2003 5 view .LVU3449
2004:Veno-Echo.cpp ****         returnval = limit;
 12255              		.loc 20 2004 5 view .LVU3450
 12256 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12257 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12258 0008 07DC     		bgt	.L656
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12259              		.loc 20 2006 10 view .LVU3451
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12260              		.loc 20 2006 28 is_stmt 0 view .LVU3452
 12261 000a F1EE600A 		vneg.f32	s1, s1
 12262              	.LVL788:
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12263              		.loc 20 2006 10 view .LVU3453
 12264 000e F4EEC00A 		vcmpe.f32	s1, s0
 12265 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2009:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 370


 12266              		.loc 20 2009 19 view .LVU3454
 12267 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12268              	.L656:
 12269              	.LVL789:
2011:Veno-Echo.cpp **** }
 12270              		.loc 20 2011 5 is_stmt 1 view .LVU3455
2012:Veno-Echo.cpp **** 
 12271              		.loc 20 2012 1 is_stmt 0 view .LVU3456
 12272 001a B0EE600A 		vmov.f32	s0, s1
 12273              	.LVL790:
2012:Veno-Echo.cpp **** 
 12274              		.loc 20 2012 1 view .LVU3457
 12275 001e 7047     		bx	lr
 12276              		.cfi_endproc
 12277              	.LFE4336:
 12279              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12280              		.align	1
 12281              		.p2align 2,,3
 12282              		.global	_Z10PotCVComboff
 12283              		.syntax unified
 12284              		.thumb
 12285              		.thumb_func
 12286              		.fpu fpv5-d16
 12288              	_Z10PotCVComboff:
 12289              	.LVL791:
 12290              	.LFB4337:
2015:Veno-Echo.cpp ****     float output{};
 12291              		.loc 20 2015 1 is_stmt 1 view -0
 12292              		.cfi_startproc
 12293              		@ args = 0, pretend = 0, frame = 0
 12294              		@ frame_needed = 0, uses_anonymous_args = 0
 12295              		@ link register save eliminated.
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12296              		.loc 20 2016 5 view .LVU3459
2017:Veno-Echo.cpp **** 
 12297              		.loc 20 2017 5 view .LVU3460
2017:Veno-Echo.cpp **** 
 12298              		.loc 20 2017 39 is_stmt 0 view .LVU3461
 12299 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2017:Veno-Echo.cpp **** 
 12300              		.loc 20 2017 49 view .LVU3462
 12301 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2017:Veno-Echo.cpp **** 
 12302              		.loc 20 2017 12 view .LVU3463
 12303 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2017:Veno-Echo.cpp **** 
 12304              		.loc 20 2017 39 view .LVU3464
 12305 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12306              	.LVL792:
2017:Veno-Echo.cpp **** 
 12307              		.loc 20 2017 49 view .LVU3465
 12308 0010 70EEE60A 		vsub.f32	s1, s1, s13
2017:Veno-Echo.cpp **** 
 12309              		.loc 20 2017 12 view .LVU3466
 12310 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12311              	.LVL793:
2019:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 371


 12312              		.loc 20 2019 5 is_stmt 1 view .LVU3467
 12313 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12314 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12315 0020 06D4     		bmi	.L662
2024:Veno-Echo.cpp ****     {
 12316              		.loc 20 2024 5 view .LVU3468
2026:Veno-Echo.cpp ****     }
 12317              		.loc 20 2026 16 is_stmt 0 view .LVU3469
 12318 0022 B4EE670A 		vcmp.f32	s0, s15
 12319 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12320 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12321              	.LVL794:
2026:Veno-Echo.cpp ****     }
 12322              		.loc 20 2026 16 view .LVU3470
 12323 002e 7047     		bx	lr
 12324              	.LVL795:
 12325              	.L662:
2021:Veno-Echo.cpp ****     }
 12326              		.loc 20 2021 16 view .LVU3471
 12327 0030 9FED010A 		vldr.32	s0, .L664
 12328              	.LVL796:
2029:Veno-Echo.cpp **** }
 12329              		.loc 20 2029 5 is_stmt 1 view .LVU3472
2030:Veno-Echo.cpp **** 
 12330              		.loc 20 2030 1 is_stmt 0 view .LVU3473
 12331 0034 7047     		bx	lr
 12332              	.L665:
 12333 0036 00BF     		.align	2
 12334              	.L664:
 12335 0038 00000000 		.word	0
 12336              		.cfi_endproc
 12337              	.LFE4337:
 12339              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12340              		.align	1
 12341              		.p2align 2,,3
 12342              		.global	_Z16checkPickupStateffbb
 12343              		.syntax unified
 12344              		.thumb
 12345              		.thumb_func
 12346              		.fpu fpv5-d16
 12348              	_Z16checkPickupStateffbb:
 12349              	.LVL797:
 12350              	.LFB4338:
2034:Veno-Echo.cpp ****     bool retval{};
 12351              		.loc 20 2034 1 is_stmt 1 view -0
 12352              		.cfi_startproc
 12353              		@ args = 0, pretend = 0, frame = 0
 12354              		@ frame_needed = 0, uses_anonymous_args = 0
 12355              		@ link register save eliminated.
2035:Veno-Echo.cpp ****     
 12356              		.loc 20 2035 5 view .LVU3475
2037:Veno-Echo.cpp ****     {
 12357              		.loc 20 2037 5 view .LVU3476
 12358 0000 69B1     		cbz	r1, .L667
2039:Veno-Echo.cpp ****         {
 12359              		.loc 20 2039 9 view .LVU3477
 12360              	.LVL798:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 372


 12361              	.LBB2286:
 12362              	.LBI2286:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12363              		.loc 21 75 3 view .LVU3478
 12364              	.LBB2287:
 12365              		.loc 21 76 5 view .LVU3479
 12366              		.loc 21 76 5 is_stmt 0 view .LVU3480
 12367              	.LBE2287:
 12368              	.LBE2286:
2039:Veno-Echo.cpp ****         {
 12369              		.loc 20 2039 15 view .LVU3481
 12370 0002 70EE600A 		vsub.f32	s1, s0, s1
 12371              	.LVL799:
2039:Veno-Echo.cpp ****         {
 12372              		.loc 20 2039 9 view .LVU3482
 12373 0006 DFED0D7A 		vldr.32	s15, .L670
 12374              	.LBB2289:
 12375              	.LBB2288:
 12376              		.loc 21 76 31 view .LVU3483
 12377 000a B0EEE00A 		vabs.f32	s0, s1
 12378              	.LVL800:
 12379              		.loc 21 76 31 view .LVU3484
 12380              	.LBE2288:
 12381              	.LBE2289:
2039:Veno-Echo.cpp ****         {
 12382              		.loc 20 2039 9 view .LVU3485
 12383 000e B4EEE70A 		vcmpe.f32	s0, s15
 12384 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12385 0016 D4BF     		ite	le
 12386 0018 0120     		movle	r0, #1
 12387              	.LVL801:
2039:Veno-Echo.cpp ****         {
 12388              		.loc 20 2039 9 view .LVU3486
 12389 001a 0020     		movgt	r0, #0
 12390 001c 7047     		bx	lr
 12391              	.LVL802:
 12392              	.L667:
2051:Veno-Echo.cpp ****     {
 12393              		.loc 20 2051 5 is_stmt 1 view .LVU3487
 12394 001e 60B9     		cbnz	r0, .L668
2053:Veno-Echo.cpp ****         {
 12395              		.loc 20 2053 9 view .LVU3488
 12396              	.LVL803:
 12397              	.LBB2290:
 12398              	.LBI2290:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12399              		.loc 21 75 3 view .LVU3489
 12400              	.LBB2291:
 12401              		.loc 21 76 5 view .LVU3490
 12402              		.loc 21 76 5 is_stmt 0 view .LVU3491
 12403              	.LBE2291:
 12404              	.LBE2290:
2053:Veno-Echo.cpp ****         {
 12405              		.loc 20 2053 15 view .LVU3492
 12406 0020 30EE600A 		vsub.f32	s0, s0, s1
 12407              	.LVL804:
2053:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 373


 12408              		.loc 20 2053 9 view .LVU3493
 12409 0024 DFED057A 		vldr.32	s15, .L670
 12410              	.LBB2293:
 12411              	.LBB2292:
 12412              		.loc 21 76 31 view .LVU3494
 12413 0028 B0EEC00A 		vabs.f32	s0, s0
 12414              	.LBE2292:
 12415              	.LBE2293:
2053:Veno-Echo.cpp ****         {
 12416              		.loc 20 2053 9 view .LVU3495
 12417 002c B4EEE70A 		vcmpe.f32	s0, s15
 12418 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12419 0034 CCBF     		ite	gt
 12420 0036 0120     		movgt	r0, #1
 12421              	.LVL805:
2053:Veno-Echo.cpp ****         {
 12422              		.loc 20 2053 9 view .LVU3496
 12423 0038 0020     		movle	r0, #0
 12424              	.L668:
 12425              	.LVL806:
2070:Veno-Echo.cpp **** 
 12426              		.loc 20 2070 5 is_stmt 1 view .LVU3497
2072:Veno-Echo.cpp **** 
 12427              		.loc 20 2072 1 is_stmt 0 view .LVU3498
 12428 003a 7047     		bx	lr
 12429              	.L671:
 12430              		.align	2
 12431              	.L670:
 12432 003c 0AD7A33B 		.word	1000593162
 12433              		.cfi_endproc
 12434              	.LFE4338:
 12436              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12437              		.align	1
 12438              		.p2align 2,,3
 12439              		.global	_Z20checkPickupState_altff11pickupStateb
 12440              		.syntax unified
 12441              		.thumb
 12442              		.thumb_func
 12443              		.fpu fpv5-d16
 12445              	_Z20checkPickupState_altff11pickupStateb:
 12446              	.LVL807:
 12447              	.LFB4339:
2076:Veno-Echo.cpp ****     pickupState retval{};
 12448              		.loc 20 2076 1 is_stmt 1 view -0
 12449              		.cfi_startproc
 12450              		@ args = 0, pretend = 0, frame = 0
 12451              		@ frame_needed = 0, uses_anonymous_args = 0
 12452              		@ link register save eliminated.
2077:Veno-Echo.cpp **** 
 12453              		.loc 20 2077 5 view .LVU3500
2079:Veno-Echo.cpp ****     {
 12454              		.loc 20 2079 5 view .LVU3501
 12455 0000 A1B1     		cbz	r1, .L673
2081:Veno-Echo.cpp ****         {
 12456              		.loc 20 2081 9 view .LVU3502
2081:Veno-Echo.cpp ****         {
 12457              		.loc 20 2081 31 is_stmt 0 view .LVU3503
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 374


 12458 0002 DFED1A7A 		vldr.32	s15, .L690
 12459 0006 30EEE77A 		vsub.f32	s14, s1, s15
2081:Veno-Echo.cpp ****         {
 12460              		.loc 20 2081 9 view .LVU3504
 12461 000a B4EEC07A 		vcmpe.f32	s14, s0
 12462 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12463 0012 01DD     		ble	.L688
 12464 0014 0020     		movs	r0, #0
 12465              	.LVL808:
2081:Veno-Echo.cpp ****         {
 12466              		.loc 20 2081 9 view .LVU3505
 12467 0016 7047     		bx	lr
 12468              	.LVL809:
 12469              	.L688:
2086:Veno-Echo.cpp ****         {
 12470              		.loc 20 2086 14 is_stmt 1 view .LVU3506
2086:Veno-Echo.cpp ****         {
 12471              		.loc 20 2086 36 is_stmt 0 view .LVU3507
 12472 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12473              	.LVL810:
2086:Veno-Echo.cpp ****         {
 12474              		.loc 20 2086 14 view .LVU3508
 12475 001c F4EEC00A 		vcmpe.f32	s1, s0
 12476 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2093:Veno-Echo.cpp ****         }
 12477              		.loc 20 2093 20 view .LVU3509
 12478 0024 4CBF     		ite	mi
 12479 0026 0120     		movmi	r0, #1
 12480              	.LVL811:
2093:Veno-Echo.cpp ****         }
 12481              		.loc 20 2093 20 view .LVU3510
 12482 0028 0220     		movpl	r0, #2
 12483 002a 7047     		bx	lr
 12484              	.LVL812:
 12485              	.L673:
2099:Veno-Echo.cpp ****         {
 12486              		.loc 20 2099 9 is_stmt 1 view .LVU3511
 12487 002c 0128     		cmp	r0, #1
 12488 002e 04D0     		beq	.L676
 12489 0030 0228     		cmp	r0, #2
 12490 0032 01D0     		beq	.L674
 12491 0034 68B1     		cbz	r0, .L689
 12492 0036 0846     		mov	r0, r1
 12493              	.LVL813:
 12494              	.L674:
2120:Veno-Echo.cpp **** }
 12495              		.loc 20 2120 5 view .LVU3512
2121:Veno-Echo.cpp **** 
 12496              		.loc 20 2121 1 is_stmt 0 view .LVU3513
 12497 0038 7047     		bx	lr
 12498              	.LVL814:
 12499              	.L676:
2108:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12500              		.loc 20 2108 13 is_stmt 1 view .LVU3514
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12501              		.loc 20 2109 13 view .LVU3515
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 375


 12502              		.loc 20 2109 35 is_stmt 0 view .LVU3516
 12503 003a DFED0C7A 		vldr.32	s15, .L690
 12504 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12505              	.LVL815:
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12506              		.loc 20 2109 13 view .LVU3517
 12507 0042 F4EEC00A 		vcmpe.f32	s1, s0
 12508 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12509 004a CCBF     		ite	gt
 12510 004c 0220     		movgt	r0, #2
 12511              	.LVL816:
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12512              		.loc 20 2109 13 view .LVU3518
 12513 004e 0120     		movle	r0, #1
 12514 0050 7047     		bx	lr
 12515              	.LVL817:
 12516              	.L689:
2101:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12517              		.loc 20 2101 13 is_stmt 1 view .LVU3519
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12518              		.loc 20 2102 13 view .LVU3520
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12519              		.loc 20 2102 35 is_stmt 0 view .LVU3521
 12520 0052 DFED067A 		vldr.32	s15, .L690
 12521 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12522              	.LVL818:
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12523              		.loc 20 2102 13 view .LVU3522
 12524 005a F4EEC00A 		vcmpe.f32	s1, s0
 12525 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12526 0062 4CBF     		ite	mi
 12527 0064 0220     		movmi	r0, #2
 12528              	.LVL819:
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12529              		.loc 20 2102 13 view .LVU3523
 12530 0066 0020     		movpl	r0, #0
 12531 0068 7047     		bx	lr
 12532              	.L691:
 12533 006a 00BF     		.align	2
 12534              	.L690:
 12535 006c 0AD7A33B 		.word	1000593162
 12536              		.cfi_endproc
 12537              	.LFE4339:
 12539              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12540              		.align	1
 12541              		.p2align 2,,3
 12542              		.global	_Z11GetTapRatio9TapRatios
 12543              		.syntax unified
 12544              		.thumb
 12545              		.thumb_func
 12546              		.fpu fpv5-d16
 12548              	_Z11GetTapRatio9TapRatios:
 12549              	.LVL820:
 12550              	.LFB4340:
2124:Veno-Echo.cpp **** double retVal{};
 12551              		.loc 20 2124 1 is_stmt 1 view -0
 12552              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 376


 12553              		@ args = 0, pretend = 0, frame = 0
 12554              		@ frame_needed = 0, uses_anonymous_args = 0
 12555              		@ link register save eliminated.
2125:Veno-Echo.cpp ****     switch(ratio)
 12556              		.loc 20 2125 1 view .LVU3525
2126:Veno-Echo.cpp ****     {
 12557              		.loc 20 2126 5 view .LVU3526
 12558 0000 0138     		subs	r0, r0, #1
 12559              	.LVL821:
2126:Veno-Echo.cpp ****     {
 12560              		.loc 20 2126 5 is_stmt 0 view .LVU3527
 12561 0002 C0B2     		uxtb	r0, r0
 12562 0004 0228     		cmp	r0, #2
 12563 0006 05D8     		bhi	.L694
 12564 0008 044B     		ldr	r3, .L695
 12565 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12566 000e 90ED000B 		vldr.64	d0, [r0]
 12567 0012 7047     		bx	lr
 12568              	.L694:
2124:Veno-Echo.cpp **** double retVal{};
 12569              		.loc 20 2124 1 view .LVU3528
 12570 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12571              	.LVL822:
 12572              		.loc 20 2149 1 is_stmt 1 view .LVU3529
2150:Veno-Echo.cpp **** }
 12573              		.loc 20 2150 1 is_stmt 0 view .LVU3530
 12574 0018 7047     		bx	lr
 12575              	.L696:
 12576 001a 00BF     		.align	2
 12577              	.L695:
 12578 001c 00000000 		.word	.LANCHOR25
 12579              		.cfi_endproc
 12580              	.LFE4340:
 12582              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12583              		.align	1
 12584              		.p2align 2,,3
 12585              		.syntax unified
 12586              		.thumb
 12587              		.thumb_func
 12588              		.fpu fpv5-d16
 12590              	_GLOBAL__sub_I_delMemsL:
 12591              	.LFB4919:
 12592              		.loc 20 2150 1 is_stmt 1 view -0
 12593              		.cfi_startproc
 12594              		@ args = 0, pretend = 0, frame = 0
 12595              		@ frame_needed = 0, uses_anonymous_args = 0
 12596              	.LBB2450:
 12597              	.LBI2450:
 12598              		.loc 20 2150 1 view .LVU3532
 12599              	.LVL823:
 12600              	.LBB2451:
 12601              	.LBB2452:
 12602              	.LBI2452:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12603              		.loc 2 21 5 view .LVU3533
 12604              	.LBB2453:
 12605              	.LBB2454:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 377


 12606              	.LBI2454:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12607              		.loc 6 36 5 view .LVU3534
 12608              	.LBE2454:
 12609              	.LBE2453:
 12610              	.LBE2452:
 12611              	.LBE2451:
 12612              	.LBE2450:
 12613              		.loc 20 2150 1 is_stmt 0 view .LVU3535
 12614 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12615              		.cfi_def_cfa_offset 24
 12616              		.cfi_offset 4, -24
 12617              		.cfi_offset 5, -20
 12618              		.cfi_offset 6, -16
 12619              		.cfi_offset 7, -12
 12620              		.cfi_offset 8, -8
 12621              		.cfi_offset 14, -4
 12622              	.LBB2573:
 12623              	.LBB2569:
 12624              	.LBB2469:
 12625              	.LBB2467:
 12626              	.LBB2459:
 12627              	.LBB2455:
 12628              	.LBB2456:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12629              		.loc 6 36 35 view .LVU3536
 12630 0004 9748     		ldr	r0, .L699
 12631 0006 0026     		movs	r6, #0
 12632              	.LBE2456:
 12633              	.LBE2455:
 12634              	.LBE2459:
 12635              	.LBE2467:
 12636              	.LBE2469:
 12637              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 378


  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12638              		.loc 26 33 18 view .LVU3537
 12639 0008 974C     		ldr	r4, .L699+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12640              		.loc 20 40 12 view .LVU3538
 12641 000a 984D     		ldr	r5, .L699+8
 12642              		.loc 26 33 18 view .LVU3539
 12643 000c 2246     		mov	r2, r4
 12644 000e 9849     		ldr	r1, .L699+12
 12645              	.LBB2470:
 12646              	.LBB2468:
 12647              	.LBB2460:
 12648              	.LBB2458:
 12649              	.LBB2457:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12650              		.loc 6 36 35 view .LVU3540
 12651 0010 4661     		str	r6, [r0, #20]
 12652              	.LVL824:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12653              		.loc 6 36 35 view .LVU3541
 12654              	.LBE2457:
 12655              	.LBE2458:
 12656              	.LBE2460:
 12657              	.LBB2461:
 12658              	.LBI2461:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12659              		.loc 5 84 5 is_stmt 1 view .LVU3542
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12660              		.loc 5 84 5 is_stmt 0 view .LVU3543
 12661              	.LBE2461:
 12662              	.LBB2462:
 12663              	.LBI2462:
 12664              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 379


  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 380


  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12665              		.loc 27 83 5 is_stmt 1 view .LVU3544
 12666              	.LBB2463:
 12667              	.LBB2464:
 12668              		.loc 27 83 33 is_stmt 0 view .LVU3545
 12669 0012 0662     		str	r6, [r0, #32]
 12670              	.LVL825:
 12671              		.loc 27 83 33 view .LVU3546
 12672              	.LBE2464:
 12673              	.LBE2463:
 12674              	.LBE2462:
 12675              	.LBB2465:
 12676              	.LBI2465:
  40:../libdaisy/src/hid/usb.h **** 
 12677              		.loc 4 40 5 is_stmt 1 view .LVU3547
  40:../libdaisy/src/hid/usb.h **** 
 12678              		.loc 4 40 5 is_stmt 0 view .LVU3548
 12679              	.LBE2465:
 12680              	.LBB2466:
 12681              	.LBI2466:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12682              		.loc 3 56 5 is_stmt 1 view .LVU3549
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12683              		.loc 3 56 5 is_stmt 0 view .LVU3550
 12684              	.LBE2466:
 12685              	.LBE2468:
 12686              	.LBE2470:
 12687              		.loc 26 33 18 view .LVU3551
 12688 0014 FFF7FEFF 		bl	__aeabi_atexit
 12689              	.LVL826:
 12690              	.LBB2471:
 12691              	.LBI2471:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12692              		.loc 9 21 5 is_stmt 1 view .LVU3552
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12693              		.loc 9 21 5 is_stmt 0 view .LVU3553
 12694              	.LBE2471:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12695              		.loc 20 40 12 view .LVU3554
 12696 0018 2246     		mov	r2, r4
 12697 001a 2946     		mov	r1, r5
 12698 001c 9548     		ldr	r0, .L699+16
 12699 001e FFF7FEFF 		bl	__aeabi_atexit
 12700              	.LVL827:
 12701              	.LBB2472:
 12702              	.LBI2472:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 381


 12703              		.loc 9 21 5 is_stmt 1 view .LVU3555
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12704              		.loc 9 21 5 is_stmt 0 view .LVU3556
 12705              	.LBE2472:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12706              		.loc 20 41 12 view .LVU3557
 12707 0022 2246     		mov	r2, r4
 12708 0024 2946     		mov	r1, r5
 12709 0026 9448     		ldr	r0, .L699+20
 12710 0028 FFF7FEFF 		bl	__aeabi_atexit
 12711              	.LVL828:
 12712              	.LBB2473:
 12713              	.LBI2473:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12714              		.loc 9 21 5 is_stmt 1 view .LVU3558
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12715              		.loc 9 21 5 is_stmt 0 view .LVU3559
 12716              	.LBE2473:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12717              		.loc 20 42 12 view .LVU3560
 12718 002c 2246     		mov	r2, r4
 12719 002e 2946     		mov	r1, r5
 12720 0030 9248     		ldr	r0, .L699+24
 12721 0032 FFF7FEFF 		bl	__aeabi_atexit
 12722              	.LVL829:
 12723              	.LBB2474:
 12724              	.LBI2474:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12725              		.loc 9 21 5 is_stmt 1 view .LVU3561
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12726              		.loc 9 21 5 is_stmt 0 view .LVU3562
 12727              	.LBE2474:
  43:Veno-Echo.cpp **** 
 12728              		.loc 20 43 12 view .LVU3563
 12729 0036 2246     		mov	r2, r4
 12730 0038 2946     		mov	r1, r5
 12731 003a 9148     		ldr	r0, .L699+28
 12732 003c FFF7FEFF 		bl	__aeabi_atexit
 12733              	.LVL830:
 12734              	.LBB2475:
 12735              	.LBI2475:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12736              		.loc 9 21 5 is_stmt 1 view .LVU3564
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12737              		.loc 9 21 5 is_stmt 0 view .LVU3565
 12738              	.LBE2475:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12739              		.loc 20 45 12 view .LVU3566
 12740 0040 2246     		mov	r2, r4
 12741 0042 2946     		mov	r1, r5
 12742 0044 8F48     		ldr	r0, .L699+32
 12743 0046 FFF7FEFF 		bl	__aeabi_atexit
 12744              	.LVL831:
 12745              	.LBB2476:
 12746              	.LBI2476:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12747              		.loc 9 21 5 is_stmt 1 view .LVU3567
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 382


  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12748              		.loc 9 21 5 is_stmt 0 view .LVU3568
 12749              	.LBE2476:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12750              		.loc 20 46 12 view .LVU3569
 12751 004a 2246     		mov	r2, r4
 12752 004c 2946     		mov	r1, r5
 12753 004e 8E48     		ldr	r0, .L699+36
 12754 0050 FFF7FEFF 		bl	__aeabi_atexit
 12755              	.LVL832:
 12756              	.LBB2477:
 12757              	.LBI2477:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12758              		.loc 9 21 5 is_stmt 1 view .LVU3570
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12759              		.loc 9 21 5 is_stmt 0 view .LVU3571
 12760              	.LBE2477:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12761              		.loc 20 47 12 view .LVU3572
 12762 0054 2246     		mov	r2, r4
 12763 0056 2946     		mov	r1, r5
 12764 0058 8C48     		ldr	r0, .L699+40
 12765 005a FFF7FEFF 		bl	__aeabi_atexit
 12766              	.LVL833:
 12767              	.LBB2478:
 12768              	.LBI2478:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12769              		.loc 9 21 5 is_stmt 1 view .LVU3573
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12770              		.loc 9 21 5 is_stmt 0 view .LVU3574
 12771              	.LBE2478:
  48:Veno-Echo.cpp **** 
 12772              		.loc 20 48 12 view .LVU3575
 12773 005e 2246     		mov	r2, r4
 12774 0060 2946     		mov	r1, r5
 12775 0062 8B48     		ldr	r0, .L699+44
 12776 0064 FFF7FEFF 		bl	__aeabi_atexit
 12777              	.LVL834:
 12778              	.LBB2479:
 12779              	.LBI2479:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12780              		.loc 8 15 5 is_stmt 1 view .LVU3576
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12781              		.loc 8 15 5 is_stmt 0 view .LVU3577
 12782              	.LBE2479:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12783              		.loc 20 50 19 view .LVU3578
 12784 0068 2246     		mov	r2, r4
 12785 006a 8A49     		ldr	r1, .L699+48
 12786              	.LBB2480:
 12787              	.LBB2481:
 12788              	.LBB2482:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12789              		.loc 12 45 13 view .LVU3579
 12790 006c 0025     		movs	r5, #0
 12791              	.LBE2482:
 12792              	.LBE2481:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 383


 12793              	.LBE2480:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12794              		.loc 20 50 19 view .LVU3580
 12795 006e 8A48     		ldr	r0, .L699+52
 12796 0070 FFF7FEFF 		bl	__aeabi_atexit
 12797              	.LVL835:
 12798              	.LBB2487:
 12799              	.LBI2480:
  43:envFollow.h   ****     {
 12800              		.loc 12 43 5 is_stmt 1 view .LVU3581
 12801              	.LBB2485:
 12802              	.LBB2483:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12803              		.loc 12 45 9 view .LVU3582
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12804              		.loc 12 48 11 is_stmt 0 view .LVU3583
 12805 0074 894F     		ldr	r7, .L699+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12806              		.loc 12 45 13 view .LVU3584
 12807 0076 8A48     		ldr	r0, .L699+60
 12808              	.LBE2483:
 12809              	.LBE2485:
 12810              	.LBE2487:
  51:Veno-Echo.cpp **** 
 12811              		.loc 20 51 18 view .LVU3585
 12812 0078 2246     		mov	r2, r4
 12813 007a 8A49     		ldr	r1, .L699+64
 12814              	.LBB2488:
 12815              	.LBB2486:
 12816              	.LBB2484:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12817              		.loc 12 45 13 view .LVU3586
 12818 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12819              		.loc 12 46 9 is_stmt 1 view .LVU3587
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12820              		.loc 12 46 20 is_stmt 0 view .LVU3588
 12821 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12822              		.loc 12 47 9 is_stmt 1 view .LVU3589
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12823              		.loc 12 47 17 is_stmt 0 view .LVU3590
 12824 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12825              		.loc 12 48 9 is_stmt 1 view .LVU3591
  50:envFollow.h   ****     }  
 12826              		.loc 12 50 21 is_stmt 0 view .LVU3592
 12827 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12828              		.loc 12 48 11 view .LVU3593
 12829 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12830              		.loc 12 49 9 is_stmt 1 view .LVU3594
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12831              		.loc 12 49 15 is_stmt 0 view .LVU3595
 12832 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 384


 12833              		.loc 12 50 9 is_stmt 1 view .LVU3596
 12834              	.LVL836:
  50:envFollow.h   ****     }  
 12835              		.loc 12 50 9 is_stmt 0 view .LVU3597
 12836              	.LBE2484:
 12837              	.LBE2486:
 12838              	.LBE2488:
  51:Veno-Echo.cpp **** 
 12839              		.loc 20 51 18 view .LVU3598
 12840 0088 FFF7FEFF 		bl	__aeabi_atexit
 12841              	.LVL837:
 12842              	.LBB2489:
 12843              	.LBI2489:
  43:envFollow.h   ****     {
 12844              		.loc 12 43 5 is_stmt 1 view .LVU3599
 12845              	.LBB2490:
 12846              	.LBB2491:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12847              		.loc 12 45 9 view .LVU3600
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12848              		.loc 12 45 13 is_stmt 0 view .LVU3601
 12849 008c 8648     		ldr	r0, .L699+68
 12850              	.LBE2491:
 12851              	.LBE2490:
 12852              	.LBE2489:
  53:Veno-Echo.cpp **** 
 12853              		.loc 20 53 16 view .LVU3602
 12854 008e DFF8E082 		ldr	r8, .L699+268
  51:Veno-Echo.cpp **** 
 12855              		.loc 20 51 27 view .LVU3603
 12856 0092 2246     		mov	r2, r4
 12857 0094 8349     		ldr	r1, .L699+64
 12858              	.LBB2494:
 12859              	.LBB2493:
 12860              	.LBB2492:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12861              		.loc 12 45 13 view .LVU3604
 12862 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12863              		.loc 12 46 9 is_stmt 1 view .LVU3605
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12864              		.loc 12 46 20 is_stmt 0 view .LVU3606
 12865 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12866              		.loc 12 47 9 is_stmt 1 view .LVU3607
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12867              		.loc 12 47 17 is_stmt 0 view .LVU3608
 12868 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12869              		.loc 12 48 9 is_stmt 1 view .LVU3609
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12870              		.loc 12 48 11 is_stmt 0 view .LVU3610
 12871 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12872              		.loc 12 49 9 is_stmt 1 view .LVU3611
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12873              		.loc 12 49 15 is_stmt 0 view .LVU3612
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 385


 12874 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12875              		.loc 12 50 9 is_stmt 1 view .LVU3613
  50:envFollow.h   ****     }  
 12876              		.loc 12 50 21 is_stmt 0 view .LVU3614
 12877 00a0 8560     		str	r5, [r0, #8]	@ float
 12878              	.LVL838:
  50:envFollow.h   ****     }  
 12879              		.loc 12 50 21 view .LVU3615
 12880              	.LBE2492:
 12881              	.LBE2493:
 12882              	.LBE2494:
  51:Veno-Echo.cpp **** 
 12883              		.loc 20 51 27 view .LVU3616
 12884 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12885              	.LVL839:
 12886              	.LBB2495:
 12887              	.LBI2495:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12888              		.loc 11 14 5 is_stmt 1 view .LVU3617
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12889              		.loc 11 14 5 is_stmt 0 view .LVU3618
 12890              	.LBE2495:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12891              		.loc 20 56 76 view .LVU3619
 12892 00a6 814F     		ldr	r7, .L699+72
  53:Veno-Echo.cpp **** 
 12893              		.loc 20 53 16 view .LVU3620
 12894 00a8 2246     		mov	r2, r4
 12895 00aa 4146     		mov	r1, r8
 12896 00ac 8048     		ldr	r0, .L699+76
 12897 00ae FFF7FEFF 		bl	__aeabi_atexit
 12898              	.LVL840:
 12899              	.LBB2496:
 12900              	.LBI2496:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12901              		.loc 11 14 5 is_stmt 1 view .LVU3621
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12902              		.loc 11 14 5 is_stmt 0 view .LVU3622
 12903              	.LBE2496:
  53:Veno-Echo.cpp **** 
 12904              		.loc 20 53 29 view .LVU3623
 12905 00b2 2246     		mov	r2, r4
 12906 00b4 4146     		mov	r1, r8
 12907 00b6 7F48     		ldr	r0, .L699+80
 12908 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12909              	.LVL841:
 12910              	.LBB2497:
 12911              	.LBI2497:
  48:delayline_multitap.h ****     {
 12912              		.loc 18 48 5 is_stmt 1 view .LVU3624
  48:delayline_multitap.h ****     {
 12913              		.loc 18 48 5 is_stmt 0 view .LVU3625
 12914              	.LBE2497:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12915              		.loc 20 59 80 view .LVU3626
 12916 00bc 7E4D     		ldr	r5, .L699+84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 386


  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12917              		.loc 20 56 76 view .LVU3627
 12918 00be 2246     		mov	r2, r4
 12919 00c0 3946     		mov	r1, r7
 12920 00c2 7E48     		ldr	r0, .L699+88
 12921 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12922              	.LVL842:
 12923              	.LBB2498:
 12924              	.LBI2498:
  48:delayline_multitap.h ****     {
 12925              		.loc 18 48 5 is_stmt 1 view .LVU3628
  48:delayline_multitap.h ****     {
 12926              		.loc 18 48 5 is_stmt 0 view .LVU3629
 12927              	.LBE2498:
  57:Veno-Echo.cpp **** 
 12928              		.loc 20 57 76 view .LVU3630
 12929 00c8 2246     		mov	r2, r4
 12930 00ca 3946     		mov	r1, r7
 12931 00cc 7C48     		ldr	r0, .L699+92
 12932 00ce FFF7FEFF 		bl	__aeabi_atexit
 12933              	.LVL843:
 12934              	.LBB2499:
 12935              	.LBI2499:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12936              		.loc 19 38 5 is_stmt 1 view .LVU3631
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12937              		.loc 19 38 5 is_stmt 0 view .LVU3632
 12938              	.LBE2499:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12939              		.loc 20 98 12 view .LVU3633
 12940 00d2 7C4F     		ldr	r7, .L699+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12941              		.loc 20 59 80 view .LVU3634
 12942 00d4 2246     		mov	r2, r4
 12943 00d6 2946     		mov	r1, r5
 12944 00d8 7B48     		ldr	r0, .L699+100
 12945 00da FFF7FEFF 		bl	__aeabi_atexit
 12946              	.LVL844:
 12947              	.LBB2500:
 12948              	.LBI2500:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12949              		.loc 19 38 5 is_stmt 1 view .LVU3635
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12950              		.loc 19 38 5 is_stmt 0 view .LVU3636
 12951              	.LBE2500:
  60:Veno-Echo.cpp **** 
 12952              		.loc 20 60 80 view .LVU3637
 12953 00de 2246     		mov	r2, r4
 12954 00e0 2946     		mov	r1, r5
 12955 00e2 7A48     		ldr	r0, .L699+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12956              		.loc 20 102 11 view .LVU3638
 12957 00e4 7A4D     		ldr	r5, .L699+108
  60:Veno-Echo.cpp **** 
 12958              		.loc 20 60 80 view .LVU3639
 12959 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12960              	.LVL845:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 387


 12961              	.LBB2501:
 12962              	.LBI2501:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12963              		.loc 17 49 1 is_stmt 1 view .LVU3640
 12964              	.LBB2502:
 12965              	.LBB2503:
 12966              	.LBI2503:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12967              		.loc 14 47 1 view .LVU3641
 12968              	.LBB2504:
 12969              	.LBB2505:
 12970              	.LBI2505:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12971              		.loc 16 24 5 view .LVU3642
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12972              		.loc 16 24 5 is_stmt 0 view .LVU3643
 12973              	.LBE2505:
 12974              	.LBB2506:
 12975              	.LBI2506:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12976              		.loc 15 15 5 is_stmt 1 view .LVU3644
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12977              		.loc 15 15 5 is_stmt 0 view .LVU3645
 12978              	.LBE2506:
 12979              	.LBE2504:
 12980              	.LBE2503:
 12981              	.LBE2502:
 12982              	.LBE2501:
 12983              	.LBE2569:
 12984              	.LBE2573:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12985              		.loc 17 49 14 is_stmt 1 view .LVU3646
  49:DelayMulti.h  **** ~DelayMulti() {}
 12986              		.loc 17 49 14 view .LVU3647
 12987              	.LBB2574:
 12988              	.LBB2570:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12989              		.loc 20 98 12 is_stmt 0 view .LVU3648
 12990 00ea 2246     		mov	r2, r4
 12991 00ec 3946     		mov	r1, r7
 12992 00ee 7948     		ldr	r0, .L699+112
 12993 00f0 FFF7FEFF 		bl	__aeabi_atexit
 12994              	.LVL846:
 12995              	.LBB2507:
 12996              	.LBI2507:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12997              		.loc 17 49 1 is_stmt 1 view .LVU3649
 12998              	.LBB2508:
 12999              	.LBB2509:
 13000              	.LBI2509:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13001              		.loc 14 47 1 view .LVU3650
 13002              	.LBB2510:
 13003              	.LBB2511:
 13004              	.LBI2511:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13005              		.loc 16 24 5 view .LVU3651
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 388


  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13006              		.loc 16 24 5 is_stmt 0 view .LVU3652
 13007              	.LBE2511:
 13008              	.LBB2512:
 13009              	.LBI2512:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13010              		.loc 15 15 5 is_stmt 1 view .LVU3653
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13011              		.loc 15 15 5 is_stmt 0 view .LVU3654
 13012              	.LBE2512:
 13013              	.LBE2510:
 13014              	.LBE2509:
 13015              	.LBE2508:
 13016              	.LBE2507:
 13017              	.LBE2570:
 13018              	.LBE2574:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13019              		.loc 17 49 14 is_stmt 1 view .LVU3655
  49:DelayMulti.h  **** ~DelayMulti() {}
 13020              		.loc 17 49 14 view .LVU3656
 13021              	.LBB2575:
 13022              	.LBB2571:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13023              		.loc 20 98 19 is_stmt 0 view .LVU3657
 13024 00f4 2246     		mov	r2, r4
 13025 00f6 3946     		mov	r1, r7
 13026 00f8 7748     		ldr	r0, .L699+116
 13027 00fa FFF7FEFF 		bl	__aeabi_atexit
 13028              	.LVL847:
 13029              	.LBB2513:
 13030              	.LBI2513:
  78:LEDs.h        ****     ~ButtonLED() {}
 13031              		.loc 14 78 5 is_stmt 1 view .LVU3658
 13032              	.LBB2514:
 13033              	.LBB2515:
 13034              	.LBI2515:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13035              		.loc 1 40 5 view .LVU3659
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13036              		.loc 1 40 5 is_stmt 0 view .LVU3660
 13037              	.LBE2515:
 13038              	.LBB2516:
 13039              	.LBI2516:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13040              		.loc 16 24 5 is_stmt 1 view .LVU3661
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13041              		.loc 16 24 5 is_stmt 0 view .LVU3662
 13042              	.LBE2516:
 13043              	.LBE2514:
 13044              	.LBE2513:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13045              		.loc 20 102 11 view .LVU3663
 13046 00fe 2246     		mov	r2, r4
 13047 0100 2946     		mov	r1, r5
 13048 0102 7648     		ldr	r0, .L699+120
 13049 0104 FFF7FEFF 		bl	__aeabi_atexit
 13050              	.LVL848:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 389


 13051              	.LBB2517:
 13052              	.LBI2517:
  78:LEDs.h        ****     ~ButtonLED() {}
 13053              		.loc 14 78 5 is_stmt 1 view .LVU3664
 13054              	.LBB2518:
 13055              	.LBB2519:
 13056              	.LBI2519:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13057              		.loc 1 40 5 view .LVU3665
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13058              		.loc 1 40 5 is_stmt 0 view .LVU3666
 13059              	.LBE2519:
 13060              	.LBB2520:
 13061              	.LBI2520:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13062              		.loc 16 24 5 is_stmt 1 view .LVU3667
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13063              		.loc 16 24 5 is_stmt 0 view .LVU3668
 13064              	.LBE2520:
 13065              	.LBE2518:
 13066              	.LBE2517:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13067              		.loc 20 102 18 view .LVU3669
 13068 0108 2246     		mov	r2, r4
 13069 010a 2946     		mov	r1, r5
 13070 010c 7448     		ldr	r0, .L699+124
 13071 010e FFF7FEFF 		bl	__aeabi_atexit
 13072              	.LVL849:
 13073              	.LBB2521:
 13074              	.LBI2521:
  78:LEDs.h        ****     ~ButtonLED() {}
 13075              		.loc 14 78 5 is_stmt 1 view .LVU3670
 13076              	.LBB2522:
 13077              	.LBB2523:
 13078              	.LBI2523:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13079              		.loc 1 40 5 view .LVU3671
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13080              		.loc 1 40 5 is_stmt 0 view .LVU3672
 13081              	.LBE2523:
 13082              	.LBB2524:
 13083              	.LBI2524:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13084              		.loc 16 24 5 is_stmt 1 view .LVU3673
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13085              		.loc 16 24 5 is_stmt 0 view .LVU3674
 13086              	.LBE2524:
 13087              	.LBE2522:
 13088              	.LBE2521:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13089              		.loc 20 102 25 view .LVU3675
 13090 0112 2246     		mov	r2, r4
 13091 0114 2946     		mov	r1, r5
 13092 0116 7348     		ldr	r0, .L699+128
 13093 0118 FFF7FEFF 		bl	__aeabi_atexit
 13094              	.LVL850:
 13095              	.LBB2525:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 390


 13096              	.LBI2525:
  78:LEDs.h        ****     ~ButtonLED() {}
 13097              		.loc 14 78 5 is_stmt 1 view .LVU3676
 13098              	.LBB2526:
 13099              	.LBB2527:
 13100              	.LBI2527:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13101              		.loc 1 40 5 view .LVU3677
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13102              		.loc 1 40 5 is_stmt 0 view .LVU3678
 13103              	.LBE2527:
 13104              	.LBB2528:
 13105              	.LBI2528:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13106              		.loc 16 24 5 is_stmt 1 view .LVU3679
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13107              		.loc 16 24 5 is_stmt 0 view .LVU3680
 13108              	.LBE2528:
 13109              	.LBE2526:
 13110              	.LBE2525:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13111              		.loc 20 102 34 view .LVU3681
 13112 011c 2246     		mov	r2, r4
 13113 011e 2946     		mov	r1, r5
 13114 0120 7148     		ldr	r0, .L699+132
 13115 0122 FFF7FEFF 		bl	__aeabi_atexit
 13116              	.LVL851:
 13117              	.LBB2529:
 13118              	.LBI2529:
  78:LEDs.h        ****     ~ButtonLED() {}
 13119              		.loc 14 78 5 is_stmt 1 view .LVU3682
 13120              	.LBB2530:
 13121              	.LBB2531:
 13122              	.LBI2531:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13123              		.loc 1 40 5 view .LVU3683
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13124              		.loc 1 40 5 is_stmt 0 view .LVU3684
 13125              	.LBE2531:
 13126              	.LBB2532:
 13127              	.LBI2532:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13128              		.loc 16 24 5 is_stmt 1 view .LVU3685
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13129              		.loc 16 24 5 is_stmt 0 view .LVU3686
 13130              	.LBE2532:
 13131              	.LBE2530:
 13132              	.LBE2529:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13133              		.loc 20 150 13 view .LVU3687
 13134 0126 714F     		ldr	r7, .L699+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13135              		.loc 20 102 44 view .LVU3688
 13136 0128 2246     		mov	r2, r4
 13137 012a 2946     		mov	r1, r5
 13138 012c 7048     		ldr	r0, .L699+140
 13139 012e FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 391


 13140              	.LVL852:
 13141              	.LBB2533:
 13142              	.LBI2533:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13143              		.loc 14 47 1 is_stmt 1 view .LVU3689
 13144              	.LBB2534:
 13145              	.LBB2535:
 13146              	.LBI2535:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13147              		.loc 16 24 5 view .LVU3690
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13148              		.loc 16 24 5 is_stmt 0 view .LVU3691
 13149              	.LBE2535:
 13150              	.LBB2536:
 13151              	.LBI2536:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13152              		.loc 15 15 5 is_stmt 1 view .LVU3692
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13153              		.loc 15 15 5 is_stmt 0 view .LVU3693
 13154              	.LBE2536:
 13155              	.LBE2534:
 13156              	.LBE2533:
 103:Veno-Echo.cpp **** 
 13157              		.loc 20 103 10 view .LVU3694
 13158 0132 2246     		mov	r2, r4
 13159 0134 6F49     		ldr	r1, .L699+144
 13160 0136 7048     		ldr	r0, .L699+148
 13161 0138 FFF7FEFF 		bl	__aeabi_atexit
 13162              	.LVL853:
 13163              	.LBB2537:
 13164              	.LBI2537:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13165              		.loc 7 38 5 is_stmt 1 view .LVU3695
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13166              		.loc 7 38 5 is_stmt 0 view .LVU3696
 13167              	.LBE2537:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13168              		.loc 20 150 13 view .LVU3697
 13169 013c 2246     		mov	r2, r4
 13170 013e 3946     		mov	r1, r7
 13171 0140 6E48     		ldr	r0, .L699+152
 13172 0142 FFF7FEFF 		bl	__aeabi_atexit
 13173              	.LVL854:
 13174              	.LBB2538:
 13175              	.LBI2538:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13176              		.loc 7 38 5 is_stmt 1 view .LVU3698
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13177              		.loc 7 38 5 is_stmt 0 view .LVU3699
 13178              	.LBE2538:
 151:Veno-Echo.cpp **** 
 13179              		.loc 20 151 13 view .LVU3700
 13180 0146 2246     		mov	r2, r4
 13181 0148 3946     		mov	r1, r7
 13182 014a 6D48     		ldr	r0, .L699+156
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13183              		.loc 20 156 18 view .LVU3701
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 392


 13184 014c 6D4D     		ldr	r5, .L699+160
 151:Veno-Echo.cpp **** 
 13185              		.loc 20 151 13 view .LVU3702
 13186 014e FFF7FEFF 		bl	__aeabi_atexit
 13187              	.LVL855:
 13188              	.LBB2539:
 13189              	.LBI2539:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13190              		.loc 7 38 5 is_stmt 1 view .LVU3703
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13191              		.loc 7 38 5 is_stmt 0 view .LVU3704
 13192              	.LBE2539:
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 13193              		.loc 20 153 13 view .LVU3705
 13194 0152 2246     		mov	r2, r4
 13195 0154 3946     		mov	r1, r7
 13196 0156 6C48     		ldr	r0, .L699+164
 13197 0158 FFF7FEFF 		bl	__aeabi_atexit
 13198              	.LVL856:
 13199              	.LBB2540:
 13200              	.LBI2540:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13201              		.loc 7 38 5 is_stmt 1 view .LVU3706
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13202              		.loc 7 38 5 is_stmt 0 view .LVU3707
 13203              	.LBE2540:
 154:Veno-Echo.cpp **** 
 13204              		.loc 20 154 13 view .LVU3708
 13205 015c 2246     		mov	r2, r4
 13206 015e 3946     		mov	r1, r7
 13207 0160 6A48     		ldr	r0, .L699+168
 13208 0162 FFF7FEFF 		bl	__aeabi_atexit
 13209              	.LVL857:
 13210              	.LBB2541:
 13211              	.LBI2541:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13212              		.loc 10 36 5 is_stmt 1 view .LVU3709
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13213              		.loc 10 36 5 is_stmt 0 view .LVU3710
 13214              	.LBE2541:
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13215              		.loc 20 156 18 view .LVU3711
 13216 0166 2246     		mov	r2, r4
 13217 0168 2946     		mov	r1, r5
 13218 016a 6948     		ldr	r0, .L699+172
 13219 016c FFF7FEFF 		bl	__aeabi_atexit
 13220              	.LVL858:
 13221              	.LBB2542:
 13222              	.LBI2542:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13223              		.loc 10 36 5 is_stmt 1 view .LVU3712
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13224              		.loc 10 36 5 is_stmt 0 view .LVU3713
 13225              	.LBE2542:
 157:Veno-Echo.cpp **** 
 13226              		.loc 20 157 18 view .LVU3714
 13227 0170 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 393


 13228 0172 2946     		mov	r1, r5
 13229 0174 6748     		ldr	r0, .L699+176
 13230 0176 FFF7FEFF 		bl	__aeabi_atexit
 13231              	.LVL859:
 13232              	.LBB2543:
 13233              	.LBI2543:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13234              		.loc 10 36 5 is_stmt 1 view .LVU3715
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13235              		.loc 10 36 5 is_stmt 0 view .LVU3716
 13236              	.LBE2543:
 159:Veno-Echo.cpp **** 
 13237              		.loc 20 159 18 view .LVU3717
 13238 017a 2246     		mov	r2, r4
 13239 017c 2946     		mov	r1, r5
 13240 017e 6648     		ldr	r0, .L699+180
 13241 0180 FFF7FEFF 		bl	__aeabi_atexit
 13242              	.LVL860:
 13243              	.LBB2544:
 13244              	.LBI2544:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13245              		.loc 10 36 5 is_stmt 1 view .LVU3718
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13246              		.loc 10 36 5 is_stmt 0 view .LVU3719
 13247              	.LBE2544:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13248              		.loc 20 162 18 view .LVU3720
 13249 0184 2246     		mov	r2, r4
 13250 0186 2946     		mov	r1, r5
 13251 0188 6448     		ldr	r0, .L699+184
 13252 018a FFF7FEFF 		bl	__aeabi_atexit
 13253              	.LVL861:
 13254              	.LBB2545:
 13255              	.LBI2545:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13256              		.loc 10 36 5 is_stmt 1 view .LVU3721
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13257              		.loc 10 36 5 is_stmt 0 view .LVU3722
 13258              	.LBE2545:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13259              		.loc 20 163 18 view .LVU3723
 13260 018e 2246     		mov	r2, r4
 13261 0190 2946     		mov	r1, r5
 13262 0192 6348     		ldr	r0, .L699+188
 13263 0194 FFF7FEFF 		bl	__aeabi_atexit
 13264              	.LVL862:
 13265              	.LBB2546:
 13266              	.LBI2546:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13267              		.loc 10 36 5 is_stmt 1 view .LVU3724
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13268              		.loc 10 36 5 is_stmt 0 view .LVU3725
 13269              	.LBE2546:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13270              		.loc 20 164 18 view .LVU3726
 13271 0198 2246     		mov	r2, r4
 13272 019a 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 394


 13273 019c 6148     		ldr	r0, .L699+192
 13274 019e FFF7FEFF 		bl	__aeabi_atexit
 13275              	.LVL863:
 13276              	.LBB2547:
 13277              	.LBI2547:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13278              		.loc 10 36 5 is_stmt 1 view .LVU3727
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13279              		.loc 10 36 5 is_stmt 0 view .LVU3728
 13280              	.LBE2547:
 165:Veno-Echo.cpp **** 
 13281              		.loc 20 165 18 view .LVU3729
 13282 01a2 2246     		mov	r2, r4
 13283 01a4 2946     		mov	r1, r5
 13284 01a6 6048     		ldr	r0, .L699+196
 13285 01a8 FFF7FEFF 		bl	__aeabi_atexit
 13286              	.LVL864:
 13287              	.LBB2548:
 13288              	.LBI2548:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13289              		.loc 10 36 5 is_stmt 1 view .LVU3730
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13290              		.loc 10 36 5 is_stmt 0 view .LVU3731
 13291              	.LBE2548:
 168:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13292              		.loc 20 168 18 view .LVU3732
 13293 01ac 2246     		mov	r2, r4
 13294 01ae 2946     		mov	r1, r5
 13295 01b0 5E48     		ldr	r0, .L699+200
 13296 01b2 FFF7FEFF 		bl	__aeabi_atexit
 13297              	.LVL865:
 13298              	.LBB2549:
 13299              	.LBI2549:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13300              		.loc 10 36 5 is_stmt 1 view .LVU3733
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13301              		.loc 10 36 5 is_stmt 0 view .LVU3734
 13302              	.LBE2549:
 169:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13303              		.loc 20 169 18 view .LVU3735
 13304 01b6 2246     		mov	r2, r4
 13305 01b8 2946     		mov	r1, r5
 13306 01ba 5D48     		ldr	r0, .L699+204
 13307 01bc FFF7FEFF 		bl	__aeabi_atexit
 13308              	.LVL866:
 13309              	.LBB2550:
 13310              	.LBI2550:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13311              		.loc 10 36 5 is_stmt 1 view .LVU3736
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13312              		.loc 10 36 5 is_stmt 0 view .LVU3737
 13313              	.LBE2550:
 170:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13314              		.loc 20 170 18 view .LVU3738
 13315 01c0 2246     		mov	r2, r4
 13316 01c2 2946     		mov	r1, r5
 13317 01c4 5B48     		ldr	r0, .L699+208
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 395


 13318 01c6 FFF7FEFF 		bl	__aeabi_atexit
 13319              	.LVL867:
 13320              	.LBB2551:
 13321              	.LBI2551:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13322              		.loc 10 36 5 is_stmt 1 view .LVU3739
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13323              		.loc 10 36 5 is_stmt 0 view .LVU3740
 13324              	.LBE2551:
 171:Veno-Echo.cpp **** 
 13325              		.loc 20 171 18 view .LVU3741
 13326 01ca 2246     		mov	r2, r4
 13327 01cc 2946     		mov	r1, r5
 13328 01ce 5A48     		ldr	r0, .L699+212
 13329 01d0 FFF7FEFF 		bl	__aeabi_atexit
 13330              	.LVL868:
 13331              	.LBB2552:
 13332              	.LBI2552:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13333              		.loc 10 36 5 is_stmt 1 view .LVU3742
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13334              		.loc 10 36 5 is_stmt 0 view .LVU3743
 13335              	.LBE2552:
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13336              		.loc 20 174 18 view .LVU3744
 13337 01d4 2246     		mov	r2, r4
 13338 01d6 2946     		mov	r1, r5
 13339 01d8 5848     		ldr	r0, .L699+216
 13340 01da FFF7FEFF 		bl	__aeabi_atexit
 13341              	.LVL869:
 13342              	.LBB2553:
 13343              	.LBI2553:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13344              		.loc 10 36 5 is_stmt 1 view .LVU3745
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13345              		.loc 10 36 5 is_stmt 0 view .LVU3746
 13346              	.LBE2553:
 175:Veno-Echo.cpp **** 
 13347              		.loc 20 175 18 view .LVU3747
 13348 01de 2246     		mov	r2, r4
 13349 01e0 2946     		mov	r1, r5
 13350 01e2 5748     		ldr	r0, .L699+220
 13351 01e4 FFF7FEFF 		bl	__aeabi_atexit
 13352              	.LVL870:
 13353              	.LBB2554:
 13354              	.LBI2554:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13355              		.loc 10 36 5 is_stmt 1 view .LVU3748
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13356              		.loc 10 36 5 is_stmt 0 view .LVU3749
 13357              	.LBE2554:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13358              		.loc 20 181 8 view .LVU3750
 13359 01e8 564F     		ldr	r7, .L699+224
 177:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13360              		.loc 20 177 18 view .LVU3751
 13361 01ea 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 396


 13362 01ec 2946     		mov	r1, r5
 13363 01ee 5648     		ldr	r0, .L699+228
 13364 01f0 FFF7FEFF 		bl	__aeabi_atexit
 13365              	.LVL871:
 13366              	.LBB2555:
 13367              	.LBI2555:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13368              		.loc 10 36 5 is_stmt 1 view .LVU3752
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13369              		.loc 10 36 5 is_stmt 0 view .LVU3753
 13370              	.LBE2555:
 178:Veno-Echo.cpp **** 
 13371              		.loc 20 178 18 view .LVU3754
 13372 01f4 2246     		mov	r2, r4
 13373 01f6 2946     		mov	r1, r5
 13374 01f8 5448     		ldr	r0, .L699+232
 13375 01fa FFF7FEFF 		bl	__aeabi_atexit
 13376              	.LVL872:
 13377              	.LBB2556:
 13378              	.LBI2556:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13379              		.loc 1 40 5 is_stmt 1 view .LVU3755
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13380              		.loc 1 40 5 is_stmt 0 view .LVU3756
 13381              	.LBE2556:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13382              		.loc 20 181 8 view .LVU3757
 13383 01fe 2246     		mov	r2, r4
 13384 0200 3946     		mov	r1, r7
 13385 0202 5348     		ldr	r0, .L699+236
 13386 0204 FFF7FEFF 		bl	__aeabi_atexit
 13387              	.LVL873:
 13388              	.LBB2557:
 13389              	.LBI2557:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13390              		.loc 1 40 5 is_stmt 1 view .LVU3758
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13391              		.loc 1 40 5 is_stmt 0 view .LVU3759
 13392              	.LBE2557:
 182:Veno-Echo.cpp **** 
 13393              		.loc 20 182 8 view .LVU3760
 13394 0208 2246     		mov	r2, r4
 13395 020a 3946     		mov	r1, r7
 13396 020c 5148     		ldr	r0, .L699+240
 13397 020e FFF7FEFF 		bl	__aeabi_atexit
 13398              	.LVL874:
 13399              	.LBB2558:
 13400              	.LBI2558:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13401              		.loc 1 40 5 is_stmt 1 view .LVU3761
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13402              		.loc 1 40 5 is_stmt 0 view .LVU3762
 13403              	.LBE2558:
 185:Veno-Echo.cpp **** Switch ClockIn;
 13404              		.loc 20 185 8 view .LVU3763
 13405 0212 2246     		mov	r2, r4
 13406 0214 3946     		mov	r1, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 397


 13407 0216 5048     		ldr	r0, .L699+244
 13408 0218 FFF7FEFF 		bl	__aeabi_atexit
 13409              	.LVL875:
 13410              	.LBB2559:
 13411              	.LBI2559:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13412              		.loc 1 40 5 is_stmt 1 view .LVU3764
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13413              		.loc 1 40 5 is_stmt 0 view .LVU3765
 13414              	.LBE2559:
 186:Veno-Echo.cpp **** 
 13415              		.loc 20 186 8 view .LVU3766
 13416 021c 2246     		mov	r2, r4
 13417 021e 3946     		mov	r1, r7
 13418 0220 4E48     		ldr	r0, .L699+248
 13419 0222 FFF7FEFF 		bl	__aeabi_atexit
 13420              	.LVL876:
 13421              	.LBB2560:
 13422              	.LBI2560:
  44:taptempo.h    ****     {
 13423              		.loc 13 44 5 is_stmt 1 view .LVU3767
 13424              	.LBB2561:
 13425              	.LBB2562:
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13426              		.loc 13 46 9 view .LVU3768
  54:taptempo.h    ****         clockLength_ = 0;
 13427              		.loc 13 54 19 is_stmt 0 view .LVU3769
 13428 0226 4FF07E55 		mov	r5, #1065353216
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13429              		.loc 13 46 18 view .LVU3770
 13430 022a 4D48     		ldr	r0, .L699+252
  57:taptempo.h    ****     }
 13431              		.loc 13 57 22 view .LVU3771
 13432 022c 42F21073 		movw	r3, #10000
  47:taptempo.h    ****         maxtap_ = 2000000;
 13433              		.loc 13 47 24 view .LVU3772
 13434 0230 4C49     		ldr	r1, .L699+256
 13435              	.LBE2562:
 13436              	.LBE2561:
 13437              	.LBE2560:
 189:Veno-Echo.cpp **** 
 13438              		.loc 20 189 10 view .LVU3773
 13439 0232 2246     		mov	r2, r4
 13440              	.LBB2567:
 13441              	.LBB2565:
 13442              	.LBB2563:
  48:taptempo.h    ****         mintap_ = 80000;
 13443              		.loc 13 48 17 view .LVU3774
 13444 0234 DFF83CE1 		ldr	lr, .L699+272
  51:taptempo.h    ****         lastTime_ = 0;
 13445              		.loc 13 51 16 view .LVU3775
 13446 0238 4B4F     		ldr	r7, .L699+260
  49:taptempo.h    ****         lastTapLength_ = 0;
 13447              		.loc 13 49 17 view .LVU3776
 13448 023a DFF83CC1 		ldr	ip, .L699+276
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13449              		.loc 13 46 18 view .LVU3777
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 398


 13450 023e 80F82460 		strb	r6, [r0, #36]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13451              		.loc 13 47 9 is_stmt 1 view .LVU3778
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 13452              		.loc 13 53 22 is_stmt 0 view .LVU3779
 13453 0242 8660     		str	r6, [r0, #8]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13454              		.loc 13 47 24 view .LVU3780
 13455 0244 8162     		str	r1, [r0, #40]	@ float
  48:taptempo.h    ****         mintap_ = 80000;
 13456              		.loc 13 48 9 is_stmt 1 view .LVU3781
  51:taptempo.h    ****         lastTime_ = 0;
 13457              		.loc 13 51 16 is_stmt 0 view .LVU3782
 13458 0246 C762     		str	r7, [r0, #44]	@ float
  54:taptempo.h    ****         clockLength_ = 0;
 13459              		.loc 13 54 19 view .LVU3783
 13460 0248 0563     		str	r5, [r0, #48]	@ float
 13461              	.LBE2563:
 13462              	.LBE2565:
 13463              	.LBE2567:
 189:Veno-Echo.cpp **** 
 13464              		.loc 20 189 10 view .LVU3784
 13465 024a 4849     		ldr	r1, .L699+264
 13466              	.LBB2568:
 13467              	.LBB2566:
 13468              	.LBB2564:
  57:taptempo.h    ****     }
 13469              		.loc 13 57 22 view .LVU3785
 13470 024c 0362     		str	r3, [r0, #32]
  52:taptempo.h    ****         currentTime_ = 0;
 13471              		.loc 13 52 19 view .LVU3786
 13472 024e C0E90366 		strd	r6, r6, [r0, #12]
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13473              		.loc 13 56 26 view .LVU3787
 13474 0252 C0E90666 		strd	r6, r6, [r0, #24]
  49:taptempo.h    ****         lastTapLength_ = 0;
 13475              		.loc 13 49 17 view .LVU3788
 13476 0256 C0E900CE 		strd	ip, lr, [r0]
  50:taptempo.h    ****         tempo_ = 500000.0f;
 13477              		.loc 13 50 9 is_stmt 1 view .LVU3789
  51:taptempo.h    ****         lastTime_ = 0;
 13478              		.loc 13 51 9 view .LVU3790
  52:taptempo.h    ****         currentTime_ = 0;
 13479              		.loc 13 52 9 view .LVU3791
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 13480              		.loc 13 53 9 view .LVU3792
  54:taptempo.h    ****         clockLength_ = 0;
 13481              		.loc 13 54 9 view .LVU3793
  55:taptempo.h    ****         lastClockLength_ = 0;
 13482              		.loc 13 55 9 view .LVU3794
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13483              		.loc 13 56 9 view .LVU3795
  57:taptempo.h    ****     }
 13484              		.loc 13 57 9 view .LVU3796
 13485              	.LVL877:
  57:taptempo.h    ****     }
 13486              		.loc 13 57 9 is_stmt 0 view .LVU3797
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 399


 13487              	.LBE2564:
 13488              	.LBE2566:
 13489              	.LBE2568:
 13490              	.LBE2571:
 13491              	.LBE2575:
 13492              		.loc 20 2150 1 view .LVU3798
 13493 025a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13494              		.cfi_restore 14
 13495              		.cfi_restore 8
 13496              		.cfi_restore 7
 13497              		.cfi_restore 6
 13498              		.cfi_restore 5
 13499              		.cfi_restore 4
 13500              		.cfi_def_cfa_offset 0
 13501              	.LBB2576:
 13502              	.LBB2572:
 189:Veno-Echo.cpp **** 
 13503              		.loc 20 189 10 view .LVU3799
 13504 025e FFF7FEBF 		b	__aeabi_atexit
 13505              	.LVL878:
 13506              	.L700:
 13507 0262 00BF     		.align	2
 13508              	.L699:
 13509 0264 00000000 		.word	.LANCHOR4
 13510 0268 00000000 		.word	__dso_handle
 13511 026c 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13512 0270 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13513 0274 00000000 		.word	.LANCHOR47
 13514 0278 00000000 		.word	.LANCHOR48
 13515 027c 00000000 		.word	.LANCHOR35
 13516 0280 00000000 		.word	.LANCHOR36
 13517 0284 00000000 		.word	.LANCHOR49
 13518 0288 00000000 		.word	.LANCHOR50
 13519 028c 00000000 		.word	.LANCHOR37
 13520 0290 00000000 		.word	.LANCHOR38
 13521 0294 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13522 0298 00000000 		.word	.LANCHOR76
 13523 029c 17B7D138 		.word	953267991
 13524 02a0 00000000 		.word	.LANCHOR130
 13525 02a4 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13526 02a8 00000000 		.word	.LANCHOR131
 13527 02ac 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13528 02b0 00000000 		.word	.LANCHOR106
 13529 02b4 00000000 		.word	.LANCHOR107
 13530 02b8 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13531 02bc 00000000 		.word	delMemsL
 13532 02c0 00000000 		.word	delMemsR
 13533 02c4 00000000 		.word	_ZN10DelayMultiD1Ev
 13534 02c8 00000000 		.word	delMemsL_REV
 13535 02cc 00000000 		.word	delMemsR_REV
 13536 02d0 00000000 		.word	_ZN9ButtonLEDD1Ev
 13537 02d4 00000000 		.word	.LANCHOR0
 13538 02d8 00000000 		.word	.LANCHOR1
 13539 02dc 00000000 		.word	.LANCHOR94
 13540 02e0 00000000 		.word	.LANCHOR95
 13541 02e4 00000000 		.word	.LANCHOR92
 13542 02e8 00000000 		.word	.LANCHOR93
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 400


 13543 02ec 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13544 02f0 00000000 		.word	.LANCHOR96
 13545 02f4 00000000 		.word	_ZN8TempoLEDD1Ev
 13546 02f8 00000000 		.word	.LANCHOR89
 13547 02fc 00000000 		.word	.LANCHOR100
 13548 0300 00000000 		.word	.LANCHOR101
 13549 0304 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13550 0308 00000000 		.word	.LANCHOR102
 13551 030c 00000000 		.word	.LANCHOR103
 13552 0310 00000000 		.word	.LANCHOR104
 13553 0314 00000000 		.word	.LANCHOR105
 13554 0318 00000000 		.word	.LANCHOR65
 13555 031c 00000000 		.word	.LANCHOR118
 13556 0320 00000000 		.word	.LANCHOR119
 13557 0324 00000000 		.word	.LANCHOR116
 13558 0328 00000000 		.word	.LANCHOR117
 13559 032c 00000000 		.word	.LANCHOR122
 13560 0330 00000000 		.word	.LANCHOR123
 13561 0334 00000000 		.word	.LANCHOR120
 13562 0338 00000000 		.word	.LANCHOR121
 13563 033c 00000000 		.word	.LANCHOR124
 13564 0340 00000000 		.word	.LANCHOR125
 13565 0344 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13566 0348 00000000 		.word	.LANCHOR126
 13567 034c 00000000 		.word	.LANCHOR127
 13568 0350 00000000 		.word	.LANCHOR97
 13569 0354 00000000 		.word	.LANCHOR98
 13570 0358 00000000 		.word	.LANCHOR99
 13571 035c 00000000 		.word	.LANCHOR88
 13572 0360 00000000 		.word	.LANCHOR26
 13573 0364 0000A03F 		.word	1067450368
 13574 0368 0024F448 		.word	1223959552
 13575 036c 00000000 		.word	_ZN8TaptempoD1Ev
 13576 0370 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 13577 0374 80841E00 		.word	2000000
 13578 0378 80380100 		.word	80000
 13579              	.LBE2572:
 13580              	.LBE2576:
 13581              		.cfi_endproc
 13582              	.LFE4919:
 13584              		.section	.init_array,"aw",%init_array
 13585              		.align	2
 13586 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13587              		.global	AltControls
 13588              		.global	BaseTempo
 13589              		.global	ClockIn
 13590              		.global	Sync
 13591              		.global	ReverseGateR
 13592              		.global	ReverseGateL
 13593              		.global	CLOCK_DEBUG
 13594              		.global	PHASE_DEBUG
 13595              		.global	DELAYR_DEBUG
 13596              		.global	DELAYL_DEBUG
 13597              		.global	saveState
 13598              		.global	save_flag
 13599              		.global	PostFilters
 13600              		.global	ClockInFlag
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 401


 13601              		.global	mute
 13602              		.global	shift
 13603              		.global	syncMode
 13604              		.global	modulation_CV_Raw
 13605              		.global	ModDepth
 13606              		.global	filterXfade
 13607              		.global	width_CV
 13608              		.global	width
 13609              		.global	drywet_CV
 13610              		.global	drywet
 13611              		.global	crossfeedback_CV
 13612              		.global	crossfeedback
 13613              		.global	feedbackR_CV
 13614              		.global	feedbackR
 13615              		.global	feedbackL_CV
 13616              		.global	feedbackL
 13617              		.global	delayTimeR_CV
 13618              		.global	delayTimeL_CV
 13619              		.global	tempoLED_BASE
 13620              		.global	Tap_Button
 13621              		.global	Rev_R_sw
 13622              		.global	Rev_L_sw
 13623              		.global	HPF_sw
 13624              		.global	LPF_sw
 13625              		.global	delaysR_REV
 13626              		.global	delaysL_REV
 13627              		.global	delayR
 13628              		.global	delayL
 13629              		.global	delMemsR_REV
 13630              		.global	delMemsL_REV
 13631              		.global	delMemsR
 13632              		.global	delMemsL
 13633              		.section	.bss.AltControls,"aw",%nobits
 13634              		.align	2
 13635              		.set	.LANCHOR15,. + 0
 13638              	AltControls:
 13639 0000 00000000 		.space	44
 13639      00000000 
 13639      00000000 
 13639      00000000 
 13639      00000000 
 13640              		.section	.bss.BaseTempo,"aw",%nobits
 13641              		.align	2
 13642              		.set	.LANCHOR26,. + 0
 13645              	BaseTempo:
 13646 0000 00000000 		.space	52
 13646      00000000 
 13646      00000000 
 13646      00000000 
 13646      00000000 
 13647              		.section	.bss.CLOCK_DEBUG,"aw",%nobits
 13648              		.align	2
 13651              	CLOCK_DEBUG:
 13652 0000 00000000 		.space	4
 13653              		.section	.bss.ClockIn,"aw",%nobits
 13654              		.align	2
 13655              		.set	.LANCHOR88,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 402


 13658              	ClockIn:
 13659 0000 00000000 		.space	16
 13659      00000000 
 13659      00000000 
 13659      00000000 
 13660              		.section	.bss.ClockInFlag,"aw",%nobits
 13663              	ClockInFlag:
 13664 0000 00       		.space	1
 13665              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 13666              		.align	2
 13669              	DELAYL_DEBUG:
 13670 0000 00000000 		.space	4
 13671              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13672              		.align	2
 13675              	DELAYR_DEBUG:
 13676 0000 00000000 		.space	4
 13677              		.section	.bss.HPF_sw,"aw",%nobits
 13678              		.align	2
 13679              		.set	.LANCHOR95,. + 0
 13682              	HPF_sw:
 13683 0000 00000000 		.space	52
 13683      00000000 
 13683      00000000 
 13683      00000000 
 13683      00000000 
 13684              		.section	.bss.LPF_sw,"aw",%nobits
 13685              		.align	2
 13686              		.set	.LANCHOR94,. + 0
 13689              	LPF_sw:
 13690 0000 00000000 		.space	52
 13690      00000000 
 13690      00000000 
 13690      00000000 
 13690      00000000 
 13691              		.section	.bss.ModDepth,"aw",%nobits
 13692              		.align	2
 13693              		.set	.LANCHOR68,. + 0
 13696              	ModDepth:
 13697 0000 00000000 		.space	4
 13698              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13699              		.align	2
 13700              		.set	.LANCHOR91,. + 0
 13703              	PHASE_DEBUG:
 13704 0000 00000000 		.space	4
 13705              		.section	.bss.PostFilters,"aw",%nobits
 13706              		.set	.LANCHOR83,. + 0
 13709              	PostFilters:
 13710 0000 00       		.space	1
 13711              		.section	.bss.Rev_L_sw,"aw",%nobits
 13712              		.align	2
 13713              		.set	.LANCHOR92,. + 0
 13716              	Rev_L_sw:
 13717 0000 00000000 		.space	52
 13717      00000000 
 13717      00000000 
 13717      00000000 
 13717      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 403


 13718              		.section	.bss.Rev_R_sw,"aw",%nobits
 13719              		.align	2
 13720              		.set	.LANCHOR93,. + 0
 13723              	Rev_R_sw:
 13724 0000 00000000 		.space	52
 13724      00000000 
 13724      00000000 
 13724      00000000 
 13724      00000000 
 13725              		.section	.bss.ReverseGateL,"aw",%nobits
 13726              		.align	2
 13727              		.set	.LANCHOR97,. + 0
 13730              	ReverseGateL:
 13731 0000 00000000 		.space	16
 13731      00000000 
 13731      00000000 
 13731      00000000 
 13732              		.section	.bss.ReverseGateR,"aw",%nobits
 13733              		.align	2
 13734              		.set	.LANCHOR98,. + 0
 13737              	ReverseGateR:
 13738 0000 00000000 		.space	16
 13738      00000000 
 13738      00000000 
 13738      00000000 
 13739              		.section	.bss.Sync,"aw",%nobits
 13740              		.align	2
 13741              		.set	.LANCHOR99,. + 0
 13744              	Sync:
 13745 0000 00000000 		.space	16
 13745      00000000 
 13745      00000000 
 13745      00000000 
 13746              		.section	.bss.Tap_Button,"aw",%nobits
 13747              		.align	2
 13748              		.set	.LANCHOR96,. + 0
 13751              	Tap_Button:
 13752 0000 00000000 		.space	52
 13752      00000000 
 13752      00000000 
 13752      00000000 
 13752      00000000 
 13753              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13754              		.align	2
 13755              		.set	.LANCHOR100,. + 0
 13758              	_ZL10FwdRevLEnv:
 13759 0000 00000000 		.space	56
 13759      00000000 
 13759      00000000 
 13759      00000000 
 13759      00000000 
 13760              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13761              		.align	2
 13762              		.set	.LANCHOR101,. + 0
 13765              	_ZL10FwdRevREnv:
 13766 0000 00000000 		.space	56
 13766      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 404


 13766      00000000 
 13766      00000000 
 13766      00000000 
 13767              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13768              		.align	2
 13769              		.set	.LANCHOR116,. + 0
 13772              	_ZL10HPF_LXfade:
 13773 0000 00000000 		.space	8
 13773      00000000 
 13774              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13775              		.align	2
 13776              		.set	.LANCHOR37,. + 0
 13779              	_ZL10HPF_L_post:
 13780 0000 00000000 		.space	76
 13780      00000000 
 13780      00000000 
 13780      00000000 
 13780      00000000 
 13781              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13782              		.align	2
 13783              		.set	.LANCHOR117,. + 0
 13786              	_ZL10HPF_RXfade:
 13787 0000 00000000 		.space	8
 13787      00000000 
 13788              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13789              		.align	2
 13790              		.set	.LANCHOR38,. + 0
 13793              	_ZL10HPF_R_post:
 13794 0000 00000000 		.space	76
 13794      00000000 
 13794      00000000 
 13794      00000000 
 13794      00000000 
 13795              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13796              		.align	2
 13797              		.set	.LANCHOR118,. + 0
 13800              	_ZL10LPF_LXfade:
 13801 0000 00000000 		.space	8
 13801      00000000 
 13802              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13803              		.align	2
 13804              		.set	.LANCHOR49,. + 0
 13807              	_ZL10LPF_L_post:
 13808 0000 00000000 		.space	76
 13808      00000000 
 13808      00000000 
 13808      00000000 
 13808      00000000 
 13809              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13810              		.align	2
 13811              		.set	.LANCHOR119,. + 0
 13814              	_ZL10LPF_RXfade:
 13815 0000 00000000 		.space	8
 13815      00000000 
 13816              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13817              		.align	2
 13818              		.set	.LANCHOR50,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 405


 13821              	_ZL10LPF_R_post:
 13822 0000 00000000 		.space	76
 13822      00000000 
 13822      00000000 
 13822      00000000 
 13822      00000000 
 13823              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13824              		.align	2
 13825              		.set	.LANCHOR65,. + 0
 13828              	_ZL10WidthXfade:
 13829 0000 00000000 		.space	8
 13829      00000000 
 13830              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13831              		.align	2
 13832              		.set	.LANCHOR106,. + 0
 13835              	_ZL11DcBlock_LFB:
 13836 0000 00000000 		.space	12
 13836      00000000 
 13836      00000000 
 13837              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13838              		.align	2
 13839              		.set	.LANCHOR107,. + 0
 13842              	_ZL11DcBlock_RFB:
 13843 0000 00000000 		.space	12
 13843      00000000 
 13843      00000000 
 13844              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13845              		.align	2
 13846              		.set	.LANCHOR124,. + 0
 13849              	_ZL11FilterMix_L:
 13850 0000 00000000 		.space	8
 13850      00000000 
 13851              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13852              		.align	2
 13853              		.set	.LANCHOR125,. + 0
 13856              	_ZL11FilterMix_R:
 13857 0000 00000000 		.space	8
 13857      00000000 
 13858              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13859              		.align	2
 13860              		.set	.LANCHOR104,. + 0
 13863              	_ZL12FwdRevLXfade:
 13864 0000 00000000 		.space	8
 13864      00000000 
 13865              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13866              		.align	2
 13867              		.set	.LANCHOR105,. + 0
 13870              	_ZL12FwdRevRXfade:
 13871 0000 00000000 		.space	8
 13871      00000000 
 13872              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13873              		.align	2
 13874              		.set	.LANCHOR120,. + 0
 13877              	_ZL15HPF_LXfade_post:
 13878 0000 00000000 		.space	8
 13878      00000000 
 13879              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 406


 13880              		.align	2
 13881              		.set	.LANCHOR121,. + 0
 13884              	_ZL15HPF_RXfade_post:
 13885 0000 00000000 		.space	8
 13885      00000000 
 13886              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13887              		.align	2
 13888              		.set	.LANCHOR122,. + 0
 13891              	_ZL15LPF_LXfade_post:
 13892 0000 00000000 		.space	8
 13892      00000000 
 13893              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13894              		.align	2
 13895              		.set	.LANCHOR123,. + 0
 13898              	_ZL15LPF_RXfade_post:
 13899 0000 00000000 		.space	8
 13899      00000000 
 13900              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13901              		.align	2
 13902              		.set	.LANCHOR126,. + 0
 13905              	_ZL16FilterMix_L_post:
 13906 0000 00000000 		.space	8
 13906      00000000 
 13907              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13908              		.align	2
 13909              		.set	.LANCHOR127,. + 0
 13912              	_ZL16FilterMix_R_post:
 13913 0000 00000000 		.space	8
 13913      00000000 
 13914              		.section	.bss._ZL2hw,"aw",%nobits
 13915              		.align	2
 13916              		.set	.LANCHOR4,. + 0
 13919              	_ZL2hw:
 13920 0000 00000000 		.space	60
 13920      00000000 
 13920      00000000 
 13920      00000000 
 13920      00000000 
 13921              		.section	.bss._ZL3lfo,"aw",%nobits
 13922              		.align	2
 13923              		.set	.LANCHOR76,. + 0
 13926              	_ZL3lfo:
 13927 0000 00000000 		.space	40
 13927      00000000 
 13927      00000000 
 13927      00000000 
 13927      00000000 
 13928              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13929              		.align	2
 13930              		.set	.LANCHOR35,. + 0
 13933              	_ZL5HPF_L:
 13934 0000 00000000 		.space	76
 13934      00000000 
 13934      00000000 
 13934      00000000 
 13934      00000000 
 13935              		.section	.bss._ZL5HPF_R,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 407


 13936              		.align	2
 13937              		.set	.LANCHOR36,. + 0
 13940              	_ZL5HPF_R:
 13941 0000 00000000 		.space	76
 13941      00000000 
 13941      00000000 
 13941      00000000 
 13941      00000000 
 13942              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13943              		.align	2
 13944              		.set	.LANCHOR47,. + 0
 13947              	_ZL5LPF_L:
 13948 0000 00000000 		.space	76
 13948      00000000 
 13948      00000000 
 13948      00000000 
 13948      00000000 
 13949              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13950              		.align	2
 13951              		.set	.LANCHOR48,. + 0
 13954              	_ZL5LPF_R:
 13955 0000 00000000 		.space	76
 13955      00000000 
 13955      00000000 
 13955      00000000 
 13955      00000000 
 13956              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13957              		.align	2
 13958              		.set	.LANCHOR103,. + 0
 13961              	_ZL7HPF_Env:
 13962 0000 00000000 		.space	56
 13962      00000000 
 13962      00000000 
 13962      00000000 
 13962      00000000 
 13963              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13964              		.align	2
 13965              		.set	.LANCHOR102,. + 0
 13968              	_ZL7LPF_Env:
 13969 0000 00000000 		.space	56
 13969      00000000 
 13969      00000000 
 13969      00000000 
 13969      00000000 
 13970              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13971              		.align	2
 13972              		.set	.LANCHOR130,. + 0
 13975              	_ZL7LeftEnv:
 13976 0000 00000000 		.space	24
 13976      00000000 
 13976      00000000 
 13976      00000000 
 13976      00000000 
 13977              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13978              		.align	2
 13979              		.set	.LANCHOR131,. + 0
 13982              	_ZL8RightEnv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 408


 13983 0000 00000000 		.space	24
 13983      00000000 
 13983      00000000 
 13983      00000000 
 13983      00000000 
 13984              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13985              		.align	2
 13986              		.set	.LANCHOR86,. + 0
 13989              	_ZZ10Update_ModvE13modulation_CV:
 13990 0000 00000000 		.space	4
 13991              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13992              		.align	2
 13993              		.set	.LANCHOR87,. + 0
 13996              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13997 0000 00000000 		.space	4
 13998              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 13999              		.align	2
 14000              		.set	.LANCHOR63,. + 0
 14003              	_ZZ12Update_widthvE10width_Last:
 14004 0000 00000000 		.space	4
 14005              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 14006              		.align	2
 14007              		.set	.LANCHOR67,. + 0
 14010              	_ZZ12Update_widthvE12ModDepth_new:
 14011 0000 00000000 		.space	4
 14012              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 14013              		.set	.LANCHOR61,. + 0
 14016              	_ZZ12Update_widthvE12width_pickup:
 14017 0000 00       		.space	1
 14018              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 14019              		.set	.LANCHOR66,. + 0
 14022              	_ZZ12Update_widthvE15ModDepth_pickup:
 14023 0000 00       		.space	1
 14024              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 14025              		.set	.LANCHOR60,. + 0
 14028              	_ZZ12Update_widthvE9lastShift:
 14029 0000 00       		.space	1
 14030              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 14031              		.align	2
 14032              		.set	.LANCHOR62,. + 0
 14035              	_ZZ12Update_widthvE9width_new:
 14036 0000 00000000 		.space	4
 14037              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 14038              		.set	.LANCHOR57,. + 0
 14041              	_ZZ13Update_drywetvE10Res_pickup:
 14042 0000 00       		.space	1
 14043              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 14044              		.align	2
 14045              		.set	.LANCHOR54,. + 0
 14048              	_ZZ13Update_drywetvE10drywet_new:
 14049 0000 00000000 		.space	4
 14050              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 14051              		.align	2
 14052              		.set	.LANCHOR55,. + 0
 14055              	_ZZ13Update_drywetvE11drywet_Last:
 14056 0000 00000000 		.space	4
 14057              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 409


 14058              		.set	.LANCHOR53,. + 0
 14061              	_ZZ13Update_drywetvE13drywet_pickup:
 14062 0000 00       		.space	1
 14063              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14064              		.align	2
 14065              		.set	.LANCHOR58,. + 0
 14068              	_ZZ13Update_drywetvE7Res_new:
 14069 0000 00000000 		.space	4
 14070              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 14071              		.set	.LANCHOR52,. + 0
 14074              	_ZZ13Update_drywetvE9lastShift:
 14075 0000 00       		.space	1
 14076              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 14077              		.align	2
 14078              		.set	.LANCHOR110,. + 0
 14081              	_ZZ14Update_ButtonsvE11buttonstate:
 14082 0000 00000000 		.space	4
 14083              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 14084              		.align	2
 14085              		.set	.LANCHOR111,. + 0
 14088              	_ZZ14Update_ButtonsvE9resetTime:
 14089 0000 00000000 		.space	4
 14090              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14091              		.align	2
 14092              		.set	.LANCHOR112,. + 0
 14095              	_ZZ14Update_ButtonsvE9shiftTime:
 14096 0000 00000000 		.space	4
 14097              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14098              		.align	2
 14099              		.set	.LANCHOR34,. + 0
 14102              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14103 0000 00000000 		.space	4
 14104              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14105              		.align	2
 14106              		.set	.LANCHOR30,. + 0
 14109              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14110 0000 00000000 		.space	4
 14111              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14112              		.align	2
 14113              		.set	.LANCHOR31,. + 0
 14116              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14117 0000 00000000 		.space	4
 14118              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14119              		.set	.LANCHOR33,. + 0
 14122              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14123 0000 00       		.space	1
 14124              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14125              		.set	.LANCHOR29,. + 0
 14128              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14129 0000 00       		.space	1
 14130              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14131              		.set	.LANCHOR28,. + 0
 14134              	_ZZ16Update_feedbackLvE9lastShift:
 14135 0000 00       		.space	1
 14136              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14137              		.align	2
 14138              		.set	.LANCHOR46,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 410


 14141              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14142 0000 00000000 		.space	4
 14143              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14144              		.align	2
 14145              		.set	.LANCHOR42,. + 0
 14148              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14149 0000 00000000 		.space	4
 14150              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14151              		.align	2
 14152              		.set	.LANCHOR43,. + 0
 14155              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14156 0000 00000000 		.space	4
 14157              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 14158              		.set	.LANCHOR45,. + 0
 14161              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14162 0000 00       		.space	1
 14163              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 14164              		.set	.LANCHOR41,. + 0
 14167              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 14168 0000 00       		.space	1
 14169              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14170              		.set	.LANCHOR40,. + 0
 14173              	_ZZ16Update_feedbackRvE9lastShift:
 14174 0000 00       		.space	1
 14175              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14176              		.align	2
 14177              		.set	.LANCHOR10,. + 0
 14180              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14181 0000 00000000 		.space	4
 14182              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14183              		.align	2
 14184              		.set	.LANCHOR11,. + 0
 14187              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14188 0000 00000000 		.space	4
 14189              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14190              		.align	2
 14191              		.set	.LANCHOR14,. + 0
 14194              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14195 0000 00000000 		.space	4
 14196              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14197              		.set	.LANCHOR9,. + 0
 14200              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14201 0000 00       		.space	1
 14202              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14203              		.set	.LANCHOR13,. + 0
 14206              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14207 0000 00       		.space	1
 14208              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 14209              		.align	2
 14210              		.set	.LANCHOR6,. + 0
 14213              	_ZZ17Update_DelayTimeLvE8counterL:
 14214 0000 00000000 		.space	4
 14215              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14216              		.set	.LANCHOR8,. + 0
 14219              	_ZZ17Update_DelayTimeLvE9lastShift:
 14220 0000 00       		.space	1
 14221              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 411


 14222              		.align	2
 14223              		.set	.LANCHOR24,. + 0
 14226              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14227 0000 00000000 		.space	4
 14228              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14229              		.align	2
 14230              		.set	.LANCHOR21,. + 0
 14233              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14234 0000 00000000 		.space	4
 14235              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14236              		.align	2
 14237              		.set	.LANCHOR22,. + 0
 14240              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 14241 0000 00000000 		.space	4
 14242              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14243              		.set	.LANCHOR23,. + 0
 14246              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 14247 0000 00       		.space	1
 14248              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 14249              		.set	.LANCHOR20,. + 0
 14252              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14253 0000 00       		.space	1
 14254              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14255              		.align	2
 14256              		.set	.LANCHOR18,. + 0
 14259              	_ZZ17Update_DelayTimeRvE8counterR:
 14260 0000 00000000 		.space	4
 14261              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14262              		.set	.LANCHOR19,. + 0
 14265              	_ZZ17Update_DelayTimeRvE9lastShift:
 14266 0000 00       		.space	1
 14267              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14268              		.align	2
 14269              		.set	.LANCHOR82,. + 0
 14272              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14273 0000 00000000 		.space	4
 14274              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14275              		.align	2
 14276              		.set	.LANCHOR79,. + 0
 14279              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14280 0000 00000000 		.space	4
 14281              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14282              		.align	2
 14283              		.set	.LANCHOR84,. + 0
 14286              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14287 0000 00000000 		.space	4
 14288              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14289              		.set	.LANCHOR81,. + 0
 14292              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14293 0000 00       		.space	1
 14294              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14295              		.set	.LANCHOR78,. + 0
 14298              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14299 0000 00       		.space	1
 14300              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14301              		.set	.LANCHOR77,. + 0
 14304              	_ZZ18Update_filterXfadevE9lastShift:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 412


 14305 0000 00       		.space	1
 14306              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14307              		.align	2
 14308              		.set	.LANCHOR90,. + 0
 14311              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14312 0000 00000000 		.space	4
 14313              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14314              		.align	2
 14315              		.set	.LANCHOR74,. + 0
 14318              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14319 0000 00000000 		.space	4
 14320              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14321              		.set	.LANCHOR73,. + 0
 14324              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14325 0000 00       		.space	1
 14326              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14327              		.align	2
 14328              		.set	.LANCHOR71,. + 0
 14331              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 14332 0000 00000000 		.space	4
 14333              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14334              		.align	2
 14335              		.set	.LANCHOR75,. + 0
 14338              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14339 0000 00000000 		.space	4
 14340              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 14341              		.set	.LANCHOR70,. + 0
 14344              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14345 0000 00       		.space	1
 14346              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14347              		.set	.LANCHOR69,. + 0
 14350              	_ZZ20Update_crossfeedbackvE9lastShift:
 14351 0000 00       		.space	1
 14352              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14353              		.align	2
 14354              		.set	.LANCHOR109,. + 0
 14357              	_ZZ4mainE9saveTimer:
 14358 0000 00000000 		.space	4
 14359              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 14360              		.align	2
 14361              		.set	.LANCHOR128,. + 0
 14364              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 14365 0000 00000000 		.space	4
 14366              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 14367              		.align	2
 14368              		.set	.LANCHOR129,. + 0
 14371              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 14372 0000 00000000 		.space	4
 14373              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 14374              		.align	2
 14375              		.set	.LANCHOR115,. + 0
 14378              	_ZZL13AudioCallbackPfS_jE7Counter:
 14379 0000 00000000 		.space	4
 14380              		.section	.bss.crossfeedback,"aw",%nobits
 14381              		.align	2
 14382              		.set	.LANCHOR72,. + 0
 14385              	crossfeedback:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 413


 14386 0000 00000000 		.space	4
 14387              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14388              		.align	2
 14391              	crossfeedback_CV:
 14392 0000 00000000 		.space	4
 14393              		.section	.bss.delayL,"aw",%nobits
 14394              		.align	2
 14395              		.set	.LANCHOR0,. + 0
 14398              	delayL:
 14399 0000 00000000 		.space	296
 14399      00000000 
 14399      00000000 
 14399      00000000 
 14399      00000000 
 14400              		.section	.bss.delayR,"aw",%nobits
 14401              		.align	2
 14402              		.set	.LANCHOR1,. + 0
 14405              	delayR:
 14406 0000 00000000 		.space	296
 14406      00000000 
 14406      00000000 
 14406      00000000 
 14406      00000000 
 14407              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14408              		.align	2
 14409              		.set	.LANCHOR5,. + 0
 14412              	delayTimeL_CV:
 14413 0000 00000000 		.space	4
 14414              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14415              		.align	2
 14416              		.set	.LANCHOR17,. + 0
 14419              	delayTimeR_CV:
 14420 0000 00000000 		.space	4
 14421              		.section	.bss.delaysL_REV,"aw",%nobits
 14422              		.align	2
 14423              		.set	.LANCHOR2,. + 0
 14426              	delaysL_REV:
 14427 0000 00000000 		.space	8
 14427      00000000 
 14428              		.section	.bss.delaysR_REV,"aw",%nobits
 14429              		.align	2
 14430              		.set	.LANCHOR3,. + 0
 14433              	delaysR_REV:
 14434 0000 00000000 		.space	8
 14434      00000000 
 14435              		.section	.bss.drywet_CV,"aw",%nobits
 14436              		.align	2
 14437              		.set	.LANCHOR51,. + 0
 14440              	drywet_CV:
 14441 0000 00000000 		.space	4
 14442              		.section	.bss.feedbackL,"aw",%nobits
 14443              		.align	2
 14444              		.set	.LANCHOR32,. + 0
 14447              	feedbackL:
 14448 0000 00000000 		.space	4
 14449              		.section	.bss.feedbackL_CV,"aw",%nobits
 14450              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 414


 14451              		.set	.LANCHOR27,. + 0
 14454              	feedbackL_CV:
 14455 0000 00000000 		.space	4
 14456              		.section	.bss.feedbackR,"aw",%nobits
 14457              		.align	2
 14458              		.set	.LANCHOR44,. + 0
 14461              	feedbackR:
 14462 0000 00000000 		.space	4
 14463              		.section	.bss.feedbackR_CV,"aw",%nobits
 14464              		.align	2
 14465              		.set	.LANCHOR39,. + 0
 14468              	feedbackR_CV:
 14469 0000 00000000 		.space	4
 14470              		.section	.bss.filterXfade,"aw",%nobits
 14471              		.align	2
 14472              		.set	.LANCHOR80,. + 0
 14475              	filterXfade:
 14476 0000 00000000 		.space	4
 14477              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 14478              		.align	2
 14479              		.set	.LANCHOR85,. + 0
 14482              	modulation_CV_Raw:
 14483 0000 00000000 		.space	4
 14484              		.section	.bss.mute,"aw",%nobits
 14485              		.set	.LANCHOR113,. + 0
 14488              	mute:
 14489 0000 00       		.space	1
 14490              		.section	.bss.saveState,"aw",%nobits
 14491              		.set	.LANCHOR108,. + 0
 14494              	saveState:
 14495 0000 00       		.space	1
 14496              		.section	.bss.save_flag,"aw",%nobits
 14497              		.align	2
 14498              		.set	.LANCHOR16,. + 0
 14501              	save_flag:
 14502 0000 00       		.space	1
 14503              		.section	.bss.shift,"aw",%nobits
 14504              		.set	.LANCHOR7,. + 0
 14507              	shift:
 14508 0000 00       		.space	1
 14509              		.section	.bss.syncMode,"aw",%nobits
 14510              		.set	.LANCHOR12,. + 0
 14513              	syncMode:
 14514 0000 00       		.space	1
 14515              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14516              		.align	2
 14517              		.set	.LANCHOR89,. + 0
 14520              	tempoLED_BASE:
 14521 0000 00000000 		.space	72
 14521      00000000 
 14521      00000000 
 14521      00000000 
 14521      00000000 
 14522              		.section	.bss.width_CV,"aw",%nobits
 14523              		.align	2
 14524              		.set	.LANCHOR59,. + 0
 14527              	width_CV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 415


 14528 0000 00000000 		.space	4
 14529              		.section	.data.drywet,"aw"
 14530              		.align	2
 14531              		.set	.LANCHOR56,. + 0
 14534              	drywet:
 14535 0000 0000003F 		.word	1056964608
 14536              		.section	.data.width,"aw"
 14537              		.align	2
 14538              		.set	.LANCHOR64,. + 0
 14541              	width:
 14542 0000 0000803F 		.word	1065353216
 14543              		.section	.rodata.CSWTCH.370,"a"
 14544              		.align	3
 14545              		.set	.LANCHOR25,. + 0
 14548              	CSWTCH.370:
 14549 0000 00000000 		.word	0
 14550 0004 0000F83F 		.word	1073217536
 14551 0008 00000000 		.word	0
 14552 000c 00000040 		.word	1073741824
 14553 0010 00000000 		.word	0
 14554 0014 00000840 		.word	1074266112
 14555              		.section	.rodata._ZL18defaultAltControls,"a"
 14556              		.align	2
 14557              		.set	.LANCHOR114,. + 0
 14560              	_ZL18defaultAltControls:
 14561 0000 00650148 		.word	1208050944
 14562 0004 0000803F 		.word	1065353216
 14563 0008 00000000 		.word	0
 14564 000c 9A99A140 		.word	1084332442
 14565 0010 00004843 		.word	1128792064
 14566 0014 00803B46 		.word	1178304512
 14567 0018 00000000 		.word	0
 14568 001c 00000000 		.word	0
 14569 0020 0024F448 		.word	1223959552
 14570 0024 00000000 		.word	0
 14571 0028 00000000 		.word	0
 14572              		.section	.sdram_bss,"aw"
 14573              		.align	2
 14576              	delMemsR_REV:
 14577 0000 00000000 		.space	2400040
 14577      00000000 
 14577      00000000 
 14577      00000000 
 14577      00000000 
 14580              	delMemsL_REV:
 14581 249f28 00000000 		.space	2400040
 14581      00000000 
 14581      00000000 
 14581      00000000 
 14581      00000000 
 14584              	delMemsR:
 14585 493e50 00000000 		.space	6912136
 14585      00000000 
 14585      00000000 
 14585      00000000 
 14585      00000000 
 14588              	delMemsL:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 416


 14589 b2b6d8 00000000 		.space	6912136
 14589      00000000 
 14589      00000000 
 14589      00000000 
 14589      00000000 
 14590              		.text
 14591              	.Letext0:
 14592              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14593              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 14594              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14595              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 14596              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14597              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14598              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14599              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14600              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14601              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14602              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14603              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14604              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14605              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14606              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14607              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14608              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14609              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14610              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14611              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14612              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14613              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14614              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14615              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14616              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14617              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14618              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14619              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14620              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14621              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14622              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14623              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14624              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14625              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14626              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14627              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14628              		.file 64 "../libdaisy/src/daisy_core.h"
 14629              		.file 65 "../libdaisy/src/per/tim.h"
 14630              		.file 66 "../libdaisy/src/per/sai.h"
 14631              		.file 67 "../libdaisy/src/util/wav_format.h"
 14632              		.file 68 "../libdaisy/src/per/qspi.h"
 14633              		.file 69 "../libdaisy/src/per/gpio.h"
 14634              		.file 70 "../libdaisy/src/dev/sdram.h"
 14635              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14636              		.file 72 "<built-in>"
 14637              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14638              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14639              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 14640              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 14641              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 417


 14642              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 14643              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 14644              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 14645              		.file 81 "../libdaisy/src/sys/fatfs.h"
 14646              		.file 82 "../DaisySP/Source/Control/adenv.h"
 14647              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14648              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14649              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14650              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14651              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14652              		.file 88 "QSPI_Settings.h"
 14653              		.file 89 "scale.h"
 14654              		.file 90 "constants.h"
 14655              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 418


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14588  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14584  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14580  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14576  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1636   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 419


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1666   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1674   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1705   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:1713   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2202   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2229   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2237   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2268   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2276   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2731   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2760   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2768   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2799   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:2807   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3261   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3290   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3298   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3323   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3329   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3337   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3846   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3883   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3891   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3916   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3922   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:3930   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:4403   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:4429   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:4437   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:4798   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:4818   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:4826   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5163   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5186   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5194   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5224   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5232   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5240   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5397   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5409   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5417   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5523   .text._Z11UpdateClockv:0000000000000044 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5532   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5540   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5592   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5599   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5607   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5640   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5647   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5655   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5777   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5788   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:5796   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:6498   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 420


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:6539   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:6618   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:6632   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:6640   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:7511   .text.startup.main:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:7541   .text.startup.main:00000000000003b4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8080   .text.startup.main:0000000000000630 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:9039   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8107   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8115   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8177   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8188   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8196   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8299   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8311   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:8319   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:9005   .text._Z14Update_Buttonsv:0000000000000268 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:9032   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:9108   .text._ZL13AudioCallbackPfS_j:000000000000003a $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:9123   .text._ZL13AudioCallbackPfS_j:0000000000000058 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:9169   .text._ZL13AudioCallbackPfS_j:0000000000000088 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:9181   .text._ZL13AudioCallbackPfS_j:00000000000000a0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:10238  .text._ZL13AudioCallbackPfS_j:0000000000000444 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:10281  .text._ZL13AudioCallbackPfS_j:00000000000004e4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:11099  .text._ZL13AudioCallbackPfS_j:000000000000081c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:11115  .text._ZL13AudioCallbackPfS_j:000000000000084c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:11994  .text._ZL13AudioCallbackPfS_j:0000000000000b94 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12030  .text._ZL13AudioCallbackPfS_j:0000000000000c04 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12228  .text._ZL13AudioCallbackPfS_j:0000000000000cb8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12238  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12246  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12280  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12288  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12335  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12340  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12348  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12432  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12437  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12445  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12535  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12540  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12548  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12578  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12583  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:12590  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13509  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13585  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13638  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13645  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13658  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13744  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13737  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13730  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13651  .bss.CLOCK_DEBUG:0000000000000000 CLOCK_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13703  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13675  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13669  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 421


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14494  .bss.saveState:0000000000000000 saveState
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14501  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13709  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13663  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14488  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14507  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14513  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14482  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13696  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14475  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14527  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14541  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14440  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14534  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14391  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14385  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14468  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14461  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14454  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14447  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14419  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14412  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14520  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13751  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13723  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13716  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13682  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13689  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14433  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14426  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14405  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14398  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13634  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13641  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13648  .bss.CLOCK_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13654  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13664  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13666  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13672  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13678  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13685  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13692  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13699  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13710  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13712  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13719  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13726  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13733  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13740  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13747  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13754  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13758  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13761  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13765  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13768  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13772  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13775  .bss._ZL10HPF_L_post:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 422


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13779  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13782  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13786  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13789  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13793  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13796  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13800  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13803  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13807  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13810  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13814  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13817  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13821  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13824  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13828  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13831  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13835  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13838  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13842  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13845  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13849  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13852  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13856  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13859  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13863  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13866  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13870  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13873  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13877  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13880  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13884  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13887  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13891  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13894  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13898  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13901  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13905  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13908  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13912  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13915  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13919  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13922  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13926  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13929  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13933  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13936  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13940  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13943  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13947  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13950  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13954  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13957  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13961  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13964  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13968  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13971  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13975  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 423


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13978  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13982  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13985  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13989  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13992  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13996  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:13999  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14003  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14006  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14010  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14016  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14017  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14022  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14023  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14028  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14029  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14031  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14035  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14041  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14042  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14044  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14048  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14051  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14055  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14061  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14062  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14064  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14068  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14074  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14075  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14077  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14081  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14084  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14088  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14091  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14095  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14098  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14102  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14105  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14109  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14112  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14116  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14122  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14123  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14128  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14129  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14134  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14135  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14137  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14141  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14144  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14148  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14151  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14155  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14161  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14162  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14167  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 424


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14168  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14173  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14174  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14176  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14180  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14183  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14187  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14190  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14194  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14200  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14201  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14206  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14207  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14209  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14213  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14219  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14220  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14222  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14226  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14229  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14233  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14236  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14240  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14246  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14247  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14252  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14253  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14255  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14259  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14265  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14266  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14268  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14272  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14275  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14279  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14282  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14286  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14292  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14293  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14298  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14299  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14304  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14305  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14307  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14311  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14314  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14318  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14324  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14325  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14327  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14331  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14334  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14338  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14344  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14345  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14350  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14351  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 425


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14353  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14357  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14360  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14364  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14367  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14371  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14374  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14378  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14381  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14388  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14394  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14401  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14408  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14415  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14422  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14429  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14436  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14443  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14450  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14457  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14464  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14471  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14478  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14489  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14495  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14497  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14508  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14514  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14516  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14523  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14530  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14537  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14544  .rodata.CSWTCH.370:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14548  .rodata.CSWTCH.370:0000000000000000 CSWTCH.370
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14556  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14560  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s:14573  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc3EXbqv.s 			page 426


_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12setTapLengthEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEmmf
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
