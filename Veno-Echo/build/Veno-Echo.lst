ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB805:
  61              	.LBI805:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE805:
  66              	.LBB806:
  67              	.LBI806:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE806:
  72              	.LBB807:
  73              	.LBI807:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE807:
  78              	.LBB808:
  79              	.LBI808:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE808:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         bool tapflag_;
  37:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  38:taptempo.h    **** 
  39:taptempo.h    ****     public:
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 14


  41:taptempo.h    ****     Taptempo()  //default constructor
  42:taptempo.h    ****     {
  43:taptempo.h    ****         tapflag_ = false;
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
  45:taptempo.h    ****         maxtap_ = 2000;
  46:taptempo.h    ****         mintap_ = 80;
  47:taptempo.h    ****         lastTapLength_ = 0;
  48:taptempo.h    ****         tempo_ = 500.0f;
  49:taptempo.h    ****         lastTime_ = 0;
  50:taptempo.h    ****         currentTime_ = 0;
  51:taptempo.h    ****         tapRatio_ = 1.0f;
  52:taptempo.h    **** 
  53:taptempo.h    ****     }
  54:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 54 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 54 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3953:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 15


  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** 
  29:LEDs.h        **** using namespace daisysp;
  30:LEDs.h        **** using namespace daisy;
  31:LEDs.h        **** 
  32:LEDs.h        **** class TempoLED
  33:LEDs.h        **** {
  34:LEDs.h        **** 
  35:LEDs.h        **** Led led;
  36:LEDs.h        **** Oscillator blink;
  37:LEDs.h        **** 
  38:LEDs.h        **** public:
  39:LEDs.h        **** 
  40:LEDs.h        **** TempoLED(){}
  41:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 41 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB809:
 285              	.LBI809:
 286              		.loc 8 16 5 view .LVU27
 287              		.loc 8 16 5 is_stmt 0 view .LVU28
 288              	.LBE809:
 289              	.LBB810:
 290              	.LBI810:
 291              		.file 15 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 16


  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 292              		.loc 15 25 5 is_stmt 1 view .LVU29
 293              		.loc 15 25 5 is_stmt 0 view .LVU30
 294              	.LBE810:
 295              		.loc 14 41 13 view .LVU31
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE3953:
 300              		.weak	_ZN8TempoLEDD1Ev
 301              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 302 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 303              		.align	1
 304              		.p2align 2,,3
 305              		.weak	_ZN9ButtonLEDD2Ev
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	_ZN9ButtonLEDD2Ev:
 312              	.LVL10:
 313              	.LFB3959:
  42:LEDs.h        **** 
  43:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  44:LEDs.h        **** 
  45:LEDs.h        **** void setTempo(float tempo);
  46:LEDs.h        **** 
  47:LEDs.h        **** void resetPhase();
  48:LEDs.h        **** 
  49:LEDs.h        **** void update();
  50:LEDs.h        **** 
  51:LEDs.h        **** void LED_set(float brightness);
  52:LEDs.h        **** 
  53:LEDs.h        **** bool isEOC();
  54:LEDs.h        **** 
  55:LEDs.h        **** };
  56:LEDs.h        **** 
  57:LEDs.h        **** class ButtonLED    //button with status LED
  58:LEDs.h        **** {
  59:LEDs.h        ****     public:
  60:LEDs.h        ****     ButtonLED() {}
  61:LEDs.h        ****     ~ButtonLED() {}
 314              		.loc 14 61 5 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LBB811:
 320              	.LBI811:
 321              		.loc 15 25 5 view .LVU33
 322              		.loc 15 25 5 is_stmt 0 view .LVU34
 323              	.LBE811:
 324              	.LBB812:
 325              	.LBI812:
 326              		.loc 1 41 5 is_stmt 1 view .LVU35
 327              		.loc 1 41 5 is_stmt 0 view .LVU36
 328              	.LBE812:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 17


 329              		.loc 14 61 19 view .LVU37
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE3959:
 334              		.weak	_ZN9ButtonLEDD1Ev
 335              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 336 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN10DelayMultiD2Ev
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	_ZN10DelayMultiD2Ev:
 346              	.LVL11:
 347              	.LFB3965:
 348              		.file 16 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 18


  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 349              		.loc 16 50 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LBB813:
 355              	.LBI813:
  41:LEDs.h        **** 
 356              		.loc 14 41 1 view .LVU39
 357              	.LBB814:
 358              	.LBI814:
 359              		.loc 8 16 5 view .LVU40
 360              		.loc 8 16 5 is_stmt 0 view .LVU41
 361              	.LBE814:
 362              	.LBB815:
 363              	.LBI815:
 364              		.loc 15 25 5 is_stmt 1 view .LVU42
 365              		.loc 15 25 5 is_stmt 0 view .LVU43
 366              	.LBE815:
 367              	.LBE813:
 368              		.loc 16 50 16 view .LVU44
 369 0000 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE3965:
 373              		.weak	_ZN10DelayMultiD1Ev
 374              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 375 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 376              		.align	1
 377              		.p2align 2,,3
 378              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 385              	.LVL12:
 386              	.LFB4892:
 387              		.file 17 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 19


   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 388              		.loc 17 52 5 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              		.loc 17 52 27 is_stmt 0 view .LVU46
 394 0000 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE4892:
 398              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 399              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 400 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 401              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 20


 402              		.p2align 2,,3
 403              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv5-d16
 409              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 410              	.LVL13:
 411              	.LFB4895:
 412              		.file 18 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 413              		.loc 18 39 5 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              		.loc 18 39 26 is_stmt 0 view .LVU48
 419 0000 7047     		bx	lr
 420              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 21


 421              	.LFE4895:
 423              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 424              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 425 0002 00BF     		.section	.text._Z20checkPickupState_altff11pickupStateb.part.0,"ax",%progbits
 426              		.align	1
 427              		.p2align 2,,3
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv5-d16
 433              	_Z20checkPickupState_altff11pickupStateb.part.0:
 434              	.LVL14:
 435              	.LFB4912:
 436              		.file 19 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 22


  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 23


 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV;
 107:Veno-Echo.cpp **** float delayTimeR_CV;
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** bool delayL_flag{true};
 143:Veno-Echo.cpp **** bool delayR_flag{true};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
 157:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 24


 158:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 163:Veno-Echo.cpp **** 
 164:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 169:Veno-Echo.cpp **** 
 170:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** //Gate inputs
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Switch TapButton;
 182:Veno-Echo.cpp **** Switch Sync;
 183:Veno-Echo.cpp **** Switch ClockIn;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Tap tempo
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f
 203:Veno-Echo.cpp **** };
 204:Veno-Echo.cpp **** 
 205:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 206:Veno-Echo.cpp **** void Update_DelayTimeL();
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeR();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_feedbackL_CV();
 212:Veno-Echo.cpp **** void Update_feedbackL();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_feedbackR_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 25


 215:Veno-Echo.cpp **** void Update_feedbackR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_drywet_CV();
 218:Veno-Echo.cpp **** void Update_drywet();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_width_CV();
 221:Veno-Echo.cpp **** void Update_width();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_crossfeedback();
 224:Veno-Echo.cpp **** void Update_filterXfade();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_Buttons();
 227:Veno-Echo.cpp **** void Update_BaseTempoLED();
 228:Veno-Echo.cpp **** void Update_Mod();
 229:Veno-Echo.cpp **** void GetModCV();
 230:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 231:Veno-Echo.cpp **** void UpdateClock();
 232:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 233:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 234:Veno-Echo.cpp **** void TurnOnAllLEDs();
 235:Veno-Echo.cpp **** void ResetAllLEDs();
 236:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 237:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 238:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 239:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 240:Veno-Echo.cpp **** 
 241:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 242:Veno-Echo.cpp **** {
 243:Veno-Echo.cpp **** 
 244:Veno-Echo.cpp **** /*
 245:Veno-Echo.cpp **** static uint32_t funcLength{};
 246:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 247:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 248:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 249:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 250:Veno-Echo.cpp **** 
 251:Veno-Echo.cpp **** */
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** static int Counter{};
 254:Veno-Echo.cpp **** 
 255:Veno-Echo.cpp **** /*
 256:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 257:Veno-Echo.cpp **** 
 258:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 259:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 260:Veno-Echo.cpp ****     {
 261:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 262:Veno-Echo.cpp ****     }
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 265:Veno-Echo.cpp ****     {
 266:Veno-Echo.cpp ****         minFuncLength = funcLength;
 267:Veno-Echo.cpp ****     }
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp **** */
 270:Veno-Echo.cpp **** 
 271:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 26


 272:Veno-Echo.cpp **** 
 273:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 274:Veno-Echo.cpp **** {
 275:Veno-Echo.cpp ****     /*
 276:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 277:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 278:Veno-Echo.cpp ****         //init timeofCall as current time
 279:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****         //wait for random Dither time
 282:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 283:Veno-Echo.cpp ****         {}
 284:Veno-Echo.cpp ****     */
 285:Veno-Echo.cpp **** 
 286:Veno-Echo.cpp ****         switch (Counter)
 287:Veno-Echo.cpp ****         {
 288:Veno-Echo.cpp ****             case 0:
 289:Veno-Echo.cpp ****                 Update_Buttons();
 290:Veno-Echo.cpp ****                 GetModCV();
 291:Veno-Echo.cpp ****             break;
 292:Veno-Echo.cpp **** 
 293:Veno-Echo.cpp ****             case 1:
 294:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 295:Veno-Echo.cpp ****             break;
 296:Veno-Echo.cpp **** 
 297:Veno-Echo.cpp ****             case 2:
 298:Veno-Echo.cpp ****                 Update_DelayTimeL();
 299:Veno-Echo.cpp ****             break;
 300:Veno-Echo.cpp **** 
 301:Veno-Echo.cpp ****             case 3:
 302:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 303:Veno-Echo.cpp ****             break;
 304:Veno-Echo.cpp **** 
 305:Veno-Echo.cpp ****             case 4:
 306:Veno-Echo.cpp ****                 Update_DelayTimeR();
 307:Veno-Echo.cpp ****             break;
 308:Veno-Echo.cpp **** 
 309:Veno-Echo.cpp ****             case 5:
 310:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 6:
 314:Veno-Echo.cpp ****                 Update_feedbackL();
 315:Veno-Echo.cpp ****             break;
 316:Veno-Echo.cpp **** 
 317:Veno-Echo.cpp ****             case 7:
 318:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 319:Veno-Echo.cpp ****             break;
 320:Veno-Echo.cpp **** 
 321:Veno-Echo.cpp ****             case 8:
 322:Veno-Echo.cpp ****                 Update_feedbackR();
 323:Veno-Echo.cpp ****             break;
 324:Veno-Echo.cpp **** 
 325:Veno-Echo.cpp ****             case 9:
 326:Veno-Echo.cpp ****                 Update_drywet_CV();
 327:Veno-Echo.cpp ****             break;
 328:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 27


 329:Veno-Echo.cpp ****             case 10:
 330:Veno-Echo.cpp ****                 Update_drywet();
 331:Veno-Echo.cpp ****             break;
 332:Veno-Echo.cpp **** 
 333:Veno-Echo.cpp ****             case 11:
 334:Veno-Echo.cpp ****                 Update_width_CV();
 335:Veno-Echo.cpp ****             break;
 336:Veno-Echo.cpp **** 
 337:Veno-Echo.cpp ****             case 12:
 338:Veno-Echo.cpp ****                 Update_width();
 339:Veno-Echo.cpp ****             break;
 340:Veno-Echo.cpp **** 
 341:Veno-Echo.cpp ****             case 13:
 342:Veno-Echo.cpp ****                 Update_crossfeedback();
 343:Veno-Echo.cpp ****             break;
 344:Veno-Echo.cpp **** 
 345:Veno-Echo.cpp ****             case 14:
 346:Veno-Echo.cpp ****                 Update_filterXfade();
 347:Veno-Echo.cpp ****             break;
 348:Veno-Echo.cpp ****         }
 349:Veno-Echo.cpp **** }
 350:Veno-Echo.cpp **** 
 351:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 352:Veno-Echo.cpp ****     {   
 353:Veno-Echo.cpp ****         UpdateClock(); 
 354:Veno-Echo.cpp ****         Update_Mod();
 355:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 356:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 357:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 358:Veno-Echo.cpp ****         
 359:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 360:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 361:Veno-Echo.cpp **** 
 362:Veno-Echo.cpp ****         //set xfade positions      
 363:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 364:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 365:Veno-Echo.cpp ****         
 366:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 367:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 368:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 369:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 370:Veno-Echo.cpp **** 
 371:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 372:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 373:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 374:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 375:Veno-Echo.cpp **** 
 376:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 377:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 378:Veno-Echo.cpp **** 
 379:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 380:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 383:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 384:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 385:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 28


 386:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 387:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 388:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 389:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 390:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 391:Veno-Echo.cpp **** 
 392:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 393:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 394:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 395:Veno-Echo.cpp **** 
 396:Veno-Echo.cpp ****         //Get combined output from all delay heads
 397:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 398:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 399:Veno-Echo.cpp ****         //Update Base Tempo LED
 400:Veno-Echo.cpp ****         Update_BaseTempoLED();
 401:Veno-Echo.cpp **** 
 402:Veno-Echo.cpp ****         //hard limit
 403:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 404:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 405:Veno-Echo.cpp **** 
 406:Veno-Echo.cpp **** if(!PostFilters)
 407:Veno-Echo.cpp **** {
 408:Veno-Echo.cpp **** //****************************************************************************************
 409:Veno-Echo.cpp ****         //pre filters
 410:Veno-Echo.cpp ****         //process LPF
 411:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 412:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 413:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 416:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 418:Veno-Echo.cpp ****         
 419:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 420:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 422:Veno-Echo.cpp **** 
 423:Veno-Echo.cpp ****         //hard limit
 424:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 425:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 426:Veno-Echo.cpp **** 
 427:Veno-Echo.cpp ****         //process HPF
 428:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 429:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 430:Veno-Echo.cpp **** 
 431:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 433:Veno-Echo.cpp **** 
 434:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 438:Veno-Echo.cpp **** 
 439:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 440:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 441:Veno-Echo.cpp **** 
 442:Veno-Echo.cpp **** //****************************************************************************************
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 29


 443:Veno-Echo.cpp **** }
 444:Veno-Echo.cpp **** 
 445:Veno-Echo.cpp **** else
 446:Veno-Echo.cpp **** {
 447:Veno-Echo.cpp ****     /* code */
 448:Veno-Echo.cpp **** }
 449:Veno-Echo.cpp **** 
 450:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 451:Veno-Echo.cpp ****         static float RNegFB{};
 452:Veno-Echo.cpp **** 
 453:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 454:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 456:Veno-Echo.cpp ****         
 457:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 459:Veno-Echo.cpp **** 
 460:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 461:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 462:Veno-Echo.cpp **** 
 463:Veno-Echo.cpp ****         //crossfeedback:
 464:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp ****         //get envelopes for feedback signals
 469:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 470:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 471:Veno-Echo.cpp **** 
 472:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 473:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 474:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 475:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 476:Veno-Echo.cpp ****             else LNegFB = 0.0;
 477:Veno-Echo.cpp ****             
 478:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 479:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 480:Veno-Echo.cpp ****             else RNegFB = 0.0;
 481:Veno-Echo.cpp **** 
 482:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 483:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 484:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 485:Veno-Echo.cpp ****  
 486:Veno-Echo.cpp ****         //hard limit
 487:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 488:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 489:Veno-Echo.cpp **** 
 490:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 492:Veno-Echo.cpp **** 
 493:Veno-Echo.cpp ****         // floats for wet dry mix
 494:Veno-Echo.cpp ****         float mixL;
 495:Veno-Echo.cpp ****         float mixR;
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 498:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 499:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 30


 500:Veno-Echo.cpp ****         //hard limit
 501:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 502:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 503:Veno-Echo.cpp **** 
 504:Veno-Echo.cpp **** if(PostFilters)
 505:Veno-Echo.cpp **** {
 506:Veno-Echo.cpp ****     //****************************************************************************************
 507:Veno-Echo.cpp ****         //post filters
 508:Veno-Echo.cpp ****         //process LPF
 509:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 510:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 511:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 512:Veno-Echo.cpp **** 
 513:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 514:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 516:Veno-Echo.cpp ****         
 517:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 518:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 520:Veno-Echo.cpp **** 
 521:Veno-Echo.cpp ****         //hard limit
 522:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 523:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 524:Veno-Echo.cpp **** 
 525:Veno-Echo.cpp ****         //process HPF
 526:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 527:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 528:Veno-Echo.cpp **** 
 529:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 531:Veno-Echo.cpp **** 
 532:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 534:Veno-Echo.cpp **** 
 535:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 536:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 538:Veno-Echo.cpp **** 
 539:Veno-Echo.cpp ****     //****************************************************************************************
 540:Veno-Echo.cpp **** }
 541:Veno-Echo.cpp **** else
 542:Veno-Echo.cpp **** {
 543:Veno-Echo.cpp ****     /* code */
 544:Veno-Echo.cpp **** }
 545:Veno-Echo.cpp ****         if(drywet < 0.5f)
 546:Veno-Echo.cpp ****         {
 547:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 549:Veno-Echo.cpp ****         }
 550:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 551:Veno-Echo.cpp ****         {
 552:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 554:Veno-Echo.cpp ****         }
 555:Veno-Echo.cpp ****         else
 556:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 31


 557:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 558:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 559:Veno-Echo.cpp ****         }
 560:Veno-Echo.cpp **** 
 561:Veno-Echo.cpp ****         //send mixes to outputs
 562:Veno-Echo.cpp ****         if(mute)
 563:Veno-Echo.cpp ****         {
 564:Veno-Echo.cpp ****             out[i] = 0.0f;
 565:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 566:Veno-Echo.cpp ****         }
 567:Veno-Echo.cpp ****         else
 568:Veno-Echo.cpp ****         {
 569:Veno-Echo.cpp ****             out[i] = mixL;
 570:Veno-Echo.cpp ****             out[i+1] = mixR;
 571:Veno-Echo.cpp ****         }
 572:Veno-Echo.cpp **** 
 573:Veno-Echo.cpp ****         //write to DAC for debug
 574:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 575:Veno-Echo.cpp **** 
 576:Veno-Echo.cpp ****     }
 577:Veno-Echo.cpp **** 
 578:Veno-Echo.cpp **** }
 579:Veno-Echo.cpp **** 
 580:Veno-Echo.cpp **** void InitDelays(float samplerate)
 581:Veno-Echo.cpp **** {
 582:Veno-Echo.cpp **** 
 583:Veno-Echo.cpp ****     //Init fwd delays
 584:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 585:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 586:Veno-Echo.cpp **** 
 587:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 588:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 589:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 590:Veno-Echo.cpp **** 
 591:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 592:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 593:Veno-Echo.cpp **** 
 594:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 595:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 596:Veno-Echo.cpp **** 
 597:Veno-Echo.cpp ****     //Init rev delays
 598:Veno-Echo.cpp ****     delMemsL_REV.Init();
 599:Veno-Echo.cpp ****     delMemsR_REV.Init();
 600:Veno-Echo.cpp **** 
 601:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 602:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 603:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 604:Veno-Echo.cpp **** 
 605:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 606:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 607:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 608:Veno-Echo.cpp **** 
 609:Veno-Echo.cpp **** }
 610:Veno-Echo.cpp **** 
 611:Veno-Echo.cpp **** int main(void)
 612:Veno-Echo.cpp **** {
 613:Veno-Echo.cpp ****     // initialize hardware.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 32


 614:Veno-Echo.cpp ****     hw.Configure();
 615:Veno-Echo.cpp ****     hw.Init();
 616:Veno-Echo.cpp ****     
 617:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 618:Veno-Echo.cpp **** 
 619:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 624:Veno-Echo.cpp **** 
 625:Veno-Echo.cpp ****     //Gates
 626:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 628:Veno-Echo.cpp **** 
 629:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 630:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 632:Veno-Echo.cpp ****     
 633:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 638:Veno-Echo.cpp **** 
 639:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 642:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 643:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 644:Veno-Echo.cpp **** 
 645:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 648:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 649:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 650:Veno-Echo.cpp **** 
 651:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 654:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 655:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 656:Veno-Echo.cpp **** 
 657:Veno-Echo.cpp ****     // set params for CrossFade objects
 658:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 659:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 660:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 661:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 662:Veno-Echo.cpp **** 
 663:Veno-Echo.cpp ****     WidthXfade.Init();
 664:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 665:Veno-Echo.cpp **** 
 666:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 667:Veno-Echo.cpp **** 
 668:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 669:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 670:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 33


 671:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 672:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 673:Veno-Echo.cpp **** 
 674:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 675:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 676:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 677:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 678:Veno-Echo.cpp **** 
 679:Veno-Echo.cpp ****     //setup L and R High Pass filters
 680:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 681:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 682:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 683:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 684:Veno-Echo.cpp **** 
 685:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 686:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 687:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 688:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 689:Veno-Echo.cpp **** 
 690:Veno-Echo.cpp ****     //post filters
 691:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 692:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 693:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 694:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 695:Veno-Echo.cpp **** 
 696:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 697:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 698:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 699:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 700:Veno-Echo.cpp **** 
 701:Veno-Echo.cpp ****     //setup L and R High Pass filters
 702:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 703:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 704:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 705:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 706:Veno-Echo.cpp **** 
 707:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 708:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 709:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 710:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 711:Veno-Echo.cpp **** 
 712:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 713:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 714:Veno-Echo.cpp **** 
 715:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 716:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 717:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 718:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 719:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 720:Veno-Echo.cpp **** 
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp ****     //timers: used to limit time between updates to delay time parameters
 723:Veno-Echo.cpp ****     //dsy_tim_init(); //start timer
 724:Veno-Echo.cpp ****     //dsy_tim_start();
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 727:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 34


 728:Veno-Echo.cpp ****     //setup tempo indicators
 729:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 730:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 731:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 732:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp ****     //load settings from flash
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 737:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 738:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 739:Veno-Echo.cpp **** 
 740:Veno-Echo.cpp ****     //initialize DAC
 741:Veno-Echo.cpp ****     //dsy_dac_init(&hw.dac_handle, DSY_DAC_CHN_BOTH);
 742:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN1, 0);
 743:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN2, 0);
 744:Veno-Echo.cpp **** 
 745:Veno-Echo.cpp ****     //ADC
 746:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 747:Veno-Echo.cpp **** 
 748:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 749:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 750:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 751:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 752:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 753:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 754:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 755:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 756:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 760:Veno-Echo.cpp ****     hw.adc.Start();
 761:Veno-Echo.cpp **** 
 762:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 763:Veno-Echo.cpp ****     // start audio callback
 764:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 765:Veno-Echo.cpp **** 
 766:Veno-Echo.cpp ****     
 767:Veno-Echo.cpp **** 
 768:Veno-Echo.cpp ****      for(;;)
 769:Veno-Echo.cpp ****      {
 770:Veno-Echo.cpp **** 
 771:Veno-Echo.cpp **** /*
 772:Veno-Echo.cpp ****         if(save_flag)
 773:Veno-Echo.cpp ****         {
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 776:Veno-Echo.cpp ****             {
 777:Veno-Echo.cpp ****                 //reset flag
 778:Veno-Echo.cpp ****                 //System::Delay(1000);
 779:Veno-Echo.cpp ****                 save_flag = false;
 780:Veno-Echo.cpp ****             }
 781:Veno-Echo.cpp ****         }
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp **** */
 784:Veno-Echo.cpp ****      }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 35


 785:Veno-Echo.cpp **** 
 786:Veno-Echo.cpp **** }
 787:Veno-Echo.cpp **** 
 788:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 789:Veno-Echo.cpp **** {
 790:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 791:Veno-Echo.cpp **** }
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp **** void Update_DelayTimeL()
 794:Veno-Echo.cpp **** {
 795:Veno-Echo.cpp ****     static bool lastShift{};
 796:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 797:Veno-Echo.cpp ****     static pickupState Rev_DelayTime_pickup{};
 798:Veno-Echo.cpp ****     
 799:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 800:Veno-Echo.cpp ****     static float Rev_DelayTime_last{};
 801:Veno-Echo.cpp **** 
 802:Veno-Echo.cpp ****     //update pot values
 803:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 804:Veno-Echo.cpp **** 
 805:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 806:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 807:Veno-Echo.cpp ****     static int counterL{};
 808:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 809:Veno-Echo.cpp **** 
 810:Veno-Echo.cpp ****     if (!shift) //default control
 811:Veno-Echo.cpp ****     {
 812:Veno-Echo.cpp ****         //udpate pickup
 813:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 814:Veno-Echo.cpp ****         {
 815:Veno-Echo.cpp ****             lastShift = shift;
 816:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Last,delayTimeL_pickup,t
 817:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot;   //reset last value
 818:Veno-Echo.cpp ****         } 
 819:Veno-Echo.cpp ****         else    //not a recent shift change
 820:Veno-Echo.cpp ****         {
 821:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Last,delayTimeL_pickup,f
 822:Veno-Echo.cpp ****         }
 823:Veno-Echo.cpp **** 
 824:Veno-Echo.cpp ****         float delayTimeL{};
 825:Veno-Echo.cpp **** 
 826:Veno-Echo.cpp ****     if(delayTimeL_pickup)
 827:Veno-Echo.cpp ****     {
 828:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 829:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 830:Veno-Echo.cpp ****     }
 831:Veno-Echo.cpp **** 
 832:Veno-Echo.cpp ****     else
 833:Veno-Echo.cpp ****     {
 834:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 835:Veno-Echo.cpp ****     }
 836:Veno-Echo.cpp **** 
 837:Veno-Echo.cpp ****     if (!syncMode)
 838:Veno-Echo.cpp ****     {
 839:Veno-Echo.cpp ****         if (counterL == 0)
 840:Veno-Echo.cpp ****         {
 841:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 36


 842:Veno-Echo.cpp ****         }
 843:Veno-Echo.cpp ****     }
 844:Veno-Echo.cpp ****     else    //syncmode
 845:Veno-Echo.cpp ****     {
 846:Veno-Echo.cpp **** 
 847:Veno-Echo.cpp ****         if (counterL == 0)
 848:Veno-Echo.cpp ****         {
 849:Veno-Echo.cpp ****             //float div_L_Input{DelayTimeL};
 850:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 851:Veno-Echo.cpp ****             {
 852:Veno-Echo.cpp ****                 delayL_flag = true;
 853:Veno-Echo.cpp ****             }
 854:Veno-Echo.cpp ****         }
 855:Veno-Echo.cpp ****     }
 856:Veno-Echo.cpp **** }   //not shift mode
 857:Veno-Echo.cpp **** 
 858:Veno-Echo.cpp **** else    //shift mode
 859:Veno-Echo.cpp **** {
 860:Veno-Echo.cpp ****         
 861:Veno-Echo.cpp ****     if (shift != lastShift) //recent shift change
 862:Veno-Echo.cpp ****     {
 863:Veno-Echo.cpp ****         lastShift = shift;
 864:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState_alt(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime
 865:Veno-Echo.cpp ****     }
 866:Veno-Echo.cpp **** 
 867:Veno-Echo.cpp ****     else    //not a recent shift change
 868:Veno-Echo.cpp ****     {
 869:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState_alt(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime
 870:Veno-Echo.cpp ****     }
 871:Veno-Echo.cpp **** 
 872:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup == PICKEDUP)
 873:Veno-Echo.cpp ****     {
 874:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 875:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 876:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 877:Veno-Echo.cpp ****         //save setting:
 878:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 879:Veno-Echo.cpp ****         Rev_DelayTime_last = delayTimeL_Pot; //update last value
 880:Veno-Echo.cpp ****     }
 881:Veno-Echo.cpp **** }
 882:Veno-Echo.cpp ****     
 883:Veno-Echo.cpp **** }
 884:Veno-Echo.cpp **** 
 885:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 886:Veno-Echo.cpp **** {
 887:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 888:Veno-Echo.cpp **** }
 889:Veno-Echo.cpp **** 
 890:Veno-Echo.cpp **** void Update_DelayTimeR()
 891:Veno-Echo.cpp **** {
 892:Veno-Echo.cpp ****     static bool lastShift{};
 893:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 894:Veno-Echo.cpp ****     static pickupState tapRatio_pickup{};
 895:Veno-Echo.cpp ****     
 896:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 897:Veno-Echo.cpp ****     static float tapRatio_last{};
 898:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 37


 899:Veno-Echo.cpp ****     //update pot values
 900:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 901:Veno-Echo.cpp **** 
 902:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 903:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 904:Veno-Echo.cpp ****     static int counterR{};
 905:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 906:Veno-Echo.cpp **** 
 907:Veno-Echo.cpp ****     if (!shift) //default control
 908:Veno-Echo.cpp ****     {
 909:Veno-Echo.cpp ****         //udpate pickup
 910:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 911:Veno-Echo.cpp ****         {
 912:Veno-Echo.cpp ****             lastShift = shift;
 913:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Last,delayTimeR_pickup,t
 914:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;   //reset last value
 915:Veno-Echo.cpp ****         } 
 916:Veno-Echo.cpp ****         else    //not a default shift change
 917:Veno-Echo.cpp ****         {
 918:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Last,delayTimeR_pickup,f
 919:Veno-Echo.cpp ****         }
 920:Veno-Echo.cpp **** 
 921:Veno-Echo.cpp ****         float delayTimeR{};
 922:Veno-Echo.cpp **** 
 923:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 924:Veno-Echo.cpp ****         {
 925:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 926:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 927:Veno-Echo.cpp ****         }
 928:Veno-Echo.cpp **** 
 929:Veno-Echo.cpp ****         else
 930:Veno-Echo.cpp ****         {
 931:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 932:Veno-Echo.cpp ****         }
 933:Veno-Echo.cpp **** 
 934:Veno-Echo.cpp ****         if (!syncMode)
 935:Veno-Echo.cpp ****         {
 936:Veno-Echo.cpp ****             if (counterR == 0)
 937:Veno-Echo.cpp ****             {
 938:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 939:Veno-Echo.cpp ****             }
 940:Veno-Echo.cpp **** 
 941:Veno-Echo.cpp ****         }
 942:Veno-Echo.cpp ****         else    //syncmode
 943:Veno-Echo.cpp ****         {
 944:Veno-Echo.cpp ****             if (counterR == 0)
 945:Veno-Echo.cpp ****             {
 946:Veno-Echo.cpp ****                 //float div_R_Input{1.0f - delayTimeR}; //invert pot range
 947:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 948:Veno-Echo.cpp ****                 {
 949:Veno-Echo.cpp ****                     delayR_flag = true;
 950:Veno-Echo.cpp ****                 }
 951:Veno-Echo.cpp ****             }
 952:Veno-Echo.cpp ****         }
 953:Veno-Echo.cpp ****     }   //not shift mode
 954:Veno-Echo.cpp **** 
 955:Veno-Echo.cpp ****     else    //shift mode
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 38


 956:Veno-Echo.cpp ****     {
 957:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 958:Veno-Echo.cpp ****         {
 959:Veno-Echo.cpp ****             lastShift = shift;
 960:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState_alt(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,tru
 961:Veno-Echo.cpp ****         }
 962:Veno-Echo.cpp **** 
 963:Veno-Echo.cpp ****         else    //not a recent shift change
 964:Veno-Echo.cpp ****         {
 965:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState_alt(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,fal
 966:Veno-Echo.cpp ****         }
 967:Veno-Echo.cpp **** 
 968:Veno-Echo.cpp ****         if(tapRatio_pickup == PICKEDUP)
 969:Veno-Echo.cpp ****         {
 970:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 971:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 972:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 973:Veno-Echo.cpp ****             //save setting:
 974:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 975:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 976:Veno-Echo.cpp ****         }
 977:Veno-Echo.cpp ****     }
 978:Veno-Echo.cpp ****     
 979:Veno-Echo.cpp **** }
 980:Veno-Echo.cpp **** void Update_feedbackL_CV()
 981:Veno-Echo.cpp **** {
 982:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 983:Veno-Echo.cpp **** }
 984:Veno-Echo.cpp **** void Update_feedbackL()
 985:Veno-Echo.cpp **** {
 986:Veno-Echo.cpp ****     static bool lastShift{};
 987:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 988:Veno-Echo.cpp ****     static pickupState HPCutoff_pickup{};
 989:Veno-Echo.cpp **** 
 990:Veno-Echo.cpp ****     static float feedbackL_Last{};
 991:Veno-Echo.cpp ****     static float HPCutoff_Last{};
 992:Veno-Echo.cpp **** 
 993:Veno-Echo.cpp ****     //get pot values:
 994:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 995:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 996:Veno-Echo.cpp **** 
 997:Veno-Echo.cpp ****     if (!shift) //default controls
 998:Veno-Echo.cpp ****     {   
 999:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1000:Veno-Echo.cpp ****         {
1001:Veno-Echo.cpp ****             lastShift = shift;
1002:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
1003:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1004:Veno-Echo.cpp ****         } 
1005:Veno-Echo.cpp ****         else    //not a default shift change
1006:Veno-Echo.cpp ****         {
1007:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,false
1008:Veno-Echo.cpp ****         }
1009:Veno-Echo.cpp **** 
1010:Veno-Echo.cpp ****         float feedbackL_combo{};
1011:Veno-Echo.cpp **** 
1012:Veno-Echo.cpp ****         if(feedbackL_pickup)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 39


1013:Veno-Echo.cpp ****         {
1014:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1015:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1016:Veno-Echo.cpp ****         }
1017:Veno-Echo.cpp **** 
1018:Veno-Echo.cpp ****         else
1019:Veno-Echo.cpp ****         {
1020:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1021:Veno-Echo.cpp ****         }
1022:Veno-Echo.cpp ****   
1023:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1024:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1025:Veno-Echo.cpp ****     }
1026:Veno-Echo.cpp ****     else    //alternate controls
1027:Veno-Echo.cpp ****     {
1028:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1029:Veno-Echo.cpp ****         {
1030:Veno-Echo.cpp ****             lastShift = shift;
1031:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState_alt(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true
1032:Veno-Echo.cpp ****         }
1033:Veno-Echo.cpp **** 
1034:Veno-Echo.cpp ****         else    //not a recent shift change
1035:Veno-Echo.cpp ****         {
1036:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState_alt(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,fals
1037:Veno-Echo.cpp ****         }
1038:Veno-Echo.cpp **** 
1039:Veno-Echo.cpp ****         if(HPCutoff_pickup == PICKEDUP)
1040:Veno-Echo.cpp ****         {
1041:Veno-Echo.cpp ****             float HPCutoff{};
1042:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1043:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1044:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1045:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1046:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1047:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1048:Veno-Echo.cpp ****             HPCutoff_Last = feedbackL_Pot;  //update last value
1049:Veno-Echo.cpp ****         }
1050:Veno-Echo.cpp ****     }
1051:Veno-Echo.cpp **** }
1052:Veno-Echo.cpp **** 
1053:Veno-Echo.cpp **** void Update_feedbackR_CV()
1054:Veno-Echo.cpp **** {
1055:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1056:Veno-Echo.cpp **** }
1057:Veno-Echo.cpp **** 
1058:Veno-Echo.cpp **** void Update_feedbackR()
1059:Veno-Echo.cpp **** {
1060:Veno-Echo.cpp ****     static bool lastShift{};
1061:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1062:Veno-Echo.cpp ****     static pickupState LPCutoff_pickup{};
1063:Veno-Echo.cpp **** 
1064:Veno-Echo.cpp ****     static float feedbackR_Last{};
1065:Veno-Echo.cpp ****     static float LPCutoff_Last{};
1066:Veno-Echo.cpp **** 
1067:Veno-Echo.cpp ****     //get pot values:
1068:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1069:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 40


1070:Veno-Echo.cpp ****     if (!shift) //default controls
1071:Veno-Echo.cpp ****     {   
1072:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1073:Veno-Echo.cpp ****         {
1074:Veno-Echo.cpp ****             lastShift = shift;
1075:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
1076:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1077:Veno-Echo.cpp ****         } 
1078:Veno-Echo.cpp ****         else    //not a default shift change
1079:Veno-Echo.cpp ****         {
1080:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,false
1081:Veno-Echo.cpp ****         }
1082:Veno-Echo.cpp **** 
1083:Veno-Echo.cpp ****         float feedbackR_combo{};
1084:Veno-Echo.cpp ****         
1085:Veno-Echo.cpp ****         if(feedbackR_pickup)
1086:Veno-Echo.cpp ****         {
1087:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1088:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1089:Veno-Echo.cpp ****         }
1090:Veno-Echo.cpp **** 
1091:Veno-Echo.cpp ****         else
1092:Veno-Echo.cpp ****         {
1093:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1094:Veno-Echo.cpp ****         }
1095:Veno-Echo.cpp **** 
1096:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1097:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1098:Veno-Echo.cpp ****     }
1099:Veno-Echo.cpp ****     else    //alternate controls
1100:Veno-Echo.cpp ****     {
1101:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1102:Veno-Echo.cpp ****         {
1103:Veno-Echo.cpp ****             lastShift = shift;
1104:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState_alt(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true
1105:Veno-Echo.cpp ****         }
1106:Veno-Echo.cpp **** 
1107:Veno-Echo.cpp ****         else    //not a recent shift change
1108:Veno-Echo.cpp ****         {
1109:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState_alt(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,fals
1110:Veno-Echo.cpp ****         }
1111:Veno-Echo.cpp **** 
1112:Veno-Echo.cpp ****         if(LPCutoff_pickup == PICKEDUP)
1113:Veno-Echo.cpp ****         {
1114:Veno-Echo.cpp ****             float LPCutoff{};
1115:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1116:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1117:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1118:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1119:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1120:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1121:Veno-Echo.cpp ****             LPCutoff_Last = feedbackR_Pot;  //update last value
1122:Veno-Echo.cpp ****         }
1123:Veno-Echo.cpp ****     }
1124:Veno-Echo.cpp **** }
1125:Veno-Echo.cpp **** 
1126:Veno-Echo.cpp **** void Update_drywet_CV()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 41


1127:Veno-Echo.cpp **** {
1128:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1129:Veno-Echo.cpp **** }
1130:Veno-Echo.cpp **** 
1131:Veno-Echo.cpp **** void Update_drywet()
1132:Veno-Echo.cpp **** {
1133:Veno-Echo.cpp ****     static bool lastShift{};
1134:Veno-Echo.cpp ****     static bool drywet_pickup{};
1135:Veno-Echo.cpp ****     static pickupState Res_pickup{};
1136:Veno-Echo.cpp **** 
1137:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1138:Veno-Echo.cpp ****     static float Res_Last{}; //last res value (unscaled)
1139:Veno-Echo.cpp **** 
1140:Veno-Echo.cpp ****     //get pot values:
1141:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1142:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1143:Veno-Echo.cpp **** 
1144:Veno-Echo.cpp ****     if (!shift) //default controls
1145:Veno-Echo.cpp ****     {   
1146:Veno-Echo.cpp **** 
1147:Veno-Echo.cpp ****         static float drywet_new{};
1148:Veno-Echo.cpp **** 
1149:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1150:Veno-Echo.cpp ****         {
1151:Veno-Echo.cpp ****             lastShift = shift;
1152:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1153:Veno-Echo.cpp ****             drywet_pickup = false;
1154:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1155:Veno-Echo.cpp ****         } 
1156:Veno-Echo.cpp ****         
1157:Veno-Echo.cpp ****         else    //not a recent shift change
1158:Veno-Echo.cpp ****         {
1159:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1160:Veno-Echo.cpp ****             {
1161:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1162:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1163:Veno-Echo.cpp ****                 {
1164:Veno-Echo.cpp ****                     drywet_pickup = true;
1165:Veno-Echo.cpp ****                     drywet_new = drywet_Pot;   //update new
1166:Veno-Echo.cpp ****                 }
1167:Veno-Echo.cpp ****             }
1168:Veno-Echo.cpp **** 
1169:Veno-Echo.cpp ****         }
1170:Veno-Echo.cpp ****         
1171:Veno-Echo.cpp ****         float drywetcombo{};
1172:Veno-Echo.cpp **** 
1173:Veno-Echo.cpp ****         if (drywet_pickup)
1174:Veno-Echo.cpp ****         {
1175:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1176:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1177:Veno-Echo.cpp ****         }
1178:Veno-Echo.cpp **** 
1179:Veno-Echo.cpp ****         else
1180:Veno-Echo.cpp ****         {
1181:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1182:Veno-Echo.cpp ****         }
1183:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 42


1184:Veno-Echo.cpp ****         float drywetTarget{};
1185:Veno-Echo.cpp **** 
1186:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1187:Veno-Echo.cpp ****         {
1188:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1189:Veno-Echo.cpp ****         }
1190:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1191:Veno-Echo.cpp ****         {
1192:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1193:Veno-Echo.cpp ****         }
1194:Veno-Echo.cpp ****         else
1195:Veno-Echo.cpp ****         {
1196:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
1197:Veno-Echo.cpp ****         }
1198:Veno-Echo.cpp **** 
1199:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1200:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1201:Veno-Echo.cpp ****     }
1202:Veno-Echo.cpp ****     else    //alternate controls
1203:Veno-Echo.cpp ****     {
1204:Veno-Echo.cpp **** 
1205:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1206:Veno-Echo.cpp ****         {
1207:Veno-Echo.cpp ****             lastShift = shift;
1208:Veno-Echo.cpp ****             Res_pickup = checkPickupState_alt(drywet_Pot,Res_Last,Res_pickup,true);
1209:Veno-Echo.cpp ****         }
1210:Veno-Echo.cpp **** 
1211:Veno-Echo.cpp ****         else    //not a recent shift change
1212:Veno-Echo.cpp ****         {
1213:Veno-Echo.cpp ****             Res_pickup = checkPickupState_alt(drywet_Pot,Res_Last,Res_pickup,false);
1214:Veno-Echo.cpp ****         }
1215:Veno-Echo.cpp **** 
1216:Veno-Echo.cpp ****         if(Res_pickup == PICKEDUP)
1217:Veno-Echo.cpp ****         {
1218:Veno-Echo.cpp ****             float Res{};
1219:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1220:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1221:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1222:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1223:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1224:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1225:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1226:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1227:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1228:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1229:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
1230:Veno-Echo.cpp ****         }
1231:Veno-Echo.cpp ****     }
1232:Veno-Echo.cpp **** }
1233:Veno-Echo.cpp **** 
1234:Veno-Echo.cpp **** void Update_width_CV()
1235:Veno-Echo.cpp **** {
1236:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1237:Veno-Echo.cpp **** }
1238:Veno-Echo.cpp **** 
1239:Veno-Echo.cpp **** void Update_width()
1240:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 43


1241:Veno-Echo.cpp ****     //get pot values:
1242:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1243:Veno-Echo.cpp **** 
1244:Veno-Echo.cpp ****     static float width_Pot_Last{};
1245:Veno-Echo.cpp **** 
1246:Veno-Echo.cpp ****     if (!shift) //default controls
1247:Veno-Echo.cpp ****     {   
1248:Veno-Echo.cpp ****         //update last values if shift off
1249:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
1250:Veno-Echo.cpp **** 
1251:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
1252:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
1253:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
1254:Veno-Echo.cpp ****     }
1255:Veno-Echo.cpp ****     else    //alternate controls
1256:Veno-Echo.cpp ****     {
1257:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
1258:Veno-Echo.cpp ****         {
1259:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1260:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1261:Veno-Echo.cpp ****         }
1262:Veno-Echo.cpp **** 
1263:Veno-Echo.cpp ****     }
1264:Veno-Echo.cpp **** }
1265:Veno-Echo.cpp **** 
1266:Veno-Echo.cpp **** void Update_crossfeedback()
1267:Veno-Echo.cpp **** {
1268:Veno-Echo.cpp ****     //get pot values:
1269:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1270:Veno-Echo.cpp **** 
1271:Veno-Echo.cpp ****     static float crossfeedback_Pot_Last{};
1272:Veno-Echo.cpp **** 
1273:Veno-Echo.cpp ****     if (!shift) //default controls
1274:Veno-Echo.cpp ****     {   
1275:Veno-Echo.cpp ****         //update last values if shift off
1276:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
1277:Veno-Echo.cpp **** 
1278:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
1279:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1280:Veno-Echo.cpp **** 
1281:Veno-Echo.cpp ****     }
1282:Veno-Echo.cpp ****     else    //alternate controls
1283:Veno-Echo.cpp ****     {
1284:Veno-Echo.cpp ****         static float modRate{};
1285:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
1286:Veno-Echo.cpp ****         {
1287:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
1288:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1289:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1290:Veno-Echo.cpp ****         }
1291:Veno-Echo.cpp ****     }
1292:Veno-Echo.cpp **** }
1293:Veno-Echo.cpp **** 
1294:Veno-Echo.cpp **** void Update_filterXfade()
1295:Veno-Echo.cpp **** {
1296:Veno-Echo.cpp ****     //get pot values:
1297:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 44


1298:Veno-Echo.cpp **** 
1299:Veno-Echo.cpp ****     static float filterXfade_Pot_Last{};
1300:Veno-Echo.cpp **** 
1301:Veno-Echo.cpp ****     if (!shift) //default controls
1302:Veno-Echo.cpp ****     {   
1303:Veno-Echo.cpp ****         //update last values if shift off
1304:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
1305:Veno-Echo.cpp **** 
1306:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
1307:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1308:Veno-Echo.cpp **** 
1309:Veno-Echo.cpp ****     }
1310:Veno-Echo.cpp ****     else    //alternate controls
1311:Veno-Echo.cpp ****     {
1312:Veno-Echo.cpp ****         //static float modRate{};
1313:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
1314:Veno-Echo.cpp ****         {
1315:Veno-Echo.cpp **** 
1316:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1317:Veno-Echo.cpp ****             {
1318:Veno-Echo.cpp ****                 PostFilters = false;
1319:Veno-Echo.cpp ****             }
1320:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1321:Veno-Echo.cpp ****             {
1322:Veno-Echo.cpp ****                 
1323:Veno-Echo.cpp ****                 PostFilters = true;
1324:Veno-Echo.cpp ****             }
1325:Veno-Echo.cpp ****             else
1326:Veno-Echo.cpp ****             {
1327:Veno-Echo.cpp ****               //do nothing
1328:Veno-Echo.cpp ****             }
1329:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1330:Veno-Echo.cpp ****         }
1331:Veno-Echo.cpp ****     }
1332:Veno-Echo.cpp **** }
1333:Veno-Echo.cpp **** 
1334:Veno-Echo.cpp **** void GetModCV()
1335:Veno-Echo.cpp **** {
1336:Veno-Echo.cpp ****     //get modulation CV input
1337:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1338:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1339:Veno-Echo.cpp **** }
1340:Veno-Echo.cpp **** 
1341:Veno-Echo.cpp **** void Update_Mod()
1342:Veno-Echo.cpp **** {    
1343:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1344:Veno-Echo.cpp ****     static float modulation_CV{};
1345:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1346:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1347:Veno-Echo.cpp ****     //calculate InternalMod
1348:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1349:Veno-Echo.cpp ****     //apply modulation to delay lines
1350:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1351:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1352:Veno-Echo.cpp **** }
1353:Veno-Echo.cpp **** 
1354:Veno-Echo.cpp **** void UpdateClock()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 45


1355:Veno-Echo.cpp **** {
1356:Veno-Echo.cpp ****     static int divCounter{};
1357:Veno-Echo.cpp ****     ClockIn.Debounce();
1358:Veno-Echo.cpp **** 
1359:Veno-Echo.cpp ****     //if clock in pulse received
1360:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1361:Veno-Echo.cpp ****     {   
1362:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1363:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1364:Veno-Echo.cpp ****         if(divCounter == 0)
1365:Veno-Echo.cpp ****         {
1366:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
1367:Veno-Echo.cpp ****             {
1368:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1369:Veno-Echo.cpp ****                 if(syncMode)
1370:Veno-Echo.cpp ****                 {
1371:Veno-Echo.cpp ****                     if(div_L <= UNITY)
1372:Veno-Echo.cpp ****                     {
1373:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
1374:Veno-Echo.cpp ****                     }
1375:Veno-Echo.cpp **** 
1376:Veno-Echo.cpp ****                     if(div_R <= UNITY)
1377:Veno-Echo.cpp ****                     {
1378:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
1379:Veno-Echo.cpp ****                     }
1380:Veno-Echo.cpp ****                 }
1381:Veno-Echo.cpp ****             }
1382:Veno-Echo.cpp ****         }
1383:Veno-Echo.cpp ****     }
1384:Veno-Echo.cpp ****     
1385:Veno-Echo.cpp **** }
1386:Veno-Echo.cpp **** 
1387:Veno-Echo.cpp **** void Update_Buttons()
1388:Veno-Echo.cpp **** {  
1389:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1390:Veno-Echo.cpp ****     static uint32_t resetTime{};
1391:Veno-Echo.cpp ****     static int buttonstate{};
1392:Veno-Echo.cpp **** 
1393:Veno-Echo.cpp ****     Rev_L_sw.update();
1394:Veno-Echo.cpp ****     Rev_R_sw.update();
1395:Veno-Echo.cpp ****     LPF_sw.update();
1396:Veno-Echo.cpp ****     HPF_sw.update();
1397:Veno-Echo.cpp ****     Tap_Button.update();
1398:Veno-Echo.cpp **** 
1399:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1400:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1401:Veno-Echo.cpp ****     //TapButton.Debounce();
1402:Veno-Echo.cpp ****     Sync.Debounce();
1403:Veno-Echo.cpp ****     ClockIn.Debounce();
1404:Veno-Echo.cpp ****     //gate inputs
1405:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1406:Veno-Echo.cpp ****     {
1407:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1408:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1409:Veno-Echo.cpp ****     }
1410:Veno-Echo.cpp **** 
1411:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 46


1412:Veno-Echo.cpp ****     {
1413:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1414:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1415:Veno-Echo.cpp ****     }
1416:Veno-Echo.cpp **** 
1417:Veno-Echo.cpp ****     //buttons
1418:Veno-Echo.cpp **** 
1419:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1420:Veno-Echo.cpp ****     {
1421:Veno-Echo.cpp ****         buttonstate += 1;
1422:Veno-Echo.cpp ****         if (buttonstate == 3)
1423:Veno-Echo.cpp ****         {
1424:Veno-Echo.cpp ****             resetTime = System::GetNow();
1425:Veno-Echo.cpp ****         }
1426:Veno-Echo.cpp ****     }
1427:Veno-Echo.cpp **** 
1428:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1429:Veno-Echo.cpp ****     {
1430:Veno-Echo.cpp ****         buttonstate -= 1;
1431:Veno-Echo.cpp ****     }
1432:Veno-Echo.cpp **** 
1433:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1434:Veno-Echo.cpp ****     {
1435:Veno-Echo.cpp ****         buttonstate += 1;
1436:Veno-Echo.cpp ****         if (buttonstate == 3)
1437:Veno-Echo.cpp ****         {
1438:Veno-Echo.cpp ****             resetTime = System::GetNow();
1439:Veno-Echo.cpp ****         }
1440:Veno-Echo.cpp ****     }
1441:Veno-Echo.cpp **** 
1442:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1443:Veno-Echo.cpp ****     {
1444:Veno-Echo.cpp ****         buttonstate -= 1;
1445:Veno-Echo.cpp ****     }
1446:Veno-Echo.cpp **** 
1447:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1448:Veno-Echo.cpp ****     {
1449:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1450:Veno-Echo.cpp ****         {
1451:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1452:Veno-Echo.cpp ****         }
1453:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1454:Veno-Echo.cpp ****         
1455:Veno-Echo.cpp ****         if(syncMode)
1456:Veno-Echo.cpp ****         {
1457:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1458:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1459:Veno-Echo.cpp ****         }
1460:Veno-Echo.cpp **** 
1461:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1462:Veno-Echo.cpp ****         buttonstate += 1;
1463:Veno-Echo.cpp ****         
1464:Veno-Echo.cpp ****         if (buttonstate == 3)
1465:Veno-Echo.cpp ****         {
1466:Veno-Echo.cpp ****             resetTime = System::GetNow();
1467:Veno-Echo.cpp ****         }
1468:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 47


1469:Veno-Echo.cpp ****     }
1470:Veno-Echo.cpp **** 
1471:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1472:Veno-Echo.cpp ****     {
1473:Veno-Echo.cpp ****         shift = false;
1474:Veno-Echo.cpp ****         buttonstate -= 1;
1475:Veno-Echo.cpp ****         mute = false;
1476:Veno-Echo.cpp ****     }
1477:Veno-Echo.cpp **** 
1478:Veno-Echo.cpp ****     if (Tap_Button.getState())
1479:Veno-Echo.cpp ****     {
1480:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1481:Veno-Echo.cpp ****         {
1482:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1483:Veno-Echo.cpp ****         } 
1484:Veno-Echo.cpp ****     }
1485:Veno-Echo.cpp **** 
1486:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1487:Veno-Echo.cpp ****     {
1488:Veno-Echo.cpp ****         /*
1489:Veno-Echo.cpp ****             if(!save_flag)
1490:Veno-Echo.cpp ****             {
1491:Veno-Echo.cpp ****                 save_flag = true; 
1492:Veno-Echo.cpp ****             }
1493:Veno-Echo.cpp ****         */
1494:Veno-Echo.cpp **** 
1495:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1496:Veno-Echo.cpp ****             {
1497:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1498:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1499:Veno-Echo.cpp ****                 ResetAllLEDs();
1500:Veno-Echo.cpp ****                 //don't let reset or shift update
1501:Veno-Echo.cpp ****                 shift = false;
1502:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1503:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1504:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1505:Veno-Echo.cpp ****             }
1506:Veno-Echo.cpp ****     } 
1507:Veno-Echo.cpp **** 
1508:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1509:Veno-Echo.cpp **** 
1510:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
1511:Veno-Echo.cpp ****     {
1512:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1513:Veno-Echo.cpp ****         //delayL.tempoled.resetPhase();
1514:Veno-Echo.cpp ****         //delayR.tempoled.resetPhase();
1515:Veno-Echo.cpp ****         delayL_flag = true;
1516:Veno-Echo.cpp ****         delayR_flag = true;
1517:Veno-Echo.cpp ****     }
1518:Veno-Echo.cpp **** 
1519:Veno-Echo.cpp **** }
1520:Veno-Echo.cpp **** 
1521:Veno-Echo.cpp **** void Update_BaseTempoLED()
1522:Veno-Echo.cpp **** {
1523:Veno-Echo.cpp ****     tempoLED_BASE.update();
1524:Veno-Echo.cpp **** 
1525:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 48


1526:Veno-Echo.cpp ****     {
1527:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
1528:Veno-Echo.cpp ****         {
1529:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1530:Veno-Echo.cpp ****             delayL_flag = false;
1531:Veno-Echo.cpp ****         }
1532:Veno-Echo.cpp **** 
1533:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
1534:Veno-Echo.cpp ****         {
1535:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1536:Veno-Echo.cpp ****             delayR_flag = false;
1537:Veno-Echo.cpp ****         }
1538:Veno-Echo.cpp **** 
1539:Veno-Echo.cpp ****     }
1540:Veno-Echo.cpp **** }
1541:Veno-Echo.cpp **** 
1542:Veno-Echo.cpp **** //input a float (range 0 to 1) and address of TempoDivs to update
1543:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
1544:Veno-Echo.cpp **** {
1545:Veno-Echo.cpp **** 
1546:Veno-Echo.cpp ****     float retVal{};
1547:Veno-Echo.cpp **** 
1548:Veno-Echo.cpp ****     if (input < 0.0909f)
1549:Veno-Echo.cpp ****     {
1550:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
1551:Veno-Echo.cpp ****         *div = DIV6;
1552:Veno-Echo.cpp ****     }
1553:Veno-Echo.cpp **** 
1554:Veno-Echo.cpp ****     else if (input < 0.1818f)
1555:Veno-Echo.cpp ****     {
1556:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
1557:Veno-Echo.cpp ****        *div = DIV5;
1558:Veno-Echo.cpp ****     }
1559:Veno-Echo.cpp **** 
1560:Veno-Echo.cpp ****     else if (input < 0.2727f)
1561:Veno-Echo.cpp ****     {
1562:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
1563:Veno-Echo.cpp ****         *div = DIV4;
1564:Veno-Echo.cpp ****     }
1565:Veno-Echo.cpp **** 
1566:Veno-Echo.cpp ****     else if (input < 0.3636f)
1567:Veno-Echo.cpp ****     {
1568:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
1569:Veno-Echo.cpp ****         *div = DIV3;
1570:Veno-Echo.cpp ****     }
1571:Veno-Echo.cpp **** 
1572:Veno-Echo.cpp ****     else if (input < 0.4545f)
1573:Veno-Echo.cpp ****     {
1574:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
1575:Veno-Echo.cpp ****         *div = DIV2;
1576:Veno-Echo.cpp ****     }
1577:Veno-Echo.cpp **** 
1578:Veno-Echo.cpp ****     else if (input <  0.5455f)
1579:Veno-Echo.cpp ****     {
1580:Veno-Echo.cpp ****         retVal = (1.0f);
1581:Veno-Echo.cpp ****         *div = UNITY;
1582:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 49


1583:Veno-Echo.cpp **** 
1584:Veno-Echo.cpp ****     else if (input < 0.6364f)
1585:Veno-Echo.cpp ****     {
1586:Veno-Echo.cpp ****         retVal = 2.0f;
1587:Veno-Echo.cpp ****         *div = MULT2;
1588:Veno-Echo.cpp ****     }
1589:Veno-Echo.cpp **** 
1590:Veno-Echo.cpp ****     else if (input < 0.7273f)
1591:Veno-Echo.cpp ****     {
1592:Veno-Echo.cpp ****         retVal = 3.0f;
1593:Veno-Echo.cpp ****         *div = MULT3;
1594:Veno-Echo.cpp ****     }
1595:Veno-Echo.cpp **** 
1596:Veno-Echo.cpp ****     else if (input < 0.8182f)
1597:Veno-Echo.cpp ****     {
1598:Veno-Echo.cpp ****         retVal = 4.0f;
1599:Veno-Echo.cpp ****         *div = MULT4;
1600:Veno-Echo.cpp ****     }
1601:Veno-Echo.cpp ****     
1602:Veno-Echo.cpp ****     else if (input < 0.9091f)
1603:Veno-Echo.cpp ****     {
1604:Veno-Echo.cpp ****         retVal = 5.0f;
1605:Veno-Echo.cpp ****         *div = MULT5;
1606:Veno-Echo.cpp ****     }
1607:Veno-Echo.cpp **** 
1608:Veno-Echo.cpp ****     else if (input <= 1.0f)
1609:Veno-Echo.cpp ****     {
1610:Veno-Echo.cpp ****        retVal = 6.0f; 
1611:Veno-Echo.cpp ****        *div = MULT6;
1612:Veno-Echo.cpp ****     }
1613:Veno-Echo.cpp ****     else
1614:Veno-Echo.cpp ****     {
1615:Veno-Echo.cpp ****         retVal = 1.0f; 
1616:Veno-Echo.cpp ****        *div = UNITY;
1617:Veno-Echo.cpp ****     }
1618:Veno-Echo.cpp ****     
1619:Veno-Echo.cpp **** return retVal;
1620:Veno-Echo.cpp **** 
1621:Veno-Echo.cpp **** }
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
1624:Veno-Echo.cpp **** {
1625:Veno-Echo.cpp ****     float retVal{};
1626:Veno-Echo.cpp ****     switch(ratio)
1627:Veno-Echo.cpp ****     {
1628:Veno-Echo.cpp ****         case QUARTER:
1629:Veno-Echo.cpp ****         retVal = 1.0f;
1630:Veno-Echo.cpp ****         break;
1631:Veno-Echo.cpp **** 
1632:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1633:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1634:Veno-Echo.cpp ****         break;
1635:Veno-Echo.cpp **** 
1636:Veno-Echo.cpp ****         case EIGHT:
1637:Veno-Echo.cpp ****         retVal = 2.0f;
1638:Veno-Echo.cpp ****         break;
1639:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 50


1640:Veno-Echo.cpp ****         case TWELVE:
1641:Veno-Echo.cpp ****         retVal = 3.0f;
1642:Veno-Echo.cpp ****         break;
1643:Veno-Echo.cpp **** 
1644:Veno-Echo.cpp ****         default:
1645:Veno-Echo.cpp ****         retVal = 1.0f;
1646:Veno-Echo.cpp ****         break;
1647:Veno-Echo.cpp ****     }
1648:Veno-Echo.cpp **** 
1649:Veno-Echo.cpp **** return retVal;
1650:Veno-Echo.cpp **** }
1651:Veno-Echo.cpp **** 
1652:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1653:Veno-Echo.cpp **** {
1654:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1655:Veno-Echo.cpp ****     {
1656:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1657:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1658:Veno-Echo.cpp ****     }
1659:Veno-Echo.cpp ****     else
1660:Veno-Echo.cpp ****     {
1661:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1662:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1663:Veno-Echo.cpp ****     }
1664:Veno-Echo.cpp **** 
1665:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1666:Veno-Echo.cpp ****     {
1667:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1668:Veno-Echo.cpp ****     }
1669:Veno-Echo.cpp ****     else
1670:Veno-Echo.cpp ****     {
1671:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1672:Veno-Echo.cpp ****     }
1673:Veno-Echo.cpp **** 
1674:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1675:Veno-Echo.cpp ****     {
1676:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1677:Veno-Echo.cpp ****     }
1678:Veno-Echo.cpp ****     else
1679:Veno-Echo.cpp ****     {
1680:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1681:Veno-Echo.cpp ****     }
1682:Veno-Echo.cpp **** 
1683:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1684:Veno-Echo.cpp ****     {
1685:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1686:Veno-Echo.cpp ****     }
1687:Veno-Echo.cpp ****     else
1688:Veno-Echo.cpp ****     {
1689:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1690:Veno-Echo.cpp ****     }
1691:Veno-Echo.cpp **** 
1692:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1693:Veno-Echo.cpp ****     {
1694:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1695:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1696:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 51


1697:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1698:Veno-Echo.cpp ****     }
1699:Veno-Echo.cpp ****     else
1700:Veno-Echo.cpp ****     {
1701:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1702:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1703:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1704:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1705:Veno-Echo.cpp ****     }
1706:Veno-Echo.cpp ****     
1707:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1708:Veno-Echo.cpp ****     {
1709:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1710:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1711:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1712:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1713:Veno-Echo.cpp ****     }
1714:Veno-Echo.cpp ****     else
1715:Veno-Echo.cpp ****     {
1716:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1717:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1718:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1719:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1720:Veno-Echo.cpp **** 
1721:Veno-Echo.cpp ****     }
1722:Veno-Echo.cpp **** 
1723:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1724:Veno-Echo.cpp ****     {
1725:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1726:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1727:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1728:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1729:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1730:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1731:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1732:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1733:Veno-Echo.cpp ****     }
1734:Veno-Echo.cpp **** 
1735:Veno-Echo.cpp ****     else
1736:Veno-Echo.cpp ****     {
1737:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1738:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1739:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1740:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1741:Veno-Echo.cpp ****     }
1742:Veno-Echo.cpp **** 
1743:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1744:Veno-Echo.cpp ****     {
1745:Veno-Echo.cpp ****         PostFilters = false;
1746:Veno-Echo.cpp ****     }
1747:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1748:Veno-Echo.cpp ****     {
1749:Veno-Echo.cpp ****         PostFilters = true;
1750:Veno-Echo.cpp ****     }
1751:Veno-Echo.cpp ****     else
1752:Veno-Echo.cpp ****     {
1753:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 52


1754:Veno-Echo.cpp ****     }
1755:Veno-Echo.cpp **** 
1756:Veno-Echo.cpp **** }
1757:Veno-Echo.cpp **** 
1758:Veno-Echo.cpp **** void TurnOnAllLEDs()
1759:Veno-Echo.cpp **** {
1760:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1761:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1762:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1763:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1764:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1765:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1766:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1767:Veno-Echo.cpp **** }
1768:Veno-Echo.cpp **** 
1769:Veno-Echo.cpp **** void ResetAllLEDs()
1770:Veno-Echo.cpp **** {
1771:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1772:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1773:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1774:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1775:Veno-Echo.cpp ****     {
1776:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1777:Veno-Echo.cpp ****     }
1778:Veno-Echo.cpp ****     else
1779:Veno-Echo.cpp ****     {
1780:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1781:Veno-Echo.cpp ****     }
1782:Veno-Echo.cpp **** 
1783:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1784:Veno-Echo.cpp ****     {
1785:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1786:Veno-Echo.cpp ****     }
1787:Veno-Echo.cpp ****     else
1788:Veno-Echo.cpp ****     {
1789:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1790:Veno-Echo.cpp ****     }
1791:Veno-Echo.cpp ****     
1792:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1793:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1794:Veno-Echo.cpp **** }
1795:Veno-Echo.cpp **** 
1796:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1797:Veno-Echo.cpp **** {
1798:Veno-Echo.cpp ****     float returnval{};
1799:Veno-Echo.cpp ****     if (input > limit)
1800:Veno-Echo.cpp ****         returnval = limit;
1801:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1802:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1803:Veno-Echo.cpp ****     else
1804:Veno-Echo.cpp ****         returnval = input;
1805:Veno-Echo.cpp **** 
1806:Veno-Echo.cpp ****     return returnval;   
1807:Veno-Echo.cpp **** }
1808:Veno-Echo.cpp **** 
1809:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
1810:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 53


1811:Veno-Echo.cpp ****     float output{};
1812:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
1813:Veno-Echo.cpp **** 
1814:Veno-Echo.cpp ****     if(output < 0.0f)
1815:Veno-Echo.cpp ****     {
1816:Veno-Echo.cpp ****         output = 0.0f;
1817:Veno-Echo.cpp ****     }
1818:Veno-Echo.cpp **** 
1819:Veno-Echo.cpp ****     if(output > 1.0f)
1820:Veno-Echo.cpp ****     {
1821:Veno-Echo.cpp ****         output = 1.0f;
1822:Veno-Echo.cpp ****     }
1823:Veno-Echo.cpp **** 
1824:Veno-Echo.cpp ****     return output;
1825:Veno-Echo.cpp **** }
1826:Veno-Echo.cpp **** 
1827:Veno-Echo.cpp **** //checks pickup state of primary controls
1828:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
1829:Veno-Echo.cpp **** {
1830:Veno-Echo.cpp ****     bool retval{};
1831:Veno-Echo.cpp ****     
1832:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
1833:Veno-Echo.cpp ****     {
1834:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1835:Veno-Echo.cpp ****         {
1836:Veno-Echo.cpp ****             retval = false;
1837:Veno-Echo.cpp ****         }
1838:Veno-Echo.cpp ****         else
1839:Veno-Echo.cpp ****         {
1840:Veno-Echo.cpp ****             retval = true;
1841:Veno-Echo.cpp ****         }
1842:Veno-Echo.cpp ****     }
1843:Veno-Echo.cpp **** 
1844:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
1845:Veno-Echo.cpp ****     {
1846:Veno-Echo.cpp ****     if(!lastState) //if not picked up
1847:Veno-Echo.cpp ****     {
1848:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1849:Veno-Echo.cpp ****         {
1850:Veno-Echo.cpp ****             retval = true;
1851:Veno-Echo.cpp ****         }
1852:Veno-Echo.cpp **** 
1853:Veno-Echo.cpp ****         else
1854:Veno-Echo.cpp ****         {
1855:Veno-Echo.cpp ****             retval = false;
1856:Veno-Echo.cpp ****         }
1857:Veno-Echo.cpp **** 
1858:Veno-Echo.cpp ****     }
1859:Veno-Echo.cpp ****     else    //previous state is picked up
1860:Veno-Echo.cpp ****     {
1861:Veno-Echo.cpp ****         retval = true;  //always return true
1862:Veno-Echo.cpp ****     }
1863:Veno-Echo.cpp **** 
1864:Veno-Echo.cpp ****     }
1865:Veno-Echo.cpp ****     return retval;
1866:Veno-Echo.cpp **** 
1867:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 54


1868:Veno-Echo.cpp **** 
1869:Veno-Echo.cpp **** //Checks pickup state of secondary controls
1870:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 437              		.loc 19 1870 13 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
1871:Veno-Echo.cpp **** {
1872:Veno-Echo.cpp ****     pickupState retval{};
1873:Veno-Echo.cpp **** 
1874:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1875:Veno-Echo.cpp ****     {
1876:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1877:Veno-Echo.cpp ****         {
1878:Veno-Echo.cpp ****             retval = BELOW;
1879:Veno-Echo.cpp ****         }
1880:Veno-Echo.cpp ****         
1881:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1882:Veno-Echo.cpp ****         {
1883:Veno-Echo.cpp ****             retval = ABOVE;
1884:Veno-Echo.cpp ****         }
1885:Veno-Echo.cpp **** 
1886:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1887:Veno-Echo.cpp ****         {
1888:Veno-Echo.cpp ****             retval = PICKEDUP;
1889:Veno-Echo.cpp ****         }
1890:Veno-Echo.cpp ****     }
1891:Veno-Echo.cpp **** 
1892:Veno-Echo.cpp ****     else    //not a recent shift change
1893:Veno-Echo.cpp ****     {
1894:Veno-Echo.cpp ****         switch(lastState)
 442              		.loc 19 1894 9 view .LVU50
 443 0000 0128     		cmp	r0, #1
 444 0002 04D0     		beq	.L17
 445 0004 0228     		cmp	r0, #2
 446 0006 01D0     		beq	.L18
 447 0008 68B1     		cbz	r0, .L23
 448 000a 0020     		movs	r0, #0
 449              	.LVL15:
 450              	.L18:
1895:Veno-Echo.cpp ****         {
1896:Veno-Echo.cpp ****             case BELOW:
1897:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1898:Veno-Echo.cpp ****                 retval = PICKEDUP;
1899:Veno-Echo.cpp ****             else
1900:Veno-Echo.cpp ****                 retval = lastState;
1901:Veno-Echo.cpp ****             break;
1902:Veno-Echo.cpp **** 
1903:Veno-Echo.cpp ****             case ABOVE:
1904:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1905:Veno-Echo.cpp ****                 retval = PICKEDUP;
1906:Veno-Echo.cpp ****             else
1907:Veno-Echo.cpp ****                 retval = lastState;
1908:Veno-Echo.cpp ****             break;
1909:Veno-Echo.cpp ****             case PICKEDUP:
1910:Veno-Echo.cpp ****                 retval = lastState;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 55


1911:Veno-Echo.cpp ****             break;
1912:Veno-Echo.cpp ****         }
1913:Veno-Echo.cpp ****     }
1914:Veno-Echo.cpp ****     
1915:Veno-Echo.cpp ****     return retval;
 451              		.loc 19 1915 5 view .LVU51
1916:Veno-Echo.cpp **** }
 452              		.loc 19 1916 1 is_stmt 0 view .LVU52
 453 000c 7047     		bx	lr
 454              	.LVL16:
 455              	.L17:
1903:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 456              		.loc 19 1903 13 is_stmt 1 view .LVU53
1904:Veno-Echo.cpp ****                 retval = PICKEDUP;
 457              		.loc 19 1904 13 view .LVU54
1904:Veno-Echo.cpp ****                 retval = PICKEDUP;
 458              		.loc 19 1904 35 is_stmt 0 view .LVU55
 459 000e DFED0C7A 		vldr.32	s15, .L24
 460 0012 70EEA70A 		vadd.f32	s1, s1, s15
 461              	.LVL17:
1904:Veno-Echo.cpp ****                 retval = PICKEDUP;
 462              		.loc 19 1904 13 view .LVU56
 463 0016 B4EEE00A 		vcmpe.f32	s0, s1
 464 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 465 001e 4CBF     		ite	mi
 466 0020 0220     		movmi	r0, #2
 467              	.LVL18:
1904:Veno-Echo.cpp ****                 retval = PICKEDUP;
 468              		.loc 19 1904 13 view .LVU57
 469 0022 0120     		movpl	r0, #1
 470 0024 7047     		bx	lr
 471              	.LVL19:
 472              	.L23:
1896:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 473              		.loc 19 1896 13 is_stmt 1 view .LVU58
1897:Veno-Echo.cpp ****                 retval = PICKEDUP;
 474              		.loc 19 1897 13 view .LVU59
1897:Veno-Echo.cpp ****                 retval = PICKEDUP;
 475              		.loc 19 1897 35 is_stmt 0 view .LVU60
 476 0026 DFED067A 		vldr.32	s15, .L24
 477 002a 70EEE70A 		vsub.f32	s1, s1, s15
 478              	.LVL20:
1897:Veno-Echo.cpp ****                 retval = PICKEDUP;
 479              		.loc 19 1897 13 view .LVU61
 480 002e F4EEC00A 		vcmpe.f32	s1, s0
 481 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 482 0036 4CBF     		ite	mi
 483 0038 0220     		movmi	r0, #2
 484              	.LVL21:
1897:Veno-Echo.cpp ****                 retval = PICKEDUP;
 485              		.loc 19 1897 13 view .LVU62
 486 003a 0020     		movpl	r0, #0
 487 003c 7047     		bx	lr
 488              	.L25:
 489 003e 00BF     		.align	2
 490              	.L24:
 491 0040 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 56


 492              		.cfi_endproc
 493              	.LFE4912:
 495              		.section	.text._Z10InitDelaysf,"ax",%progbits
 496              		.align	1
 497              		.p2align 2,,3
 498              		.global	_Z10InitDelaysf
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	_Z10InitDelaysf:
 505              	.LVL22:
 506              	.LFB4289:
 581:Veno-Echo.cpp **** 
 507              		.loc 19 581 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 16
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 584:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 511              		.loc 19 584 5 view .LVU64
 512              	.LBB816:
 513              	.LBI816:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 514              		.loc 17 56 10 view .LVU65
 515              	.LBB817:
 516              	.LBB818:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 517              		.loc 17 58 29 view .LVU66
 518 0000 624B     		ldr	r3, .L46
 519 0002 6349     		ldr	r1, .L46+4
 520              	.LBE818:
 521              	.LBE817:
 522              	.LBE816:
 581:Veno-Echo.cpp **** 
 523              		.loc 19 581 1 is_stmt 0 view .LVU67
 524 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 525              		.cfi_def_cfa_offset 20
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0006 A3F18405 		sub	r5, r3, #132
 532 000a 85B0     		sub	sp, sp, #20
 533              		.cfi_def_cfa_offset 40
 534 000c 2846     		mov	r0, r5
 535              	.LVL23:
 536              	.L27:
 537              	.LBB823:
 538              	.LBB822:
 539              	.LBB819:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 57


 540              		.loc 17 60 13 view .LVU68
 541 000e 0022     		movs	r2, #0
 542 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 543              		.loc 17 58 9 is_stmt 1 view .LVU69
  58:delayline_multitap.h ****         {
 544              		.loc 17 58 29 view .LVU70
 545 0014 8B42     		cmp	r3, r1
 546 0016 FAD1     		bne	.L27
 547              	.LBE819:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 548              		.loc 17 63 9 is_stmt 0 view .LVU71
 549 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 550              		.loc 17 64 9 view .LVU72
 551 001a 5E4C     		ldr	r4, .L46+8
 552 001c 0226     		movs	r6, #2
 553              	.LBB820:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 554              		.loc 17 66 21 view .LVU73
 555 001e 1346     		mov	r3, r2
 556              	.LBE820:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 557              		.loc 17 63 9 view .LVU74
 558 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 559              		.loc 17 64 9 view .LVU75
 560 0022 2E51     		str	r6, [r5, r4]
 561              	.LVL24:
 562              	.LBB821:
 563              		.loc 17 66 31 is_stmt 1 view .LVU76
 564              	.L28:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 565              		.loc 17 68 13 is_stmt 0 view .LVU77
 566 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 567              		.loc 17 66 9 view .LVU78
 568 0026 0133     		adds	r3, r3, #1
 569              	.LVL25:
  69:delayline_multitap.h ****             frac_[i] = 0;
 570              		.loc 17 69 13 view .LVU79
 571 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 572              		.loc 17 68 13 view .LVU80
 573 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 574              		.loc 17 66 31 view .LVU81
 575 002e 0A68     		ldr	r2, [r1]
 576              		.loc 17 69 13 view .LVU82
 577 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 578              		.loc 17 66 9 is_stmt 1 view .LVU83
 579              	.LVL26:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 58


  66:delayline_multitap.h ****         {
 580              		.loc 17 66 31 view .LVU84
 581 0032 9A42     		cmp	r2, r3
 582 0034 F6D8     		bhi	.L28
 583 0036 584B     		ldr	r3, .L46+12
 584              	.LVL27:
  66:delayline_multitap.h ****         {
 585              		.loc 17 66 31 is_stmt 0 view .LVU85
 586 0038 5849     		ldr	r1, .L46+16
 587 003a A3F18406 		sub	r6, r3, #132
 588 003e 3046     		mov	r0, r6
 589              	.LVL28:
 590              	.L29:
  66:delayline_multitap.h ****         {
 591              		.loc 17 66 31 view .LVU86
 592              	.LBE821:
 593              	.LBE822:
 594              	.LBE823:
 595              	.LBB824:
 596              	.LBB825:
 597              	.LBB826:
  60:delayline_multitap.h ****         }
 598              		.loc 17 60 13 view .LVU87
 599 0040 0022     		movs	r2, #0
 600 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 601              		.loc 17 58 9 is_stmt 1 view .LVU88
  58:delayline_multitap.h ****         {
 602              		.loc 17 58 29 view .LVU89
 603 0046 8B42     		cmp	r3, r1
 604 0048 FAD1     		bne	.L29
 605              	.LBE826:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 606              		.loc 17 63 9 is_stmt 0 view .LVU90
 607 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 608              		.loc 17 64 9 view .LVU91
 609 004c 514C     		ldr	r4, .L46+8
 610 004e 0227     		movs	r7, #2
 611              	.LBB827:
  66:delayline_multitap.h ****         {
 612              		.loc 17 66 21 view .LVU92
 613 0050 1346     		mov	r3, r2
 614              	.LBE827:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 615              		.loc 17 63 9 view .LVU93
 616 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 617              		.loc 17 64 9 view .LVU94
 618 0054 3751     		str	r7, [r6, r4]
 619              	.LVL29:
 620              	.LBB828:
  66:delayline_multitap.h ****         {
 621              		.loc 17 66 31 is_stmt 1 view .LVU95
 622              	.L30:
  68:delayline_multitap.h ****             frac_[i] = 0;
 623              		.loc 17 68 13 is_stmt 0 view .LVU96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 59


 624 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 625              		.loc 17 66 9 view .LVU97
 626 0058 0133     		adds	r3, r3, #1
 627              	.LVL30:
 628              		.loc 17 69 13 view .LVU98
 629 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 630              		.loc 17 68 13 view .LVU99
 631 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 632              		.loc 17 66 31 view .LVU100
 633 0060 0A68     		ldr	r2, [r1]
 634              		.loc 17 69 13 view .LVU101
 635 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 636              		.loc 17 66 9 is_stmt 1 view .LVU102
 637              	.LVL31:
  66:delayline_multitap.h ****         {
 638              		.loc 17 66 31 view .LVU103
 639 0064 9A42     		cmp	r2, r3
 640 0066 F6D8     		bhi	.L30
 641              	.LVL32:
  66:delayline_multitap.h ****         {
 642              		.loc 17 66 31 is_stmt 0 view .LVU104
 643              	.LBE828:
 644              	.LBE825:
 645              	.LBE824:
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 646              		.loc 19 588 5 is_stmt 1 view .LVU105
 589:Veno-Echo.cpp **** 
 647              		.loc 19 589 16 is_stmt 0 view .LVU106
 648 0068 4D4C     		ldr	r4, .L46+20
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 649              		.loc 19 591 16 view .LVU107
 650 006a 0820     		movs	r0, #8
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 651              		.loc 19 588 16 view .LVU108
 652 006c 4D4F     		ldr	r7, .L46+24
 653 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 654 0072 3D60     		str	r5, [r7]
 589:Veno-Echo.cpp **** 
 655              		.loc 19 589 5 is_stmt 1 view .LVU109
 656              	.LBB829:
 657              	.LBB830:
 658              	.LBB831:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 60


  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 659              		.loc 18 51 9 is_stmt 0 view .LVU110
 660 0074 46F2A815 		movw	r5, #25000
 661              	.LBE831:
 662              	.LBE830:
 663              	.LBE829:
 589:Veno-Echo.cpp **** 
 664              		.loc 19 589 16 view .LVU111
 665 0078 2660     		str	r6, [r4]
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 666              		.loc 19 591 5 is_stmt 1 view .LVU112
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 667              		.loc 19 591 16 is_stmt 0 view .LVU113
 668 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 669              	.LVL33:
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 670              		.loc 19 591 16 view .LVU114
 671 007e 0346     		mov	r3, r0	@ movhi
 672 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 673 0084 3846     		mov	r0, r7
 674 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 675 008a 0299     		ldr	r1, [sp, #8]
 676 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 677              	.LVL34:
 592:Veno-Echo.cpp **** 
 678              		.loc 19 592 5 is_stmt 1 view .LVU115
 592:Veno-Echo.cpp **** 
 679              		.loc 19 592 16 is_stmt 0 view .LVU116
 680 0090 0920     		movs	r0, #9
 681 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 682              	.LVL35:
 683 0096 0346     		mov	r3, r0	@ movhi
 684 0098 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 685 009c 2046     		mov	r0, r4
 686 009e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 687 00a2 0399     		ldr	r1, [sp, #12]
 688 00a4 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 689              	.LVL36:
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 690              		.loc 19 594 5 is_stmt 1 view .LVU117
 594:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 691              		.loc 19 594 24 is_stmt 0 view .LVU118
 692 00a8 9FED3F0A 		vldr.32	s0, .L46+28
 693 00ac 3846     		mov	r0, r7
 694 00ae FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 695              	.LVL37:
 595:Veno-Echo.cpp **** 
 696              		.loc 19 595 5 is_stmt 1 view .LVU119
 595:Veno-Echo.cpp **** 
 697              		.loc 19 595 24 is_stmt 0 view .LVU120
 698 00b2 2046     		mov	r0, r4
 699              	.LBB843:
 700              	.LBB838:
 701              	.LBB833:
 702              		.loc 18 51 9 view .LVU121
 703 00b4 3D4C     		ldr	r4, .L46+32
 704              	.LBE833:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 61


 705              	.LBE838:
 706              	.LBE843:
 595:Veno-Echo.cpp **** 
 707              		.loc 19 595 24 view .LVU122
 708 00b6 9FED3C0A 		vldr.32	s0, .L46+28
 709 00ba FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 710              	.LVL38:
 598:Veno-Echo.cpp ****     delMemsR_REV.Init();
 711              		.loc 19 598 5 is_stmt 1 view .LVU123
 712              	.LBB844:
 713              	.LBI829:
  42:delayline_reverse.h ****     { 
 714              		.loc 18 42 10 view .LVU124
 715              	.LBB839:
 716              	.LBI830:
  48:delayline_reverse.h ****     {
 717              		.loc 18 48 10 view .LVU125
 718              	.LBB834:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 719              		.loc 18 52 9 is_stmt 0 view .LVU126
 720 00be 3C4A     		ldr	r2, .L46+36
 721 00c0 45F6C050 		movw	r0, #24000
 722 00c4 04F11803 		add	r3, r4, #24
 723 00c8 3A49     		ldr	r1, .L46+40
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 724              		.loc 18 51 9 view .LVU127
 725 00ca 2561     		str	r5, [r4, #16]
 726              		.loc 18 52 9 view .LVU128
 727 00cc A050     		str	r0, [r4, r2]
 728              	.LVL39:
 729              	.LBB832:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 730              		.loc 18 54 29 is_stmt 1 view .LVU129
 731              	.L31:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 732              		.loc 18 56 13 is_stmt 0 view .LVU130
 733 00ce 0022     		movs	r2, #0
 734 00d0 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 735              		.loc 18 54 9 is_stmt 1 view .LVU131
  54:delayline_reverse.h ****         {
 736              		.loc 18 54 29 view .LVU132
 737 00d4 8B42     		cmp	r3, r1
 738 00d6 FAD1     		bne	.L31
 739              	.LBE832:
 740              	.LBE834:
 741              	.LBE839:
 742              	.LBE844:
 743              	.LBB845:
 744              	.LBB846:
 745              	.LBB847:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 746              		.loc 18 51 9 is_stmt 0 view .LVU133
 747 00d8 3748     		ldr	r0, .L46+44
 748 00da 46F2A811 		movw	r1, #25000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 62


  52:delayline_reverse.h ****         
 749              		.loc 18 52 9 view .LVU134
 750 00de 344D     		ldr	r5, .L46+36
 751 00e0 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 752              		.loc 18 51 9 view .LVU135
 753 00e4 0161     		str	r1, [r0, #16]
 754              	.LBE847:
 755              	.LBE846:
 756              	.LBE845:
 757              	.LBB870:
 758              	.LBB840:
 759              	.LBB835:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 760              		.loc 18 58 9 view .LVU136
 761 00e6 0021     		movs	r1, #0
 762              	.LBE835:
 763              	.LBE840:
 764              	.LBE870:
 765              	.LBB871:
 766              	.LBB860:
 767              	.LBB850:
  52:delayline_reverse.h ****         
 768              		.loc 18 52 9 view .LVU137
 769 00e8 4651     		str	r6, [r0, r5]
 770              	.LBE850:
 771              	.LBE860:
 772              	.LBE871:
 773              	.LBB872:
 774              	.LBB841:
 775              	.LBB836:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 776              		.loc 18 62 9 view .LVU138
 777 00ea 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 778              		.loc 18 64 9 view .LVU139
 779 00ec 334E     		ldr	r6, .L46+48
 780 00ee 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 781              		.loc 18 62 9 view .LVU140
 782 00f2 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 783              		.loc 18 60 9 view .LVU141
 784 00f4 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 785              		.loc 18 63 9 view .LVU142
 786 00f6 324D     		ldr	r5, .L46+52
  61:delayline_reverse.h ****         playinghead_ = false;
 787              		.loc 18 61 9 view .LVU143
 788 00f8 6161     		str	r1, [r4, #20]
 789              		.loc 18 64 9 view .LVU144
 790 00fa A155     		strb	r1, [r4, r6]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 63


 791              	.LVL40:
 792              		.loc 18 64 9 view .LVU145
 793              	.LBE836:
 794              	.LBE841:
 795              	.LBE872:
 599:Veno-Echo.cpp **** 
 796              		.loc 19 599 5 is_stmt 1 view .LVU146
 797              	.LBB873:
 798              	.LBI845:
  42:delayline_reverse.h ****     { 
 799              		.loc 18 42 10 view .LVU147
 800              	.LBB861:
 801              	.LBI846:
  48:delayline_reverse.h ****     {
 802              		.loc 18 48 10 view .LVU148
 803              	.LBB851:
 804              	.LBB848:
  54:delayline_reverse.h ****         {
 805              		.loc 18 54 29 view .LVU149
 806              	.LBE848:
 807              	.LBE851:
 808              	.LBE861:
 809              	.LBE873:
 810              	.LBB874:
 811              	.LBB842:
 812              	.LBB837:
  63:delayline_reverse.h ****         fading_ = false;
 813              		.loc 18 63 9 is_stmt 0 view .LVU150
 814 00fc 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 815              		.loc 18 59 9 view .LVU151
 816 00fe C4E90111 		strd	r1, r1, [r4, #4]
 817 0102 3049     		ldr	r1, .L46+56
 818              	.LVL41:
 819              	.L32:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 820              		.loc 18 59 9 view .LVU152
 821              	.LBE837:
 822              	.LBE842:
 823              	.LBE874:
 824              	.LBB875:
 825              	.LBB862:
 826              	.LBB852:
 827              	.LBB849:
  56:delayline_reverse.h ****         }
 828              		.loc 18 56 13 view .LVU153
 829 0104 0022     		movs	r2, #0
 830 0106 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 831              		.loc 18 54 9 is_stmt 1 view .LVU154
  54:delayline_reverse.h ****         {
 832              		.loc 18 54 29 view .LVU155
 833 010a 8B42     		cmp	r3, r1
 834 010c FAD1     		bne	.L32
 835              	.LBE849:
 836              	.LBE852:
 837              	.LBE862:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 64


 838              	.LBE875:
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 839              		.loc 19 602 21 is_stmt 0 view .LVU156
 840 010e 2E49     		ldr	r1, .L46+60
 841              	.LBB876:
 842              	.LBB863:
 843              	.LBB853:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 844              		.loc 18 58 9 view .LVU157
 845 0110 0023     		movs	r3, #0
 846              	.LBE853:
 847              	.LBE863:
 848              	.LBE876:
 849              	.LBB877:
 850              	.LBB878:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 851              		.loc 19 70 15 view .LVU158
 852 0112 DFED2E6A 		vldr.32	s13, .L46+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 853              		.loc 19 70 28 view .LVU159
 854 0116 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 855              		.loc 19 70 53 view .LVU160
 856 011a 9FED2D6A 		vldr.32	s12, .L46+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 857              		.loc 19 70 15 view .LVU161
 858 011e 36EEE77A 		vsub.f32	s14, s13, s15
 859              	.LBE878:
 860              	.LBE877:
 861              	.LBB892:
 862              	.LBB864:
 863              	.LBB854:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 864              		.loc 18 62 9 view .LVU162
 865 0122 2C4D     		ldr	r5, .L46+72
 866              	.LBE854:
 867              	.LBE864:
 868              	.LBE892:
 869              	.LBB893:
 870              	.LBB887:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 871              		.loc 19 70 53 view .LVU163
 872 0124 67EE867A 		vmul.f32	s15, s15, s12
 873              	.LBE887:
 874              	.LBE893:
 875              	.LBB894:
 876              	.LBB865:
 877              	.LBB855:
 878              		.loc 18 64 9 view .LVU164
 879 0128 244E     		ldr	r6, .L46+48
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 880              		.loc 18 62 9 view .LVU165
 881 012a 4355     		strb	r3, [r0, r5]
 882              	.LBE855:
 883              	.LBE865:
 884              	.LBE894:
 885              	.LBB895:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 65


 886              	.LBB888:
 887              	.LBB879:
 888              	.LBB880:
 889              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 66


  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 890              		.loc 20 76 31 view .LVU166
 891 012c B0EEC77A 		vabs.f32	s14, s14
 892              	.LBE880:
 893              	.LBE879:
 894              	.LBE888:
 895              	.LBE895:
 896              	.LBB896:
 897              	.LBB866:
 898              	.LBB856:
  63:delayline_reverse.h ****         fading_ = false;
 899              		.loc 18 63 9 view .LVU167
 900 0130 294D     		ldr	r5, .L46+76
  60:delayline_reverse.h ****         headDiff_ = 0;
 901              		.loc 18 60 9 view .LVU168
 902 0132 C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 903              		.loc 18 61 9 view .LVU169
 904 0134 4361     		str	r3, [r0, #20]
 905              	.LBE856:
 906              	.LBE866:
 907              	.LBE896:
 908              	.LBB897:
 909              	.LBB889:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 910              		.loc 19 70 9 view .LVU170
 911 0136 B4EEE77A 		vcmpe.f32	s14, s15
 912              	.LBE889:
 913              	.LBE897:
 914              	.LBB898:
 915              	.LBB867:
 916              	.LBB857:
 917              		.loc 18 64 9 view .LVU171
 918 013a 8355     		strb	r3, [r0, r6]
 919              	.LVL42:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 67


 920              		.loc 18 64 9 view .LVU172
 921              	.LBE857:
 922              	.LBE867:
 923              	.LBE898:
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 924              		.loc 19 602 5 is_stmt 1 view .LVU173
 603:Veno-Echo.cpp **** 
 925              		.loc 19 603 5 view .LVU174
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 926              		.loc 19 602 21 is_stmt 0 view .LVU175
 927 013c 0C60     		str	r4, [r1]
 928              	.LBB899:
 929              	.LBB868:
 930              	.LBB858:
  63:delayline_reverse.h ****         fading_ = false;
 931              		.loc 18 63 9 view .LVU176
 932 013e 2A60     		str	r2, [r5]	@ float
 933              	.LBE858:
 934              	.LBE868:
 935              	.LBE899:
 936              	.LBB900:
 937              	.LBB890:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 938              		.loc 19 70 9 view .LVU177
 939 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 940              	.LBE890:
 941              	.LBE900:
 942              	.LBB901:
 943              	.LBB869:
 944              	.LBB859:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 945              		.loc 18 59 9 view .LVU178
 946 0144 C0E90133 		strd	r3, r3, [r0, #4]
 947              	.LBE859:
 948              	.LBE869:
 949              	.LBE901:
 603:Veno-Echo.cpp **** 
 950              		.loc 19 603 21 view .LVU179
 951 0148 244B     		ldr	r3, .L46+80
 952 014a 1860     		str	r0, [r3]
 606:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 953              		.loc 19 606 5 is_stmt 1 view .LVU180
 954              	.LVL43:
 955              	.LBB902:
 956              	.LBI877:
  68:Veno-Echo.cpp ****     {
 957              		.loc 19 68 10 view .LVU181
 958              	.LBB891:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 959              		.loc 19 70 9 view .LVU182
 960              	.LBB882:
 961              	.LBI879:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 962              		.loc 20 75 3 view .LVU183
 963              	.LBB881:
 964              		.loc 20 76 5 view .LVU184
 965              		.loc 20 76 5 is_stmt 0 view .LVU185
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 68


 966              	.LBE881:
 967              	.LBE882:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 968              		.loc 19 70 9 view .LVU186
 969 014c 04DD     		ble	.L33
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 970              		.loc 19 73 13 is_stmt 1 view .LVU187
 971              	.LBB883:
 972              	.LBB884:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 973              		.loc 18 72 9 is_stmt 0 view .LVU188
 974 014e 244D     		ldr	r5, .L46+84
 975              	.LBE884:
 976              	.LBE883:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 977              		.loc 19 73 27 view .LVU189
 978 0150 C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 979              		.loc 19 74 13 is_stmt 1 view .LVU190
 980              	.LVL44:
 981              	.LBB886:
 982              	.LBI883:
  69:delayline_reverse.h ****     {
 983              		.loc 18 69 17 view .LVU191
 984              	.LBB885:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 985              		.loc 18 71 9 is_stmt 0 view .LVU192
 986 0154 2260     		str	r2, [r4]	@ float
 987              		.loc 18 72 9 view .LVU193
 988 0156 2561     		str	r5, [r4, #16]
 989              	.LVL45:
 990              	.L33:
 991              		.loc 18 72 9 view .LVU194
 992              	.LBE885:
 993              	.LBE886:
 994              	.LBE891:
 995              	.LBE902:
 607:Veno-Echo.cpp **** 
 996              		.loc 19 607 5 is_stmt 1 view .LVU195
 997              	.LBB903:
 998              	.LBI903:
  68:Veno-Echo.cpp ****     {
 999              		.loc 19 68 10 view .LVU196
 1000              	.LBB904:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1001              		.loc 19 70 9 view .LVU197
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1002              		.loc 19 70 28 is_stmt 0 view .LVU198
 1003 0158 D3ED017A 		vldr.32	s15, [r3, #4]
 1004              	.LVL46:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 69


 1005              	.LBB905:
 1006              	.LBI905:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1007              		.loc 20 75 3 is_stmt 1 view .LVU199
 1008              	.LBB906:
 1009              		.loc 20 76 5 view .LVU200
 1010              		.loc 20 76 5 is_stmt 0 view .LVU201
 1011              	.LBE906:
 1012              	.LBE905:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1013              		.loc 19 70 15 view .LVU202
 1014 015c DFED1B6A 		vldr.32	s13, .L46+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1015              		.loc 19 70 53 view .LVU203
 1016 0160 9FED1B6A 		vldr.32	s12, .L46+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1017              		.loc 19 70 15 view .LVU204
 1018 0164 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1019              		.loc 19 70 53 view .LVU205
 1020 0168 67EE867A 		vmul.f32	s15, s15, s12
 1021              	.LBB908:
 1022              	.LBB907:
 1023              		.loc 20 76 31 view .LVU206
 1024 016c B0EEC77A 		vabs.f32	s14, s14
 1025              	.LBE907:
 1026              	.LBE908:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1027              		.loc 19 70 9 view .LVU207
 1028 0170 B4EEE77A 		vcmpe.f32	s14, s15
 1029 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1030 0178 05DD     		ble	.L26
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1031              		.loc 19 73 13 is_stmt 1 view .LVU208
 1032              	.LBB909:
 1033              	.LBB910:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1034              		.loc 18 71 9 is_stmt 0 view .LVU209
 1035 017a 0021     		movs	r1, #0
 1036              		.loc 18 72 9 view .LVU210
 1037 017c 184A     		ldr	r2, .L46+84
 1038              	.LBE910:
 1039              	.LBE909:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1040              		.loc 19 73 27 view .LVU211
 1041 017e C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1042              		.loc 19 74 13 is_stmt 1 view .LVU212
 1043              	.LVL47:
 1044              	.LBB912:
 1045              	.LBI909:
  69:delayline_reverse.h ****     {
 1046              		.loc 18 69 17 view .LVU213
 1047              	.LBB911:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1048              		.loc 18 71 9 is_stmt 0 view .LVU214
 1049 0182 0160     		str	r1, [r0]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 70


 1050              		.loc 18 72 9 view .LVU215
 1051 0184 0261     		str	r2, [r0, #16]
 1052              	.LVL48:
 1053              	.L26:
 1054              		.loc 18 72 9 view .LVU216
 1055              	.LBE911:
 1056              	.LBE912:
 1057              	.LBE904:
 1058              	.LBE903:
 609:Veno-Echo.cpp **** 
 1059              		.loc 19 609 1 view .LVU217
 1060 0186 05B0     		add	sp, sp, #20
 1061              		.cfi_def_cfa_offset 20
 1062              		@ sp needed
 1063 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 1064              	.L47:
 1065 018a 00BF     		.align	2
 1066              	.L46:
 1067 018c 84000000 		.word	delMemsL+132
 1068 0190 84786900 		.word	delMemsL+6912132
 1069 0194 84786900 		.word	6912132
 1070 0198 84000000 		.word	delMemsR+132
 1071 019c 84786900 		.word	delMemsR+6912132
 1072 01a0 00000000 		.word	.LANCHOR1
 1073 01a4 00000000 		.word	.LANCHOR0
 1074 01a8 0000FA43 		.word	1140457472
 1075 01ac 00000000 		.word	delMemsL_REV
 1076 01b0 189F2400 		.word	2400024
 1077 01b4 189F2400 		.word	delMemsL_REV+2400024
 1078 01b8 00000000 		.word	delMemsR_REV
 1079 01bc 249F2400 		.word	2400036
 1080 01c0 209F2400 		.word	delMemsL_REV+2400032
 1081 01c4 189F2400 		.word	delMemsR_REV+2400024
 1082 01c8 00000000 		.word	.LANCHOR2
 1083 01cc 00409C47 		.word	1201422336
 1084 01d0 0AD7A33B 		.word	1000593162
 1085 01d4 1C9F2400 		.word	2400028
 1086 01d8 209F2400 		.word	delMemsR_REV+2400032
 1087 01dc 00000000 		.word	.LANCHOR3
 1088 01e0 80380100 		.word	80000
 1089              		.cfi_endproc
 1090              	.LFE4289:
 1092              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1093              		.align	1
 1094              		.p2align 2,,3
 1095              		.global	_Z20Update_DelayTimeL_CVv
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv5-d16
 1101              	_Z20Update_DelayTimeL_CVv:
 1102              	.LFB4291:
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1103              		.loc 19 789 1 is_stmt 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 71


 790:Veno-Echo.cpp **** }
 1107              		.loc 19 790 5 view .LVU219
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1108              		.loc 19 789 1 is_stmt 0 view .LVU220
 1109 0000 08B5     		push	{r3, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 3, -8
 1112              		.cfi_offset 14, -4
 790:Veno-Echo.cpp **** }
 1113              		.loc 19 790 36 view .LVU221
 1114 0002 0021     		movs	r1, #0
 1115 0004 0348     		ldr	r0, .L50
 1116 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1117              	.LVL49:
 790:Veno-Echo.cpp **** }
 1118              		.loc 19 790 19 view .LVU222
 1119 000a 034B     		ldr	r3, .L50+4
 1120 000c 83ED000A 		vstr.32	s0, [r3]
 791:Veno-Echo.cpp **** 
 1121              		.loc 19 791 1 view .LVU223
 1122 0010 08BD     		pop	{r3, pc}
 1123              	.L51:
 1124 0012 00BF     		.align	2
 1125              	.L50:
 1126 0014 18000000 		.word	.LANCHOR4+24
 1127 0018 00000000 		.word	.LANCHOR5
 1128              		.cfi_endproc
 1129              	.LFE4291:
 1131              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1132              		.align	1
 1133              		.p2align 2,,3
 1134              		.global	_Z20Update_DelayTimeR_CVv
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv5-d16
 1140              	_Z20Update_DelayTimeR_CVv:
 1141              	.LFB4293:
 886:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1142              		.loc 19 886 1 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 887:Veno-Echo.cpp **** }
 1146              		.loc 19 887 5 view .LVU225
 886:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1147              		.loc 19 886 1 is_stmt 0 view .LVU226
 1148 0000 08B5     		push	{r3, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 3, -8
 1151              		.cfi_offset 14, -4
 887:Veno-Echo.cpp **** }
 1152              		.loc 19 887 36 view .LVU227
 1153 0002 0121     		movs	r1, #1
 1154 0004 0348     		ldr	r0, .L54
 1155 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1156              	.LVL50:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 72


 887:Veno-Echo.cpp **** }
 1157              		.loc 19 887 19 view .LVU228
 1158 000a 034B     		ldr	r3, .L54+4
 1159 000c 83ED000A 		vstr.32	s0, [r3]
 888:Veno-Echo.cpp **** 
 1160              		.loc 19 888 1 view .LVU229
 1161 0010 08BD     		pop	{r3, pc}
 1162              	.L55:
 1163 0012 00BF     		.align	2
 1164              	.L54:
 1165 0014 18000000 		.word	.LANCHOR4+24
 1166 0018 00000000 		.word	.LANCHOR6
 1167              		.cfi_endproc
 1168              	.LFE4293:
 1170              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.global	_Z19Update_feedbackL_CVv
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1177              		.fpu fpv5-d16
 1179              	_Z19Update_feedbackL_CVv:
 1180              	.LFB4295:
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1181              		.loc 19 981 1 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 982:Veno-Echo.cpp **** }
 1185              		.loc 19 982 5 view .LVU231
 981:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1186              		.loc 19 981 1 is_stmt 0 view .LVU232
 1187 0000 08B5     		push	{r3, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 3, -8
 1190              		.cfi_offset 14, -4
 982:Veno-Echo.cpp **** }
 1191              		.loc 19 982 35 view .LVU233
 1192 0002 0221     		movs	r1, #2
 1193 0004 0348     		ldr	r0, .L58
 1194 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1195              	.LVL51:
 982:Veno-Echo.cpp **** }
 1196              		.loc 19 982 18 view .LVU234
 1197 000a 034B     		ldr	r3, .L58+4
 1198 000c 83ED000A 		vstr.32	s0, [r3]
 983:Veno-Echo.cpp **** void Update_feedbackL()
 1199              		.loc 19 983 1 view .LVU235
 1200 0010 08BD     		pop	{r3, pc}
 1201              	.L59:
 1202 0012 00BF     		.align	2
 1203              	.L58:
 1204 0014 18000000 		.word	.LANCHOR4+24
 1205 0018 00000000 		.word	.LANCHOR7
 1206              		.cfi_endproc
 1207              	.LFE4295:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 73


 1209              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 1210              		.align	1
 1211              		.p2align 2,,3
 1212              		.global	_Z16Update_feedbackLv
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu fpv5-d16
 1218              	_Z16Update_feedbackLv:
 1219              	.LFB4296:
 985:Veno-Echo.cpp ****     static bool lastShift{};
 1220              		.loc 19 985 1 is_stmt 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 986:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 1224              		.loc 19 986 5 view .LVU237
 987:Veno-Echo.cpp ****     static pickupState HPCutoff_pickup{};
 1225              		.loc 19 987 5 view .LVU238
 988:Veno-Echo.cpp **** 
 1226              		.loc 19 988 5 view .LVU239
 990:Veno-Echo.cpp ****     static float HPCutoff_Last{};
 1227              		.loc 19 990 5 view .LVU240
 991:Veno-Echo.cpp **** 
 1228              		.loc 19 991 5 view .LVU241
 995:Veno-Echo.cpp **** 
 1229              		.loc 19 995 5 view .LVU242
 985:Veno-Echo.cpp ****     static bool lastShift{};
 1230              		.loc 19 985 1 is_stmt 0 view .LVU243
 1231 0000 10B5     		push	{r4, lr}
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 4, -8
 1234              		.cfi_offset 14, -4
 995:Veno-Echo.cpp **** 
 1235              		.loc 19 995 43 view .LVU244
 1236 0002 0122     		movs	r2, #1
 1237 0004 0721     		movs	r1, #7
 1238 0006 7148     		ldr	r0, .L83
 985:Veno-Echo.cpp ****     static bool lastShift{};
 1239              		.loc 19 985 1 view .LVU245
 1240 0008 2DED028B 		vpush.64	{d8}
 1241              		.cfi_def_cfa_offset 16
 1242              		.cfi_offset 80, -16
 1243              		.cfi_offset 81, -12
 995:Veno-Echo.cpp **** 
 1244              		.loc 19 995 43 view .LVU246
 1245 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1246              	.LVL52:
 1247              	.LBB940:
 997:Veno-Echo.cpp ****     {   
 1248              		.loc 19 997 9 view .LVU247
 1249 0010 6F4B     		ldr	r3, .L83+4
 1250              	.LBE940:
 995:Veno-Echo.cpp **** 
 1251              		.loc 19 995 43 view .LVU248
 1252 0012 B0EE408A 		vmov.f32	s16, s0
 1253              	.LVL53:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 74


 997:Veno-Echo.cpp ****     {   
 1254              		.loc 19 997 5 is_stmt 1 view .LVU249
 1255              	.LBB1004:
 1256 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 0018 002B     		cmp	r3, #0
 1258 001a 7DD1     		bne	.L61
 1259              	.LBB941:
 999:Veno-Echo.cpp ****         {
 1260              		.loc 19 999 9 view .LVU250
 999:Veno-Echo.cpp ****         {
 1261              		.loc 19 999 19 is_stmt 0 view .LVU251
 1262 001c 6D49     		ldr	r1, .L83+8
 999:Veno-Echo.cpp ****         {
 1263              		.loc 19 999 9 view .LVU252
 1264 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1265 0020 92B3     		cbz	r2, .L62
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1266              		.loc 19 1001 13 is_stmt 1 view .LVU253
1002:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1267              		.loc 19 1002 48 is_stmt 0 view .LVU254
 1268 0022 6D4A     		ldr	r2, .L83+12
 1269              	.LBB942:
 1270              	.LBB943:
1834:Veno-Echo.cpp ****         {
 1271              		.loc 19 1834 9 view .LVU255
 1272 0024 9FED6D7A 		vldr.32	s14, .L83+16
1834:Veno-Echo.cpp ****         {
 1273              		.loc 19 1834 15 view .LVU256
 1274 0028 D2ED007A 		vldr.32	s15, [r2]
 1275              	.LBE943:
 1276              	.LBE942:
1001:Veno-Echo.cpp ****             feedbackL_pickup = checkPickupState(feedbackL_Pot,feedbackL_Last,feedbackL_pickup,true)
 1277              		.loc 19 1001 23 view .LVU257
 1278 002c 0B70     		strb	r3, [r1]
1002:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1279              		.loc 19 1002 13 is_stmt 1 view .LVU258
 1280              	.LVL54:
 1281              	.LBB950:
 1282              	.LBI942:
1828:Veno-Echo.cpp **** {
 1283              		.loc 19 1828 6 view .LVU259
 1284              	.LBB948:
1830:Veno-Echo.cpp ****     
 1285              		.loc 19 1830 5 view .LVU260
1832:Veno-Echo.cpp ****     {
 1286              		.loc 19 1832 5 view .LVU261
1834:Veno-Echo.cpp ****         {
 1287              		.loc 19 1834 9 view .LVU262
 1288              	.LBB944:
 1289              	.LBI944:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1290              		.loc 20 75 3 view .LVU263
 1291              	.LBB945:
 1292              		.loc 20 76 5 view .LVU264
 1293              		.loc 20 76 5 is_stmt 0 view .LVU265
 1294              	.LBE945:
 1295              	.LBE944:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 75


1834:Veno-Echo.cpp ****         {
 1296              		.loc 19 1834 15 view .LVU266
 1297 002e 70EE677A 		vsub.f32	s15, s0, s15
 1298              	.LVL55:
1834:Veno-Echo.cpp ****         {
 1299              		.loc 19 1834 15 view .LVU267
 1300              	.LBE948:
 1301              	.LBE950:
1002:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1302              		.loc 19 1002 30 view .LVU268
 1303 0032 6B48     		ldr	r0, .L83+20
1003:Veno-Echo.cpp ****         } 
 1304              		.loc 19 1003 28 view .LVU269
 1305 0034 82ED000A 		vstr.32	s0, [r2]
 1306              	.LVL56:
 1307              	.LBB951:
 1308              	.LBB949:
 1309              	.LBB947:
 1310              	.LBB946:
 1311              		.loc 20 76 31 view .LVU270
 1312 0038 F0EEE77A 		vabs.f32	s15, s15
 1313              	.LBE946:
 1314              	.LBE947:
1834:Veno-Echo.cpp ****         {
 1315              		.loc 19 1834 9 view .LVU271
 1316 003c F4EEC77A 		vcmpe.f32	s15, s14
 1317 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1318 0044 D4BF     		ite	le
 1319 0046 0123     		movle	r3, #1
 1320 0048 0023     		movgt	r3, #0
 1321              	.LVL57:
1865:Veno-Echo.cpp **** 
 1322              		.loc 19 1865 5 is_stmt 1 view .LVU272
1865:Veno-Echo.cpp **** 
 1323              		.loc 19 1865 5 is_stmt 0 view .LVU273
 1324              	.LBE949:
 1325              	.LBE951:
1002:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1326              		.loc 19 1002 30 view .LVU274
 1327 004a 0370     		strb	r3, [r0]
1003:Veno-Echo.cpp ****         } 
 1328              		.loc 19 1003 13 is_stmt 1 view .LVU275
 1329              	.L63:
1010:Veno-Echo.cpp **** 
 1330              		.loc 19 1010 9 view .LVU276
 1331              	.LVL58:
1012:Veno-Echo.cpp ****         {
 1332              		.loc 19 1012 9 view .LVU277
 1333 004c 8BBB     		cbnz	r3, .L64
1020:Veno-Echo.cpp ****         }
 1334              		.loc 19 1020 13 view .LVU278
 1335              	.LVL59:
 1336              	.LBB952:
 1337              	.LBI952:
1809:Veno-Echo.cpp **** {
 1338              		.loc 19 1809 7 view .LVU279
 1339              	.LBB953:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 76


1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1340              		.loc 19 1811 5 view .LVU280
1812:Veno-Echo.cpp **** 
 1341              		.loc 19 1812 5 view .LVU281
 1342              	.LBE953:
 1343              	.LBE952:
1020:Veno-Echo.cpp ****         }
 1344              		.loc 19 1020 41 is_stmt 0 view .LVU282
 1345 004e 654B     		ldr	r3, .L83+24
 1346              	.LBB956:
 1347              	.LBB954:
1812:Veno-Echo.cpp **** 
 1348              		.loc 19 1812 39 view .LVU283
 1349 0050 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 1350              		.loc 19 1812 49 view .LVU284
 1351 0054 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 1352              		.loc 19 1812 12 view .LVU285
 1353 0058 92ED000A 		vldr.32	s0, [r2]
 1354              	.LVL60:
1812:Veno-Echo.cpp **** 
 1355              		.loc 19 1812 39 view .LVU286
 1356 005c D3ED007A 		vldr.32	s15, [r3]
1812:Veno-Echo.cpp **** 
 1357              		.loc 19 1812 12 view .LVU287
 1358 0060 F0EE006A 		vmov.f32	s13, #2.0e+0
1812:Veno-Echo.cpp **** 
 1359              		.loc 19 1812 39 view .LVU288
 1360 0064 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 1361              		.loc 19 1812 49 view .LVU289
 1362 0068 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 1363              		.loc 19 1812 12 view .LVU290
 1364 006c A7EEA60A 		vfma.f32	s0, s15, s13
 1365              	.LVL61:
1814:Veno-Echo.cpp ****     {
 1366              		.loc 19 1814 5 is_stmt 1 view .LVU291
 1367 0070 B5EEC00A 		vcmpe.f32	s0, #0
 1368 0074 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1369 0078 73D4     		bmi	.L77
1819:Veno-Echo.cpp ****     {
 1370              		.loc 19 1819 5 view .LVU292
1821:Veno-Echo.cpp ****     }
 1371              		.loc 19 1821 16 is_stmt 0 view .LVU293
 1372 007a B4EE470A 		vcmp.f32	s0, s14
 1373 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1374 0082 37FE000A 		vselgt.f32	s0, s14, s0
 1375              	.LVL62:
1821:Veno-Echo.cpp ****     }
 1376              		.loc 19 1821 16 view .LVU294
 1377 0086 32E0     		b	.L68
 1378              	.LVL63:
 1379              	.L62:
1821:Veno-Echo.cpp ****     }
 1380              		.loc 19 1821 16 view .LVU295
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 77


 1381              	.LBE954:
 1382              	.LBE956:
1007:Veno-Echo.cpp ****         }
 1383              		.loc 19 1007 13 is_stmt 1 view .LVU296
1007:Veno-Echo.cpp ****         }
 1384              		.loc 19 1007 48 is_stmt 0 view .LVU297
 1385 0088 5549     		ldr	r1, .L83+20
 1386 008a 534A     		ldr	r2, .L83+12
 1387              	.LBB957:
 1388              	.LBB958:
 1389              	.LBB959:
 1390              	.LBB960:
1846:Veno-Echo.cpp ****     {
 1391              		.loc 19 1846 5 view .LVU298
 1392 008c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1393              	.LBE960:
 1394              	.LBE959:
 1395              	.LBE958:
 1396              	.LBE957:
1007:Veno-Echo.cpp ****         }
 1397              		.loc 19 1007 48 view .LVU299
 1398 008e D2ED007A 		vldr.32	s15, [r2]
 1399              	.LVL64:
 1400              	.LBB968:
 1401              	.LBI957:
1828:Veno-Echo.cpp **** {
 1402              		.loc 19 1828 6 is_stmt 1 view .LVU300
 1403              	.LBB967:
1830:Veno-Echo.cpp ****     
 1404              		.loc 19 1830 5 view .LVU301
1832:Veno-Echo.cpp ****     {
 1405              		.loc 19 1832 5 view .LVU302
 1406              	.LBB966:
 1407              	.LBI959:
1828:Veno-Echo.cpp **** {
 1408              		.loc 19 1828 6 view .LVU303
 1409              	.LBB965:
1846:Veno-Echo.cpp ****     {
 1410              		.loc 19 1846 5 view .LVU304
 1411 0092 73B9     		cbnz	r3, .L64
1848:Veno-Echo.cpp ****         {
 1412              		.loc 19 1848 9 view .LVU305
 1413              	.LVL65:
 1414              	.LBB961:
 1415              	.LBI961:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1416              		.loc 20 75 3 view .LVU306
 1417              	.LBB962:
 1418              		.loc 20 76 5 view .LVU307
 1419              		.loc 20 76 5 is_stmt 0 view .LVU308
 1420              	.LBE962:
 1421              	.LBE961:
1848:Veno-Echo.cpp ****         {
 1422              		.loc 19 1848 15 view .LVU309
 1423 0094 70EE677A 		vsub.f32	s15, s0, s15
 1424              	.LVL66:
1848:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 78


 1425              		.loc 19 1848 9 view .LVU310
 1426 0098 9FED507A 		vldr.32	s14, .L83+16
 1427              	.LBB964:
 1428              	.LBB963:
 1429              		.loc 20 76 31 view .LVU311
 1430 009c F0EEE77A 		vabs.f32	s15, s15
 1431              	.LBE963:
 1432              	.LBE964:
1848:Veno-Echo.cpp ****         {
 1433              		.loc 19 1848 9 view .LVU312
 1434 00a0 F4EEC77A 		vcmpe.f32	s15, s14
 1435 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1436 00a8 CCBF     		ite	gt
 1437 00aa 0123     		movgt	r3, #1
 1438 00ac 0023     		movle	r3, #0
 1439              	.LVL67:
1865:Veno-Echo.cpp **** 
 1440              		.loc 19 1865 5 is_stmt 1 view .LVU313
1865:Veno-Echo.cpp **** 
 1441              		.loc 19 1865 5 is_stmt 0 view .LVU314
 1442              	.LBE965:
 1443              	.LBE966:
1865:Veno-Echo.cpp **** 
 1444              		.loc 19 1865 5 is_stmt 1 view .LVU315
1865:Veno-Echo.cpp **** 
 1445              		.loc 19 1865 5 is_stmt 0 view .LVU316
 1446              	.LBE967:
 1447              	.LBE968:
1007:Veno-Echo.cpp ****         }
 1448              		.loc 19 1007 30 view .LVU317
 1449 00ae 0B70     		strb	r3, [r1]
 1450 00b0 CCE7     		b	.L63
 1451              	.L64:
1014:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1452              		.loc 19 1014 13 is_stmt 1 view .LVU318
 1453              	.LVL68:
 1454              	.LBB969:
 1455              	.LBI969:
1809:Veno-Echo.cpp **** {
 1456              		.loc 19 1809 7 view .LVU319
 1457              	.LBB970:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1458              		.loc 19 1811 5 view .LVU320
1812:Veno-Echo.cpp **** 
 1459              		.loc 19 1812 5 view .LVU321
 1460              	.LBE970:
 1461              	.LBE969:
1014:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1462              		.loc 19 1014 41 is_stmt 0 view .LVU322
 1463 00b2 4C4B     		ldr	r3, .L83+24
 1464              	.LBB973:
 1465              	.LBB971:
1812:Veno-Echo.cpp **** 
 1466              		.loc 19 1812 39 view .LVU323
 1467 00b4 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 1468              		.loc 19 1812 49 view .LVU324
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 79


 1469 00b8 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 1470              		.loc 19 1812 39 view .LVU325
 1471 00bc D3ED007A 		vldr.32	s15, [r3]
1812:Veno-Echo.cpp **** 
 1472              		.loc 19 1812 12 view .LVU326
 1473 00c0 F0EE006A 		vmov.f32	s13, #2.0e+0
 1474 00c4 B0EE480A 		vmov.f32	s0, s16
 1475              	.LVL69:
1812:Veno-Echo.cpp **** 
 1476              		.loc 19 1812 39 view .LVU327
 1477 00c8 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 1478              		.loc 19 1812 49 view .LVU328
 1479 00cc 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 1480              		.loc 19 1812 12 view .LVU329
 1481 00d0 A7EEA60A 		vfma.f32	s0, s15, s13
 1482              	.LVL70:
1814:Veno-Echo.cpp ****     {
 1483              		.loc 19 1814 5 is_stmt 1 view .LVU330
 1484 00d4 B5EEC00A 		vcmpe.f32	s0, #0
 1485 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1486 00dc 3ED4     		bmi	.L76
1819:Veno-Echo.cpp ****     {
 1487              		.loc 19 1819 5 view .LVU331
1821:Veno-Echo.cpp ****     }
 1488              		.loc 19 1821 16 is_stmt 0 view .LVU332
 1489 00de B4EE470A 		vcmp.f32	s0, s14
 1490 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1491 00e6 37FE000A 		vselgt.f32	s0, s14, s0
 1492              	.LVL71:
 1493              	.L66:
1824:Veno-Echo.cpp **** }
 1494              		.loc 19 1824 5 is_stmt 1 view .LVU333
1824:Veno-Echo.cpp **** }
 1495              		.loc 19 1824 5 is_stmt 0 view .LVU334
 1496              	.LBE971:
 1497              	.LBE973:
1015:Veno-Echo.cpp ****         }
 1498              		.loc 19 1015 13 is_stmt 1 view .LVU335
1015:Veno-Echo.cpp ****         }
 1499              		.loc 19 1015 28 is_stmt 0 view .LVU336
 1500 00ea 82ED008A 		vstr.32	s16, [r2]
 1501              	.LVL72:
 1502              	.L68:
1023:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1503              		.loc 19 1023 9 is_stmt 1 view .LVU337
1023:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1504              		.loc 19 1023 37 is_stmt 0 view .LVU338
 1505 00ee B7EE041A 		vmov.f32	s2, #1.25e+0
 1506 00f2 0020     		movs	r0, #0
 1507 00f4 DFED3C0A 		vldr.32	s1, .L83+28
 1508 00f8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1509              	.LVL73:
1024:Veno-Echo.cpp ****     }
 1510              		.loc 19 1024 9 is_stmt 1 view .LVU339
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 80


 1511              	.LBB974:
 1512              	.LBI974:
 1513              		.file 21 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 81


  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 82


 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1514              		.loc 21 135 13 view .LVU340
 1515              	.LBB975:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 1516              		.loc 21 137 5 view .LVU341
 1517              		.loc 21 137 9 is_stmt 0 view .LVU342
 1518 00fc 3B4B     		ldr	r3, .L83+32
 1519 00fe 9FED3C7A 		vldr.32	s14, .L83+36
 1520 0102 D3ED007A 		vldr.32	s15, [r3]
 1521              		.loc 21 137 24 view .LVU343
 1522 0106 30EE670A 		vsub.f32	s0, s0, s15
 1523              	.LVL74:
 1524              		.loc 21 137 24 view .LVU344
 1525              	.LBE975:
 1526              	.LBE974:
 1527              	.LBE941:
 1528              	.LBE1004:
1051:Veno-Echo.cpp **** 
 1529              		.loc 19 1051 1 view .LVU345
 1530 010a BDEC028B 		vldm	sp!, {d8}
 1531              		.cfi_remember_state
 1532              		.cfi_restore 80
 1533              		.cfi_restore 81
 1534              		.cfi_def_cfa_offset 8
 1535              	.LVL75:
 1536              	.LBB1005:
 1537              	.LBB980:
 1538              	.LBB977:
 1539              	.LBB976:
 1540              		.loc 21 137 9 view .LVU346
 1541 010e E0EE077A 		vfma.f32	s15, s0, s14
 1542 0112 C3ED007A 		vstr.32	s15, [r3]
 1543              	.LBE976:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 83


 1544              	.LBE977:
 1545              	.LBE980:
 1546              	.LBE1005:
1051:Veno-Echo.cpp **** 
 1547              		.loc 19 1051 1 view .LVU347
 1548 0116 10BD     		pop	{r4, pc}
 1549              	.LVL76:
 1550              	.L61:
 1551              		.cfi_restore_state
 1552              	.LBB1006:
 1553              	.LBB981:
1028:Veno-Echo.cpp ****         {
 1554              		.loc 19 1028 9 is_stmt 1 view .LVU348
1028:Veno-Echo.cpp ****         {
 1555              		.loc 19 1028 19 is_stmt 0 view .LVU349
 1556 0118 2E4B     		ldr	r3, .L83+8
1028:Veno-Echo.cpp ****         {
 1557              		.loc 19 1028 9 view .LVU350
 1558 011a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1559 011c 22BB     		cbnz	r2, .L71
1030:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState_alt(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true
 1560              		.loc 19 1030 13 is_stmt 1 view .LVU351
1031:Veno-Echo.cpp ****         }
 1561              		.loc 19 1031 51 is_stmt 0 view .LVU352
 1562 011e 354C     		ldr	r4, .L83+40
1030:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState_alt(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true
 1563              		.loc 19 1030 23 view .LVU353
 1564 0120 0121     		movs	r1, #1
 1565              	.LBB982:
 1566              	.LBB983:
1876:Veno-Echo.cpp ****         {
 1567              		.loc 19 1876 31 view .LVU354
 1568 0122 9FED2E7A 		vldr.32	s14, .L83+16
 1569              	.LBE983:
 1570              	.LBE982:
1031:Veno-Echo.cpp ****         }
 1571              		.loc 19 1031 51 view .LVU355
 1572 0126 D4ED007A 		vldr.32	s15, [r4]
1030:Veno-Echo.cpp ****             HPCutoff_pickup = checkPickupState_alt(feedbackL_Pot,HPCutoff_Last,HPCutoff_pickup,true
 1573              		.loc 19 1030 23 view .LVU356
 1574 012a 1970     		strb	r1, [r3]
1031:Veno-Echo.cpp ****         }
 1575              		.loc 19 1031 13 is_stmt 1 view .LVU357
 1576              	.LVL77:
 1577              	.LBB988:
 1578              	.LBI982:
1870:Veno-Echo.cpp **** {
 1579              		.loc 19 1870 13 view .LVU358
 1580              	.LBB984:
1872:Veno-Echo.cpp **** 
 1581              		.loc 19 1872 5 view .LVU359
1874:Veno-Echo.cpp ****     {
 1582              		.loc 19 1874 5 view .LVU360
1876:Veno-Echo.cpp ****         {
 1583              		.loc 19 1876 9 view .LVU361
1876:Veno-Echo.cpp ****         {
 1584              		.loc 19 1876 31 is_stmt 0 view .LVU362
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 84


 1585 012c 77EEC76A 		vsub.f32	s13, s15, s14
1876:Veno-Echo.cpp ****         {
 1586              		.loc 19 1876 9 view .LVU363
 1587 0130 B4EEE60A 		vcmpe.f32	s0, s13
 1588 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1589 0138 0BD4     		bmi	.L72
1881:Veno-Echo.cpp ****         {
 1590              		.loc 19 1881 14 is_stmt 1 view .LVU364
1881:Veno-Echo.cpp ****         {
 1591              		.loc 19 1881 36 is_stmt 0 view .LVU365
 1592 013a 77EE877A 		vadd.f32	s15, s15, s14
 1593              	.LVL78:
1881:Veno-Echo.cpp ****         {
 1594              		.loc 19 1881 36 view .LVU366
 1595              	.LBE984:
 1596              	.LBE988:
1031:Veno-Echo.cpp ****         }
 1597              		.loc 19 1031 29 view .LVU367
 1598 013e 2E4B     		ldr	r3, .L83+44
 1599              	.LBB989:
 1600              	.LBB985:
1881:Veno-Echo.cpp ****         {
 1601              		.loc 19 1881 14 view .LVU368
 1602 0140 B4EEE70A 		vcmpe.f32	s0, s15
 1603 0144 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1604 0148 3DDD     		ble	.L81
 1605              	.LVL79:
1915:Veno-Echo.cpp **** }
 1606              		.loc 19 1915 5 is_stmt 1 view .LVU369
1915:Veno-Echo.cpp **** }
 1607              		.loc 19 1915 5 is_stmt 0 view .LVU370
 1608              	.LBE985:
 1609              	.LBE989:
1031:Veno-Echo.cpp ****         }
 1610              		.loc 19 1031 29 view .LVU371
 1611 014a 1970     		strb	r1, [r3]
1039:Veno-Echo.cpp ****         {
 1612              		.loc 19 1039 9 is_stmt 1 view .LVU372
 1613              	.L60:
1039:Veno-Echo.cpp ****         {
 1614              		.loc 19 1039 9 is_stmt 0 view .LVU373
 1615              	.LBE981:
 1616              	.LBE1006:
1051:Veno-Echo.cpp **** 
 1617              		.loc 19 1051 1 view .LVU374
 1618 014c BDEC028B 		vldm	sp!, {d8}
 1619              		.cfi_remember_state
 1620              		.cfi_restore 80
 1621              		.cfi_restore 81
 1622              		.cfi_def_cfa_offset 8
 1623 0150 10BD     		pop	{r4, pc}
 1624              	.LVL80:
 1625              	.L72:
 1626              		.cfi_restore_state
 1627              	.LBB1007:
 1628              	.LBB999:
 1629              	.LBB990:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 85


 1630              	.LBB986:
1915:Veno-Echo.cpp **** }
 1631              		.loc 19 1915 5 is_stmt 1 view .LVU375
1915:Veno-Echo.cpp **** }
 1632              		.loc 19 1915 5 is_stmt 0 view .LVU376
 1633              	.LBE986:
 1634              	.LBE990:
1031:Veno-Echo.cpp ****         }
 1635              		.loc 19 1031 29 view .LVU377
 1636 0152 294B     		ldr	r3, .L83+44
 1637              	.LBE999:
 1638              	.LBE1007:
1051:Veno-Echo.cpp **** 
 1639              		.loc 19 1051 1 view .LVU378
 1640 0154 BDEC028B 		vldm	sp!, {d8}
 1641              		.cfi_remember_state
 1642              		.cfi_restore 80
 1643              		.cfi_restore 81
 1644              		.cfi_def_cfa_offset 8
 1645              	.LBB1008:
 1646              	.LBB1000:
1031:Veno-Echo.cpp ****         }
 1647              		.loc 19 1031 29 view .LVU379
 1648 0158 1A70     		strb	r2, [r3]
1039:Veno-Echo.cpp ****         {
 1649              		.loc 19 1039 9 is_stmt 1 view .LVU380
 1650              	.LBE1000:
 1651              	.LBE1008:
1051:Veno-Echo.cpp **** 
 1652              		.loc 19 1051 1 is_stmt 0 view .LVU381
 1653 015a 10BD     		pop	{r4, pc}
 1654              	.LVL81:
 1655              	.L76:
 1656              		.cfi_restore_state
 1657              	.LBB1009:
 1658              	.LBB1001:
 1659              	.LBB978:
 1660              	.LBB972:
1816:Veno-Echo.cpp ****     }
 1661              		.loc 19 1816 16 view .LVU382
 1662 015c 9FED220A 		vldr.32	s0, .L83+28
 1663              	.LVL82:
1816:Veno-Echo.cpp ****     }
 1664              		.loc 19 1816 16 view .LVU383
 1665 0160 C3E7     		b	.L66
 1666              	.LVL83:
 1667              	.L77:
1816:Veno-Echo.cpp ****     }
 1668              		.loc 19 1816 16 view .LVU384
 1669              	.LBE972:
 1670              	.LBE978:
 1671              	.LBB979:
 1672              	.LBB955:
 1673 0162 9FED210A 		vldr.32	s0, .L83+28
 1674              	.LVL84:
1816:Veno-Echo.cpp ****     }
 1675              		.loc 19 1816 16 view .LVU385
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 86


 1676 0166 C2E7     		b	.L68
 1677              	.LVL85:
 1678              	.L71:
1816:Veno-Echo.cpp ****     }
 1679              		.loc 19 1816 16 view .LVU386
 1680              	.LBE955:
 1681              	.LBE979:
 1682              	.LBE1001:
 1683              	.LBB1002:
1036:Veno-Echo.cpp ****         }
 1684              		.loc 19 1036 13 is_stmt 1 view .LVU387
 1685              	.LBB991:
 1686              	.LBI991:
1870:Veno-Echo.cpp **** {
 1687              		.loc 19 1870 13 view .LVU388
 1688              	.LBB992:
1872:Veno-Echo.cpp **** 
 1689              		.loc 19 1872 5 view .LVU389
1874:Veno-Echo.cpp ****     {
 1690              		.loc 19 1874 5 view .LVU390
 1691              	.LBE992:
 1692              	.LBE991:
1036:Veno-Echo.cpp ****         }
 1693              		.loc 19 1036 51 is_stmt 0 view .LVU391
 1694 0168 234B     		ldr	r3, .L83+44
 1695 016a 224C     		ldr	r4, .L83+40
 1696              	.LBB994:
 1697              	.LBB993:
 1698 016c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1699 016e D4ED000A 		vldr.32	s1, [r4]
 1700 0172 FFF7FEFF 		bl	_Z20checkPickupState_altff11pickupStateb.part.0
 1701              	.LVL86:
1915:Veno-Echo.cpp **** }
 1702              		.loc 19 1915 5 is_stmt 1 view .LVU392
1915:Veno-Echo.cpp **** }
 1703              		.loc 19 1915 5 is_stmt 0 view .LVU393
 1704              	.LBE993:
 1705              	.LBE994:
 1706              	.LBB995:
1039:Veno-Echo.cpp ****         {
 1707              		.loc 19 1039 9 view .LVU394
 1708 0176 0228     		cmp	r0, #2
 1709              	.LBE995:
1036:Veno-Echo.cpp ****         }
 1710              		.loc 19 1036 29 view .LVU395
 1711 0178 1870     		strb	r0, [r3]
1039:Veno-Echo.cpp ****         {
 1712              		.loc 19 1039 9 is_stmt 1 view .LVU396
 1713              	.LBB997:
 1714 017a E7D1     		bne	.L60
 1715              	.L75:
 1716              	.LBB996:
1041:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1717              		.loc 19 1041 13 view .LVU397
 1718              	.LVL87:
1042:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1719              		.loc 19 1042 13 view .LVU398
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 87


1042:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1720              		.loc 19 1042 29 is_stmt 0 view .LVU399
 1721 017c 9FED1F1A 		vldr.32	s2, .L83+48
 1722 0180 B0EE480A 		vmov.f32	s0, s16
 1723              	.LVL88:
1042:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1724              		.loc 19 1042 29 view .LVU400
 1725 0184 DFED1E0A 		vldr.32	s1, .L83+52
 1726 0188 0120     		movs	r0, #1
 1727 018a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1728              	.LVL89:
 1729 018e F0EE408A 		vmov.f32	s17, s0
 1730              	.LVL90:
1043:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1731              		.loc 19 1043 13 is_stmt 1 view .LVU401
1043:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1732              		.loc 19 1043 26 is_stmt 0 view .LVU402
 1733 0192 1C48     		ldr	r0, .L83+56
 1734 0194 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1735              	.LVL91:
1044:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1736              		.loc 19 1044 13 is_stmt 1 view .LVU403
1044:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1737              		.loc 19 1044 26 is_stmt 0 view .LVU404
 1738 0198 1B48     		ldr	r0, .L83+60
 1739 019a B0EE680A 		vmov.f32	s0, s17
 1740 019e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1741              	.LVL92:
1045:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1742              		.loc 19 1045 13 is_stmt 1 view .LVU405
1045:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1743              		.loc 19 1045 31 is_stmt 0 view .LVU406
 1744 01a2 B0EE680A 		vmov.f32	s0, s17
 1745 01a6 1948     		ldr	r0, .L83+64
 1746 01a8 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1747              	.LVL93:
1046:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1748              		.loc 19 1046 13 is_stmt 1 view .LVU407
1046:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1749              		.loc 19 1046 31 is_stmt 0 view .LVU408
 1750 01ac B0EE680A 		vmov.f32	s0, s17
 1751 01b0 1748     		ldr	r0, .L83+68
 1752 01b2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1753              	.LVL94:
1047:Veno-Echo.cpp ****             HPCutoff_Last = feedbackL_Pot;  //update last value
 1754              		.loc 19 1047 13 is_stmt 1 view .LVU409
1047:Veno-Echo.cpp ****             HPCutoff_Last = feedbackL_Pot;  //update last value
 1755              		.loc 19 1047 35 is_stmt 0 view .LVU410
 1756 01b6 174B     		ldr	r3, .L83+72
1048:Veno-Echo.cpp ****         }
 1757              		.loc 19 1048 27 view .LVU411
 1758 01b8 84ED008A 		vstr.32	s16, [r4]
1047:Veno-Echo.cpp ****             HPCutoff_Last = feedbackL_Pot;  //update last value
 1759              		.loc 19 1047 35 view .LVU412
 1760 01bc C3ED048A 		vstr.32	s17, [r3, #16]
1048:Veno-Echo.cpp ****         }
 1761              		.loc 19 1048 13 is_stmt 1 view .LVU413
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 88


 1762              	.LBE996:
 1763              	.LBE997:
 1764              	.LBE1002:
 1765              	.LBE1009:
1051:Veno-Echo.cpp **** 
 1766              		.loc 19 1051 1 is_stmt 0 view .LVU414
 1767 01c0 BDEC028B 		vldm	sp!, {d8}
 1768              		.cfi_remember_state
 1769              		.cfi_restore 80
 1770              		.cfi_restore 81
 1771              		.cfi_def_cfa_offset 8
 1772              	.LVL95:
1051:Veno-Echo.cpp **** 
 1773              		.loc 19 1051 1 view .LVU415
 1774 01c4 10BD     		pop	{r4, pc}
 1775              	.LVL96:
 1776              	.L81:
 1777              		.cfi_restore_state
 1778              	.LBB1010:
 1779              	.LBB1003:
 1780              	.LBB998:
 1781              	.LBB987:
1915:Veno-Echo.cpp **** }
 1782              		.loc 19 1915 5 is_stmt 1 view .LVU416
1915:Veno-Echo.cpp **** }
 1783              		.loc 19 1915 5 is_stmt 0 view .LVU417
 1784              	.LBE987:
 1785              	.LBE998:
1031:Veno-Echo.cpp ****         }
 1786              		.loc 19 1031 29 view .LVU418
 1787 01c6 0222     		movs	r2, #2
 1788 01c8 1A70     		strb	r2, [r3]
1039:Veno-Echo.cpp ****         {
 1789              		.loc 19 1039 9 is_stmt 1 view .LVU419
 1790 01ca D7E7     		b	.L75
 1791              	.L84:
 1792              		.align	2
 1793              	.L83:
 1794 01cc 18000000 		.word	.LANCHOR4+24
 1795 01d0 00000000 		.word	.LANCHOR8
 1796 01d4 00000000 		.word	.LANCHOR9
 1797 01d8 00000000 		.word	.LANCHOR10
 1798 01dc 0AD7A33B 		.word	1000593162
 1799 01e0 00000000 		.word	.LANCHOR11
 1800 01e4 00000000 		.word	.LANCHOR7
 1801 01e8 00000000 		.word	0
 1802 01ec 00000000 		.word	.LANCHOR12
 1803 01f0 6F12033D 		.word	1023611503
 1804 01f4 00000000 		.word	.LANCHOR13
 1805 01f8 00000000 		.word	.LANCHOR14
 1806 01fc 00004844 		.word	1145569280
 1807 0200 0000C842 		.word	1120403456
 1808 0204 00000000 		.word	.LANCHOR15
 1809 0208 00000000 		.word	.LANCHOR16
 1810 020c 00000000 		.word	.LANCHOR17
 1811 0210 00000000 		.word	.LANCHOR18
 1812 0214 00000000 		.word	.LANCHOR19
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 89


 1813              	.LBE1003:
 1814              	.LBE1010:
 1815              		.cfi_endproc
 1816              	.LFE4296:
 1818              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 1819              		.align	1
 1820              		.p2align 2,,3
 1821              		.global	_Z19Update_feedbackR_CVv
 1822              		.syntax unified
 1823              		.thumb
 1824              		.thumb_func
 1825              		.fpu fpv5-d16
 1827              	_Z19Update_feedbackR_CVv:
 1828              	.LFB4297:
1054:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1829              		.loc 19 1054 1 view -0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
1055:Veno-Echo.cpp **** }
 1833              		.loc 19 1055 5 view .LVU421
1054:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1834              		.loc 19 1054 1 is_stmt 0 view .LVU422
 1835 0000 08B5     		push	{r3, lr}
 1836              		.cfi_def_cfa_offset 8
 1837              		.cfi_offset 3, -8
 1838              		.cfi_offset 14, -4
1055:Veno-Echo.cpp **** }
 1839              		.loc 19 1055 35 view .LVU423
 1840 0002 0321     		movs	r1, #3
 1841 0004 0348     		ldr	r0, .L87
 1842 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1843              	.LVL97:
1055:Veno-Echo.cpp **** }
 1844              		.loc 19 1055 18 view .LVU424
 1845 000a 034B     		ldr	r3, .L87+4
 1846 000c 83ED000A 		vstr.32	s0, [r3]
1056:Veno-Echo.cpp **** 
 1847              		.loc 19 1056 1 view .LVU425
 1848 0010 08BD     		pop	{r3, pc}
 1849              	.L88:
 1850 0012 00BF     		.align	2
 1851              	.L87:
 1852 0014 18000000 		.word	.LANCHOR4+24
 1853 0018 00000000 		.word	.LANCHOR20
 1854              		.cfi_endproc
 1855              	.LFE4297:
 1857              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 1858              		.align	1
 1859              		.p2align 2,,3
 1860              		.global	_Z16Update_feedbackRv
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1864              		.fpu fpv5-d16
 1866              	_Z16Update_feedbackRv:
 1867              	.LFB4298:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 90


1059:Veno-Echo.cpp ****     static bool lastShift{};
 1868              		.loc 19 1059 1 is_stmt 1 view -0
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 0
 1871              		@ frame_needed = 0, uses_anonymous_args = 0
1060:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 1872              		.loc 19 1060 5 view .LVU427
1061:Veno-Echo.cpp ****     static pickupState LPCutoff_pickup{};
 1873              		.loc 19 1061 5 view .LVU428
1062:Veno-Echo.cpp **** 
 1874              		.loc 19 1062 5 view .LVU429
1064:Veno-Echo.cpp ****     static float LPCutoff_Last{};
 1875              		.loc 19 1064 5 view .LVU430
1065:Veno-Echo.cpp **** 
 1876              		.loc 19 1065 5 view .LVU431
1068:Veno-Echo.cpp **** 
 1877              		.loc 19 1068 5 view .LVU432
1059:Veno-Echo.cpp ****     static bool lastShift{};
 1878              		.loc 19 1059 1 is_stmt 0 view .LVU433
 1879 0000 10B5     		push	{r4, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 4, -8
 1882              		.cfi_offset 14, -4
1068:Veno-Echo.cpp **** 
 1883              		.loc 19 1068 43 view .LVU434
 1884 0002 0422     		movs	r2, #4
 1885 0004 0721     		movs	r1, #7
 1886 0006 7148     		ldr	r0, .L112
1059:Veno-Echo.cpp ****     static bool lastShift{};
 1887              		.loc 19 1059 1 view .LVU435
 1888 0008 2DED028B 		vpush.64	{d8}
 1889              		.cfi_def_cfa_offset 16
 1890              		.cfi_offset 80, -16
 1891              		.cfi_offset 81, -12
1068:Veno-Echo.cpp **** 
 1892              		.loc 19 1068 43 view .LVU436
 1893 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1894              	.LVL98:
 1895              	.LBB1038:
1070:Veno-Echo.cpp ****     {   
 1896              		.loc 19 1070 9 view .LVU437
 1897 0010 6F4B     		ldr	r3, .L112+4
 1898              	.LBE1038:
1068:Veno-Echo.cpp **** 
 1899              		.loc 19 1068 43 view .LVU438
 1900 0012 B0EE408A 		vmov.f32	s16, s0
 1901              	.LVL99:
1070:Veno-Echo.cpp ****     {   
 1902              		.loc 19 1070 5 is_stmt 1 view .LVU439
 1903              	.LBB1102:
 1904 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1905 0018 002B     		cmp	r3, #0
 1906 001a 7DD1     		bne	.L90
 1907              	.LBB1039:
1072:Veno-Echo.cpp ****         {
 1908              		.loc 19 1072 9 view .LVU440
1072:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 91


 1909              		.loc 19 1072 19 is_stmt 0 view .LVU441
 1910 001c 6D49     		ldr	r1, .L112+8
1072:Veno-Echo.cpp ****         {
 1911              		.loc 19 1072 9 view .LVU442
 1912 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1913 0020 92B3     		cbz	r2, .L91
1074:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 1914              		.loc 19 1074 13 is_stmt 1 view .LVU443
1075:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1915              		.loc 19 1075 48 is_stmt 0 view .LVU444
 1916 0022 6D4A     		ldr	r2, .L112+12
 1917              	.LBB1040:
 1918              	.LBB1041:
1834:Veno-Echo.cpp ****         {
 1919              		.loc 19 1834 9 view .LVU445
 1920 0024 9FED6D7A 		vldr.32	s14, .L112+16
1834:Veno-Echo.cpp ****         {
 1921              		.loc 19 1834 15 view .LVU446
 1922 0028 D2ED007A 		vldr.32	s15, [r2]
 1923              	.LBE1041:
 1924              	.LBE1040:
1074:Veno-Echo.cpp ****             feedbackR_pickup = checkPickupState(feedbackR_Pot,feedbackR_Last,feedbackR_pickup,true)
 1925              		.loc 19 1074 23 view .LVU447
 1926 002c 0B70     		strb	r3, [r1]
1075:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1927              		.loc 19 1075 13 is_stmt 1 view .LVU448
 1928              	.LVL100:
 1929              	.LBB1048:
 1930              	.LBI1040:
1828:Veno-Echo.cpp **** {
 1931              		.loc 19 1828 6 view .LVU449
 1932              	.LBB1046:
1830:Veno-Echo.cpp ****     
 1933              		.loc 19 1830 5 view .LVU450
1832:Veno-Echo.cpp ****     {
 1934              		.loc 19 1832 5 view .LVU451
1834:Veno-Echo.cpp ****         {
 1935              		.loc 19 1834 9 view .LVU452
 1936              	.LBB1042:
 1937              	.LBI1042:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1938              		.loc 20 75 3 view .LVU453
 1939              	.LBB1043:
 1940              		.loc 20 76 5 view .LVU454
 1941              		.loc 20 76 5 is_stmt 0 view .LVU455
 1942              	.LBE1043:
 1943              	.LBE1042:
1834:Veno-Echo.cpp ****         {
 1944              		.loc 19 1834 15 view .LVU456
 1945 002e 70EE677A 		vsub.f32	s15, s0, s15
 1946              	.LVL101:
1834:Veno-Echo.cpp ****         {
 1947              		.loc 19 1834 15 view .LVU457
 1948              	.LBE1046:
 1949              	.LBE1048:
1075:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1950              		.loc 19 1075 30 view .LVU458
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 92


 1951 0032 6B48     		ldr	r0, .L112+20
1076:Veno-Echo.cpp ****         } 
 1952              		.loc 19 1076 28 view .LVU459
 1953 0034 82ED000A 		vstr.32	s0, [r2]
 1954              	.LVL102:
 1955              	.LBB1049:
 1956              	.LBB1047:
 1957              	.LBB1045:
 1958              	.LBB1044:
 1959              		.loc 20 76 31 view .LVU460
 1960 0038 F0EEE77A 		vabs.f32	s15, s15
 1961              	.LBE1044:
 1962              	.LBE1045:
1834:Veno-Echo.cpp ****         {
 1963              		.loc 19 1834 9 view .LVU461
 1964 003c F4EEC77A 		vcmpe.f32	s15, s14
 1965 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1966 0044 D4BF     		ite	le
 1967 0046 0123     		movle	r3, #1
 1968 0048 0023     		movgt	r3, #0
 1969              	.LVL103:
1865:Veno-Echo.cpp **** 
 1970              		.loc 19 1865 5 is_stmt 1 view .LVU462
1865:Veno-Echo.cpp **** 
 1971              		.loc 19 1865 5 is_stmt 0 view .LVU463
 1972              	.LBE1047:
 1973              	.LBE1049:
1075:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1974              		.loc 19 1075 30 view .LVU464
 1975 004a 0370     		strb	r3, [r0]
1076:Veno-Echo.cpp ****         } 
 1976              		.loc 19 1076 13 is_stmt 1 view .LVU465
 1977              	.L92:
1083:Veno-Echo.cpp ****         
 1978              		.loc 19 1083 9 view .LVU466
 1979              	.LVL104:
1085:Veno-Echo.cpp ****         {
 1980              		.loc 19 1085 9 view .LVU467
 1981 004c 8BBB     		cbnz	r3, .L93
1093:Veno-Echo.cpp ****         }
 1982              		.loc 19 1093 13 view .LVU468
 1983              	.LVL105:
 1984              	.LBB1050:
 1985              	.LBI1050:
1809:Veno-Echo.cpp **** {
 1986              		.loc 19 1809 7 view .LVU469
 1987              	.LBB1051:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1988              		.loc 19 1811 5 view .LVU470
1812:Veno-Echo.cpp **** 
 1989              		.loc 19 1812 5 view .LVU471
 1990              	.LBE1051:
 1991              	.LBE1050:
1093:Veno-Echo.cpp ****         }
 1992              		.loc 19 1093 41 is_stmt 0 view .LVU472
 1993 004e 654B     		ldr	r3, .L112+24
 1994              	.LBB1054:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 93


 1995              	.LBB1052:
1812:Veno-Echo.cpp **** 
 1996              		.loc 19 1812 39 view .LVU473
 1997 0050 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 1998              		.loc 19 1812 49 view .LVU474
 1999 0054 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 2000              		.loc 19 1812 12 view .LVU475
 2001 0058 92ED000A 		vldr.32	s0, [r2]
 2002              	.LVL106:
1812:Veno-Echo.cpp **** 
 2003              		.loc 19 1812 39 view .LVU476
 2004 005c D3ED007A 		vldr.32	s15, [r3]
1812:Veno-Echo.cpp **** 
 2005              		.loc 19 1812 12 view .LVU477
 2006 0060 F0EE006A 		vmov.f32	s13, #2.0e+0
1812:Veno-Echo.cpp **** 
 2007              		.loc 19 1812 39 view .LVU478
 2008 0064 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 2009              		.loc 19 1812 49 view .LVU479
 2010 0068 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 2011              		.loc 19 1812 12 view .LVU480
 2012 006c A7EEA60A 		vfma.f32	s0, s15, s13
 2013              	.LVL107:
1814:Veno-Echo.cpp ****     {
 2014              		.loc 19 1814 5 is_stmt 1 view .LVU481
 2015 0070 B5EEC00A 		vcmpe.f32	s0, #0
 2016 0074 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2017 0078 73D4     		bmi	.L106
1819:Veno-Echo.cpp ****     {
 2018              		.loc 19 1819 5 view .LVU482
1821:Veno-Echo.cpp ****     }
 2019              		.loc 19 1821 16 is_stmt 0 view .LVU483
 2020 007a B4EE470A 		vcmp.f32	s0, s14
 2021 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2022 0082 37FE000A 		vselgt.f32	s0, s14, s0
 2023              	.LVL108:
1821:Veno-Echo.cpp ****     }
 2024              		.loc 19 1821 16 view .LVU484
 2025 0086 32E0     		b	.L97
 2026              	.LVL109:
 2027              	.L91:
1821:Veno-Echo.cpp ****     }
 2028              		.loc 19 1821 16 view .LVU485
 2029              	.LBE1052:
 2030              	.LBE1054:
1080:Veno-Echo.cpp ****         }
 2031              		.loc 19 1080 13 is_stmt 1 view .LVU486
1080:Veno-Echo.cpp ****         }
 2032              		.loc 19 1080 48 is_stmt 0 view .LVU487
 2033 0088 5549     		ldr	r1, .L112+20
 2034 008a 534A     		ldr	r2, .L112+12
 2035              	.LBB1055:
 2036              	.LBB1056:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 94


 2037              	.LBB1057:
 2038              	.LBB1058:
1846:Veno-Echo.cpp ****     {
 2039              		.loc 19 1846 5 view .LVU488
 2040 008c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2041              	.LBE1058:
 2042              	.LBE1057:
 2043              	.LBE1056:
 2044              	.LBE1055:
1080:Veno-Echo.cpp ****         }
 2045              		.loc 19 1080 48 view .LVU489
 2046 008e D2ED007A 		vldr.32	s15, [r2]
 2047              	.LVL110:
 2048              	.LBB1066:
 2049              	.LBI1055:
1828:Veno-Echo.cpp **** {
 2050              		.loc 19 1828 6 is_stmt 1 view .LVU490
 2051              	.LBB1065:
1830:Veno-Echo.cpp ****     
 2052              		.loc 19 1830 5 view .LVU491
1832:Veno-Echo.cpp ****     {
 2053              		.loc 19 1832 5 view .LVU492
 2054              	.LBB1064:
 2055              	.LBI1057:
1828:Veno-Echo.cpp **** {
 2056              		.loc 19 1828 6 view .LVU493
 2057              	.LBB1063:
1846:Veno-Echo.cpp ****     {
 2058              		.loc 19 1846 5 view .LVU494
 2059 0092 73B9     		cbnz	r3, .L93
1848:Veno-Echo.cpp ****         {
 2060              		.loc 19 1848 9 view .LVU495
 2061              	.LVL111:
 2062              	.LBB1059:
 2063              	.LBI1059:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2064              		.loc 20 75 3 view .LVU496
 2065              	.LBB1060:
 2066              		.loc 20 76 5 view .LVU497
 2067              		.loc 20 76 5 is_stmt 0 view .LVU498
 2068              	.LBE1060:
 2069              	.LBE1059:
1848:Veno-Echo.cpp ****         {
 2070              		.loc 19 1848 15 view .LVU499
 2071 0094 70EE677A 		vsub.f32	s15, s0, s15
 2072              	.LVL112:
1848:Veno-Echo.cpp ****         {
 2073              		.loc 19 1848 9 view .LVU500
 2074 0098 9FED507A 		vldr.32	s14, .L112+16
 2075              	.LBB1062:
 2076              	.LBB1061:
 2077              		.loc 20 76 31 view .LVU501
 2078 009c F0EEE77A 		vabs.f32	s15, s15
 2079              	.LBE1061:
 2080              	.LBE1062:
1848:Veno-Echo.cpp ****         {
 2081              		.loc 19 1848 9 view .LVU502
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 95


 2082 00a0 F4EEC77A 		vcmpe.f32	s15, s14
 2083 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2084 00a8 CCBF     		ite	gt
 2085 00aa 0123     		movgt	r3, #1
 2086 00ac 0023     		movle	r3, #0
 2087              	.LVL113:
1865:Veno-Echo.cpp **** 
 2088              		.loc 19 1865 5 is_stmt 1 view .LVU503
1865:Veno-Echo.cpp **** 
 2089              		.loc 19 1865 5 is_stmt 0 view .LVU504
 2090              	.LBE1063:
 2091              	.LBE1064:
1865:Veno-Echo.cpp **** 
 2092              		.loc 19 1865 5 is_stmt 1 view .LVU505
1865:Veno-Echo.cpp **** 
 2093              		.loc 19 1865 5 is_stmt 0 view .LVU506
 2094              	.LBE1065:
 2095              	.LBE1066:
1080:Veno-Echo.cpp ****         }
 2096              		.loc 19 1080 30 view .LVU507
 2097 00ae 0B70     		strb	r3, [r1]
 2098 00b0 CCE7     		b	.L92
 2099              	.L93:
1087:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2100              		.loc 19 1087 13 is_stmt 1 view .LVU508
 2101              	.LVL114:
 2102              	.LBB1067:
 2103              	.LBI1067:
1809:Veno-Echo.cpp **** {
 2104              		.loc 19 1809 7 view .LVU509
 2105              	.LBB1068:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2106              		.loc 19 1811 5 view .LVU510
1812:Veno-Echo.cpp **** 
 2107              		.loc 19 1812 5 view .LVU511
 2108              	.LBE1068:
 2109              	.LBE1067:
1087:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2110              		.loc 19 1087 41 is_stmt 0 view .LVU512
 2111 00b2 4C4B     		ldr	r3, .L112+24
 2112              	.LBB1071:
 2113              	.LBB1069:
1812:Veno-Echo.cpp **** 
 2114              		.loc 19 1812 39 view .LVU513
 2115 00b4 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 2116              		.loc 19 1812 49 view .LVU514
 2117 00b8 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 2118              		.loc 19 1812 39 view .LVU515
 2119 00bc D3ED007A 		vldr.32	s15, [r3]
1812:Veno-Echo.cpp **** 
 2120              		.loc 19 1812 12 view .LVU516
 2121 00c0 F0EE006A 		vmov.f32	s13, #2.0e+0
 2122 00c4 B0EE480A 		vmov.f32	s0, s16
 2123              	.LVL115:
1812:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 96


 2124              		.loc 19 1812 39 view .LVU517
 2125 00c8 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 2126              		.loc 19 1812 49 view .LVU518
 2127 00cc 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 2128              		.loc 19 1812 12 view .LVU519
 2129 00d0 A7EEA60A 		vfma.f32	s0, s15, s13
 2130              	.LVL116:
1814:Veno-Echo.cpp ****     {
 2131              		.loc 19 1814 5 is_stmt 1 view .LVU520
 2132 00d4 B5EEC00A 		vcmpe.f32	s0, #0
 2133 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2134 00dc 3ED4     		bmi	.L105
1819:Veno-Echo.cpp ****     {
 2135              		.loc 19 1819 5 view .LVU521
1821:Veno-Echo.cpp ****     }
 2136              		.loc 19 1821 16 is_stmt 0 view .LVU522
 2137 00de B4EE470A 		vcmp.f32	s0, s14
 2138 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2139 00e6 37FE000A 		vselgt.f32	s0, s14, s0
 2140              	.LVL117:
 2141              	.L95:
1824:Veno-Echo.cpp **** }
 2142              		.loc 19 1824 5 is_stmt 1 view .LVU523
1824:Veno-Echo.cpp **** }
 2143              		.loc 19 1824 5 is_stmt 0 view .LVU524
 2144              	.LBE1069:
 2145              	.LBE1071:
1088:Veno-Echo.cpp ****         }
 2146              		.loc 19 1088 13 is_stmt 1 view .LVU525
1088:Veno-Echo.cpp ****         }
 2147              		.loc 19 1088 28 is_stmt 0 view .LVU526
 2148 00ea 82ED008A 		vstr.32	s16, [r2]
 2149              	.LVL118:
 2150              	.L97:
1096:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2151              		.loc 19 1096 9 is_stmt 1 view .LVU527
1096:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2152              		.loc 19 1096 37 is_stmt 0 view .LVU528
 2153 00ee B7EE041A 		vmov.f32	s2, #1.25e+0
 2154 00f2 0020     		movs	r0, #0
 2155 00f4 DFED3C0A 		vldr.32	s1, .L112+28
 2156 00f8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2157              	.LVL119:
1097:Veno-Echo.cpp ****     }
 2158              		.loc 19 1097 9 is_stmt 1 view .LVU529
 2159              	.LBB1072:
 2160              	.LBI1072:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2161              		.loc 21 135 13 view .LVU530
 2162              	.LBB1073:
 2163              		.loc 21 137 5 view .LVU531
 2164              		.loc 21 137 9 is_stmt 0 view .LVU532
 2165 00fc 3B4B     		ldr	r3, .L112+32
 2166 00fe 9FED3C7A 		vldr.32	s14, .L112+36
 2167 0102 D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 97


 2168              		.loc 21 137 24 view .LVU533
 2169 0106 30EE670A 		vsub.f32	s0, s0, s15
 2170              	.LVL120:
 2171              		.loc 21 137 24 view .LVU534
 2172              	.LBE1073:
 2173              	.LBE1072:
 2174              	.LBE1039:
 2175              	.LBE1102:
1124:Veno-Echo.cpp **** 
 2176              		.loc 19 1124 1 view .LVU535
 2177 010a BDEC028B 		vldm	sp!, {d8}
 2178              		.cfi_remember_state
 2179              		.cfi_restore 80
 2180              		.cfi_restore 81
 2181              		.cfi_def_cfa_offset 8
 2182              	.LVL121:
 2183              	.LBB1103:
 2184              	.LBB1078:
 2185              	.LBB1075:
 2186              	.LBB1074:
 2187              		.loc 21 137 9 view .LVU536
 2188 010e E0EE077A 		vfma.f32	s15, s0, s14
 2189 0112 C3ED007A 		vstr.32	s15, [r3]
 2190              	.LBE1074:
 2191              	.LBE1075:
 2192              	.LBE1078:
 2193              	.LBE1103:
1124:Veno-Echo.cpp **** 
 2194              		.loc 19 1124 1 view .LVU537
 2195 0116 10BD     		pop	{r4, pc}
 2196              	.LVL122:
 2197              	.L90:
 2198              		.cfi_restore_state
 2199              	.LBB1104:
 2200              	.LBB1079:
1101:Veno-Echo.cpp ****         {
 2201              		.loc 19 1101 10 is_stmt 1 view .LVU538
1101:Veno-Echo.cpp ****         {
 2202              		.loc 19 1101 20 is_stmt 0 view .LVU539
 2203 0118 2E4B     		ldr	r3, .L112+8
1101:Veno-Echo.cpp ****         {
 2204              		.loc 19 1101 10 view .LVU540
 2205 011a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2206 011c 22BB     		cbnz	r2, .L100
1103:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState_alt(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true
 2207              		.loc 19 1103 13 is_stmt 1 view .LVU541
1104:Veno-Echo.cpp ****         }
 2208              		.loc 19 1104 51 is_stmt 0 view .LVU542
 2209 011e 354C     		ldr	r4, .L112+40
1103:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState_alt(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true
 2210              		.loc 19 1103 23 view .LVU543
 2211 0120 0121     		movs	r1, #1
 2212              	.LBB1080:
 2213              	.LBB1081:
1876:Veno-Echo.cpp ****         {
 2214              		.loc 19 1876 31 view .LVU544
 2215 0122 9FED2E7A 		vldr.32	s14, .L112+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 98


 2216              	.LBE1081:
 2217              	.LBE1080:
1104:Veno-Echo.cpp ****         }
 2218              		.loc 19 1104 51 view .LVU545
 2219 0126 D4ED007A 		vldr.32	s15, [r4]
1103:Veno-Echo.cpp ****             LPCutoff_pickup = checkPickupState_alt(feedbackR_Pot,LPCutoff_Last,LPCutoff_pickup,true
 2220              		.loc 19 1103 23 view .LVU546
 2221 012a 1970     		strb	r1, [r3]
1104:Veno-Echo.cpp ****         }
 2222              		.loc 19 1104 13 is_stmt 1 view .LVU547
 2223              	.LVL123:
 2224              	.LBB1086:
 2225              	.LBI1080:
1870:Veno-Echo.cpp **** {
 2226              		.loc 19 1870 13 view .LVU548
 2227              	.LBB1082:
1872:Veno-Echo.cpp **** 
 2228              		.loc 19 1872 5 view .LVU549
1874:Veno-Echo.cpp ****     {
 2229              		.loc 19 1874 5 view .LVU550
1876:Veno-Echo.cpp ****         {
 2230              		.loc 19 1876 9 view .LVU551
1876:Veno-Echo.cpp ****         {
 2231              		.loc 19 1876 31 is_stmt 0 view .LVU552
 2232 012c 77EEC76A 		vsub.f32	s13, s15, s14
1876:Veno-Echo.cpp ****         {
 2233              		.loc 19 1876 9 view .LVU553
 2234 0130 B4EEE60A 		vcmpe.f32	s0, s13
 2235 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2236 0138 0BD4     		bmi	.L101
1881:Veno-Echo.cpp ****         {
 2237              		.loc 19 1881 14 is_stmt 1 view .LVU554
1881:Veno-Echo.cpp ****         {
 2238              		.loc 19 1881 36 is_stmt 0 view .LVU555
 2239 013a 77EE877A 		vadd.f32	s15, s15, s14
 2240              	.LVL124:
1881:Veno-Echo.cpp ****         {
 2241              		.loc 19 1881 36 view .LVU556
 2242              	.LBE1082:
 2243              	.LBE1086:
1104:Veno-Echo.cpp ****         }
 2244              		.loc 19 1104 29 view .LVU557
 2245 013e 2E4B     		ldr	r3, .L112+44
 2246              	.LBB1087:
 2247              	.LBB1083:
1881:Veno-Echo.cpp ****         {
 2248              		.loc 19 1881 14 view .LVU558
 2249 0140 B4EEE70A 		vcmpe.f32	s0, s15
 2250 0144 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2251 0148 3DDD     		ble	.L110
 2252              	.LVL125:
1915:Veno-Echo.cpp **** }
 2253              		.loc 19 1915 5 is_stmt 1 view .LVU559
1915:Veno-Echo.cpp **** }
 2254              		.loc 19 1915 5 is_stmt 0 view .LVU560
 2255              	.LBE1083:
 2256              	.LBE1087:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 99


1104:Veno-Echo.cpp ****         }
 2257              		.loc 19 1104 29 view .LVU561
 2258 014a 1970     		strb	r1, [r3]
1112:Veno-Echo.cpp ****         {
 2259              		.loc 19 1112 9 is_stmt 1 view .LVU562
 2260              	.L89:
1112:Veno-Echo.cpp ****         {
 2261              		.loc 19 1112 9 is_stmt 0 view .LVU563
 2262              	.LBE1079:
 2263              	.LBE1104:
1124:Veno-Echo.cpp **** 
 2264              		.loc 19 1124 1 view .LVU564
 2265 014c BDEC028B 		vldm	sp!, {d8}
 2266              		.cfi_remember_state
 2267              		.cfi_restore 80
 2268              		.cfi_restore 81
 2269              		.cfi_def_cfa_offset 8
 2270 0150 10BD     		pop	{r4, pc}
 2271              	.LVL126:
 2272              	.L101:
 2273              		.cfi_restore_state
 2274              	.LBB1105:
 2275              	.LBB1097:
 2276              	.LBB1088:
 2277              	.LBB1084:
1915:Veno-Echo.cpp **** }
 2278              		.loc 19 1915 5 is_stmt 1 view .LVU565
1915:Veno-Echo.cpp **** }
 2279              		.loc 19 1915 5 is_stmt 0 view .LVU566
 2280              	.LBE1084:
 2281              	.LBE1088:
1104:Veno-Echo.cpp ****         }
 2282              		.loc 19 1104 29 view .LVU567
 2283 0152 294B     		ldr	r3, .L112+44
 2284              	.LBE1097:
 2285              	.LBE1105:
1124:Veno-Echo.cpp **** 
 2286              		.loc 19 1124 1 view .LVU568
 2287 0154 BDEC028B 		vldm	sp!, {d8}
 2288              		.cfi_remember_state
 2289              		.cfi_restore 80
 2290              		.cfi_restore 81
 2291              		.cfi_def_cfa_offset 8
 2292              	.LBB1106:
 2293              	.LBB1098:
1104:Veno-Echo.cpp ****         }
 2294              		.loc 19 1104 29 view .LVU569
 2295 0158 1A70     		strb	r2, [r3]
1112:Veno-Echo.cpp ****         {
 2296              		.loc 19 1112 9 is_stmt 1 view .LVU570
 2297              	.LBE1098:
 2298              	.LBE1106:
1124:Veno-Echo.cpp **** 
 2299              		.loc 19 1124 1 is_stmt 0 view .LVU571
 2300 015a 10BD     		pop	{r4, pc}
 2301              	.LVL127:
 2302              	.L105:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 100


 2303              		.cfi_restore_state
 2304              	.LBB1107:
 2305              	.LBB1099:
 2306              	.LBB1076:
 2307              	.LBB1070:
1816:Veno-Echo.cpp ****     }
 2308              		.loc 19 1816 16 view .LVU572
 2309 015c 9FED220A 		vldr.32	s0, .L112+28
 2310              	.LVL128:
1816:Veno-Echo.cpp ****     }
 2311              		.loc 19 1816 16 view .LVU573
 2312 0160 C3E7     		b	.L95
 2313              	.LVL129:
 2314              	.L106:
1816:Veno-Echo.cpp ****     }
 2315              		.loc 19 1816 16 view .LVU574
 2316              	.LBE1070:
 2317              	.LBE1076:
 2318              	.LBB1077:
 2319              	.LBB1053:
 2320 0162 9FED210A 		vldr.32	s0, .L112+28
 2321              	.LVL130:
1816:Veno-Echo.cpp ****     }
 2322              		.loc 19 1816 16 view .LVU575
 2323 0166 C2E7     		b	.L97
 2324              	.LVL131:
 2325              	.L100:
1816:Veno-Echo.cpp ****     }
 2326              		.loc 19 1816 16 view .LVU576
 2327              	.LBE1053:
 2328              	.LBE1077:
 2329              	.LBE1099:
 2330              	.LBB1100:
1109:Veno-Echo.cpp ****         }
 2331              		.loc 19 1109 13 is_stmt 1 view .LVU577
 2332              	.LBB1089:
 2333              	.LBI1089:
1870:Veno-Echo.cpp **** {
 2334              		.loc 19 1870 13 view .LVU578
 2335              	.LBB1090:
1872:Veno-Echo.cpp **** 
 2336              		.loc 19 1872 5 view .LVU579
1874:Veno-Echo.cpp ****     {
 2337              		.loc 19 1874 5 view .LVU580
 2338              	.LBE1090:
 2339              	.LBE1089:
1109:Veno-Echo.cpp ****         }
 2340              		.loc 19 1109 51 is_stmt 0 view .LVU581
 2341 0168 234B     		ldr	r3, .L112+44
 2342 016a 224C     		ldr	r4, .L112+40
 2343              	.LBB1092:
 2344              	.LBB1091:
 2345 016c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2346 016e D4ED000A 		vldr.32	s1, [r4]
 2347 0172 FFF7FEFF 		bl	_Z20checkPickupState_altff11pickupStateb.part.0
 2348              	.LVL132:
1915:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 101


 2349              		.loc 19 1915 5 is_stmt 1 view .LVU582
1915:Veno-Echo.cpp **** }
 2350              		.loc 19 1915 5 is_stmt 0 view .LVU583
 2351              	.LBE1091:
 2352              	.LBE1092:
 2353              	.LBB1093:
1112:Veno-Echo.cpp ****         {
 2354              		.loc 19 1112 9 view .LVU584
 2355 0176 0228     		cmp	r0, #2
 2356              	.LBE1093:
1109:Veno-Echo.cpp ****         }
 2357              		.loc 19 1109 29 view .LVU585
 2358 0178 1870     		strb	r0, [r3]
1112:Veno-Echo.cpp ****         {
 2359              		.loc 19 1112 9 is_stmt 1 view .LVU586
 2360              	.LBB1095:
 2361 017a E7D1     		bne	.L89
 2362              	.L104:
 2363              	.LBB1094:
1114:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 2364              		.loc 19 1114 13 view .LVU587
 2365              	.LVL133:
1115:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2366              		.loc 19 1115 13 view .LVU588
1115:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2367              		.loc 19 1115 29 is_stmt 0 view .LVU589
 2368 017c 9FED1F1A 		vldr.32	s2, .L112+48
 2369 0180 B0EE480A 		vmov.f32	s0, s16
 2370              	.LVL134:
1115:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 2371              		.loc 19 1115 29 view .LVU590
 2372 0184 DFED1E0A 		vldr.32	s1, .L112+52
 2373 0188 0120     		movs	r0, #1
 2374 018a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2375              	.LVL135:
 2376 018e F0EE408A 		vmov.f32	s17, s0
 2377              	.LVL136:
1116:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2378              		.loc 19 1116 13 is_stmt 1 view .LVU591
1116:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 2379              		.loc 19 1116 26 is_stmt 0 view .LVU592
 2380 0192 1C48     		ldr	r0, .L112+56
 2381 0194 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2382              	.LVL137:
1117:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2383              		.loc 19 1117 13 is_stmt 1 view .LVU593
1117:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2384              		.loc 19 1117 26 is_stmt 0 view .LVU594
 2385 0198 1B48     		ldr	r0, .L112+60
 2386 019a B0EE680A 		vmov.f32	s0, s17
 2387 019e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2388              	.LVL138:
1118:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2389              		.loc 19 1118 13 is_stmt 1 view .LVU595
1118:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2390              		.loc 19 1118 31 is_stmt 0 view .LVU596
 2391 01a2 B0EE680A 		vmov.f32	s0, s17
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 102


 2392 01a6 1948     		ldr	r0, .L112+64
 2393 01a8 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2394              	.LVL139:
1119:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2395              		.loc 19 1119 13 is_stmt 1 view .LVU597
1119:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2396              		.loc 19 1119 31 is_stmt 0 view .LVU598
 2397 01ac B0EE680A 		vmov.f32	s0, s17
 2398 01b0 1748     		ldr	r0, .L112+68
 2399 01b2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2400              	.LVL140:
1120:Veno-Echo.cpp ****             LPCutoff_Last = feedbackR_Pot;  //update last value
 2401              		.loc 19 1120 13 is_stmt 1 view .LVU599
1120:Veno-Echo.cpp ****             LPCutoff_Last = feedbackR_Pot;  //update last value
 2402              		.loc 19 1120 35 is_stmt 0 view .LVU600
 2403 01b6 174B     		ldr	r3, .L112+72
1121:Veno-Echo.cpp ****         }
 2404              		.loc 19 1121 27 view .LVU601
 2405 01b8 84ED008A 		vstr.32	s16, [r4]
1120:Veno-Echo.cpp ****             LPCutoff_Last = feedbackR_Pot;  //update last value
 2406              		.loc 19 1120 35 view .LVU602
 2407 01bc C3ED058A 		vstr.32	s17, [r3, #20]
1121:Veno-Echo.cpp ****         }
 2408              		.loc 19 1121 13 is_stmt 1 view .LVU603
 2409              	.LBE1094:
 2410              	.LBE1095:
 2411              	.LBE1100:
 2412              	.LBE1107:
1124:Veno-Echo.cpp **** 
 2413              		.loc 19 1124 1 is_stmt 0 view .LVU604
 2414 01c0 BDEC028B 		vldm	sp!, {d8}
 2415              		.cfi_remember_state
 2416              		.cfi_restore 80
 2417              		.cfi_restore 81
 2418              		.cfi_def_cfa_offset 8
 2419              	.LVL141:
1124:Veno-Echo.cpp **** 
 2420              		.loc 19 1124 1 view .LVU605
 2421 01c4 10BD     		pop	{r4, pc}
 2422              	.LVL142:
 2423              	.L110:
 2424              		.cfi_restore_state
 2425              	.LBB1108:
 2426              	.LBB1101:
 2427              	.LBB1096:
 2428              	.LBB1085:
1915:Veno-Echo.cpp **** }
 2429              		.loc 19 1915 5 is_stmt 1 view .LVU606
1915:Veno-Echo.cpp **** }
 2430              		.loc 19 1915 5 is_stmt 0 view .LVU607
 2431              	.LBE1085:
 2432              	.LBE1096:
1104:Veno-Echo.cpp ****         }
 2433              		.loc 19 1104 29 view .LVU608
 2434 01c6 0222     		movs	r2, #2
 2435 01c8 1A70     		strb	r2, [r3]
1112:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 103


 2436              		.loc 19 1112 9 is_stmt 1 view .LVU609
 2437 01ca D7E7     		b	.L104
 2438              	.L113:
 2439              		.align	2
 2440              	.L112:
 2441 01cc 18000000 		.word	.LANCHOR4+24
 2442 01d0 00000000 		.word	.LANCHOR8
 2443 01d4 00000000 		.word	.LANCHOR21
 2444 01d8 00000000 		.word	.LANCHOR22
 2445 01dc 0AD7A33B 		.word	1000593162
 2446 01e0 00000000 		.word	.LANCHOR23
 2447 01e4 00000000 		.word	.LANCHOR20
 2448 01e8 00000000 		.word	0
 2449 01ec 00000000 		.word	.LANCHOR24
 2450 01f0 6F12033D 		.word	1023611503
 2451 01f4 00000000 		.word	.LANCHOR25
 2452 01f8 00000000 		.word	.LANCHOR26
 2453 01fc 00803B46 		.word	1178304512
 2454 0200 0080BB44 		.word	1153138688
 2455 0204 00000000 		.word	.LANCHOR27
 2456 0208 00000000 		.word	.LANCHOR28
 2457 020c 00000000 		.word	.LANCHOR29
 2458 0210 00000000 		.word	.LANCHOR30
 2459 0214 00000000 		.word	.LANCHOR19
 2460              	.LBE1101:
 2461              	.LBE1108:
 2462              		.cfi_endproc
 2463              	.LFE4298:
 2465              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 2466              		.align	1
 2467              		.p2align 2,,3
 2468              		.global	_Z16Update_drywet_CVv
 2469              		.syntax unified
 2470              		.thumb
 2471              		.thumb_func
 2472              		.fpu fpv5-d16
 2474              	_Z16Update_drywet_CVv:
 2475              	.LFB4299:
1127:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2476              		.loc 19 1127 1 view -0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 0, uses_anonymous_args = 0
1128:Veno-Echo.cpp **** }
 2480              		.loc 19 1128 5 view .LVU611
1127:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2481              		.loc 19 1127 1 is_stmt 0 view .LVU612
 2482 0000 08B5     		push	{r3, lr}
 2483              		.cfi_def_cfa_offset 8
 2484              		.cfi_offset 3, -8
 2485              		.cfi_offset 14, -4
1128:Veno-Echo.cpp **** }
 2486              		.loc 19 1128 32 view .LVU613
 2487 0002 0421     		movs	r1, #4
 2488 0004 0348     		ldr	r0, .L116
 2489 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2490              	.LVL143:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 104


1128:Veno-Echo.cpp **** }
 2491              		.loc 19 1128 15 view .LVU614
 2492 000a 034B     		ldr	r3, .L116+4
 2493 000c 83ED000A 		vstr.32	s0, [r3]
1129:Veno-Echo.cpp **** 
 2494              		.loc 19 1129 1 view .LVU615
 2495 0010 08BD     		pop	{r3, pc}
 2496              	.L117:
 2497 0012 00BF     		.align	2
 2498              	.L116:
 2499 0014 18000000 		.word	.LANCHOR4+24
 2500 0018 00000000 		.word	.LANCHOR31
 2501              		.cfi_endproc
 2502              	.LFE4299:
 2504              		.section	.text._Z13Update_drywetv,"ax",%progbits
 2505              		.align	1
 2506              		.p2align 2,,3
 2507              		.global	_Z13Update_drywetv
 2508              		.syntax unified
 2509              		.thumb
 2510              		.thumb_func
 2511              		.fpu fpv5-d16
 2513              	_Z13Update_drywetv:
 2514              	.LFB4300:
1132:Veno-Echo.cpp ****     static bool lastShift{};
 2515              		.loc 19 1132 1 is_stmt 1 view -0
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 0
 2518              		@ frame_needed = 0, uses_anonymous_args = 0
1133:Veno-Echo.cpp ****     static bool drywet_pickup{};
 2519              		.loc 19 1133 5 view .LVU617
1134:Veno-Echo.cpp ****     static pickupState Res_pickup{};
 2520              		.loc 19 1134 5 view .LVU618
1135:Veno-Echo.cpp **** 
 2521              		.loc 19 1135 5 view .LVU619
1137:Veno-Echo.cpp ****     static float Res_Last{}; //last res value (unscaled)
 2522              		.loc 19 1137 5 view .LVU620
1138:Veno-Echo.cpp **** 
 2523              		.loc 19 1138 5 view .LVU621
1142:Veno-Echo.cpp **** 
 2524              		.loc 19 1142 5 view .LVU622
1132:Veno-Echo.cpp ****     static bool lastShift{};
 2525              		.loc 19 1132 1 is_stmt 0 view .LVU623
 2526 0000 10B5     		push	{r4, lr}
 2527              		.cfi_def_cfa_offset 8
 2528              		.cfi_offset 4, -8
 2529              		.cfi_offset 14, -4
1142:Veno-Echo.cpp **** 
 2530              		.loc 19 1142 40 view .LVU624
 2531 0002 0522     		movs	r2, #5
 2532 0004 0721     		movs	r1, #7
 2533 0006 8A48     		ldr	r0, .L151+24
1132:Veno-Echo.cpp ****     static bool lastShift{};
 2534              		.loc 19 1132 1 view .LVU625
 2535 0008 2DED028B 		vpush.64	{d8}
 2536              		.cfi_def_cfa_offset 16
 2537              		.cfi_offset 80, -16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 105


 2538              		.cfi_offset 81, -12
1142:Veno-Echo.cpp **** 
 2539              		.loc 19 1142 40 view .LVU626
 2540 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2541              	.LVL144:
 2542              	.LBB1109:
1144:Veno-Echo.cpp ****     {   
 2543              		.loc 19 1144 9 view .LVU627
 2544 0010 884B     		ldr	r3, .L151+28
 2545              	.LBE1109:
1142:Veno-Echo.cpp **** 
 2546              		.loc 19 1142 40 view .LVU628
 2547 0012 B0EE408A 		vmov.f32	s16, s0
 2548              	.LVL145:
1144:Veno-Echo.cpp ****     {   
 2549              		.loc 19 1144 5 is_stmt 1 view .LVU629
 2550              	.LBB1155:
 2551 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2552 0018 002B     		cmp	r3, #0
 2553 001a 40F08580 		bne	.L119
 2554              	.LBB1110:
1147:Veno-Echo.cpp **** 
 2555              		.loc 19 1147 9 view .LVU630
1149:Veno-Echo.cpp ****         {
 2556              		.loc 19 1149 9 view .LVU631
1149:Veno-Echo.cpp ****         {
 2557              		.loc 19 1149 19 is_stmt 0 view .LVU632
 2558 001e 864A     		ldr	r2, .L151+32
1149:Veno-Echo.cpp ****         {
 2559              		.loc 19 1149 9 view .LVU633
 2560 0020 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2561 0022 31B3     		cbz	r1, .L120
1151:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2562              		.loc 19 1151 13 is_stmt 1 view .LVU634
1153:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2563              		.loc 19 1153 27 is_stmt 0 view .LVU635
 2564 0024 8548     		ldr	r0, .L151+36
1154:Veno-Echo.cpp ****         } 
 2565              		.loc 19 1154 24 view .LVU636
 2566 0026 8649     		ldr	r1, .L151+40
1151:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2567              		.loc 19 1151 23 view .LVU637
 2568 0028 1370     		strb	r3, [r2]
1153:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2569              		.loc 19 1153 13 is_stmt 1 view .LVU638
1153:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2570              		.loc 19 1153 27 is_stmt 0 view .LVU639
 2571 002a 0370     		strb	r3, [r0]
1154:Veno-Echo.cpp ****         } 
 2572              		.loc 19 1154 13 is_stmt 1 view .LVU640
1154:Veno-Echo.cpp ****         } 
 2573              		.loc 19 1154 24 is_stmt 0 view .LVU641
 2574 002c 81ED000A 		vstr.32	s0, [r1]
 2575              	.L121:
1171:Veno-Echo.cpp **** 
 2576              		.loc 19 1171 9 is_stmt 1 view .LVU642
 2577              	.LVL146:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 106


1173:Veno-Echo.cpp ****         {
 2578              		.loc 19 1173 9 view .LVU643
1181:Veno-Echo.cpp ****         }
 2579              		.loc 19 1181 13 view .LVU644
 2580              	.LBB1111:
 2581              	.LBI1111:
1809:Veno-Echo.cpp **** {
 2582              		.loc 19 1809 7 view .LVU645
 2583              	.LBB1112:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2584              		.loc 19 1811 5 view .LVU646
1812:Veno-Echo.cpp **** 
 2585              		.loc 19 1812 5 view .LVU647
 2586              	.LBE1112:
 2587              	.LBE1111:
1181:Veno-Echo.cpp ****         }
 2588              		.loc 19 1181 37 is_stmt 0 view .LVU648
 2589 0030 844A     		ldr	r2, .L151+44
 2590              	.LBB1115:
 2591              	.LBB1113:
1812:Veno-Echo.cpp **** 
 2592              		.loc 19 1812 39 view .LVU649
 2593 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 2594              		.loc 19 1812 49 view .LVU650
 2595 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 2596              	.LBE1113:
 2597              	.LBE1115:
1181:Veno-Echo.cpp ****         }
 2598              		.loc 19 1181 37 view .LVU651
 2599 003a 834B     		ldr	r3, .L151+48
 2600              	.LBB1116:
 2601              	.LBB1114:
1812:Veno-Echo.cpp **** 
 2602              		.loc 19 1812 39 view .LVU652
 2603 003c D2ED007A 		vldr.32	s15, [r2]
1812:Veno-Echo.cpp **** 
 2604              		.loc 19 1812 12 view .LVU653
 2605 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 2606 0044 93ED000A 		vldr.32	s0, [r3]
 2607              	.LVL147:
1812:Veno-Echo.cpp **** 
 2608              		.loc 19 1812 39 view .LVU654
 2609 0048 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 2610              		.loc 19 1812 49 view .LVU655
 2611 004c 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 2612              		.loc 19 1812 12 view .LVU656
 2613 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 2614              	.LVL148:
1814:Veno-Echo.cpp ****     {
 2615              		.loc 19 1814 5 is_stmt 1 view .LVU657
 2616 0054 B5EEC00A 		vcmpe.f32	s0, #0
 2617 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2618 005c 00F18680 		bmi	.L138
1819:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 107


 2619              		.loc 19 1819 5 view .LVU658
 2620 0060 B4EEC70A 		vcmpe.f32	s0, s14
 2621 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2622 0068 40F3D180 		ble	.L143
 2623              	.LVL149:
 2624              	.L129:
1819:Veno-Echo.cpp ****     {
 2625              		.loc 19 1819 5 is_stmt 0 view .LVU659
 2626              	.LBE1114:
 2627              	.LBE1116:
1188:Veno-Echo.cpp ****         }
 2628              		.loc 19 1188 26 view .LVU660
 2629 006c B7EE000A 		vmov.f32	s0, #1.0e+0
 2630 0070 4CE0     		b	.L128
 2631              	.LVL150:
 2632              	.L120:
1159:Veno-Echo.cpp ****             {
 2633              		.loc 19 1159 13 is_stmt 1 view .LVU661
1159:Veno-Echo.cpp ****             {
 2634              		.loc 19 1159 16 is_stmt 0 view .LVU662
 2635 0072 724B     		ldr	r3, .L151+36
1159:Veno-Echo.cpp ****             {
 2636              		.loc 19 1159 13 view .LVU663
 2637 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2638 0076 8AB9     		cbnz	r2, .L122
1162:Veno-Echo.cpp ****                 {
 2639              		.loc 19 1162 17 is_stmt 1 view .LVU664
 2640              	.LVL151:
 2641              	.LBB1117:
 2642              	.LBI1117:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2643              		.loc 20 75 3 view .LVU665
 2644              	.LBB1118:
 2645              		.loc 20 76 5 view .LVU666
 2646              		.loc 20 76 5 is_stmt 0 view .LVU667
 2647              	.LBE1118:
 2648              	.LBE1117:
1162:Veno-Echo.cpp ****                 {
 2649              		.loc 19 1162 23 view .LVU668
 2650 0078 714A     		ldr	r2, .L151+40
1162:Veno-Echo.cpp ****                 {
 2651              		.loc 19 1162 17 view .LVU669
 2652 007a 9FED747A 		vldr.32	s14, .L151+52
1162:Veno-Echo.cpp ****                 {
 2653              		.loc 19 1162 23 view .LVU670
 2654 007e D2ED007A 		vldr.32	s15, [r2]
 2655 0082 70EE677A 		vsub.f32	s15, s0, s15
 2656              	.LBB1120:
 2657              	.LBB1119:
 2658              		.loc 20 76 31 view .LVU671
 2659 0086 F0EEE77A 		vabs.f32	s15, s15
 2660              	.LBE1119:
 2661              	.LBE1120:
1162:Veno-Echo.cpp ****                 {
 2662              		.loc 19 1162 17 view .LVU672
 2663 008a F4EEC77A 		vcmpe.f32	s15, s14
 2664 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 108


 2665 0092 CDDD     		ble	.L121
1164:Veno-Echo.cpp ****                     drywet_new = drywet_Pot;   //update new
 2666              		.loc 19 1164 21 is_stmt 1 view .LVU673
1164:Veno-Echo.cpp ****                     drywet_new = drywet_Pot;   //update new
 2667              		.loc 19 1164 35 is_stmt 0 view .LVU674
 2668 0094 0121     		movs	r1, #1
1165:Veno-Echo.cpp ****                 }
 2669              		.loc 19 1165 32 view .LVU675
 2670 0096 82ED000A 		vstr.32	s0, [r2]
1164:Veno-Echo.cpp ****                     drywet_new = drywet_Pot;   //update new
 2671              		.loc 19 1164 35 view .LVU676
 2672 009a 1970     		strb	r1, [r3]
1165:Veno-Echo.cpp ****                 }
 2673              		.loc 19 1165 21 is_stmt 1 view .LVU677
 2674              	.L122:
1171:Veno-Echo.cpp **** 
 2675              		.loc 19 1171 9 view .LVU678
 2676              	.LVL152:
1173:Veno-Echo.cpp ****         {
 2677              		.loc 19 1173 9 view .LVU679
1175:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2678              		.loc 19 1175 13 view .LVU680
 2679              	.LBB1121:
 2680              	.LBI1121:
1809:Veno-Echo.cpp **** {
 2681              		.loc 19 1809 7 view .LVU681
 2682              	.LBB1122:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2683              		.loc 19 1811 5 view .LVU682
1812:Veno-Echo.cpp **** 
 2684              		.loc 19 1812 5 view .LVU683
 2685              	.LBE1122:
 2686              	.LBE1121:
1175:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2687              		.loc 19 1175 37 is_stmt 0 view .LVU684
 2688 009c 694B     		ldr	r3, .L151+44
 2689              	.LBB1125:
 2690              	.LBB1123:
1812:Veno-Echo.cpp **** 
 2691              		.loc 19 1812 39 view .LVU685
 2692 009e B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 2693              		.loc 19 1812 49 view .LVU686
 2694 00a2 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 2695              		.loc 19 1812 39 view .LVU687
 2696 00a6 D3ED007A 		vldr.32	s15, [r3]
1812:Veno-Echo.cpp **** 
 2697              		.loc 19 1812 12 view .LVU688
 2698 00aa F0EE006A 		vmov.f32	s13, #2.0e+0
 2699 00ae B0EE480A 		vmov.f32	s0, s16
 2700              	.LVL153:
1812:Veno-Echo.cpp **** 
 2701              		.loc 19 1812 39 view .LVU689
 2702 00b2 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 2703              		.loc 19 1812 49 view .LVU690
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 109


 2704 00b6 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 2705              		.loc 19 1812 12 view .LVU691
 2706 00ba A7EEA60A 		vfma.f32	s0, s15, s13
 2707              	.LVL154:
1814:Veno-Echo.cpp ****     {
 2708              		.loc 19 1814 5 is_stmt 1 view .LVU692
 2709 00be B5EEC00A 		vcmpe.f32	s0, #0
 2710 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2711 00c6 54D4     		bmi	.L148
1819:Veno-Echo.cpp ****     {
 2712              		.loc 19 1819 5 view .LVU693
 2713 00c8 B4EEC70A 		vcmpe.f32	s0, s14
 2714 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2715 00d0 40F39A80 		ble	.L149
1821:Veno-Echo.cpp ****     }
 2716              		.loc 19 1821 16 is_stmt 0 view .LVU694
 2717 00d4 B0EE470A 		vmov.f32	s0, s14
 2718              	.LVL155:
1821:Veno-Echo.cpp ****     }
 2719              		.loc 19 1821 16 view .LVU695
 2720 00d8 B7EE007B 		vmov.f64	d7, #1.0e+0
 2721              	.L124:
 2722              	.LVL156:
1824:Veno-Echo.cpp **** }
 2723              		.loc 19 1824 5 is_stmt 1 view .LVU696
1824:Veno-Echo.cpp **** }
 2724              		.loc 19 1824 5 is_stmt 0 view .LVU697
 2725              	.LBE1123:
 2726              	.LBE1125:
1176:Veno-Echo.cpp ****         }
 2727              		.loc 19 1176 13 is_stmt 1 view .LVU698
1176:Veno-Echo.cpp ****         }
 2728              		.loc 19 1176 25 is_stmt 0 view .LVU699
 2729 00dc 5A4B     		ldr	r3, .L151+48
 2730 00de 83ED008A 		vstr.32	s16, [r3]
 2731              	.LVL157:
 2732              	.L125:
1184:Veno-Echo.cpp **** 
 2733              		.loc 19 1184 9 is_stmt 1 view .LVU700
1186:Veno-Echo.cpp ****         {
 2734              		.loc 19 1186 9 view .LVU701
 2735 00e2 9FED4D6B 		vldr.64	d6, .L151
 2736 00e6 B4EEC67B 		vcmpe.f64	d7, d6
 2737 00ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2738 00ee BDDA     		bge	.L129
1190:Veno-Echo.cpp ****         {
 2739              		.loc 19 1190 14 view .LVU702
 2740 00f0 9FED4B6B 		vldr.64	d6, .L151+8
 2741 00f4 B4EEC67B 		vcmpe.f64	d7, d6
 2742 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2743 00fc 36D9     		bls	.L138
1196:Veno-Echo.cpp ****         }
 2744              		.loc 19 1196 13 view .LVU703
1196:Veno-Echo.cpp ****         }
 2745              		.loc 19 1196 33 is_stmt 0 view .LVU704
 2746 00fe B7EE001A 		vmov.f32	s2, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 110


 2747 0102 0120     		movs	r0, #1
 2748 0104 DFED520A 		vldr.32	s1, .L151+56
 2749 0108 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2750              	.LVL158:
 2751              	.L128:
1200:Veno-Echo.cpp ****     }
 2752              		.loc 19 1200 9 is_stmt 1 view .LVU705
 2753              	.LBB1126:
 2754              	.LBI1126:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2755              		.loc 21 135 13 view .LVU706
 2756              	.LBB1127:
 2757              		.loc 21 137 5 view .LVU707
 2758              		.loc 21 137 9 is_stmt 0 view .LVU708
 2759 010c 514B     		ldr	r3, .L151+60
 2760 010e 9FED527A 		vldr.32	s14, .L151+64
 2761 0112 D3ED007A 		vldr.32	s15, [r3]
 2762              		.loc 21 137 24 view .LVU709
 2763 0116 30EE670A 		vsub.f32	s0, s0, s15
 2764              	.LVL159:
 2765              		.loc 21 137 24 view .LVU710
 2766              	.LBE1127:
 2767              	.LBE1126:
 2768              	.LBE1110:
 2769              	.LBE1155:
1232:Veno-Echo.cpp **** 
 2770              		.loc 19 1232 1 view .LVU711
 2771 011a BDEC028B 		vldm	sp!, {d8}
 2772              		.cfi_remember_state
 2773              		.cfi_restore 80
 2774              		.cfi_restore 81
 2775              		.cfi_def_cfa_offset 8
 2776              	.LVL160:
 2777              	.LBB1156:
 2778              	.LBB1131:
 2779              	.LBB1129:
 2780              	.LBB1128:
 2781              		.loc 21 137 9 view .LVU712
 2782 011e E0EE077A 		vfma.f32	s15, s0, s14
 2783 0122 C3ED007A 		vstr.32	s15, [r3]
 2784              	.LBE1128:
 2785              	.LBE1129:
 2786              	.LBE1131:
 2787              	.LBE1156:
1232:Veno-Echo.cpp **** 
 2788              		.loc 19 1232 1 view .LVU713
 2789 0126 10BD     		pop	{r4, pc}
 2790              	.LVL161:
 2791              	.L119:
 2792              		.cfi_restore_state
 2793              	.LBB1157:
 2794              	.LBB1132:
1205:Veno-Echo.cpp ****         {
 2795              		.loc 19 1205 9 is_stmt 1 view .LVU714
1205:Veno-Echo.cpp ****         {
 2796              		.loc 19 1205 19 is_stmt 0 view .LVU715
 2797 0128 434B     		ldr	r3, .L151+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 111


1205:Veno-Echo.cpp ****         {
 2798              		.loc 19 1205 9 view .LVU716
 2799 012a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2800 012c 32BB     		cbnz	r2, .L133
1207:Veno-Echo.cpp ****             Res_pickup = checkPickupState_alt(drywet_Pot,Res_Last,Res_pickup,true);
 2801              		.loc 19 1207 13 is_stmt 1 view .LVU717
1208:Veno-Echo.cpp ****         }
 2802              		.loc 19 1208 46 is_stmt 0 view .LVU718
 2803 012e 4B4C     		ldr	r4, .L151+68
1207:Veno-Echo.cpp ****             Res_pickup = checkPickupState_alt(drywet_Pot,Res_Last,Res_pickup,true);
 2804              		.loc 19 1207 23 view .LVU719
 2805 0130 0121     		movs	r1, #1
 2806              	.LBB1133:
 2807              	.LBB1134:
1876:Veno-Echo.cpp ****         {
 2808              		.loc 19 1876 31 view .LVU720
 2809 0132 9FED467A 		vldr.32	s14, .L151+52
 2810              	.LBE1134:
 2811              	.LBE1133:
1208:Veno-Echo.cpp ****         }
 2812              		.loc 19 1208 46 view .LVU721
 2813 0136 D4ED007A 		vldr.32	s15, [r4]
1207:Veno-Echo.cpp ****             Res_pickup = checkPickupState_alt(drywet_Pot,Res_Last,Res_pickup,true);
 2814              		.loc 19 1207 23 view .LVU722
 2815 013a 1970     		strb	r1, [r3]
1208:Veno-Echo.cpp ****         }
 2816              		.loc 19 1208 13 is_stmt 1 view .LVU723
 2817              	.LVL162:
 2818              	.LBB1139:
 2819              	.LBI1133:
1870:Veno-Echo.cpp **** {
 2820              		.loc 19 1870 13 view .LVU724
 2821              	.LBB1135:
1872:Veno-Echo.cpp **** 
 2822              		.loc 19 1872 5 view .LVU725
1874:Veno-Echo.cpp ****     {
 2823              		.loc 19 1874 5 view .LVU726
1876:Veno-Echo.cpp ****         {
 2824              		.loc 19 1876 9 view .LVU727
1876:Veno-Echo.cpp ****         {
 2825              		.loc 19 1876 31 is_stmt 0 view .LVU728
 2826 013c 77EEC76A 		vsub.f32	s13, s15, s14
1876:Veno-Echo.cpp ****         {
 2827              		.loc 19 1876 9 view .LVU729
 2828 0140 B4EEE60A 		vcmpe.f32	s0, s13
 2829 0144 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2830 0148 0BD4     		bmi	.L134
1881:Veno-Echo.cpp ****         {
 2831              		.loc 19 1881 14 is_stmt 1 view .LVU730
1881:Veno-Echo.cpp ****         {
 2832              		.loc 19 1881 36 is_stmt 0 view .LVU731
 2833 014a 77EE877A 		vadd.f32	s15, s15, s14
 2834              	.LVL163:
1881:Veno-Echo.cpp ****         {
 2835              		.loc 19 1881 36 view .LVU732
 2836              	.LBE1135:
 2837              	.LBE1139:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 112


1208:Veno-Echo.cpp ****         }
 2838              		.loc 19 1208 24 view .LVU733
 2839 014e 444B     		ldr	r3, .L151+72
 2840              	.LBB1140:
 2841              	.LBB1136:
1881:Veno-Echo.cpp ****         {
 2842              		.loc 19 1881 14 view .LVU734
 2843 0150 B4EEE70A 		vcmpe.f32	s0, s15
 2844 0154 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2845 0158 53DD     		ble	.L150
 2846              	.LVL164:
1915:Veno-Echo.cpp **** }
 2847              		.loc 19 1915 5 is_stmt 1 view .LVU735
1915:Veno-Echo.cpp **** }
 2848              		.loc 19 1915 5 is_stmt 0 view .LVU736
 2849              	.LBE1136:
 2850              	.LBE1140:
1208:Veno-Echo.cpp ****         }
 2851              		.loc 19 1208 24 view .LVU737
 2852 015a 1970     		strb	r1, [r3]
1216:Veno-Echo.cpp ****         {
 2853              		.loc 19 1216 9 is_stmt 1 view .LVU738
 2854              	.L118:
1216:Veno-Echo.cpp ****         {
 2855              		.loc 19 1216 9 is_stmt 0 view .LVU739
 2856              	.LBE1132:
 2857              	.LBE1157:
1232:Veno-Echo.cpp **** 
 2858              		.loc 19 1232 1 view .LVU740
 2859 015c BDEC028B 		vldm	sp!, {d8}
 2860              		.cfi_remember_state
 2861              		.cfi_restore 80
 2862              		.cfi_restore 81
 2863              		.cfi_def_cfa_offset 8
 2864 0160 10BD     		pop	{r4, pc}
 2865              	.LVL165:
 2866              	.L134:
 2867              		.cfi_restore_state
 2868              	.LBB1158:
 2869              	.LBB1150:
 2870              	.LBB1141:
 2871              	.LBB1137:
1915:Veno-Echo.cpp **** }
 2872              		.loc 19 1915 5 is_stmt 1 view .LVU741
1915:Veno-Echo.cpp **** }
 2873              		.loc 19 1915 5 is_stmt 0 view .LVU742
 2874              	.LBE1137:
 2875              	.LBE1141:
1208:Veno-Echo.cpp ****         }
 2876              		.loc 19 1208 24 view .LVU743
 2877 0162 3F4B     		ldr	r3, .L151+72
 2878              	.LBE1150:
 2879              	.LBE1158:
1232:Veno-Echo.cpp **** 
 2880              		.loc 19 1232 1 view .LVU744
 2881 0164 BDEC028B 		vldm	sp!, {d8}
 2882              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 113


 2883              		.cfi_restore 80
 2884              		.cfi_restore 81
 2885              		.cfi_def_cfa_offset 8
 2886              	.LBB1159:
 2887              	.LBB1151:
1208:Veno-Echo.cpp ****         }
 2888              		.loc 19 1208 24 view .LVU745
 2889 0168 1A70     		strb	r2, [r3]
1216:Veno-Echo.cpp ****         {
 2890              		.loc 19 1216 9 is_stmt 1 view .LVU746
 2891              	.LBE1151:
 2892              	.LBE1159:
1232:Veno-Echo.cpp **** 
 2893              		.loc 19 1232 1 is_stmt 0 view .LVU747
 2894 016a 10BD     		pop	{r4, pc}
 2895              	.LVL166:
 2896              	.L138:
 2897              		.cfi_restore_state
 2898              	.LBB1160:
 2899              	.LBB1152:
1192:Veno-Echo.cpp ****         }
 2900              		.loc 19 1192 26 view .LVU748
 2901 016c 9FED380A 		vldr.32	s0, .L151+56
 2902 0170 CCE7     		b	.L128
 2903              	.LVL167:
 2904              	.L148:
 2905              	.LBB1130:
 2906              	.LBB1124:
1192:Veno-Echo.cpp ****         }
 2907              		.loc 19 1192 26 view .LVU749
 2908 0172 9FED2D7B 		vldr.64	d7, .L151+16
1816:Veno-Echo.cpp ****     }
 2909              		.loc 19 1816 16 view .LVU750
 2910 0176 9FED360A 		vldr.32	s0, .L151+56
 2911              	.LVL168:
1816:Veno-Echo.cpp ****     }
 2912              		.loc 19 1816 16 view .LVU751
 2913 017a AFE7     		b	.L124
 2914              	.LVL169:
 2915              	.L133:
1816:Veno-Echo.cpp ****     }
 2916              		.loc 19 1816 16 view .LVU752
 2917              	.LBE1124:
 2918              	.LBE1130:
 2919              	.LBE1152:
 2920              	.LBB1153:
1213:Veno-Echo.cpp ****         }
 2921              		.loc 19 1213 13 is_stmt 1 view .LVU753
 2922              	.LBB1142:
 2923              	.LBI1142:
1870:Veno-Echo.cpp **** {
 2924              		.loc 19 1870 13 view .LVU754
 2925              	.LBB1143:
1872:Veno-Echo.cpp **** 
 2926              		.loc 19 1872 5 view .LVU755
1874:Veno-Echo.cpp ****     {
 2927              		.loc 19 1874 5 view .LVU756
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 114


 2928              	.LBE1143:
 2929              	.LBE1142:
1213:Veno-Echo.cpp ****         }
 2930              		.loc 19 1213 46 is_stmt 0 view .LVU757
 2931 017c 384B     		ldr	r3, .L151+72
 2932 017e 374C     		ldr	r4, .L151+68
 2933              	.LBB1145:
 2934              	.LBB1144:
 2935 0180 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2936 0182 D4ED000A 		vldr.32	s1, [r4]
 2937 0186 FFF7FEFF 		bl	_Z20checkPickupState_altff11pickupStateb.part.0
 2938              	.LVL170:
1915:Veno-Echo.cpp **** }
 2939              		.loc 19 1915 5 is_stmt 1 view .LVU758
1915:Veno-Echo.cpp **** }
 2940              		.loc 19 1915 5 is_stmt 0 view .LVU759
 2941              	.LBE1144:
 2942              	.LBE1145:
 2943              	.LBB1146:
1216:Veno-Echo.cpp ****         {
 2944              		.loc 19 1216 9 view .LVU760
 2945 018a 0228     		cmp	r0, #2
 2946              	.LBE1146:
1213:Veno-Echo.cpp ****         }
 2947              		.loc 19 1213 24 view .LVU761
 2948 018c 1870     		strb	r0, [r3]
1216:Veno-Echo.cpp ****         {
 2949              		.loc 19 1216 9 is_stmt 1 view .LVU762
 2950              	.LBB1148:
 2951 018e E5D1     		bne	.L118
 2952              	.L136:
 2953              	.LBB1147:
1218:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2954              		.loc 19 1218 13 view .LVU763
 2955              	.LVL171:
1219:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2956              		.loc 19 1219 13 view .LVU764
1219:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2957              		.loc 19 1219 24 is_stmt 0 view .LVU765
 2958 0190 B6EE001A 		vmov.f32	s2, #5.0e-1
 2959 0194 DFED2E0A 		vldr.32	s1, .L151+56
 2960 0198 B0EE480A 		vmov.f32	s0, s16
 2961              	.LVL172:
1219:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2962              		.loc 19 1219 24 view .LVU766
 2963 019c 0020     		movs	r0, #0
 2964 019e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2965              	.LVL173:
 2966 01a2 F0EE408A 		vmov.f32	s17, s0
 2967              	.LVL174:
1220:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2968              		.loc 19 1220 13 is_stmt 1 view .LVU767
1220:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2969              		.loc 19 1220 25 is_stmt 0 view .LVU768
 2970 01a6 2F48     		ldr	r0, .L151+76
 2971 01a8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2972              	.LVL175:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 115


1221:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2973              		.loc 19 1221 13 is_stmt 1 view .LVU769
1221:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2974              		.loc 19 1221 25 is_stmt 0 view .LVU770
 2975 01ac 2E48     		ldr	r0, .L151+80
 2976 01ae B0EE680A 		vmov.f32	s0, s17
 2977 01b2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2978              	.LVL176:
1222:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2979              		.loc 19 1222 13 is_stmt 1 view .LVU771
1222:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2980              		.loc 19 1222 25 is_stmt 0 view .LVU772
 2981 01b6 B0EE680A 		vmov.f32	s0, s17
 2982 01ba 2C48     		ldr	r0, .L151+84
 2983 01bc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2984              	.LVL177:
1223:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2985              		.loc 19 1223 13 is_stmt 1 view .LVU773
1223:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2986              		.loc 19 1223 25 is_stmt 0 view .LVU774
 2987 01c0 B0EE680A 		vmov.f32	s0, s17
 2988 01c4 2A48     		ldr	r0, .L151+88
 2989 01c6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2990              	.LVL178:
1224:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2991              		.loc 19 1224 13 is_stmt 1 view .LVU775
1224:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2992              		.loc 19 1224 30 is_stmt 0 view .LVU776
 2993 01ca B0EE680A 		vmov.f32	s0, s17
 2994 01ce 2948     		ldr	r0, .L151+92
 2995 01d0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2996              	.LVL179:
1225:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2997              		.loc 19 1225 13 is_stmt 1 view .LVU777
1225:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2998              		.loc 19 1225 30 is_stmt 0 view .LVU778
 2999 01d4 B0EE680A 		vmov.f32	s0, s17
 3000 01d8 2748     		ldr	r0, .L151+96
 3001 01da FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3002              	.LVL180:
1226:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3003              		.loc 19 1226 13 is_stmt 1 view .LVU779
1226:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3004              		.loc 19 1226 30 is_stmt 0 view .LVU780
 3005 01de B0EE680A 		vmov.f32	s0, s17
 3006 01e2 2648     		ldr	r0, .L151+100
 3007 01e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3008              	.LVL181:
1227:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3009              		.loc 19 1227 13 is_stmt 1 view .LVU781
1227:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3010              		.loc 19 1227 30 is_stmt 0 view .LVU782
 3011 01e8 B0EE680A 		vmov.f32	s0, s17
 3012 01ec 2448     		ldr	r0, .L151+104
 3013 01ee FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3014              	.LVL182:
1228:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 116


 3015              		.loc 19 1228 13 is_stmt 1 view .LVU783
1228:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
 3016              		.loc 19 1228 35 is_stmt 0 view .LVU784
 3017 01f2 244B     		ldr	r3, .L151+108
1229:Veno-Echo.cpp ****         }
 3018              		.loc 19 1229 22 view .LVU785
 3019 01f4 84ED008A 		vstr.32	s16, [r4]
1228:Veno-Echo.cpp ****             Res_Last = drywet_Pot;  //update last value
 3020              		.loc 19 1228 35 view .LVU786
 3021 01f8 C3ED068A 		vstr.32	s17, [r3, #24]
1229:Veno-Echo.cpp ****         }
 3022              		.loc 19 1229 13 is_stmt 1 view .LVU787
 3023              	.LBE1147:
 3024              	.LBE1148:
 3025              	.LBE1153:
 3026              	.LBE1160:
1232:Veno-Echo.cpp **** 
 3027              		.loc 19 1232 1 is_stmt 0 view .LVU788
 3028 01fc BDEC028B 		vldm	sp!, {d8}
 3029              		.cfi_remember_state
 3030              		.cfi_restore 80
 3031              		.cfi_restore 81
 3032              		.cfi_def_cfa_offset 8
 3033              	.LVL183:
1232:Veno-Echo.cpp **** 
 3034              		.loc 19 1232 1 view .LVU789
 3035 0200 10BD     		pop	{r4, pc}
 3036              	.LVL184:
 3037              	.L150:
 3038              		.cfi_restore_state
 3039              	.LBB1161:
 3040              	.LBB1154:
 3041              	.LBB1149:
 3042              	.LBB1138:
1915:Veno-Echo.cpp **** }
 3043              		.loc 19 1915 5 is_stmt 1 view .LVU790
1915:Veno-Echo.cpp **** }
 3044              		.loc 19 1915 5 is_stmt 0 view .LVU791
 3045              	.LBE1138:
 3046              	.LBE1149:
1208:Veno-Echo.cpp ****         }
 3047              		.loc 19 1208 24 view .LVU792
 3048 0202 0222     		movs	r2, #2
 3049 0204 1A70     		strb	r2, [r3]
1216:Veno-Echo.cpp ****         {
 3050              		.loc 19 1216 9 is_stmt 1 view .LVU793
 3051 0206 C3E7     		b	.L136
 3052              	.LVL185:
 3053              	.L149:
1216:Veno-Echo.cpp ****         {
 3054              		.loc 19 1216 9 is_stmt 0 view .LVU794
 3055 0208 B7EEC07A 		vcvt.f64.f32	d7, s0
 3056 020c 66E7     		b	.L124
 3057              	.LVL186:
 3058              	.L143:
1216:Veno-Echo.cpp ****         {
 3059              		.loc 19 1216 9 view .LVU795
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 117


 3060 020e B7EEC07A 		vcvt.f64.f32	d7, s0
 3061 0212 66E7     		b	.L125
 3062              	.L152:
 3063 0214 AFF30080 		.align	3
 3064              	.L151:
 3065 0218 5C8FC2F5 		.word	4123168604
 3066 021c 285CEF3F 		.word	1072651304
 3067 0220 7B14AE47 		.word	1202590843
 3068 0224 E17A943F 		.word	1066695393
 3069 0228 00000000 		.word	0
 3070 022c 00000000 		.word	0
 3071 0230 18000000 		.word	.LANCHOR4+24
 3072 0234 00000000 		.word	.LANCHOR8
 3073 0238 00000000 		.word	.LANCHOR32
 3074 023c 00000000 		.word	.LANCHOR33
 3075 0240 00000000 		.word	.LANCHOR34
 3076 0244 00000000 		.word	.LANCHOR31
 3077 0248 00000000 		.word	.LANCHOR35
 3078 024c 0AD7A33B 		.word	1000593162
 3079 0250 00000000 		.word	0
 3080 0254 00000000 		.word	.LANCHOR36
 3081 0258 6F12833C 		.word	1015222895
 3082 025c 00000000 		.word	.LANCHOR37
 3083 0260 00000000 		.word	.LANCHOR38
 3084 0264 00000000 		.word	.LANCHOR27
 3085 0268 00000000 		.word	.LANCHOR28
 3086 026c 00000000 		.word	.LANCHOR15
 3087 0270 00000000 		.word	.LANCHOR16
 3088 0274 00000000 		.word	.LANCHOR29
 3089 0278 00000000 		.word	.LANCHOR30
 3090 027c 00000000 		.word	.LANCHOR17
 3091 0280 00000000 		.word	.LANCHOR18
 3092 0284 00000000 		.word	.LANCHOR19
 3093              	.LBE1154:
 3094              	.LBE1161:
 3095              		.cfi_endproc
 3096              	.LFE4300:
 3098              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3099              		.align	1
 3100              		.p2align 2,,3
 3101              		.global	_Z15Update_width_CVv
 3102              		.syntax unified
 3103              		.thumb
 3104              		.thumb_func
 3105              		.fpu fpv5-d16
 3107              	_Z15Update_width_CVv:
 3108              	.LFB4301:
1235:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3109              		.loc 19 1235 1 is_stmt 1 view -0
 3110              		.cfi_startproc
 3111              		@ args = 0, pretend = 0, frame = 0
 3112              		@ frame_needed = 0, uses_anonymous_args = 0
1236:Veno-Echo.cpp **** }
 3113              		.loc 19 1236 5 view .LVU797
1235:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3114              		.loc 19 1235 1 is_stmt 0 view .LVU798
 3115 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 118


 3116              		.cfi_def_cfa_offset 8
 3117              		.cfi_offset 3, -8
 3118              		.cfi_offset 14, -4
1236:Veno-Echo.cpp **** }
 3119              		.loc 19 1236 30 view .LVU799
 3120 0002 0521     		movs	r1, #5
 3121 0004 0348     		ldr	r0, .L155
 3122 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3123              	.LVL187:
1236:Veno-Echo.cpp **** }
 3124              		.loc 19 1236 13 view .LVU800
 3125 000a 034B     		ldr	r3, .L155+4
 3126 000c 83ED000A 		vstr.32	s0, [r3]
1237:Veno-Echo.cpp **** 
 3127              		.loc 19 1237 1 view .LVU801
 3128 0010 08BD     		pop	{r3, pc}
 3129              	.L156:
 3130 0012 00BF     		.align	2
 3131              	.L155:
 3132 0014 18000000 		.word	.LANCHOR4+24
 3133 0018 00000000 		.word	.LANCHOR39
 3134              		.cfi_endproc
 3135              	.LFE4301:
 3137              		.section	.text._Z12Update_widthv,"ax",%progbits
 3138              		.align	1
 3139              		.p2align 2,,3
 3140              		.global	_Z12Update_widthv
 3141              		.syntax unified
 3142              		.thumb
 3143              		.thumb_func
 3144              		.fpu fpv5-d16
 3146              	_Z12Update_widthv:
 3147              	.LFB4302:
1240:Veno-Echo.cpp ****     //get pot values:
 3148              		.loc 19 1240 1 is_stmt 1 view -0
 3149              		.cfi_startproc
 3150              		@ args = 0, pretend = 0, frame = 0
 3151              		@ frame_needed = 0, uses_anonymous_args = 0
1242:Veno-Echo.cpp **** 
 3152              		.loc 19 1242 5 view .LVU803
1242:Veno-Echo.cpp **** 
 3153              		.loc 19 1242 39 is_stmt 0 view .LVU804
 3154 0000 0722     		movs	r2, #7
 3155 0002 2E48     		ldr	r0, .L167
1240:Veno-Echo.cpp ****     //get pot values:
 3156              		.loc 19 1240 1 view .LVU805
 3157 0004 08B5     		push	{r3, lr}
 3158              		.cfi_def_cfa_offset 8
 3159              		.cfi_offset 3, -8
 3160              		.cfi_offset 14, -4
1242:Veno-Echo.cpp **** 
 3161              		.loc 19 1242 39 view .LVU806
 3162 0006 1146     		mov	r1, r2
 3163 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3164              	.LVL188:
 3165              	.LBB1162:
1246:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 119


 3166              		.loc 19 1246 9 view .LVU807
 3167 000c 2C4B     		ldr	r3, .L167+4
 3168              	.LBE1162:
1242:Veno-Echo.cpp **** 
 3169              		.loc 19 1242 39 view .LVU808
 3170 000e F0EE407A 		vmov.f32	s15, s0
 3171              	.LVL189:
1244:Veno-Echo.cpp **** 
 3172              		.loc 19 1244 5 is_stmt 1 view .LVU809
1246:Veno-Echo.cpp ****     {   
 3173              		.loc 19 1246 5 view .LVU810
 3174              	.LBB1185:
 3175 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3176 0014 93BB     		cbnz	r3, .L158
 3177              	.LBB1163:
1249:Veno-Echo.cpp **** 
 3178              		.loc 19 1249 9 view .LVU811
1251:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 3179              		.loc 19 1251 32 is_stmt 0 view .LVU812
 3180 0016 2B4A     		ldr	r2, .L167+8
 3181              	.LBB1164:
 3182              	.LBB1165:
1812:Veno-Echo.cpp **** 
 3183              		.loc 19 1812 39 view .LVU813
 3184 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
1812:Veno-Echo.cpp **** 
 3185              		.loc 19 1812 49 view .LVU814
 3186 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 3187              	.LBE1165:
 3188              	.LBE1164:
1249:Veno-Echo.cpp **** 
 3189              		.loc 19 1249 24 view .LVU815
 3190 0020 294B     		ldr	r3, .L167+12
 3191              	.LBB1169:
 3192              	.LBB1166:
1812:Veno-Echo.cpp **** 
 3193              		.loc 19 1812 39 view .LVU816
 3194 0022 92ED007A 		vldr.32	s14, [r2]
1812:Veno-Echo.cpp **** 
 3195              		.loc 19 1812 12 view .LVU817
 3196 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 3197              	.LBE1166:
 3198              	.LBE1169:
1249:Veno-Echo.cpp **** 
 3199              		.loc 19 1249 24 view .LVU818
 3200 002a 83ED000A 		vstr.32	s0, [r3]
1251:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 3201              		.loc 19 1251 9 is_stmt 1 view .LVU819
 3202              	.LVL190:
 3203              	.LBB1170:
 3204              	.LBI1164:
1809:Veno-Echo.cpp **** {
 3205              		.loc 19 1809 7 view .LVU820
 3206              	.LBB1167:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3207              		.loc 19 1811 5 view .LVU821
1812:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 120


 3208              		.loc 19 1812 5 view .LVU822
1812:Veno-Echo.cpp **** 
 3209              		.loc 19 1812 39 is_stmt 0 view .LVU823
 3210 002e 36EEC77A 		vsub.f32	s14, s13, s14
 3211              	.LVL191:
1812:Veno-Echo.cpp **** 
 3212              		.loc 19 1812 49 view .LVU824
 3213 0032 37EE657A 		vsub.f32	s14, s14, s11
1812:Veno-Echo.cpp **** 
 3214              		.loc 19 1812 12 view .LVU825
 3215 0036 E7EE067A 		vfma.f32	s15, s14, s12
 3216              	.LVL192:
1814:Veno-Echo.cpp ****     {
 3217              		.loc 19 1814 5 is_stmt 1 view .LVU826
 3218 003a F5EEC07A 		vcmpe.f32	s15, #0
 3219 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3220 0042 37D4     		bmi	.L163
1819:Veno-Echo.cpp ****     {
 3221              		.loc 19 1819 5 view .LVU827
1821:Veno-Echo.cpp ****     }
 3222              		.loc 19 1821 16 is_stmt 0 view .LVU828
 3223 0044 F4EE667A 		vcmp.f32	s15, s13
 3224 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3225 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 3226              	.LVL193:
 3227              	.L159:
1824:Veno-Echo.cpp **** }
 3228              		.loc 19 1824 5 is_stmt 1 view .LVU829
1824:Veno-Echo.cpp **** }
 3229              		.loc 19 1824 5 is_stmt 0 view .LVU830
 3230              	.LBE1167:
 3231              	.LBE1170:
1251:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 3232              		.loc 19 1251 32 view .LVU831
 3233 0050 F6EE000A 		vmov.f32	s1, #5.0e-1
 3234 0054 0020     		movs	r0, #0
 3235 0056 9FED1D1A 		vldr.32	s2, .L167+16
 3236 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3237              	.LVL194:
1252:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
 3238              		.loc 19 1252 9 is_stmt 1 view .LVU832
 3239              	.LBB1171:
 3240              	.LBI1171:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3241              		.loc 21 135 13 view .LVU833
 3242              	.LBB1172:
 3243              		.loc 21 137 5 view .LVU834
 3244              		.loc 21 137 9 is_stmt 0 view .LVU835
 3245 005e 1C4B     		ldr	r3, .L167+20
 3246 0060 9FED1C7A 		vldr.32	s14, .L167+24
 3247 0064 D3ED007A 		vldr.32	s15, [r3]
 3248              	.LBE1172:
 3249              	.LBE1171:
 3250              	.LBB1174:
 3251              	.LBB1175:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 121


  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3252              		.loc 10 60 42 view .LVU836
 3253 0068 1B4A     		ldr	r2, .L167+28
 3254              	.LBE1175:
 3255              	.LBE1174:
 3256              	.LBB1177:
 3257              	.LBB1173:
 3258              		.loc 21 137 24 view .LVU837
 3259 006a 30EE670A 		vsub.f32	s0, s0, s15
 3260              	.LVL195:
 3261              		.loc 21 137 9 view .LVU838
 3262 006e E0EE077A 		vfma.f32	s15, s0, s14
 3263 0072 C3ED007A 		vstr.32	s15, [r3]
 3264              	.LVL196:
 3265              		.loc 21 137 9 view .LVU839
 3266              	.LBE1173:
 3267              	.LBE1177:
1253:Veno-Echo.cpp ****     }
 3268              		.loc 19 1253 9 is_stmt 1 view .LVU840
 3269              	.LBB1178:
 3270              	.LBI1174:
 3271              		.loc 10 60 17 view .LVU841
 3272              	.LBB1176:
 3273              		.loc 10 60 37 view .LVU842
 3274              		.loc 10 60 42 is_stmt 0 view .LVU843
 3275 0076 C2ED007A 		vstr.32	s15, [r2]
 3276              	.LVL197:
 3277              	.L157:
 3278              		.loc 10 60 42 view .LVU844
 3279              	.LBE1176:
 3280              	.LBE1178:
 3281              	.LBE1163:
 3282              	.LBE1185:
1264:Veno-Echo.cpp **** 
 3283              		.loc 19 1264 1 view .LVU845
 3284 007a 08BD     		pop	{r3, pc}
 3285              	.LVL198:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 122


 3286              	.L158:
 3287              	.LBB1186:
1257:Veno-Echo.cpp ****         {
 3288              		.loc 19 1257 9 is_stmt 1 view .LVU846
 3289              	.LBB1180:
 3290              	.LBI1180:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3291              		.loc 20 75 3 view .LVU847
 3292              	.LBB1181:
 3293              		.loc 20 76 5 view .LVU848
 3294              		.loc 20 76 5 is_stmt 0 view .LVU849
 3295              	.LBE1181:
 3296              	.LBE1180:
1257:Veno-Echo.cpp ****         {
 3297              		.loc 19 1257 16 view .LVU850
 3298 007c 124B     		ldr	r3, .L167+12
1257:Veno-Echo.cpp ****         {
 3299              		.loc 19 1257 9 view .LVU851
 3300 007e 9FED177A 		vldr.32	s14, .L167+32
1257:Veno-Echo.cpp ****         {
 3301              		.loc 19 1257 16 view .LVU852
 3302 0082 D3ED006A 		vldr.32	s13, [r3]
 3303 0086 70EE667A 		vsub.f32	s15, s0, s13
 3304              	.LBB1183:
 3305              	.LBB1182:
 3306              		.loc 20 76 31 view .LVU853
 3307 008a F0EEE77A 		vabs.f32	s15, s15
 3308              	.LBE1182:
 3309              	.LBE1183:
1257:Veno-Echo.cpp ****         {
 3310              		.loc 19 1257 9 view .LVU854
 3311 008e F4EEC77A 		vcmpe.f32	s15, s14
 3312 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3313 0096 F0DD     		ble	.L157
1259:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3314              		.loc 19 1259 13 is_stmt 1 view .LVU855
1259:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3315              		.loc 19 1259 29 is_stmt 0 view .LVU856
 3316 0098 0020     		movs	r0, #0
 3317 009a 9FED111A 		vldr.32	s2, .L167+36
 3318 009e DFED0B0A 		vldr.32	s1, .L167+16
 3319 00a2 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3320              	.LVL199:
1259:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3321              		.loc 19 1259 22 view .LVU857
 3322 00a6 0F4A     		ldr	r2, .L167+40
1260:Veno-Echo.cpp ****         }
 3323              		.loc 19 1260 34 view .LVU858
 3324 00a8 0F4B     		ldr	r3, .L167+44
1259:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3325              		.loc 19 1259 22 view .LVU859
 3326 00aa 82ED000A 		vstr.32	s0, [r2]
1260:Veno-Echo.cpp ****         }
 3327              		.loc 19 1260 13 is_stmt 1 view .LVU860
1260:Veno-Echo.cpp ****         }
 3328              		.loc 19 1260 34 is_stmt 0 view .LVU861
 3329 00ae 83ED020A 		vstr.32	s0, [r3, #8]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 123


 3330              	.LBE1186:
1264:Veno-Echo.cpp **** 
 3331              		.loc 19 1264 1 view .LVU862
 3332 00b2 08BD     		pop	{r3, pc}
 3333              	.LVL200:
 3334              	.L163:
 3335              	.LBB1187:
 3336              	.LBB1184:
 3337              	.LBB1179:
 3338              	.LBB1168:
1816:Veno-Echo.cpp ****     }
 3339              		.loc 19 1816 16 view .LVU863
 3340 00b4 9FED050A 		vldr.32	s0, .L167+16
 3341              	.LVL201:
1816:Veno-Echo.cpp ****     }
 3342              		.loc 19 1816 16 view .LVU864
 3343 00b8 CAE7     		b	.L159
 3344              	.L168:
 3345 00ba 00BF     		.align	2
 3346              	.L167:
 3347 00bc 18000000 		.word	.LANCHOR4+24
 3348 00c0 00000000 		.word	.LANCHOR8
 3349 00c4 00000000 		.word	.LANCHOR39
 3350 00c8 00000000 		.word	.LANCHOR40
 3351 00cc 00000000 		.word	0
 3352 00d0 00000000 		.word	.LANCHOR41
 3353 00d4 6F12033D 		.word	1023611503
 3354 00d8 00000000 		.word	.LANCHOR42
 3355 00dc 0AD7A33B 		.word	1000593162
 3356 00e0 0000FA43 		.word	1140457472
 3357 00e4 00000000 		.word	.LANCHOR43
 3358 00e8 00000000 		.word	.LANCHOR19
 3359              	.LBE1168:
 3360              	.LBE1179:
 3361              	.LBE1184:
 3362              	.LBE1187:
 3363              		.cfi_endproc
 3364              	.LFE4302:
 3366              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 3367              		.align	1
 3368              		.p2align 2,,3
 3369              		.global	_Z20Update_crossfeedbackv
 3370              		.syntax unified
 3371              		.thumb
 3372              		.thumb_func
 3373              		.fpu fpv5-d16
 3375              	_Z20Update_crossfeedbackv:
 3376              	.LFB4303:
1267:Veno-Echo.cpp ****     //get pot values:
 3377              		.loc 19 1267 1 is_stmt 1 view -0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 0
 3380              		@ frame_needed = 0, uses_anonymous_args = 0
1269:Veno-Echo.cpp **** 
 3381              		.loc 19 1269 5 view .LVU866
1269:Veno-Echo.cpp **** 
 3382              		.loc 19 1269 47 is_stmt 0 view .LVU867
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 124


 3383 0000 2048     		ldr	r0, .L177
 3384 0002 0022     		movs	r2, #0
 3385 0004 0721     		movs	r1, #7
1267:Veno-Echo.cpp ****     //get pot values:
 3386              		.loc 19 1267 1 view .LVU868
 3387 0006 38B5     		push	{r3, r4, r5, lr}
 3388              		.cfi_def_cfa_offset 16
 3389              		.cfi_offset 3, -16
 3390              		.cfi_offset 4, -12
 3391              		.cfi_offset 5, -8
 3392              		.cfi_offset 14, -4
1269:Veno-Echo.cpp **** 
 3393              		.loc 19 1269 47 view .LVU869
 3394 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3395              	.LVL202:
 3396              	.LBB1188:
1273:Veno-Echo.cpp ****     {   
 3397              		.loc 19 1273 9 view .LVU870
 3398 000c 1E4B     		ldr	r3, .L177+4
 3399              	.LVL203:
1273:Veno-Echo.cpp ****     {   
 3400              		.loc 19 1273 9 view .LVU871
 3401              	.LBE1188:
1271:Veno-Echo.cpp **** 
 3402              		.loc 19 1271 5 is_stmt 1 view .LVU872
1273:Veno-Echo.cpp ****     {   
 3403              		.loc 19 1273 5 view .LVU873
 3404              	.LBB1207:
 3405 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3406              	.LBB1189:
1276:Veno-Echo.cpp **** 
 3407              		.loc 19 1276 32 is_stmt 0 view .LVU874
 3408 0010 1E4B     		ldr	r3, .L177+8
 3409              	.LBE1189:
1273:Veno-Echo.cpp ****     {   
 3410              		.loc 19 1273 5 view .LVU875
 3411 0012 18B3     		cbz	r0, .L175
 3412              	.LBB1192:
1284:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 3413              		.loc 19 1284 9 is_stmt 1 view .LVU876
1285:Veno-Echo.cpp ****         {
 3414              		.loc 19 1285 9 view .LVU877
 3415              	.LVL204:
 3416              	.LBB1193:
 3417              	.LBI1193:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3418              		.loc 20 75 3 view .LVU878
 3419              	.LBB1194:
 3420              		.loc 20 76 5 view .LVU879
 3421              		.loc 20 76 5 is_stmt 0 view .LVU880
 3422              	.LBE1194:
 3423              	.LBE1193:
1285:Veno-Echo.cpp ****         {
 3424              		.loc 19 1285 16 view .LVU881
 3425 0014 93ED007A 		vldr.32	s14, [r3]
1285:Veno-Echo.cpp ****         {
 3426              		.loc 19 1285 9 view .LVU882
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 125


 3427 0018 DFED1D6A 		vldr.32	s13, .L177+12
1285:Veno-Echo.cpp ****         {
 3428              		.loc 19 1285 16 view .LVU883
 3429 001c 77EE407A 		vsub.f32	s15, s14, s0
 3430              	.LBB1196:
 3431              	.LBB1195:
 3432              		.loc 20 76 31 view .LVU884
 3433 0020 F0EEE77A 		vabs.f32	s15, s15
 3434              	.LBE1195:
 3435              	.LBE1196:
1285:Veno-Echo.cpp ****         {
 3436              		.loc 19 1285 9 view .LVU885
 3437 0024 F4EEE67A 		vcmpe.f32	s15, s13
 3438 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3439 002c 00DC     		bgt	.L176
 3440              	.LBE1192:
 3441              	.LBE1207:
1292:Veno-Echo.cpp **** 
 3442              		.loc 19 1292 1 view .LVU886
 3443 002e 38BD     		pop	{r3, r4, r5, pc}
 3444              	.L176:
 3445              	.LBB1208:
 3446              	.LBB1205:
1287:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3447              		.loc 19 1287 13 is_stmt 1 view .LVU887
 3448              	.LBB1197:
 3449              	.LBB1198:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 126


  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 3450              		.loc 8 60 20 is_stmt 0 view .LVU888
 3451 0030 184C     		ldr	r4, .L177+16
 3452              	.LBE1198:
 3453              	.LBE1197:
1287:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3454              		.loc 19 1287 28 view .LVU889
 3455 0032 B2EE041A 		vmov.f32	s2, #1.0e+1
 3456 0036 0020     		movs	r0, #0
 3457 0038 DFED170A 		vldr.32	s1, .L177+20
1287:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3458              		.loc 19 1287 21 view .LVU890
 3459 003c 174D     		ldr	r5, .L177+24
1287:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3460              		.loc 19 1287 28 view .LVU891
 3461 003e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3462              	.LVL205:
 3463              	.LBB1202:
 3464              	.LBB1199:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3465              		.loc 8 61 34 view .LVU892
 3466 0042 2046     		mov	r0, r4
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3467              		.loc 8 60 20 view .LVU893
 3468 0044 84ED020A 		vstr.32	s0, [r4, #8]
 3469              	.LBE1199:
 3470              	.LBE1202:
1287:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3471              		.loc 19 1287 21 view .LVU894
 3472 0048 85ED000A 		vstr.32	s0, [r5]
1288:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 3473              		.loc 19 1288 13 is_stmt 1 view .LVU895
 3474              	.LVL206:
 3475              	.LBB1203:
 3476              	.LBI1197:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 3477              		.loc 8 58 17 view .LVU896
 3478              	.LBB1200:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3479              		.loc 8 60 9 view .LVU897
 3480              		.loc 8 61 9 view .LVU898
 3481              		.loc 8 61 34 is_stmt 0 view .LVU899
 3482 004c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 3483              	.LVL207:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 127


 3484              		.loc 8 61 34 view .LVU900
 3485              	.LBE1200:
 3486              	.LBE1203:
1289:Veno-Echo.cpp ****         }
 3487              		.loc 19 1289 33 view .LVU901
 3488 0050 2A68     		ldr	r2, [r5]	@ float
 3489 0052 134B     		ldr	r3, .L177+28
 3490              	.LBB1204:
 3491              	.LBB1201:
 3492              		.loc 8 61 20 view .LVU902
 3493 0054 84ED060A 		vstr.32	s0, [r4, #24]
 3494              	.LVL208:
 3495              		.loc 8 61 20 view .LVU903
 3496              	.LBE1201:
 3497              	.LBE1204:
1289:Veno-Echo.cpp ****         }
 3498              		.loc 19 1289 13 is_stmt 1 view .LVU904
1289:Veno-Echo.cpp ****         }
 3499              		.loc 19 1289 33 is_stmt 0 view .LVU905
 3500 0058 DA60     		str	r2, [r3, #12]	@ float
 3501              	.LBE1205:
 3502              	.LBE1208:
1292:Veno-Echo.cpp **** 
 3503              		.loc 19 1292 1 view .LVU906
 3504 005a 38BD     		pop	{r3, r4, r5, pc}
 3505              	.LVL209:
 3506              	.L175:
 3507              	.LBB1209:
 3508              	.LBB1206:
1276:Veno-Echo.cpp **** 
 3509              		.loc 19 1276 9 is_stmt 1 view .LVU907
1278:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 3510              		.loc 19 1278 40 is_stmt 0 view .LVU908
 3511 005c B7EE001A 		vmov.f32	s2, #1.0e+0
 3512 0060 DFED100A 		vldr.32	s1, .L177+32
1276:Veno-Echo.cpp **** 
 3513              		.loc 19 1276 32 view .LVU909
 3514 0064 83ED000A 		vstr.32	s0, [r3]
1278:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 3515              		.loc 19 1278 9 is_stmt 1 view .LVU910
1278:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 3516              		.loc 19 1278 40 is_stmt 0 view .LVU911
 3517 0068 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3518              	.LVL210:
1279:Veno-Echo.cpp **** 
 3519              		.loc 19 1279 9 is_stmt 1 view .LVU912
 3520              	.LBB1190:
 3521              	.LBI1190:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3522              		.loc 21 135 13 view .LVU913
 3523              	.LBB1191:
 3524              		.loc 21 137 5 view .LVU914
 3525              		.loc 21 137 9 is_stmt 0 view .LVU915
 3526 006c 0E4B     		ldr	r3, .L177+36
 3527 006e 9FED0F7A 		vldr.32	s14, .L177+40
 3528 0072 D3ED007A 		vldr.32	s15, [r3]
 3529              		.loc 21 137 24 view .LVU916
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 128


 3530 0076 30EE670A 		vsub.f32	s0, s0, s15
 3531              	.LVL211:
 3532              		.loc 21 137 9 view .LVU917
 3533 007a E0EE077A 		vfma.f32	s15, s0, s14
 3534 007e C3ED007A 		vstr.32	s15, [r3]
 3535              	.LBE1191:
 3536              	.LBE1190:
 3537              	.LBE1206:
 3538              	.LBE1209:
1292:Veno-Echo.cpp **** 
 3539              		.loc 19 1292 1 view .LVU918
 3540 0082 38BD     		pop	{r3, r4, r5, pc}
 3541              	.L178:
 3542              		.align	2
 3543              	.L177:
 3544 0084 18000000 		.word	.LANCHOR4+24
 3545 0088 00000000 		.word	.LANCHOR8
 3546 008c 00000000 		.word	.LANCHOR44
 3547 0090 0AD7A33B 		.word	1000593162
 3548 0094 00000000 		.word	.LANCHOR47
 3549 0098 CDCCCC3D 		.word	1036831949
 3550 009c 00000000 		.word	.LANCHOR46
 3551 00a0 00000000 		.word	.LANCHOR19
 3552 00a4 00000000 		.word	0
 3553 00a8 00000000 		.word	.LANCHOR45
 3554 00ac 6F12033D 		.word	1023611503
 3555              		.cfi_endproc
 3556              	.LFE4303:
 3558              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 3559              		.align	1
 3560              		.p2align 2,,3
 3561              		.global	_Z18Update_filterXfadev
 3562              		.syntax unified
 3563              		.thumb
 3564              		.thumb_func
 3565              		.fpu fpv5-d16
 3567              	_Z18Update_filterXfadev:
 3568              	.LFB4304:
1295:Veno-Echo.cpp ****     //get pot values:
 3569              		.loc 19 1295 1 is_stmt 1 view -0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 0
 3572              		@ frame_needed = 0, uses_anonymous_args = 0
1297:Veno-Echo.cpp **** 
 3573              		.loc 19 1297 5 view .LVU920
1295:Veno-Echo.cpp ****     //get pot values:
 3574              		.loc 19 1295 1 is_stmt 0 view .LVU921
 3575 0000 08B5     		push	{r3, lr}
 3576              		.cfi_def_cfa_offset 8
 3577              		.cfi_offset 3, -8
 3578              		.cfi_offset 14, -4
1297:Veno-Echo.cpp **** 
 3579              		.loc 19 1297 45 view .LVU922
 3580 0002 0322     		movs	r2, #3
 3581 0004 0721     		movs	r1, #7
 3582 0006 2248     		ldr	r0, .L194
 3583 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 129


 3584              	.LVL212:
 3585              	.LBB1210:
1301:Veno-Echo.cpp ****     {   
 3586              		.loc 19 1301 9 view .LVU923
 3587 000c 214B     		ldr	r3, .L194+4
 3588              	.LBE1210:
1297:Veno-Echo.cpp **** 
 3589              		.loc 19 1297 45 view .LVU924
 3590 000e F0EE407A 		vmov.f32	s15, s0
 3591              	.LVL213:
1299:Veno-Echo.cpp **** 
 3592              		.loc 19 1299 5 is_stmt 1 view .LVU925
1301:Veno-Echo.cpp ****     {   
 3593              		.loc 19 1301 5 view .LVU926
 3594              	.LBB1218:
 3595 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3596 0014 13B3     		cbz	r3, .L192
1313:Veno-Echo.cpp ****         {
 3597              		.loc 19 1313 9 view .LVU927
 3598              	.LVL214:
 3599              	.LBB1211:
 3600              	.LBI1211:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3601              		.loc 20 75 3 view .LVU928
 3602              	.LBB1212:
 3603              		.loc 20 76 5 view .LVU929
 3604              		.loc 20 76 5 is_stmt 0 view .LVU930
 3605              	.LBE1212:
 3606              	.LBE1211:
1313:Veno-Echo.cpp ****         {
 3607              		.loc 19 1313 16 view .LVU931
 3608 0016 204B     		ldr	r3, .L194+8
1313:Veno-Echo.cpp ****         {
 3609              		.loc 19 1313 9 view .LVU932
 3610 0018 DFED206A 		vldr.32	s13, .L194+12
1313:Veno-Echo.cpp ****         {
 3611              		.loc 19 1313 16 view .LVU933
 3612 001c 93ED007A 		vldr.32	s14, [r3]
 3613 0020 37EE407A 		vsub.f32	s14, s14, s0
 3614              	.LBB1214:
 3615              	.LBB1213:
 3616              		.loc 20 76 31 view .LVU934
 3617 0024 B0EEC77A 		vabs.f32	s14, s14
 3618              	.LBE1213:
 3619              	.LBE1214:
1313:Veno-Echo.cpp ****         {
 3620              		.loc 19 1313 9 view .LVU935
 3621 0028 B4EEE67A 		vcmpe.f32	s14, s13
 3622 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3623 0030 13DD     		ble	.L179
1316:Veno-Echo.cpp ****             {
 3624              		.loc 19 1316 13 is_stmt 1 view .LVU936
 3625 0032 9FED1B7A 		vldr.32	s14, .L194+16
 3626 0036 B4EEC70A 		vcmpe.f32	s0, s14
 3627 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3628 003e 23D4     		bmi	.L193
1320:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 130


 3629              		.loc 19 1320 18 view .LVU937
 3630 0040 9FED187A 		vldr.32	s14, .L194+20
 3631 0044 B4EEC70A 		vcmpe.f32	s0, s14
 3632 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3633 004c 02DD     		ble	.L185
1323:Veno-Echo.cpp ****             }
 3634              		.loc 19 1323 17 view .LVU938
1323:Veno-Echo.cpp ****             }
 3635              		.loc 19 1323 29 is_stmt 0 view .LVU939
 3636 004e 164B     		ldr	r3, .L194+24
 3637 0050 0122     		movs	r2, #1
 3638 0052 1A70     		strb	r2, [r3]
 3639              	.L185:
1329:Veno-Echo.cpp ****         }
 3640              		.loc 19 1329 13 is_stmt 1 view .LVU940
1329:Veno-Echo.cpp ****         }
 3641              		.loc 19 1329 39 is_stmt 0 view .LVU941
 3642 0054 154B     		ldr	r3, .L194+28
 3643 0056 C3ED077A 		vstr.32	s15, [r3, #28]
 3644              	.L179:
1329:Veno-Echo.cpp ****         }
 3645              		.loc 19 1329 39 view .LVU942
 3646              	.LBE1218:
1332:Veno-Echo.cpp **** 
 3647              		.loc 19 1332 1 view .LVU943
 3648 005a 08BD     		pop	{r3, pc}
 3649              	.L192:
 3650              	.LBB1219:
 3651              	.LBB1215:
1304:Veno-Echo.cpp **** 
 3652              		.loc 19 1304 9 is_stmt 1 view .LVU944
1304:Veno-Echo.cpp **** 
 3653              		.loc 19 1304 30 is_stmt 0 view .LVU945
 3654 005c 0E4B     		ldr	r3, .L194+8
1306:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 3655              		.loc 19 1306 38 view .LVU946
 3656 005e B7EE001A 		vmov.f32	s2, #1.0e+0
 3657 0062 0120     		movs	r0, #1
 3658 0064 DFED120A 		vldr.32	s1, .L194+32
1304:Veno-Echo.cpp **** 
 3659              		.loc 19 1304 30 view .LVU947
 3660 0068 83ED000A 		vstr.32	s0, [r3]
1306:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 3661              		.loc 19 1306 9 is_stmt 1 view .LVU948
1306:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 3662              		.loc 19 1306 38 is_stmt 0 view .LVU949
 3663 006c FFF7FEFF 		bl	_Z5scalefff9CurveType
 3664              	.LVL215:
1307:Veno-Echo.cpp **** 
 3665              		.loc 19 1307 9 is_stmt 1 view .LVU950
 3666              	.LBB1216:
 3667              	.LBI1216:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3668              		.loc 21 135 13 view .LVU951
 3669              	.LBB1217:
 3670              		.loc 21 137 5 view .LVU952
 3671              		.loc 21 137 9 is_stmt 0 view .LVU953
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 131


 3672 0070 104B     		ldr	r3, .L194+36
 3673 0072 9FED117A 		vldr.32	s14, .L194+40
 3674 0076 D3ED007A 		vldr.32	s15, [r3]
 3675              		.loc 21 137 24 view .LVU954
 3676 007a 30EE670A 		vsub.f32	s0, s0, s15
 3677              	.LVL216:
 3678              		.loc 21 137 9 view .LVU955
 3679 007e E0EE077A 		vfma.f32	s15, s0, s14
 3680 0082 C3ED007A 		vstr.32	s15, [r3]
 3681              	.LBE1217:
 3682              	.LBE1216:
 3683              	.LBE1215:
 3684              	.LBE1219:
1332:Veno-Echo.cpp **** 
 3685              		.loc 19 1332 1 view .LVU956
 3686 0086 08BD     		pop	{r3, pc}
 3687              	.LVL217:
 3688              	.L193:
 3689              	.LBB1220:
1318:Veno-Echo.cpp ****             }
 3690              		.loc 19 1318 17 is_stmt 1 view .LVU957
1318:Veno-Echo.cpp ****             }
 3691              		.loc 19 1318 29 is_stmt 0 view .LVU958
 3692 0088 074B     		ldr	r3, .L194+24
 3693 008a 0022     		movs	r2, #0
 3694 008c 1A70     		strb	r2, [r3]
 3695 008e E1E7     		b	.L185
 3696              	.L195:
 3697              		.align	2
 3698              	.L194:
 3699 0090 18000000 		.word	.LANCHOR4+24
 3700 0094 00000000 		.word	.LANCHOR8
 3701 0098 00000000 		.word	.LANCHOR48
 3702 009c 0AD7A33B 		.word	1000593162
 3703 00a0 6666E63E 		.word	1055286886
 3704 00a4 CDCC0C3F 		.word	1057803469
 3705 00a8 00000000 		.word	.LANCHOR50
 3706 00ac 00000000 		.word	.LANCHOR19
 3707 00b0 00000000 		.word	0
 3708 00b4 00000000 		.word	.LANCHOR49
 3709 00b8 6F12033D 		.word	1023611503
 3710              	.LBE1220:
 3711              		.cfi_endproc
 3712              	.LFE4304:
 3714              		.section	.text._Z8GetModCVv,"ax",%progbits
 3715              		.align	1
 3716              		.p2align 2,,3
 3717              		.global	_Z8GetModCVv
 3718              		.syntax unified
 3719              		.thumb
 3720              		.thumb_func
 3721              		.fpu fpv5-d16
 3723              	_Z8GetModCVv:
 3724              	.LFB4305:
1335:Veno-Echo.cpp ****     //get modulation CV input
 3725              		.loc 19 1335 1 is_stmt 1 view -0
 3726              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 132


 3727              		@ args = 0, pretend = 0, frame = 0
 3728              		@ frame_needed = 0, uses_anonymous_args = 0
1337:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3729              		.loc 19 1337 5 view .LVU960
1335:Veno-Echo.cpp ****     //get modulation CV input
 3730              		.loc 19 1335 1 is_stmt 0 view .LVU961
 3731 0000 08B5     		push	{r3, lr}
 3732              		.cfi_def_cfa_offset 8
 3733              		.cfi_offset 3, -8
 3734              		.cfi_offset 14, -4
1337:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3735              		.loc 19 1337 30 view .LVU962
 3736 0002 0621     		movs	r1, #6
 3737 0004 0648     		ldr	r0, .L198
 3738 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3739              	.LVL218:
 3740 000a 0020     		movs	r0, #0
 3741 000c 9FED051A 		vldr.32	s2, .L198+4
 3742 0010 DFED050A 		vldr.32	s1, .L198+8
 3743 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3744              	.LVL219:
1337:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3745              		.loc 19 1337 23 view .LVU963
 3746 0018 044B     		ldr	r3, .L198+12
 3747 001a 83ED000A 		vstr.32	s0, [r3]
1339:Veno-Echo.cpp **** 
 3748              		.loc 19 1339 1 view .LVU964
 3749 001e 08BD     		pop	{r3, pc}
 3750              	.L199:
 3751              		.align	2
 3752              	.L198:
 3753 0020 18000000 		.word	.LANCHOR4+24
 3754 0024 00004843 		.word	1128792064
 3755 0028 000048C3 		.word	3276275712
 3756 002c 00000000 		.word	.LANCHOR51
 3757              		.cfi_endproc
 3758              	.LFE4305:
 3760              		.section	.text._Z10Update_Modv,"ax",%progbits
 3761              		.align	1
 3762              		.p2align 2,,3
 3763              		.global	_Z10Update_Modv
 3764              		.syntax unified
 3765              		.thumb
 3766              		.thumb_func
 3767              		.fpu fpv5-d16
 3769              	_Z10Update_Modv:
 3770              	.LFB4306:
1342:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3771              		.loc 19 1342 1 is_stmt 1 view -0
 3772              		.cfi_startproc
 3773              		@ args = 0, pretend = 0, frame = 8
 3774              		@ frame_needed = 0, uses_anonymous_args = 0
1343:Veno-Echo.cpp ****     static float modulation_CV{};
 3775              		.loc 19 1343 5 view .LVU966
1344:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 3776              		.loc 19 1344 5 view .LVU967
1345:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 133


 3777              		.loc 19 1345 5 view .LVU968
 3778              	.LVL220:
 3779              	.LBB1221:
 3780              	.LBI1221:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3781              		.loc 21 135 13 view .LVU969
 3782              	.LBB1222:
 3783              		.loc 21 137 5 view .LVU970
 3784              	.LBE1222:
 3785              	.LBE1221:
1342:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3786              		.loc 19 1342 1 is_stmt 0 view .LVU971
 3787 0000 30B5     		push	{r4, r5, lr}
 3788              		.cfi_def_cfa_offset 12
 3789              		.cfi_offset 4, -12
 3790              		.cfi_offset 5, -8
 3791              		.cfi_offset 14, -4
1345:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3792              		.loc 19 1345 13 view .LVU972
 3793 0002 1E4A     		ldr	r2, .L202
 3794              	.LBB1228:
 3795              	.LBB1223:
 3796              		.loc 21 137 9 view .LVU973
 3797 0004 1E4C     		ldr	r4, .L202+4
 3798              	.LBE1223:
 3799              	.LBE1228:
1346:Veno-Echo.cpp ****     //calculate InternalMod
 3800              		.loc 19 1346 13 view .LVU974
 3801 0006 1F4B     		ldr	r3, .L202+8
 3802              	.LBB1229:
 3803              	.LBB1230:
 3804              		.loc 21 137 9 view .LVU975
 3805 0008 1F4D     		ldr	r5, .L202+12
 3806              	.LBE1230:
 3807              	.LBE1229:
 3808              	.LBB1235:
 3809              	.LBB1224:
 3810 000a 94ED007A 		vldr.32	s14, [r4]
 3811              		.loc 21 137 24 view .LVU976
 3812 000e 92ED006A 		vldr.32	s12, [r2]
 3813              	.LBE1224:
 3814              	.LBE1235:
 3815              	.LBB1236:
 3816              	.LBB1231:
 3817              		.loc 21 137 9 view .LVU977
 3818 0012 D5ED007A 		vldr.32	s15, [r5]
 3819              		.loc 21 137 24 view .LVU978
 3820 0016 D3ED006A 		vldr.32	s13, [r3]
 3821              	.LBE1231:
 3822              	.LBE1236:
 3823              	.LBB1237:
 3824              	.LBB1225:
 3825 001a 36EE476A 		vsub.f32	s12, s12, s14
 3826              		.loc 21 137 9 view .LVU979
 3827 001e DFED1B5A 		vldr.32	s11, .L202+16
 3828              	.LBE1225:
 3829              	.LBE1237:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 134


 3830              	.LBB1238:
 3831              	.LBB1232:
 3832              		.loc 21 137 24 view .LVU980
 3833 0022 76EEE76A 		vsub.f32	s13, s13, s15
 3834              	.LBE1232:
 3835              	.LBE1238:
1348:Veno-Echo.cpp ****     //apply modulation to delay lines
 3836              		.loc 19 1348 34 view .LVU981
 3837 0026 1A48     		ldr	r0, .L202+20
 3838              	.LBB1239:
 3839              	.LBB1226:
 3840              		.loc 21 137 9 view .LVU982
 3841 0028 A6EE257A 		vfma.f32	s14, s12, s11
 3842              	.LBE1226:
 3843              	.LBE1239:
 3844              	.LBB1240:
 3845              	.LBB1233:
 3846 002c E6EEA57A 		vfma.f32	s15, s13, s11
 3847              	.LBE1233:
 3848              	.LBE1240:
1342:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3849              		.loc 19 1342 1 view .LVU983
 3850 0030 2DED028B 		vpush.64	{d8}
 3851              		.cfi_def_cfa_offset 20
 3852              		.cfi_offset 80, -20
 3853              		.cfi_offset 81, -16
 3854 0034 83B0     		sub	sp, sp, #12
 3855              		.cfi_def_cfa_offset 32
 3856              	.LBB1241:
 3857              	.LBB1227:
 3858              		.loc 21 137 9 view .LVU984
 3859 0036 84ED007A 		vstr.32	s14, [r4]
 3860              	.LVL221:
 3861              		.loc 21 137 9 view .LVU985
 3862              	.LBE1227:
 3863              	.LBE1241:
1346:Veno-Echo.cpp ****     //calculate InternalMod
 3864              		.loc 19 1346 5 is_stmt 1 view .LVU986
 3865              	.LBB1242:
 3866              	.LBI1229:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3867              		.loc 21 135 13 view .LVU987
 3868              	.LBB1234:
 3869              		.loc 21 137 5 view .LVU988
 3870              		.loc 21 137 9 is_stmt 0 view .LVU989
 3871 003a C5ED007A 		vstr.32	s15, [r5]
 3872              	.LVL222:
 3873              		.loc 21 137 9 view .LVU990
 3874              	.LBE1234:
 3875              	.LBE1242:
1348:Veno-Echo.cpp ****     //apply modulation to delay lines
 3876              		.loc 19 1348 5 is_stmt 1 view .LVU991
1348:Veno-Echo.cpp ****     //apply modulation to delay lines
 3877              		.loc 19 1348 34 is_stmt 0 view .LVU992
 3878 003e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 3879              	.LVL223:
1348:Veno-Echo.cpp ****     //apply modulation to delay lines
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 135


 3880              		.loc 19 1348 37 view .LVU993
 3881 0042 D5ED008A 		vldr.32	s17, [r5]
1348:Veno-Echo.cpp ****     //apply modulation to delay lines
 3882              		.loc 19 1348 34 view .LVU994
 3883 0046 B0EE408A 		vmov.f32	s16, s0
 3884              	.LVL224:
1350:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3885              		.loc 19 1350 5 is_stmt 1 view .LVU995
1350:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3886              		.loc 19 1350 40 is_stmt 0 view .LVU996
 3887 004a D4ED007A 		vldr.32	s15, [r4]
1350:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3888              		.loc 19 1350 25 view .LVU997
 3889 004e 01A9     		add	r1, sp, #4
 3890 0050 1048     		ldr	r0, .L202+24
1350:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3891              		.loc 19 1350 40 view .LVU998
 3892 0052 E0EE287A 		vfma.f32	s15, s0, s17
 3893 0056 CDED017A 		vstr.32	s15, [sp, #4]
1350:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3894              		.loc 19 1350 25 view .LVU999
 3895 005a FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 3896              	.LVL225:
1351:Veno-Echo.cpp **** }
 3897              		.loc 19 1351 5 is_stmt 1 view .LVU1000
1351:Veno-Echo.cpp **** }
 3898              		.loc 19 1351 40 is_stmt 0 view .LVU1001
 3899 005e D4ED007A 		vldr.32	s15, [r4]
1351:Veno-Echo.cpp **** }
 3900              		.loc 19 1351 25 view .LVU1002
 3901 0062 01A9     		add	r1, sp, #4
 3902 0064 0C48     		ldr	r0, .L202+28
1351:Veno-Echo.cpp **** }
 3903              		.loc 19 1351 40 view .LVU1003
 3904 0066 E8EE287A 		vfma.f32	s15, s16, s17
 3905 006a CDED017A 		vstr.32	s15, [sp, #4]
1351:Veno-Echo.cpp **** }
 3906              		.loc 19 1351 25 view .LVU1004
 3907 006e FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 3908              	.LVL226:
1352:Veno-Echo.cpp **** 
 3909              		.loc 19 1352 1 view .LVU1005
 3910 0072 03B0     		add	sp, sp, #12
 3911              		.cfi_def_cfa_offset 20
 3912              		@ sp needed
 3913 0074 BDEC028B 		vldm	sp!, {d8}
 3914              		.cfi_restore 80
 3915              		.cfi_restore 81
 3916              		.cfi_def_cfa_offset 12
 3917              	.LVL227:
1352:Veno-Echo.cpp **** 
 3918              		.loc 19 1352 1 view .LVU1006
 3919 0078 30BD     		pop	{r4, r5, pc}
 3920              	.L203:
 3921 007a 00BF     		.align	2
 3922              	.L202:
 3923 007c 00000000 		.word	.LANCHOR51
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 136


 3924 0080 00000000 		.word	.LANCHOR52
 3925 0084 00000000 		.word	.LANCHOR43
 3926 0088 00000000 		.word	.LANCHOR53
 3927 008c 0AD7233C 		.word	1008981770
 3928 0090 00000000 		.word	.LANCHOR47
 3929 0094 00000000 		.word	.LANCHOR0
 3930 0098 00000000 		.word	.LANCHOR1
 3931              		.cfi_endproc
 3932              	.LFE4306:
 3934              		.section	.text._Z11UpdateClockv,"ax",%progbits
 3935              		.align	1
 3936              		.p2align 2,,3
 3937              		.global	_Z11UpdateClockv
 3938              		.syntax unified
 3939              		.thumb
 3940              		.thumb_func
 3941              		.fpu fpv5-d16
 3943              	_Z11UpdateClockv:
 3944              	.LFB4307:
1355:Veno-Echo.cpp ****     static int divCounter{};
 3945              		.loc 19 1355 1 is_stmt 1 view -0
 3946              		.cfi_startproc
 3947              		@ args = 0, pretend = 0, frame = 0
 3948              		@ frame_needed = 0, uses_anonymous_args = 0
1356:Veno-Echo.cpp ****     ClockIn.Debounce();
 3949              		.loc 19 1356 5 view .LVU1008
1357:Veno-Echo.cpp **** 
 3950              		.loc 19 1357 5 view .LVU1009
1355:Veno-Echo.cpp ****     static int divCounter{};
 3951              		.loc 19 1355 1 is_stmt 0 view .LVU1010
 3952 0000 10B5     		push	{r4, lr}
 3953              		.cfi_def_cfa_offset 8
 3954              		.cfi_offset 4, -8
 3955              		.cfi_offset 14, -4
1357:Veno-Echo.cpp **** 
 3956              		.loc 19 1357 21 view .LVU1011
 3957 0002 184C     		ldr	r4, .L218
 3958 0004 2046     		mov	r0, r4
 3959 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 3960              	.LVL228:
1360:Veno-Echo.cpp ****     {   
 3961              		.loc 19 1360 5 is_stmt 1 view .LVU1012
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 137


  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 3962              		.loc 1 69 38 view .LVU1013
1360:Veno-Echo.cpp ****     {   
 3963              		.loc 19 1360 5 is_stmt 0 view .LVU1014
 3964 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 3965 000c 7F2B     		cmp	r3, #127
 3966 000e 00D0     		beq	.L216
 3967              	.L204:
1385:Veno-Echo.cpp **** 
 3968              		.loc 19 1385 1 view .LVU1015
 3969 0010 10BD     		pop	{r4, pc}
 3970              	.L216:
1362:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3971              		.loc 19 1362 9 is_stmt 1 view .LVU1016
1362:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3972              		.loc 19 1362 20 is_stmt 0 view .LVU1017
 3973 0012 0023     		movs	r3, #0
 3974 0014 144C     		ldr	r4, .L218+4
1363:Veno-Echo.cpp ****         if(divCounter == 0)
 3975              		.loc 19 1363 33 view .LVU1018
 3976 0016 1548     		ldr	r0, .L218+8
1362:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 3977              		.loc 19 1362 20 view .LVU1019
 3978 0018 2360     		str	r3, [r4]
1363:Veno-Echo.cpp ****         if(divCounter == 0)
 3979              		.loc 19 1363 9 is_stmt 1 view .LVU1020
1363:Veno-Echo.cpp ****         if(divCounter == 0)
 3980              		.loc 19 1363 33 is_stmt 0 view .LVU1021
 3981 001a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3982              	.LVL229:
1364:Veno-Echo.cpp ****         {
 3983              		.loc 19 1364 9 is_stmt 1 view .LVU1022
 3984 001e 2368     		ldr	r3, [r4]
 3985 0020 002B     		cmp	r3, #0
 3986 0022 F5D1     		bne	.L204
1366:Veno-Echo.cpp ****             {
 3987              		.loc 19 1366 13 view .LVU1023
1366:Veno-Echo.cpp ****             {
 3988              		.loc 19 1366 29 is_stmt 0 view .LVU1024
 3989 0024 1248     		ldr	r0, .L218+12
 3990 0026 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 3991              	.LVL230:
1366:Veno-Echo.cpp ****             {
 3992              		.loc 19 1366 13 view .LVU1025
 3993 002a 0028     		cmp	r0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 138


 3994 002c F0D0     		beq	.L204
1368:Veno-Echo.cpp ****                 if(syncMode)
 3995              		.loc 19 1368 17 is_stmt 1 view .LVU1026
1368:Veno-Echo.cpp ****                 if(syncMode)
 3996              		.loc 19 1368 39 is_stmt 0 view .LVU1027
 3997 002e 1048     		ldr	r0, .L218+12
 3998 0030 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 3999              	.LVL231:
 4000 0034 0D48     		ldr	r0, .L218+8
 4001 0036 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 4002              	.LVL232:
1369:Veno-Echo.cpp ****                 {
 4003              		.loc 19 1369 17 is_stmt 1 view .LVU1028
 4004 003a 0E4B     		ldr	r3, .L218+16
 4005 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4006 003e 002B     		cmp	r3, #0
 4007 0040 E6D0     		beq	.L204
 4008              	.LBB1247:
 4009              	.LBI1247:
1354:Veno-Echo.cpp **** {
 4010              		.loc 19 1354 6 view .LVU1029
 4011              	.LBB1248:
1371:Veno-Echo.cpp ****                     {
 4012              		.loc 19 1371 21 view .LVU1030
1371:Veno-Echo.cpp ****                     {
 4013              		.loc 19 1371 30 is_stmt 0 view .LVU1031
 4014 0042 0D4B     		ldr	r3, .L218+20
1371:Veno-Echo.cpp ****                     {
 4015              		.loc 19 1371 21 view .LVU1032
 4016 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4017 0046 052B     		cmp	r3, #5
 4018 0048 08D9     		bls	.L217
 4019              	.L208:
1376:Veno-Echo.cpp ****                     {
 4020              		.loc 19 1376 21 is_stmt 1 view .LVU1033
1376:Veno-Echo.cpp ****                     {
 4021              		.loc 19 1376 30 is_stmt 0 view .LVU1034
 4022 004a 0C4B     		ldr	r3, .L218+24
1376:Veno-Echo.cpp ****                     {
 4023              		.loc 19 1376 21 view .LVU1035
 4024 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4025 004e 052B     		cmp	r3, #5
 4026 0050 DED8     		bhi	.L204
1378:Veno-Echo.cpp ****                     }
 4027              		.loc 19 1378 25 is_stmt 1 view .LVU1036
1378:Veno-Echo.cpp ****                     }
 4028              		.loc 19 1378 51 is_stmt 0 view .LVU1037
 4029 0052 0B48     		ldr	r0, .L218+28
 4030              	.LBE1248:
 4031              	.LBE1247:
1385:Veno-Echo.cpp **** 
 4032              		.loc 19 1385 1 view .LVU1038
 4033 0054 BDE81040 		pop	{r4, lr}
 4034              		.cfi_remember_state
 4035              		.cfi_restore 14
 4036              		.cfi_restore 4
 4037              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 139


 4038              	.LBB1250:
 4039              	.LBB1249:
1378:Veno-Echo.cpp ****                     }
 4040              		.loc 19 1378 51 view .LVU1039
 4041 0058 FFF7FEBF 		b	_ZN8TempoLED10resetPhaseEv
 4042              	.LVL233:
 4043              	.L217:
 4044              		.cfi_restore_state
1373:Veno-Echo.cpp ****                     }
 4045              		.loc 19 1373 25 is_stmt 1 view .LVU1040
1373:Veno-Echo.cpp ****                     }
 4046              		.loc 19 1373 51 is_stmt 0 view .LVU1041
 4047 005c 0948     		ldr	r0, .L218+32
 4048 005e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4049              	.LVL234:
 4050 0062 F2E7     		b	.L208
 4051              	.L219:
 4052              		.align	2
 4053              	.L218:
 4054 0064 00000000 		.word	.LANCHOR54
 4055 0068 00000000 		.word	.LANCHOR55
 4056 006c 00000000 		.word	.LANCHOR56
 4057 0070 00000000 		.word	.LANCHOR57
 4058 0074 00000000 		.word	.LANCHOR58
 4059 0078 00000000 		.word	.LANCHOR59
 4060 007c 00000000 		.word	.LANCHOR60
 4061 0080 04000000 		.word	.LANCHOR1+4
 4062 0084 04000000 		.word	.LANCHOR0+4
 4063              	.LBE1249:
 4064              	.LBE1250:
 4065              		.cfi_endproc
 4066              	.LFE4307:
 4068              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 4069              		.align	1
 4070              		.p2align 2,,3
 4071              		.global	_Z19Update_BaseTempoLEDv
 4072              		.syntax unified
 4073              		.thumb
 4074              		.thumb_func
 4075              		.fpu fpv5-d16
 4077              	_Z19Update_BaseTempoLEDv:
 4078              	.LFB4309:
1522:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4079              		.loc 19 1522 1 is_stmt 1 view -0
 4080              		.cfi_startproc
 4081              		@ args = 0, pretend = 0, frame = 0
 4082              		@ frame_needed = 0, uses_anonymous_args = 0
1523:Veno-Echo.cpp **** 
 4083              		.loc 19 1523 5 view .LVU1043
1523:Veno-Echo.cpp **** 
 4084              		.loc 19 1523 25 is_stmt 0 view .LVU1044
 4085 0000 0F48     		ldr	r0, .L234
1522:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4086              		.loc 19 1522 1 view .LVU1045
 4087 0002 10B5     		push	{r4, lr}
 4088              		.cfi_def_cfa_offset 8
 4089              		.cfi_offset 4, -8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 140


 4090              		.cfi_offset 14, -4
1523:Veno-Echo.cpp **** 
 4091              		.loc 19 1523 25 view .LVU1046
 4092 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 4093              	.LVL235:
1525:Veno-Echo.cpp ****     {
 4094              		.loc 19 1525 5 is_stmt 1 view .LVU1047
1525:Veno-Echo.cpp ****     {
 4095              		.loc 19 1525 27 is_stmt 0 view .LVU1048
 4096 0008 0D48     		ldr	r0, .L234
 4097 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 4098              	.LVL236:
1525:Veno-Echo.cpp ****     {
 4099              		.loc 19 1525 5 view .LVU1049
 4100 000e 28B1     		cbz	r0, .L220
1527:Veno-Echo.cpp ****         {
 4101              		.loc 19 1527 9 is_stmt 1 view .LVU1050
 4102 0010 0C4C     		ldr	r4, .L234+4
 4103 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4104 0014 4BB9     		cbnz	r3, .L232
1533:Veno-Echo.cpp ****         {
 4105              		.loc 19 1533 9 view .LVU1051
 4106 0016 0C4C     		ldr	r4, .L234+8
 4107 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4108 001a 03B9     		cbnz	r3, .L233
 4109              	.L220:
1540:Veno-Echo.cpp **** 
 4110              		.loc 19 1540 1 is_stmt 0 view .LVU1052
 4111 001c 10BD     		pop	{r4, pc}
 4112              	.L233:
 4113              	.LBB1253:
 4114              	.LBI1253:
1521:Veno-Echo.cpp **** {
 4115              		.loc 19 1521 6 is_stmt 1 view .LVU1053
 4116              	.LBB1254:
1535:Veno-Echo.cpp ****             delayR_flag = false;
 4117              		.loc 19 1535 13 view .LVU1054
1535:Veno-Echo.cpp ****             delayR_flag = false;
 4118              		.loc 19 1535 39 is_stmt 0 view .LVU1055
 4119 001e 0B48     		ldr	r0, .L234+12
 4120 0020 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4121              	.LVL237:
1536:Veno-Echo.cpp ****         }
 4122              		.loc 19 1536 13 is_stmt 1 view .LVU1056
1536:Veno-Echo.cpp ****         }
 4123              		.loc 19 1536 25 is_stmt 0 view .LVU1057
 4124 0024 0023     		movs	r3, #0
 4125 0026 2370     		strb	r3, [r4]
 4126              	.LBE1254:
 4127              	.LBE1253:
1540:Veno-Echo.cpp **** 
 4128              		.loc 19 1540 1 view .LVU1058
 4129 0028 10BD     		pop	{r4, pc}
 4130              	.L232:
1529:Veno-Echo.cpp ****             delayL_flag = false;
 4131              		.loc 19 1529 13 is_stmt 1 view .LVU1059
1529:Veno-Echo.cpp ****             delayL_flag = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 141


 4132              		.loc 19 1529 39 is_stmt 0 view .LVU1060
 4133 002a 0948     		ldr	r0, .L234+16
 4134 002c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4135              	.LVL238:
1530:Veno-Echo.cpp ****         }
 4136              		.loc 19 1530 13 is_stmt 1 view .LVU1061
1530:Veno-Echo.cpp ****         }
 4137              		.loc 19 1530 25 is_stmt 0 view .LVU1062
 4138 0030 0023     		movs	r3, #0
 4139 0032 2370     		strb	r3, [r4]
1533:Veno-Echo.cpp ****         {
 4140              		.loc 19 1533 9 is_stmt 1 view .LVU1063
 4141 0034 044C     		ldr	r4, .L234+8
 4142 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4143 0038 002B     		cmp	r3, #0
 4144 003a EFD0     		beq	.L220
 4145 003c EFE7     		b	.L233
 4146              	.L235:
 4147 003e 00BF     		.align	2
 4148              	.L234:
 4149 0040 00000000 		.word	.LANCHOR56
 4150 0044 00000000 		.word	.LANCHOR61
 4151 0048 00000000 		.word	.LANCHOR62
 4152 004c 04000000 		.word	.LANCHOR1+4
 4153 0050 04000000 		.word	.LANCHOR0+4
 4154              		.cfi_endproc
 4155              	.LFE4309:
 4157              		.section	.text._Z11SetTempoDivfP9TempoDivs,"ax",%progbits
 4158              		.align	1
 4159              		.p2align 2,,3
 4160              		.global	_Z11SetTempoDivfP9TempoDivs
 4161              		.syntax unified
 4162              		.thumb
 4163              		.thumb_func
 4164              		.fpu fpv5-d16
 4166              	_Z11SetTempoDivfP9TempoDivs:
 4167              	.LVL239:
 4168              	.LFB4310:
1544:Veno-Echo.cpp **** 
 4169              		.loc 19 1544 1 view -0
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 0
 4172              		@ frame_needed = 0, uses_anonymous_args = 0
 4173              		@ link register save eliminated.
1546:Veno-Echo.cpp **** 
 4174              		.loc 19 1546 5 view .LVU1065
1548:Veno-Echo.cpp ****     {
 4175              		.loc 19 1548 5 view .LVU1066
 4176 0000 DFED417A 		vldr.32	s15, .L282
 4177 0004 B4EEE70A 		vcmpe.f32	s0, s15
 4178 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4179 000c 04D5     		bpl	.L270
1550:Veno-Echo.cpp ****         *div = DIV6;
 4180              		.loc 19 1550 9 view .LVU1067
 4181              	.LVL240:
1551:Veno-Echo.cpp ****     }
 4182              		.loc 19 1551 9 view .LVU1068
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 142


1551:Veno-Echo.cpp ****     }
 4183              		.loc 19 1551 14 is_stmt 0 view .LVU1069
 4184 000e 0023     		movs	r3, #0
1550:Veno-Echo.cpp ****         *div = DIV6;
 4185              		.loc 19 1550 16 view .LVU1070
 4186 0010 9FED3E0A 		vldr.32	s0, .L282+4
 4187              	.LVL241:
1551:Veno-Echo.cpp ****     }
 4188              		.loc 19 1551 14 view .LVU1071
 4189 0014 0370     		strb	r3, [r0]
 4190 0016 7047     		bx	lr
 4191              	.LVL242:
 4192              	.L270:
1554:Veno-Echo.cpp ****     {
 4193              		.loc 19 1554 10 is_stmt 1 view .LVU1072
 4194 0018 DFED3D7A 		vldr.32	s15, .L282+8
 4195 001c B4EEE70A 		vcmpe.f32	s0, s15
 4196 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4197 0024 04D5     		bpl	.L271
1556:Veno-Echo.cpp ****        *div = DIV5;
 4198              		.loc 19 1556 8 view .LVU1073
 4199              	.LVL243:
1557:Veno-Echo.cpp ****     }
 4200              		.loc 19 1557 8 view .LVU1074
1557:Veno-Echo.cpp ****     }
 4201              		.loc 19 1557 13 is_stmt 0 view .LVU1075
 4202 0026 0123     		movs	r3, #1
1556:Veno-Echo.cpp ****        *div = DIV5;
 4203              		.loc 19 1556 15 view .LVU1076
 4204 0028 9FED3A0A 		vldr.32	s0, .L282+12
 4205              	.LVL244:
1557:Veno-Echo.cpp ****     }
 4206              		.loc 19 1557 13 view .LVU1077
 4207 002c 0370     		strb	r3, [r0]
 4208 002e 7047     		bx	lr
 4209              	.LVL245:
 4210              	.L271:
1560:Veno-Echo.cpp ****     {
 4211              		.loc 19 1560 10 is_stmt 1 view .LVU1078
 4212 0030 DFED397A 		vldr.32	s15, .L282+16
 4213 0034 B4EEE70A 		vcmpe.f32	s0, s15
 4214 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4215 003c 0BD4     		bmi	.L280
1566:Veno-Echo.cpp ****     {
 4216              		.loc 19 1566 10 view .LVU1079
 4217 003e DFED377A 		vldr.32	s15, .L282+20
 4218 0042 B4EEE70A 		vcmpe.f32	s0, s15
 4219 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4220 004a 09D5     		bpl	.L273
1568:Veno-Echo.cpp ****         *div = DIV3;
 4221              		.loc 19 1568 9 view .LVU1080
 4222              	.LVL246:
1569:Veno-Echo.cpp ****     }
 4223              		.loc 19 1569 9 view .LVU1081
1569:Veno-Echo.cpp ****     }
 4224              		.loc 19 1569 14 is_stmt 0 view .LVU1082
 4225 004c 0323     		movs	r3, #3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 143


1568:Veno-Echo.cpp ****         *div = DIV3;
 4226              		.loc 19 1568 16 view .LVU1083
 4227 004e 9FED340A 		vldr.32	s0, .L282+24
 4228              	.LVL247:
1569:Veno-Echo.cpp ****     }
 4229              		.loc 19 1569 14 view .LVU1084
 4230 0052 0370     		strb	r3, [r0]
 4231 0054 7047     		bx	lr
 4232              	.LVL248:
 4233              	.L280:
1562:Veno-Echo.cpp ****         *div = DIV4;
 4234              		.loc 19 1562 9 is_stmt 1 view .LVU1085
1563:Veno-Echo.cpp ****     }
 4235              		.loc 19 1563 9 view .LVU1086
1563:Veno-Echo.cpp ****     }
 4236              		.loc 19 1563 14 is_stmt 0 view .LVU1087
 4237 0056 0223     		movs	r3, #2
1562:Veno-Echo.cpp ****         *div = DIV4;
 4238              		.loc 19 1562 16 view .LVU1088
 4239 0058 B5EE000A 		vmov.f32	s0, #2.5e-1
 4240              	.LVL249:
1563:Veno-Echo.cpp ****     }
 4241              		.loc 19 1563 14 view .LVU1089
 4242 005c 0370     		strb	r3, [r0]
 4243 005e 7047     		bx	lr
 4244              	.LVL250:
 4245              	.L273:
1572:Veno-Echo.cpp ****     {
 4246              		.loc 19 1572 10 is_stmt 1 view .LVU1090
 4247 0060 DFED307A 		vldr.32	s15, .L282+28
 4248 0064 B4EEE70A 		vcmpe.f32	s0, s15
 4249 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4250 006c 0BD4     		bmi	.L281
1578:Veno-Echo.cpp ****     {
 4251              		.loc 19 1578 10 view .LVU1091
 4252 006e DFED2E7A 		vldr.32	s15, .L282+32
 4253 0072 B4EEE70A 		vcmpe.f32	s0, s15
 4254 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4255 007a 09D5     		bpl	.L275
 4256              	.L258:
1580:Veno-Echo.cpp ****         *div = UNITY;
 4257              		.loc 19 1580 9 view .LVU1092
 4258              	.LVL251:
1581:Veno-Echo.cpp ****     }
 4259              		.loc 19 1581 9 view .LVU1093
1581:Veno-Echo.cpp ****     }
 4260              		.loc 19 1581 14 is_stmt 0 view .LVU1094
 4261 007c 0523     		movs	r3, #5
1580:Veno-Echo.cpp ****         *div = UNITY;
 4262              		.loc 19 1580 16 view .LVU1095
 4263 007e B7EE000A 		vmov.f32	s0, #1.0e+0
 4264              	.LVL252:
1581:Veno-Echo.cpp ****     }
 4265              		.loc 19 1581 14 view .LVU1096
 4266 0082 0370     		strb	r3, [r0]
 4267 0084 7047     		bx	lr
 4268              	.LVL253:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 144


 4269              	.L281:
1574:Veno-Echo.cpp ****         *div = DIV2;
 4270              		.loc 19 1574 9 is_stmt 1 view .LVU1097
1575:Veno-Echo.cpp ****     }
 4271              		.loc 19 1575 9 view .LVU1098
1575:Veno-Echo.cpp ****     }
 4272              		.loc 19 1575 14 is_stmt 0 view .LVU1099
 4273 0086 0423     		movs	r3, #4
1574:Veno-Echo.cpp ****         *div = DIV2;
 4274              		.loc 19 1574 16 view .LVU1100
 4275 0088 B6EE000A 		vmov.f32	s0, #5.0e-1
 4276              	.LVL254:
1575:Veno-Echo.cpp ****     }
 4277              		.loc 19 1575 14 view .LVU1101
 4278 008c 0370     		strb	r3, [r0]
 4279 008e 7047     		bx	lr
 4280              	.LVL255:
 4281              	.L275:
1584:Veno-Echo.cpp ****     {
 4282              		.loc 19 1584 10 is_stmt 1 view .LVU1102
 4283 0090 DFED267A 		vldr.32	s15, .L282+36
 4284 0094 B4EEE70A 		vcmpe.f32	s0, s15
 4285 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4286 009c 04D5     		bpl	.L276
1586:Veno-Echo.cpp ****         *div = MULT2;
 4287              		.loc 19 1586 9 view .LVU1103
 4288              	.LVL256:
1587:Veno-Echo.cpp ****     }
 4289              		.loc 19 1587 9 view .LVU1104
1587:Veno-Echo.cpp ****     }
 4290              		.loc 19 1587 14 is_stmt 0 view .LVU1105
 4291 009e 0623     		movs	r3, #6
1586:Veno-Echo.cpp ****         *div = MULT2;
 4292              		.loc 19 1586 16 view .LVU1106
 4293 00a0 B0EE000A 		vmov.f32	s0, #2.0e+0
 4294              	.LVL257:
1587:Veno-Echo.cpp ****     }
 4295              		.loc 19 1587 14 view .LVU1107
 4296 00a4 0370     		strb	r3, [r0]
 4297 00a6 7047     		bx	lr
 4298              	.LVL258:
 4299              	.L276:
1590:Veno-Echo.cpp ****     {
 4300              		.loc 19 1590 10 is_stmt 1 view .LVU1108
 4301 00a8 DFED217A 		vldr.32	s15, .L282+40
 4302 00ac B4EEE70A 		vcmpe.f32	s0, s15
 4303 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4304 00b4 04D5     		bpl	.L277
1592:Veno-Echo.cpp ****         *div = MULT3;
 4305              		.loc 19 1592 9 view .LVU1109
 4306              	.LVL259:
1593:Veno-Echo.cpp ****     }
 4307              		.loc 19 1593 9 view .LVU1110
1593:Veno-Echo.cpp ****     }
 4308              		.loc 19 1593 14 is_stmt 0 view .LVU1111
 4309 00b6 0723     		movs	r3, #7
1592:Veno-Echo.cpp ****         *div = MULT3;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 145


 4310              		.loc 19 1592 16 view .LVU1112
 4311 00b8 B0EE080A 		vmov.f32	s0, #3.0e+0
 4312              	.LVL260:
1593:Veno-Echo.cpp ****     }
 4313              		.loc 19 1593 14 view .LVU1113
 4314 00bc 0370     		strb	r3, [r0]
 4315 00be 7047     		bx	lr
 4316              	.LVL261:
 4317              	.L277:
1596:Veno-Echo.cpp ****     {
 4318              		.loc 19 1596 10 is_stmt 1 view .LVU1114
 4319 00c0 DFED1C7A 		vldr.32	s15, .L282+44
 4320 00c4 B4EEE70A 		vcmpe.f32	s0, s15
 4321 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4322 00cc 04D5     		bpl	.L278
1598:Veno-Echo.cpp ****         *div = MULT4;
 4323              		.loc 19 1598 9 view .LVU1115
 4324              	.LVL262:
1599:Veno-Echo.cpp ****     }
 4325              		.loc 19 1599 9 view .LVU1116
1599:Veno-Echo.cpp ****     }
 4326              		.loc 19 1599 14 is_stmt 0 view .LVU1117
 4327 00ce 0823     		movs	r3, #8
1598:Veno-Echo.cpp ****         *div = MULT4;
 4328              		.loc 19 1598 16 view .LVU1118
 4329 00d0 B1EE000A 		vmov.f32	s0, #4.0e+0
 4330              	.LVL263:
1599:Veno-Echo.cpp ****     }
 4331              		.loc 19 1599 14 view .LVU1119
 4332 00d4 0370     		strb	r3, [r0]
 4333 00d6 7047     		bx	lr
 4334              	.LVL264:
 4335              	.L278:
 4336              	.LBB1257:
 4337              	.LBI1257:
1543:Veno-Echo.cpp **** {
 4338              		.loc 19 1543 7 is_stmt 1 view .LVU1120
 4339              	.LBB1258:
1602:Veno-Echo.cpp ****     {
 4340              		.loc 19 1602 10 view .LVU1121
 4341 00d8 DFED177A 		vldr.32	s15, .L282+48
 4342 00dc B4EEE70A 		vcmpe.f32	s0, s15
 4343 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4344 00e4 04D5     		bpl	.L279
1604:Veno-Echo.cpp ****         *div = MULT5;
 4345              		.loc 19 1604 9 view .LVU1122
 4346              	.LVL265:
1605:Veno-Echo.cpp ****     }
 4347              		.loc 19 1605 9 view .LVU1123
1605:Veno-Echo.cpp ****     }
 4348              		.loc 19 1605 14 is_stmt 0 view .LVU1124
 4349 00e6 0923     		movs	r3, #9
1604:Veno-Echo.cpp ****         *div = MULT5;
 4350              		.loc 19 1604 16 view .LVU1125
 4351 00e8 B1EE040A 		vmov.f32	s0, #5.0e+0
 4352              	.LVL266:
1605:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 146


 4353              		.loc 19 1605 14 view .LVU1126
 4354 00ec 0370     		strb	r3, [r0]
 4355 00ee 7047     		bx	lr
 4356              	.LVL267:
 4357              	.L279:
1608:Veno-Echo.cpp ****     {
 4358              		.loc 19 1608 10 is_stmt 1 view .LVU1127
 4359 00f0 F7EE007A 		vmov.f32	s15, #1.0e+0
 4360 00f4 B4EEE70A 		vcmpe.f32	s0, s15
 4361 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4362 00fc BED8     		bhi	.L258
1610:Veno-Echo.cpp ****        *div = MULT6;
 4363              		.loc 19 1610 8 view .LVU1128
 4364              	.LVL268:
1611:Veno-Echo.cpp ****     }
 4365              		.loc 19 1611 8 view .LVU1129
1611:Veno-Echo.cpp ****     }
 4366              		.loc 19 1611 13 is_stmt 0 view .LVU1130
 4367 00fe 0A23     		movs	r3, #10
1610:Veno-Echo.cpp ****        *div = MULT6;
 4368              		.loc 19 1610 15 view .LVU1131
 4369 0100 B1EE080A 		vmov.f32	s0, #6.0e+0
 4370              	.LVL269:
1610:Veno-Echo.cpp ****        *div = MULT6;
 4371              		.loc 19 1610 15 view .LVU1132
 4372              	.LBE1258:
 4373              	.LBE1257:
1619:Veno-Echo.cpp **** 
 4374              		.loc 19 1619 1 is_stmt 1 view .LVU1133
 4375              	.LBB1260:
 4376              	.LBB1259:
1611:Veno-Echo.cpp ****     }
 4377              		.loc 19 1611 13 is_stmt 0 view .LVU1134
 4378 0104 0370     		strb	r3, [r0]
 4379              	.LBE1259:
 4380              	.LBE1260:
1621:Veno-Echo.cpp **** 
 4381              		.loc 19 1621 1 view .LVU1135
 4382 0106 7047     		bx	lr
 4383              	.L283:
 4384              		.align	2
 4385              	.L282:
 4386 0108 C729BA3D 		.word	1035610567
 4387 010c ABAA2A3E 		.word	1042983595
 4388 0110 C7293A3E 		.word	1043999175
 4389 0114 CDCC4C3E 		.word	1045220557
 4390 0118 569F8B3E 		.word	1049337686
 4391 011c C729BA3E 		.word	1052387783
 4392 0120 ABAAAA3E 		.word	1051372203
 4393 0124 39B4E83E 		.word	1055437881
 4394 0128 E3A50B3F 		.word	1057727971
 4395 012c 1CEB223F 		.word	1059253020
 4396 0130 55303A3F 		.word	1060778069
 4397 0134 8E75513F 		.word	1062303118
 4398 0138 C7BA683F 		.word	1063828167
 4399              		.cfi_endproc
 4400              	.LFE4310:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 147


 4402              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 4403              		.align	1
 4404              		.p2align 2,,3
 4405              		.global	_Z17Update_DelayTimeRv
 4406              		.syntax unified
 4407              		.thumb
 4408              		.thumb_func
 4409              		.fpu fpv5-d16
 4411              	_Z17Update_DelayTimeRv:
 4412              	.LFB4294:
 891:Veno-Echo.cpp ****     static bool lastShift{};
 4413              		.loc 19 891 1 is_stmt 1 view -0
 4414              		.cfi_startproc
 4415              		@ args = 0, pretend = 0, frame = 0
 4416              		@ frame_needed = 0, uses_anonymous_args = 0
 892:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 4417              		.loc 19 892 5 view .LVU1137
 893:Veno-Echo.cpp ****     static pickupState tapRatio_pickup{};
 4418              		.loc 19 893 5 view .LVU1138
 894:Veno-Echo.cpp ****     
 4419              		.loc 19 894 5 view .LVU1139
 896:Veno-Echo.cpp ****     static float tapRatio_last{};
 4420              		.loc 19 896 5 view .LVU1140
 897:Veno-Echo.cpp **** 
 4421              		.loc 19 897 5 view .LVU1141
 900:Veno-Echo.cpp **** 
 4422              		.loc 19 900 5 view .LVU1142
 891:Veno-Echo.cpp ****     static bool lastShift{};
 4423              		.loc 19 891 1 is_stmt 0 view .LVU1143
 4424 0000 10B5     		push	{r4, lr}
 4425              		.cfi_def_cfa_offset 8
 4426              		.cfi_offset 4, -8
 4427              		.cfi_offset 14, -4
 900:Veno-Echo.cpp **** 
 4428              		.loc 19 900 44 view .LVU1144
 4429 0002 0622     		movs	r2, #6
 4430 0004 0721     		movs	r1, #7
 4431 0006 8948     		ldr	r0, .L316
 891:Veno-Echo.cpp ****     static bool lastShift{};
 4432              		.loc 19 891 1 view .LVU1145
 4433 0008 2DED028B 		vpush.64	{d8}
 4434              		.cfi_def_cfa_offset 16
 4435              		.cfi_offset 80, -16
 4436              		.cfi_offset 81, -12
 900:Veno-Echo.cpp **** 
 4437              		.loc 19 900 44 view .LVU1146
 4438 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4439              	.LVL270:
 905:Veno-Echo.cpp **** 
 4440              		.loc 19 905 26 view .LVU1147
 4441 0010 8749     		ldr	r1, .L316+4
 905:Veno-Echo.cpp **** 
 4442              		.loc 19 905 31 view .LVU1148
 4443 0012 884B     		ldr	r3, .L316+8
 900:Veno-Echo.cpp **** 
 4444              		.loc 19 900 44 view .LVU1149
 4445 0014 B0EE408A 		vmov.f32	s16, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 148


 4446              	.LVL271:
 904:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4447              		.loc 19 904 5 is_stmt 1 view .LVU1150
 905:Veno-Echo.cpp **** 
 4448              		.loc 19 905 5 view .LVU1151
 905:Veno-Echo.cpp **** 
 4449              		.loc 19 905 26 is_stmt 0 view .LVU1152
 4450 0018 0A68     		ldr	r2, [r1]
 4451              	.LBB1290:
 907:Veno-Echo.cpp ****     {
 4452              		.loc 19 907 9 view .LVU1153
 4453 001a 8748     		ldr	r0, .L316+12
 4454              	.LBE1290:
 905:Veno-Echo.cpp **** 
 4455              		.loc 19 905 26 view .LVU1154
 4456 001c 0132     		adds	r2, r2, #1
 4457              	.LBB1362:
 907:Veno-Echo.cpp ****     {
 4458              		.loc 19 907 5 view .LVU1155
 4459 001e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4460              	.LBE1362:
 905:Veno-Echo.cpp **** 
 4461              		.loc 19 905 31 view .LVU1156
 4462 0020 83FB0243 		smull	r4, r3, r3, r2
 4463 0024 D417     		asrs	r4, r2, #31
 4464 0026 C4EB6313 		rsb	r3, r4, r3, asr #5
 4465 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4466 002e A2EB8313 		sub	r3, r2, r3, lsl #6
 905:Veno-Echo.cpp **** 
 4467              		.loc 19 905 14 view .LVU1157
 4468 0032 0B60     		str	r3, [r1]
 907:Veno-Echo.cpp ****     {
 4469              		.loc 19 907 5 is_stmt 1 view .LVU1158
 4470              	.LBB1363:
 4471 0034 0028     		cmp	r0, #0
 4472 0036 40F09B80 		bne	.L285
 4473              	.LBB1291:
 910:Veno-Echo.cpp ****         {
 4474              		.loc 19 910 9 view .LVU1159
 910:Veno-Echo.cpp ****         {
 4475              		.loc 19 910 19 is_stmt 0 view .LVU1160
 4476 003a 8049     		ldr	r1, .L316+16
 910:Veno-Echo.cpp ****         {
 4477              		.loc 19 910 9 view .LVU1161
 4478 003c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 4479 003e 002A     		cmp	r2, #0
 4480 0040 52D0     		beq	.L286
 912:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Last,delayTimeR_pickup,t
 4481              		.loc 19 912 13 is_stmt 1 view .LVU1162
 913:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;   //reset last value
 4482              		.loc 19 913 49 is_stmt 0 view .LVU1163
 4483 0042 7F4A     		ldr	r2, .L316+20
 4484              	.LBB1292:
 4485              	.LBB1293:
1834:Veno-Echo.cpp ****         {
 4486              		.loc 19 1834 9 view .LVU1164
 4487 0044 9FED7F7A 		vldr.32	s14, .L316+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 149


1834:Veno-Echo.cpp ****         {
 4488              		.loc 19 1834 15 view .LVU1165
 4489 0048 D2ED007A 		vldr.32	s15, [r2]
 4490              	.LBE1293:
 4491              	.LBE1292:
 912:Veno-Echo.cpp ****             delayTimeR_pickup = checkPickupState(delayTimeR_Pot,delayTimeR_Last,delayTimeR_pickup,t
 4492              		.loc 19 912 23 view .LVU1166
 4493 004c 0870     		strb	r0, [r1]
 913:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;   //reset last value
 4494              		.loc 19 913 13 is_stmt 1 view .LVU1167
 4495              	.LVL272:
 4496              	.LBB1300:
 4497              	.LBI1292:
1828:Veno-Echo.cpp **** {
 4498              		.loc 19 1828 6 view .LVU1168
 4499              	.LBB1298:
1830:Veno-Echo.cpp ****     
 4500              		.loc 19 1830 5 view .LVU1169
1832:Veno-Echo.cpp ****     {
 4501              		.loc 19 1832 5 view .LVU1170
1834:Veno-Echo.cpp ****         {
 4502              		.loc 19 1834 9 view .LVU1171
 4503              	.LBB1294:
 4504              	.LBI1294:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4505              		.loc 20 75 3 view .LVU1172
 4506              	.LBB1295:
 4507              		.loc 20 76 5 view .LVU1173
 4508              		.loc 20 76 5 is_stmt 0 view .LVU1174
 4509              	.LBE1295:
 4510              	.LBE1294:
1834:Veno-Echo.cpp ****         {
 4511              		.loc 19 1834 15 view .LVU1175
 4512 004e 70EE677A 		vsub.f32	s15, s0, s15
 4513              	.LVL273:
1834:Veno-Echo.cpp ****         {
 4514              		.loc 19 1834 15 view .LVU1176
 4515              	.LBE1298:
 4516              	.LBE1300:
 913:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;   //reset last value
 4517              		.loc 19 913 31 view .LVU1177
 4518 0052 7D4C     		ldr	r4, .L316+28
 914:Veno-Echo.cpp ****         } 
 4519              		.loc 19 914 29 view .LVU1178
 4520 0054 82ED000A 		vstr.32	s0, [r2]
 4521              	.LVL274:
 4522              	.LBB1301:
 4523              	.LBB1299:
 4524              	.LBB1297:
 4525              	.LBB1296:
 4526              		.loc 20 76 31 view .LVU1179
 4527 0058 F0EEE77A 		vabs.f32	s15, s15
 4528              	.LBE1296:
 4529              	.LBE1297:
1834:Veno-Echo.cpp ****         {
 4530              		.loc 19 1834 9 view .LVU1180
 4531 005c F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 150


 4532 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4533 0064 D4BF     		ite	le
 4534 0066 0121     		movle	r1, #1
 4535 0068 0021     		movgt	r1, #0
 4536              	.LVL275:
1865:Veno-Echo.cpp **** 
 4537              		.loc 19 1865 5 is_stmt 1 view .LVU1181
1865:Veno-Echo.cpp **** 
 4538              		.loc 19 1865 5 is_stmt 0 view .LVU1182
 4539              	.LBE1299:
 4540              	.LBE1301:
 913:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;   //reset last value
 4541              		.loc 19 913 31 view .LVU1183
 4542 006a 2170     		strb	r1, [r4]
 914:Veno-Echo.cpp ****         } 
 4543              		.loc 19 914 13 is_stmt 1 view .LVU1184
 4544              	.L287:
 921:Veno-Echo.cpp **** 
 4545              		.loc 19 921 9 view .LVU1185
 4546              	.LVL276:
 923:Veno-Echo.cpp ****         {
 4547              		.loc 19 923 9 view .LVU1186
 4548 006c 0029     		cmp	r1, #0
 4549 006e 50D1     		bne	.L288
 931:Veno-Echo.cpp ****         }
 4550              		.loc 19 931 13 view .LVU1187
 4551              	.LVL277:
 4552              	.LBB1302:
 4553              	.LBI1302:
1809:Veno-Echo.cpp **** {
 4554              		.loc 19 1809 7 view .LVU1188
 4555              	.LBB1303:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4556              		.loc 19 1811 5 view .LVU1189
1812:Veno-Echo.cpp **** 
 4557              		.loc 19 1812 5 view .LVU1190
 4558              	.LBE1303:
 4559              	.LBE1302:
 931:Veno-Echo.cpp ****         }
 4560              		.loc 19 931 36 is_stmt 0 view .LVU1191
 4561 0070 7649     		ldr	r1, .L316+32
 4562              	.LBB1307:
 4563              	.LBB1304:
1812:Veno-Echo.cpp **** 
 4564              		.loc 19 1812 39 view .LVU1192
 4565 0072 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 4566              		.loc 19 1812 49 view .LVU1193
 4567 0076 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 4568              		.loc 19 1812 12 view .LVU1194
 4569 007a D2ED008A 		vldr.32	s17, [r2]
1812:Veno-Echo.cpp **** 
 4570              		.loc 19 1812 39 view .LVU1195
 4571 007e D1ED007A 		vldr.32	s15, [r1]
1812:Veno-Echo.cpp **** 
 4572              		.loc 19 1812 12 view .LVU1196
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 151


 4573 0082 F0EE006A 		vmov.f32	s13, #2.0e+0
1812:Veno-Echo.cpp **** 
 4574              		.loc 19 1812 39 view .LVU1197
 4575 0086 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 4576              		.loc 19 1812 49 view .LVU1198
 4577 008a 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 4578              		.loc 19 1812 12 view .LVU1199
 4579 008e E7EEA68A 		vfma.f32	s17, s15, s13
 4580              	.LVL278:
1814:Veno-Echo.cpp ****     {
 4581              		.loc 19 1814 5 is_stmt 1 view .LVU1200
 4582 0092 F5EEC08A 		vcmpe.f32	s17, #0
 4583 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4584 009a 00F18B80 		bmi	.L305
1819:Veno-Echo.cpp ****     {
 4585              		.loc 19 1819 5 view .LVU1201
1821:Veno-Echo.cpp ****     }
 4586              		.loc 19 1821 16 is_stmt 0 view .LVU1202
 4587 009e F4EE478A 		vcmp.f32	s17, s14
 4588              	.LBE1304:
 4589              	.LBE1307:
 934:Veno-Echo.cpp ****         {
 4590              		.loc 19 934 13 view .LVU1203
 4591 00a2 6B4A     		ldr	r2, .L316+36
 934:Veno-Echo.cpp ****         {
 4592              		.loc 19 934 9 view .LVU1204
 4593 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4594              	.LBB1308:
 4595              	.LBB1305:
1821:Veno-Echo.cpp ****     }
 4596              		.loc 19 1821 16 view .LVU1205
 4597 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4598 00aa 77FE288A 		vselgt.f32	s17, s14, s17
 4599              	.LVL279:
1821:Veno-Echo.cpp ****     }
 4600              		.loc 19 1821 16 view .LVU1206
 4601              	.LBE1305:
 4602              	.LBE1308:
 934:Veno-Echo.cpp ****         {
 4603              		.loc 19 934 9 is_stmt 1 view .LVU1207
 4604 00ae 002A     		cmp	r2, #0
 4605 00b0 51D0     		beq	.L315
 4606              	.L294:
 944:Veno-Echo.cpp ****             {
 4607              		.loc 19 944 13 view .LVU1208
 4608 00b2 002B     		cmp	r3, #0
 4609 00b4 76D1     		bne	.L284
 947:Veno-Echo.cpp ****                 {
 4610              		.loc 19 947 17 view .LVU1209
 947:Veno-Echo.cpp ****                 {
 4611              		.loc 19 947 62 is_stmt 0 view .LVU1210
 4612 00b6 6748     		ldr	r0, .L316+40
 4613 00b8 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 4614              	.LVL280:
 947:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 152


 4615              		.loc 19 947 86 view .LVU1211
 4616 00bc 6648     		ldr	r0, .L316+44
 947:Veno-Echo.cpp ****                 {
 4617              		.loc 19 947 62 view .LVU1212
 4618 00be B0EE407A 		vmov.f32	s14, s0
 947:Veno-Echo.cpp ****                 {
 4619              		.loc 19 947 86 view .LVU1213
 4620 00c2 B0EE680A 		vmov.f32	s0, s17
 4621 00c6 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 4622              	.LVL281:
 947:Veno-Echo.cpp ****                 {
 4623              		.loc 19 947 65 view .LVU1214
 4624 00ca DFED647A 		vldr.32	s15, .L316+48
 947:Veno-Echo.cpp ****                 {
 4625              		.loc 19 947 39 view .LVU1215
 4626 00ce 6448     		ldr	r0, .L316+52
 947:Veno-Echo.cpp ****                 {
 4627              		.loc 19 947 65 view .LVU1216
 4628 00d0 27EE277A 		vmul.f32	s14, s14, s15
 947:Veno-Echo.cpp ****                 {
 4629              		.loc 19 947 39 view .LVU1217
 4630 00d4 27EE000A 		vmul.f32	s0, s14, s0
 4631 00d8 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 4632              	.LVL282:
 947:Veno-Echo.cpp ****                 {
 4633              		.loc 19 947 17 view .LVU1218
 4634 00dc 0028     		cmp	r0, #0
 4635 00de 61D0     		beq	.L284
 949:Veno-Echo.cpp ****                 }
 4636              		.loc 19 949 21 is_stmt 1 view .LVU1219
 949:Veno-Echo.cpp ****                 }
 4637              		.loc 19 949 33 is_stmt 0 view .LVU1220
 4638 00e0 604B     		ldr	r3, .L316+56
 4639 00e2 0122     		movs	r2, #1
 4640 00e4 1A70     		strb	r2, [r3]
 4641 00e6 5DE0     		b	.L284
 4642              	.LVL283:
 4643              	.L286:
 918:Veno-Echo.cpp ****         }
 4644              		.loc 19 918 13 is_stmt 1 view .LVU1221
 918:Veno-Echo.cpp ****         }
 4645              		.loc 19 918 49 is_stmt 0 view .LVU1222
 4646 00e8 5748     		ldr	r0, .L316+28
 4647 00ea 554A     		ldr	r2, .L316+20
 4648              	.LBB1309:
 4649              	.LBB1310:
 4650              	.LBB1311:
 4651              	.LBB1312:
1846:Veno-Echo.cpp ****     {
 4652              		.loc 19 1846 5 view .LVU1223
 4653 00ec 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 4654              	.LBE1312:
 4655              	.LBE1311:
 4656              	.LBE1310:
 4657              	.LBE1309:
 918:Veno-Echo.cpp ****         }
 4658              		.loc 19 918 49 view .LVU1224
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 153


 4659 00ee D2ED007A 		vldr.32	s15, [r2]
 4660              	.LVL284:
 4661              	.LBB1320:
 4662              	.LBI1309:
1828:Veno-Echo.cpp **** {
 4663              		.loc 19 1828 6 is_stmt 1 view .LVU1225
 4664              	.LBB1319:
1830:Veno-Echo.cpp ****     
 4665              		.loc 19 1830 5 view .LVU1226
1832:Veno-Echo.cpp ****     {
 4666              		.loc 19 1832 5 view .LVU1227
 4667              	.LBB1318:
 4668              	.LBI1311:
1828:Veno-Echo.cpp **** {
 4669              		.loc 19 1828 6 view .LVU1228
 4670              	.LBB1317:
1846:Veno-Echo.cpp ****     {
 4671              		.loc 19 1846 5 view .LVU1229
 4672 00f2 71B9     		cbnz	r1, .L288
1848:Veno-Echo.cpp ****         {
 4673              		.loc 19 1848 9 view .LVU1230
 4674              	.LVL285:
 4675              	.LBB1313:
 4676              	.LBI1313:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4677              		.loc 20 75 3 view .LVU1231
 4678              	.LBB1314:
 4679              		.loc 20 76 5 view .LVU1232
 4680              		.loc 20 76 5 is_stmt 0 view .LVU1233
 4681              	.LBE1314:
 4682              	.LBE1313:
1848:Veno-Echo.cpp ****         {
 4683              		.loc 19 1848 15 view .LVU1234
 4684 00f4 70EE677A 		vsub.f32	s15, s0, s15
 4685              	.LVL286:
1848:Veno-Echo.cpp ****         {
 4686              		.loc 19 1848 9 view .LVU1235
 4687 00f8 9FED527A 		vldr.32	s14, .L316+24
 4688              	.LBB1316:
 4689              	.LBB1315:
 4690              		.loc 20 76 31 view .LVU1236
 4691 00fc F0EEE77A 		vabs.f32	s15, s15
 4692              	.LBE1315:
 4693              	.LBE1316:
1848:Veno-Echo.cpp ****         {
 4694              		.loc 19 1848 9 view .LVU1237
 4695 0100 F4EEC77A 		vcmpe.f32	s15, s14
 4696 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4697 0108 CCBF     		ite	gt
 4698 010a 0121     		movgt	r1, #1
 4699 010c 0021     		movle	r1, #0
 4700              	.LVL287:
1865:Veno-Echo.cpp **** 
 4701              		.loc 19 1865 5 is_stmt 1 view .LVU1238
1865:Veno-Echo.cpp **** 
 4702              		.loc 19 1865 5 is_stmt 0 view .LVU1239
 4703              	.LBE1317:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 154


 4704              	.LBE1318:
1865:Veno-Echo.cpp **** 
 4705              		.loc 19 1865 5 is_stmt 1 view .LVU1240
1865:Veno-Echo.cpp **** 
 4706              		.loc 19 1865 5 is_stmt 0 view .LVU1241
 4707              	.LBE1319:
 4708              	.LBE1320:
 918:Veno-Echo.cpp ****         }
 4709              		.loc 19 918 31 view .LVU1242
 4710 010e 0170     		strb	r1, [r0]
 4711 0110 ACE7     		b	.L287
 4712              	.L288:
 925:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 4713              		.loc 19 925 13 is_stmt 1 view .LVU1243
 4714              	.LVL288:
 4715              	.LBB1321:
 4716              	.LBI1321:
1809:Veno-Echo.cpp **** {
 4717              		.loc 19 1809 7 view .LVU1244
 4718              	.LBB1322:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4719              		.loc 19 1811 5 view .LVU1245
1812:Veno-Echo.cpp **** 
 4720              		.loc 19 1812 5 view .LVU1246
 4721              	.LBE1322:
 4722              	.LBE1321:
 925:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 4723              		.loc 19 925 36 is_stmt 0 view .LVU1247
 4724 0112 4E49     		ldr	r1, .L316+32
 4725              	.LBB1325:
 4726              	.LBB1323:
1812:Veno-Echo.cpp **** 
 4727              		.loc 19 1812 39 view .LVU1248
 4728 0114 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 4729              		.loc 19 1812 49 view .LVU1249
 4730 0118 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 4731              		.loc 19 1812 39 view .LVU1250
 4732 011c D1ED007A 		vldr.32	s15, [r1]
1812:Veno-Echo.cpp **** 
 4733              		.loc 19 1812 12 view .LVU1251
 4734 0120 F0EE006A 		vmov.f32	s13, #2.0e+0
 4735 0124 F0EE488A 		vmov.f32	s17, s16
1812:Veno-Echo.cpp **** 
 4736              		.loc 19 1812 39 view .LVU1252
 4737 0128 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 4738              		.loc 19 1812 49 view .LVU1253
 4739 012c 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 4740              		.loc 19 1812 12 view .LVU1254
 4741 0130 E7EEA68A 		vfma.f32	s17, s15, s13
 4742              	.LVL289:
1814:Veno-Echo.cpp ****     {
 4743              		.loc 19 1814 5 is_stmt 1 view .LVU1255
 4744 0134 F5EEC08A 		vcmpe.f32	s17, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 155


 4745 0138 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4746 013c 3DD4     		bmi	.L304
1819:Veno-Echo.cpp ****     {
 4747              		.loc 19 1819 5 view .LVU1256
1821:Veno-Echo.cpp ****     }
 4748              		.loc 19 1821 16 is_stmt 0 view .LVU1257
 4749 013e F4EE478A 		vcmp.f32	s17, s14
 4750 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4751 0146 77FE288A 		vselgt.f32	s17, s14, s17
 4752              	.LVL290:
 4753              	.L290:
1824:Veno-Echo.cpp **** }
 4754              		.loc 19 1824 5 is_stmt 1 view .LVU1258
1824:Veno-Echo.cpp **** }
 4755              		.loc 19 1824 5 is_stmt 0 view .LVU1259
 4756              	.LBE1323:
 4757              	.LBE1325:
 926:Veno-Echo.cpp ****         }
 4758              		.loc 19 926 13 is_stmt 1 view .LVU1260
 926:Veno-Echo.cpp ****         }
 4759              		.loc 19 926 29 is_stmt 0 view .LVU1261
 4760 014a 82ED008A 		vstr.32	s16, [r2]
 4761              	.LVL291:
 4762              	.L292:
 934:Veno-Echo.cpp ****         {
 4763              		.loc 19 934 9 is_stmt 1 view .LVU1262
 934:Veno-Echo.cpp ****         {
 4764              		.loc 19 934 13 is_stmt 0 view .LVU1263
 4765 014e 404A     		ldr	r2, .L316+36
 934:Veno-Echo.cpp ****         {
 4766              		.loc 19 934 9 view .LVU1264
 4767 0150 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4768 0152 002A     		cmp	r2, #0
 4769 0154 ADD1     		bne	.L294
 4770              	.L315:
 936:Veno-Echo.cpp ****             {
 4771              		.loc 19 936 13 is_stmt 1 view .LVU1265
 4772 0156 2BBB     		cbnz	r3, .L284
 938:Veno-Echo.cpp ****             }
 4773              		.loc 19 938 17 view .LVU1266
 938:Veno-Echo.cpp ****             }
 4774              		.loc 19 938 40 is_stmt 0 view .LVU1267
 4775 0158 B7EE000A 		vmov.f32	s0, #1.0e+0
 4776              	.LVL292:
 938:Veno-Echo.cpp ****             }
 4777              		.loc 19 938 40 view .LVU1268
 4778 015c 0121     		movs	r1, #1
 4779 015e 4048     		ldr	r0, .L316+52
 4780 0160 30EE680A 		vsub.f32	s0, s0, s17
 4781              	.LBE1291:
 4782              	.LBE1363:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4783              		.loc 19 979 1 view .LVU1269
 4784 0164 BDEC028B 		vldm	sp!, {d8}
 4785              		.cfi_remember_state
 4786              		.cfi_restore 80
 4787              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 156


 4788              		.cfi_def_cfa_offset 8
 4789              	.LVL293:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4790              		.loc 19 979 1 view .LVU1270
 4791 0168 BDE81040 		pop	{r4, lr}
 4792              		.cfi_restore 14
 4793              		.cfi_restore 4
 4794              		.cfi_def_cfa_offset 0
 4795              	.LBB1364:
 4796              	.LBB1328:
 938:Veno-Echo.cpp ****             }
 4797              		.loc 19 938 40 view .LVU1271
 4798 016c FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 4799              	.LVL294:
 4800              	.L285:
 4801              		.cfi_restore_state
 938:Veno-Echo.cpp ****             }
 4802              		.loc 19 938 40 view .LVU1272
 4803              	.LBE1328:
 4804              	.LBB1329:
 957:Veno-Echo.cpp ****         {
 4805              		.loc 19 957 9 is_stmt 1 view .LVU1273
 957:Veno-Echo.cpp ****         {
 4806              		.loc 19 957 19 is_stmt 0 view .LVU1274
 4807 0170 324B     		ldr	r3, .L316+16
 957:Veno-Echo.cpp ****         {
 4808              		.loc 19 957 9 view .LVU1275
 4809 0172 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4810 0174 22BB     		cbnz	r2, .L298
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState_alt(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,tru
 4811              		.loc 19 959 13 is_stmt 1 view .LVU1276
 960:Veno-Echo.cpp ****         }
 4812              		.loc 19 960 51 is_stmt 0 view .LVU1277
 4813 0176 3C4C     		ldr	r4, .L316+60
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState_alt(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,tru
 4814              		.loc 19 959 23 view .LVU1278
 4815 0178 0121     		movs	r1, #1
 4816              	.LBB1330:
 4817              	.LBB1331:
1876:Veno-Echo.cpp ****         {
 4818              		.loc 19 1876 31 view .LVU1279
 4819 017a 9FED327A 		vldr.32	s14, .L316+24
 4820              	.LBE1331:
 4821              	.LBE1330:
 960:Veno-Echo.cpp ****         }
 4822              		.loc 19 960 51 view .LVU1280
 4823 017e D4ED007A 		vldr.32	s15, [r4]
 959:Veno-Echo.cpp ****             tapRatio_pickup = checkPickupState_alt(delayTimeR_Pot,tapRatio_last,tapRatio_pickup,tru
 4824              		.loc 19 959 23 view .LVU1281
 4825 0182 1970     		strb	r1, [r3]
 960:Veno-Echo.cpp ****         }
 4826              		.loc 19 960 13 is_stmt 1 view .LVU1282
 4827              	.LVL295:
 4828              	.LBB1336:
 4829              	.LBI1330:
1870:Veno-Echo.cpp **** {
 4830              		.loc 19 1870 13 view .LVU1283
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 157


 4831              	.LBB1332:
1872:Veno-Echo.cpp **** 
 4832              		.loc 19 1872 5 view .LVU1284
1874:Veno-Echo.cpp ****     {
 4833              		.loc 19 1874 5 view .LVU1285
1876:Veno-Echo.cpp ****         {
 4834              		.loc 19 1876 9 view .LVU1286
1876:Veno-Echo.cpp ****         {
 4835              		.loc 19 1876 31 is_stmt 0 view .LVU1287
 4836 0184 77EEC76A 		vsub.f32	s13, s15, s14
1876:Veno-Echo.cpp ****         {
 4837              		.loc 19 1876 9 view .LVU1288
 4838 0188 B4EEE60A 		vcmpe.f32	s0, s13
 4839 018c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4840 0190 0BD4     		bmi	.L299
1881:Veno-Echo.cpp ****         {
 4841              		.loc 19 1881 14 is_stmt 1 view .LVU1289
1881:Veno-Echo.cpp ****         {
 4842              		.loc 19 1881 36 is_stmt 0 view .LVU1290
 4843 0192 77EE877A 		vadd.f32	s15, s15, s14
 4844              	.LVL296:
1881:Veno-Echo.cpp ****         {
 4845              		.loc 19 1881 36 view .LVU1291
 4846              	.LBE1332:
 4847              	.LBE1336:
 960:Veno-Echo.cpp ****         }
 4848              		.loc 19 960 29 view .LVU1292
 4849 0196 354B     		ldr	r3, .L316+64
 4850              	.LBB1337:
 4851              	.LBB1333:
1881:Veno-Echo.cpp ****         {
 4852              		.loc 19 1881 14 view .LVU1293
 4853 0198 B4EEE70A 		vcmpe.f32	s0, s15
 4854 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4855 01a0 3DDD     		ble	.L313
 4856              	.LVL297:
1915:Veno-Echo.cpp **** }
 4857              		.loc 19 1915 5 is_stmt 1 view .LVU1294
1915:Veno-Echo.cpp **** }
 4858              		.loc 19 1915 5 is_stmt 0 view .LVU1295
 4859              	.LBE1333:
 4860              	.LBE1337:
 960:Veno-Echo.cpp ****         }
 4861              		.loc 19 960 29 view .LVU1296
 4862 01a2 1970     		strb	r1, [r3]
 968:Veno-Echo.cpp ****         {
 4863              		.loc 19 968 9 is_stmt 1 view .LVU1297
 4864              	.LVL298:
 4865              	.L284:
 968:Veno-Echo.cpp ****         {
 4866              		.loc 19 968 9 is_stmt 0 view .LVU1298
 4867              	.LBE1329:
 4868              	.LBE1364:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4869              		.loc 19 979 1 view .LVU1299
 4870 01a4 BDEC028B 		vldm	sp!, {d8}
 4871              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 158


 4872              		.cfi_restore 80
 4873              		.cfi_restore 81
 4874              		.cfi_def_cfa_offset 8
 4875              	.LVL299:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4876              		.loc 19 979 1 view .LVU1300
 4877 01a8 10BD     		pop	{r4, pc}
 4878              	.LVL300:
 4879              	.L299:
 4880              		.cfi_restore_state
 4881              	.LBB1365:
 4882              	.LBB1357:
 4883              	.LBB1338:
 4884              	.LBB1334:
1915:Veno-Echo.cpp **** }
 4885              		.loc 19 1915 5 is_stmt 1 view .LVU1301
1915:Veno-Echo.cpp **** }
 4886              		.loc 19 1915 5 is_stmt 0 view .LVU1302
 4887              	.LBE1334:
 4888              	.LBE1338:
 960:Veno-Echo.cpp ****         }
 4889              		.loc 19 960 29 view .LVU1303
 4890 01aa 304B     		ldr	r3, .L316+64
 4891 01ac 1A70     		strb	r2, [r3]
 968:Veno-Echo.cpp ****         {
 4892              		.loc 19 968 9 is_stmt 1 view .LVU1304
 4893              	.LBE1357:
 4894              	.LBE1365:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4895              		.loc 19 979 1 is_stmt 0 view .LVU1305
 4896 01ae BDEC028B 		vldm	sp!, {d8}
 4897              		.cfi_remember_state
 4898              		.cfi_restore 80
 4899              		.cfi_restore 81
 4900              		.cfi_def_cfa_offset 8
 4901 01b2 10BD     		pop	{r4, pc}
 4902              	.LVL301:
 4903              	.L305:
 4904              		.cfi_restore_state
 4905              	.LBB1366:
 4906              	.LBB1358:
 4907              	.LBB1326:
 4908              	.LBB1306:
1816:Veno-Echo.cpp ****     }
 4909              		.loc 19 1816 16 view .LVU1306
 4910 01b4 DFED2E8A 		vldr.32	s17, .L316+68
 4911              	.LVL302:
1816:Veno-Echo.cpp ****     }
 4912              		.loc 19 1816 16 view .LVU1307
 4913 01b8 C9E7     		b	.L292
 4914              	.LVL303:
 4915              	.L304:
1816:Veno-Echo.cpp ****     }
 4916              		.loc 19 1816 16 view .LVU1308
 4917              	.LBE1306:
 4918              	.LBE1326:
 4919              	.LBB1327:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 159


 4920              	.LBB1324:
 4921 01ba DFED2D8A 		vldr.32	s17, .L316+68
 4922              	.LVL304:
1816:Veno-Echo.cpp ****     }
 4923              		.loc 19 1816 16 view .LVU1309
 4924 01be C4E7     		b	.L290
 4925              	.LVL305:
 4926              	.L298:
1816:Veno-Echo.cpp ****     }
 4927              		.loc 19 1816 16 view .LVU1310
 4928              	.LBE1324:
 4929              	.LBE1327:
 4930              	.LBE1358:
 4931              	.LBB1359:
 965:Veno-Echo.cpp ****         }
 4932              		.loc 19 965 13 is_stmt 1 view .LVU1311
 4933              	.LBB1339:
 4934              	.LBI1339:
1870:Veno-Echo.cpp **** {
 4935              		.loc 19 1870 13 view .LVU1312
 4936              	.LBB1340:
1872:Veno-Echo.cpp **** 
 4937              		.loc 19 1872 5 view .LVU1313
1874:Veno-Echo.cpp ****     {
 4938              		.loc 19 1874 5 view .LVU1314
 4939              	.LBE1340:
 4940              	.LBE1339:
 965:Veno-Echo.cpp ****         }
 4941              		.loc 19 965 51 is_stmt 0 view .LVU1315
 4942 01c0 2A4B     		ldr	r3, .L316+64
 4943 01c2 294C     		ldr	r4, .L316+60
 4944              	.LBB1342:
 4945              	.LBB1341:
 4946 01c4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4947 01c6 D4ED000A 		vldr.32	s1, [r4]
 4948 01ca FFF7FEFF 		bl	_Z20checkPickupState_altff11pickupStateb.part.0
 4949              	.LVL306:
1915:Veno-Echo.cpp **** }
 4950              		.loc 19 1915 5 is_stmt 1 view .LVU1316
1915:Veno-Echo.cpp **** }
 4951              		.loc 19 1915 5 is_stmt 0 view .LVU1317
 4952              	.LBE1341:
 4953              	.LBE1342:
 4954              	.LBB1343:
 968:Veno-Echo.cpp ****         {
 4955              		.loc 19 968 9 view .LVU1318
 4956 01ce 0228     		cmp	r0, #2
 4957              	.LBE1343:
 965:Veno-Echo.cpp ****         }
 4958              		.loc 19 965 29 view .LVU1319
 4959 01d0 1870     		strb	r0, [r3]
 968:Veno-Echo.cpp ****         {
 4960              		.loc 19 968 9 is_stmt 1 view .LVU1320
 4961              	.LBB1353:
 4962 01d2 E7D1     		bne	.L284
 4963              	.L302:
 4964              	.LBB1344:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 160


 970:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 4965              		.loc 19 970 13 view .LVU1321
 4966              	.LVL307:
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4967              		.loc 19 971 13 view .LVU1322
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4968              		.loc 19 971 61 is_stmt 0 view .LVU1323
 4969 01d4 F0EE080A 		vmov.f32	s1, #3.0e+0
 4970 01d8 0020     		movs	r0, #0
 4971 01da B0EE480A 		vmov.f32	s0, s16
 4972              	.LVL308:
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4973              		.loc 19 971 61 view .LVU1324
 4974 01de 9FED241A 		vldr.32	s2, .L316+68
 4975 01e2 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4976              	.LVL309:
 4977              	.LBB1345:
 4978              	.LBI1345:
 4979              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 161


  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 162


  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 163


 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 164


 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 165


 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 166


 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 167


 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 168


 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 169


 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 170


 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 171


 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 172


 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 173


 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 174


 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 175


 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 176


 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 177


 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 178


1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 179


1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 180


1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 181


1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 182


1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 183


1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 184


1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 185


1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 186


1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 187


1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 188


1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 189


1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 190


1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 191


1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 4980              		.loc 22 1756 3 is_stmt 1 view .LVU1325
 4981              	.LBB1346:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 4982              		.loc 22 1757 5 view .LVU1326
 4983              		.loc 22 1757 28 is_stmt 0 view .LVU1327
 4984 01e6 B8FE400A 		vrinta.f32	s0, s0
 4985              	.LVL310:
 4986              		.loc 22 1757 28 view .LVU1328
 4987              	.LBE1346:
 4988              	.LBE1345:
 972:Veno-Echo.cpp ****             //save setting:
 4989              		.loc 19 972 13 is_stmt 1 view .LVU1329
 4990              	.LBB1347:
 4991              	.LBI1347:
1623:Veno-Echo.cpp **** {
 4992              		.loc 19 1623 7 view .LVU1330
 4993              	.LBB1348:
1625:Veno-Echo.cpp ****     switch(ratio)
 4994              		.loc 19 1625 5 view .LVU1331
1626:Veno-Echo.cpp ****     {
 4995              		.loc 19 1626 5 view .LVU1332
 4996              	.LBE1348:
 4997              	.LBE1347:
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4998              		.loc 19 971 130 is_stmt 0 view .LVU1333
 4999 01ea FCEEC07A 		vcvt.u32.f32	s15, s0
 5000 01ee 17EE903A 		vmov	r3, s15	@ int
 5001 01f2 013B     		subs	r3, r3, #1
 5002 01f4 DBB2     		uxtb	r3, r3
 5003 01f6 022B     		cmp	r3, #2
 5004 01f8 14D8     		bhi	.L306
 5005 01fa 1E4A     		ldr	r2, .L316+72
 5006 01fc 02EB8303 		add	r3, r2, r3, lsl #2
 5007 0200 D3ED008A 		vldr.32	s17, [r3]
 5008              	.L303:
 5009              	.LVL311:
 5010              	.LBB1350:
 5011              	.LBB1349:
1649:Veno-Echo.cpp **** }
 5012              		.loc 19 1649 1 is_stmt 1 view .LVU1334
1649:Veno-Echo.cpp **** }
 5013              		.loc 19 1649 1 is_stmt 0 view .LVU1335
 5014              	.LBE1349:
 5015              	.LBE1350:
 972:Veno-Echo.cpp ****             //save setting:
 5016              		.loc 19 972 34 view .LVU1336
 5017 0204 B0EE680A 		vmov.f32	s0, s17
 5018              	.LVL312:
 972:Veno-Echo.cpp ****             //save setting:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 192


 5019              		.loc 19 972 34 view .LVU1337
 5020 0208 1248     		ldr	r0, .L316+40
 5021 020a FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5022              	.LVL313:
 974:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 5023              		.loc 19 974 13 is_stmt 1 view .LVU1338
 974:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 5024              		.loc 19 974 13 is_stmt 0 view .LVU1339
 5025              	.LBE1344:
 5026              	.LBE1353:
 5027              	.LBE1359:
 5028              	.LBE1366:
1625:Veno-Echo.cpp ****     switch(ratio)
 5029              		.loc 19 1625 5 is_stmt 1 view .LVU1340
1626:Veno-Echo.cpp ****     {
 5030              		.loc 19 1626 5 view .LVU1341
1649:Veno-Echo.cpp **** }
 5031              		.loc 19 1649 1 view .LVU1342
 5032              	.LBB1367:
 5033              	.LBB1360:
 5034              	.LBB1354:
 5035              	.LBB1351:
 974:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 5036              		.loc 19 974 34 is_stmt 0 view .LVU1343
 5037 020e 1A4B     		ldr	r3, .L316+76
 975:Veno-Echo.cpp ****         }
 5038              		.loc 19 975 27 view .LVU1344
 5039 0210 84ED008A 		vstr.32	s16, [r4]
 974:Veno-Echo.cpp ****             tapRatio_last = delayTimeR_Pot; //update last value
 5040              		.loc 19 974 34 view .LVU1345
 5041 0214 C3ED018A 		vstr.32	s17, [r3, #4]
 975:Veno-Echo.cpp ****         }
 5042              		.loc 19 975 13 is_stmt 1 view .LVU1346
 5043              	.LBE1351:
 5044              	.LBE1354:
 5045              	.LBE1360:
 5046              	.LBE1367:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 5047              		.loc 19 979 1 is_stmt 0 view .LVU1347
 5048 0218 BDEC028B 		vldm	sp!, {d8}
 5049              		.cfi_remember_state
 5050              		.cfi_restore 80
 5051              		.cfi_restore 81
 5052              		.cfi_def_cfa_offset 8
 5053              	.LVL314:
 979:Veno-Echo.cpp **** void Update_feedbackL_CV()
 5054              		.loc 19 979 1 view .LVU1348
 5055 021c 10BD     		pop	{r4, pc}
 5056              	.LVL315:
 5057              	.L313:
 5058              		.cfi_restore_state
 5059              	.LBB1368:
 5060              	.LBB1361:
 5061              	.LBB1355:
 5062              	.LBB1335:
1915:Veno-Echo.cpp **** }
 5063              		.loc 19 1915 5 is_stmt 1 view .LVU1349
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 193


1915:Veno-Echo.cpp **** }
 5064              		.loc 19 1915 5 is_stmt 0 view .LVU1350
 5065              	.LBE1335:
 5066              	.LBE1355:
 960:Veno-Echo.cpp ****         }
 5067              		.loc 19 960 29 view .LVU1351
 5068 021e 0222     		movs	r2, #2
 5069 0220 1A70     		strb	r2, [r3]
 968:Veno-Echo.cpp ****         {
 5070              		.loc 19 968 9 is_stmt 1 view .LVU1352
 5071 0222 D7E7     		b	.L302
 5072              	.LVL316:
 5073              	.L306:
 5074              	.LBB1356:
 5075              	.LBB1352:
 971:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 5076              		.loc 19 971 130 is_stmt 0 view .LVU1353
 5077 0224 F7EE008A 		vmov.f32	s17, #1.0e+0
 5078 0228 ECE7     		b	.L303
 5079              	.L317:
 5080 022a 00BF     		.align	2
 5081              	.L316:
 5082 022c 18000000 		.word	.LANCHOR4+24
 5083 0230 00000000 		.word	.LANCHOR63
 5084 0234 ABAAAA2A 		.word	715827883
 5085 0238 00000000 		.word	.LANCHOR8
 5086 023c 00000000 		.word	.LANCHOR64
 5087 0240 00000000 		.word	.LANCHOR65
 5088 0244 0AD7A33B 		.word	1000593162
 5089 0248 00000000 		.word	.LANCHOR66
 5090 024c 00000000 		.word	.LANCHOR6
 5091 0250 00000000 		.word	.LANCHOR58
 5092 0254 00000000 		.word	.LANCHOR57
 5093 0258 00000000 		.word	.LANCHOR60
 5094 025c 00004042 		.word	1111490560
 5095 0260 00000000 		.word	.LANCHOR1
 5096 0264 00000000 		.word	.LANCHOR62
 5097 0268 00000000 		.word	.LANCHOR67
 5098 026c 00000000 		.word	.LANCHOR68
 5099 0270 00000000 		.word	0
 5100 0274 00000000 		.word	.LANCHOR69
 5101 0278 00000000 		.word	.LANCHOR19
 5102              	.LBE1352:
 5103              	.LBE1356:
 5104              	.LBE1361:
 5105              	.LBE1368:
 5106              		.cfi_endproc
 5107              	.LFE4294:
 5109              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 5110              		.align	1
 5111              		.p2align 2,,3
 5112              		.global	_Z17Update_DelayTimeLv
 5113              		.syntax unified
 5114              		.thumb
 5115              		.thumb_func
 5116              		.fpu fpv5-d16
 5118              	_Z17Update_DelayTimeLv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 194


 5119              	.LFB4292:
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5120              		.loc 19 794 1 is_stmt 1 view -0
 5121              		.cfi_startproc
 5122              		@ args = 0, pretend = 0, frame = 0
 5123              		@ frame_needed = 0, uses_anonymous_args = 0
 795:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 5124              		.loc 19 795 5 view .LVU1355
 796:Veno-Echo.cpp ****     static pickupState Rev_DelayTime_pickup{};
 5125              		.loc 19 796 5 view .LVU1356
 797:Veno-Echo.cpp ****     
 5126              		.loc 19 797 5 view .LVU1357
 799:Veno-Echo.cpp ****     static float Rev_DelayTime_last{};
 5127              		.loc 19 799 5 view .LVU1358
 800:Veno-Echo.cpp **** 
 5128              		.loc 19 800 5 view .LVU1359
 803:Veno-Echo.cpp **** 
 5129              		.loc 19 803 5 view .LVU1360
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5130              		.loc 19 794 1 is_stmt 0 view .LVU1361
 5131 0000 38B5     		push	{r3, r4, r5, lr}
 5132              		.cfi_def_cfa_offset 16
 5133              		.cfi_offset 3, -16
 5134              		.cfi_offset 4, -12
 5135              		.cfi_offset 5, -8
 5136              		.cfi_offset 14, -4
 803:Veno-Echo.cpp **** 
 5137              		.loc 19 803 44 view .LVU1362
 5138 0002 0222     		movs	r2, #2
 5139 0004 0721     		movs	r1, #7
 5140 0006 9B48     		ldr	r0, .L354
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5141              		.loc 19 794 1 view .LVU1363
 5142 0008 2DED028B 		vpush.64	{d8}
 5143              		.cfi_def_cfa_offset 24
 5144              		.cfi_offset 80, -24
 5145              		.cfi_offset 81, -20
 803:Veno-Echo.cpp **** 
 5146              		.loc 19 803 44 view .LVU1364
 5147 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5148              	.LVL317:
 808:Veno-Echo.cpp **** 
 5149              		.loc 19 808 26 view .LVU1365
 5150 0010 9949     		ldr	r1, .L354+4
 808:Veno-Echo.cpp **** 
 5151              		.loc 19 808 31 view .LVU1366
 5152 0012 9A4B     		ldr	r3, .L354+8
 803:Veno-Echo.cpp **** 
 5153              		.loc 19 803 44 view .LVU1367
 5154 0014 B0EE408A 		vmov.f32	s16, s0
 5155              	.LVL318:
 807:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5156              		.loc 19 807 5 is_stmt 1 view .LVU1368
 808:Veno-Echo.cpp **** 
 5157              		.loc 19 808 5 view .LVU1369
 808:Veno-Echo.cpp **** 
 5158              		.loc 19 808 26 is_stmt 0 view .LVU1370
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 195


 5159 0018 0A68     		ldr	r2, [r1]
 5160              	.LBB1406:
 810:Veno-Echo.cpp ****     {
 5161              		.loc 19 810 9 view .LVU1371
 5162 001a 9948     		ldr	r0, .L354+12
 5163              	.LBE1406:
 808:Veno-Echo.cpp **** 
 5164              		.loc 19 808 26 view .LVU1372
 5165 001c 0132     		adds	r2, r2, #1
 5166              	.LBB1499:
 810:Veno-Echo.cpp ****     {
 5167              		.loc 19 810 5 view .LVU1373
 5168 001e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5169              	.LBE1499:
 808:Veno-Echo.cpp **** 
 5170              		.loc 19 808 31 view .LVU1374
 5171 0020 83FB0243 		smull	r4, r3, r3, r2
 5172 0024 D417     		asrs	r4, r2, #31
 5173 0026 C4EB6313 		rsb	r3, r4, r3, asr #5
 5174 002a 03EB4303 		add	r3, r3, r3, lsl #1
 5175 002e A2EB8313 		sub	r3, r2, r3, lsl #6
 808:Veno-Echo.cpp **** 
 5176              		.loc 19 808 14 view .LVU1375
 5177 0032 0B60     		str	r3, [r1]
 810:Veno-Echo.cpp ****     {
 5178              		.loc 19 810 5 is_stmt 1 view .LVU1376
 5179              	.LBB1500:
 5180 0034 0028     		cmp	r0, #0
 5181 0036 40F09B80 		bne	.L319
 5182              	.LBB1407:
 813:Veno-Echo.cpp ****         {
 5183              		.loc 19 813 9 view .LVU1377
 813:Veno-Echo.cpp ****         {
 5184              		.loc 19 813 19 is_stmt 0 view .LVU1378
 5185 003a 9249     		ldr	r1, .L354+16
 813:Veno-Echo.cpp ****         {
 5186              		.loc 19 813 9 view .LVU1379
 5187 003c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 5188 003e 002A     		cmp	r2, #0
 5189 0040 52D0     		beq	.L320
 815:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Last,delayTimeL_pickup,t
 5190              		.loc 19 815 13 is_stmt 1 view .LVU1380
 816:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot;   //reset last value
 5191              		.loc 19 816 49 is_stmt 0 view .LVU1381
 5192 0042 914A     		ldr	r2, .L354+20
 5193              	.LBB1408:
 5194              	.LBB1409:
1834:Veno-Echo.cpp ****         {
 5195              		.loc 19 1834 9 view .LVU1382
 5196 0044 9FED917A 		vldr.32	s14, .L354+24
1834:Veno-Echo.cpp ****         {
 5197              		.loc 19 1834 15 view .LVU1383
 5198 0048 D2ED007A 		vldr.32	s15, [r2]
 5199              	.LBE1409:
 5200              	.LBE1408:
 815:Veno-Echo.cpp ****             delayTimeL_pickup = checkPickupState(delayTimeL_Pot,delayTimeL_Last,delayTimeL_pickup,t
 5201              		.loc 19 815 23 view .LVU1384
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 196


 5202 004c 0870     		strb	r0, [r1]
 816:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot;   //reset last value
 5203              		.loc 19 816 13 is_stmt 1 view .LVU1385
 5204              	.LVL319:
 5205              	.LBB1416:
 5206              	.LBI1408:
1828:Veno-Echo.cpp **** {
 5207              		.loc 19 1828 6 view .LVU1386
 5208              	.LBB1414:
1830:Veno-Echo.cpp ****     
 5209              		.loc 19 1830 5 view .LVU1387
1832:Veno-Echo.cpp ****     {
 5210              		.loc 19 1832 5 view .LVU1388
1834:Veno-Echo.cpp ****         {
 5211              		.loc 19 1834 9 view .LVU1389
 5212              	.LBB1410:
 5213              	.LBI1410:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5214              		.loc 20 75 3 view .LVU1390
 5215              	.LBB1411:
 5216              		.loc 20 76 5 view .LVU1391
 5217              		.loc 20 76 5 is_stmt 0 view .LVU1392
 5218              	.LBE1411:
 5219              	.LBE1410:
1834:Veno-Echo.cpp ****         {
 5220              		.loc 19 1834 15 view .LVU1393
 5221 004e 70EE677A 		vsub.f32	s15, s0, s15
 5222              	.LVL320:
1834:Veno-Echo.cpp ****         {
 5223              		.loc 19 1834 15 view .LVU1394
 5224              	.LBE1414:
 5225              	.LBE1416:
 816:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot;   //reset last value
 5226              		.loc 19 816 31 view .LVU1395
 5227 0052 8F4C     		ldr	r4, .L354+28
 817:Veno-Echo.cpp ****         } 
 5228              		.loc 19 817 29 view .LVU1396
 5229 0054 82ED000A 		vstr.32	s0, [r2]
 5230              	.LVL321:
 5231              	.LBB1417:
 5232              	.LBB1415:
 5233              	.LBB1413:
 5234              	.LBB1412:
 5235              		.loc 20 76 31 view .LVU1397
 5236 0058 F0EEE77A 		vabs.f32	s15, s15
 5237              	.LBE1412:
 5238              	.LBE1413:
1834:Veno-Echo.cpp ****         {
 5239              		.loc 19 1834 9 view .LVU1398
 5240 005c F4EEC77A 		vcmpe.f32	s15, s14
 5241 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5242 0064 D4BF     		ite	le
 5243 0066 0121     		movle	r1, #1
 5244 0068 0021     		movgt	r1, #0
 5245              	.LVL322:
1865:Veno-Echo.cpp **** 
 5246              		.loc 19 1865 5 is_stmt 1 view .LVU1399
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 197


1865:Veno-Echo.cpp **** 
 5247              		.loc 19 1865 5 is_stmt 0 view .LVU1400
 5248              	.LBE1415:
 5249              	.LBE1417:
 816:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot;   //reset last value
 5250              		.loc 19 816 31 view .LVU1401
 5251 006a 2170     		strb	r1, [r4]
 817:Veno-Echo.cpp ****         } 
 5252              		.loc 19 817 13 is_stmt 1 view .LVU1402
 5253              	.L321:
 824:Veno-Echo.cpp **** 
 5254              		.loc 19 824 9 view .LVU1403
 5255              	.LVL323:
 826:Veno-Echo.cpp ****     {
 5256              		.loc 19 826 5 view .LVU1404
 5257 006c 0029     		cmp	r1, #0
 5258 006e 50D1     		bne	.L322
 834:Veno-Echo.cpp ****     }
 5259              		.loc 19 834 9 view .LVU1405
 5260              	.LVL324:
 5261              	.LBB1418:
 5262              	.LBI1418:
1809:Veno-Echo.cpp **** {
 5263              		.loc 19 1809 7 view .LVU1406
 5264              	.LBB1419:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5265              		.loc 19 1811 5 view .LVU1407
1812:Veno-Echo.cpp **** 
 5266              		.loc 19 1812 5 view .LVU1408
 5267              	.LBE1419:
 5268              	.LBE1418:
 834:Veno-Echo.cpp ****     }
 5269              		.loc 19 834 32 is_stmt 0 view .LVU1409
 5270 0070 8849     		ldr	r1, .L354+32
 5271              	.LBB1423:
 5272              	.LBB1420:
1812:Veno-Echo.cpp **** 
 5273              		.loc 19 1812 39 view .LVU1410
 5274 0072 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 5275              		.loc 19 1812 49 view .LVU1411
 5276 0076 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 5277              		.loc 19 1812 12 view .LVU1412
 5278 007a D2ED008A 		vldr.32	s17, [r2]
1812:Veno-Echo.cpp **** 
 5279              		.loc 19 1812 39 view .LVU1413
 5280 007e D1ED007A 		vldr.32	s15, [r1]
1812:Veno-Echo.cpp **** 
 5281              		.loc 19 1812 12 view .LVU1414
 5282 0082 F0EE006A 		vmov.f32	s13, #2.0e+0
1812:Veno-Echo.cpp **** 
 5283              		.loc 19 1812 39 view .LVU1415
 5284 0086 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 5285              		.loc 19 1812 49 view .LVU1416
 5286 008a 77EEC67A 		vsub.f32	s15, s15, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 198


1812:Veno-Echo.cpp **** 
 5287              		.loc 19 1812 12 view .LVU1417
 5288 008e E7EEA68A 		vfma.f32	s17, s15, s13
 5289              	.LVL325:
1814:Veno-Echo.cpp ****     {
 5290              		.loc 19 1814 5 is_stmt 1 view .LVU1418
 5291 0092 F5EEC08A 		vcmpe.f32	s17, #0
 5292 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5293 009a 00F18B80 		bmi	.L342
1819:Veno-Echo.cpp ****     {
 5294              		.loc 19 1819 5 view .LVU1419
1821:Veno-Echo.cpp ****     }
 5295              		.loc 19 1821 16 is_stmt 0 view .LVU1420
 5296 009e F4EE478A 		vcmp.f32	s17, s14
 5297              	.LBE1420:
 5298              	.LBE1423:
 837:Veno-Echo.cpp ****     {
 5299              		.loc 19 837 9 view .LVU1421
 5300 00a2 7D4A     		ldr	r2, .L354+36
 837:Veno-Echo.cpp ****     {
 5301              		.loc 19 837 5 view .LVU1422
 5302 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5303              	.LBB1424:
 5304              	.LBB1421:
1821:Veno-Echo.cpp ****     }
 5305              		.loc 19 1821 16 view .LVU1423
 5306 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5307 00aa 77FE288A 		vselgt.f32	s17, s14, s17
 5308              	.LVL326:
1821:Veno-Echo.cpp ****     }
 5309              		.loc 19 1821 16 view .LVU1424
 5310              	.LBE1421:
 5311              	.LBE1424:
 837:Veno-Echo.cpp ****     {
 5312              		.loc 19 837 5 is_stmt 1 view .LVU1425
 5313 00ae 002A     		cmp	r2, #0
 5314 00b0 51D0     		beq	.L353
 5315              	.L328:
 847:Veno-Echo.cpp ****         {
 5316              		.loc 19 847 9 view .LVU1426
 5317 00b2 002B     		cmp	r3, #0
 5318 00b4 76D1     		bne	.L318
 850:Veno-Echo.cpp ****             {
 5319              		.loc 19 850 13 view .LVU1427
 850:Veno-Echo.cpp ****             {
 5320              		.loc 19 850 58 is_stmt 0 view .LVU1428
 5321 00b6 7948     		ldr	r0, .L354+40
 5322 00b8 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5323              	.LVL327:
 850:Veno-Echo.cpp ****             {
 5324              		.loc 19 850 82 view .LVU1429
 5325 00bc 7848     		ldr	r0, .L354+44
 850:Veno-Echo.cpp ****             {
 5326              		.loc 19 850 58 view .LVU1430
 5327 00be B0EE407A 		vmov.f32	s14, s0
 850:Veno-Echo.cpp ****             {
 5328              		.loc 19 850 82 view .LVU1431
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 199


 5329 00c2 B0EE680A 		vmov.f32	s0, s17
 5330 00c6 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 5331              	.LVL328:
 850:Veno-Echo.cpp ****             {
 5332              		.loc 19 850 61 view .LVU1432
 5333 00ca DFED767A 		vldr.32	s15, .L354+48
 850:Veno-Echo.cpp ****             {
 5334              		.loc 19 850 35 view .LVU1433
 5335 00ce 7648     		ldr	r0, .L354+52
 850:Veno-Echo.cpp ****             {
 5336              		.loc 19 850 61 view .LVU1434
 5337 00d0 27EE277A 		vmul.f32	s14, s14, s15
 850:Veno-Echo.cpp ****             {
 5338              		.loc 19 850 35 view .LVU1435
 5339 00d4 27EE000A 		vmul.f32	s0, s14, s0
 5340 00d8 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 5341              	.LVL329:
 850:Veno-Echo.cpp ****             {
 5342              		.loc 19 850 13 view .LVU1436
 5343 00dc 0028     		cmp	r0, #0
 5344 00de 61D0     		beq	.L318
 852:Veno-Echo.cpp ****             }
 5345              		.loc 19 852 17 is_stmt 1 view .LVU1437
 852:Veno-Echo.cpp ****             }
 5346              		.loc 19 852 29 is_stmt 0 view .LVU1438
 5347 00e0 724B     		ldr	r3, .L354+56
 5348 00e2 0122     		movs	r2, #1
 5349 00e4 1A70     		strb	r2, [r3]
 5350 00e6 5DE0     		b	.L318
 5351              	.LVL330:
 5352              	.L320:
 821:Veno-Echo.cpp ****         }
 5353              		.loc 19 821 13 is_stmt 1 view .LVU1439
 821:Veno-Echo.cpp ****         }
 5354              		.loc 19 821 49 is_stmt 0 view .LVU1440
 5355 00e8 6948     		ldr	r0, .L354+28
 5356 00ea 674A     		ldr	r2, .L354+20
 5357              	.LBB1425:
 5358              	.LBB1426:
 5359              	.LBB1427:
 5360              	.LBB1428:
1846:Veno-Echo.cpp ****     {
 5361              		.loc 19 1846 5 view .LVU1441
 5362 00ec 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 5363              	.LBE1428:
 5364              	.LBE1427:
 5365              	.LBE1426:
 5366              	.LBE1425:
 821:Veno-Echo.cpp ****         }
 5367              		.loc 19 821 49 view .LVU1442
 5368 00ee D2ED007A 		vldr.32	s15, [r2]
 5369              	.LVL331:
 5370              	.LBB1436:
 5371              	.LBI1425:
1828:Veno-Echo.cpp **** {
 5372              		.loc 19 1828 6 is_stmt 1 view .LVU1443
 5373              	.LBB1435:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 200


1830:Veno-Echo.cpp ****     
 5374              		.loc 19 1830 5 view .LVU1444
1832:Veno-Echo.cpp ****     {
 5375              		.loc 19 1832 5 view .LVU1445
 5376              	.LBB1434:
 5377              	.LBI1427:
1828:Veno-Echo.cpp **** {
 5378              		.loc 19 1828 6 view .LVU1446
 5379              	.LBB1433:
1846:Veno-Echo.cpp ****     {
 5380              		.loc 19 1846 5 view .LVU1447
 5381 00f2 71B9     		cbnz	r1, .L322
1848:Veno-Echo.cpp ****         {
 5382              		.loc 19 1848 9 view .LVU1448
 5383              	.LVL332:
 5384              	.LBB1429:
 5385              	.LBI1429:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5386              		.loc 20 75 3 view .LVU1449
 5387              	.LBB1430:
 5388              		.loc 20 76 5 view .LVU1450
 5389              		.loc 20 76 5 is_stmt 0 view .LVU1451
 5390              	.LBE1430:
 5391              	.LBE1429:
1848:Veno-Echo.cpp ****         {
 5392              		.loc 19 1848 15 view .LVU1452
 5393 00f4 70EE677A 		vsub.f32	s15, s0, s15
 5394              	.LVL333:
1848:Veno-Echo.cpp ****         {
 5395              		.loc 19 1848 9 view .LVU1453
 5396 00f8 9FED647A 		vldr.32	s14, .L354+24
 5397              	.LBB1432:
 5398              	.LBB1431:
 5399              		.loc 20 76 31 view .LVU1454
 5400 00fc F0EEE77A 		vabs.f32	s15, s15
 5401              	.LBE1431:
 5402              	.LBE1432:
1848:Veno-Echo.cpp ****         {
 5403              		.loc 19 1848 9 view .LVU1455
 5404 0100 F4EEC77A 		vcmpe.f32	s15, s14
 5405 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5406 0108 CCBF     		ite	gt
 5407 010a 0121     		movgt	r1, #1
 5408 010c 0021     		movle	r1, #0
 5409              	.LVL334:
1865:Veno-Echo.cpp **** 
 5410              		.loc 19 1865 5 is_stmt 1 view .LVU1456
1865:Veno-Echo.cpp **** 
 5411              		.loc 19 1865 5 is_stmt 0 view .LVU1457
 5412              	.LBE1433:
 5413              	.LBE1434:
1865:Veno-Echo.cpp **** 
 5414              		.loc 19 1865 5 is_stmt 1 view .LVU1458
1865:Veno-Echo.cpp **** 
 5415              		.loc 19 1865 5 is_stmt 0 view .LVU1459
 5416              	.LBE1435:
 5417              	.LBE1436:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 201


 821:Veno-Echo.cpp ****         }
 5418              		.loc 19 821 31 view .LVU1460
 5419 010e 0170     		strb	r1, [r0]
 5420 0110 ACE7     		b	.L321
 5421              	.L322:
 828:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 5422              		.loc 19 828 9 is_stmt 1 view .LVU1461
 5423              	.LVL335:
 5424              	.LBB1437:
 5425              	.LBI1437:
1809:Veno-Echo.cpp **** {
 5426              		.loc 19 1809 7 view .LVU1462
 5427              	.LBB1438:
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5428              		.loc 19 1811 5 view .LVU1463
1812:Veno-Echo.cpp **** 
 5429              		.loc 19 1812 5 view .LVU1464
 5430              	.LBE1438:
 5431              	.LBE1437:
 828:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 5432              		.loc 19 828 32 is_stmt 0 view .LVU1465
 5433 0112 6049     		ldr	r1, .L354+32
 5434              	.LBB1441:
 5435              	.LBB1439:
1812:Veno-Echo.cpp **** 
 5436              		.loc 19 1812 39 view .LVU1466
 5437 0114 B7EE007A 		vmov.f32	s14, #1.0e+0
1812:Veno-Echo.cpp **** 
 5438              		.loc 19 1812 49 view .LVU1467
 5439 0118 B6EE006A 		vmov.f32	s12, #5.0e-1
1812:Veno-Echo.cpp **** 
 5440              		.loc 19 1812 39 view .LVU1468
 5441 011c D1ED007A 		vldr.32	s15, [r1]
1812:Veno-Echo.cpp **** 
 5442              		.loc 19 1812 12 view .LVU1469
 5443 0120 F0EE006A 		vmov.f32	s13, #2.0e+0
 5444 0124 F0EE488A 		vmov.f32	s17, s16
1812:Veno-Echo.cpp **** 
 5445              		.loc 19 1812 39 view .LVU1470
 5446 0128 77EE677A 		vsub.f32	s15, s14, s15
1812:Veno-Echo.cpp **** 
 5447              		.loc 19 1812 49 view .LVU1471
 5448 012c 77EEC67A 		vsub.f32	s15, s15, s12
1812:Veno-Echo.cpp **** 
 5449              		.loc 19 1812 12 view .LVU1472
 5450 0130 E7EEA68A 		vfma.f32	s17, s15, s13
 5451              	.LVL336:
1814:Veno-Echo.cpp ****     {
 5452              		.loc 19 1814 5 is_stmt 1 view .LVU1473
 5453 0134 F5EEC08A 		vcmpe.f32	s17, #0
 5454 0138 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5455 013c 3DD4     		bmi	.L341
1819:Veno-Echo.cpp ****     {
 5456              		.loc 19 1819 5 view .LVU1474
1821:Veno-Echo.cpp ****     }
 5457              		.loc 19 1821 16 is_stmt 0 view .LVU1475
 5458 013e F4EE478A 		vcmp.f32	s17, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 202


 5459 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5460 0146 77FE288A 		vselgt.f32	s17, s14, s17
 5461              	.LVL337:
 5462              	.L324:
1824:Veno-Echo.cpp **** }
 5463              		.loc 19 1824 5 is_stmt 1 view .LVU1476
1824:Veno-Echo.cpp **** }
 5464              		.loc 19 1824 5 is_stmt 0 view .LVU1477
 5465              	.LBE1439:
 5466              	.LBE1441:
 829:Veno-Echo.cpp ****     }
 5467              		.loc 19 829 9 is_stmt 1 view .LVU1478
 829:Veno-Echo.cpp ****     }
 5468              		.loc 19 829 25 is_stmt 0 view .LVU1479
 5469 014a 82ED008A 		vstr.32	s16, [r2]
 5470              	.LVL338:
 5471              	.L326:
 837:Veno-Echo.cpp ****     {
 5472              		.loc 19 837 5 is_stmt 1 view .LVU1480
 837:Veno-Echo.cpp ****     {
 5473              		.loc 19 837 9 is_stmt 0 view .LVU1481
 5474 014e 524A     		ldr	r2, .L354+36
 837:Veno-Echo.cpp ****     {
 5475              		.loc 19 837 5 view .LVU1482
 5476 0150 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5477 0152 002A     		cmp	r2, #0
 5478 0154 ADD1     		bne	.L328
 5479              	.L353:
 839:Veno-Echo.cpp ****         {
 5480              		.loc 19 839 9 is_stmt 1 view .LVU1483
 5481 0156 2BBB     		cbnz	r3, .L318
 841:Veno-Echo.cpp ****         }
 5482              		.loc 19 841 13 view .LVU1484
 841:Veno-Echo.cpp ****         }
 5483              		.loc 19 841 36 is_stmt 0 view .LVU1485
 5484 0158 B7EE000A 		vmov.f32	s0, #1.0e+0
 5485              	.LVL339:
 841:Veno-Echo.cpp ****         }
 5486              		.loc 19 841 36 view .LVU1486
 5487 015c 0121     		movs	r1, #1
 5488 015e 5248     		ldr	r0, .L354+52
 5489 0160 30EE680A 		vsub.f32	s0, s0, s17
 5490              	.LBE1407:
 5491              	.LBE1500:
 883:Veno-Echo.cpp **** 
 5492              		.loc 19 883 1 view .LVU1487
 5493 0164 BDEC028B 		vldm	sp!, {d8}
 5494              		.cfi_remember_state
 5495              		.cfi_restore 80
 5496              		.cfi_restore 81
 5497              		.cfi_def_cfa_offset 16
 5498              	.LVL340:
 883:Veno-Echo.cpp **** 
 5499              		.loc 19 883 1 view .LVU1488
 5500 0168 BDE83840 		pop	{r3, r4, r5, lr}
 5501              		.cfi_restore 14
 5502              		.cfi_restore 5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 203


 5503              		.cfi_restore 4
 5504              		.cfi_restore 3
 5505              		.cfi_def_cfa_offset 0
 5506              	.LBB1501:
 5507              	.LBB1444:
 841:Veno-Echo.cpp ****         }
 5508              		.loc 19 841 36 view .LVU1489
 5509 016c FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 5510              	.LVL341:
 5511              	.L319:
 5512              		.cfi_restore_state
 841:Veno-Echo.cpp ****         }
 5513              		.loc 19 841 36 view .LVU1490
 5514              	.LBE1444:
 5515              	.LBB1445:
 861:Veno-Echo.cpp ****     {
 5516              		.loc 19 861 5 is_stmt 1 view .LVU1491
 861:Veno-Echo.cpp ****     {
 5517              		.loc 19 861 15 is_stmt 0 view .LVU1492
 5518 0170 444B     		ldr	r3, .L354+16
 861:Veno-Echo.cpp ****     {
 5519              		.loc 19 861 5 view .LVU1493
 5520 0172 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5521 0174 22BB     		cbnz	r2, .L332
 863:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState_alt(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime
 5522              		.loc 19 863 9 is_stmt 1 view .LVU1494
 864:Veno-Echo.cpp ****     }
 5523              		.loc 19 864 52 is_stmt 0 view .LVU1495
 5524 0176 4E4C     		ldr	r4, .L354+60
 863:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState_alt(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime
 5525              		.loc 19 863 19 view .LVU1496
 5526 0178 0121     		movs	r1, #1
 5527              	.LBB1446:
 5528              	.LBB1447:
1876:Veno-Echo.cpp ****         {
 5529              		.loc 19 1876 31 view .LVU1497
 5530 017a 9FED447A 		vldr.32	s14, .L354+24
 5531              	.LBE1447:
 5532              	.LBE1446:
 864:Veno-Echo.cpp ****     }
 5533              		.loc 19 864 52 view .LVU1498
 5534 017e D4ED007A 		vldr.32	s15, [r4]
 863:Veno-Echo.cpp ****         Rev_DelayTime_pickup = checkPickupState_alt(delayTimeL_Pot,Rev_DelayTime_last,Rev_DelayTime
 5535              		.loc 19 863 19 view .LVU1499
 5536 0182 1970     		strb	r1, [r3]
 864:Veno-Echo.cpp ****     }
 5537              		.loc 19 864 9 is_stmt 1 view .LVU1500
 5538              	.LVL342:
 5539              	.LBB1452:
 5540              	.LBI1446:
1870:Veno-Echo.cpp **** {
 5541              		.loc 19 1870 13 view .LVU1501
 5542              	.LBB1448:
1872:Veno-Echo.cpp **** 
 5543              		.loc 19 1872 5 view .LVU1502
1874:Veno-Echo.cpp ****     {
 5544              		.loc 19 1874 5 view .LVU1503
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 204


1876:Veno-Echo.cpp ****         {
 5545              		.loc 19 1876 9 view .LVU1504
1876:Veno-Echo.cpp ****         {
 5546              		.loc 19 1876 31 is_stmt 0 view .LVU1505
 5547 0184 77EEC76A 		vsub.f32	s13, s15, s14
1876:Veno-Echo.cpp ****         {
 5548              		.loc 19 1876 9 view .LVU1506
 5549 0188 B4EEE60A 		vcmpe.f32	s0, s13
 5550 018c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5551 0190 0BD4     		bmi	.L333
1881:Veno-Echo.cpp ****         {
 5552              		.loc 19 1881 14 is_stmt 1 view .LVU1507
1881:Veno-Echo.cpp ****         {
 5553              		.loc 19 1881 36 is_stmt 0 view .LVU1508
 5554 0192 77EE877A 		vadd.f32	s15, s15, s14
 5555              	.LVL343:
1881:Veno-Echo.cpp ****         {
 5556              		.loc 19 1881 36 view .LVU1509
 5557              	.LBE1448:
 5558              	.LBE1452:
 864:Veno-Echo.cpp ****     }
 5559              		.loc 19 864 30 view .LVU1510
 5560 0196 474B     		ldr	r3, .L354+64
 5561              	.LBB1453:
 5562              	.LBB1449:
1881:Veno-Echo.cpp ****         {
 5563              		.loc 19 1881 14 view .LVU1511
 5564 0198 B4EEE70A 		vcmpe.f32	s0, s15
 5565 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5566 01a0 65DD     		ble	.L351
 5567              	.LVL344:
1915:Veno-Echo.cpp **** }
 5568              		.loc 19 1915 5 is_stmt 1 view .LVU1512
1915:Veno-Echo.cpp **** }
 5569              		.loc 19 1915 5 is_stmt 0 view .LVU1513
 5570              	.LBE1449:
 5571              	.LBE1453:
 864:Veno-Echo.cpp ****     }
 5572              		.loc 19 864 30 view .LVU1514
 5573 01a2 1970     		strb	r1, [r3]
 872:Veno-Echo.cpp ****     {
 5574              		.loc 19 872 5 is_stmt 1 view .LVU1515
 5575              	.LVL345:
 5576              	.L318:
 872:Veno-Echo.cpp ****     {
 5577              		.loc 19 872 5 is_stmt 0 view .LVU1516
 5578              	.LBE1445:
 5579              	.LBE1501:
 883:Veno-Echo.cpp **** 
 5580              		.loc 19 883 1 view .LVU1517
 5581 01a4 BDEC028B 		vldm	sp!, {d8}
 5582              		.cfi_remember_state
 5583              		.cfi_restore 80
 5584              		.cfi_restore 81
 5585              		.cfi_def_cfa_offset 16
 5586              	.LVL346:
 883:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 205


 5587              		.loc 19 883 1 view .LVU1518
 5588 01a8 38BD     		pop	{r3, r4, r5, pc}
 5589              	.LVL347:
 5590              	.L333:
 5591              		.cfi_restore_state
 5592              	.LBB1502:
 5593              	.LBB1495:
 5594              	.LBB1454:
 5595              	.LBB1450:
1915:Veno-Echo.cpp **** }
 5596              		.loc 19 1915 5 is_stmt 1 view .LVU1519
1915:Veno-Echo.cpp **** }
 5597              		.loc 19 1915 5 is_stmt 0 view .LVU1520
 5598              	.LBE1450:
 5599              	.LBE1454:
 864:Veno-Echo.cpp ****     }
 5600              		.loc 19 864 30 view .LVU1521
 5601 01aa 424B     		ldr	r3, .L354+64
 5602 01ac 1A70     		strb	r2, [r3]
 872:Veno-Echo.cpp ****     {
 5603              		.loc 19 872 5 is_stmt 1 view .LVU1522
 5604              	.LBE1495:
 5605              	.LBE1502:
 883:Veno-Echo.cpp **** 
 5606              		.loc 19 883 1 is_stmt 0 view .LVU1523
 5607 01ae BDEC028B 		vldm	sp!, {d8}
 5608              		.cfi_remember_state
 5609              		.cfi_restore 80
 5610              		.cfi_restore 81
 5611              		.cfi_def_cfa_offset 16
 5612 01b2 38BD     		pop	{r3, r4, r5, pc}
 5613              	.LVL348:
 5614              	.L342:
 5615              		.cfi_restore_state
 5616              	.LBB1503:
 5617              	.LBB1496:
 5618              	.LBB1442:
 5619              	.LBB1422:
1816:Veno-Echo.cpp ****     }
 5620              		.loc 19 1816 16 view .LVU1524
 5621 01b4 DFED408A 		vldr.32	s17, .L354+68
 5622              	.LVL349:
1816:Veno-Echo.cpp ****     }
 5623              		.loc 19 1816 16 view .LVU1525
 5624 01b8 C9E7     		b	.L326
 5625              	.LVL350:
 5626              	.L341:
1816:Veno-Echo.cpp ****     }
 5627              		.loc 19 1816 16 view .LVU1526
 5628              	.LBE1422:
 5629              	.LBE1442:
 5630              	.LBB1443:
 5631              	.LBB1440:
 5632 01ba DFED3F8A 		vldr.32	s17, .L354+68
 5633              	.LVL351:
1816:Veno-Echo.cpp ****     }
 5634              		.loc 19 1816 16 view .LVU1527
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 206


 5635 01be C4E7     		b	.L324
 5636              	.LVL352:
 5637              	.L332:
1816:Veno-Echo.cpp ****     }
 5638              		.loc 19 1816 16 view .LVU1528
 5639              	.LBE1440:
 5640              	.LBE1443:
 5641              	.LBE1496:
 5642              	.LBB1497:
 869:Veno-Echo.cpp ****     }
 5643              		.loc 19 869 9 is_stmt 1 view .LVU1529
 5644              	.LBB1455:
 5645              	.LBI1455:
1870:Veno-Echo.cpp **** {
 5646              		.loc 19 1870 13 view .LVU1530
 5647              	.LBB1456:
1872:Veno-Echo.cpp **** 
 5648              		.loc 19 1872 5 view .LVU1531
1874:Veno-Echo.cpp ****     {
 5649              		.loc 19 1874 5 view .LVU1532
 5650              	.LBE1456:
 5651              	.LBE1455:
 869:Veno-Echo.cpp ****     }
 5652              		.loc 19 869 52 is_stmt 0 view .LVU1533
 5653 01c0 3C4B     		ldr	r3, .L354+64
 5654 01c2 3B4C     		ldr	r4, .L354+60
 5655              	.LBB1458:
 5656              	.LBB1457:
 5657 01c4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5658 01c6 D4ED000A 		vldr.32	s1, [r4]
 5659 01ca FFF7FEFF 		bl	_Z20checkPickupState_altff11pickupStateb.part.0
 5660              	.LVL353:
1915:Veno-Echo.cpp **** }
 5661              		.loc 19 1915 5 is_stmt 1 view .LVU1534
1915:Veno-Echo.cpp **** }
 5662              		.loc 19 1915 5 is_stmt 0 view .LVU1535
 5663              	.LBE1457:
 5664              	.LBE1458:
 5665              	.LBB1459:
 872:Veno-Echo.cpp ****     {
 5666              		.loc 19 872 5 view .LVU1536
 5667 01ce 0228     		cmp	r0, #2
 5668              	.LBE1459:
 869:Veno-Echo.cpp ****     }
 5669              		.loc 19 869 30 view .LVU1537
 5670 01d0 1870     		strb	r0, [r3]
 872:Veno-Echo.cpp ****     {
 5671              		.loc 19 872 5 is_stmt 1 view .LVU1538
 5672              	.LBB1493:
 5673 01d2 E7D1     		bne	.L318
 5674              	.L336:
 5675              	.LBB1460:
 874:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5676              		.loc 19 874 9 view .LVU1539
 874:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5677              		.loc 19 874 34 is_stmt 0 view .LVU1540
 5678 01d4 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 207


 5679              	.LVL354:
 874:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5680              		.loc 19 874 34 view .LVU1541
 5681 01d8 0120     		movs	r0, #1
 5682 01da 9FED381A 		vldr.32	s2, .L354+72
 5683 01de DFED380A 		vldr.32	s1, .L354+76
 5684 01e2 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5685              	.LVL355:
 5686              	.LBB1461:
 5687              	.LBB1462:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5688              		.loc 19 70 28 view .LVU1542
 5689 01e6 374B     		ldr	r3, .L354+80
 5690              	.LVL356:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5691              		.loc 19 70 28 view .LVU1543
 5692              	.LBE1462:
 5693              	.LBE1461:
 875:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5694              		.loc 19 875 9 is_stmt 1 view .LVU1544
 5695              	.LBB1476:
 5696              	.LBI1461:
  68:Veno-Echo.cpp ****     {
 5697              		.loc 19 68 10 view .LVU1545
 5698              	.LBB1474:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5699              		.loc 19 70 9 view .LVU1546
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5700              		.loc 19 70 53 is_stmt 0 view .LVU1547
 5701 01e8 DFED286A 		vldr.32	s13, .L354+24
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5702              		.loc 19 70 28 view .LVU1548
 5703 01ec D3ED017A 		vldr.32	s15, [r3, #4]
 5704              	.LVL357:
 5705              	.LBB1463:
 5706              	.LBI1463:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5707              		.loc 20 75 3 is_stmt 1 view .LVU1549
 5708              	.LBB1464:
 5709              		.loc 20 76 5 view .LVU1550
 5710              		.loc 20 76 5 is_stmt 0 view .LVU1551
 5711              	.LBE1464:
 5712              	.LBE1463:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5713              		.loc 19 70 15 view .LVU1552
 5714 01f0 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5715              		.loc 19 70 53 view .LVU1553
 5716 01f4 67EEA67A 		vmul.f32	s15, s15, s13
 5717              	.LBB1466:
 5718              	.LBB1465:
 5719              		.loc 20 76 31 view .LVU1554
 5720 01f8 B0EEC77A 		vabs.f32	s14, s14
 5721              	.LBE1465:
 5722              	.LBE1466:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5723              		.loc 19 70 9 view .LVU1555
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 208


 5724 01fc B4EEE77A 		vcmpe.f32	s14, s15
 5725 0200 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5726 0204 0DDD     		ble	.L337
  74:Veno-Echo.cpp ****             //del -> Reset();
 5727              		.loc 19 74 29 view .LVU1556
 5728 0206 FCEEC07A 		vcvt.u32.f32	s15, s0
 5729              	.LBB1467:
 5730              	.LBB1468:
 5731              		.loc 18 72 9 view .LVU1557
 5732 020a 2F4D     		ldr	r5, .L354+84
 5733              	.LBE1468:
 5734              	.LBE1467:
 5735              	.LBE1474:
 5736              	.LBE1476:
 875:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5737              		.loc 19 875 33 view .LVU1558
 5738 020c 1968     		ldr	r1, [r3]
 5739              	.LBB1477:
 5740              	.LBB1475:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5741              		.loc 19 73 13 is_stmt 1 view .LVU1559
 5742              	.LBB1471:
 5743              	.LBB1469:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5744              		.loc 18 71 9 is_stmt 0 view .LVU1560
 5745 020e 0020     		movs	r0, #0
 5746              	.LBE1469:
 5747              	.LBE1471:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5748              		.loc 19 73 27 view .LVU1561
 5749 0210 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5750              		.loc 19 74 13 is_stmt 1 view .LVU1562
 5751              	.LVL358:
 5752              	.LBB1472:
 5753              	.LBI1467:
  69:delayline_reverse.h ****     {
 5754              		.loc 18 69 17 view .LVU1563
  69:delayline_reverse.h ****     {
 5755              		.loc 18 69 17 is_stmt 0 view .LVU1564
 5756              	.LBE1472:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5757              		.loc 19 74 29 view .LVU1565
 5758 0214 17EE902A 		vmov	r2, s15	@ int
 5759              	.LBB1473:
 5760              	.LBB1470:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5761              		.loc 18 71 9 view .LVU1566
 5762 0218 0860     		str	r0, [r1]	@ float
 5763              		.loc 18 72 9 view .LVU1567
 5764 021a AA42     		cmp	r2, r5
 5765 021c 28BF     		it	cs
 5766 021e 2A46     		movcs	r2, r5
 5767 0220 0A61     		str	r2, [r1, #16]
 5768              	.LVL359:
 5769              	.L337:
 5770              		.loc 18 72 9 view .LVU1568
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 209


 5771              	.LBE1470:
 5772              	.LBE1473:
 5773              	.LBE1475:
 5774              	.LBE1477:
 876:Veno-Echo.cpp ****         //save setting:
 5775              		.loc 19 876 9 is_stmt 1 view .LVU1569
 5776              	.LBB1478:
 5777              	.LBI1478:
  68:Veno-Echo.cpp ****     {
 5778              		.loc 19 68 10 view .LVU1570
 5779              	.LBB1479:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5780              		.loc 19 70 9 view .LVU1571
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5781              		.loc 19 70 28 is_stmt 0 view .LVU1572
 5782 0222 2A4B     		ldr	r3, .L354+88
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5783              		.loc 19 70 53 view .LVU1573
 5784 0224 DFED196A 		vldr.32	s13, .L354+24
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5785              		.loc 19 70 28 view .LVU1574
 5786 0228 D3ED017A 		vldr.32	s15, [r3, #4]
 5787              	.LVL360:
 5788              	.LBB1480:
 5789              	.LBI1480:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5790              		.loc 20 75 3 is_stmt 1 view .LVU1575
 5791              	.LBB1481:
 5792              		.loc 20 76 5 view .LVU1576
 5793              		.loc 20 76 5 is_stmt 0 view .LVU1577
 5794              	.LBE1481:
 5795              	.LBE1480:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5796              		.loc 19 70 15 view .LVU1578
 5797 022c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5798              		.loc 19 70 53 view .LVU1579
 5799 0230 67EEA67A 		vmul.f32	s15, s15, s13
 5800              	.LBB1483:
 5801              	.LBB1482:
 5802              		.loc 20 76 31 view .LVU1580
 5803 0234 B0EEC77A 		vabs.f32	s14, s14
 5804              	.LBE1482:
 5805              	.LBE1483:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5806              		.loc 19 70 9 view .LVU1581
 5807 0238 B4EEE77A 		vcmpe.f32	s14, s15
 5808 023c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5809 0240 0DDD     		ble	.L339
  74:Veno-Echo.cpp ****             //del -> Reset();
 5810              		.loc 19 74 29 view .LVU1582
 5811 0242 FCEEC07A 		vcvt.u32.f32	s15, s0
 5812              	.LBB1484:
 5813              	.LBB1485:
 5814              		.loc 18 72 9 view .LVU1583
 5815 0246 204D     		ldr	r5, .L354+84
 5816              	.LBE1485:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 210


 5817              	.LBE1484:
 5818              	.LBE1479:
 5819              	.LBE1478:
 876:Veno-Echo.cpp ****         //save setting:
 5820              		.loc 19 876 33 view .LVU1584
 5821 0248 1968     		ldr	r1, [r3]
 5822              	.LBB1492:
 5823              	.LBB1491:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5824              		.loc 19 73 13 is_stmt 1 view .LVU1585
 5825              	.LBB1488:
 5826              	.LBB1486:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5827              		.loc 18 71 9 is_stmt 0 view .LVU1586
 5828 024a 0020     		movs	r0, #0
 5829              	.LBE1486:
 5830              	.LBE1488:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5831              		.loc 19 73 27 view .LVU1587
 5832 024c 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5833              		.loc 19 74 13 is_stmt 1 view .LVU1588
 5834              	.LVL361:
 5835              	.LBB1489:
 5836              	.LBI1484:
  69:delayline_reverse.h ****     {
 5837              		.loc 18 69 17 view .LVU1589
  69:delayline_reverse.h ****     {
 5838              		.loc 18 69 17 is_stmt 0 view .LVU1590
 5839              	.LBE1489:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5840              		.loc 19 74 29 view .LVU1591
 5841 0250 17EE902A 		vmov	r2, s15	@ int
 5842              	.LBB1490:
 5843              	.LBB1487:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5844              		.loc 18 71 9 view .LVU1592
 5845 0254 0860     		str	r0, [r1]	@ float
 5846              		.loc 18 72 9 view .LVU1593
 5847 0256 AA42     		cmp	r2, r5
 5848 0258 28BF     		it	cs
 5849 025a 2A46     		movcs	r2, r5
 5850 025c 0A61     		str	r2, [r1, #16]
 5851              	.LVL362:
 5852              	.L339:
 5853              		.loc 18 72 9 view .LVU1594
 5854              	.LBE1487:
 5855              	.LBE1490:
 5856              	.LBE1491:
 5857              	.LBE1492:
 878:Veno-Echo.cpp ****         Rev_DelayTime_last = delayTimeL_Pot; //update last value
 5858              		.loc 19 878 9 is_stmt 1 view .LVU1595
 878:Veno-Echo.cpp ****         Rev_DelayTime_last = delayTimeL_Pot; //update last value
 5859              		.loc 19 878 31 is_stmt 0 view .LVU1596
 5860 025e 1C4B     		ldr	r3, .L354+92
 879:Veno-Echo.cpp ****     }
 5861              		.loc 19 879 28 view .LVU1597
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 211


 5862 0260 84ED008A 		vstr.32	s16, [r4]
 878:Veno-Echo.cpp ****         Rev_DelayTime_last = delayTimeL_Pot; //update last value
 5863              		.loc 19 878 31 view .LVU1598
 5864 0264 83ED000A 		vstr.32	s0, [r3]
 879:Veno-Echo.cpp ****     }
 5865              		.loc 19 879 9 is_stmt 1 view .LVU1599
 5866              	.LBE1460:
 5867              	.LBE1493:
 5868              	.LBE1497:
 5869              	.LBE1503:
 883:Veno-Echo.cpp **** 
 5870              		.loc 19 883 1 is_stmt 0 view .LVU1600
 5871 0268 BDEC028B 		vldm	sp!, {d8}
 5872              		.cfi_remember_state
 5873              		.cfi_restore 80
 5874              		.cfi_restore 81
 5875              		.cfi_def_cfa_offset 16
 5876              	.LVL363:
 883:Veno-Echo.cpp **** 
 5877              		.loc 19 883 1 view .LVU1601
 5878 026c 38BD     		pop	{r3, r4, r5, pc}
 5879              	.LVL364:
 5880              	.L351:
 5881              		.cfi_restore_state
 5882              	.LBB1504:
 5883              	.LBB1498:
 5884              	.LBB1494:
 5885              	.LBB1451:
1915:Veno-Echo.cpp **** }
 5886              		.loc 19 1915 5 is_stmt 1 view .LVU1602
1915:Veno-Echo.cpp **** }
 5887              		.loc 19 1915 5 is_stmt 0 view .LVU1603
 5888              	.LBE1451:
 5889              	.LBE1494:
 864:Veno-Echo.cpp ****     }
 5890              		.loc 19 864 30 view .LVU1604
 5891 026e 0222     		movs	r2, #2
 5892 0270 1A70     		strb	r2, [r3]
 872:Veno-Echo.cpp ****     {
 5893              		.loc 19 872 5 is_stmt 1 view .LVU1605
 5894 0272 AFE7     		b	.L336
 5895              	.L355:
 5896              		.align	2
 5897              	.L354:
 5898 0274 18000000 		.word	.LANCHOR4+24
 5899 0278 00000000 		.word	.LANCHOR70
 5900 027c ABAAAA2A 		.word	715827883
 5901 0280 00000000 		.word	.LANCHOR8
 5902 0284 00000000 		.word	.LANCHOR71
 5903 0288 00000000 		.word	.LANCHOR72
 5904 028c 0AD7A33B 		.word	1000593162
 5905 0290 00000000 		.word	.LANCHOR73
 5906 0294 00000000 		.word	.LANCHOR5
 5907 0298 00000000 		.word	.LANCHOR58
 5908 029c 00000000 		.word	.LANCHOR57
 5909 02a0 00000000 		.word	.LANCHOR59
 5910 02a4 00004042 		.word	1111490560
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 212


 5911 02a8 00000000 		.word	.LANCHOR0
 5912 02ac 00000000 		.word	.LANCHOR61
 5913 02b0 00000000 		.word	.LANCHOR74
 5914 02b4 00000000 		.word	.LANCHOR75
 5915 02b8 00000000 		.word	0
 5916 02bc 0050C346 		.word	1187205120
 5917 02c0 00606A48 		.word	1214930944
 5918 02c4 00000000 		.word	.LANCHOR2
 5919 02c8 BF270900 		.word	599999
 5920 02cc 00000000 		.word	.LANCHOR3
 5921 02d0 00000000 		.word	.LANCHOR19
 5922              	.LBE1498:
 5923              	.LBE1504:
 5924              		.cfi_endproc
 5925              	.LFE4292:
 5927              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 5928              		.align	1
 5929              		.p2align 2,,3
 5930              		.global	_Z11GetTapRatio9TapRatios
 5931              		.syntax unified
 5932              		.thumb
 5933              		.thumb_func
 5934              		.fpu fpv5-d16
 5936              	_Z11GetTapRatio9TapRatios:
 5937              	.LVL365:
 5938              	.LFB4311:
1624:Veno-Echo.cpp ****     float retVal{};
 5939              		.loc 19 1624 1 view -0
 5940              		.cfi_startproc
 5941              		@ args = 0, pretend = 0, frame = 0
 5942              		@ frame_needed = 0, uses_anonymous_args = 0
 5943              		@ link register save eliminated.
1625:Veno-Echo.cpp ****     switch(ratio)
 5944              		.loc 19 1625 5 view .LVU1607
1626:Veno-Echo.cpp ****     {
 5945              		.loc 19 1626 5 view .LVU1608
 5946 0000 0138     		subs	r0, r0, #1
 5947              	.LVL366:
1626:Veno-Echo.cpp ****     {
 5948              		.loc 19 1626 5 is_stmt 0 view .LVU1609
 5949 0002 C0B2     		uxtb	r0, r0
 5950 0004 0228     		cmp	r0, #2
 5951 0006 05D8     		bhi	.L358
 5952 0008 044B     		ldr	r3, .L359
 5953 000a 03EB8000 		add	r0, r3, r0, lsl #2
 5954 000e 90ED000A 		vldr.32	s0, [r0]
 5955 0012 7047     		bx	lr
 5956              	.L358:
1624:Veno-Echo.cpp ****     float retVal{};
 5957              		.loc 19 1624 1 view .LVU1610
 5958 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 5959              	.LVL367:
1649:Veno-Echo.cpp **** }
 5960              		.loc 19 1649 1 is_stmt 1 view .LVU1611
1650:Veno-Echo.cpp **** 
 5961              		.loc 19 1650 1 is_stmt 0 view .LVU1612
 5962 0018 7047     		bx	lr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 213


 5963              	.L360:
 5964 001a 00BF     		.align	2
 5965              	.L359:
 5966 001c 00000000 		.word	.LANCHOR69
 5967              		.cfi_endproc
 5968              	.LFE4311:
 5970              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5971              		.align	1
 5972              		.p2align 2,,3
 5973              		.global	_Z13ApplySettingsRK8Settings
 5974              		.syntax unified
 5975              		.thumb
 5976              		.thumb_func
 5977              		.fpu fpv5-d16
 5979              	_Z13ApplySettingsRK8Settings:
 5980              	.LVL368:
 5981              	.LFB4312:
1653:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5982              		.loc 19 1653 1 is_stmt 1 view -0
 5983              		.cfi_startproc
 5984              		@ args = 0, pretend = 0, frame = 0
 5985              		@ frame_needed = 0, uses_anonymous_args = 0
1654:Veno-Echo.cpp ****     {
 5986              		.loc 19 1654 5 view .LVU1614
 5987 0000 9FEDCF7A 		vldr.32	s14, .L429
1654:Veno-Echo.cpp ****     {
 5988              		.loc 19 1654 17 is_stmt 0 view .LVU1615
 5989 0004 D0ED007A 		vldr.32	s15, [r0]
1654:Veno-Echo.cpp ****     {
 5990              		.loc 19 1654 5 view .LVU1616
 5991 0008 F4EEC77A 		vcmpe.f32	s15, s14
1653:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5992              		.loc 19 1653 1 view .LVU1617
 5993 000c 38B5     		push	{r3, r4, r5, lr}
 5994              		.cfi_def_cfa_offset 16
 5995              		.cfi_offset 3, -16
 5996              		.cfi_offset 4, -12
 5997              		.cfi_offset 5, -8
 5998              		.cfi_offset 14, -4
1654:Veno-Echo.cpp ****     {
 5999              		.loc 19 1654 5 view .LVU1618
 6000 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1653:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 6001              		.loc 19 1653 1 view .LVU1619
 6002 0012 0446     		mov	r4, r0
 6003              	.LBB1505:
 6004              	.LBB1506:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6005              		.loc 19 70 28 view .LVU1620
 6006 0014 CB4B     		ldr	r3, .L429+4
 6007              	.LBE1506:
 6008              	.LBE1505:
1654:Veno-Echo.cpp ****     {
 6009              		.loc 19 1654 5 view .LVU1621
 6010 0016 C0F2FD80 		blt	.L362
1654:Veno-Echo.cpp ****     {
 6011              		.loc 19 1654 43 discriminator 1 view .LVU1622
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 214


 6012 001a 9FEDCB7A 		vldr.32	s14, .L429+8
 6013 001e F4EEC77A 		vcmpe.f32	s15, s14
 6014 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6015 0026 00F2F580 		bhi	.L362
1656:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 6016              		.loc 19 1656 9 is_stmt 1 view .LVU1623
 6017              	.LVL369:
 6018              	.LBB1520:
 6019              	.LBI1505:
  68:Veno-Echo.cpp ****     {
 6020              		.loc 19 68 10 view .LVU1624
 6021              	.LBB1518:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6022              		.loc 19 70 9 view .LVU1625
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6023              		.loc 19 70 28 is_stmt 0 view .LVU1626
 6024 002a 93ED017A 		vldr.32	s14, [r3, #4]
 6025              	.LVL370:
 6026              	.LBB1507:
 6027              	.LBI1507:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6028              		.loc 20 75 3 is_stmt 1 view .LVU1627
 6029              	.LBB1508:
 6030              		.loc 20 76 5 view .LVU1628
 6031              		.loc 20 76 5 is_stmt 0 view .LVU1629
 6032              	.LBE1508:
 6033              	.LBE1507:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6034              		.loc 19 70 53 view .LVU1630
 6035 002e 9FEDC76A 		vldr.32	s12, .L429+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6036              		.loc 19 70 15 view .LVU1631
 6037 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6038              		.loc 19 70 53 view .LVU1632
 6039 0036 27EE067A 		vmul.f32	s14, s14, s12
 6040              	.LBB1510:
 6041              	.LBB1509:
 6042              		.loc 20 76 31 view .LVU1633
 6043 003a F0EEE66A 		vabs.f32	s13, s13
 6044              	.LBE1509:
 6045              	.LBE1510:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6046              		.loc 19 70 9 view .LVU1634
 6047 003e F4EEC76A 		vcmpe.f32	s13, s14
 6048 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6049 0046 0FDD     		ble	.L365
  74:Veno-Echo.cpp ****             //del -> Reset();
 6050              		.loc 19 74 29 view .LVU1635
 6051 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 6052              	.LBB1511:
 6053              	.LBB1512:
 6054              		.loc 18 72 9 view .LVU1636
 6055 004c C04D     		ldr	r5, .L429+16
 6056              	.LBE1512:
 6057              	.LBE1511:
 6058              	.LBE1518:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 215


 6059              	.LBE1520:
1656:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 6060              		.loc 19 1656 33 view .LVU1637
 6061 004e 1968     		ldr	r1, [r3]
 6062              	.LBB1521:
 6063              	.LBB1519:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6064              		.loc 19 73 13 is_stmt 1 view .LVU1638
 6065              	.LBB1515:
 6066              	.LBB1513:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6067              		.loc 18 71 9 is_stmt 0 view .LVU1639
 6068 0050 0020     		movs	r0, #0
 6069              	.LVL371:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6070              		.loc 18 71 9 view .LVU1640
 6071              	.LBE1513:
 6072              	.LBE1515:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6073              		.loc 19 73 27 view .LVU1641
 6074 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6075              		.loc 19 74 13 is_stmt 1 view .LVU1642
 6076              	.LVL372:
 6077              	.LBB1516:
 6078              	.LBI1511:
  69:delayline_reverse.h ****     {
 6079              		.loc 18 69 17 view .LVU1643
  69:delayline_reverse.h ****     {
 6080              		.loc 18 69 17 is_stmt 0 view .LVU1644
 6081              	.LBE1516:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6082              		.loc 19 74 29 view .LVU1645
 6083 0056 17EE102A 		vmov	r2, s14	@ int
 6084              	.LBB1517:
 6085              	.LBB1514:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6086              		.loc 18 71 9 view .LVU1646
 6087 005a 0860     		str	r0, [r1]	@ float
 6088 005c D4ED007A 		vldr.32	s15, [r4]
 6089              	.LVL373:
 6090              		.loc 18 72 9 view .LVU1647
 6091 0060 AA42     		cmp	r2, r5
 6092 0062 28BF     		it	cs
 6093 0064 2A46     		movcs	r2, r5
 6094 0066 0A61     		str	r2, [r1, #16]
 6095              	.LVL374:
 6096              	.L365:
 6097              		.loc 18 72 9 view .LVU1648
 6098              	.LBE1514:
 6099              	.LBE1517:
 6100              	.LBE1519:
 6101              	.LBE1521:
1657:Veno-Echo.cpp ****     }
 6102              		.loc 19 1657 9 is_stmt 1 view .LVU1649
 6103              	.LBB1522:
 6104              	.LBI1522:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 216


  68:Veno-Echo.cpp ****     {
 6105              		.loc 19 68 10 view .LVU1650
 6106              	.LBB1523:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6107              		.loc 19 70 9 view .LVU1651
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6108              		.loc 19 70 28 is_stmt 0 view .LVU1652
 6109 0068 BA4B     		ldr	r3, .L429+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6110              		.loc 19 70 53 view .LVU1653
 6111 006a 9FEDB86A 		vldr.32	s12, .L429+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6112              		.loc 19 70 28 view .LVU1654
 6113 006e 93ED017A 		vldr.32	s14, [r3, #4]
 6114              	.LVL375:
 6115              	.LBB1524:
 6116              	.LBI1524:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6117              		.loc 20 75 3 is_stmt 1 view .LVU1655
 6118              	.LBB1525:
 6119              		.loc 20 76 5 view .LVU1656
 6120              		.loc 20 76 5 is_stmt 0 view .LVU1657
 6121              	.LBE1525:
 6122              	.LBE1524:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6123              		.loc 19 70 15 view .LVU1658
 6124 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6125              		.loc 19 70 53 view .LVU1659
 6126 0076 27EE067A 		vmul.f32	s14, s14, s12
 6127              	.LBB1527:
 6128              	.LBB1526:
 6129              		.loc 20 76 31 view .LVU1660
 6130 007a F0EEE66A 		vabs.f32	s13, s13
 6131              	.LBE1526:
 6132              	.LBE1527:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6133              		.loc 19 70 9 view .LVU1661
 6134 007e F4EEC76A 		vcmpe.f32	s13, s14
 6135 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6136 0086 00F34B81 		bgt	.L425
 6137              	.LVL376:
 6138              	.L368:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6139              		.loc 19 70 9 view .LVU1662
 6140              	.LBE1523:
 6141              	.LBE1522:
1665:Veno-Echo.cpp ****     {
 6142              		.loc 19 1665 5 is_stmt 1 view .LVU1663
 6143 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1665:Veno-Echo.cpp ****     {
 6144              		.loc 19 1665 17 is_stmt 0 view .LVU1664
 6145 008e 94ED010A 		vldr.32	s0, [r4, #4]
1665:Veno-Echo.cpp ****     {
 6146              		.loc 19 1665 5 view .LVU1665
 6147 0092 B4EEE70A 		vcmpe.f32	s0, s15
 6148 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 217


 6149 009a 06DB     		blt	.L373
1665:Veno-Echo.cpp ****     {
 6150              		.loc 19 1665 35 discriminator 1 view .LVU1666
 6151 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 6152 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 6153 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6154 00a8 01D9     		bls	.L423
 6155              	.L373:
1671:Veno-Echo.cpp ****     }
 6156              		.loc 19 1671 9 is_stmt 1 view .LVU1667
1671:Veno-Echo.cpp ****     }
 6157              		.loc 19 1671 30 is_stmt 0 view .LVU1668
 6158 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 6159              	.L423:
 6160 00ae AA48     		ldr	r0, .L429+24
 6161 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 6162              	.LVL377:
1674:Veno-Echo.cpp ****     {
 6163              		.loc 19 1674 5 is_stmt 1 view .LVU1669
1674:Veno-Echo.cpp ****     {
 6164              		.loc 19 1674 17 is_stmt 0 view .LVU1670
 6165 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1674:Veno-Echo.cpp ****     {
 6166              		.loc 19 1674 5 view .LVU1671
 6167 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 6168 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6169 00c0 C0F22B81 		blt	.L420
1674:Veno-Echo.cpp ****     {
 6170              		.loc 19 1674 42 discriminator 1 view .LVU1672
 6171 00c4 DFEDA56A 		vldr.32	s13, .L429+28
1680:Veno-Echo.cpp ****     }
 6172              		.loc 19 1680 18 discriminator 1 view .LVU1673
 6173 00c8 9FEDA57A 		vldr.32	s14, .L429+32
 6174 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6175 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6176 00d4 88BF     		it	hi
 6177 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6178              	.L377:
1683:Veno-Echo.cpp ****     {
 6179              		.loc 19 1683 17 view .LVU1674
 6180 00da 94ED030A 		vldr.32	s0, [r4, #12]
1683:Veno-Echo.cpp ****     {
 6181              		.loc 19 1683 5 view .LVU1675
 6182 00de 9FEDA17A 		vldr.32	s14, .L429+36
 6183 00e2 A14B     		ldr	r3, .L429+40
 6184 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6185              	.LBB1538:
 6186              	.LBB1539:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6187              		.loc 8 60 20 view .LVU1676
 6188 00e8 A04D     		ldr	r5, .L429+44
 6189 00ea C3ED007A 		vstr.32	s15, [r3]
 6190              	.LBE1539:
 6191              	.LBE1538:
1683:Veno-Echo.cpp ****     {
 6192              		.loc 19 1683 5 is_stmt 1 view .LVU1677
 6193 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 218


 6194 00f2 06DB     		blt	.L380
1683:Veno-Echo.cpp ****     {
 6195              		.loc 19 1683 40 is_stmt 0 discriminator 1 view .LVU1678
 6196 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6197 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6198 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6199 0100 01D9     		bls	.L424
 6200              	.L380:
1689:Veno-Echo.cpp ****     }
 6201              		.loc 19 1689 9 is_stmt 1 view .LVU1679
 6202              	.LVL378:
 6203              	.LBB1540:
 6204              	.LBI1540:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6205              		.loc 8 58 17 view .LVU1680
 6206              	.LBB1541:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6207              		.loc 8 60 9 view .LVU1681
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6208              		.loc 8 60 20 is_stmt 0 view .LVU1682
 6209 0102 9FED9B0A 		vldr.32	s0, .L429+48
 6210              	.LVL379:
 6211              	.L424:
 6212              		.loc 8 61 34 view .LVU1683
 6213 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6214              		.loc 8 60 20 view .LVU1684
 6215 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6216              		.loc 8 61 9 is_stmt 1 view .LVU1685
 6217              		.loc 8 61 34 is_stmt 0 view .LVU1686
 6218 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6219              	.LVL380:
 6220              	.LBE1541:
 6221              	.LBE1540:
1692:Veno-Echo.cpp ****     {
 6222              		.loc 19 1692 5 view .LVU1687
 6223 0110 DFED987A 		vldr.32	s15, .L429+52
 6224              	.LBB1543:
 6225              	.LBB1542:
 6226              		.loc 8 61 20 view .LVU1688
 6227 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6228              	.LBE1542:
 6229              	.LBE1543:
1692:Veno-Echo.cpp ****     {
 6230              		.loc 19 1692 5 is_stmt 1 view .LVU1689
1692:Veno-Echo.cpp ****     {
 6231              		.loc 19 1692 17 is_stmt 0 view .LVU1690
 6232 0118 94ED050A 		vldr.32	s0, [r4, #20]
1692:Veno-Echo.cpp ****     {
 6233              		.loc 19 1692 5 view .LVU1691
 6234 011c B4EEE70A 		vcmpe.f32	s0, s15
 6235 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6236 0124 07DB     		blt	.L384
1692:Veno-Echo.cpp ****     {
 6237              		.loc 19 1692 40 discriminator 1 view .LVU1692
 6238 0126 DFED947A 		vldr.32	s15, .L429+56
 6239 012a B4EEE70A 		vcmpe.f32	s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 219


 6240 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6241 0132 40F2DF80 		bls	.L426
 6242              	.L384:
1701:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6243              		.loc 19 1701 9 is_stmt 1 view .LVU1693
1701:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6244              		.loc 19 1701 22 is_stmt 0 view .LVU1694
 6245 0136 9FED900A 		vldr.32	s0, .L429+56
 6246 013a 9048     		ldr	r0, .L429+60
 6247 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6248              	.LVL381:
1702:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6249              		.loc 19 1702 9 is_stmt 1 view .LVU1695
1702:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6250              		.loc 19 1702 22 is_stmt 0 view .LVU1696
 6251 0140 9FED8D0A 		vldr.32	s0, .L429+56
 6252 0144 8E48     		ldr	r0, .L429+64
 6253 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6254              	.LVL382:
1703:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6255              		.loc 19 1703 9 is_stmt 1 view .LVU1697
1703:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6256              		.loc 19 1703 27 is_stmt 0 view .LVU1698
 6257 014a 9FED8B0A 		vldr.32	s0, .L429+56
 6258 014e 8D48     		ldr	r0, .L429+68
 6259 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6260              	.LVL383:
1704:Veno-Echo.cpp ****     }
 6261              		.loc 19 1704 9 is_stmt 1 view .LVU1699
1704:Veno-Echo.cpp ****     }
 6262              		.loc 19 1704 27 is_stmt 0 view .LVU1700
 6263 0154 9FED880A 		vldr.32	s0, .L429+56
 6264 0158 8B48     		ldr	r0, .L429+72
 6265 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6266              	.LVL384:
 6267              	.L387:
1707:Veno-Echo.cpp ****     {
 6268              		.loc 19 1707 5 is_stmt 1 view .LVU1701
1707:Veno-Echo.cpp ****     {
 6269              		.loc 19 1707 17 is_stmt 0 view .LVU1702
 6270 015e 94ED040A 		vldr.32	s0, [r4, #16]
1707:Veno-Echo.cpp ****     {
 6271              		.loc 19 1707 5 view .LVU1703
 6272 0162 DFED8A7A 		vldr.32	s15, .L429+76
 6273 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6274 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6275 016e 07DB     		blt	.L388
1707:Veno-Echo.cpp ****     {
 6276              		.loc 19 1707 40 discriminator 1 view .LVU1704
 6277 0170 DFED877A 		vldr.32	s15, .L429+80
 6278 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6279 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6280 017c 40F2A780 		bls	.L427
 6281              	.L388:
1716:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6282              		.loc 19 1716 9 is_stmt 1 view .LVU1705
1716:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 220


 6283              		.loc 19 1716 22 is_stmt 0 view .LVU1706
 6284 0180 9FED840A 		vldr.32	s0, .L429+84
 6285 0184 8448     		ldr	r0, .L429+88
 6286 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6287              	.LVL385:
1717:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6288              		.loc 19 1717 9 is_stmt 1 view .LVU1707
1717:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6289              		.loc 19 1717 22 is_stmt 0 view .LVU1708
 6290 018a 9FED820A 		vldr.32	s0, .L429+84
 6291 018e 8348     		ldr	r0, .L429+92
 6292 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6293              	.LVL386:
1718:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6294              		.loc 19 1718 9 is_stmt 1 view .LVU1709
1718:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6295              		.loc 19 1718 27 is_stmt 0 view .LVU1710
 6296 0194 9FED7F0A 		vldr.32	s0, .L429+84
 6297 0198 8148     		ldr	r0, .L429+96
 6298 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6299              	.LVL387:
1719:Veno-Echo.cpp **** 
 6300              		.loc 19 1719 9 is_stmt 1 view .LVU1711
1719:Veno-Echo.cpp **** 
 6301              		.loc 19 1719 27 is_stmt 0 view .LVU1712
 6302 019e 9FED7D0A 		vldr.32	s0, .L429+84
 6303 01a2 8048     		ldr	r0, .L429+100
 6304 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6305              	.LVL388:
 6306              	.L391:
1723:Veno-Echo.cpp ****     {
 6307              		.loc 19 1723 5 is_stmt 1 view .LVU1713
1723:Veno-Echo.cpp ****     {
 6308              		.loc 19 1723 17 is_stmt 0 view .LVU1714
 6309 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1723:Veno-Echo.cpp ****     {
 6310              		.loc 19 1723 5 view .LVU1715
 6311 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6312 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6313 01b4 06DB     		blt	.L392
1723:Veno-Echo.cpp ****     {
 6314              		.loc 19 1723 38 discriminator 1 view .LVU1716
 6315 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6316 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6317 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6318 01c2 5DD9     		bls	.L428
 6319              	.L392:
1737:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6320              		.loc 19 1737 9 is_stmt 1 view .LVU1717
1737:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6321              		.loc 19 1737 26 is_stmt 0 view .LVU1718
 6322 01c4 9FED660A 		vldr.32	s0, .L429+32
 6323 01c8 6E48     		ldr	r0, .L429+68
 6324 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6325              	.LVL389:
1738:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6326              		.loc 19 1738 9 is_stmt 1 view .LVU1719
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 221


1738:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6327              		.loc 19 1738 26 is_stmt 0 view .LVU1720
 6328 01ce 9FED640A 		vldr.32	s0, .L429+32
 6329 01d2 7348     		ldr	r0, .L429+96
 6330 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6331              	.LVL390:
1739:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6332              		.loc 19 1739 9 is_stmt 1 view .LVU1721
1739:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6333              		.loc 19 1739 26 is_stmt 0 view .LVU1722
 6334 01d8 9FED610A 		vldr.32	s0, .L429+32
 6335 01dc 6A48     		ldr	r0, .L429+72
 6336 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6337              	.LVL391:
1740:Veno-Echo.cpp ****     }
 6338              		.loc 19 1740 9 is_stmt 1 view .LVU1723
1740:Veno-Echo.cpp ****     }
 6339              		.loc 19 1740 26 is_stmt 0 view .LVU1724
 6340 01e2 9FED5F0A 		vldr.32	s0, .L429+32
 6341 01e6 6F48     		ldr	r0, .L429+100
 6342 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6343              	.LVL392:
 6344              	.L395:
1743:Veno-Echo.cpp ****     {
 6345              		.loc 19 1743 5 is_stmt 1 view .LVU1725
1743:Veno-Echo.cpp ****     {
 6346              		.loc 19 1743 16 is_stmt 0 view .LVU1726
 6347 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1743:Veno-Echo.cpp ****     {
 6348              		.loc 19 1743 5 view .LVU1727
 6349 01f0 9FED6D7A 		vldr.32	s14, .L429+104
1749:Veno-Echo.cpp ****     }
 6350              		.loc 19 1749 21 view .LVU1728
 6351 01f4 6D4B     		ldr	r3, .L429+108
1743:Veno-Echo.cpp ****     {
 6352              		.loc 19 1743 5 view .LVU1729
 6353 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 6354 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6355 01fe 3CD4     		bmi	.L399
1747:Veno-Echo.cpp ****     {
 6356              		.loc 19 1747 14 is_stmt 1 view .LVU1730
 6357 0200 9FED6B7A 		vldr.32	s14, .L429+112
 6358 0204 F4EEC77A 		vcmpe.f32	s15, s14
 6359 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6360 020c 35DD     		ble	.L399
1749:Veno-Echo.cpp ****     }
 6361              		.loc 19 1749 9 view .LVU1731
1749:Veno-Echo.cpp ****     }
 6362              		.loc 19 1749 21 is_stmt 0 view .LVU1732
 6363 020e 0122     		movs	r2, #1
 6364 0210 1A70     		strb	r2, [r3]
1756:Veno-Echo.cpp **** 
 6365              		.loc 19 1756 1 view .LVU1733
 6366 0212 38BD     		pop	{r3, r4, r5, pc}
 6367              	.LVL393:
 6368              	.L362:
1661:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 222


 6369              		.loc 19 1661 9 is_stmt 1 view .LVU1734
 6370              	.LBB1544:
 6371              	.LBI1544:
  68:Veno-Echo.cpp ****     {
 6372              		.loc 19 68 10 view .LVU1735
 6373              	.LBB1545:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6374              		.loc 19 70 9 view .LVU1736
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6375              		.loc 19 70 28 is_stmt 0 view .LVU1737
 6376 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 6377              	.LVL394:
 6378              	.LBB1546:
 6379              	.LBI1546:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6380              		.loc 20 75 3 is_stmt 1 view .LVU1738
 6381              	.LBB1547:
 6382              		.loc 20 76 5 view .LVU1739
 6383              		.loc 20 76 5 is_stmt 0 view .LVU1740
 6384              	.LBE1547:
 6385              	.LBE1546:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6386              		.loc 19 70 15 view .LVU1741
 6387 0218 DFED666A 		vldr.32	s13, .L429+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6388              		.loc 19 70 53 view .LVU1742
 6389 021c 9FED4B6A 		vldr.32	s12, .L429+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6390              		.loc 19 70 15 view .LVU1743
 6391 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6392              		.loc 19 70 53 view .LVU1744
 6393 0224 67EE867A 		vmul.f32	s15, s15, s12
 6394              	.LBB1549:
 6395              	.LBB1548:
 6396              		.loc 20 76 31 view .LVU1745
 6397 0228 B0EEC77A 		vabs.f32	s14, s14
 6398              	.LBE1548:
 6399              	.LBE1549:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6400              		.loc 19 70 9 view .LVU1746
 6401 022c B4EEE77A 		vcmpe.f32	s14, s15
 6402 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6403 0234 06DD     		ble	.L369
 6404              	.LBE1545:
 6405              	.LBE1544:
1661:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6406              		.loc 19 1661 33 view .LVU1747
 6407 0236 1A68     		ldr	r2, [r3]
 6408              	.LBB1555:
 6409              	.LBB1554:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6410              		.loc 19 73 13 is_stmt 1 view .LVU1748
 6411              	.LBB1550:
 6412              	.LBB1551:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6413              		.loc 18 71 9 is_stmt 0 view .LVU1749
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 223


 6414 0238 0021     		movs	r1, #0
 6415              		.loc 18 72 9 view .LVU1750
 6416 023a 5F48     		ldr	r0, .L429+120
 6417              	.LVL395:
 6418              		.loc 18 72 9 view .LVU1751
 6419              	.LBE1551:
 6420              	.LBE1550:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6421              		.loc 19 73 27 view .LVU1752
 6422 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6423              		.loc 19 74 13 is_stmt 1 view .LVU1753
 6424              	.LVL396:
 6425              	.LBB1553:
 6426              	.LBI1550:
  69:delayline_reverse.h ****     {
 6427              		.loc 18 69 17 view .LVU1754
 6428              	.LBB1552:
 6429              		.loc 18 72 9 is_stmt 0 view .LVU1755
 6430 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6431              		.loc 18 71 9 view .LVU1756
 6432 0242 1160     		str	r1, [r2]	@ float
 6433              	.LVL397:
 6434              	.L369:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6435              		.loc 18 71 9 view .LVU1757
 6436              	.LBE1552:
 6437              	.LBE1553:
 6438              	.LBE1554:
 6439              	.LBE1555:
1662:Veno-Echo.cpp ****     }
 6440              		.loc 19 1662 9 is_stmt 1 view .LVU1758
 6441              	.LBB1556:
 6442              	.LBI1556:
  68:Veno-Echo.cpp ****     {
 6443              		.loc 19 68 10 view .LVU1759
 6444              	.LBB1557:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6445              		.loc 19 70 9 view .LVU1760
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6446              		.loc 19 70 28 is_stmt 0 view .LVU1761
 6447 0244 434B     		ldr	r3, .L429+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6448              		.loc 19 70 15 view .LVU1762
 6449 0246 DFED5B6A 		vldr.32	s13, .L429+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6450              		.loc 19 70 28 view .LVU1763
 6451 024a D3ED017A 		vldr.32	s15, [r3, #4]
 6452              	.LVL398:
 6453              	.LBB1558:
 6454              	.LBI1558:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6455              		.loc 20 75 3 is_stmt 1 view .LVU1764
 6456              	.LBB1559:
 6457              		.loc 20 76 5 view .LVU1765
 6458              		.loc 20 76 5 is_stmt 0 view .LVU1766
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 224


 6459              	.LBE1559:
 6460              	.LBE1558:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6461              		.loc 19 70 53 view .LVU1767
 6462 024e 9FED3F6A 		vldr.32	s12, .L429+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6463              		.loc 19 70 15 view .LVU1768
 6464 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6465              		.loc 19 70 53 view .LVU1769
 6466 0256 67EE867A 		vmul.f32	s15, s15, s12
 6467              	.LBB1561:
 6468              	.LBB1560:
 6469              		.loc 20 76 31 view .LVU1770
 6470 025a B0EEC77A 		vabs.f32	s14, s14
 6471              	.LBE1560:
 6472              	.LBE1561:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6473              		.loc 19 70 9 view .LVU1771
 6474 025e B4EEE77A 		vcmpe.f32	s14, s15
 6475 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6476 0266 7FF710AF 		ble	.L368
 6477              	.LBE1557:
 6478              	.LBE1556:
1662:Veno-Echo.cpp ****     }
 6479              		.loc 19 1662 33 view .LVU1772
 6480 026a 1A68     		ldr	r2, [r3]
 6481              	.LBB1567:
 6482              	.LBB1566:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6483              		.loc 19 73 13 is_stmt 1 view .LVU1773
 6484              	.LBB1562:
 6485              	.LBB1563:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6486              		.loc 18 71 9 is_stmt 0 view .LVU1774
 6487 026c 0021     		movs	r1, #0
 6488              		.loc 18 72 9 view .LVU1775
 6489 026e 5248     		ldr	r0, .L429+120
 6490              	.LBE1563:
 6491              	.LBE1562:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6492              		.loc 19 73 27 view .LVU1776
 6493 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6494              		.loc 19 74 13 is_stmt 1 view .LVU1777
 6495              	.LVL399:
 6496              	.LBB1565:
 6497              	.LBI1562:
  69:delayline_reverse.h ****     {
 6498              		.loc 18 69 17 view .LVU1778
 6499              	.LBB1564:
 6500              		.loc 18 72 9 is_stmt 0 view .LVU1779
 6501 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6502              		.loc 18 71 9 view .LVU1780
 6503 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 225


 6504              		.loc 18 73 5 view .LVU1781
 6505 0278 07E7     		b	.L368
 6506              	.LVL400:
 6507              	.L399:
 6508              		.loc 18 73 5 view .LVU1782
 6509              	.LBE1564:
 6510              	.LBE1565:
 6511              	.LBE1566:
 6512              	.LBE1567:
1745:Veno-Echo.cpp ****     }
 6513              		.loc 19 1745 9 is_stmt 1 view .LVU1783
1745:Veno-Echo.cpp ****     }
 6514              		.loc 19 1745 21 is_stmt 0 view .LVU1784
 6515 027a 0022     		movs	r2, #0
 6516 027c 1A70     		strb	r2, [r3]
1756:Veno-Echo.cpp **** 
 6517              		.loc 19 1756 1 view .LVU1785
 6518 027e 38BD     		pop	{r3, r4, r5, pc}
 6519              	.LVL401:
 6520              	.L428:
1725:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6521              		.loc 19 1725 9 is_stmt 1 view .LVU1786
1725:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6522              		.loc 19 1725 21 is_stmt 0 view .LVU1787
 6523 0280 3E48     		ldr	r0, .L429+60
 6524 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6525              	.LVL402:
1726:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6526              		.loc 19 1726 9 is_stmt 1 view .LVU1788
1726:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6527              		.loc 19 1726 21 is_stmt 0 view .LVU1789
 6528 0286 94ED060A 		vldr.32	s0, [r4, #24]
 6529 028a 4348     		ldr	r0, .L429+88
 6530 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6531              	.LVL403:
1727:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6532              		.loc 19 1727 9 is_stmt 1 view .LVU1790
1727:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6533              		.loc 19 1727 21 is_stmt 0 view .LVU1791
 6534 0290 94ED060A 		vldr.32	s0, [r4, #24]
 6535 0294 3A48     		ldr	r0, .L429+64
 6536 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6537              	.LVL404:
1728:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6538              		.loc 19 1728 9 is_stmt 1 view .LVU1792
1728:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6539              		.loc 19 1728 21 is_stmt 0 view .LVU1793
 6540 029a 94ED060A 		vldr.32	s0, [r4, #24]
 6541 029e 3F48     		ldr	r0, .L429+92
 6542 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6543              	.LVL405:
1729:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6544              		.loc 19 1729 9 is_stmt 1 view .LVU1794
1729:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6545              		.loc 19 1729 26 is_stmt 0 view .LVU1795
 6546 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 6547 02a8 3648     		ldr	r0, .L429+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 226


 6548 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6549              	.LVL406:
1730:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6550              		.loc 19 1730 9 is_stmt 1 view .LVU1796
1730:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6551              		.loc 19 1730 26 is_stmt 0 view .LVU1797
 6552 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 6553 02b2 3B48     		ldr	r0, .L429+96
 6554 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6555              	.LVL407:
1731:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6556              		.loc 19 1731 9 is_stmt 1 view .LVU1798
1731:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6557              		.loc 19 1731 26 is_stmt 0 view .LVU1799
 6558 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 6559 02bc 3248     		ldr	r0, .L429+72
 6560 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6561              	.LVL408:
1732:Veno-Echo.cpp ****     }
 6562              		.loc 19 1732 9 is_stmt 1 view .LVU1800
1732:Veno-Echo.cpp ****     }
 6563              		.loc 19 1732 26 is_stmt 0 view .LVU1801
 6564 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 6565 02c6 3748     		ldr	r0, .L429+100
 6566 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6567              	.LVL409:
 6568 02cc 8EE7     		b	.L395
 6569              	.L427:
1709:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6570              		.loc 19 1709 9 is_stmt 1 view .LVU1802
1709:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6571              		.loc 19 1709 22 is_stmt 0 view .LVU1803
 6572 02ce 3248     		ldr	r0, .L429+88
 6573 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6574              	.LVL410:
1710:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6575              		.loc 19 1710 9 is_stmt 1 view .LVU1804
1710:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6576              		.loc 19 1710 22 is_stmt 0 view .LVU1805
 6577 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 6578 02d8 3048     		ldr	r0, .L429+92
 6579 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6580              	.LVL411:
1711:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6581              		.loc 19 1711 9 is_stmt 1 view .LVU1806
1711:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6582              		.loc 19 1711 27 is_stmt 0 view .LVU1807
 6583 02de 94ED040A 		vldr.32	s0, [r4, #16]
 6584 02e2 2F48     		ldr	r0, .L429+96
 6585 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6586              	.LVL412:
1712:Veno-Echo.cpp ****     }
 6587              		.loc 19 1712 9 is_stmt 1 view .LVU1808
1712:Veno-Echo.cpp ****     }
 6588              		.loc 19 1712 27 is_stmt 0 view .LVU1809
 6589 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 6590 02ec 2D48     		ldr	r0, .L429+100
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 227


 6591 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6592              	.LVL413:
 6593 02f2 59E7     		b	.L391
 6594              	.L426:
1694:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6595              		.loc 19 1694 9 is_stmt 1 view .LVU1810
1694:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6596              		.loc 19 1694 22 is_stmt 0 view .LVU1811
 6597 02f4 2148     		ldr	r0, .L429+60
 6598 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6599              	.LVL414:
1695:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6600              		.loc 19 1695 9 is_stmt 1 view .LVU1812
1695:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6601              		.loc 19 1695 22 is_stmt 0 view .LVU1813
 6602 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 6603 02fe 2048     		ldr	r0, .L429+64
 6604 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6605              	.LVL415:
1696:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6606              		.loc 19 1696 9 is_stmt 1 view .LVU1814
1696:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6607              		.loc 19 1696 27 is_stmt 0 view .LVU1815
 6608 0304 94ED050A 		vldr.32	s0, [r4, #20]
 6609 0308 1E48     		ldr	r0, .L429+68
 6610 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6611              	.LVL416:
1697:Veno-Echo.cpp ****     }
 6612              		.loc 19 1697 9 is_stmt 1 view .LVU1816
1697:Veno-Echo.cpp ****     }
 6613              		.loc 19 1697 27 is_stmt 0 view .LVU1817
 6614 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6615 0312 1D48     		ldr	r0, .L429+72
 6616 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6617              	.LVL417:
 6618 0318 21E7     		b	.L387
 6619              	.L420:
1680:Veno-Echo.cpp ****     }
 6620              		.loc 19 1680 18 view .LVU1818
 6621 031a DFED117A 		vldr.32	s15, .L429+32
 6622 031e DCE6     		b	.L377
 6623              	.LVL418:
 6624              	.L425:
 6625              	.LBB1568:
 6626              	.LBB1536:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6627              		.loc 19 74 29 view .LVU1819
 6628 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6629              	.LBB1528:
 6630              	.LBB1529:
  72:delayline_reverse.h ****     }
 6631              		.loc 18 72 9 view .LVU1820
 6632 0324 0A4D     		ldr	r5, .L429+16
 6633              	.LBE1529:
 6634              	.LBE1528:
 6635              	.LBE1536:
 6636              	.LBE1568:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 228


1657:Veno-Echo.cpp ****     }
 6637              		.loc 19 1657 33 view .LVU1821
 6638 0326 1968     		ldr	r1, [r3]
 6639              	.LBB1569:
 6640              	.LBB1537:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6641              		.loc 19 73 13 is_stmt 1 view .LVU1822
 6642              	.LBB1533:
 6643              	.LBB1530:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6644              		.loc 18 71 9 is_stmt 0 view .LVU1823
 6645 0328 0020     		movs	r0, #0
 6646              	.LBE1530:
 6647              	.LBE1533:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6648              		.loc 19 73 27 view .LVU1824
 6649 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6650              		.loc 19 74 29 view .LVU1825
 6651 032e 17EE102A 		vmov	r2, s14	@ int
 6652              	.LBB1534:
 6653              	.LBB1531:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6654              		.loc 18 71 9 view .LVU1826
 6655 0332 0860     		str	r0, [r1]	@ float
 6656              	.LVL419:
  72:delayline_reverse.h ****     }
 6657              		.loc 18 72 9 view .LVU1827
 6658 0334 AA42     		cmp	r2, r5
 6659 0336 28BF     		it	cs
 6660 0338 2A46     		movcs	r2, r5
 6661              	.LBE1531:
 6662              	.LBE1534:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6663              		.loc 19 74 13 is_stmt 1 view .LVU1828
 6664              	.LVL420:
 6665              	.LBB1535:
 6666              	.LBI1528:
  69:delayline_reverse.h ****     {
 6667              		.loc 18 69 17 view .LVU1829
 6668              	.LBB1532:
  72:delayline_reverse.h ****     }
 6669              		.loc 18 72 9 is_stmt 0 view .LVU1830
 6670 033a 0A61     		str	r2, [r1, #16]
 6671              		.loc 18 73 5 view .LVU1831
 6672 033c A5E6     		b	.L368
 6673              	.L430:
 6674 033e 00BF     		.align	2
 6675              	.L429:
 6676 0340 0050C346 		.word	1187205120
 6677 0344 00000000 		.word	.LANCHOR2
 6678 0348 00606A48 		.word	1214930944
 6679 034c 0AD7A33B 		.word	1000593162
 6680 0350 BF270900 		.word	599999
 6681 0354 00000000 		.word	.LANCHOR3
 6682 0358 00000000 		.word	.LANCHOR57
 6683 035c 0000FA43 		.word	1140457472
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 229


 6684 0360 00000000 		.word	0
 6685 0364 CDCCCC3D 		.word	1036831949
 6686 0368 00000000 		.word	.LANCHOR43
 6687 036c 00000000 		.word	.LANCHOR47
 6688 0370 9A99A140 		.word	1084332442
 6689 0374 0080BB44 		.word	1153138688
 6690 0378 00803B46 		.word	1178304512
 6691 037c 00000000 		.word	.LANCHOR27
 6692 0380 00000000 		.word	.LANCHOR28
 6693 0384 00000000 		.word	.LANCHOR29
 6694 0388 00000000 		.word	.LANCHOR30
 6695 038c 0000C842 		.word	1120403456
 6696 0390 00004844 		.word	1145569280
 6697 0394 00004843 		.word	1128792064
 6698 0398 00000000 		.word	.LANCHOR15
 6699 039c 00000000 		.word	.LANCHOR16
 6700 03a0 00000000 		.word	.LANCHOR17
 6701 03a4 00000000 		.word	.LANCHOR18
 6702 03a8 6666E63E 		.word	1055286886
 6703 03ac 00000000 		.word	.LANCHOR50
 6704 03b0 CDCC0C3F 		.word	1057803469
 6705 03b4 00650148 		.word	1208050944
 6706 03b8 94050200 		.word	132500
 6707              	.LBE1532:
 6708              	.LBE1535:
 6709              	.LBE1537:
 6710              	.LBE1569:
 6711              		.cfi_endproc
 6712              	.LFE4312:
 6714              		.section	.text.startup.main,"ax",%progbits
 6715              		.align	1
 6716              		.p2align 2,,3
 6717              		.global	main
 6718              		.syntax unified
 6719              		.thumb
 6720              		.thumb_func
 6721              		.fpu fpv5-d16
 6723              	main:
 6724              	.LFB4290:
 612:Veno-Echo.cpp ****     // initialize hardware.
 6725              		.loc 19 612 1 is_stmt 1 view -0
 6726              		.cfi_startproc
 6727              		@ Volatile: function does not return.
 6728              		@ args = 0, pretend = 0, frame = 240
 6729              		@ frame_needed = 0, uses_anonymous_args = 0
 614:Veno-Echo.cpp ****     hw.Init();
 6730              		.loc 19 614 5 view .LVU1833
 612:Veno-Echo.cpp ****     // initialize hardware.
 6731              		.loc 19 612 1 is_stmt 0 view .LVU1834
 6732 0000 80B5     		push	{r7, lr}
 6733              		.cfi_def_cfa_offset 8
 6734              		.cfi_offset 7, -8
 6735              		.cfi_offset 14, -4
 614:Veno-Echo.cpp ****     hw.Init();
 6736              		.loc 19 614 17 view .LVU1835
 6737 0002 D148     		ldr	r0, .L434
 612:Veno-Echo.cpp ****     // initialize hardware.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 230


 6738              		.loc 19 612 1 view .LVU1836
 6739 0004 BEB0     		sub	sp, sp, #248
 6740              		.cfi_def_cfa_offset 256
 614:Veno-Echo.cpp ****     hw.Init();
 6741              		.loc 19 614 17 view .LVU1837
 6742 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6743              	.LVL421:
 615:Veno-Echo.cpp ****     
 6744              		.loc 19 615 5 is_stmt 1 view .LVU1838
 615:Veno-Echo.cpp ****     
 6745              		.loc 19 615 12 is_stmt 0 view .LVU1839
 6746 000a 0021     		movs	r1, #0
 6747 000c CE48     		ldr	r0, .L434
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6748              		.loc 19 619 16 view .LVU1840
 6749 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 615:Veno-Echo.cpp ****     
 6750              		.loc 19 615 12 view .LVU1841
 6751 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6752              	.LVL422:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6753              		.loc 19 619 5 is_stmt 1 view .LVU1842
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6754              		.loc 19 619 16 is_stmt 0 view .LVU1843
 6755 0016 1D20     		movs	r0, #29
 6756 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6757              	.LVL423:
 6758 001c 0346     		mov	r3, r0	@ movhi
 6759 001e 0620     		movs	r0, #6
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6760              		.loc 19 626 22 view .LVU1844
 6761 0020 0224     		movs	r4, #2
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6762              		.loc 19 619 16 view .LVU1845
 6763 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6764 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6765              	.LVL424:
 6766 002a 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6767              		.loc 19 619 80 view .LVU1846
 6768 002c C648     		ldr	r0, .L434
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6769              		.loc 19 626 22 view .LVU1847
 6770 002e 9FEDC79A 		vldr.32	s18, .L434+4
 6771              	.LBB1570:
 6772              	.LBB1571:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 231


  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6773              		.loc 7 58 57 view .LVU1848
 6774 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6775              	.LBE1571:
 6776              	.LBE1570:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6777              		.loc 19 619 16 view .LVU1849
 6778 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6779              		.loc 19 619 80 view .LVU1850
 6780 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6781              	.LVL425:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6782              		.loc 19 619 16 view .LVU1851
 6783 003e 0123     		movs	r3, #1
 6784 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6785 0044 039A     		ldr	r2, [sp, #12]
 6786              	.LBB1574:
 6787              	.LBB1575:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6788              		.loc 7 54 63 view .LVU1852
 6789 0046 4FF07C55 		mov	r5, #1056964608
 6790              	.LBE1575:
 6791              	.LBE1574:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6792              		.loc 19 619 16 view .LVU1853
 6793 004a 0299     		ldr	r1, [sp, #8]
 6794              	.LBB1578:
 6795              	.LBB1579:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6796              		.loc 10 64 50 view .LVU1854
 6797 004c 1F46     		mov	r7, r3
 6798              	.LBE1579:
 6799              	.LBE1578:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6800              		.loc 19 619 16 view .LVU1855
 6801 004e C048     		ldr	r0, .L434+8
 6802 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6803              	.LVL426:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6804              		.loc 19 620 5 is_stmt 1 view .LVU1856
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6805              		.loc 19 620 16 is_stmt 0 view .LVU1857
 6806 0054 1E20     		movs	r0, #30
 6807 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6808              	.LVL427:
 6809 005a 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 232


 6810 005c 0720     		movs	r0, #7
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6811              		.loc 19 633 20 view .LVU1858
 6812 005e DFF85483 		ldr	r8, .L434+108
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6813              		.loc 19 620 16 view .LVU1859
 6814 0062 ADF81030 		strh	r3, [sp, #16]	@ movhi
 6815 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6816              	.LVL428:
 6817 006a 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6818              		.loc 19 620 80 view .LVU1860
 6819 006c B648     		ldr	r0, .L434
 6820              	.LBB1582:
 6821              	.LBB1583:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6822              		.loc 7 54 63 view .LVU1861
 6823 006e B94E     		ldr	r6, .L434+12
 6824              	.LBE1583:
 6825              	.LBE1582:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6826              		.loc 19 620 16 view .LVU1862
 6827 0070 ADF81430 		strh	r3, [sp, #20]	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6828              		.loc 19 620 80 view .LVU1863
 6829 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6830              	.LVL429:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6831              		.loc 19 620 16 view .LVU1864
 6832 0078 059A     		ldr	r2, [sp, #20]
 6833 007a 80EE080A 		vdiv.f32	s0, s0, s16
 6834 007e 0499     		ldr	r1, [sp, #16]
 6835 0080 3B46     		mov	r3, r7
 6836 0082 B548     		ldr	r0, .L434+16
 6837 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6838              	.LVL430:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6839              		.loc 19 621 5 is_stmt 1 view .LVU1865
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6840              		.loc 19 621 18 is_stmt 0 view .LVU1866
 6841 0088 0A20     		movs	r0, #10
 6842 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6843              	.LVL431:
 6844 008e 0346     		mov	r3, r0	@ movhi
 6845 0090 2046     		mov	r0, r4
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6846              		.loc 19 639 20 view .LVU1867
 6847 0092 DFF82493 		ldr	r9, .L434+112
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6848              		.loc 19 621 18 view .LVU1868
 6849 0096 ADF81830 		strh	r3, [sp, #24]	@ movhi
 6850 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6851              	.LVL432:
 6852 009e 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6853              		.loc 19 621 85 view .LVU1869
 6854 00a0 A948     		ldr	r0, .L434
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 233


 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6855              		.loc 19 621 18 view .LVU1870
 6856 00a2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6857              		.loc 19 621 85 view .LVU1871
 6858 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6859              	.LVL433:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6860              		.loc 19 621 18 view .LVU1872
 6861 00aa 079A     		ldr	r2, [sp, #28]
 6862 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 6863 00b0 0699     		ldr	r1, [sp, #24]
 6864 00b2 0023     		movs	r3, #0
 6865 00b4 A948     		ldr	r0, .L434+20
 6866 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6867              	.LVL434:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6868              		.loc 19 622 5 is_stmt 1 view .LVU1873
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6869              		.loc 19 622 18 is_stmt 0 view .LVU1874
 6870 00ba 0B20     		movs	r0, #11
 6871 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6872              	.LVL435:
 6873 00c0 0346     		mov	r3, r0	@ movhi
 6874 00c2 0320     		movs	r0, #3
 6875 00c4 ADF82030 		strh	r3, [sp, #32]	@ movhi
 6876 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6877              	.LVL436:
 6878 00cc 0346     		mov	r3, r0	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6879              		.loc 19 622 85 view .LVU1875
 6880 00ce 9E48     		ldr	r0, .L434
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6881              		.loc 19 622 18 view .LVU1876
 6882 00d0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6883              		.loc 19 622 85 view .LVU1877
 6884 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6885              	.LVL437:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6886              		.loc 19 622 18 view .LVU1878
 6887 00d8 099A     		ldr	r2, [sp, #36]
 6888 00da 80EE080A 		vdiv.f32	s0, s0, s16
 6889 00de 0899     		ldr	r1, [sp, #32]
 6890 00e0 0023     		movs	r3, #0
 6891 00e2 9F48     		ldr	r0, .L434+24
 6892 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6893              	.LVL438:
 623:Veno-Echo.cpp **** 
 6894              		.loc 19 623 5 is_stmt 1 view .LVU1879
 623:Veno-Echo.cpp **** 
 6895              		.loc 19 623 20 is_stmt 0 view .LVU1880
 6896 00e8 1820     		movs	r0, #24
 6897 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6898              	.LVL439:
 6899 00ee 0346     		mov	r3, r0	@ movhi
 6900 00f0 0420     		movs	r0, #4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 234


 6901 00f2 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6902 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6903              	.LVL440:
 6904 00fa 0346     		mov	r3, r0	@ movhi
 623:Veno-Echo.cpp **** 
 6905              		.loc 19 623 93 view .LVU1881
 6906 00fc 9248     		ldr	r0, .L434
 623:Veno-Echo.cpp **** 
 6907              		.loc 19 623 20 view .LVU1882
 6908 00fe ADF82C30 		strh	r3, [sp, #44]	@ movhi
 623:Veno-Echo.cpp **** 
 6909              		.loc 19 623 93 view .LVU1883
 6910 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6911              	.LVL441:
 623:Veno-Echo.cpp **** 
 6912              		.loc 19 623 20 view .LVU1884
 6913 0106 2346     		mov	r3, r4
 6914 0108 80EE080A 		vdiv.f32	s0, s0, s16
 6915 010c 0B9A     		ldr	r2, [sp, #44]
 6916 010e 0A99     		ldr	r1, [sp, #40]
 6917 0110 9448     		ldr	r0, .L434+28
 6918 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6919              	.LVL442:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6920              		.loc 19 626 5 is_stmt 1 view .LVU1885
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6921              		.loc 19 626 22 is_stmt 0 view .LVU1886
 6922 0116 0020     		movs	r0, #0
 6923 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6924              	.LVL443:
 6925 011c 0346     		mov	r3, r0	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6926              		.loc 19 626 55 view .LVU1887
 6927 011e 8A48     		ldr	r0, .L434
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6928              		.loc 19 626 22 view .LVU1888
 6929 0120 ADF83030 		strh	r3, [sp, #48]	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6930              		.loc 19 626 55 view .LVU1889
 6931 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6932              	.LVL444:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6933              		.loc 19 626 22 view .LVU1890
 6934 0128 3A46     		mov	r2, r7
 6935 012a 0C99     		ldr	r1, [sp, #48]
 6936 012c 80EE090A 		vdiv.f32	s0, s0, s18
 6937 0130 3B46     		mov	r3, r7
 6938 0132 8D48     		ldr	r0, .L434+32
 6939 0134 0094     		str	r4, [sp]
 6940 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6941              	.LVL445:
 627:Veno-Echo.cpp **** 
 6942              		.loc 19 627 5 is_stmt 1 view .LVU1891
 627:Veno-Echo.cpp **** 
 6943              		.loc 19 627 22 is_stmt 0 view .LVU1892
 6944 013a 3846     		mov	r0, r7
 6945 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 235


 6946              	.LVL446:
 6947 0140 0346     		mov	r3, r0	@ movhi
 627:Veno-Echo.cpp **** 
 6948              		.loc 19 627 55 view .LVU1893
 6949 0142 8148     		ldr	r0, .L434
 627:Veno-Echo.cpp **** 
 6950              		.loc 19 627 22 view .LVU1894
 6951 0144 ADF83430 		strh	r3, [sp, #52]	@ movhi
 627:Veno-Echo.cpp **** 
 6952              		.loc 19 627 55 view .LVU1895
 6953 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6954              	.LVL447:
 627:Veno-Echo.cpp **** 
 6955              		.loc 19 627 22 view .LVU1896
 6956 014c 3A46     		mov	r2, r7
 6957 014e 0D99     		ldr	r1, [sp, #52]
 6958 0150 80EE090A 		vdiv.f32	s0, s0, s18
 6959 0154 3B46     		mov	r3, r7
 6960 0156 8548     		ldr	r0, .L434+36
 6961 0158 0094     		str	r4, [sp]
 6962 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6963              	.LVL448:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6964              		.loc 19 630 5 is_stmt 1 view .LVU1897
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6965              		.loc 19 630 14 is_stmt 0 view .LVU1898
 6966 015e 1720     		movs	r0, #23
 6967 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6968              	.LVL449:
 6969 0164 0346     		mov	r3, r0	@ movhi
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6970              		.loc 19 630 48 view .LVU1899
 6971 0166 7848     		ldr	r0, .L434
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6972              		.loc 19 630 14 view .LVU1900
 6973 0168 ADF83830 		strh	r3, [sp, #56]	@ movhi
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6974              		.loc 19 630 48 view .LVU1901
 6975 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6976              	.LVL450:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6977              		.loc 19 630 14 view .LVU1902
 6978 0170 0E99     		ldr	r1, [sp, #56]
 6979 0172 80EE090A 		vdiv.f32	s0, s0, s18
 6980 0176 7E48     		ldr	r0, .L434+40
 6981 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6982              	.LVL451:
 631:Veno-Echo.cpp ****     
 6983              		.loc 19 631 5 is_stmt 1 view .LVU1903
 631:Veno-Echo.cpp ****     
 6984              		.loc 19 631 17 is_stmt 0 view .LVU1904
 6985 017c 0520     		movs	r0, #5
 6986 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6987              	.LVL452:
 6988 0182 0346     		mov	r3, r0	@ movhi
 6989 0184 7048     		ldr	r0, .L434
 6990 0186 ADF83C30 		strh	r3, [sp, #60]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 236


 6991 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6992              	.LVL453:
 6993 018e 0F99     		ldr	r1, [sp, #60]
 6994 0190 7848     		ldr	r0, .L434+44
 6995 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6996              	.LVL454:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6997              		.loc 19 633 5 is_stmt 1 view .LVU1905
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6998              		.loc 19 633 20 is_stmt 0 view .LVU1906
 6999 0196 6C48     		ldr	r0, .L434
 7000 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7001              	.LVL455:
 7002 019c 4046     		mov	r0, r8
 7003 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7004              	.LVL456:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7005              		.loc 19 634 5 is_stmt 1 view .LVU1907
 7006              	.LBB1586:
 7007              	.LBI1574:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7008              		.loc 7 54 17 view .LVU1908
 7009              	.LBB1576:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7010              		.loc 7 54 48 view .LVU1909
 7011              	.LBE1576:
 7012              	.LBE1586:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7013              		.loc 19 639 20 is_stmt 0 view .LVU1910
 7014 01a2 6948     		ldr	r0, .L434
 7015              	.LBB1587:
 7016              	.LBB1572:
 7017              		.loc 7 58 57 view .LVU1911
 7018 01a4 C8ED008A 		vstr.32	s17, [r8]
 7019              	.LBE1572:
 7020              	.LBE1587:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7021              		.loc 19 645 17 view .LVU1912
 7022 01a8 734C     		ldr	r4, .L434+48
 7023              	.LBB1588:
 7024              	.LBB1577:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7025              		.loc 7 54 63 view .LVU1913
 7026 01aa C8F80850 		str	r5, [r8, #8]	@ float
 7027              	.LVL457:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7028              		.loc 7 54 63 view .LVU1914
 7029              	.LBE1577:
 7030              	.LBE1588:
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7031              		.loc 19 635 5 is_stmt 1 view .LVU1915
 7032              	.LBB1589:
 7033              	.LBI1582:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7034              		.loc 7 54 17 view .LVU1916
 7035              	.LBB1584:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 237


 7036              		.loc 7 54 48 view .LVU1917
 7037              	.LBE1584:
 7038              	.LBE1589:
 7039              	.LBB1590:
 7040              	.LBB1591:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7041              		.loc 7 54 63 is_stmt 0 view .LVU1918
 7042 01ae C8F81450 		str	r5, [r8, #20]	@ float
 7043              	.LBE1591:
 7044              	.LBE1590:
 7045              	.LBB1593:
 7046              	.LBB1585:
 7047 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 7048              	.LVL458:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7049              		.loc 7 54 63 view .LVU1919
 7050              	.LBE1585:
 7051              	.LBE1593:
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 7052              		.loc 19 636 5 is_stmt 1 view .LVU1920
 7053              	.LBB1594:
 7054              	.LBI1590:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7055              		.loc 7 54 17 view .LVU1921
 7056              	.LBB1592:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7057              		.loc 7 54 48 view .LVU1922
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7058              		.loc 7 54 48 is_stmt 0 view .LVU1923
 7059              	.LBE1592:
 7060              	.LBE1594:
 637:Veno-Echo.cpp **** 
 7061              		.loc 19 637 5 is_stmt 1 view .LVU1924
 7062              	.LBB1595:
 7063              	.LBI1570:
 7064              		.loc 7 58 17 view .LVU1925
 7065              	.LBB1573:
 7066              		.loc 7 58 52 view .LVU1926
 7067              		.loc 7 58 52 is_stmt 0 view .LVU1927
 7068              	.LBE1573:
 7069              	.LBE1595:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7070              		.loc 19 639 5 is_stmt 1 view .LVU1928
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7071              		.loc 19 639 20 is_stmt 0 view .LVU1929
 7072 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7073              	.LVL459:
 7074 01ba 4846     		mov	r0, r9
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7075              		.loc 19 651 17 view .LVU1930
 7076 01bc DFF8FC81 		ldr	r8, .L434+116
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7077              		.loc 19 639 20 view .LVU1931
 7078 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7079              	.LVL460:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7080              		.loc 19 640 5 is_stmt 1 view .LVU1932
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 238


 7081              	.LBB1596:
 7082              	.LBI1596:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7083              		.loc 7 54 17 view .LVU1933
 7084              	.LBB1597:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7085              		.loc 7 54 48 view .LVU1934
 7086              	.LBE1597:
 7087              	.LBE1596:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7088              		.loc 19 645 17 is_stmt 0 view .LVU1935
 7089 01c4 6048     		ldr	r0, .L434
 7090              	.LBB1599:
 7091              	.LBB1598:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7092              		.loc 7 54 63 view .LVU1936
 7093 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 7094              	.LVL461:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7095              		.loc 7 54 63 view .LVU1937
 7096              	.LBE1598:
 7097              	.LBE1599:
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7098              		.loc 19 641 5 is_stmt 1 view .LVU1938
 7099              	.LBB1600:
 7100              	.LBI1600:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7101              		.loc 7 54 17 view .LVU1939
 7102              	.LBB1601:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7103              		.loc 7 54 48 view .LVU1940
 7104              	.LBE1601:
 7105              	.LBE1600:
 7106              	.LBB1603:
 7107              	.LBB1604:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7108              		.loc 7 54 63 is_stmt 0 view .LVU1941
 7109 01ca C9F81450 		str	r5, [r9, #20]	@ float
 7110              	.LBE1604:
 7111              	.LBE1603:
 7112              	.LBB1606:
 7113              	.LBB1602:
 7114 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 7115              	.LVL462:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7116              		.loc 7 54 63 view .LVU1942
 7117              	.LBE1602:
 7118              	.LBE1606:
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7119              		.loc 19 642 5 is_stmt 1 view .LVU1943
 7120              	.LBB1607:
 7121              	.LBI1603:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7122              		.loc 7 54 17 view .LVU1944
 7123              	.LBB1605:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7124              		.loc 7 54 48 view .LVU1945
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 239


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7125              		.loc 7 54 48 is_stmt 0 view .LVU1946
 7126              	.LBE1605:
 7127              	.LBE1607:
 643:Veno-Echo.cpp **** 
 7128              		.loc 19 643 5 is_stmt 1 view .LVU1947
 7129              	.LBB1608:
 7130              	.LBI1608:
 7131              		.loc 7 58 17 view .LVU1948
 7132              	.LBB1609:
 7133              		.loc 7 58 52 view .LVU1949
 7134              		.loc 7 58 57 is_stmt 0 view .LVU1950
 7135 01d2 C9ED008A 		vstr.32	s17, [r9]
 7136              	.LVL463:
 7137              		.loc 7 58 57 view .LVU1951
 7138              	.LBE1609:
 7139              	.LBE1608:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7140              		.loc 19 645 5 is_stmt 1 view .LVU1952
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7141              		.loc 19 645 17 is_stmt 0 view .LVU1953
 7142 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7143              	.LVL464:
 7144 01da 2046     		mov	r0, r4
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7145              		.loc 19 670 17 view .LVU1954
 7146 01dc 9FED678A 		vldr.32	s16, .L434+52
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7147              		.loc 19 645 17 view .LVU1955
 7148 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7149              	.LVL465:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7150              		.loc 19 646 5 is_stmt 1 view .LVU1956
 7151              	.LBB1610:
 7152              	.LBI1610:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7153              		.loc 7 54 17 view .LVU1957
 7154              	.LBB1611:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7155              		.loc 7 54 48 view .LVU1958
 7156              	.LBE1611:
 7157              	.LBE1610:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7158              		.loc 19 651 17 is_stmt 0 view .LVU1959
 7159 01e4 5848     		ldr	r0, .L434
 7160              	.LBB1613:
 7161              	.LBB1614:
 7162              		.loc 7 58 57 view .LVU1960
 7163 01e6 C4ED008A 		vstr.32	s17, [r4]
 7164              	.LBE1614:
 7165              	.LBE1613:
 7166              	.LBB1616:
 7167              	.LBB1612:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7168              		.loc 7 54 63 view .LVU1961
 7169 01ea A660     		str	r6, [r4, #8]	@ float
 7170              	.LVL466:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 240


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7171              		.loc 7 54 63 view .LVU1962
 7172              	.LBE1612:
 7173              	.LBE1616:
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7174              		.loc 19 647 5 is_stmt 1 view .LVU1963
 7175              	.LBB1617:
 7176              	.LBI1617:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7177              		.loc 7 54 17 view .LVU1964
 7178              	.LBB1618:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7179              		.loc 7 54 48 view .LVU1965
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7180              		.loc 7 54 63 is_stmt 0 view .LVU1966
 7181 01ec E660     		str	r6, [r4, #12]	@ float
 7182              	.LVL467:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7183              		.loc 7 54 63 view .LVU1967
 7184              	.LBE1618:
 7185              	.LBE1617:
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7186              		.loc 19 648 5 is_stmt 1 view .LVU1968
 7187              	.LBB1619:
 7188              	.LBI1619:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7189              		.loc 7 54 17 view .LVU1969
 7190              	.LBB1620:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7191              		.loc 7 54 48 view .LVU1970
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7192              		.loc 7 54 63 is_stmt 0 view .LVU1971
 7193 01ee 6661     		str	r6, [r4, #20]	@ float
 7194              	.LVL468:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7195              		.loc 7 54 63 view .LVU1972
 7196              	.LBE1620:
 7197              	.LBE1619:
 649:Veno-Echo.cpp **** 
 7198              		.loc 19 649 5 is_stmt 1 view .LVU1973
 7199              	.LBB1621:
 7200              	.LBI1613:
 7201              		.loc 7 58 17 view .LVU1974
 7202              	.LBB1615:
 7203              		.loc 7 58 52 view .LVU1975
 7204              		.loc 7 58 52 is_stmt 0 view .LVU1976
 7205              	.LBE1615:
 7206              	.LBE1621:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7207              		.loc 19 651 5 is_stmt 1 view .LVU1977
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7208              		.loc 19 651 17 is_stmt 0 view .LVU1978
 7209 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7210              	.LVL469:
 7211 01f4 4046     		mov	r0, r8
 7212              	.LBB1622:
 7213              	.LBB1623:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 241


  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7214              		.loc 8 44 20 view .LVU1979
 7215 01f6 624C     		ldr	r4, .L434+56
 7216              	.LBE1623:
 7217              	.LBE1622:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7218              		.loc 19 651 17 view .LVU1980
 7219 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7220              	.LVL470:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7221              		.loc 19 652 5 is_stmt 1 view .LVU1981
 7222              	.LBB1628:
 7223              	.LBI1628:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7224              		.loc 7 54 17 view .LVU1982
 7225              	.LBB1629:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7226              		.loc 7 54 48 view .LVU1983
 7227              	.LBE1629:
 7228              	.LBE1628:
 7229              	.LBB1631:
 7230              	.LBB1632:
 7231              	.LBB1633:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7232              		.loc 10 45 16 is_stmt 0 view .LVU1984
 7233 01fc 6149     		ldr	r1, .L434+60
 7234              	.LBE1633:
 7235              	.LBE1632:
 7236              	.LBE1631:
 7237              	.LBB1638:
 7238              	.LBB1639:
 7239              	.LBB1640:
 7240 01fe 624A     		ldr	r2, .L434+64
 7241              	.LBE1640:
 7242              	.LBE1639:
 7243              	.LBE1638:
 7244              	.LBB1645:
 7245              	.LBB1646:
 7246              	.LBB1647:
 7247 0200 624B     		ldr	r3, .L434+68
 7248              	.LBE1647:
 7249              	.LBE1646:
 7250              	.LBE1645:
 7251              	.LBB1652:
 7252              	.LBB1636:
 7253              	.LBB1634:
 7254 0202 0D60     		str	r5, [r1]	@ float
 7255              	.LBE1634:
 7256              	.LBE1636:
 7257              	.LBE1652:
 7258              	.LBB1653:
 7259              	.LBB1643:
 7260              	.LBB1641:
 7261 0204 1560     		str	r5, [r2]	@ float
 7262              	.LBE1641:
 7263              	.LBE1643:
 7264              	.LBE1653:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 242


 7265              	.LBB1654:
 7266              	.LBB1650:
 7267              	.LBB1648:
 7268 0206 1D60     		str	r5, [r3]	@ float
 7269              	.LBE1648:
 7270              	.LBE1650:
 7271              	.LBE1654:
 7272              	.LBB1655:
 7273              	.LBB1580:
 7274              		.loc 10 64 50 view .LVU1985
 7275 0208 0F71     		strb	r7, [r1, #4]
 7276              	.LBE1580:
 7277              	.LBE1655:
 7278              	.LBB1656:
 7279              	.LBB1657:
 7280 020a 1771     		strb	r7, [r2, #4]
 7281              	.LBE1657:
 7282              	.LBE1656:
 7283              	.LBB1659:
 7284              	.LBB1660:
 7285 020c 1F71     		strb	r7, [r3, #4]
 7286              	.LBE1660:
 7287              	.LBE1659:
 666:Veno-Echo.cpp **** 
 7288              		.loc 19 666 15 view .LVU1986
 7289 020e 4E48     		ldr	r0, .L434
 7290              	.LBB1662:
 7291              	.LBB1663:
 7292              		.loc 7 58 57 view .LVU1987
 7293 0210 C8ED008A 		vstr.32	s17, [r8]
 7294              	.LBE1663:
 7295              	.LBE1662:
 7296              	.LBB1665:
 7297              	.LBB1630:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7298              		.loc 7 54 63 view .LVU1988
 7299 0214 C8F80860 		str	r6, [r8, #8]	@ float
 7300              	.LVL471:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7301              		.loc 7 54 63 view .LVU1989
 7302              	.LBE1630:
 7303              	.LBE1665:
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7304              		.loc 19 653 5 is_stmt 1 view .LVU1990
 7305              	.LBB1666:
 7306              	.LBI1666:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7307              		.loc 7 54 17 view .LVU1991
 7308              	.LBB1667:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7309              		.loc 7 54 48 view .LVU1992
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7310              		.loc 7 54 63 is_stmt 0 view .LVU1993
 7311 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 7312              	.LVL472:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7313              		.loc 7 54 63 view .LVU1994
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 243


 7314              	.LBE1667:
 7315              	.LBE1666:
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7316              		.loc 19 654 5 is_stmt 1 view .LVU1995
 7317              	.LBB1668:
 7318              	.LBI1668:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7319              		.loc 7 54 17 view .LVU1996
 7320              	.LBB1669:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7321              		.loc 7 54 48 view .LVU1997
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7322              		.loc 7 54 63 is_stmt 0 view .LVU1998
 7323 021c C8F81460 		str	r6, [r8, #20]	@ float
 7324              	.LVL473:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7325              		.loc 7 54 63 view .LVU1999
 7326              	.LBE1669:
 7327              	.LBE1668:
 655:Veno-Echo.cpp **** 
 7328              		.loc 19 655 5 is_stmt 1 view .LVU2000
 7329              	.LBB1670:
 7330              	.LBI1662:
 7331              		.loc 7 58 17 view .LVU2001
 7332              	.LBB1664:
 7333              		.loc 7 58 52 view .LVU2002
 7334              		.loc 7 58 52 is_stmt 0 view .LVU2003
 7335              	.LBE1664:
 7336              	.LBE1670:
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7337              		.loc 19 658 5 is_stmt 1 view .LVU2004
 7338              	.LBB1671:
 7339              	.LBI1631:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7340              		.loc 10 51 17 view .LVU2005
 7341              	.LBE1671:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7342              		.loc 10 51 26 view .LVU2006
 7343              	.LBB1672:
 7344              	.LBB1637:
 7345              	.LBI1632:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7346              		.loc 10 43 17 view .LVU2007
 7347              	.LBB1635:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7348              		.loc 10 45 9 view .LVU2008
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7349              		.loc 10 46 9 view .LVU2009
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7350              		.loc 10 46 9 is_stmt 0 view .LVU2010
 7351              	.LBE1635:
 7352              	.LBE1637:
 7353              	.LBE1672:
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7354              		.loc 19 659 5 is_stmt 1 view .LVU2011
 7355              	.LBB1673:
 7356              	.LBI1578:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 244


 7357              		.loc 10 64 17 view .LVU2012
 7358              	.LBB1581:
 7359              		.loc 10 64 43 view .LVU2013
 7360              		.loc 10 64 43 is_stmt 0 view .LVU2014
 7361              	.LBE1581:
 7362              	.LBE1673:
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7363              		.loc 19 660 5 is_stmt 1 view .LVU2015
 7364              	.LBB1674:
 7365              	.LBI1638:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7366              		.loc 10 51 17 view .LVU2016
 7367              	.LBE1674:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7368              		.loc 10 51 26 view .LVU2017
 7369              	.LBB1675:
 7370              	.LBB1644:
 7371              	.LBI1639:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7372              		.loc 10 43 17 view .LVU2018
 7373              	.LBB1642:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7374              		.loc 10 45 9 view .LVU2019
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7375              		.loc 10 46 9 view .LVU2020
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7376              		.loc 10 46 9 is_stmt 0 view .LVU2021
 7377              	.LBE1642:
 7378              	.LBE1644:
 7379              	.LBE1675:
 661:Veno-Echo.cpp **** 
 7380              		.loc 19 661 5 is_stmt 1 view .LVU2022
 7381              	.LBB1676:
 7382              	.LBI1656:
 7383              		.loc 10 64 17 view .LVU2023
 7384              	.LBB1658:
 7385              		.loc 10 64 43 view .LVU2024
 7386              		.loc 10 64 43 is_stmt 0 view .LVU2025
 7387              	.LBE1658:
 7388              	.LBE1676:
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7389              		.loc 19 663 5 is_stmt 1 view .LVU2026
 7390              	.LBB1677:
 7391              	.LBI1645:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7392              		.loc 10 51 17 view .LVU2027
 7393              	.LBE1677:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7394              		.loc 10 51 26 view .LVU2028
 7395              	.LBB1678:
 7396              	.LBB1651:
 7397              	.LBI1646:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7398              		.loc 10 43 17 view .LVU2029
 7399              	.LBB1649:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7400              		.loc 10 45 9 view .LVU2030
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 245


  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7401              		.loc 10 46 9 view .LVU2031
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7402              		.loc 10 46 9 is_stmt 0 view .LVU2032
 7403              	.LBE1649:
 7404              	.LBE1651:
 7405              	.LBE1678:
 664:Veno-Echo.cpp **** 
 7406              		.loc 19 664 5 is_stmt 1 view .LVU2033
 7407              	.LBB1679:
 7408              	.LBI1659:
 7409              		.loc 10 64 17 view .LVU2034
 7410              	.LBB1661:
 7411              		.loc 10 64 43 view .LVU2035
 7412              		.loc 10 64 43 is_stmt 0 view .LVU2036
 7413              	.LBE1661:
 7414              	.LBE1679:
 666:Veno-Echo.cpp **** 
 7415              		.loc 19 666 5 is_stmt 1 view .LVU2037
 666:Veno-Echo.cpp **** 
 7416              		.loc 19 666 15 is_stmt 0 view .LVU2038
 7417 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7418              	.LVL474:
 7419 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 7420              	.LVL475:
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7421              		.loc 19 669 5 is_stmt 1 view .LVU2039
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7422              		.loc 19 669 15 is_stmt 0 view .LVU2040
 7423 0228 4748     		ldr	r0, .L434
 7424 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7425              	.LVL476:
 7426 022e 5848     		ldr	r0, .L434+72
 7427 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7428              	.LVL477:
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7429              		.loc 19 670 5 is_stmt 1 view .LVU2041
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7430              		.loc 19 670 17 is_stmt 0 view .LVU2042
 7431 0234 B0EE480A 		vmov.f32	s0, s16
 7432 0238 5548     		ldr	r0, .L434+72
 7433 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7434              	.LVL478:
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7435              		.loc 19 671 5 is_stmt 1 view .LVU2043
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7436              		.loc 19 671 18 is_stmt 0 view .LVU2044
 7437 023e 9FED550A 		vldr.32	s0, .L434+76
 7438 0242 5348     		ldr	r0, .L434+72
 7439 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7440              	.LVL479:
 672:Veno-Echo.cpp **** 
 7441              		.loc 19 672 5 is_stmt 1 view .LVU2045
 672:Veno-Echo.cpp **** 
 7442              		.loc 19 672 19 is_stmt 0 view .LVU2046
 7443 0248 9FED5D0A 		vldr.32	s0, .L434+120
 7444 024c 5048     		ldr	r0, .L434+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 246


 7445 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7446              	.LVL480:
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7447              		.loc 19 674 5 is_stmt 1 view .LVU2047
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7448              		.loc 19 674 15 is_stmt 0 view .LVU2048
 7449 0252 3D48     		ldr	r0, .L434
 7450 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7451              	.LVL481:
 7452 0258 4F48     		ldr	r0, .L434+80
 7453 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7454              	.LVL482:
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7455              		.loc 19 675 5 is_stmt 1 view .LVU2049
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7456              		.loc 19 675 17 is_stmt 0 view .LVU2050
 7457 025e B0EE480A 		vmov.f32	s0, s16
 7458 0262 4D48     		ldr	r0, .L434+80
 7459 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7460              	.LVL483:
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7461              		.loc 19 676 5 is_stmt 1 view .LVU2051
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7462              		.loc 19 676 18 is_stmt 0 view .LVU2052
 7463 0268 9FED4A0A 		vldr.32	s0, .L434+76
 7464 026c 4A48     		ldr	r0, .L434+80
 7465 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7466              	.LVL484:
 677:Veno-Echo.cpp **** 
 7467              		.loc 19 677 5 is_stmt 1 view .LVU2053
 677:Veno-Echo.cpp **** 
 7468              		.loc 19 677 19 is_stmt 0 view .LVU2054
 7469 0272 9FED530A 		vldr.32	s0, .L434+120
 7470 0276 4848     		ldr	r0, .L434+80
 7471 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7472              	.LVL485:
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7473              		.loc 19 680 5 is_stmt 1 view .LVU2055
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7474              		.loc 19 680 15 is_stmt 0 view .LVU2056
 7475 027c 3248     		ldr	r0, .L434
 7476 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7477              	.LVL486:
 7478 0282 4648     		ldr	r0, .L434+84
 7479 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7480              	.LVL487:
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7481              		.loc 19 681 5 is_stmt 1 view .LVU2057
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7482              		.loc 19 681 17 is_stmt 0 view .LVU2058
 7483 0288 B0EE480A 		vmov.f32	s0, s16
 7484 028c 4348     		ldr	r0, .L434+84
 7485 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7486              	.LVL488:
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7487              		.loc 19 682 5 is_stmt 1 view .LVU2059
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 247


 7488              		.loc 19 682 18 is_stmt 0 view .LVU2060
 7489 0292 9FED430A 		vldr.32	s0, .L434+88
 7490 0296 4148     		ldr	r0, .L434+84
 7491 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7492              	.LVL489:
 683:Veno-Echo.cpp **** 
 7493              		.loc 19 683 5 is_stmt 1 view .LVU2061
 683:Veno-Echo.cpp **** 
 7494              		.loc 19 683 19 is_stmt 0 view .LVU2062
 7495 029c 9FED480A 		vldr.32	s0, .L434+120
 7496 02a0 3E48     		ldr	r0, .L434+84
 7497 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7498              	.LVL490:
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7499              		.loc 19 685 5 is_stmt 1 view .LVU2063
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7500              		.loc 19 685 15 is_stmt 0 view .LVU2064
 7501 02a6 2848     		ldr	r0, .L434
 7502 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7503              	.LVL491:
 7504 02ac 3D48     		ldr	r0, .L434+92
 7505 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7506              	.LVL492:
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7507              		.loc 19 686 5 is_stmt 1 view .LVU2065
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7508              		.loc 19 686 17 is_stmt 0 view .LVU2066
 7509 02b2 B0EE480A 		vmov.f32	s0, s16
 7510 02b6 3B48     		ldr	r0, .L434+92
 7511 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7512              	.LVL493:
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7513              		.loc 19 687 5 is_stmt 1 view .LVU2067
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7514              		.loc 19 687 18 is_stmt 0 view .LVU2068
 7515 02bc 9FED380A 		vldr.32	s0, .L434+88
 7516 02c0 3848     		ldr	r0, .L434+92
 7517 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7518              	.LVL494:
 688:Veno-Echo.cpp **** 
 7519              		.loc 19 688 5 is_stmt 1 view .LVU2069
 688:Veno-Echo.cpp **** 
 7520              		.loc 19 688 19 is_stmt 0 view .LVU2070
 7521 02c6 9FED3E0A 		vldr.32	s0, .L434+120
 7522 02ca 3648     		ldr	r0, .L434+92
 7523 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7524              	.LVL495:
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7525              		.loc 19 691 5 is_stmt 1 view .LVU2071
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7526              		.loc 19 691 20 is_stmt 0 view .LVU2072
 7527 02d0 1D48     		ldr	r0, .L434
 7528 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7529              	.LVL496:
 7530 02d6 3448     		ldr	r0, .L434+96
 7531 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7532              	.LVL497:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 248


 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7533              		.loc 19 692 5 is_stmt 1 view .LVU2073
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7534              		.loc 19 692 22 is_stmt 0 view .LVU2074
 7535 02dc B0EE480A 		vmov.f32	s0, s16
 7536 02e0 3148     		ldr	r0, .L434+96
 7537 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7538              	.LVL498:
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7539              		.loc 19 693 5 is_stmt 1 view .LVU2075
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7540              		.loc 19 693 23 is_stmt 0 view .LVU2076
 7541 02e6 9FED2B0A 		vldr.32	s0, .L434+76
 7542 02ea 2F48     		ldr	r0, .L434+96
 7543 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7544              	.LVL499:
 694:Veno-Echo.cpp **** 
 7545              		.loc 19 694 5 is_stmt 1 view .LVU2077
 694:Veno-Echo.cpp **** 
 7546              		.loc 19 694 24 is_stmt 0 view .LVU2078
 7547 02f0 9FED330A 		vldr.32	s0, .L434+120
 7548 02f4 2C48     		ldr	r0, .L434+96
 7549 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7550              	.LVL500:
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7551              		.loc 19 696 5 is_stmt 1 view .LVU2079
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7552              		.loc 19 696 20 is_stmt 0 view .LVU2080
 7553 02fa 1348     		ldr	r0, .L434
 7554 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7555              	.LVL501:
 7556 0300 2A48     		ldr	r0, .L434+100
 7557 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7558              	.LVL502:
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7559              		.loc 19 697 5 is_stmt 1 view .LVU2081
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7560              		.loc 19 697 22 is_stmt 0 view .LVU2082
 7561 0306 B0EE480A 		vmov.f32	s0, s16
 7562 030a 2848     		ldr	r0, .L434+100
 7563 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7564              	.LVL503:
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7565              		.loc 19 698 5 is_stmt 1 view .LVU2083
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7566              		.loc 19 698 23 is_stmt 0 view .LVU2084
 7567 0310 9FED200A 		vldr.32	s0, .L434+76
 7568 0314 2548     		ldr	r0, .L434+100
 7569 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7570              	.LVL504:
 699:Veno-Echo.cpp **** 
 7571              		.loc 19 699 5 is_stmt 1 view .LVU2085
 699:Veno-Echo.cpp **** 
 7572              		.loc 19 699 24 is_stmt 0 view .LVU2086
 7573 031a 9FED290A 		vldr.32	s0, .L434+120
 7574 031e 2348     		ldr	r0, .L434+100
 7575 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 249


 7576              	.LVL505:
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7577              		.loc 19 702 5 is_stmt 1 view .LVU2087
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7578              		.loc 19 702 20 is_stmt 0 view .LVU2088
 7579 0324 0848     		ldr	r0, .L434
 7580 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7581              	.LVL506:
 7582 032a 2148     		ldr	r0, .L434+104
 7583 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7584              	.LVL507:
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7585              		.loc 19 703 5 is_stmt 1 view .LVU2089
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7586              		.loc 19 703 22 is_stmt 0 view .LVU2090
 7587 0330 B0EE480A 		vmov.f32	s0, s16
 7588 0334 1E48     		ldr	r0, .L434+104
 7589 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7590              	.LVL508:
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7591              		.loc 19 704 5 is_stmt 1 view .LVU2091
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7592              		.loc 19 704 23 is_stmt 0 view .LVU2092
 7593 033a 9FED190A 		vldr.32	s0, .L434+88
 7594 033e 1C48     		ldr	r0, .L434+104
 7595 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7596              	.LVL509:
 7597 0344 3EE0     		b	.L435
 7598              	.L436:
 7599 0346 00BF     		.align	2
 7600              	.L434:
 7601 0348 00000000 		.word	.LANCHOR4
 7602 034c 00004042 		.word	1111490560
 7603 0350 00000000 		.word	.LANCHOR76
 7604 0354 0AD7233C 		.word	1008981770
 7605 0358 00000000 		.word	.LANCHOR77
 7606 035c 00000000 		.word	.LANCHOR78
 7607 0360 00000000 		.word	.LANCHOR79
 7608 0364 00000000 		.word	.LANCHOR80
 7609 0368 00000000 		.word	.LANCHOR81
 7610 036c 00000000 		.word	.LANCHOR82
 7611 0370 00000000 		.word	.LANCHOR83
 7612 0374 00000000 		.word	.LANCHOR54
 7613 0378 00000000 		.word	.LANCHOR86
 7614 037c 00000000 		.word	0
 7615 0380 00000000 		.word	.LANCHOR47
 7616 0384 00000000 		.word	.LANCHOR88
 7617 0388 00000000 		.word	.LANCHOR89
 7618 038c 00000000 		.word	.LANCHOR42
 7619 0390 00000000 		.word	.LANCHOR27
 7620 0394 00803B46 		.word	1178304512
 7621 0398 00000000 		.word	.LANCHOR28
 7622 039c 00000000 		.word	.LANCHOR15
 7623 03a0 00004843 		.word	1128792064
 7624 03a4 00000000 		.word	.LANCHOR16
 7625 03a8 00000000 		.word	.LANCHOR29
 7626 03ac 00000000 		.word	.LANCHOR30
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 250


 7627 03b0 00000000 		.word	.LANCHOR17
 7628 03b4 00000000 		.word	.LANCHOR84
 7629 03b8 00000000 		.word	.LANCHOR85
 7630 03bc 00000000 		.word	.LANCHOR87
 7631 03c0 3333333F 		.word	1060320051
 7632              	.L435:
 705:Veno-Echo.cpp **** 
 7633              		.loc 19 705 5 is_stmt 1 view .LVU2093
 705:Veno-Echo.cpp **** 
 7634              		.loc 19 705 24 is_stmt 0 view .LVU2094
 7635 03c4 1FED020A 		vldr.32	s0, .L434+120
 7636 03c8 7B48     		ldr	r0, .L437
 7637 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7638              	.LVL510:
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7639              		.loc 19 707 5 is_stmt 1 view .LVU2095
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7640              		.loc 19 707 20 is_stmt 0 view .LVU2096
 7641 03ce 7B48     		ldr	r0, .L437+4
 7642 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7643              	.LVL511:
 7644 03d4 7A48     		ldr	r0, .L437+8
 7645 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7646              	.LVL512:
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7647              		.loc 19 708 5 is_stmt 1 view .LVU2097
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7648              		.loc 19 708 22 is_stmt 0 view .LVU2098
 7649 03da B0EE480A 		vmov.f32	s0, s16
 7650 03de 7848     		ldr	r0, .L437+8
 7651 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7652              	.LVL513:
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7653              		.loc 19 709 5 is_stmt 1 view .LVU2099
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7654              		.loc 19 709 23 is_stmt 0 view .LVU2100
 7655 03e4 9FED770A 		vldr.32	s0, .L437+12
 7656 03e8 7548     		ldr	r0, .L437+8
 7657 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7658              	.LVL514:
 710:Veno-Echo.cpp **** 
 7659              		.loc 19 710 5 is_stmt 1 view .LVU2101
 710:Veno-Echo.cpp **** 
 7660              		.loc 19 710 24 is_stmt 0 view .LVU2102
 7661 03ee 9FED760A 		vldr.32	s0, .L437+16
 7662 03f2 7348     		ldr	r0, .L437+8
 7663 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7664              	.LVL515:
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7665              		.loc 19 712 5 is_stmt 1 view .LVU2103
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7666              		.loc 19 712 21 is_stmt 0 view .LVU2104
 7667 03f8 7048     		ldr	r0, .L437+4
 7668 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7669              	.LVL516:
 7670 03fe 7348     		ldr	r0, .L437+20
 7671 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 251


 7672              	.LVL517:
 713:Veno-Echo.cpp **** 
 7673              		.loc 19 713 5 is_stmt 1 view .LVU2105
 713:Veno-Echo.cpp **** 
 7674              		.loc 19 713 21 is_stmt 0 view .LVU2106
 7675 0404 6D48     		ldr	r0, .L437+4
 7676 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7677              	.LVL518:
 7678 040a 7148     		ldr	r0, .L437+24
 7679 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7680              	.LVL519:
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7681              		.loc 19 716 5 is_stmt 1 view .LVU2107
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7682              		.loc 19 716 13 is_stmt 0 view .LVU2108
 7683 0410 6A48     		ldr	r0, .L437+4
 7684 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7685              	.LVL520:
 7686 0416 F0EE407A 		vmov.f32	s15, s0
 7687              	.LVL521:
 7688              	.LBB1680:
 7689              	.LBI1622:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7690              		.loc 8 42 10 is_stmt 1 view .LVU2109
 7691              	.LBB1624:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7692              		.loc 8 44 9 view .LVU2110
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7693              		.loc 8 46 20 is_stmt 0 view .LVU2111
 7694 041a 9FED6E7A 		vldr.32	s14, .L437+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7695              		.loc 8 49 34 view .LVU2112
 7696 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7697              		.loc 8 47 20 view .LVU2113
 7698 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7699              		.loc 8 45 27 view .LVU2114
 7700 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7701              		.loc 8 46 20 view .LVU2115
 7702 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7703              		.loc 8 44 20 view .LVU2116
 7704 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7705              		.loc 8 45 9 is_stmt 1 view .LVU2117
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7706              		.loc 8 48 20 is_stmt 0 view .LVU2118
 7707 042e 84ED058A 		vstr.32	s16, [r4, #20]
 7708              	.LBE1624:
 7709              	.LBE1680:
 738:Veno-Echo.cpp **** 
 7710              		.loc 19 738 17 view .LVU2119
 7711 0432 694D     		ldr	r5, .L437+32
 7712              	.LBB1681:
 7713              	.LBB1625:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 252


  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7714              		.loc 8 49 34 view .LVU2120
 7715 0434 B0EE470A 		vmov.f32	s0, s14
 7716              	.LVL522:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7717              		.loc 8 45 20 view .LVU2121
 7718 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7719              		.loc 8 46 9 is_stmt 1 view .LVU2122
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7720              		.loc 8 47 9 view .LVU2123
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7721              		.loc 8 48 9 view .LVU2124
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7722              		.loc 8 49 9 view .LVU2125
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7723              		.loc 8 49 34 is_stmt 0 view .LVU2126
 7724 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7725              	.LVL523:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7726              		.loc 8 52 20 view .LVU2127
 7727 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7728              		.loc 8 49 34 view .LVU2128
 7729 0444 F0EE407A 		vmov.f32	s15, s0
 7730              	.LBE1625:
 7731              	.LBE1681:
 7732              	.LBB1682:
 7733              	.LBB1683:
 7734              		.loc 8 61 34 view .LVU2129
 7735 0448 2046     		mov	r0, r4
 7736              	.LBE1683:
 7737              	.LBE1682:
 7738              	.LBB1687:
 7739              	.LBB1688:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7740              		.loc 8 72 19 view .LVU2130
 7741 044a 2770     		strb	r7, [r4]
 7742              	.LBE1688:
 7743              	.LBE1687:
 7744              	.LBB1690:
 7745              	.LBB1626:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7746              		.loc 8 52 20 view .LVU2131
 7747 044c A384     		strh	r3, [r4, #36]	@ movhi
 7748              	.LBE1626:
 7749              	.LBE1690:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 253


 7750              	.LBB1691:
 7751              	.LBB1684:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7752              		.loc 8 61 34 view .LVU2132
 7753 044e B0EE680A 		vmov.f32	s0, s17
 7754              	.LBE1684:
 7755              	.LBE1691:
 7756              	.LBB1692:
 7757              	.LBB1627:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7758              		.loc 8 49 20 view .LVU2133
 7759 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7760              		.loc 8 50 9 is_stmt 1 view .LVU2134
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7761              		.loc 8 51 9 view .LVU2135
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7762              		.loc 8 52 9 view .LVU2136
 7763              	.LVL524:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7764              		.loc 8 52 9 is_stmt 0 view .LVU2137
 7765              	.LBE1627:
 7766              	.LBE1692:
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7767              		.loc 19 717 5 is_stmt 1 view .LVU2138
 7768              	.LBB1693:
 7769              	.LBI1687:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7770              		.loc 8 70 17 view .LVU2139
 7771              	.LBB1689:
 7772              		.loc 8 72 9 view .LVU2140
 7773              		.loc 8 72 9 is_stmt 0 view .LVU2141
 7774              	.LBE1689:
 7775              	.LBE1693:
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7776              		.loc 19 718 5 is_stmt 1 view .LVU2142
 7777              	.LBB1694:
 7778              	.LBI1682:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7779              		.loc 8 58 17 view .LVU2143
 7780              	.LBB1685:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7781              		.loc 8 60 9 view .LVU2144
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7782              		.loc 8 61 9 view .LVU2145
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7783              		.loc 8 60 20 is_stmt 0 view .LVU2146
 7784 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7785              		.loc 8 61 34 view .LVU2147
 7786 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7787              	.LVL525:
 7788 045e F0EE407A 		vmov.f32	s15, s0
 7789              	.LBE1685:
 7790              	.LBE1694:
 726:Veno-Echo.cpp **** 
 7791              		.loc 19 726 19 view .LVU2148
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 254


 7792 0462 41F27072 		movw	r2, #6000
 7793 0466 5021     		movs	r1, #80
 7794 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 7795 046c 5B48     		ldr	r0, .L437+36
 7796              	.LBB1695:
 7797              	.LBB1696:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7798              		.loc 8 67 46 view .LVU2149
 7799 046e C4ED018A 		vstr.32	s17, [r4, #4]
 7800              	.LBE1696:
 7801              	.LBE1695:
 7802              	.LBB1698:
 7803              	.LBB1686:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7804              		.loc 8 61 20 view .LVU2150
 7805 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 7806              	.LVL526:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7807              		.loc 8 61 20 view .LVU2151
 7808              	.LBE1686:
 7809              	.LBE1698:
 719:Veno-Echo.cpp **** 
 7810              		.loc 19 719 5 is_stmt 1 view .LVU2152
 7811              	.LBB1699:
 7812              	.LBI1695:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7813              		.loc 8 67 17 view .LVU2153
 7814              	.LBB1697:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7815              		.loc 8 67 41 view .LVU2154
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7816              		.loc 8 67 41 is_stmt 0 view .LVU2155
 7817              	.LBE1697:
 7818              	.LBE1699:
 726:Veno-Echo.cpp **** 
 7819              		.loc 19 726 5 is_stmt 1 view .LVU2156
 726:Veno-Echo.cpp **** 
 7820              		.loc 19 726 19 is_stmt 0 view .LVU2157
 7821 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7822              	.LVL527:
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7823              		.loc 19 730 5 is_stmt 1 view .LVU2158
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7824              		.loc 19 730 23 is_stmt 0 view .LVU2159
 7825 047a 1820     		movs	r0, #24
 738:Veno-Echo.cpp **** 
 7826              		.loc 19 738 17 view .LVU2160
 7827 047c 584C     		ldr	r4, .L437+40
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7828              		.loc 19 730 23 view .LVU2161
 7829 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7830              	.LVL528:
 7831 0482 0346     		mov	r3, r0	@ movhi
 7832 0484 4D48     		ldr	r0, .L437+4
 7833 0486 ADF84030 		strh	r3, [sp, #64]	@ movhi
 7834 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7835              	.LVL529:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 255


 7836 048e 1099     		ldr	r1, [sp, #64]
 7837 0490 5448     		ldr	r0, .L437+44
 7838 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7839              	.LVL530:
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7840              		.loc 19 731 5 is_stmt 1 view .LVU2162
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7841              		.loc 19 731 27 is_stmt 0 view .LVU2163
 7842 0496 5148     		ldr	r0, .L437+36
 7843 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7844              	.LVL531:
 7845 049c 5148     		ldr	r0, .L437+44
 7846 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7847              	.LVL532:
 732:Veno-Echo.cpp **** 
 7848              		.loc 19 732 5 is_stmt 1 view .LVU2164
 732:Veno-Echo.cpp **** 
 7849              		.loc 19 732 29 is_stmt 0 view .LVU2165
 7850 04a2 5048     		ldr	r0, .L437+44
 7851 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7852              	.LVL533:
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7853              		.loc 19 737 5 is_stmt 1 view .LVU2166
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7854              		.loc 19 737 18 is_stmt 0 view .LVU2167
 7855 04a8 4B48     		ldr	r0, .L437+32
 7856 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7857              	.LVL534:
 738:Veno-Echo.cpp **** 
 7858              		.loc 19 738 5 is_stmt 1 view .LVU2168
 738:Veno-Echo.cpp **** 
 7859              		.loc 19 738 17 is_stmt 0 view .LVU2169
 7860 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7861 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7862 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7863 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 746:Veno-Echo.cpp **** 
 7864              		.loc 19 746 5 is_stmt 1 view .LVU2170
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7865              		.loc 19 748 5 view .LVU2171
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7866              		.loc 19 748 28 is_stmt 0 view .LVU2172
 7867 04ba 0F20     		movs	r0, #15
 7868 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7869              	.LVL535:
 7870 04c0 0346     		mov	r3, r0	@ movhi
 7871 04c2 1CA8     		add	r0, sp, #112
 7872 04c4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7873 04c8 1199     		ldr	r1, [sp, #68]
 7874 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7875              	.LVL536:
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7876              		.loc 19 749 5 is_stmt 1 view .LVU2173
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7877              		.loc 19 749 28 is_stmt 0 view .LVU2174
 7878 04ce 1020     		movs	r0, #16
 7879 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 256


 7880              	.LVL537:
 7881 04d4 0346     		mov	r3, r0	@ movhi
 7882 04d6 0DF18100 		add	r0, sp, #129
 7883 04da ADF84830 		strh	r3, [sp, #72]	@ movhi
 7884 04de 1299     		ldr	r1, [sp, #72]
 7885 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7886              	.LVL538:
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7887              		.loc 19 750 5 is_stmt 1 view .LVU2175
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7888              		.loc 19 750 28 is_stmt 0 view .LVU2176
 7889 04e4 1120     		movs	r0, #17
 7890 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7891              	.LVL539:
 7892 04ea 0346     		mov	r3, r0	@ movhi
 7893 04ec 0DF19200 		add	r0, sp, #146
 7894 04f0 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7895 04f4 1399     		ldr	r1, [sp, #76]
 7896 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7897              	.LVL540:
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7898              		.loc 19 751 5 is_stmt 1 view .LVU2177
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7899              		.loc 19 751 28 is_stmt 0 view .LVU2178
 7900 04fa 1220     		movs	r0, #18
 7901 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7902              	.LVL541:
 7903 0500 0346     		mov	r3, r0	@ movhi
 7904 0502 0DF1A300 		add	r0, sp, #163
 7905 0506 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7906 050a 1499     		ldr	r1, [sp, #80]
 7907 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7908              	.LVL542:
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7909              		.loc 19 752 5 is_stmt 1 view .LVU2179
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7910              		.loc 19 752 28 is_stmt 0 view .LVU2180
 7911 0510 1320     		movs	r0, #19
 7912 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7913              	.LVL543:
 7914 0516 0346     		mov	r3, r0	@ movhi
 7915 0518 2DA8     		add	r0, sp, #180
 7916 051a ADF85430 		strh	r3, [sp, #84]	@ movhi
 7917 051e 1599     		ldr	r1, [sp, #84]
 7918 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7919              	.LVL544:
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7920              		.loc 19 753 5 is_stmt 1 view .LVU2181
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7921              		.loc 19 753 28 is_stmt 0 view .LVU2182
 7922 0524 1420     		movs	r0, #20
 7923 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7924              	.LVL545:
 7925 052a 0346     		mov	r3, r0	@ movhi
 7926 052c 0DF1C500 		add	r0, sp, #197
 7927 0530 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7928 0534 1699     		ldr	r1, [sp, #88]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 257


 7929 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7930              	.LVL546:
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7931              		.loc 19 755 5 is_stmt 1 view .LVU2183
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7932              		.loc 19 755 28 is_stmt 0 view .LVU2184
 7933 053a 1620     		movs	r0, #22
 7934 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7935              	.LVL547:
 7936 0540 0346     		mov	r3, r0	@ movhi
 7937 0542 0DF1D600 		add	r0, sp, #214
 7938 0546 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7939 054a 1799     		ldr	r1, [sp, #92]
 7940 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7941              	.LVL548:
 756:Veno-Echo.cpp **** 
 7942              		.loc 19 756 5 is_stmt 1 view .LVU2185
 756:Veno-Echo.cpp **** 
 7943              		.loc 19 756 25 is_stmt 0 view .LVU2186
 7944 0550 1920     		movs	r0, #25
 7945 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7946              	.LVL549:
 7947 0556 0346     		mov	r3, r0	@ movhi
 7948 0558 0E20     		movs	r0, #14
 7949 055a ADF86030 		strh	r3, [sp, #96]	@ movhi
 7950 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7951              	.LVL550:
 7952 0562 0346     		mov	r3, r0	@ movhi
 7953 0564 0D20     		movs	r0, #13
 7954 0566 ADF86430 		strh	r3, [sp, #100]	@ movhi
 7955 056a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7956              	.LVL551:
 7957 056e 0346     		mov	r3, r0	@ movhi
 7958 0570 0C20     		movs	r0, #12
 7959 0572 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7960 0576 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7961              	.LVL552:
 7962 057a BDF86810 		ldrh	r1, [sp, #104]
 7963 057e 0822     		movs	r2, #8
 7964 0580 199B     		ldr	r3, [sp, #100]
 7965 0582 ADF80400 		strh	r0, [sp, #4]	@ movhi
 7966 0586 0DF1E700 		add	r0, sp, #231
 7967 058a ADF80010 		strh	r1, [sp]	@ movhi
 7968 058e 1899     		ldr	r1, [sp, #96]
 7969 0590 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7970              	.LVL553:
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7971              		.loc 19 759 5 is_stmt 1 view .LVU2187
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7972              		.loc 19 759 16 is_stmt 0 view .LVU2188
 7973 0594 1CA9     		add	r1, sp, #112
 7974 0596 0623     		movs	r3, #6
 7975 0598 0822     		movs	r2, #8
 7976 059a 1348     		ldr	r0, .L437+48
 7977 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7978              	.LVL554:
 760:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 258


 7979              		.loc 19 760 5 is_stmt 1 view .LVU2189
 760:Veno-Echo.cpp **** 
 7980              		.loc 19 760 17 is_stmt 0 view .LVU2190
 7981 05a0 1148     		ldr	r0, .L437+48
 7982 05a2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7983              	.LVL555:
 762:Veno-Echo.cpp ****     // start audio callback
 7984              		.loc 19 762 5 is_stmt 1 view .LVU2191
 762:Veno-Echo.cpp ****     // start audio callback
 7985              		.loc 19 762 25 is_stmt 0 view .LVU2192
 7986 05a6 3946     		mov	r1, r7
 7987 05a8 0448     		ldr	r0, .L437+4
 7988 05aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7989              	.LVL556:
 764:Veno-Echo.cpp **** 
 7990              		.loc 19 764 5 is_stmt 1 view .LVU2193
 764:Veno-Echo.cpp **** 
 7991              		.loc 19 764 18 is_stmt 0 view .LVU2194
 7992 05ae 0F49     		ldr	r1, .L437+52
 7993 05b0 0248     		ldr	r0, .L437+4
 7994 05b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7995              	.LVL557:
 7996              	.L432:
 768:Veno-Echo.cpp ****      {
 7997              		.loc 19 768 6 is_stmt 1 discriminator 1 view .LVU2195
 768:Veno-Echo.cpp ****      {
 7998              		.loc 19 768 6 discriminator 1 view .LVU2196
 768:Veno-Echo.cpp ****      {
 7999              		.loc 19 768 6 discriminator 1 view .LVU2197
 768:Veno-Echo.cpp ****      {
 8000              		.loc 19 768 6 discriminator 1 view .LVU2198
 8001 05b6 FEE7     		b	.L432
 8002              	.L438:
 8003              		.align	2
 8004              	.L437:
 8005 05b8 00000000 		.word	.LANCHOR17
 8006 05bc 00000000 		.word	.LANCHOR4
 8007 05c0 00000000 		.word	.LANCHOR18
 8008 05c4 00004843 		.word	1128792064
 8009 05c8 3333333F 		.word	1060320051
 8010 05cc 00000000 		.word	.LANCHOR90
 8011 05d0 00000000 		.word	.LANCHOR91
 8012 05d4 0000C842 		.word	1120403456
 8013 05d8 00000000 		.word	.LANCHOR92
 8014 05dc 00000000 		.word	.LANCHOR57
 8015 05e0 00000000 		.word	.LANCHOR19
 8016 05e4 00000000 		.word	.LANCHOR56
 8017 05e8 18000000 		.word	.LANCHOR4+24
 8018 05ec 00000000 		.word	_ZL13AudioCallbackPfS_j
 8019              		.cfi_endproc
 8020              	.LFE4290:
 8022              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8023              		.align	1
 8024              		.p2align 2,,3
 8025              		.global	_Z13TurnOnAllLEDsv
 8026              		.syntax unified
 8027              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 259


 8028              		.thumb_func
 8029              		.fpu fpv5-d16
 8031              	_Z13TurnOnAllLEDsv:
 8032              	.LFB4313:
1759:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8033              		.loc 19 1759 1 view -0
 8034              		.cfi_startproc
 8035              		@ args = 0, pretend = 0, frame = 0
 8036              		@ frame_needed = 0, uses_anonymous_args = 0
1760:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8037              		.loc 19 1760 5 view .LVU2200
1759:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8038              		.loc 19 1759 1 is_stmt 0 view .LVU2201
 8039 0000 08B5     		push	{r3, lr}
 8040              		.cfi_def_cfa_offset 8
 8041              		.cfi_offset 3, -8
 8042              		.cfi_offset 14, -4
1760:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8043              		.loc 19 1760 26 view .LVU2202
 8044 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8045 0006 1148     		ldr	r0, .L441
 8046 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8047              	.LVL558:
1761:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8048              		.loc 19 1761 5 is_stmt 1 view .LVU2203
1761:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8049              		.loc 19 1761 28 is_stmt 0 view .LVU2204
 8050 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8051 0010 0F48     		ldr	r0, .L441+4
 8052 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8053              	.LVL559:
1762:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8054              		.loc 19 1762 5 is_stmt 1 view .LVU2205
1762:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8055              		.loc 19 1762 28 is_stmt 0 view .LVU2206
 8056 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8057 001a 0E48     		ldr	r0, .L441+8
 8058 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8059              	.LVL560:
1763:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8060              		.loc 19 1763 5 is_stmt 1 view .LVU2207
1763:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8061              		.loc 19 1763 21 is_stmt 0 view .LVU2208
 8062 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8063 0024 0C48     		ldr	r0, .L441+12
 8064 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8065              	.LVL561:
1764:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8066              		.loc 19 1764 5 is_stmt 1 view .LVU2209
1764:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8067              		.loc 19 1764 21 is_stmt 0 view .LVU2210
 8068 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8069 002e 0B48     		ldr	r0, .L441+16
 8070 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8071              	.LVL562:
1765:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8072              		.loc 19 1765 5 is_stmt 1 view .LVU2211
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 260


1765:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8073              		.loc 19 1765 19 is_stmt 0 view .LVU2212
 8074 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8075 0038 0948     		ldr	r0, .L441+20
 8076 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8077              	.LVL563:
1766:Veno-Echo.cpp **** }
 8078              		.loc 19 1766 5 is_stmt 1 view .LVU2213
1766:Veno-Echo.cpp **** }
 8079              		.loc 19 1766 19 is_stmt 0 view .LVU2214
 8080 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8081 0042 0848     		ldr	r0, .L441+24
1767:Veno-Echo.cpp **** 
 8082              		.loc 19 1767 1 view .LVU2215
 8083 0044 BDE80840 		pop	{r3, lr}
 8084              		.cfi_restore 14
 8085              		.cfi_restore 3
 8086              		.cfi_def_cfa_offset 0
1766:Veno-Echo.cpp **** }
 8087              		.loc 19 1766 19 view .LVU2216
 8088 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8089              	.LVL564:
 8090              	.L442:
 8091              		.align	2
 8092              	.L441:
 8093 004c 00000000 		.word	.LANCHOR56
 8094 0050 04000000 		.word	.LANCHOR0+4
 8095 0054 04000000 		.word	.LANCHOR1+4
 8096 0058 00000000 		.word	.LANCHOR78
 8097 005c 00000000 		.word	.LANCHOR79
 8098 0060 00000000 		.word	.LANCHOR76
 8099 0064 00000000 		.word	.LANCHOR77
 8100              		.cfi_endproc
 8101              	.LFE4313:
 8103              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8104              		.align	1
 8105              		.p2align 2,,3
 8106              		.global	_Z12ResetAllLEDsv
 8107              		.syntax unified
 8108              		.thumb
 8109              		.thumb_func
 8110              		.fpu fpv5-d16
 8112              	_Z12ResetAllLEDsv:
 8113              	.LFB4314:
1770:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8114              		.loc 19 1770 1 is_stmt 1 view -0
 8115              		.cfi_startproc
 8116              		@ args = 0, pretend = 0, frame = 0
 8117              		@ frame_needed = 0, uses_anonymous_args = 0
1771:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8118              		.loc 19 1771 5 view .LVU2218
1770:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8119              		.loc 19 1770 1 is_stmt 0 view .LVU2219
 8120 0000 08B5     		push	{r3, lr}
 8121              		.cfi_def_cfa_offset 8
 8122              		.cfi_offset 3, -8
 8123              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 261


1771:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8124              		.loc 19 1771 26 view .LVU2220
 8125 0002 9FED1E0A 		vldr.32	s0, .L450
 8126 0006 1E48     		ldr	r0, .L450+4
 8127 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8128              	.LVL565:
1772:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8129              		.loc 19 1772 5 is_stmt 1 view .LVU2221
1772:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8130              		.loc 19 1772 28 is_stmt 0 view .LVU2222
 8131 000c 9FED1B0A 		vldr.32	s0, .L450
 8132 0010 1C48     		ldr	r0, .L450+8
 8133 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8134              	.LVL566:
1773:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8135              		.loc 19 1773 5 is_stmt 1 view .LVU2223
1773:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8136              		.loc 19 1773 28 is_stmt 0 view .LVU2224
 8137 0016 1C48     		ldr	r0, .L450+12
 8138 0018 9FED180A 		vldr.32	s0, .L450
 8139 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8140              	.LVL567:
1774:Veno-Echo.cpp ****     {
 8141              		.loc 19 1774 5 is_stmt 1 view .LVU2225
1774:Veno-Echo.cpp ****     {
 8142              		.loc 19 1774 26 is_stmt 0 view .LVU2226
 8143 0020 1A48     		ldr	r0, .L450+16
 8144 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8145              	.LVL568:
1774:Veno-Echo.cpp ****     {
 8146              		.loc 19 1774 5 view .LVU2227
 8147 0026 C8B9     		cbnz	r0, .L444
1776:Veno-Echo.cpp ****     }
 8148              		.loc 19 1776 9 is_stmt 1 view .LVU2228
1776:Veno-Echo.cpp ****     }
 8149              		.loc 19 1776 25 is_stmt 0 view .LVU2229
 8150 0028 1848     		ldr	r0, .L450+16
 8151 002a 9FED140A 		vldr.32	s0, .L450
 8152 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8153              	.LVL569:
1783:Veno-Echo.cpp ****     {
 8154              		.loc 19 1783 5 is_stmt 1 view .LVU2230
1783:Veno-Echo.cpp ****     {
 8155              		.loc 19 1783 26 is_stmt 0 view .LVU2231
 8156 0032 1748     		ldr	r0, .L450+20
 8157 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8158              	.LVL570:
1783:Veno-Echo.cpp ****     {
 8159              		.loc 19 1783 5 view .LVU2232
 8160 0038 D0B9     		cbnz	r0, .L446
 8161              	.L449:
1785:Veno-Echo.cpp ****     }
 8162              		.loc 19 1785 9 is_stmt 1 view .LVU2233
1785:Veno-Echo.cpp ****     }
 8163              		.loc 19 1785 25 is_stmt 0 view .LVU2234
 8164 003a 9FED100A 		vldr.32	s0, .L450
 8165 003e 1448     		ldr	r0, .L450+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 262


 8166 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8167              	.LVL571:
 8168              	.L447:
1792:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8169              		.loc 19 1792 5 is_stmt 1 view .LVU2235
1792:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8170              		.loc 19 1792 19 is_stmt 0 view .LVU2236
 8171 0044 9FED0D0A 		vldr.32	s0, .L450
 8172 0048 1248     		ldr	r0, .L450+24
 8173 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8174              	.LVL572:
1793:Veno-Echo.cpp **** }
 8175              		.loc 19 1793 5 is_stmt 1 view .LVU2237
1793:Veno-Echo.cpp **** }
 8176              		.loc 19 1793 19 is_stmt 0 view .LVU2238
 8177 004e 9FED0B0A 		vldr.32	s0, .L450
 8178 0052 1148     		ldr	r0, .L450+28
1794:Veno-Echo.cpp **** 
 8179              		.loc 19 1794 1 view .LVU2239
 8180 0054 BDE80840 		pop	{r3, lr}
 8181              		.cfi_remember_state
 8182              		.cfi_restore 14
 8183              		.cfi_restore 3
 8184              		.cfi_def_cfa_offset 0
1793:Veno-Echo.cpp **** }
 8185              		.loc 19 1793 19 view .LVU2240
 8186 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8187              	.LVL573:
 8188              	.L444:
 8189              		.cfi_restore_state
1780:Veno-Echo.cpp ****     }
 8190              		.loc 19 1780 8 is_stmt 1 view .LVU2241
1780:Veno-Echo.cpp ****     }
 8191              		.loc 19 1780 24 is_stmt 0 view .LVU2242
 8192 005c 0B48     		ldr	r0, .L450+16
 8193 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8194 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8195              	.LVL574:
1783:Veno-Echo.cpp ****     {
 8196              		.loc 19 1783 5 is_stmt 1 view .LVU2243
1783:Veno-Echo.cpp ****     {
 8197              		.loc 19 1783 26 is_stmt 0 view .LVU2244
 8198 0066 0A48     		ldr	r0, .L450+20
 8199 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8200              	.LVL575:
1783:Veno-Echo.cpp ****     {
 8201              		.loc 19 1783 5 view .LVU2245
 8202 006c 0028     		cmp	r0, #0
 8203 006e E4D0     		beq	.L449
 8204              	.L446:
1789:Veno-Echo.cpp ****     }
 8205              		.loc 19 1789 9 is_stmt 1 view .LVU2246
1789:Veno-Echo.cpp ****     }
 8206              		.loc 19 1789 25 is_stmt 0 view .LVU2247
 8207 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8208 0074 0648     		ldr	r0, .L450+20
 8209 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 263


 8210              	.LVL576:
 8211 007a E3E7     		b	.L447
 8212              	.L451:
 8213              		.align	2
 8214              	.L450:
 8215 007c 00000000 		.word	0
 8216 0080 00000000 		.word	.LANCHOR56
 8217 0084 04000000 		.word	.LANCHOR0+4
 8218 0088 04000000 		.word	.LANCHOR1+4
 8219 008c 00000000 		.word	.LANCHOR78
 8220 0090 00000000 		.word	.LANCHOR79
 8221 0094 00000000 		.word	.LANCHOR76
 8222 0098 00000000 		.word	.LANCHOR77
 8223              		.cfi_endproc
 8224              	.LFE4314:
 8226              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8227              		.align	1
 8228              		.p2align 2,,3
 8229              		.global	_Z14Update_Buttonsv
 8230              		.syntax unified
 8231              		.thumb
 8232              		.thumb_func
 8233              		.fpu fpv5-d16
 8235              	_Z14Update_Buttonsv:
 8236              	.LFB4308:
1388:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8237              		.loc 19 1388 1 is_stmt 1 view -0
 8238              		.cfi_startproc
 8239              		@ args = 0, pretend = 0, frame = 0
 8240              		@ frame_needed = 0, uses_anonymous_args = 0
1389:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8241              		.loc 19 1389 5 view .LVU2249
1390:Veno-Echo.cpp ****     static int buttonstate{};
 8242              		.loc 19 1390 5 view .LVU2250
1391:Veno-Echo.cpp **** 
 8243              		.loc 19 1391 5 view .LVU2251
1393:Veno-Echo.cpp ****     Rev_R_sw.update();
 8244              		.loc 19 1393 5 view .LVU2252
1388:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8245              		.loc 19 1388 1 is_stmt 0 view .LVU2253
 8246 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8247              		.cfi_def_cfa_offset 24
 8248              		.cfi_offset 3, -24
 8249              		.cfi_offset 4, -20
 8250              		.cfi_offset 5, -16
 8251              		.cfi_offset 6, -12
 8252              		.cfi_offset 7, -8
 8253              		.cfi_offset 14, -4
1393:Veno-Echo.cpp ****     Rev_R_sw.update();
 8254              		.loc 19 1393 20 view .LVU2254
 8255 0002 6D48     		ldr	r0, .L501
 8256 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8257              	.LVL577:
1394:Veno-Echo.cpp ****     LPF_sw.update();
 8258              		.loc 19 1394 5 is_stmt 1 view .LVU2255
1394:Veno-Echo.cpp ****     LPF_sw.update();
 8259              		.loc 19 1394 20 is_stmt 0 view .LVU2256
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 264


 8260 0008 6C48     		ldr	r0, .L501+4
 8261 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8262              	.LVL578:
1395:Veno-Echo.cpp ****     HPF_sw.update();
 8263              		.loc 19 1395 5 is_stmt 1 view .LVU2257
1395:Veno-Echo.cpp ****     HPF_sw.update();
 8264              		.loc 19 1395 18 is_stmt 0 view .LVU2258
 8265 000e 6C48     		ldr	r0, .L501+8
 8266 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8267              	.LVL579:
1396:Veno-Echo.cpp ****     Tap_Button.update();
 8268              		.loc 19 1396 5 is_stmt 1 view .LVU2259
1399:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8269              		.loc 19 1399 26 is_stmt 0 view .LVU2260
 8270 0014 6B4C     		ldr	r4, .L501+12
1396:Veno-Echo.cpp ****     Tap_Button.update();
 8271              		.loc 19 1396 18 view .LVU2261
 8272 0016 6C48     		ldr	r0, .L501+16
 8273 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8274              	.LVL580:
1397:Veno-Echo.cpp **** 
 8275              		.loc 19 1397 5 is_stmt 1 view .LVU2262
1397:Veno-Echo.cpp **** 
 8276              		.loc 19 1397 22 is_stmt 0 view .LVU2263
 8277 001c 6B48     		ldr	r0, .L501+20
 8278 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8279              	.LVL581:
1399:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8280              		.loc 19 1399 5 is_stmt 1 view .LVU2264
1399:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8281              		.loc 19 1399 26 is_stmt 0 view .LVU2265
 8282 0022 2046     		mov	r0, r4
 8283 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8284              	.LVL582:
1400:Veno-Echo.cpp ****     //TapButton.Debounce();
 8285              		.loc 19 1400 5 is_stmt 1 view .LVU2266
1400:Veno-Echo.cpp ****     //TapButton.Debounce();
 8286              		.loc 19 1400 26 is_stmt 0 view .LVU2267
 8287 0028 6948     		ldr	r0, .L501+24
 8288 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8289              	.LVL583:
1402:Veno-Echo.cpp ****     ClockIn.Debounce();
 8290              		.loc 19 1402 5 is_stmt 1 view .LVU2268
1402:Veno-Echo.cpp ****     ClockIn.Debounce();
 8291              		.loc 19 1402 18 is_stmt 0 view .LVU2269
 8292 002e 6948     		ldr	r0, .L501+28
 8293 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8294              	.LVL584:
1403:Veno-Echo.cpp ****     //gate inputs
 8295              		.loc 19 1403 5 is_stmt 1 view .LVU2270
1403:Veno-Echo.cpp ****     //gate inputs
 8296              		.loc 19 1403 21 is_stmt 0 view .LVU2271
 8297 0034 6848     		ldr	r0, .L501+32
 8298 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8299              	.LVL585:
1405:Veno-Echo.cpp ****     {
 8300              		.loc 19 1405 5 is_stmt 1 view .LVU2272
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 265


 8301              		.loc 1 69 38 view .LVU2273
1405:Veno-Echo.cpp ****     {
 8302              		.loc 19 1405 5 is_stmt 0 view .LVU2274
 8303 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8304 003c 7F2B     		cmp	r3, #127
 8305 003e 00F09F80 		beq	.L492
 8306              	.L453:
1411:Veno-Echo.cpp ****     {
 8307              		.loc 19 1411 5 is_stmt 1 view .LVU2275
 8308              	.LVL586:
 8309              		.loc 1 69 38 view .LVU2276
1411:Veno-Echo.cpp ****     {
 8310              		.loc 19 1411 32 is_stmt 0 view .LVU2277
 8311 0042 634B     		ldr	r3, .L501+24
1411:Veno-Echo.cpp ****     {
 8312              		.loc 19 1411 5 view .LVU2278
 8313 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8314 0046 7F2B     		cmp	r3, #127
 8315 0048 00F09680 		beq	.L493
 8316              	.L454:
1419:Veno-Echo.cpp ****     {
 8317              		.loc 19 1419 5 is_stmt 1 view .LVU2279
1419:Veno-Echo.cpp ****     {
 8318              		.loc 19 1419 28 is_stmt 0 view .LVU2280
 8319 004c 5A48     		ldr	r0, .L501
1421:Veno-Echo.cpp ****         if (buttonstate == 3)
 8320              		.loc 19 1421 21 view .LVU2281
 8321 004e 634C     		ldr	r4, .L501+36
1419:Veno-Echo.cpp ****     {
 8322              		.loc 19 1419 28 view .LVU2282
 8323 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8324              	.LVL587:
1419:Veno-Echo.cpp ****     {
 8325              		.loc 19 1419 5 view .LVU2283
 8326 0054 28B1     		cbz	r0, .L456
1421:Veno-Echo.cpp ****         if (buttonstate == 3)
 8327              		.loc 19 1421 9 is_stmt 1 view .LVU2284
1421:Veno-Echo.cpp ****         if (buttonstate == 3)
 8328              		.loc 19 1421 21 is_stmt 0 view .LVU2285
 8329 0056 2368     		ldr	r3, [r4]
 8330 0058 0133     		adds	r3, r3, #1
1422:Veno-Echo.cpp ****         {
 8331              		.loc 19 1422 9 view .LVU2286
 8332 005a 032B     		cmp	r3, #3
1421:Veno-Echo.cpp ****         if (buttonstate == 3)
 8333              		.loc 19 1421 21 view .LVU2287
 8334 005c 2360     		str	r3, [r4]
1422:Veno-Echo.cpp ****         {
 8335              		.loc 19 1422 9 is_stmt 1 view .LVU2288
 8336 005e 00F09380 		beq	.L494
 8337              	.L456:
1428:Veno-Echo.cpp ****     {
 8338              		.loc 19 1428 5 view .LVU2289
1428:Veno-Echo.cpp ****     {
 8339              		.loc 19 1428 29 is_stmt 0 view .LVU2290
 8340 0062 5548     		ldr	r0, .L501
 8341 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 266


 8342              	.LVL588:
1428:Veno-Echo.cpp ****     {
 8343              		.loc 19 1428 5 view .LVU2291
 8344 0068 10B1     		cbz	r0, .L458
1430:Veno-Echo.cpp ****     }
 8345              		.loc 19 1430 9 is_stmt 1 view .LVU2292
1430:Veno-Echo.cpp ****     }
 8346              		.loc 19 1430 21 is_stmt 0 view .LVU2293
 8347 006a 2368     		ldr	r3, [r4]
 8348 006c 013B     		subs	r3, r3, #1
 8349 006e 2360     		str	r3, [r4]
 8350              	.L458:
1433:Veno-Echo.cpp ****     {
 8351              		.loc 19 1433 5 is_stmt 1 view .LVU2294
1433:Veno-Echo.cpp ****     {
 8352              		.loc 19 1433 28 is_stmt 0 view .LVU2295
 8353 0070 5248     		ldr	r0, .L501+4
 8354 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8355              	.LVL589:
1433:Veno-Echo.cpp ****     {
 8356              		.loc 19 1433 5 view .LVU2296
 8357 0076 28B1     		cbz	r0, .L460
1435:Veno-Echo.cpp ****         if (buttonstate == 3)
 8358              		.loc 19 1435 9 is_stmt 1 view .LVU2297
1435:Veno-Echo.cpp ****         if (buttonstate == 3)
 8359              		.loc 19 1435 21 is_stmt 0 view .LVU2298
 8360 0078 2368     		ldr	r3, [r4]
 8361 007a 0133     		adds	r3, r3, #1
1436:Veno-Echo.cpp ****         {
 8362              		.loc 19 1436 9 view .LVU2299
 8363 007c 032B     		cmp	r3, #3
1435:Veno-Echo.cpp ****         if (buttonstate == 3)
 8364              		.loc 19 1435 21 view .LVU2300
 8365 007e 2360     		str	r3, [r4]
1436:Veno-Echo.cpp ****         {
 8366              		.loc 19 1436 9 is_stmt 1 view .LVU2301
 8367 0080 00F08780 		beq	.L495
 8368              	.L460:
1442:Veno-Echo.cpp ****     {
 8369              		.loc 19 1442 5 view .LVU2302
1442:Veno-Echo.cpp ****     {
 8370              		.loc 19 1442 29 is_stmt 0 view .LVU2303
 8371 0084 4D48     		ldr	r0, .L501+4
 8372 0086 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8373              	.LVL590:
1442:Veno-Echo.cpp ****     {
 8374              		.loc 19 1442 5 view .LVU2304
 8375 008a 10B1     		cbz	r0, .L462
1444:Veno-Echo.cpp ****     }
 8376              		.loc 19 1444 9 is_stmt 1 view .LVU2305
1444:Veno-Echo.cpp ****     }
 8377              		.loc 19 1444 21 is_stmt 0 view .LVU2306
 8378 008c 2368     		ldr	r3, [r4]
 8379 008e 013B     		subs	r3, r3, #1
 8380 0090 2360     		str	r3, [r4]
 8381              	.L462:
1447:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 267


 8382              		.loc 19 1447 5 is_stmt 1 view .LVU2307
1447:Veno-Echo.cpp ****     {
 8383              		.loc 19 1447 30 is_stmt 0 view .LVU2308
 8384 0092 4E48     		ldr	r0, .L501+20
 8385 0094 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8386              	.LVL591:
1447:Veno-Echo.cpp ****     {
 8387              		.loc 19 1447 5 view .LVU2309
 8388 0098 0028     		cmp	r0, #0
 8389 009a 55D1     		bne	.L463
 8390 009c 504D     		ldr	r5, .L501+40
 8391              	.L464:
1471:Veno-Echo.cpp ****     {
 8392              		.loc 19 1471 5 is_stmt 1 view .LVU2310
1471:Veno-Echo.cpp ****     {
 8393              		.loc 19 1471 31 is_stmt 0 view .LVU2311
 8394 009e 4B48     		ldr	r0, .L501+20
 8395 00a0 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8396              	.LVL592:
1471:Veno-Echo.cpp ****     {
 8397              		.loc 19 1471 5 view .LVU2312
 8398 00a4 38B1     		cbz	r0, .L468
1473:Veno-Echo.cpp ****         buttonstate -= 1;
 8399              		.loc 19 1473 9 is_stmt 1 view .LVU2313
1474:Veno-Echo.cpp ****         mute = false;
 8400              		.loc 19 1474 21 is_stmt 0 view .LVU2314
 8401 00a6 2368     		ldr	r3, [r4]
1473:Veno-Echo.cpp ****         buttonstate -= 1;
 8402              		.loc 19 1473 15 view .LVU2315
 8403 00a8 0022     		movs	r2, #0
 8404 00aa 4E48     		ldr	r0, .L501+44
1474:Veno-Echo.cpp ****         mute = false;
 8405              		.loc 19 1474 21 view .LVU2316
 8406 00ac 013B     		subs	r3, r3, #1
1475:Veno-Echo.cpp ****     }
 8407              		.loc 19 1475 14 view .LVU2317
 8408 00ae 4E49     		ldr	r1, .L501+48
1473:Veno-Echo.cpp ****         buttonstate -= 1;
 8409              		.loc 19 1473 15 view .LVU2318
 8410 00b0 0270     		strb	r2, [r0]
1474:Veno-Echo.cpp ****         mute = false;
 8411              		.loc 19 1474 9 is_stmt 1 view .LVU2319
1474:Veno-Echo.cpp ****         mute = false;
 8412              		.loc 19 1474 21 is_stmt 0 view .LVU2320
 8413 00b2 2360     		str	r3, [r4]
1475:Veno-Echo.cpp ****     }
 8414              		.loc 19 1475 9 is_stmt 1 view .LVU2321
1475:Veno-Echo.cpp ****     }
 8415              		.loc 19 1475 14 is_stmt 0 view .LVU2322
 8416 00b4 0A70     		strb	r2, [r1]
 8417              	.L468:
1478:Veno-Echo.cpp ****     {
 8418              		.loc 19 1478 5 is_stmt 1 view .LVU2323
1478:Veno-Echo.cpp ****     {
 8419              		.loc 19 1478 28 is_stmt 0 view .LVU2324
 8420 00b6 4548     		ldr	r0, .L501+20
 8421 00b8 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 268


 8422              	.LVL593:
1478:Veno-Echo.cpp ****     {
 8423              		.loc 19 1478 5 view .LVU2325
 8424 00bc A0B9     		cbnz	r0, .L496
 8425              	.L470:
1486:Veno-Echo.cpp ****     {
 8426              		.loc 19 1486 5 is_stmt 1 view .LVU2326
 8427 00be 2368     		ldr	r3, [r4]
 8428 00c0 032B     		cmp	r3, #3
 8429 00c2 1ED0     		beq	.L497
 8430              	.L473:
1508:Veno-Echo.cpp **** 
 8431              		.loc 19 1508 5 view .LVU2327
1508:Veno-Echo.cpp **** 
 8432              		.loc 19 1508 31 is_stmt 0 view .LVU2328
 8433 00c4 434B     		ldr	r3, .L501+28
 8434 00c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8435              	.LBB1700:
 8436              	.LBI1700:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8437              		.loc 1 75 17 is_stmt 1 view .LVU2329
 8438              	.LVL594:
 8439              	.LBB1701:
 8440              		.loc 1 75 35 view .LVU2330
 8441              		.loc 1 75 52 is_stmt 0 view .LVU2331
 8442 00c8 A3F1FF02 		sub	r2, r3, #255
 8443              	.LBE1701:
 8444              	.LBE1700:
1510:Veno-Echo.cpp ****     {
 8445              		.loc 19 1510 5 view .LVU2332
 8446 00cc 7F2B     		cmp	r3, #127
 8447              	.LBB1703:
 8448              	.LBB1702:
 8449              		.loc 1 75 52 view .LVU2333
 8450 00ce B2FA82F2 		clz	r2, r2
 8451 00d2 4FEA5212 		lsr	r2, r2, #5
 8452 00d6 2A70     		strb	r2, [r5]
 8453              	.LBE1702:
 8454              	.LBE1703:
1510:Veno-Echo.cpp ****     {
 8455              		.loc 19 1510 5 is_stmt 1 view .LVU2334
 8456              	.LVL595:
  69:../libdaisy/src/hid/switch.h **** 
 8457              		.loc 1 69 38 view .LVU2335
1510:Veno-Echo.cpp ****     {
 8458              		.loc 19 1510 5 is_stmt 0 view .LVU2336
 8459 00d8 00D0     		beq	.L498
1519:Veno-Echo.cpp **** 
 8460              		.loc 19 1519 1 view .LVU2337
 8461 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8462              	.L498:
1515:Veno-Echo.cpp ****         delayR_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 269


 8463              		.loc 19 1515 9 is_stmt 1 view .LVU2338
1515:Veno-Echo.cpp ****         delayR_flag = true;
 8464              		.loc 19 1515 21 is_stmt 0 view .LVU2339
 8465 00dc 0123     		movs	r3, #1
 8466 00de 4349     		ldr	r1, .L501+52
1516:Veno-Echo.cpp ****     }
 8467              		.loc 19 1516 21 view .LVU2340
 8468 00e0 434A     		ldr	r2, .L501+56
1515:Veno-Echo.cpp ****         delayR_flag = true;
 8469              		.loc 19 1515 21 view .LVU2341
 8470 00e2 0B70     		strb	r3, [r1]
1516:Veno-Echo.cpp ****     }
 8471              		.loc 19 1516 9 is_stmt 1 view .LVU2342
1516:Veno-Echo.cpp ****     }
 8472              		.loc 19 1516 21 is_stmt 0 view .LVU2343
 8473 00e4 1370     		strb	r3, [r2]
1519:Veno-Echo.cpp **** 
 8474              		.loc 19 1519 1 view .LVU2344
 8475 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8476              	.LVL596:
 8477              	.L496:
1480:Veno-Echo.cpp ****         {
 8478              		.loc 19 1480 9 is_stmt 1 view .LVU2345
1480:Veno-Echo.cpp ****         {
 8479              		.loc 19 1480 29 is_stmt 0 view .LVU2346
 8480 00e8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8481              	.LVL597:
1480:Veno-Echo.cpp ****         {
 8482              		.loc 19 1480 32 view .LVU2347
 8483 00ec 414B     		ldr	r3, .L501+60
 8484 00ee 1B68     		ldr	r3, [r3]
 8485 00f0 C01A     		subs	r0, r0, r3
1480:Veno-Echo.cpp ****         {
 8486              		.loc 19 1480 9 view .LVU2348
 8487 00f2 3228     		cmp	r0, #50
 8488 00f4 E3D9     		bls	.L470
1482:Veno-Echo.cpp ****         } 
 8489              		.loc 19 1482 13 is_stmt 1 view .LVU2349
1482:Veno-Echo.cpp ****         } 
 8490              		.loc 19 1482 19 is_stmt 0 view .LVU2350
 8491 00f6 3B4B     		ldr	r3, .L501+44
 8492 00f8 0122     		movs	r2, #1
 8493 00fa 1A70     		strb	r2, [r3]
1486:Veno-Echo.cpp ****     {
 8494              		.loc 19 1486 5 is_stmt 1 view .LVU2351
 8495 00fc 2368     		ldr	r3, [r4]
 8496 00fe 032B     		cmp	r3, #3
 8497 0100 E0D1     		bne	.L473
 8498              	.L497:
1495:Veno-Echo.cpp ****             {
 8499              		.loc 19 1495 13 view .LVU2352
1495:Veno-Echo.cpp ****             {
 8500              		.loc 19 1495 36 is_stmt 0 view .LVU2353
 8501 0102 3D4F     		ldr	r7, .L501+64
1495:Veno-Echo.cpp ****             {
 8502              		.loc 19 1495 33 view .LVU2354
 8503 0104 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 270


 8504              	.LVL598:
1495:Veno-Echo.cpp ****             {
 8505              		.loc 19 1495 13 view .LVU2355
 8506 0108 40F6B833 		movw	r3, #3000
1495:Veno-Echo.cpp ****             {
 8507              		.loc 19 1495 36 view .LVU2356
 8508 010c 3A68     		ldr	r2, [r7]
 8509 010e 801A     		subs	r0, r0, r2
1495:Veno-Echo.cpp ****             {
 8510              		.loc 19 1495 13 view .LVU2357
 8511 0110 9842     		cmp	r0, r3
 8512 0112 D7D9     		bls	.L473
1497:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8513              		.loc 19 1497 17 is_stmt 1 view .LVU2358
1497:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8514              		.loc 19 1497 32 is_stmt 0 view .LVU2359
 8515 0114 2848     		ldr	r0, .L501
 8516 0116 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8517              	.LVL599:
1498:Veno-Echo.cpp ****                 ResetAllLEDs();
 8518              		.loc 19 1498 17 is_stmt 1 view .LVU2360
1498:Veno-Echo.cpp ****                 ResetAllLEDs();
 8519              		.loc 19 1498 32 is_stmt 0 view .LVU2361
 8520 011a 2848     		ldr	r0, .L501+4
 8521 011c FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8522              	.LVL600:
1499:Veno-Echo.cpp ****                 //don't let reset or shift update
 8523              		.loc 19 1499 17 is_stmt 1 view .LVU2362
1503:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8524              		.loc 19 1503 29 is_stmt 0 view .LVU2363
 8525 0120 364E     		ldr	r6, .L501+68
1499:Veno-Echo.cpp ****                 //don't let reset or shift update
 8526              		.loc 19 1499 29 view .LVU2364
 8527 0122 FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8528              	.LVL601:
1501:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8529              		.loc 19 1501 17 is_stmt 1 view .LVU2365
1501:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8530              		.loc 19 1501 23 is_stmt 0 view .LVU2366
 8531 0126 2F4B     		ldr	r3, .L501+44
 8532 0128 0022     		movs	r2, #0
1502:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8533              		.loc 19 1502 30 view .LVU2367
 8534 012a 3448     		ldr	r0, .L501+68
1503:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8535              		.loc 19 1503 29 view .LVU2368
 8536 012c 344C     		ldr	r4, .L501+72
1501:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8537              		.loc 19 1501 23 view .LVU2369
 8538 012e 1A70     		strb	r2, [r3]
1502:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8539              		.loc 19 1502 17 is_stmt 1 view .LVU2370
1502:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8540              		.loc 19 1502 30 is_stmt 0 view .LVU2371
 8541 0130 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8542              	.LVL602:
1503:Veno-Echo.cpp ****                 resetTime = System::GetNow();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 271


 8543              		.loc 19 1503 17 is_stmt 1 view .LVU2372
1503:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8544              		.loc 19 1503 29 is_stmt 0 view .LVU2373
 8545 0134 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8546 0136 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8547 0138 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 8548 013c 84E80F00 		stm	r4, {r0, r1, r2, r3}
1504:Veno-Echo.cpp ****             }
 8549              		.loc 19 1504 17 is_stmt 1 view .LVU2374
1504:Veno-Echo.cpp ****             }
 8550              		.loc 19 1504 43 is_stmt 0 view .LVU2375
 8551 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8552              	.LVL603:
1504:Veno-Echo.cpp ****             }
 8553              		.loc 19 1504 27 view .LVU2376
 8554 0144 3860     		str	r0, [r7]
 8555 0146 BDE7     		b	.L473
 8556              	.L463:
1449:Veno-Echo.cpp ****         {
 8557              		.loc 19 1449 9 is_stmt 1 view .LVU2377
1449:Veno-Echo.cpp ****         {
 8558              		.loc 19 1449 25 is_stmt 0 view .LVU2378
 8559 0148 2E48     		ldr	r0, .L501+76
 8560 014a FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8561              	.LVL604:
1449:Veno-Echo.cpp ****         {
 8562              		.loc 19 1449 9 view .LVU2379
 8563 014e 60BB     		cbnz	r0, .L499
 8564              	.L465:
1453:Veno-Echo.cpp ****         
 8565              		.loc 19 1453 9 is_stmt 1 view .LVU2380
1455:Veno-Echo.cpp ****         {
 8566              		.loc 19 1455 9 is_stmt 0 view .LVU2381
 8567 0150 234D     		ldr	r5, .L501+40
1453:Veno-Echo.cpp ****         
 8568              		.loc 19 1453 33 view .LVU2382
 8569 0152 2D48     		ldr	r0, .L501+80
 8570 0154 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8571              	.LVL605:
1455:Veno-Echo.cpp ****         {
 8572              		.loc 19 1455 9 is_stmt 1 view .LVU2383
 8573 0158 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8574 015a FBB9     		cbnz	r3, .L500
 8575              	.L466:
1461:Veno-Echo.cpp ****         buttonstate += 1;
 8576              		.loc 19 1461 9 view .LVU2384
1461:Veno-Echo.cpp ****         buttonstate += 1;
 8577              		.loc 19 1461 35 is_stmt 0 view .LVU2385
 8578 015c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8579              	.LVL606:
1462:Veno-Echo.cpp ****         
 8580              		.loc 19 1462 21 view .LVU2386
 8581 0160 2368     		ldr	r3, [r4]
1461:Veno-Echo.cpp ****         buttonstate += 1;
 8582              		.loc 19 1461 19 view .LVU2387
 8583 0162 244A     		ldr	r2, .L501+60
1462:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 272


 8584              		.loc 19 1462 21 view .LVU2388
 8585 0164 0133     		adds	r3, r3, #1
1461:Veno-Echo.cpp ****         buttonstate += 1;
 8586              		.loc 19 1461 19 view .LVU2389
 8587 0166 1060     		str	r0, [r2]
1462:Veno-Echo.cpp ****         
 8588              		.loc 19 1462 9 is_stmt 1 view .LVU2390
1464:Veno-Echo.cpp ****         {
 8589              		.loc 19 1464 9 is_stmt 0 view .LVU2391
 8590 0168 032B     		cmp	r3, #3
1462:Veno-Echo.cpp ****         
 8591              		.loc 19 1462 21 view .LVU2392
 8592 016a 2360     		str	r3, [r4]
1464:Veno-Echo.cpp ****         {
 8593              		.loc 19 1464 9 is_stmt 1 view .LVU2393
 8594 016c 97D1     		bne	.L464
1466:Veno-Echo.cpp ****         }
 8595              		.loc 19 1466 13 view .LVU2394
1466:Veno-Echo.cpp ****         }
 8596              		.loc 19 1466 39 is_stmt 0 view .LVU2395
 8597 016e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8598              	.LVL607:
1466:Veno-Echo.cpp ****         }
 8599              		.loc 19 1466 23 view .LVU2396
 8600 0172 214B     		ldr	r3, .L501+64
 8601 0174 1860     		str	r0, [r3]
 8602 0176 92E7     		b	.L464
 8603              	.L493:
1413:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8604              		.loc 19 1413 9 is_stmt 1 view .LVU2397
1413:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8605              		.loc 19 1413 24 is_stmt 0 view .LVU2398
 8606 0178 1048     		ldr	r0, .L501+4
 8607 017a FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8608              	.LVL608:
 8609 017e 65E7     		b	.L454
 8610              	.LVL609:
 8611              	.L492:
1407:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8612              		.loc 19 1407 9 is_stmt 1 view .LVU2399
1407:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8613              		.loc 19 1407 24 is_stmt 0 view .LVU2400
 8614 0180 0D48     		ldr	r0, .L501
 8615 0182 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8616              	.LVL610:
 8617 0186 5CE7     		b	.L453
 8618              	.LVL611:
 8619              	.L494:
1424:Veno-Echo.cpp ****         }
 8620              		.loc 19 1424 13 is_stmt 1 view .LVU2401
1424:Veno-Echo.cpp ****         }
 8621              		.loc 19 1424 39 is_stmt 0 view .LVU2402
 8622 0188 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8623              	.LVL612:
1424:Veno-Echo.cpp ****         }
 8624              		.loc 19 1424 23 view .LVU2403
 8625 018c 1A4B     		ldr	r3, .L501+64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 273


 8626 018e 1860     		str	r0, [r3]
 8627 0190 67E7     		b	.L456
 8628              	.L495:
1438:Veno-Echo.cpp ****         }
 8629              		.loc 19 1438 13 is_stmt 1 view .LVU2404
1438:Veno-Echo.cpp ****         }
 8630              		.loc 19 1438 39 is_stmt 0 view .LVU2405
 8631 0192 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8632              	.LVL613:
1438:Veno-Echo.cpp ****         }
 8633              		.loc 19 1438 23 view .LVU2406
 8634 0196 184B     		ldr	r3, .L501+64
 8635 0198 1860     		str	r0, [r3]
 8636 019a 73E7     		b	.L460
 8637              	.L500:
1457:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8638              		.loc 19 1457 13 is_stmt 1 view .LVU2407
1457:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8639              		.loc 19 1457 39 is_stmt 0 view .LVU2408
 8640 019c 1B48     		ldr	r0, .L501+84
 8641 019e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8642              	.LVL614:
1458:Veno-Echo.cpp ****         }
 8643              		.loc 19 1458 13 is_stmt 1 view .LVU2409
1458:Veno-Echo.cpp ****         }
 8644              		.loc 19 1458 39 is_stmt 0 view .LVU2410
 8645 01a2 1B48     		ldr	r0, .L501+88
 8646 01a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8647              	.LVL615:
 8648 01a8 D8E7     		b	.L466
 8649              	.L499:
1451:Veno-Echo.cpp ****         }
 8650              		.loc 19 1451 13 is_stmt 1 view .LVU2411
1451:Veno-Echo.cpp ****         }
 8651              		.loc 19 1451 35 is_stmt 0 view .LVU2412
 8652 01aa 1648     		ldr	r0, .L501+76
 8653 01ac FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8654              	.LVL616:
 8655 01b0 1548     		ldr	r0, .L501+80
 8656 01b2 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8657              	.LVL617:
 8658 01b6 CBE7     		b	.L465
 8659              	.L502:
 8660              		.align	2
 8661              	.L501:
 8662 01b8 00000000 		.word	.LANCHOR78
 8663 01bc 00000000 		.word	.LANCHOR79
 8664 01c0 00000000 		.word	.LANCHOR76
 8665 01c4 00000000 		.word	.LANCHOR81
 8666 01c8 00000000 		.word	.LANCHOR77
 8667 01cc 00000000 		.word	.LANCHOR80
 8668 01d0 00000000 		.word	.LANCHOR82
 8669 01d4 00000000 		.word	.LANCHOR83
 8670 01d8 00000000 		.word	.LANCHOR54
 8671 01dc 00000000 		.word	.LANCHOR93
 8672 01e0 00000000 		.word	.LANCHOR58
 8673 01e4 00000000 		.word	.LANCHOR8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 274


 8674 01e8 00000000 		.word	.LANCHOR96
 8675 01ec 00000000 		.word	.LANCHOR61
 8676 01f0 00000000 		.word	.LANCHOR62
 8677 01f4 00000000 		.word	.LANCHOR95
 8678 01f8 00000000 		.word	.LANCHOR94
 8679 01fc 00000000 		.word	.LANCHOR92
 8680 0200 00000000 		.word	.LANCHOR19
 8681 0204 00000000 		.word	.LANCHOR57
 8682 0208 00000000 		.word	.LANCHOR56
 8683 020c 04000000 		.word	.LANCHOR0+4
 8684 0210 04000000 		.word	.LANCHOR1+4
 8685              		.cfi_endproc
 8686              	.LFE4308:
 8688              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8689              		.align	1
 8690              		.p2align 2,,3
 8691              		.syntax unified
 8692              		.thumb
 8693              		.thumb_func
 8694              		.fpu fpv5-d16
 8696              	_ZL13AudioCallbackPfS_j:
 8697              	.LVL618:
 8698              	.LFB4288:
 242:Veno-Echo.cpp **** 
 8699              		.loc 19 242 1 is_stmt 1 view -0
 8700              		.cfi_startproc
 8701              		@ args = 0, pretend = 0, frame = 72
 8702              		@ frame_needed = 0, uses_anonymous_args = 0
 253:Veno-Echo.cpp **** 
 8703              		.loc 19 253 1 view .LVU2414
 271:Veno-Echo.cpp **** 
 8704              		.loc 19 271 1 view .LVU2415
 271:Veno-Echo.cpp **** 
 8705              		.loc 19 271 9 is_stmt 0 view .LVU2416
 8706 0000 DFF894C0 		ldr	ip, .L620+8
 271:Veno-Echo.cpp **** 
 8707              		.loc 19 271 20 view .LVU2417
 8708 0004 DCF80030 		ldr	r3, [ip]
 242:Veno-Echo.cpp **** 
 8709              		.loc 19 242 1 view .LVU2418
 8710 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8711              		.cfi_def_cfa_offset 36
 8712              		.cfi_offset 4, -36
 8713              		.cfi_offset 5, -32
 8714              		.cfi_offset 6, -28
 8715              		.cfi_offset 7, -24
 8716              		.cfi_offset 8, -20
 8717              		.cfi_offset 9, -16
 8718              		.cfi_offset 10, -12
 8719              		.cfi_offset 11, -8
 8720              		.cfi_offset 14, -4
 271:Veno-Echo.cpp **** 
 8721              		.loc 19 271 20 view .LVU2419
 8722 000c 0133     		adds	r3, r3, #1
 271:Veno-Echo.cpp **** 
 8723              		.loc 19 271 25 view .LVU2420
 8724 000e 204C     		ldr	r4, .L620
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 275


 242:Veno-Echo.cpp **** 
 8725              		.loc 19 242 1 view .LVU2421
 8726 0010 0646     		mov	r6, r0
 8727 0012 1546     		mov	r5, r2
 271:Veno-Echo.cpp **** 
 8728              		.loc 19 271 25 view .LVU2422
 8729 0014 84FB0302 		smull	r0, r2, r4, r3
 8730              	.LVL619:
 271:Veno-Echo.cpp **** 
 8731              		.loc 19 271 25 view .LVU2423
 8732 0018 DC17     		asrs	r4, r3, #31
 242:Veno-Echo.cpp **** 
 8733              		.loc 19 242 1 view .LVU2424
 8734 001a 0F46     		mov	r7, r1
 8735              	.LBB1793:
 8736              	.LBB1794:
 8737              	.LBB1795:
 8738              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 276


  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 277


  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 278


 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 279


 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 280


 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 281


 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 282


 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 8739              		.loc 23 419 24 view .LVU2425
 8740 001c 1D49     		ldr	r1, .L620+4
 8741              	.LVL620:
 8742              		.loc 23 419 24 view .LVU2426
 8743              	.LBE1795:
 8744              	.LBE1794:
 8745              	.LBE1793:
 271:Veno-Echo.cpp **** 
 8746              		.loc 19 271 25 view .LVU2427
 8747 001e 1A44     		add	r2, r2, r3
 8748 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8749 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8750 0028 1B1B     		subs	r3, r3, r4
 242:Veno-Echo.cpp **** 
 8751              		.loc 19 242 1 view .LVU2428
 8752 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8753              		.cfi_def_cfa_offset 92
 8754              		.cfi_offset 80, -92
 8755              		.cfi_offset 81, -88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 283


 8756              		.cfi_offset 82, -84
 8757              		.cfi_offset 83, -80
 8758              		.cfi_offset 84, -76
 8759              		.cfi_offset 85, -72
 8760              		.cfi_offset 86, -68
 8761              		.cfi_offset 87, -64
 8762              		.cfi_offset 88, -60
 8763              		.cfi_offset 89, -56
 8764              		.cfi_offset 90, -52
 8765              		.cfi_offset 91, -48
 8766              		.cfi_offset 92, -44
 8767              		.cfi_offset 93, -40
 271:Veno-Echo.cpp **** 
 8768              		.loc 19 271 9 view .LVU2429
 8769 002e CCF80030 		str	r3, [ip]
 273:Veno-Echo.cpp **** {
 8770              		.loc 19 273 1 is_stmt 1 view .LVU2430
 8771              	.LVL621:
 8772              	.LBB1800:
 8773              	.LBI1793:
 8774              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 284


  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8775              		.loc 24 87 5 view .LVU2431
 8776              	.LBE1800:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8777              		.loc 24 88 7 view .LVU2432
 8778              	.LBB1801:
 8779              	.LBB1798:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 285


 8780              	.LBI1794:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8781              		.loc 23 413 7 view .LVU2433
 8782              	.LBB1796:
 8783              		.loc 23 419 24 is_stmt 0 view .LVU2434
 8784 0032 BFF35B8F 		dmb	ish
 8785 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8786              	.LBE1796:
 8787              	.LBE1798:
 8788              	.LBE1801:
 242:Veno-Echo.cpp **** 
 8789              		.loc 19 242 1 view .LVU2435
 8790 0038 93B0     		sub	sp, sp, #76
 8791              		.cfi_def_cfa_offset 168
 8792              	.LBB1802:
 8793              	.LBB1799:
 8794              	.LBB1797:
 8795              		.loc 23 419 24 view .LVU2436
 8796 003a BFF35B8F 		dmb	ish
 8797              	.LBE1797:
 8798              	.LBE1799:
 8799              	.LBE1802:
 273:Veno-Echo.cpp **** {
 8800              		.loc 19 273 1 view .LVU2437
 8801 003e B3B9     		cbnz	r3, .L504
 286:Veno-Echo.cpp ****         {
 8802              		.loc 19 286 9 is_stmt 1 view .LVU2438
 8803 0040 DCF80030 		ldr	r3, [ip]
 8804 0044 0E2B     		cmp	r3, #14
 8805 0046 12D8     		bhi	.L504
 8806 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8807              	.L506:
 8808 004c 2606     		.2byte	(.L520-.L506)/2
 8809 004e 1D06     		.2byte	(.L519-.L506)/2
 8810 0050 1906     		.2byte	(.L518-.L506)/2
 8811 0052 1006     		.2byte	(.L517-.L506)/2
 8812 0054 0C06     		.2byte	(.L516-.L506)/2
 8813 0056 0306     		.2byte	(.L515-.L506)/2
 8814 0058 FF05     		.2byte	(.L514-.L506)/2
 8815 005a F605     		.2byte	(.L513-.L506)/2
 8816 005c F205     		.2byte	(.L512-.L506)/2
 8817 005e E905     		.2byte	(.L511-.L506)/2
 8818 0060 E505     		.2byte	(.L510-.L506)/2
 8819 0062 DC05     		.2byte	(.L509-.L506)/2
 8820 0064 D805     		.2byte	(.L508-.L506)/2
 8821 0066 0F00     		.2byte	(.L507-.L506)/2
 8822 0068 D405     		.2byte	(.L505-.L506)/2
 8823              		.p2align 1
 8824              	.L507:
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 8825              		.loc 19 341 13 view .LVU2439
 342:Veno-Echo.cpp ****             break;
 8826              		.loc 19 342 17 view .LVU2440
 342:Veno-Echo.cpp ****             break;
 8827              		.loc 19 342 37 is_stmt 0 view .LVU2441
 8828 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8829              	.LVL622:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 286


 343:Veno-Echo.cpp **** 
 8830              		.loc 19 343 13 is_stmt 1 view .LVU2442
 8831              	.L504:
 8832              	.LBB1803:
 351:Veno-Echo.cpp ****     {   
 8833              		.loc 19 351 25 discriminator 1 view .LVU2443
 8834 006e 002D     		cmp	r5, #0
 8835 0070 00F0A885 		beq	.L503
 351:Veno-Echo.cpp ****     {   
 8836              		.loc 19 351 25 is_stmt 0 view .LVU2444
 8837 0074 0023     		movs	r3, #0
 8838 0076 013D     		subs	r5, r5, #1
 8839              	.LVL623:
 351:Veno-Echo.cpp ****     {   
 8840              		.loc 19 351 25 view .LVU2445
 8841 0078 DFF82080 		ldr	r8, .L620+12
 8842 007c B346     		mov	fp, r6
 8843 007e 0293     		str	r3, [sp, #8]
 8844 0080 25F00103 		bic	r3, r5, #1
 8845 0084 DFF81890 		ldr	r9, .L620+16
 8846 0088 0097     		str	r7, [sp]
 8847 008a 0593     		str	r3, [sp, #20]
 8848 008c 8FE0     		b	.L576
 8849              	.L621:
 8850 008e 00BF     		.align	2
 8851              	.L620:
 8852 0090 89888888 		.word	-2004318071
 8853 0094 00000000 		.word	.LANCHOR98
 8854 0098 00000000 		.word	.LANCHOR97
 8855 009c 00000000 		.word	.LANCHOR113
 8856 00a0 00000000 		.word	.LANCHOR114
 8857              	.LVL624:
 8858              	.L619:
 8859              	.LBB1804:
 8860              	.LBB1805:
 8861              	.LBB1806:
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8862              		.loc 19 1801 10 is_stmt 1 view .LVU2446
 8863 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1802:Veno-Echo.cpp ****     else
 8864              		.loc 19 1802 19 is_stmt 0 view .LVU2447
 8865 00a8 B4EE678A 		vcmp.f32	s16, s15
 8866 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8867 00b0 48BF     		it	mi
 8868 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8869              	.LVL625:
 8870              	.L558:
1806:Veno-Echo.cpp **** }
 8871              		.loc 19 1806 5 is_stmt 1 view .LVU2448
1806:Veno-Echo.cpp **** }
 8872              		.loc 19 1806 5 is_stmt 0 view .LVU2449
 8873              	.LBE1806:
 8874              	.LBE1805:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8875              		.loc 19 490 9 is_stmt 1 view .LVU2450
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8876              		.loc 19 490 42 is_stmt 0 view .LVU2451
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 287


 8877 00b6 D848     		ldr	r0, .L622
 8878 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8879              	.LVL626:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8880              		.loc 19 490 21 view .LVU2452
 8881 00bc 11A9     		add	r1, sp, #68
 8882 00be D748     		ldr	r0, .L622+4
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8883              		.loc 19 490 42 view .LVU2453
 8884 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8885              		.loc 19 490 21 view .LVU2454
 8886 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8887              	.LVL627:
 491:Veno-Echo.cpp **** 
 8888              		.loc 19 491 9 is_stmt 1 view .LVU2455
 491:Veno-Echo.cpp **** 
 8889              		.loc 19 491 42 is_stmt 0 view .LVU2456
 8890 00c8 D548     		ldr	r0, .L622+8
 8891 00ca B0EE480A 		vmov.f32	s0, s16
 8892 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8893              	.LVL628:
 491:Veno-Echo.cpp **** 
 8894              		.loc 19 491 21 view .LVU2457
 8895 00d2 11A9     		add	r1, sp, #68
 8896 00d4 D348     		ldr	r0, .L622+12
 491:Veno-Echo.cpp **** 
 8897              		.loc 19 491 42 view .LVU2458
 8898 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 491:Veno-Echo.cpp **** 
 8899              		.loc 19 491 21 view .LVU2459
 8900 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8901              	.LVL629:
 494:Veno-Echo.cpp ****         float mixR;
 8902              		.loc 19 494 9 is_stmt 1 view .LVU2460
 495:Veno-Echo.cpp **** 
 8903              		.loc 19 495 9 view .LVU2461
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8904              		.loc 19 497 9 view .LVU2462
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8905              		.loc 19 497 53 is_stmt 0 view .LVU2463
 8906 00de 09AA     		add	r2, sp, #36
 8907 00e0 08A9     		add	r1, sp, #32
 8908 00e2 D148     		ldr	r0, .L622+16
 8909 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8910              	.LVL630:
 498:Veno-Echo.cpp **** 
 8911              		.loc 19 498 53 view .LVU2464
 8912 00e8 08AA     		add	r2, sp, #32
 8913 00ea 09A9     		add	r1, sp, #36
 8914 00ec CE48     		ldr	r0, .L622+16
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8915              		.loc 19 497 81 view .LVU2465
 8916 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 498:Veno-Echo.cpp **** 
 8917              		.loc 19 498 9 is_stmt 1 view .LVU2466
 498:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 288


 8918              		.loc 19 498 53 is_stmt 0 view .LVU2467
 8919 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8920              	.LVL631:
 8921              	.LBB1808:
 8922              	.LBB1809:
1799:Veno-Echo.cpp ****         returnval = limit;
 8923              		.loc 19 1799 5 view .LVU2468
 8924 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8925              	.LBE1809:
 8926              	.LBE1808:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8927              		.loc 19 501 38 view .LVU2469
 8928 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8929              		.loc 19 501 9 is_stmt 1 view .LVU2470
 8930              	.LVL632:
 8931              	.LBB1812:
 8932              	.LBI1808:
1796:Veno-Echo.cpp **** {
 8933              		.loc 19 1796 7 view .LVU2471
 8934              	.LBB1810:
1798:Veno-Echo.cpp ****     if (input > limit)
 8935              		.loc 19 1798 5 view .LVU2472
1799:Veno-Echo.cpp ****         returnval = limit;
 8936              		.loc 19 1799 5 view .LVU2473
 8937 00fe F4EEC77A 		vcmpe.f32	s15, s14
 8938 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8939 0106 00F30285 		bgt	.L588
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8940              		.loc 19 1801 10 view .LVU2474
 8941 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1802:Veno-Echo.cpp ****     else
 8942              		.loc 19 1802 19 is_stmt 0 view .LVU2475
 8943 010e F4EE477A 		vcmp.f32	s15, s14
 8944 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8945 0116 48BF     		it	mi
 8946 0118 F0EE477A 		vmovmi.f32	s15, s14
 8947              	.LVL633:
 8948              	.L560:
1806:Veno-Echo.cpp **** }
 8949              		.loc 19 1806 5 is_stmt 1 view .LVU2476
1806:Veno-Echo.cpp **** }
 8950              		.loc 19 1806 5 is_stmt 0 view .LVU2477
 8951              	.LBE1810:
 8952              	.LBE1812:
 8953              	.LBB1813:
 8954              	.LBB1814:
1799:Veno-Echo.cpp ****         returnval = limit;
 8955              		.loc 19 1799 5 view .LVU2478
 8956 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8957              	.LBE1814:
 8958              	.LBE1813:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8959              		.loc 19 501 27 view .LVU2479
 8960 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 502:Veno-Echo.cpp **** 
 8961              		.loc 19 502 9 is_stmt 1 view .LVU2480
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 289


 8962              	.LVL634:
 8963              	.LBB1818:
 8964              	.LBI1813:
1796:Veno-Echo.cpp **** {
 8965              		.loc 19 1796 7 view .LVU2481
 8966              	.LBB1815:
1798:Veno-Echo.cpp ****     if (input > limit)
 8967              		.loc 19 1798 5 view .LVU2482
1799:Veno-Echo.cpp ****         returnval = limit;
 8968              		.loc 19 1799 5 view .LVU2483
 8969 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8970 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8971 012c 00F35784 		bgt	.L589
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8972              		.loc 19 1801 10 view .LVU2484
 8973 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8974              	.LBE1815:
 8975              	.LBE1818:
 8976              	.LBB1819:
 504:Veno-Echo.cpp **** {
 8977              		.loc 19 504 1 is_stmt 0 view .LVU2485
 8978 0134 BD4B     		ldr	r3, .L622+20
 8979 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8980              	.LBE1819:
 8981              	.LBB1841:
 8982              	.LBB1816:
1802:Veno-Echo.cpp ****     else
 8983              		.loc 19 1802 19 view .LVU2486
 8984 0138 B4EE470A 		vcmp.f32	s0, s14
 8985 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8986 0140 48BF     		it	mi
 8987 0142 B0EE470A 		vmovmi.f32	s0, s14
 8988              	.LVL635:
1806:Veno-Echo.cpp **** }
 8989              		.loc 19 1806 5 is_stmt 1 view .LVU2487
1806:Veno-Echo.cpp **** }
 8990              		.loc 19 1806 5 is_stmt 0 view .LVU2488
 8991              	.LBE1816:
 8992              	.LBE1841:
 502:Veno-Echo.cpp **** 
 8993              		.loc 19 502 27 view .LVU2489
 8994 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 504:Veno-Echo.cpp **** {
 8995              		.loc 19 504 1 is_stmt 1 view .LVU2490
 8996              	.LBB1842:
 8997 014a 002B     		cmp	r3, #0
 8998 014c 40F05084 		bne	.L616
 8999              	.LVL636:
 9000              	.L564:
 504:Veno-Echo.cpp **** {
 9001              		.loc 19 504 1 is_stmt 0 view .LVU2491
 9002              	.LBE1842:
 545:Veno-Echo.cpp ****         {
 9003              		.loc 19 545 9 is_stmt 1 view .LVU2492
 545:Veno-Echo.cpp ****         {
 9004              		.loc 19 545 19 is_stmt 0 view .LVU2493
 9005 0150 B74B     		ldr	r3, .L622+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 290


 545:Veno-Echo.cpp ****         {
 9006              		.loc 19 545 9 view .LVU2494
 9007 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 545:Veno-Echo.cpp ****         {
 9008              		.loc 19 545 19 view .LVU2495
 9009 0156 93ED007A 		vldr.32	s14, [r3]
 545:Veno-Echo.cpp ****         {
 9010              		.loc 19 545 9 view .LVU2496
 9011 015a B4EEE67A 		vcmpe.f32	s14, s13
 9012 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9013 0162 40F12A84 		bpl	.L610
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9014              		.loc 19 547 13 is_stmt 1 view .LVU2497
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9015              		.loc 19 547 34 is_stmt 0 view .LVU2498
 9016 0166 37EE077A 		vadd.f32	s14, s14, s14
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9017              		.loc 19 547 18 view .LVU2499
 9018 016a 9BED006A 		vldr.32	s12, [fp]
 548:Veno-Echo.cpp ****         }
 9019              		.loc 19 548 18 view .LVU2500
 9020 016e DBED016A 		vldr.32	s13, [fp, #4]
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9021              		.loc 19 547 18 view .LVU2501
 9022 0172 A7EE276A 		vfma.f32	s12, s14, s15
 548:Veno-Echo.cpp ****         }
 9023              		.loc 19 548 18 view .LVU2502
 9024 0176 E7EE006A 		vfma.f32	s13, s14, s0
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9025              		.loc 19 547 18 view .LVU2503
 9026 017a F0EE467A 		vmov.f32	s15, s12
 9027              	.LVL637:
 548:Veno-Echo.cpp ****         }
 9028              		.loc 19 548 13 is_stmt 1 view .LVU2504
 548:Veno-Echo.cpp ****         }
 9029              		.loc 19 548 18 is_stmt 0 view .LVU2505
 9030 017e B0EE660A 		vmov.f32	s0, s13
 9031              	.LVL638:
 9032              	.L570:
 562:Veno-Echo.cpp ****         {
 9033              		.loc 19 562 9 is_stmt 1 view .LVU2506
 9034 0182 AC4B     		ldr	r3, .L622+28
 9035 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9036 0186 002B     		cmp	r3, #0
 9037 0188 00F01084 		beq	.L573
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9038              		.loc 19 564 13 view .LVU2507
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9039              		.loc 19 564 20 is_stmt 0 view .LVU2508
 9040 018c 0023     		movs	r3, #0
 9041 018e 009A     		ldr	r2, [sp]
 9042 0190 1360     		str	r3, [r2]	@ float
 565:Veno-Echo.cpp ****         }
 9043              		.loc 19 565 13 is_stmt 1 view .LVU2509
 565:Veno-Echo.cpp ****         }
 9044              		.loc 19 565 22 is_stmt 0 view .LVU2510
 9045 0192 5360     		str	r3, [r2, #4]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 291


 9046              	.L574:
 9047              	.LBE1804:
 351:Veno-Echo.cpp ****     {   
 9048              		.loc 19 351 5 is_stmt 1 discriminator 2 view .LVU2511
 9049 0194 009B     		ldr	r3, [sp]
 9050 0196 0BF1080B 		add	fp, fp, #8
 351:Veno-Echo.cpp ****     {   
 9051              		.loc 19 351 35 is_stmt 0 discriminator 2 view .LVU2512
 9052 019a 029A     		ldr	r2, [sp, #8]
 351:Veno-Echo.cpp ****     {   
 9053              		.loc 19 351 25 discriminator 2 view .LVU2513
 9054 019c 0599     		ldr	r1, [sp, #20]
 9055 019e 0833     		adds	r3, r3, #8
 9056 01a0 8A42     		cmp	r2, r1
 9057 01a2 0093     		str	r3, [sp]
 351:Veno-Echo.cpp ****     {   
 9058              		.loc 19 351 35 discriminator 2 view .LVU2514
 9059 01a4 02F10203 		add	r3, r2, #2
 9060              	.LVL639:
 351:Veno-Echo.cpp ****     {   
 9061              		.loc 19 351 25 is_stmt 1 discriminator 2 view .LVU2515
 9062 01a8 00F00C85 		beq	.L503
 9063 01ac 0293     		str	r3, [sp, #8]
 9064              	.LVL640:
 9065              	.L576:
 9066              	.LBB2178:
 353:Veno-Echo.cpp ****         Update_Mod();
 9067              		.loc 19 353 9 view .LVU2516
 353:Veno-Echo.cpp ****         Update_Mod();
 9068              		.loc 19 353 20 is_stmt 0 view .LVU2517
 9069 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 9070              	.LVL641:
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 9071              		.loc 19 354 9 is_stmt 1 view .LVU2518
 9072              	.LBB1843:
 9073              	.LBB1844:
 9074              	.LBB1845:
 9075              	.LBB1846:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 292


  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 293


 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9076              		.loc 18 174 71 is_stmt 0 view .LVU2519
 9077 01b2 DFF808A3 		ldr	r10, .L622+164
 9078              	.LBE1846:
 9079              	.LBE1845:
 9080              	.LBE1844:
 9081              	.LBE1843:
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 9082              		.loc 19 354 19 view .LVU2520
 9083 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 9084              	.LVL642:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9085              		.loc 19 356 9 is_stmt 1 view .LVU2521
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9086              		.loc 19 356 51 is_stmt 0 view .LVU2522
 9087 01ba 9F48     		ldr	r0, .L622+32
 9088 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9089              	.LVL643:
 9090 01c0 0146     		mov	r1, r0
 9091 01c2 9E48     		ldr	r0, .L622+36
 9092              	.LBB1898:
 9093              	.LBB1881:
 9094              	.LBB1864:
 9095              	.LBB1847:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9096              		.loc 18 175 77 view .LVU2523
 9097 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 9098              	.LBE1847:
 9099              	.LBE1864:
 9100              	.LBE1881:
 9101              	.LBE1898:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9102              		.loc 19 356 51 view .LVU2524
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 294


 9103 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9104              	.LVL644:
 357:Veno-Echo.cpp ****         
 9105              		.loc 19 357 51 view .LVU2525
 9106 01cc 9C48     		ldr	r0, .L622+40
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9107              		.loc 19 356 51 view .LVU2526
 9108 01ce F0EE40BA 		vmov.f32	s23, s0
 9109              	.LVL645:
 357:Veno-Echo.cpp ****         
 9110              		.loc 19 357 9 is_stmt 1 view .LVU2527
 357:Veno-Echo.cpp ****         
 9111              		.loc 19 357 51 is_stmt 0 view .LVU2528
 9112 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9113              	.LVL646:
 357:Veno-Echo.cpp ****         
 9114              		.loc 19 357 51 view .LVU2529
 9115 01d6 0146     		mov	r1, r0
 9116 01d8 9A48     		ldr	r0, .L622+44
 9117 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9118              	.LVL647:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9119              		.loc 19 359 44 view .LVU2530
 9120 01de 9A48     		ldr	r0, .L622+48
 357:Veno-Echo.cpp ****         
 9121              		.loc 19 357 51 view .LVU2531
 9122 01e0 B0EE409A 		vmov.f32	s18, s0
 9123              	.LVL648:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9124              		.loc 19 359 9 is_stmt 1 view .LVU2532
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9125              		.loc 19 359 44 is_stmt 0 view .LVU2533
 9126 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9127              	.LVL649:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9128              		.loc 19 359 44 view .LVU2534
 9129 01e8 0146     		mov	r1, r0
 9130 01ea 9848     		ldr	r0, .L622+52
 9131 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9132              	.LVL650:
 360:Veno-Echo.cpp **** 
 9133              		.loc 19 360 44 view .LVU2535
 9134 01f0 9748     		ldr	r0, .L622+56
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9135              		.loc 19 359 44 view .LVU2536
 9136 01f2 B0EE408A 		vmov.f32	s16, s0
 9137              	.LVL651:
 360:Veno-Echo.cpp **** 
 9138              		.loc 19 360 9 is_stmt 1 view .LVU2537
 360:Veno-Echo.cpp **** 
 9139              		.loc 19 360 44 is_stmt 0 view .LVU2538
 9140 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9141              	.LVL652:
 360:Veno-Echo.cpp **** 
 9142              		.loc 19 360 44 view .LVU2539
 9143 01fa 0146     		mov	r1, r0
 9144 01fc 9548     		ldr	r0, .L622+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 295


 9145 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9146              	.LVL653:
 9147              	.LBB1899:
 9148              	.LBB1900:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9149              		.loc 10 60 42 view .LVU2540
 9150 0202 9548     		ldr	r0, .L622+64
 9151              	.LBE1900:
 9152              	.LBE1899:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9153              		.loc 19 383 49 view .LVU2541
 9154 0204 954B     		ldr	r3, .L622+68
 360:Veno-Echo.cpp **** 
 9155              		.loc 19 360 44 view .LVU2542
 9156 0206 F0EE407A 		vmov.f32	s15, s0
 9157              	.LVL654:
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9158              		.loc 19 363 9 is_stmt 1 view .LVU2543
 9159              	.LBB1902:
 9160              	.LBI1899:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9161              		.loc 10 60 17 view .LVU2544
 9162              	.LBB1901:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9163              		.loc 10 60 37 view .LVU2545
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9164              		.loc 10 60 42 is_stmt 0 view .LVU2546
 9165 020a C0ED00BA 		vstr.32	s23, [r0]
 9166              	.LVL655:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9167              		.loc 10 60 42 view .LVU2547
 9168              	.LBE1901:
 9169              	.LBE1902:
 364:Veno-Echo.cpp ****         
 9170              		.loc 19 364 9 is_stmt 1 view .LVU2548
 9171              	.LBB1903:
 9172              	.LBI1903:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9173              		.loc 10 60 17 view .LVU2549
 9174              	.LBB1904:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9175              		.loc 10 60 37 view .LVU2550
 9176              	.LBE1904:
 9177              	.LBE1903:
 9178              	.LBB1907:
 9179              	.LBB1882:
 9180              	.LBB1865:
 9181              	.LBB1848:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9182              		.loc 18 174 82 is_stmt 0 view .LVU2551
 9183 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 9184              	.LBE1848:
 9185              	.LBE1865:
 9186              	.LBE1882:
 9187              	.LBE1907:
 9188              	.LBB1908:
 9189              	.LBB1905:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 296


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9190              		.loc 10 60 42 view .LVU2552
 9191 0212 9348     		ldr	r0, .L622+72
 9192              	.LBE1905:
 9193              	.LBE1908:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9194              		.loc 19 383 49 view .LVU2553
 9195 0214 1D68     		ldr	r5, [r3]
 9196              	.LBB1909:
 9197              	.LBB1906:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9198              		.loc 10 60 42 view .LVU2554
 9199 0216 80ED009A 		vstr.32	s18, [r0]
 9200              	.LVL656:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9201              		.loc 10 60 42 view .LVU2555
 9202              	.LBE1906:
 9203              	.LBE1909:
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9204              		.loc 19 366 9 is_stmt 1 view .LVU2556
 9205              	.LBB1910:
 9206              	.LBI1910:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9207              		.loc 10 60 17 view .LVU2557
 9208              	.LBB1911:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9209              		.loc 10 60 37 view .LVU2558
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9210              		.loc 10 60 42 is_stmt 0 view .LVU2559
 9211 021a 9248     		ldr	r0, .L622+76
 9212              	.LBE1911:
 9213              	.LBE1910:
 9214              	.LBB1913:
 9215              	.LBB1883:
 9216              	.LBB1866:
 9217              	.LBB1849:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9218              		.loc 18 174 71 view .LVU2560
 9219 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9220              		.loc 18 174 46 view .LVU2561
 9221 0220 9FED91AA 		vldr.32	s20, .L622+80
 9222              	.LBE1849:
 9223              	.LBE1866:
 9224              	.LBE1883:
 9225              	.LBE1913:
 9226              	.LBB1914:
 9227              	.LBB1912:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9228              		.loc 10 60 42 view .LVU2562
 9229 0224 80ED008A 		vstr.32	s16, [r0]
 9230              	.LVL657:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9231              		.loc 10 60 42 view .LVU2563
 9232              	.LBE1912:
 9233              	.LBE1914:
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 297


 9234              		.loc 19 367 9 is_stmt 1 view .LVU2564
 9235              	.LBB1915:
 9236              	.LBI1915:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9237              		.loc 10 60 17 view .LVU2565
 9238              	.LBB1916:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9239              		.loc 10 60 37 view .LVU2566
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9240              		.loc 10 60 42 is_stmt 0 view .LVU2567
 9241 0228 9048     		ldr	r0, .L622+84
 9242              	.LBE1916:
 9243              	.LBE1915:
 9244              	.LBB1918:
 9245              	.LBB1884:
 9246              	.LBB1867:
 9247              	.LBB1850:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9248              		.loc 18 174 71 view .LVU2568
 9249 022a 93ED00BA 		vldr.32	s22, [r3]
 9250              	.LBE1850:
 9251              	.LBE1867:
 9252              	.LBE1884:
 9253              	.LBE1918:
 9254              	.LBB1919:
 9255              	.LBB1917:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9256              		.loc 10 60 42 view .LVU2569
 9257 022e 80ED008A 		vstr.32	s16, [r0]
 9258              	.LVL658:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9259              		.loc 10 60 42 view .LVU2570
 9260              	.LBE1917:
 9261              	.LBE1919:
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9262              		.loc 19 368 9 is_stmt 1 view .LVU2571
 9263              	.LBB1920:
 9264              	.LBI1920:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9265              		.loc 10 60 17 view .LVU2572
 9266              	.LBB1921:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9267              		.loc 10 60 37 view .LVU2573
 9268              	.LBE1921:
 9269              	.LBE1920:
 9270              	.LBB1924:
 9271              	.LBB1925:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9272              		.loc 10 60 42 is_stmt 0 view .LVU2574
 9273 0232 8F48     		ldr	r0, .L622+88
 9274              	.LBE1925:
 9275              	.LBE1924:
 9276              	.LBB1928:
 9277              	.LBB1885:
 9278              	.LBB1868:
 9279              	.LBB1851:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 298


 9280              		.loc 18 174 46 view .LVU2575
 9281 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 9282              	.LVL659:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9283              		.loc 18 174 71 view .LVU2576
 9284 0238 0493     		str	r3, [sp, #16]
 9285              		.loc 18 175 77 view .LVU2577
 9286 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 9287              	.LBE1851:
 9288              	.LBE1868:
 9289              	.LBE1885:
 9290              	.LBE1928:
 9291              	.LBB1929:
 9292              	.LBB1926:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9293              		.loc 10 60 42 view .LVU2578
 9294 023e 80ED008A 		vstr.32	s16, [r0]
 9295              	.LBE1926:
 9296              	.LBE1929:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9297              		.loc 19 376 27 view .LVU2579
 9298 0242 8C4B     		ldr	r3, .L622+92
 9299              	.LBB1930:
 9300              	.LBB1931:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9301              		.loc 10 60 42 view .LVU2580
 9302 0244 8C48     		ldr	r0, .L622+96
 9303              	.LBE1931:
 9304              	.LBE1930:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9305              		.loc 19 376 27 view .LVU2581
 9306 0246 1B68     		ldr	r3, [r3]	@ float
 9307              	.LBB1934:
 9308              	.LBB1932:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9309              		.loc 10 60 42 view .LVU2582
 9310 0248 80ED008A 		vstr.32	s16, [r0]
 9311              	.LBE1932:
 9312              	.LBE1934:
 9313              	.LBB1935:
 9314              	.LBB1922:
 9315 024c 8B48     		ldr	r0, .L622+100
 9316              	.LBE1922:
 9317              	.LBE1935:
 9318              	.LBB1936:
 9319              	.LBB1886:
 9320              	.LBB1869:
 9321              	.LBB1852:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9322              		.loc 18 174 103 view .LVU2583
 9323 024e DFED8C9A 		vldr.32	s19, .L622+104
 9324              	.LBE1852:
 9325              	.LBE1869:
 9326              	.LBE1886:
 9327              	.LBE1936:
 9328              	.LBB1937:
 9329              	.LBB1923:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 299


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9330              		.loc 10 60 42 view .LVU2584
 9331 0252 C0ED007A 		vstr.32	s15, [r0]
 9332              	.LVL660:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9333              		.loc 10 60 42 view .LVU2585
 9334              	.LBE1923:
 9335              	.LBE1937:
 369:Veno-Echo.cpp **** 
 9336              		.loc 19 369 9 is_stmt 1 view .LVU2586
 9337              	.LBB1938:
 9338              	.LBI1938:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9339              		.loc 10 60 17 view .LVU2587
 9340              	.LBB1939:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9341              		.loc 10 60 37 view .LVU2588
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9342              		.loc 10 60 42 is_stmt 0 view .LVU2589
 9343 0256 8B48     		ldr	r0, .L622+108
 9344              	.LBE1939:
 9345              	.LBE1938:
 9346              	.LBB1941:
 9347              	.LBB1887:
 9348              	.LBB1870:
 9349              	.LBB1853:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9350              		.loc 18 174 98 view .LVU2590
 9351 0258 9FED8B9A 		vldr.32	s18, .L622+112
 9352              	.LVL661:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9353              		.loc 18 174 98 view .LVU2591
 9354              	.LBE1853:
 9355              	.LBE1870:
 9356              	.LBE1887:
 9357              	.LBE1941:
 9358              	.LBB1942:
 9359              	.LBB1940:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9360              		.loc 10 60 42 view .LVU2592
 9361 025c C0ED007A 		vstr.32	s15, [r0]
 9362              	.LVL662:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9363              		.loc 10 60 42 view .LVU2593
 9364              	.LBE1940:
 9365              	.LBE1942:
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 9366              		.loc 19 371 9 is_stmt 1 view .LVU2594
 9367              	.LBB1943:
 9368              	.LBI1924:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9369              		.loc 10 60 17 view .LVU2595
 9370              	.LBB1927:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9371              		.loc 10 60 37 view .LVU2596
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9372              		.loc 10 60 37 is_stmt 0 view .LVU2597
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 300


 9373              	.LBE1927:
 9374              	.LBE1943:
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 9375              		.loc 19 372 9 is_stmt 1 view .LVU2598
 9376              	.LBB1944:
 9377              	.LBI1930:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9378              		.loc 10 60 17 view .LVU2599
 9379              	.LBB1933:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9380              		.loc 10 60 37 view .LVU2600
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9381              		.loc 10 60 37 is_stmt 0 view .LVU2601
 9382              	.LBE1933:
 9383              	.LBE1944:
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 9384              		.loc 19 373 9 is_stmt 1 view .LVU2602
 9385              	.LBB1945:
 9386              	.LBI1945:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9387              		.loc 10 60 17 view .LVU2603
 9388              	.LBB1946:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9389              		.loc 10 60 37 view .LVU2604
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9390              		.loc 10 60 42 is_stmt 0 view .LVU2605
 9391 0260 8A48     		ldr	r0, .L622+116
 9392              	.LBE1946:
 9393              	.LBE1945:
 9394              	.LBB1948:
 9395              	.LBB1888:
 9396              	.LBB1871:
 9397              	.LBB1854:
 162:delayline_reverse.h **** 
 9398              		.loc 18 162 23 view .LVU2606
 9399 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 9400              	.LBE1854:
 9401              	.LBE1871:
 9402              	.LBE1888:
 9403              	.LBE1948:
 9404              	.LBB1949:
 9405              	.LBB1947:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9406              		.loc 10 60 42 view .LVU2607
 9407 0266 C0ED007A 		vstr.32	s15, [r0]
 9408              	.LVL663:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9409              		.loc 10 60 42 view .LVU2608
 9410              	.LBE1947:
 9411              	.LBE1949:
 374:Veno-Echo.cpp **** 
 9412              		.loc 19 374 9 is_stmt 1 view .LVU2609
 9413              	.LBB1950:
 9414              	.LBI1950:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9415              		.loc 10 60 17 view .LVU2610
 9416              	.LBB1951:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 301


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9417              		.loc 10 60 37 view .LVU2611
 9418              	.LBE1951:
 9419              	.LBE1950:
 9420              	.LBB1954:
 9421              	.LBB1889:
 9422              	.LBB1872:
 9423              	.LBB1855:
 162:delayline_reverse.h **** 
 9424              		.loc 18 162 11 is_stmt 0 view .LVU2612
 9425 026a 05EB8702 		add	r2, r5, r7, lsl #2
 9426              	.LBE1855:
 9427              	.LBE1872:
 9428              	.LBE1889:
 9429              	.LBE1954:
 9430              	.LBB1955:
 9431              	.LBB1952:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9432              		.loc 10 60 42 view .LVU2613
 9433 026e 8848     		ldr	r0, .L622+120
 9434              	.LBE1952:
 9435              	.LBE1955:
 9436              	.LBB1956:
 9437              	.LBB1890:
 9438              	.LBB1873:
 9439              	.LBB1856:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9440              		.loc 18 161 11 view .LVU2614
 9441 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 9442              		.loc 18 162 11 view .LVU2615
 9443 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 9444              	.LBE1856:
 9445              	.LBE1873:
 9446              	.LBE1890:
 9447              	.LBE1956:
 9448              	.LBB1957:
 9449              	.LBB1958:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9450              		.loc 10 60 42 view .LVU2616
 9451 0278 864A     		ldr	r2, .L622+124
 9452              	.LBE1958:
 9453              	.LBE1957:
 9454              	.LBB1960:
 9455              	.LBB1953:
 9456 027a C0ED007A 		vstr.32	s15, [r0]
 9457              	.LVL664:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9458              		.loc 10 60 42 view .LVU2617
 9459              	.LBE1953:
 9460              	.LBE1960:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9461              		.loc 19 376 9 is_stmt 1 view .LVU2618
 9462              	.LBB1961:
 9463              	.LBI1957:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9464              		.loc 10 60 17 view .LVU2619
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 302


 9465              	.LBB1959:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9466              		.loc 10 60 37 view .LVU2620
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9467              		.loc 10 60 42 is_stmt 0 view .LVU2621
 9468 027e 1360     		str	r3, [r2]	@ float
 9469              	.LVL665:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9470              		.loc 10 60 42 view .LVU2622
 9471              	.LBE1959:
 9472              	.LBE1961:
 377:Veno-Echo.cpp **** 
 9473              		.loc 19 377 9 is_stmt 1 view .LVU2623
 9474              	.LBB1962:
 9475              	.LBI1962:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9476              		.loc 10 60 17 view .LVU2624
 9477              	.LBB1963:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9478              		.loc 10 60 37 view .LVU2625
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9479              		.loc 10 60 42 is_stmt 0 view .LVU2626
 9480 0280 854A     		ldr	r2, .L622+128
 9481              	.LBE1963:
 9482              	.LBE1962:
 9483              	.LBB1965:
 9484              	.LBB1891:
 9485              	.LBB1874:
 9486              	.LBB1857:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9487              		.loc 18 161 11 view .LVU2627
 9488 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 9489              	.LBE1857:
 9490              	.LBE1874:
 9491              	.LBE1891:
 9492              	.LBE1965:
 9493              	.LBB1966:
 9494              	.LBB1964:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9495              		.loc 10 60 42 view .LVU2628
 9496 0286 1360     		str	r3, [r2]	@ float
 9497              	.LVL666:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9498              		.loc 10 60 42 view .LVU2629
 9499              	.LBE1964:
 9500              	.LBE1966:
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 9501              		.loc 19 379 9 is_stmt 1 view .LVU2630
 9502              	.LBB1967:
 9503              	.LBI1967:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9504              		.loc 10 60 17 view .LVU2631
 9505              	.LBB1968:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9506              		.loc 10 60 37 view .LVU2632
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9507              		.loc 10 60 42 is_stmt 0 view .LVU2633
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 303


 9508 0288 844A     		ldr	r2, .L622+132
 9509 028a 1360     		str	r3, [r2]	@ float
 9510              	.LVL667:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9511              		.loc 10 60 42 view .LVU2634
 9512              	.LBE1968:
 9513              	.LBE1967:
 380:Veno-Echo.cpp **** 
 9514              		.loc 19 380 9 is_stmt 1 view .LVU2635
 9515              	.LBB1969:
 9516              	.LBI1969:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9517              		.loc 10 60 17 view .LVU2636
 9518              	.LBB1970:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9519              		.loc 10 60 37 view .LVU2637
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9520              		.loc 10 60 42 is_stmt 0 view .LVU2638
 9521 028c 844A     		ldr	r2, .L622+136
 9522 028e 1360     		str	r3, [r2]	@ float
 9523              	.LVL668:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9524              		.loc 10 60 42 view .LVU2639
 9525              	.LBE1970:
 9526              	.LBE1969:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9527              		.loc 19 383 9 is_stmt 1 view .LVU2640
 9528              	.LBB1971:
 9529              	.LBI1843:
  79:Veno-Echo.cpp ****     {
 9530              		.loc 19 79 11 view .LVU2641
 9531              	.LBB1892:
  82:Veno-Echo.cpp ****         return read;
 9532              		.loc 19 82 9 view .LVU2642
 9533              	.LBB1875:
 9534              	.LBI1845:
 159:delayline_reverse.h ****     {
 9535              		.loc 18 159 20 view .LVU2643
 9536              	.LBB1858:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9537              		.loc 18 174 46 is_stmt 0 view .LVU2644
 9538 0290 FFF7FEFF 		bl	sinf
 9539              	.LVL669:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9540              		.loc 18 174 46 view .LVU2645
 9541 0294 F0EE40BA 		vmov.f32	s23, s0
 9542              	.LVL670:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9543              		.loc 18 174 103 view .LVU2646
 9544 0298 2BEE290A 		vmul.f32	s0, s22, s19
 9545 029c FFF7FEFF 		bl	sinf
 9546              	.LVL671:
 9547 02a0 B0EE408A 		vmov.f32	s16, s0
 9548              	.LVL672:
 9549              		.loc 18 175 46 view .LVU2647
 9550 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 9551 02a8 FFF7FEFF 		bl	sinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 304


 9552              	.LVL673:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9553              		.loc 18 174 98 view .LVU2648
 9554 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9555              		.loc 18 174 82 view .LVU2649
 9556 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 9557              	.LVL674:
 9558              		.loc 18 175 46 view .LVU2650
 9559 02b4 F0EE40BA 		vmov.f32	s23, s0
 9560              		.loc 18 175 112 view .LVU2651
 9561 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 9562 02bc FFF7FEFF 		bl	sinf
 9563              	.LVL675:
 9564              		.loc 18 175 107 view .LVU2652
 9565 02c0 60EE097A 		vmul.f32	s15, s0, s18
 9566              	.LBE1858:
 9567              	.LBE1875:
 9568              	.LBE1892:
 9569              	.LBE1971:
 384:Veno-Echo.cpp **** 
 9570              		.loc 19 384 49 view .LVU2653
 9571 02c4 774B     		ldr	r3, .L622+140
 9572              	.LBB1972:
 9573              	.LBB1893:
 9574              	.LBB1876:
 9575              	.LBB1859:
 9576              		.loc 18 175 91 view .LVU2654
 9577 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 9578              	.LVL676:
 9579              		.loc 18 175 91 view .LVU2655
 9580              	.LBE1859:
 9581              	.LBE1876:
 9582              	.LBE1893:
 9583              	.LBE1972:
 384:Veno-Echo.cpp **** 
 9584              		.loc 19 384 49 view .LVU2656
 9585 02ca 1C68     		ldr	r4, [r3]
 9586              	.LBB1973:
 9587              	.LBB1894:
 9588              	.LBB1877:
 9589              	.LBB1860:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9590              		.loc 18 174 9 view .LVU2657
 9591 02cc 38EE088A 		vadd.f32	s16, s16, s16
 9592              	.LVL677:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9593              		.loc 18 174 9 view .LVU2658
 9594              	.LBE1860:
 9595              	.LBE1877:
 9596              	.LBE1894:
 9597              	.LBE1973:
 9598              	.LBB1974:
 9599              	.LBB1975:
 9600              	.LBB1976:
 9601              	.LBB1977:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 305


 9602              		.loc 18 174 71 view .LVU2659
 9603 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 9604              		.loc 18 162 11 view .LVU2660
 9605 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9606              		.loc 18 174 71 view .LVU2661
 9607 02d8 91ED00CA 		vldr.32	s24, [r1]
 9608              	.LBE1977:
 9609              	.LBE1976:
 9610              	.LBE1975:
 9611              	.LBE1974:
 9612              	.LBB2008:
 9613              	.LBB1895:
 9614              	.LBB1878:
 9615              	.LBB1861:
 9616              		.loc 18 175 9 view .LVU2662
 9617 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 9618              	.LVL678:
 9619              		.loc 18 175 9 view .LVU2663
 9620              	.LBE1861:
 9621              	.LBE1878:
 9622              	.LBE1895:
 9623              	.LBE2008:
 9624              	.LBB2009:
 9625              	.LBB1998:
 9626              	.LBB1988:
 9627              	.LBB1978:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9628              		.loc 18 161 11 view .LVU2664
 9629 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9630              		.loc 18 162 11 view .LVU2665
 9631 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9632              		.loc 18 175 77 view .LVU2666
 9633 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9634              		.loc 18 174 46 view .LVU2667
 9635 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9636              		.loc 18 161 11 view .LVU2668
 9637 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9638              	.LBE1978:
 9639              	.LBE1988:
 9640              	.LBE1998:
 9641              	.LBE2009:
 9642              	.LBB2010:
 9643              	.LBB1896:
 9644              	.LBB1879:
 9645              	.LBB1862:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9646              		.loc 18 177 44 view .LVU2669
 9647 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9648              	.LVL679:
 9649              		.loc 18 177 44 view .LVU2670
 9650              	.LBE1862:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 306


 9651              	.LBE1879:
 9652              	.LBE1896:
 9653              	.LBE2010:
 9654              	.LBB2011:
 9655              	.LBB1999:
 9656              	.LBB1989:
 9657              	.LBB1979:
 162:delayline_reverse.h **** 
 9658              		.loc 18 162 11 view .LVU2671
 9659 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9660              		.loc 18 174 71 view .LVU2672
 9661 02fc 0391     		str	r1, [sp, #12]
 9662              	.LBE1979:
 9663              	.LBE1989:
 9664              	.LBE1999:
 9665              	.LBE2011:
 9666              	.LBB2012:
 9667              	.LBB1897:
 9668              	.LBB1880:
 9669              	.LBB1863:
 9670              		.loc 18 177 54 view .LVU2673
 9671 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9672              	.LVL680:
 9673              		.loc 18 177 54 view .LVU2674
 9674              	.LBE1863:
 9675              	.LBE1880:
  83:Veno-Echo.cpp ****     }
 9676              		.loc 19 83 9 is_stmt 1 view .LVU2675
  83:Veno-Echo.cpp ****     }
 9677              		.loc 19 83 9 is_stmt 0 view .LVU2676
 9678              	.LBE1897:
 9679              	.LBE2012:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9680              		.loc 19 383 50 view .LVU2677
 9681 0302 CDED067A 		vstr.32	s15, [sp, #24]
 384:Veno-Echo.cpp **** 
 9682              		.loc 19 384 9 is_stmt 1 view .LVU2678
 9683              	.LVL681:
 9684              	.LBB2013:
 9685              	.LBI1974:
  79:Veno-Echo.cpp ****     {
 9686              		.loc 19 79 11 view .LVU2679
 9687              	.LBB2000:
  82:Veno-Echo.cpp ****         return read;
 9688              		.loc 19 82 9 view .LVU2680
 9689              	.LBB1990:
 9690              	.LBI1976:
 159:delayline_reverse.h ****     {
 9691              		.loc 18 159 20 view .LVU2681
 9692              	.LBB1980:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9693              		.loc 18 174 46 is_stmt 0 view .LVU2682
 9694 0306 FFF7FEFF 		bl	sinf
 9695              	.LVL682:
 9696 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 307


 9697              		.loc 18 174 103 view .LVU2683
 9698 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9699 0312 FFF7FEFF 		bl	sinf
 9700              	.LVL683:
 9701 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9702              		.loc 18 175 46 view .LVU2684
 9703 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9704 031e FFF7FEFF 		bl	sinf
 9705              	.LVL684:
 9706 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9707              		.loc 18 175 112 view .LVU2685
 9708 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9709              		.loc 18 174 98 view .LVU2686
 9710 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9711              		.loc 18 175 46 view .LVU2687
 9712 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9713              		.loc 18 175 112 view .LVU2688
 9714 0332 FFF7FEFF 		bl	sinf
 9715              	.LVL685:
 9716              	.LBE1980:
 9717              	.LBE1990:
 9718              	.LBE2000:
 9719              	.LBE2013:
 9720              	.LBB2014:
 9721              	.LBB2015:
 9722              	.LBB2016:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9723              		.loc 18 98 38 view .LVU2689
 9724 0336 5C48     		ldr	r0, .L622+144
 9725              	.LBE2016:
 9726              	.LBE2015:
 9727              	.LBE2014:
 9728              	.LBB2039:
 9729              	.LBB2001:
 9730              	.LBB1991:
 9731              	.LBB1981:
 175:delayline_reverse.h **** 
 9732              		.loc 18 175 107 view .LVU2690
 9733 0338 60EE097A 		vmul.f32	s15, s0, s18
 9734              	.LBE1981:
 9735              	.LBE1991:
 9736              	.LBE2001:
 9737              	.LBE2039:
 9738              	.LBB2040:
 9739              	.LBB2028:
 9740              	.LBB2017:
  92:delayline_reverse.h ****         
 9741              		.loc 18 92 57 view .LVU2691
 9742 033c 5B4B     		ldr	r3, .L622+148
 9743              	.LBE2017:
 9744              	.LBE2028:
 9745              	.LBE2040:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 308


 9746              	.LBB2041:
 9747              	.LBB2002:
 9748              	.LBB1992:
 9749              	.LBB1982:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9750              		.loc 18 174 82 view .LVU2692
 9751 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9752              	.LVL686:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9753              		.loc 18 174 82 view .LVU2693
 9754              	.LBE1982:
 9755              	.LBE1992:
 9756              	.LBE2002:
 9757              	.LBE2041:
 9758              	.LBB2042:
 9759              	.LBB2029:
 9760              	.LBB2018:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9761              		.loc 18 98 38 view .LVU2694
 9762 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9763              		.loc 18 90 15 view .LVU2695
 9764 0344 D5F804E0 		ldr	lr, [r5, #4]
 9765              	.LBE2018:
 9766              	.LBE2029:
 9767              	.LBE2042:
 9768              	.LBB2043:
 9769              	.LBB2003:
 9770              	.LBB1993:
 9771              	.LBB1983:
 175:delayline_reverse.h **** 
 9772              		.loc 18 175 91 view .LVU2696
 9773 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9774              	.LVL687:
 175:delayline_reverse.h **** 
 9775              		.loc 18 175 91 view .LVU2697
 9776              	.LBE1983:
 9777              	.LBE1993:
 9778              	.LBE2003:
 9779              	.LBE2043:
 9780              	.LBB2044:
 9781              	.LBB2030:
 9782              	.LBB2019:
  99:delayline_reverse.h ****  
 9783              		.loc 18 99 38 view .LVU2698
 9784 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9785              		.loc 18 98 50 view .LVU2699
 9786 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9787              		.loc 18 92 57 view .LVU2700
 9788 0352 DFF86CC1 		ldr	ip, .L622+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9789              		.loc 18 90 9 view .LVU2701
 9790 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9791              		.loc 18 98 50 view .LVU2702
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 309


 9792 035a 890C     		lsrs	r1, r1, #18
 9793              	.LBE2019:
 9794              	.LBE2030:
 9795              	.LBE2044:
 9796              	.LBB2045:
 9797              	.LBB2004:
 9798              	.LBB1994:
 9799              	.LBB1984:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9800              		.loc 18 174 9 view .LVU2703
 9801 035c 38EE088A 		vadd.f32	s16, s16, s16
 9802              	.LVL688:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9803              		.loc 18 174 9 view .LVU2704
 9804              	.LBE1984:
 9805              	.LBE1994:
 9806              	.LBE2004:
 9807              	.LBE2045:
 9808              	.LBB2046:
 9809              	.LBB2031:
 9810              	.LBB2020:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9811              		.loc 18 98 50 view .LVU2705
 9812 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9813              		.loc 18 92 45 view .LVU2706
 9814 0364 524E     		ldr	r6, .L622+152
 9815              	.LBE2020:
 9816              	.LBE2031:
 9817              	.LBE2046:
 9818              	.LBB2047:
 9819              	.LBB2005:
 9820              	.LBB1995:
 9821              	.LBB1985:
 175:delayline_reverse.h **** 
 9822              		.loc 18 175 9 view .LVU2707
 9823 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9824              	.LVL689:
 175:delayline_reverse.h **** 
 9825              		.loc 18 175 9 view .LVU2708
 9826              	.LBE1985:
 9827              	.LBE1995:
 9828              	.LBE2005:
 9829              	.LBE2047:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9830              		.loc 19 387 26 view .LVU2709
 9831 036a DBED007A 		vldr.32	s15, [fp]
 9832              	.LBB2048:
 9833              	.LBB2032:
 9834              	.LBB2021:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9835              		.loc 18 98 50 view .LVU2710
 9836 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9837              		.loc 18 92 45 view .LVU2711
 9838 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 310


 9839              		.loc 18 99 50 view .LVU2712
 9840 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9841              		.loc 18 92 57 view .LVU2713
 9842 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9843              		.loc 18 98 9 view .LVU2714
 9844 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9845              		.loc 18 99 50 view .LVU2715
 9846 037c 4FEA9E4E 		lsr	lr, lr, #18
 9847              	.LBE2021:
 9848              	.LBE2032:
 9849              	.LBE2048:
 9850              	.LBB2049:
 9851              	.LBB2006:
 9852              	.LBB1996:
 9853              	.LBB1986:
 9854              		.loc 18 177 44 view .LVU2716
 9855 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9856              	.LVL690:
 9857              		.loc 18 177 44 view .LVU2717
 9858              	.LBE1986:
 9859              	.LBE1996:
 9860              	.LBE2006:
 9861              	.LBE2049:
 9862              	.LBB2050:
 9863              	.LBB2033:
 9864              	.LBB2022:
  92:delayline_reverse.h ****         
 9865              		.loc 18 92 57 view .LVU2718
 9866 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9867              		.loc 18 99 50 view .LVU2719
 9868 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9869              	.LBE2022:
 9870              	.LBE2033:
 9871              	.LBE2050:
 9872              	.LBB2051:
 9873              	.LBB2007:
 9874              	.LBB1997:
 9875              	.LBB1987:
 9876              		.loc 18 177 54 view .LVU2720
 9877 038a ACEE880A 		vfma.f32	s0, s25, s16
 9878              	.LVL691:
 9879              		.loc 18 177 54 view .LVU2721
 9880              	.LBE1987:
 9881              	.LBE1997:
  83:Veno-Echo.cpp ****     }
 9882              		.loc 19 83 9 is_stmt 1 view .LVU2722
  83:Veno-Echo.cpp ****     }
 9883              		.loc 19 83 9 is_stmt 0 view .LVU2723
 9884              	.LBE2007:
 9885              	.LBE2051:
 9886              	.LBB2052:
 9887              	.LBB2034:
 9888              	.LBB2023:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 311


  92:delayline_reverse.h ****         
 9889              		.loc 18 92 57 view .LVU2724
 9890 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9891              		.loc 18 95 43 view .LVU2725
 9892 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9893              		.loc 18 90 9 view .LVU2726
 9894 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9895              		.loc 18 95 43 view .LVU2727
 9896 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9897              		.loc 18 101 36 view .LVU2728
 9898 039c DFF824A1 		ldr	r10, .L622+172
  95:delayline_reverse.h **** 
 9899              		.loc 18 95 43 view .LVU2729
 9900 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9901              		.loc 18 101 36 view .LVU2730
 9902 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9903              		.loc 18 101 45 view .LVU2731
 9904 03a6 07F1FF3A 		add	r10, r7, #-1
 9905              	.LBE2023:
 9906              	.LBE2034:
 9907              	.LBE2052:
 384:Veno-Echo.cpp **** 
 9908              		.loc 19 384 50 view .LVU2732
 9909 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9910              		.loc 19 387 9 is_stmt 1 view .LVU2733
 9911              	.LVL692:
 9912              	.LBB2053:
 9913              	.LBI2014:
  92:Veno-Echo.cpp ****     {
 9914              		.loc 19 92 10 view .LVU2734
  92:Veno-Echo.cpp ****     {
 9915              		.loc 19 92 10 is_stmt 0 view .LVU2735
 9916              	.LBE2053:
 9917              	.LBE2178:
 9918              	.LBE1803:
  94:Veno-Echo.cpp ****     }
 9919              		.loc 19 94 9 is_stmt 1 view .LVU2736
 9920              	.LBB2190:
 9921              	.LBB2179:
 9922              	.LBB2054:
 9923              	.LBB2035:
 9924              	.LBI2015:
  88:delayline_reverse.h ****     {
 9925              		.loc 18 88 17 view .LVU2737
 9926              	.LBB2024:
  99:delayline_reverse.h ****  
 9927              		.loc 18 99 9 is_stmt 0 view .LVU2738
 9928 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9929              		.loc 18 95 54 view .LVU2739
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 312


 9930 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9931              		.loc 18 101 45 view .LVU2740
 9932 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9933              		.loc 18 95 54 view .LVU2741
 9934 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9935              		.loc 18 92 9 view .LVU2742
 9936 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9937              		.loc 18 101 9 view .LVU2743
 9938 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9939              		.loc 18 95 9 view .LVU2744
 9940 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9941              		.loc 18 101 9 view .LVU2745
 9942 03c4 40F2CF82 		bls	.L522
 103:delayline_reverse.h ****             {
 9943              		.loc 18 103 17 view .LVU2746
 9944 03c8 3A49     		ldr	r1, .L622+156
 103:delayline_reverse.h ****             {
 9945              		.loc 18 103 13 view .LVU2747
 9946 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9947              		.loc 18 103 17 view .LVU2748
 9948 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9949              		.loc 18 103 13 view .LVU2749
 9950 03ce 0028     		cmp	r0, #0
 9951 03d0 40F0CF82 		bne	.L613
 107:delayline_reverse.h ****                 {
 9952              		.loc 18 107 21 view .LVU2750
 9953 03d4 3848     		ldr	r0, .L622+160
 105:delayline_reverse.h ****                 
 9954              		.loc 18 105 17 view .LVU2751
 9955 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9956              		.loc 18 110 45 view .LVU2752
 9957 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9958              		.loc 18 107 17 view .LVU2753
 9959 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9960              		.loc 18 107 21 view .LVU2754
 9961 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9962              		.loc 18 105 17 view .LVU2755
 9963 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9964              		.loc 18 107 17 view .LVU2756
 9965 03e0 002E     		cmp	r6, #0
 9966 03e2 40F0EB83 		bne	.L524
 110:delayline_reverse.h ****                 }
 9967              		.loc 18 110 21 view .LVU2757
 9968 03e6 EB60     		str	r3, [r5, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 313


 9969              	.L525:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9970              		.loc 18 130 45 view .LVU2758
 9971 03e8 07EE90EA 		vmov	s15, lr	@ int
 9972              	.LVL693:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9973              		.loc 18 130 45 view .LVU2759
 9974 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9975 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9976 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9977              		.loc 18 130 37 view .LVU2760
 9978 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9979              		.loc 18 131 17 view .LVU2761
 9980 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9981 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9982 0404 40F39183 		ble	.L614
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9983              		.loc 18 133 21 view .LVU2762
 9984 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9985              		.loc 18 134 21 view .LVU2763
 9986 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9987              		.loc 18 133 21 view .LVU2764
 9988 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9989              		.loc 18 135 21 view .LVU2765
 9990 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9991              		.loc 18 134 21 view .LVU2766
 9992 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9993              		.loc 18 135 21 view .LVU2767
 9994 0414 0370     		strb	r3, [r0]
 9995 0416 57E0     		b	.L623
 9996              	.L624:
 9997              		.align	2
 9998              	.L622:
 9999 0418 00000000 		.word	.LANCHOR90
 10000 041c 00000000 		.word	.LANCHOR0
 10001 0420 00000000 		.word	.LANCHOR91
 10002 0424 00000000 		.word	.LANCHOR1
 10003 0428 00000000 		.word	.LANCHOR42
 10004 042c 00000000 		.word	.LANCHOR50
 10005 0430 00000000 		.word	.LANCHOR36
 10006 0434 00000000 		.word	.LANCHOR96
 10007 0438 00000000 		.word	.LANCHOR78
 10008 043c 00000000 		.word	.LANCHOR84
 10009 0440 00000000 		.word	.LANCHOR79
 10010 0444 00000000 		.word	.LANCHOR85
 10011 0448 00000000 		.word	.LANCHOR77
 10012 044c 00000000 		.word	.LANCHOR87
 10013 0450 00000000 		.word	.LANCHOR76
 10014 0454 00000000 		.word	.LANCHOR86
 10015 0458 00000000 		.word	.LANCHOR88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 314


 10016 045c 00000000 		.word	.LANCHOR2
 10017 0460 00000000 		.word	.LANCHOR89
 10018 0464 00000000 		.word	.LANCHOR99
 10019 0468 DB0FC93F 		.word	1070141403
 10020 046c 00000000 		.word	.LANCHOR100
 10021 0470 00000000 		.word	.LANCHOR103
 10022 0474 00000000 		.word	.LANCHOR49
 10023 0478 00000000 		.word	.LANCHOR104
 10024 047c 00000000 		.word	.LANCHOR101
 10025 0480 E4CB9640 		.word	1083624420
 10026 0484 00000000 		.word	.LANCHOR102
 10027 0488 0000803D 		.word	1031798784
 10028 048c 00000000 		.word	.LANCHOR105
 10029 0490 00000000 		.word	.LANCHOR106
 10030 0494 00000000 		.word	.LANCHOR107
 10031 0498 00000000 		.word	.LANCHOR108
 10032 049c 00000000 		.word	.LANCHOR109
 10033 04a0 00000000 		.word	.LANCHOR110
 10034 04a4 00000000 		.word	.LANCHOR3
 10035 04a8 BF270900 		.word	599999
 10036 04ac 851DD96F 		.word	1876499845
 10037 04b0 C1270900 		.word	600001
 10038 04b4 249F2400 		.word	2400036
 10039 04b8 1C9F2400 		.word	2400028
 10040 04bc 209F2400 		.word	2400032
 10041 04c0 C0270900 		.word	600000
 10042 04c4 189F2400 		.word	2400024
 10043              	.L623:
 10044              	.LVL694:
 10045              	.L528:
 135:delayline_reverse.h ****                 }
 10046              		.loc 18 135 21 view .LVU2768
 10047              	.LBE2024:
 10048              	.LBE2035:
 10049              	.LBE2054:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10050              		.loc 19 388 9 is_stmt 1 view .LVU2769
 10051              	.LBB2055:
 10052              	.LBB2056:
 10053              	.LBB2057:
  95:delayline_reverse.h **** 
 10054              		.loc 18 95 45 is_stmt 0 view .LVU2770
 10055 04c8 2169     		ldr	r1, [r4, #16]
 10056 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10057              		.loc 18 95 43 view .LVU2771
 10058 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10059              		.loc 18 90 15 view .LVU2772
 10060 04d0 6568     		ldr	r5, [r4, #4]
 10061 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10062              		.loc 18 95 43 view .LVU2773
 10063 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10064              		.loc 18 92 45 view .LVU2774
 10065 04d8 B14F     		ldr	r7, .L625
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 315


  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10066              		.loc 18 90 9 view .LVU2775
 10067 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10068              		.loc 18 98 38 view .LVU2776
 10069 04de B14B     		ldr	r3, .L625+4
  95:delayline_reverse.h **** 
 10070              		.loc 18 95 43 view .LVU2777
 10071 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10072              		.loc 18 92 45 view .LVU2778
 10073 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 10074              		.loc 18 101 45 view .LVU2779
 10075 04e4 01F1FF3C 		add	ip, r1, #-1
 10076              	.LBE2057:
 10077              	.LBE2056:
 10078              	.LBE2055:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10079              		.loc 19 388 26 view .LVU2780
 10080 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 10081              	.LVL695:
 10082              	.LBB2066:
 10083              	.LBI2055:
  92:Veno-Echo.cpp ****     {
 10084              		.loc 19 92 10 is_stmt 1 view .LVU2781
  92:Veno-Echo.cpp ****     {
 10085              		.loc 19 92 10 is_stmt 0 view .LVU2782
 10086              	.LBE2066:
 10087              	.LBE2179:
 10088              	.LBE2190:
  94:Veno-Echo.cpp ****     }
 10089              		.loc 19 94 9 is_stmt 1 view .LVU2783
 10090              	.LBB2191:
 10091              	.LBB2180:
 10092              	.LBB2067:
 10093              	.LBB2062:
 10094              	.LBI2056:
  88:delayline_reverse.h ****     {
 10095              		.loc 18 88 17 view .LVU2784
 10096              	.LBB2058:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10097              		.loc 18 98 38 is_stmt 0 view .LVU2785
 10098 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 10099 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10100              		.loc 18 99 38 view .LVU2786
 10101 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10102              		.loc 18 92 57 view .LVU2787
 10103 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10104              		.loc 18 95 54 view .LVU2788
 10105 04fa B2FBF1F0 		udiv	r0, r2, r1
 10106 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 10107              		.loc 18 101 36 view .LVU2789
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 316


 10108 0502 A949     		ldr	r1, .L625+8
  92:delayline_reverse.h ****         
 10109              		.loc 18 92 57 view .LVU2790
 10110 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 10111              		.loc 18 101 36 view .LVU2791
 10112 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10113              		.loc 18 92 57 view .LVU2792
 10114 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10115              		.loc 18 90 9 view .LVU2793
 10116 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 10117              		.loc 18 101 36 view .LVU2794
 10118 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10119              		.loc 18 92 57 view .LVU2795
 10120 0514 A3FB0762 		umull	r6, r2, r3, r7
 10121 0518 DFF8C8E2 		ldr	lr, .L625+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10122              		.loc 18 98 50 view .LVU2796
 10123 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10124              		.loc 18 99 50 view .LVU2797
 10125 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10126              		.loc 18 101 45 view .LVU2798
 10127 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10128              		.loc 18 92 57 view .LVU2799
 10129 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10130              		.loc 18 95 9 view .LVU2800
 10131 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10132              		.loc 18 98 50 view .LVU2801
 10133 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 10134              		.loc 18 101 45 view .LVU2802
 10135 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10136              		.loc 18 99 50 view .LVU2803
 10137 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10138              		.loc 18 92 57 view .LVU2804
 10139 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10140              		.loc 18 98 50 view .LVU2805
 10141 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10142              		.loc 18 101 9 view .LVU2806
 10143 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10144              		.loc 18 99 50 view .LVU2807
 10145 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 317


 10146              		.loc 18 98 9 view .LVU2808
 10147 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10148              		.loc 18 99 9 view .LVU2809
 10149 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10150              		.loc 18 101 9 view .LVU2810
 10151 0546 40F2EB81 		bls	.L532
 103:delayline_reverse.h ****             {
 10152              		.loc 18 103 17 view .LVU2811
 10153 054a 9849     		ldr	r1, .L625+12
 103:delayline_reverse.h ****             {
 10154              		.loc 18 103 13 view .LVU2812
 10155 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10156              		.loc 18 103 17 view .LVU2813
 10157 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10158              		.loc 18 103 13 view .LVU2814
 10159 0550 0028     		cmp	r0, #0
 10160 0552 40F0EB81 		bne	.L615
 107:delayline_reverse.h ****                 {
 10161              		.loc 18 107 21 view .LVU2815
 10162 0556 9648     		ldr	r0, .L625+16
 105:delayline_reverse.h ****                 
 10163              		.loc 18 105 17 view .LVU2816
 10164 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10165              		.loc 18 110 45 view .LVU2817
 10166 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10167              		.loc 18 107 17 view .LVU2818
 10168 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10169              		.loc 18 107 21 view .LVU2819
 10170 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10171              		.loc 18 105 17 view .LVU2820
 10172 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 10173              		.loc 18 107 17 view .LVU2821
 10174 0562 002D     		cmp	r5, #0
 10175 0564 40F02C83 		bne	.L534
 110:delayline_reverse.h ****                 }
 10176              		.loc 18 110 21 view .LVU2822
 10177 0568 E260     		str	r2, [r4, #12]
 10178              	.L535:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10179              		.loc 18 130 45 view .LVU2823
 10180 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10181              	.LVL696:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10182              		.loc 18 130 45 view .LVU2824
 10183 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10184              		.loc 18 130 37 view .LVU2825
 10185 0572 039A     		ldr	r2, [sp, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 318


 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10186              		.loc 18 130 45 view .LVU2826
 10187 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10188              		.loc 18 130 37 view .LVU2827
 10189 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10190              		.loc 18 130 45 view .LVU2828
 10191 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10192              		.loc 18 130 37 view .LVU2829
 10193 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10194              		.loc 18 131 17 view .LVU2830
 10195 0584 F4EEC77A 		vcmpe.f32	s15, s14
 10196 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10197 058c 40F31F83 		ble	.L617
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10198              		.loc 18 133 21 view .LVU2831
 10199 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10200              		.loc 18 134 21 view .LVU2832
 10201 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10202              		.loc 18 133 21 view .LVU2833
 10203 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10204              		.loc 18 135 21 view .LVU2834
 10205 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10206              		.loc 18 134 21 view .LVU2835
 10207 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10208              		.loc 18 135 21 view .LVU2836
 10209 059c 0270     		strb	r2, [r0]
 10210              	.LVL697:
 10211              	.L538:
 135:delayline_reverse.h ****                 }
 10212              		.loc 18 135 21 view .LVU2837
 10213              	.LBE2058:
 10214              	.LBE2062:
 10215              	.LBE2067:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10216              		.loc 19 393 9 is_stmt 1 view .LVU2838
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10217              		.loc 19 393 56 is_stmt 0 view .LVU2839
 10218 059e 06AA     		add	r2, sp, #24
 10219 05a0 5946     		mov	r1, fp
 10220 05a2 8448     		ldr	r0, .L625+20
 10221 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10222              	.LVL698:
 394:Veno-Echo.cpp **** 
 10223              		.loc 19 394 56 view .LVU2840
 10224 05a8 18EE101A 		vmov	r1, s16	@ int
 10225 05ac 07AA     		add	r2, sp, #28
 10226 05ae 8248     		ldr	r0, .L625+24
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 319


 10227              		.loc 19 393 56 view .LVU2841
 10228 05b0 F0EE408A 		vmov.f32	s17, s0
 10229              	.LVL699:
 394:Veno-Echo.cpp **** 
 10230              		.loc 19 394 9 is_stmt 1 view .LVU2842
 394:Veno-Echo.cpp **** 
 10231              		.loc 19 394 56 is_stmt 0 view .LVU2843
 10232 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10233              	.LVL700:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10234              		.loc 19 397 46 view .LVU2844
 10235 05b8 8048     		ldr	r0, .L625+28
 394:Veno-Echo.cpp **** 
 10236              		.loc 19 394 56 view .LVU2845
 10237 05ba B0EE408A 		vmov.f32	s16, s0
 10238              	.LVL701:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10239              		.loc 19 397 9 is_stmt 1 view .LVU2846
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10240              		.loc 19 397 46 is_stmt 0 view .LVU2847
 10241 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10242              	.LVL702:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10243              		.loc 19 397 46 view .LVU2848
 10244 05c2 0346     		mov	r3, r0
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10245              		.loc 19 398 46 view .LVU2849
 10246 05c4 7E48     		ldr	r0, .L625+32
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10247              		.loc 19 397 45 view .LVU2850
 10248 05c6 1B68     		ldr	r3, [r3]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10249              		.loc 19 397 47 view .LVU2851
 10250 05c8 0893     		str	r3, [sp, #32]	@ float
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10251              		.loc 19 398 9 is_stmt 1 view .LVU2852
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10252              		.loc 19 398 46 is_stmt 0 view .LVU2853
 10253 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10254              	.LVL703:
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10255              		.loc 19 398 45 view .LVU2854
 10256 05ce 0368     		ldr	r3, [r0]	@ float
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10257              		.loc 19 398 47 view .LVU2855
 10258 05d0 0993     		str	r3, [sp, #36]	@ float
 400:Veno-Echo.cpp **** 
 10259              		.loc 19 400 9 is_stmt 1 view .LVU2856
 400:Veno-Echo.cpp **** 
 10260              		.loc 19 400 28 is_stmt 0 view .LVU2857
 10261 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10262              	.LVL704:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10263              		.loc 19 403 9 is_stmt 1 view .LVU2858
 10264              	.LBB2068:
 10265              	.LBB2069:
1799:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 320


 10266              		.loc 19 1799 5 is_stmt 0 view .LVU2859
 10267 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 10268              	.LBE2069:
 10269              	.LBE2068:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10270              		.loc 19 403 34 view .LVU2860
 10271 05da DDED087A 		vldr.32	s15, [sp, #32]
 10272              	.LVL705:
 10273              	.LBB2072:
 10274              	.LBI2068:
1796:Veno-Echo.cpp **** {
 10275              		.loc 19 1796 7 is_stmt 1 view .LVU2861
 10276              	.LBB2070:
1798:Veno-Echo.cpp ****     if (input > limit)
 10277              		.loc 19 1798 5 view .LVU2862
1799:Veno-Echo.cpp ****         returnval = limit;
 10278              		.loc 19 1799 5 view .LVU2863
 10279 05de F4EEC77A 		vcmpe.f32	s15, s14
 10280 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10281 05e6 00F39881 		bgt	.L579
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10282              		.loc 19 1801 10 view .LVU2864
 10283 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1802:Veno-Echo.cpp ****     else
 10284              		.loc 19 1802 19 is_stmt 0 view .LVU2865
 10285 05ee F4EE477A 		vcmp.f32	s15, s14
 10286 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10287 05f6 48BF     		it	mi
 10288 05f8 F0EE477A 		vmovmi.f32	s15, s14
 10289              	.LVL706:
 10290              	.L542:
1806:Veno-Echo.cpp **** }
 10291              		.loc 19 1806 5 is_stmt 1 view .LVU2866
1806:Veno-Echo.cpp **** }
 10292              		.loc 19 1806 5 is_stmt 0 view .LVU2867
 10293              	.LBE2070:
 10294              	.LBE2072:
 10295              	.LBB2073:
 10296              	.LBB2074:
1799:Veno-Echo.cpp ****         returnval = limit;
 10297              		.loc 19 1799 5 view .LVU2868
 10298 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 10299              	.LBE2074:
 10300              	.LBE2073:
 404:Veno-Echo.cpp **** 
 10301              		.loc 19 404 34 view .LVU2869
 10302 0600 9DED090A 		vldr.32	s0, [sp, #36]
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10303              		.loc 19 403 23 view .LVU2870
 10304 0604 CDED087A 		vstr.32	s15, [sp, #32]
 404:Veno-Echo.cpp **** 
 10305              		.loc 19 404 9 is_stmt 1 view .LVU2871
 10306              	.LVL707:
 10307              	.LBB2078:
 10308              	.LBI2073:
1796:Veno-Echo.cpp **** {
 10309              		.loc 19 1796 7 view .LVU2872
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 321


 10310              	.LBB2075:
1798:Veno-Echo.cpp ****     if (input > limit)
 10311              		.loc 19 1798 5 view .LVU2873
1799:Veno-Echo.cpp ****         returnval = limit;
 10312              		.loc 19 1799 5 view .LVU2874
 10313 0608 B4EEC70A 		vcmpe.f32	s0, s14
 10314 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10315 0610 00F3EA80 		bgt	.L580
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10316              		.loc 19 1801 10 view .LVU2875
 10317 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 10318              	.LBE2075:
 10319              	.LBE2078:
 10320              	.LBB2079:
 406:Veno-Echo.cpp **** {
 10321              		.loc 19 406 1 is_stmt 0 view .LVU2876
 10322 0618 6A4B     		ldr	r3, .L625+36
 10323 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10324              	.LBE2079:
 10325              	.LBB2101:
 10326              	.LBB2076:
1802:Veno-Echo.cpp ****     else
 10327              		.loc 19 1802 19 view .LVU2877
 10328 061c B4EE470A 		vcmp.f32	s0, s14
 10329 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10330 0624 48BF     		it	mi
 10331 0626 B0EE470A 		vmovmi.f32	s0, s14
 10332              	.LVL708:
1806:Veno-Echo.cpp **** }
 10333              		.loc 19 1806 5 is_stmt 1 view .LVU2878
1806:Veno-Echo.cpp **** }
 10334              		.loc 19 1806 5 is_stmt 0 view .LVU2879
 10335              	.LBE2076:
 10336              	.LBE2101:
 404:Veno-Echo.cpp **** 
 10337              		.loc 19 404 23 view .LVU2880
 10338 062a 8DED090A 		vstr.32	s0, [sp, #36]
 406:Veno-Echo.cpp **** {
 10339              		.loc 19 406 1 is_stmt 1 view .LVU2881
 10340              	.LBB2102:
 10341 062e 002B     		cmp	r3, #0
 10342 0630 00F0E380 		beq	.L618
 10343              	.L546:
 10344              	.LBE2102:
 450:Veno-Echo.cpp ****         static float RNegFB{};
 10345              		.loc 19 450 9 view .LVU2882
 451:Veno-Echo.cpp **** 
 10346              		.loc 19 451 9 view .LVU2883
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10347              		.loc 19 454 9 view .LVU2884
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10348              		.loc 19 454 22 is_stmt 0 view .LVU2885
 10349 0634 644B     		ldr	r3, .L625+40
 10350              	.LBB2103:
 10351              	.LBB2104:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 322


  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 10352              		.loc 12 57 16 view .LVU2886
 10353 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 10354              	.LBE2104:
 10355              	.LBE2103:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10356              		.loc 19 454 22 view .LVU2887
 10357 063a D3ED004A 		vldr.32	s9, [r3]
 10358 063e 634B     		ldr	r3, .L625+44
 10359              	.LBB2116:
 10360              	.LBB2105:
 10361              		.loc 12 57 37 view .LVU2888
 10362 0640 98ED006A 		vldr.32	s12, [r8]
 10363              	.LBE2105:
 10364              	.LBE2116:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10365              		.loc 19 454 22 view .LVU2889
 10366 0644 93ED007A 		vldr.32	s14, [r3]
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10367              		.loc 19 457 22 view .LVU2890
 10368 0648 614B     		ldr	r3, .L625+48
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10369              		.loc 19 454 9 view .LVU2891
 10370 064a F4EEC74A 		vcmpe.f32	s9, s14
 10371              	.LBB2117:
 10372              	.LBB2118:
 10373              		.loc 12 57 16 view .LVU2892
 10374 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 10375              		.loc 12 65 20 view .LVU2893
 10376 0652 99ED054A 		vldr.32	s8, [r9, #20]
 10377              		.loc 12 65 53 view .LVU2894
 10378 0656 99ED032A 		vldr.32	s4, [r9, #12]
 10379              	.LBE2118:
 10380              	.LBE2117:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10381              		.loc 19 454 9 view .LVU2895
 10382 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10383              	.LBB2127:
 10384              	.LBB2106:
 10385              		.loc 12 65 20 view .LVU2896
 10386 065e 98ED053A 		vldr.32	s6, [r8, #20]
 10387              		.loc 12 65 53 view .LVU2897
 10388 0662 98ED031A 		vldr.32	s2, [r8, #12]
 10389              	.LBE2106:
 10390              	.LBE2127:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10391              		.loc 19 473 13 view .LVU2898
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 323


 10392 0666 DFED5B1A 		vldr.32	s3, .L625+52
 10393 066a 58BF     		it	pl
 10394 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10395              		.loc 19 457 9 is_stmt 1 view .LVU2899
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10396              		.loc 19 457 22 is_stmt 0 view .LVU2900
 10397 0670 93ED007A 		vldr.32	s14, [r3]
 10398 0674 584B     		ldr	r3, .L625+56
 10399 0676 D3ED006A 		vldr.32	s13, [r3]
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10400              		.loc 19 460 15 view .LVU2901
 10401 067a 67EEA44A 		vmul.f32	s9, s15, s9
 10402              	.LBB2128:
 10403              	.LBB2119:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10404              		.loc 12 57 37 view .LVU2902
 10405 067e D9ED007A 		vldr.32	s15, [r9]
 10406              	.LBE2119:
 10407              	.LBE2128:
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10408              		.loc 19 457 9 view .LVU2903
 10409 0682 B4EEE67A 		vcmpe.f32	s14, s13
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10410              		.loc 19 464 36 view .LVU2904
 10411 0686 554B     		ldr	r3, .L625+60
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10412              		.loc 19 457 9 view .LVU2905
 10413 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10414 068c 58BF     		it	pl
 10415 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10416              		.loc 19 460 9 is_stmt 1 view .LVU2906
 10417              	.LVL709:
 461:Veno-Echo.cpp **** 
 10418              		.loc 19 461 9 view .LVU2907
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10419              		.loc 19 464 36 is_stmt 0 view .LVU2908
 10420 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 461:Veno-Echo.cpp **** 
 10421              		.loc 19 461 15 view .LVU2909
 10422 0696 20EE070A 		vmul.f32	s0, s0, s14
 10423              	.LVL710:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10424              		.loc 19 464 9 is_stmt 1 view .LVU2910
 10425              	.LBB2129:
 10426              	.LBB2107:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10427              		.loc 12 57 33 is_stmt 0 view .LVU2911
 10428 069a 36EEE25A 		vsub.f32	s10, s13, s5
 10429              	.LBE2107:
 10430              	.LBE2129:
 10431              	.LBB2130:
 10432              	.LBB2120:
 10433 069e 76EEE35A 		vsub.f32	s11, s13, s7
 10434              	.LBE2120:
 10435              	.LBE2130:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 324


 10436              	.LBB2131:
 10437              	.LBB2108:
 10438              		.loc 12 65 45 view .LVU2912
 10439 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10440              		.loc 12 57 37 view .LVU2913
 10441 06a6 25EE065A 		vmul.f32	s10, s10, s12
 10442              	.LBE2108:
 10443              	.LBE2131:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10444              		.loc 19 464 36 view .LVU2914
 10445 06aa 93ED006A 		vldr.32	s12, [r3]
 10446              	.LBB2132:
 10447              	.LBB2121:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10448              		.loc 12 57 37 view .LVU2915
 10449 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 10450              		.loc 12 65 45 view .LVU2916
 10451 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 10452              	.LBE2121:
 10453              	.LBE2132:
 10454              	.LBB2133:
 10455              	.LBB2109:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10456              		.loc 12 57 28 view .LVU2917
 10457 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 10458              	.LBE2109:
 10459              	.LBE2133:
 10460              	.LBB2134:
 10461              	.LBB2122:
 10462 06ba E0EE235A 		vfma.f32	s11, s0, s7
 10463              		.loc 12 65 53 view .LVU2918
 10464 06be 67EE827A 		vmul.f32	s15, s15, s4
 10465              	.LBE2122:
 10466              	.LBE2134:
 10467              	.LBB2135:
 10468              	.LBB2110:
 10469 06c2 27EE017A 		vmul.f32	s14, s14, s2
 10470              	.LBE2110:
 10471              	.LBE2135:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10472              		.loc 19 464 36 view .LVU2919
 10473 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 10474              	.LBB2136:
 10475              	.LBB2111:
  58:envFollow.h   **** 
 10476              		.loc 12 58 30 view .LVU2920
 10477 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10478              		.loc 12 57 13 view .LVU2921
 10479 06ce 88ED005A 		vstr.32	s10, [r8]
 10480              	.LBE2111:
 10481              	.LBE2136:
 10482              	.LBB2137:
 10483              	.LBB2123:
  58:envFollow.h   **** 
 10484              		.loc 12 58 30 view .LVU2922
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 325


 10485 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10486              		.loc 12 57 13 view .LVU2923
 10487 06d6 C9ED005A 		vstr.32	s11, [r9]
 10488              	.LBE2123:
 10489              	.LBE2137:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10490              		.loc 19 464 89 view .LVU2924
 10491 06da 66EE005A 		vmul.f32	s11, s12, s0
 10492              	.LBB2138:
 10493              	.LBB2112:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10494              		.loc 12 61 27 view .LVU2925
 10495 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 10496              		.loc 12 58 21 view .LVU2926
 10497 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 10498              	.LBE2112:
 10499              	.LBE2138:
 10500              	.LBB2139:
 10501              	.LBB2124:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10502              		.loc 12 61 27 view .LVU2927
 10503 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 10504              		.loc 12 58 21 view .LVU2928
 10505 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 10506              	.LBE2124:
 10507              	.LBE2139:
 465:Veno-Echo.cpp **** 
 10508              		.loc 19 465 89 view .LVU2929
 10509 06ee 26EE246A 		vmul.f32	s12, s12, s9
 10510              	.LBB2140:
 10511              	.LBB2113:
 10512              		.loc 12 65 40 view .LVU2930
 10513 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10514              		.loc 12 61 20 view .LVU2931
 10515 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 10516              	.LBE2113:
 10517              	.LBE2140:
 10518              	.LBB2141:
 10519              	.LBB2125:
 10520              		.loc 12 65 40 view .LVU2932
 10521 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10522              		.loc 12 61 20 view .LVU2933
 10523 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 10524              	.LBE2125:
 10525              	.LBE2141:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10526              		.loc 19 464 15 view .LVU2934
 10527 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 10528              	.LVL711:
 465:Veno-Echo.cpp **** 
 10529              		.loc 19 465 9 is_stmt 1 view .LVU2935
 465:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 326


 10530              		.loc 19 465 15 is_stmt 0 view .LVU2936
 10531 0706 A6EE806A 		vfma.f32	s12, s13, s0
 10532              	.LVL712:
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 10533              		.loc 19 469 9 is_stmt 1 view .LVU2937
 10534              	.LBB2142:
 10535              	.LBI2103:
  54:envFollow.h   ****     {
 10536              		.loc 12 54 11 view .LVU2938
 10537              	.LBB2114:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10538              		.loc 12 57 9 view .LVU2939
  58:envFollow.h   **** 
 10539              		.loc 12 58 9 view .LVU2940
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10540              		.loc 12 61 9 view .LVU2941
 10541              		.loc 12 65 9 view .LVU2942
 10542              	.LBE2114:
 10543              	.LBE2142:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10544              		.loc 19 473 13 is_stmt 0 view .LVU2943
 10545 070a B4EEE17A 		vcmpe.f32	s14, s3
 10546              	.LBB2143:
 10547              	.LBB2115:
 10548              		.loc 12 65 17 view .LVU2944
 10549 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 10550              		.loc 12 67 9 is_stmt 1 view .LVU2945
 10551              	.LVL713:
 10552              		.loc 12 67 9 is_stmt 0 view .LVU2946
 10553              	.LBE2115:
 10554              	.LBE2143:
 470:Veno-Echo.cpp **** 
 10555              		.loc 19 470 9 is_stmt 1 view .LVU2947
 10556              	.LBB2144:
 10557              	.LBI2117:
  54:envFollow.h   ****     {
 10558              		.loc 12 54 11 view .LVU2948
 10559              	.LBB2126:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10560              		.loc 12 57 9 view .LVU2949
  58:envFollow.h   **** 
 10561              		.loc 12 58 9 view .LVU2950
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10562              		.loc 12 61 9 view .LVU2951
  65:envFollow.h   **** 
 10563              		.loc 12 65 9 view .LVU2952
  65:envFollow.h   **** 
 10564              		.loc 12 65 17 is_stmt 0 view .LVU2953
 10565 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 10566              		.loc 12 67 9 is_stmt 1 view .LVU2954
 10567              	.LVL714:
 10568              		.loc 12 67 9 is_stmt 0 view .LVU2955
 10569              	.LBE2126:
 10570              	.LBE2144:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 327


 10571              		.loc 19 473 13 is_stmt 1 view .LVU2956
 10572 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10573 071a 3DDB     		blt	.L608
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10574              		.loc 19 474 17 view .LVU2957
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10575              		.loc 19 474 32 is_stmt 0 view .LVU2958
 10576 071c 37EE617A 		vsub.f32	s14, s14, s3
 10577              	.LVL715:
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10578              		.loc 19 474 47 view .LVU2959
 10579 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 10580 0724 27EE267A 		vmul.f32	s14, s14, s13
 10581              	.L552:
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10582              		.loc 19 478 13 view .LVU2960
 10583 0728 DFED2A6A 		vldr.32	s13, .L625+52
 10584 072c 274B     		ldr	r3, .L625+44
 10585 072e F4EEE67A 		vcmpe.f32	s15, s13
 10586 0732 83ED007A 		vstr.32	s14, [r3]
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10587              		.loc 19 478 13 is_stmt 1 view .LVU2961
 10588 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10589 073a 2ADB     		blt	.L609
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10590              		.loc 19 479 17 view .LVU2962
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10591              		.loc 19 479 32 is_stmt 0 view .LVU2963
 10592 073c 77EEE67A 		vsub.f32	s15, s15, s13
 10593              	.LVL716:
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10594              		.loc 19 479 47 view .LVU2964
 10595 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 10596 0744 67EE877A 		vmul.f32	s15, s15, s14
 10597              	.L554:
 10598 0748 234B     		ldr	r3, .L625+56
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10599              		.loc 19 483 15 view .LVU2965
 10600 074a 38EEA50A 		vadd.f32	s0, s17, s11
 10601              	.LVL717:
 484:Veno-Echo.cpp ****  
 10602              		.loc 19 484 15 view .LVU2966
 10603 074e 38EE068A 		vadd.f32	s16, s16, s12
 10604              	.LVL718:
 484:Veno-Echo.cpp ****  
 10605              		.loc 19 484 15 view .LVU2967
 10606 0752 C3ED007A 		vstr.32	s15, [r3]
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10607              		.loc 19 483 9 is_stmt 1 view .LVU2968
 10608              	.LVL719:
 484:Veno-Echo.cpp ****  
 10609              		.loc 19 484 9 view .LVU2969
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 10610              		.loc 19 487 9 view .LVU2970
 10611              	.LBB2145:
 10612              	.LBI2145:
1796:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 328


 10613              		.loc 19 1796 7 view .LVU2971
 10614              	.LBB2146:
1798:Veno-Echo.cpp ****     if (input > limit)
 10615              		.loc 19 1798 5 view .LVU2972
1799:Veno-Echo.cpp ****         returnval = limit;
 10616              		.loc 19 1799 5 view .LVU2973
 10617 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 10618 075a B4EEE70A 		vcmpe.f32	s0, s15
 10619 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10620 0762 13DC     		bgt	.L586
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10621              		.loc 19 1801 10 view .LVU2974
 10622 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1802:Veno-Echo.cpp ****     else
 10623              		.loc 19 1802 19 is_stmt 0 view .LVU2975
 10624 0768 B4EE670A 		vcmp.f32	s0, s15
 10625 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10626 0770 48BF     		it	mi
 10627 0772 B0EE670A 		vmovmi.f32	s0, s15
 10628              	.LVL720:
 10629              	.L556:
1806:Veno-Echo.cpp **** }
 10630              		.loc 19 1806 5 is_stmt 1 view .LVU2976
1806:Veno-Echo.cpp **** }
 10631              		.loc 19 1806 5 is_stmt 0 view .LVU2977
 10632              	.LBE2146:
 10633              	.LBE2145:
 488:Veno-Echo.cpp **** 
 10634              		.loc 19 488 9 is_stmt 1 view .LVU2978
 10635              	.LBB2148:
 10636              	.LBI1805:
1796:Veno-Echo.cpp **** {
 10637              		.loc 19 1796 7 view .LVU2979
 10638              	.LBB1807:
1798:Veno-Echo.cpp ****     if (input > limit)
 10639              		.loc 19 1798 5 view .LVU2980
1799:Veno-Echo.cpp ****         returnval = limit;
 10640              		.loc 19 1799 5 view .LVU2981
 10641 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10642 077a B4EEE78A 		vcmpe.f32	s16, s15
 10643 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10644 0782 7FF78FAC 		ble	.L619
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10645              		.loc 19 1800 19 is_stmt 0 view .LVU2982
 10646 0786 B0EE678A 		vmov.f32	s16, s15
 10647              	.LVL721:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10648              		.loc 19 1800 19 view .LVU2983
 10649 078a 94E4     		b	.L558
 10650              	.LVL722:
 10651              	.L586:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10652              		.loc 19 1800 19 view .LVU2984
 10653              	.LBE1807:
 10654              	.LBE2148:
 10655              	.LBB2149:
 10656              	.LBB2147:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 329


 10657 078c B0EE670A 		vmov.f32	s0, s15
 10658              	.LVL723:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10659              		.loc 19 1800 19 view .LVU2985
 10660 0790 F1E7     		b	.L556
 10661              	.LVL724:
 10662              	.L609:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10663              		.loc 19 1800 19 view .LVU2986
 10664              	.LBE2147:
 10665              	.LBE2149:
 480:Veno-Echo.cpp **** 
 10666              		.loc 19 480 25 view .LVU2987
 10667 0792 DFED137A 		vldr.32	s15, .L625+64
 10668              	.LVL725:
 480:Veno-Echo.cpp **** 
 10669              		.loc 19 480 25 view .LVU2988
 10670 0796 D7E7     		b	.L554
 10671              	.LVL726:
 10672              	.L608:
 476:Veno-Echo.cpp ****             
 10673              		.loc 19 476 25 view .LVU2989
 10674 0798 9FED117A 		vldr.32	s14, .L625+64
 10675              	.LVL727:
 476:Veno-Echo.cpp ****             
 10676              		.loc 19 476 25 view .LVU2990
 10677 079c C4E7     		b	.L552
 10678              	.L626:
 10679 079e 00BF     		.align	2
 10680              	.L625:
 10681 07a0 C1270900 		.word	600001
 10682 07a4 BF270900 		.word	599999
 10683 07a8 189F2400 		.word	2400024
 10684 07ac 249F2400 		.word	2400036
 10685 07b0 1C9F2400 		.word	2400028
 10686 07b4 00000000 		.word	.LANCHOR88
 10687 07b8 00000000 		.word	.LANCHOR89
 10688 07bc 00000000 		.word	.LANCHOR0
 10689 07c0 00000000 		.word	.LANCHOR1
 10690 07c4 00000000 		.word	.LANCHOR50
 10691 07c8 00000000 		.word	.LANCHOR12
 10692 07cc 00000000 		.word	.LANCHOR111
 10693 07d0 00000000 		.word	.LANCHOR24
 10694 07d4 CDCCCC3E 		.word	1053609165
 10695 07d8 00000000 		.word	.LANCHOR112
 10696 07dc 00000000 		.word	.LANCHOR45
 10697 07e0 00000000 		.word	0
 10698 07e4 C0270900 		.word	600000
 10699              	.LVL728:
 10700              	.L580:
 10701              	.LBB2150:
 406:Veno-Echo.cpp **** {
 10702              		.loc 19 406 1 view .LVU2991
 10703 07e8 D64B     		ldr	r3, .L627
 10704              	.LBE2150:
 10705              	.LBB2151:
 10706              	.LBB2077:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 330


1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10707              		.loc 19 1800 19 view .LVU2992
 10708 07ea B0EE470A 		vmov.f32	s0, s14
 10709              	.LVL729:
1806:Veno-Echo.cpp **** }
 10710              		.loc 19 1806 5 is_stmt 1 view .LVU2993
1806:Veno-Echo.cpp **** }
 10711              		.loc 19 1806 5 is_stmt 0 view .LVU2994
 10712              	.LBE2077:
 10713              	.LBE2151:
 10714              	.LBB2152:
 406:Veno-Echo.cpp **** {
 10715              		.loc 19 406 1 view .LVU2995
 10716 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10717              	.LBE2152:
 404:Veno-Echo.cpp **** 
 10718              		.loc 19 404 23 view .LVU2996
 10719 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 406:Veno-Echo.cpp **** {
 10720              		.loc 19 406 1 is_stmt 1 view .LVU2997
 10721              	.LBB2153:
 10722 07f4 002B     		cmp	r3, #0
 10723 07f6 7FF41DAF 		bne	.L546
 10724              	.L618:
 10725              	.LBB2080:
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10726              		.loc 19 412 9 view .LVU2998
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10727              		.loc 19 412 22 is_stmt 0 view .LVU2999
 10728 07fa 9FEDD39A 		vldr.32	s18, .L627+4
 10729 07fe D34D     		ldr	r5, .L627+8
 10730 0800 27EE890A 		vmul.f32	s0, s15, s18
 413:Veno-Echo.cpp **** 
 10731              		.loc 19 413 22 view .LVU3000
 10732 0804 D24C     		ldr	r4, .L627+12
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10733              		.loc 19 412 22 view .LVU3001
 10734 0806 2846     		mov	r0, r5
 10735 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10736              	.LVL730:
 413:Veno-Echo.cpp **** 
 10737              		.loc 19 413 9 is_stmt 1 view .LVU3002
 413:Veno-Echo.cpp **** 
 10738              		.loc 19 413 22 is_stmt 0 view .LVU3003
 10739 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10740 0810 2046     		mov	r0, r4
 10741 0812 20EE090A 		vmul.f32	s0, s0, s18
 10742 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10743              	.LVL731:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10744              		.loc 19 416 9 is_stmt 1 view .LVU3004
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10745              		.loc 19 416 9 is_stmt 0 view .LVU3005
 10746              	.LBE2080:
 10747              	.LBE2153:
 10748              	.LBE2180:
 10749              	.LBE2191:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 331


  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10750              		.loc 9 52 26 is_stmt 1 view .LVU3006
 10751              	.LBB2192:
 10752              	.LBB2181:
 10753              	.LBB2154:
 10754              	.LBB2095:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10755              		.loc 19 416 40 is_stmt 0 view .LVU3007
 10756 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 10757 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10758              		.loc 19 420 49 view .LVU3008
 10759 0822 0CAA     		add	r2, sp, #48
 417:Veno-Echo.cpp ****         
 10760              		.loc 19 417 40 view .LVU3009
 10761 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10762              		.loc 19 420 49 view .LVU3010
 10763 0828 08A9     		add	r1, sp, #32
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10764              		.loc 19 416 40 view .LVU3011
 10765 082a 27EE267A 		vmul.f32	s14, s14, s13
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10766              		.loc 19 420 49 view .LVU3012
 10767 082e C948     		ldr	r0, .L627+16
 417:Veno-Echo.cpp ****         
 10768              		.loc 19 417 40 view .LVU3013
 10769 0830 67EEA67A 		vmul.f32	s15, s15, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 332


 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10770              		.loc 19 416 47 view .LVU3014
 10771 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 417:Veno-Echo.cpp ****         
 10772              		.loc 19 417 9 is_stmt 1 view .LVU3015
 10773              	.LVL732:
 417:Veno-Echo.cpp ****         
 10774              		.loc 19 417 9 is_stmt 0 view .LVU3016
 10775              	.LBE2095:
 10776              	.LBE2154:
 10777              	.LBE2181:
 10778              	.LBE2192:
 10779              		.loc 9 52 26 is_stmt 1 view .LVU3017
 10780              	.LBB2193:
 10781              	.LBB2182:
 10782              	.LBB2155:
 10783              	.LBB2096:
 417:Veno-Echo.cpp ****         
 10784              		.loc 19 417 47 is_stmt 0 view .LVU3018
 10785 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10786              		.loc 19 420 9 is_stmt 1 view .LVU3019
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10787              		.loc 19 420 49 is_stmt 0 view .LVU3020
 10788 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10789              	.LVL733:
 421:Veno-Echo.cpp **** 
 10790              		.loc 19 421 49 view .LVU3021
 10791 0840 0DAA     		add	r2, sp, #52
 10792 0842 09A9     		add	r1, sp, #36
 10793 0844 C448     		ldr	r0, .L627+20
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10794              		.loc 19 420 78 view .LVU3022
 10795 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 421:Veno-Echo.cpp **** 
 10796              		.loc 19 421 9 is_stmt 1 view .LVU3023
 421:Veno-Echo.cpp **** 
 10797              		.loc 19 421 49 is_stmt 0 view .LVU3024
 10798 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10799              	.LVL734:
 10800              	.LBB2081:
 10801              	.LBB2082:
1799:Veno-Echo.cpp ****         returnval = limit;
 10802              		.loc 19 1799 5 view .LVU3025
 10803 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10804              	.LBE2082:
 10805              	.LBE2081:
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10806              		.loc 19 424 36 view .LVU3026
 10807 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 421:Veno-Echo.cpp **** 
 10808              		.loc 19 421 49 view .LVU3027
 10809 0856 F0EE407A 		vmov.f32	s15, s0
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10810              		.loc 19 424 9 is_stmt 1 view .LVU3028
 10811              	.LVL735:
 10812              	.LBB2086:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 333


 10813              	.LBI2081:
1796:Veno-Echo.cpp **** {
 10814              		.loc 19 1796 7 view .LVU3029
 10815              	.LBB2083:
1798:Veno-Echo.cpp ****     if (input > limit)
 10816              		.loc 19 1798 5 view .LVU3030
1799:Veno-Echo.cpp ****         returnval = limit;
 10817              		.loc 19 1799 5 view .LVU3031
 10818 085a B4EEE67A 		vcmpe.f32	s14, s13
 10819 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10820 0862 00F3A681 		bgt	.L581
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10821              		.loc 19 1801 10 view .LVU3032
 10822 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10823 086a B4EEE67A 		vcmpe.f32	s14, s13
 10824 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10825 0872 00F1B581 		bmi	.L582
 10826 0876 27EE090A 		vmul.f32	s0, s14, s18
 10827              	.LVL736:
 10828              	.L547:
1806:Veno-Echo.cpp **** }
 10829              		.loc 19 1806 5 view .LVU3033
1806:Veno-Echo.cpp **** }
 10830              		.loc 19 1806 5 is_stmt 0 view .LVU3034
 10831              	.LBE2083:
 10832              	.LBE2086:
 10833              	.LBB2087:
 10834              	.LBB2088:
1799:Veno-Echo.cpp ****         returnval = limit;
 10835              		.loc 19 1799 5 view .LVU3035
 10836 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10837              	.LBE2088:
 10838              	.LBE2087:
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10839              		.loc 19 424 25 view .LVU3036
 10840 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 425:Veno-Echo.cpp **** 
 10841              		.loc 19 425 9 is_stmt 1 view .LVU3037
 10842              	.LVL737:
 10843              	.LBB2091:
 10844              	.LBI2087:
1796:Veno-Echo.cpp **** {
 10845              		.loc 19 1796 7 view .LVU3038
 10846              	.LBB2089:
1798:Veno-Echo.cpp ****     if (input > limit)
 10847              		.loc 19 1798 5 view .LVU3039
1799:Veno-Echo.cpp ****         returnval = limit;
 10848              		.loc 19 1799 5 view .LVU3040
 10849 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10850 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10851 088a 00F38F81 		bgt	.L583
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10852              		.loc 19 1801 10 view .LVU3041
 10853 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1802:Veno-Echo.cpp ****     else
 10854              		.loc 19 1802 19 is_stmt 0 view .LVU3042
 10855 0892 F4EE477A 		vcmp.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 334


 10856 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10857 089a 48BF     		it	mi
 10858 089c F0EE477A 		vmovmi.f32	s15, s14
 10859              	.LVL738:
 10860              	.L548:
1806:Veno-Echo.cpp **** }
 10861              		.loc 19 1806 5 is_stmt 1 view .LVU3043
1806:Veno-Echo.cpp **** }
 10862              		.loc 19 1806 5 is_stmt 0 view .LVU3044
 10863              	.LBE2089:
 10864              	.LBE2091:
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10865              		.loc 19 428 22 view .LVU3045
 10866 08a0 AE4D     		ldr	r5, .L627+24
 429:Veno-Echo.cpp **** 
 10867              		.loc 19 429 22 view .LVU3046
 10868 08a2 AF4C     		ldr	r4, .L627+28
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10869              		.loc 19 428 22 view .LVU3047
 10870 08a4 2846     		mov	r0, r5
 425:Veno-Echo.cpp **** 
 10871              		.loc 19 425 25 view .LVU3048
 10872 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10873              		.loc 19 428 9 is_stmt 1 view .LVU3049
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10874              		.loc 19 428 22 is_stmt 0 view .LVU3050
 10875 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10876              	.LVL739:
 429:Veno-Echo.cpp **** 
 10877              		.loc 19 429 9 is_stmt 1 view .LVU3051
 429:Veno-Echo.cpp **** 
 10878              		.loc 19 429 22 is_stmt 0 view .LVU3052
 10879 08ae DFEDA67A 		vldr.32	s15, .L627+4
 10880 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10881 08b6 2046     		mov	r0, r4
 10882 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10883 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10884              	.LVL740:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10885              		.loc 19 431 9 is_stmt 1 view .LVU3053
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10886              		.loc 19 431 9 is_stmt 0 view .LVU3054
 10887              	.LBE2096:
 10888              	.LBE2155:
 10889              	.LBE2182:
 10890              	.LBE2193:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10891              		.loc 9 56 27 is_stmt 1 view .LVU3055
 10892              	.LBB2194:
 10893              	.LBB2183:
 10894              	.LBB2156:
 10895              	.LBB2097:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 335


 10896              		.loc 19 431 41 is_stmt 0 view .LVU3056
 10897 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10898 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10899              		.loc 19 434 45 view .LVU3057
 10900 08c8 0EA9     		add	r1, sp, #56
 432:Veno-Echo.cpp **** 
 10901              		.loc 19 432 41 view .LVU3058
 10902 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10903              		.loc 19 434 45 view .LVU3059
 10904 08ce 10AA     		add	r2, sp, #64
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10905              		.loc 19 431 41 view .LVU3060
 10906 08d0 27EE267A 		vmul.f32	s14, s14, s13
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10907              		.loc 19 434 45 view .LVU3061
 10908 08d4 A348     		ldr	r0, .L627+32
 432:Veno-Echo.cpp **** 
 10909              		.loc 19 432 41 view .LVU3062
 10910 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10911              		.loc 19 431 48 view .LVU3063
 10912 08da 8DED107A 		vstr.32	s14, [sp, #64]
 432:Veno-Echo.cpp **** 
 10913              		.loc 19 432 9 is_stmt 1 view .LVU3064
 10914              	.LVL741:
 432:Veno-Echo.cpp **** 
 10915              		.loc 19 432 9 is_stmt 0 view .LVU3065
 10916              	.LBE2097:
 10917              	.LBE2156:
 10918              	.LBE2183:
 10919              	.LBE2194:
 10920              		.loc 9 56 27 is_stmt 1 view .LVU3066
 10921              	.LBB2195:
 10922              	.LBB2184:
 10923              	.LBB2157:
 10924              	.LBB2098:
 432:Veno-Echo.cpp **** 
 10925              		.loc 19 432 48 is_stmt 0 view .LVU3067
 10926 08de CDED117A 		vstr.32	s15, [sp, #68]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10927              		.loc 19 434 9 is_stmt 1 view .LVU3068
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10928              		.loc 19 434 45 is_stmt 0 view .LVU3069
 10929 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10930              	.LVL742:
 435:Veno-Echo.cpp **** 
 10931              		.loc 19 435 45 view .LVU3070
 10932 08e6 0FA9     		add	r1, sp, #60
 10933 08e8 11AA     		add	r2, sp, #68
 10934 08ea 9F48     		ldr	r0, .L627+36
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10935              		.loc 19 434 25 view .LVU3071
 10936 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 435:Veno-Echo.cpp **** 
 10937              		.loc 19 435 9 is_stmt 1 view .LVU3072
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 336


 435:Veno-Echo.cpp **** 
 10938              		.loc 19 435 45 is_stmt 0 view .LVU3073
 10939 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10940              	.LVL743:
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10941              		.loc 19 439 44 view .LVU3074
 10942 08f4 0EAA     		add	r2, sp, #56
 10943 08f6 08A9     		add	r1, sp, #32
 10944 08f8 9C48     		ldr	r0, .L627+40
 435:Veno-Echo.cpp **** 
 10945              		.loc 19 435 25 view .LVU3075
 10946 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10947              		.loc 19 439 9 is_stmt 1 view .LVU3076
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10948              		.loc 19 439 44 is_stmt 0 view .LVU3077
 10949 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10950              	.LVL744:
 440:Veno-Echo.cpp **** 
 10951              		.loc 19 440 44 view .LVU3078
 10952 0902 0FAA     		add	r2, sp, #60
 10953 0904 09A9     		add	r1, sp, #36
 10954 0906 9A48     		ldr	r0, .L627+44
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10955              		.loc 19 439 23 view .LVU3079
 10956 0908 8DED080A 		vstr.32	s0, [sp, #32]
 440:Veno-Echo.cpp **** 
 10957              		.loc 19 440 9 is_stmt 1 view .LVU3080
 440:Veno-Echo.cpp **** 
 10958              		.loc 19 440 44 is_stmt 0 view .LVU3081
 10959 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10960              	.LVL745:
 10961 0910 DDED087A 		vldr.32	s15, [sp, #32]
 440:Veno-Echo.cpp **** 
 10962              		.loc 19 440 23 view .LVU3082
 10963 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10964              	.LBE2098:
 10965 0918 8CE6     		b	.L546
 10966              	.LVL746:
 10967              	.L579:
 440:Veno-Echo.cpp **** 
 10968              		.loc 19 440 23 view .LVU3083
 10969              	.LBE2157:
 10970              	.LBB2158:
 10971              	.LBB2071:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10972              		.loc 19 1800 19 view .LVU3084
 10973 091a F0EE477A 		vmov.f32	s15, s14
 10974              	.LVL747:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10975              		.loc 19 1800 19 view .LVU3085
 10976 091e 6DE6     		b	.L542
 10977              	.LVL748:
 10978              	.L532:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10979              		.loc 19 1800 19 view .LVU3086
 10980              	.LBE2071:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 337


 10981              	.LBE2158:
 10982              	.LBB2159:
 10983              	.LBB2063:
 10984              	.LBB2059:
 126:delayline_reverse.h ****         {
 10985              		.loc 18 126 12 view .LVU3087
 10986 0920 944B     		ldr	r3, .L627+48
 126:delayline_reverse.h ****         {
 10987              		.loc 18 126 9 view .LVU3088
 10988 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10989              		.loc 18 126 12 view .LVU3089
 10990 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10991              		.loc 18 126 9 view .LVU3090
 10992 0926 002A     		cmp	r2, #0
 10993 0928 3FF439AE 		beq	.L538
 10994              	.L615:
 126:delayline_reverse.h ****         {
 10995              		.loc 18 126 9 view .LVU3091
 10996 092c 924A     		ldr	r2, .L627+52
 10997 092e A018     		adds	r0, r4, r2
 10998 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10999              		.loc 18 128 13 view .LVU3092
 11000 0932 002A     		cmp	r2, #0
 11001 0934 3FF419AE 		beq	.L535
 11002              	.L536:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11003              		.loc 18 141 45 view .LVU3093
 11004 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 11005              	.LVL749:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11006              		.loc 18 141 45 view .LVU3094
 11007 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11008              		.loc 18 141 37 view .LVU3095
 11009 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 11010              		.loc 18 142 17 view .LVU3096
 11011 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11012              		.loc 18 141 45 view .LVU3097
 11013 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11014              		.loc 18 141 37 view .LVU3098
 11015 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11016              		.loc 18 141 45 view .LVU3099
 11017 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11018              		.loc 18 141 37 view .LVU3100
 11019 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 11020              		.loc 18 142 17 view .LVU3101
 11021 0954 F5EEC07A 		vcmpe.f32	s15, #0
 11022 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 338


 11023 095c 00F13A81 		bmi	.L541
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11024              		.loc 18 141 17 view .LVU3102
 11025 0960 C1ED007A 		vstr.32	s15, [r1]
 11026 0964 1BE6     		b	.L538
 11027              	.LVL750:
 11028              	.L522:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11029              		.loc 18 141 17 view .LVU3103
 11030              	.LBE2059:
 11031              	.LBE2063:
 11032              	.LBE2159:
 11033              	.LBB2160:
 11034              	.LBB2036:
 11035              	.LBB2025:
 126:delayline_reverse.h ****         {
 11036              		.loc 18 126 12 view .LVU3104
 11037 0966 834A     		ldr	r2, .L627+48
 126:delayline_reverse.h ****         {
 11038              		.loc 18 126 9 view .LVU3105
 11039 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11040              		.loc 18 126 12 view .LVU3106
 11041 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 11042              		.loc 18 126 9 view .LVU3107
 11043 096c 002B     		cmp	r3, #0
 11044 096e 3FF4ABAD 		beq	.L528
 11045              	.L613:
 126:delayline_reverse.h ****         {
 11046              		.loc 18 126 9 view .LVU3108
 11047 0972 814B     		ldr	r3, .L627+52
 11048 0974 E818     		adds	r0, r5, r3
 11049 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11050              		.loc 18 128 13 view .LVU3109
 11051 0978 002B     		cmp	r3, #0
 11052 097a 3FF435AD 		beq	.L525
 11053              	.L526:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11054              		.loc 18 141 45 view .LVU3110
 11055 097e 07EE90EA 		vmov	s15, lr	@ int
 11056              	.LVL751:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11057              		.loc 18 141 45 view .LVU3111
 11058 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 11059              		.loc 18 142 17 view .LVU3112
 11060 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11061              		.loc 18 141 45 view .LVU3113
 11062 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 11063 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11064              		.loc 18 141 37 view .LVU3114
 11065 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 339


 11066              		.loc 18 142 17 view .LVU3115
 11067 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 11068 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11069 099c 40F1C580 		bpl	.L614
 145:delayline_reverse.h ****                     playinghead_ = false;
 11070              		.loc 18 145 21 view .LVU3116
 11071 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11072              		.loc 18 144 21 view .LVU3117
 11073 09a2 049D     		ldr	r5, [sp, #16]
 11074              	.LVL752:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11075              		.loc 18 144 21 view .LVU3118
 11076 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11077              		.loc 18 145 21 view .LVU3119
 11078 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11079              		.loc 18 146 21 view .LVU3120
 11080 09a8 0170     		strb	r1, [r0]
 11081 09aa 8DE5     		b	.L528
 11082              	.LVL753:
 11083              	.L573:
 146:delayline_reverse.h ****                 }
 11084              		.loc 18 146 21 view .LVU3121
 11085              	.LBE2025:
 11086              	.LBE2036:
 11087              	.LBE2160:
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 11088              		.loc 19 569 13 is_stmt 1 view .LVU3122
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 11089              		.loc 19 569 20 is_stmt 0 view .LVU3123
 11090 09ac 009B     		ldr	r3, [sp]
 11091 09ae C3ED007A 		vstr.32	s15, [r3]
 570:Veno-Echo.cpp ****         }
 11092              		.loc 19 570 13 is_stmt 1 view .LVU3124
 570:Veno-Echo.cpp ****         }
 11093              		.loc 19 570 22 is_stmt 0 view .LVU3125
 11094 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 11095 09b6 FFF7EDBB 		b	.L574
 11096              	.LVL754:
 11097              	.L610:
 550:Veno-Echo.cpp ****         {
 11098              		.loc 19 550 14 is_stmt 1 view .LVU3126
 11099 09ba 40F3AC80 		ble	.L611
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11100              		.loc 19 552 13 view .LVU3127
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11101              		.loc 19 552 24 is_stmt 0 view .LVU3128
 11102 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11103              		.loc 19 552 18 view .LVU3129
 11104 09c2 DBED005A 		vldr.32	s11, [fp]
 553:Veno-Echo.cpp ****         }
 11105              		.loc 19 553 18 view .LVU3130
 11106 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 340


 11107              		.loc 19 552 24 view .LVU3131
 11108 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11109              		.loc 19 552 33 view .LVU3132
 11110 09ce 37EE077A 		vadd.f32	s14, s14, s14
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11111              		.loc 19 552 18 view .LVU3133
 11112 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 11113              	.LVL755:
 553:Veno-Echo.cpp ****         }
 11114              		.loc 19 553 13 is_stmt 1 view .LVU3134
 553:Veno-Echo.cpp ****         }
 11115              		.loc 19 553 18 is_stmt 0 view .LVU3135
 11116 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 11117              	.LVL756:
 553:Veno-Echo.cpp ****         }
 11118              		.loc 19 553 18 view .LVU3136
 11119 09da FFF7D2BB 		b	.L570
 11120              	.LVL757:
 11121              	.L589:
 11122              	.LBB2161:
 504:Veno-Echo.cpp **** {
 11123              		.loc 19 504 1 view .LVU3137
 11124 09de 594B     		ldr	r3, .L627
 11125              	.LBE2161:
 11126              	.LBB2162:
 11127              	.LBB1817:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11128              		.loc 19 1800 19 view .LVU3138
 11129 09e0 B0EE470A 		vmov.f32	s0, s14
 11130              	.LVL758:
1806:Veno-Echo.cpp **** }
 11131              		.loc 19 1806 5 is_stmt 1 view .LVU3139
1806:Veno-Echo.cpp **** }
 11132              		.loc 19 1806 5 is_stmt 0 view .LVU3140
 11133              	.LBE1817:
 11134              	.LBE2162:
 11135              	.LBB2163:
 504:Veno-Echo.cpp **** {
 11136              		.loc 19 504 1 view .LVU3141
 11137 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11138              	.LBE2163:
 502:Veno-Echo.cpp **** 
 11139              		.loc 19 502 27 view .LVU3142
 11140 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 504:Veno-Echo.cpp **** {
 11141              		.loc 19 504 1 is_stmt 1 view .LVU3143
 11142              	.LBB2164:
 11143 09ea 002B     		cmp	r3, #0
 11144 09ec 3FF4B0AB 		beq	.L564
 11145              	.L616:
 11146              	.LBB1820:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11147              		.loc 19 510 9 view .LVU3144
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11148              		.loc 19 510 27 is_stmt 0 view .LVU3145
 11149 09f0 9FED558A 		vldr.32	s16, .L627+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 341


 11150              	.LVL759:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11151              		.loc 19 510 27 view .LVU3146
 11152 09f4 614D     		ldr	r5, .L627+56
 11153 09f6 27EE880A 		vmul.f32	s0, s15, s16
 511:Veno-Echo.cpp **** 
 11154              		.loc 19 511 27 view .LVU3147
 11155 09fa 614C     		ldr	r4, .L627+60
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11156              		.loc 19 510 27 view .LVU3148
 11157 09fc 2846     		mov	r0, r5
 11158 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11159              	.LVL760:
 511:Veno-Echo.cpp **** 
 11160              		.loc 19 511 9 is_stmt 1 view .LVU3149
 511:Veno-Echo.cpp **** 
 11161              		.loc 19 511 27 is_stmt 0 view .LVU3150
 11162 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 11163 0a06 2046     		mov	r0, r4
 11164 0a08 20EE080A 		vmul.f32	s0, s0, s16
 11165 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11166              	.LVL761:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11167              		.loc 19 514 9 is_stmt 1 view .LVU3151
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11168              		.loc 19 514 9 is_stmt 0 view .LVU3152
 11169              	.LBE1820:
 11170              	.LBE2164:
 11171              	.LBE2184:
 11172              	.LBE2195:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11173              		.loc 9 52 26 is_stmt 1 view .LVU3153
 11174              	.LBB2196:
 11175              	.LBB2185:
 11176              	.LBB2165:
 11177              	.LBB1835:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11178              		.loc 19 514 50 is_stmt 0 view .LVU3154
 11179 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 11180 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11181              		.loc 19 518 59 view .LVU3155
 11182 0a18 0AA9     		add	r1, sp, #40
 515:Veno-Echo.cpp ****         
 11183              		.loc 19 515 50 view .LVU3156
 11184 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11185              		.loc 19 518 59 view .LVU3157
 11186 0a1e 0CAA     		add	r2, sp, #48
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11187              		.loc 19 514 50 view .LVU3158
 11188 0a20 27EE267A 		vmul.f32	s14, s14, s13
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11189              		.loc 19 518 59 view .LVU3159
 11190 0a24 5748     		ldr	r0, .L627+64
 515:Veno-Echo.cpp ****         
 11191              		.loc 19 515 50 view .LVU3160
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 342


 11192 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11193              		.loc 19 514 57 view .LVU3161
 11194 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 515:Veno-Echo.cpp ****         
 11195              		.loc 19 515 9 is_stmt 1 view .LVU3162
 11196              	.LVL762:
 515:Veno-Echo.cpp ****         
 11197              		.loc 19 515 9 is_stmt 0 view .LVU3163
 11198              	.LBE1835:
 11199              	.LBE2165:
 11200              	.LBE2185:
 11201              	.LBE2196:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11202              		.loc 9 52 26 is_stmt 1 view .LVU3164
 11203              	.LBB2197:
 11204              	.LBB2186:
 11205              	.LBB2166:
 11206              	.LBB1836:
 515:Veno-Echo.cpp ****         
 11207              		.loc 19 515 57 is_stmt 0 view .LVU3165
 11208 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11209              		.loc 19 518 9 is_stmt 1 view .LVU3166
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11210              		.loc 19 518 59 is_stmt 0 view .LVU3167
 11211 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11212              	.LVL763:
 519:Veno-Echo.cpp **** 
 11213              		.loc 19 519 59 view .LVU3168
 11214 0a36 0BA9     		add	r1, sp, #44
 11215 0a38 0DAA     		add	r2, sp, #52
 11216 0a3a 5348     		ldr	r0, .L627+68
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11217              		.loc 19 518 97 view .LVU3169
 11218 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 519:Veno-Echo.cpp **** 
 11219              		.loc 19 519 9 is_stmt 1 view .LVU3170
 519:Veno-Echo.cpp **** 
 11220              		.loc 19 519 59 is_stmt 0 view .LVU3171
 11221 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11222              	.LVL764:
 11223              	.LBB1821:
 11224              	.LBB1822:
1799:Veno-Echo.cpp ****         returnval = limit;
 11225              		.loc 19 1799 5 view .LVU3172
 11226 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 11227              	.LBE1822:
 11228              	.LBE1821:
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11229              		.loc 19 522 41 view .LVU3173
 11230 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 519:Veno-Echo.cpp **** 
 11231              		.loc 19 519 59 view .LVU3174
 11232 0a4c F0EE407A 		vmov.f32	s15, s0
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11233              		.loc 19 522 9 is_stmt 1 view .LVU3175
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 343


 11234              	.LVL765:
 11235              	.LBB1826:
 11236              	.LBI1821:
1796:Veno-Echo.cpp **** {
 11237              		.loc 19 1796 7 view .LVU3176
 11238              	.LBB1823:
1798:Veno-Echo.cpp ****     if (input > limit)
 11239              		.loc 19 1798 5 view .LVU3177
1799:Veno-Echo.cpp ****         returnval = limit;
 11240              		.loc 19 1799 5 view .LVU3178
 11241 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 11242 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11243 0a58 6EDC     		bgt	.L590
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11244              		.loc 19 1801 10 view .LVU3179
 11245 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 11246 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 11247 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11248 0a66 00F1C080 		bmi	.L591
 11249 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 11250              	.LVL766:
 11251              	.L565:
1806:Veno-Echo.cpp **** }
 11252              		.loc 19 1806 5 view .LVU3180
1806:Veno-Echo.cpp **** }
 11253              		.loc 19 1806 5 is_stmt 0 view .LVU3181
 11254              	.LBE1823:
 11255              	.LBE1826:
 11256              	.LBB1827:
 11257              	.LBB1828:
1799:Veno-Echo.cpp ****         returnval = limit;
 11258              		.loc 19 1799 5 view .LVU3182
 11259 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 11260              	.LBE1828:
 11261              	.LBE1827:
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11262              		.loc 19 522 30 view .LVU3183
 11263 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 523:Veno-Echo.cpp **** 
 11264              		.loc 19 523 9 is_stmt 1 view .LVU3184
 11265              	.LVL767:
 11266              	.LBB1831:
 11267              	.LBI1827:
1796:Veno-Echo.cpp **** {
 11268              		.loc 19 1796 7 view .LVU3185
 11269              	.LBB1829:
1798:Veno-Echo.cpp ****     if (input > limit)
 11270              		.loc 19 1798 5 view .LVU3186
1799:Veno-Echo.cpp ****         returnval = limit;
 11271              		.loc 19 1799 5 view .LVU3187
 11272 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 11273 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11274 0a7e 58DC     		bgt	.L592
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11275              		.loc 19 1801 10 view .LVU3188
 11276 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1802:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 344


 11277              		.loc 19 1802 19 is_stmt 0 view .LVU3189
 11278 0a84 F4EE477A 		vcmp.f32	s15, s14
 11279 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11280 0a8c 48BF     		it	mi
 11281 0a8e F0EE477A 		vmovmi.f32	s15, s14
 11282              	.LVL768:
 11283              	.L566:
1806:Veno-Echo.cpp **** }
 11284              		.loc 19 1806 5 is_stmt 1 view .LVU3190
1806:Veno-Echo.cpp **** }
 11285              		.loc 19 1806 5 is_stmt 0 view .LVU3191
 11286              	.LBE1829:
 11287              	.LBE1831:
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11288              		.loc 19 526 27 view .LVU3192
 11289 0a92 3E4D     		ldr	r5, .L627+72
 527:Veno-Echo.cpp **** 
 11290              		.loc 19 527 27 view .LVU3193
 11291 0a94 3E4C     		ldr	r4, .L627+76
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11292              		.loc 19 526 27 view .LVU3194
 11293 0a96 2846     		mov	r0, r5
 523:Veno-Echo.cpp **** 
 11294              		.loc 19 523 30 view .LVU3195
 11295 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11296              		.loc 19 526 9 is_stmt 1 view .LVU3196
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11297              		.loc 19 526 27 is_stmt 0 view .LVU3197
 11298 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11299              	.LVL769:
 527:Veno-Echo.cpp **** 
 11300              		.loc 19 527 9 is_stmt 1 view .LVU3198
 527:Veno-Echo.cpp **** 
 11301              		.loc 19 527 27 is_stmt 0 view .LVU3199
 11302 0aa0 DFED297A 		vldr.32	s15, .L627+4
 11303 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 11304 0aa8 2046     		mov	r0, r4
 11305 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 11306 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11307              	.LVL770:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11308              		.loc 19 529 9 is_stmt 1 view .LVU3200
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11309              		.loc 19 529 9 is_stmt 0 view .LVU3201
 11310              	.LBE1836:
 11311              	.LBE2166:
 11312              	.LBE2186:
 11313              	.LBE2197:
 11314              		.loc 9 56 27 is_stmt 1 view .LVU3202
 11315              	.LBB2198:
 11316              	.LBB2187:
 11317              	.LBB2167:
 11318              	.LBB1837:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11319              		.loc 19 529 51 is_stmt 0 view .LVU3203
 11320 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 345


 11321 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11322              		.loc 19 532 55 view .LVU3204
 11323 0aba 0EA9     		add	r1, sp, #56
 530:Veno-Echo.cpp **** 
 11324              		.loc 19 530 51 view .LVU3205
 11325 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11326              		.loc 19 532 55 view .LVU3206
 11327 0ac0 10AA     		add	r2, sp, #64
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11328              		.loc 19 529 51 view .LVU3207
 11329 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11330              		.loc 19 532 55 view .LVU3208
 11331 0ac6 3348     		ldr	r0, .L627+80
 530:Veno-Echo.cpp **** 
 11332              		.loc 19 530 51 view .LVU3209
 11333 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11334              		.loc 19 529 58 view .LVU3210
 11335 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 530:Veno-Echo.cpp **** 
 11336              		.loc 19 530 9 is_stmt 1 view .LVU3211
 11337              	.LVL771:
 530:Veno-Echo.cpp **** 
 11338              		.loc 19 530 9 is_stmt 0 view .LVU3212
 11339              	.LBE1837:
 11340              	.LBE2167:
 11341              	.LBE2187:
 11342              	.LBE2198:
 11343              		.loc 9 56 27 is_stmt 1 view .LVU3213
 11344              	.LBB2199:
 11345              	.LBB2188:
 11346              	.LBB2168:
 11347              	.LBB1838:
 530:Veno-Echo.cpp **** 
 11348              		.loc 19 530 58 is_stmt 0 view .LVU3214
 11349 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11350              		.loc 19 532 9 is_stmt 1 view .LVU3215
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11351              		.loc 19 532 55 is_stmt 0 view .LVU3216
 11352 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11353              	.LVL772:
 533:Veno-Echo.cpp **** 
 11354              		.loc 19 533 55 view .LVU3217
 11355 0ad8 0FA9     		add	r1, sp, #60
 11356 0ada 11AA     		add	r2, sp, #68
 11357 0adc 2E48     		ldr	r0, .L627+84
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11358              		.loc 19 532 30 view .LVU3218
 11359 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 533:Veno-Echo.cpp **** 
 11360              		.loc 19 533 9 is_stmt 1 view .LVU3219
 533:Veno-Echo.cpp **** 
 11361              		.loc 19 533 55 is_stmt 0 view .LVU3220
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 346


 11362 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11363              	.LVL773:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11364              		.loc 19 536 53 view .LVU3221
 11365 0ae6 0EAA     		add	r2, sp, #56
 11366 0ae8 0AA9     		add	r1, sp, #40
 11367 0aea 2C48     		ldr	r0, .L627+88
 533:Veno-Echo.cpp **** 
 11368              		.loc 19 533 30 view .LVU3222
 11369 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11370              		.loc 19 536 9 is_stmt 1 view .LVU3223
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11371              		.loc 19 536 53 is_stmt 0 view .LVU3224
 11372 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11373              	.LVL774:
 537:Veno-Echo.cpp **** 
 11374              		.loc 19 537 53 view .LVU3225
 11375 0af4 0FAA     		add	r2, sp, #60
 11376 0af6 0BA9     		add	r1, sp, #44
 11377 0af8 2948     		ldr	r0, .L627+92
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11378              		.loc 19 536 27 view .LVU3226
 11379 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 537:Veno-Echo.cpp **** 
 11380              		.loc 19 537 9 is_stmt 1 view .LVU3227
 537:Veno-Echo.cpp **** 
 11381              		.loc 19 537 53 is_stmt 0 view .LVU3228
 11382 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11383              	.LVL775:
 11384 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 537:Veno-Echo.cpp **** 
 11385              		.loc 19 537 27 view .LVU3229
 11386 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 11387              	.LBE1838:
 11388 0b0a FFF721BB 		b	.L564
 11389              	.LVL776:
 11390              	.L588:
 537:Veno-Echo.cpp **** 
 11391              		.loc 19 537 27 view .LVU3230
 11392              	.LBE2168:
 11393              	.LBB2169:
 11394              	.LBB1811:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11395              		.loc 19 1800 19 view .LVU3231
 11396 0b0e F0EE477A 		vmov.f32	s15, s14
 11397              	.LVL777:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11398              		.loc 19 1800 19 view .LVU3232
 11399 0b12 FFF703BB 		b	.L560
 11400              	.LVL778:
 11401              	.L611:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11402              		.loc 19 1800 19 view .LVU3233
 11403              	.LBE1811:
 11404              	.LBE2169:
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 347


 11405              		.loc 19 557 13 is_stmt 1 view .LVU3234
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11406              		.loc 19 557 18 is_stmt 0 view .LVU3235
 11407 0b16 DBED006A 		vldr.32	s13, [fp]
 558:Veno-Echo.cpp ****         }
 11408              		.loc 19 558 18 view .LVU3236
 11409 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11410              		.loc 19 557 18 view .LVU3237
 11411 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 11412              	.LVL779:
 558:Veno-Echo.cpp ****         }
 11413              		.loc 19 558 13 is_stmt 1 view .LVU3238
 558:Veno-Echo.cpp ****         }
 11414              		.loc 19 558 18 is_stmt 0 view .LVU3239
 11415 0b22 30EE070A 		vadd.f32	s0, s0, s14
 11416              	.LVL780:
 558:Veno-Echo.cpp ****         }
 11417              		.loc 19 558 18 view .LVU3240
 11418 0b26 FFF72CBB 		b	.L570
 11419              	.LVL781:
 11420              	.L614:
 11421              	.LBB2170:
 11422              	.LBB2037:
 11423              	.LBB2026:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11424              		.loc 18 141 17 view .LVU3241
 11425 0b2a 049B     		ldr	r3, [sp, #16]
 11426 0b2c 83ED00BA 		vstr.32	s22, [r3]
 11427 0b30 CAE4     		b	.L528
 11428              	.LVL782:
 11429              	.L592:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11430              		.loc 18 141 17 view .LVU3242
 11431              	.LBE2026:
 11432              	.LBE2037:
 11433              	.LBE2170:
 11434              	.LBB2171:
 11435              	.LBB1839:
 11436              	.LBB1832:
 11437              	.LBB1830:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11438              		.loc 19 1800 19 view .LVU3243
 11439 0b32 F0EE667A 		vmov.f32	s15, s13
 11440              	.LVL783:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11441              		.loc 19 1800 19 view .LVU3244
 11442 0b36 ACE7     		b	.L566
 11443              	.LVL784:
 11444              	.L590:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11445              		.loc 19 1800 19 view .LVU3245
 11446              	.LBE1830:
 11447              	.LBE1832:
 11448              	.LBB1833:
 11449              	.LBB1824:
 11450 0b38 B0EE667A 		vmov.f32	s14, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 348


 11451              	.LVL785:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11452              		.loc 19 1800 19 view .LVU3246
 11453 0b3c 9FED190A 		vldr.32	s0, .L627+96
 11454 0b40 95E7     		b	.L565
 11455              	.L628:
 11456 0b42 00BF     		.align	2
 11457              	.L627:
 11458 0b44 00000000 		.word	.LANCHOR50
 11459 0b48 CDCCCC3D 		.word	1036831949
 11460 0b4c 00000000 		.word	.LANCHOR27
 11461 0b50 00000000 		.word	.LANCHOR28
 11462 0b54 00000000 		.word	.LANCHOR101
 11463 0b58 00000000 		.word	.LANCHOR102
 11464 0b5c 00000000 		.word	.LANCHOR15
 11465 0b60 00000000 		.word	.LANCHOR16
 11466 0b64 00000000 		.word	.LANCHOR99
 11467 0b68 00000000 		.word	.LANCHOR100
 11468 0b6c 00000000 		.word	.LANCHOR107
 11469 0b70 00000000 		.word	.LANCHOR108
 11470 0b74 249F2400 		.word	2400036
 11471 0b78 1C9F2400 		.word	2400028
 11472 0b7c 00000000 		.word	.LANCHOR29
 11473 0b80 00000000 		.word	.LANCHOR30
 11474 0b84 00000000 		.word	.LANCHOR105
 11475 0b88 00000000 		.word	.LANCHOR106
 11476 0b8c 00000000 		.word	.LANCHOR17
 11477 0b90 00000000 		.word	.LANCHOR18
 11478 0b94 00000000 		.word	.LANCHOR103
 11479 0b98 00000000 		.word	.LANCHOR104
 11480 0b9c 00000000 		.word	.LANCHOR109
 11481 0ba0 00000000 		.word	.LANCHOR110
 11482 0ba4 CDCC4C3E 		.word	1045220557
 11483 0ba8 CDCC4CBE 		.word	3192704205
 11484              	.LVL786:
 11485              	.L583:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11486              		.loc 19 1800 19 view .LVU3247
 11487              	.LBE1824:
 11488              	.LBE1833:
 11489              	.LBE1839:
 11490              	.LBE2171:
 11491              	.LBB2172:
 11492              	.LBB2099:
 11493              	.LBB2092:
 11494              	.LBB2090:
 11495 0bac F0EE667A 		vmov.f32	s15, s13
 11496              	.LVL787:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11497              		.loc 19 1800 19 view .LVU3248
 11498 0bb0 76E6     		b	.L548
 11499              	.LVL788:
 11500              	.L581:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11501              		.loc 19 1800 19 view .LVU3249
 11502              	.LBE2090:
 11503              	.LBE2092:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 349


 11504              	.LBB2093:
 11505              	.LBB2084:
 11506 0bb2 B0EE667A 		vmov.f32	s14, s13
 11507              	.LVL789:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11508              		.loc 19 1800 19 view .LVU3250
 11509 0bb6 1FED050A 		vldr.32	s0, .L627+96
 11510 0bba 5EE6     		b	.L547
 11511              	.LVL790:
 11512              	.L524:
1800:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11513              		.loc 19 1800 19 view .LVU3251
 11514              	.LBE2084:
 11515              	.LBE2093:
 11516              	.LBE2099:
 11517              	.LBE2172:
 11518              	.LBB2173:
 11519              	.LBB2038:
 11520              	.LBB2027:
 116:delayline_reverse.h ****                 }
 11521              		.loc 18 116 21 view .LVU3252
 11522 0bbc AB60     		str	r3, [r5, #8]
 11523 0bbe DEE6     		b	.L526
 11524              	.LVL791:
 11525              	.L534:
 116:delayline_reverse.h ****                 }
 11526              		.loc 18 116 21 view .LVU3253
 11527              	.LBE2027:
 11528              	.LBE2038:
 11529              	.LBE2173:
 11530              	.LBB2174:
 11531              	.LBB2064:
 11532              	.LBB2060:
 11533 0bc0 A260     		str	r2, [r4, #8]
 11534 0bc2 B9E6     		b	.L536
 11535              	.LVL792:
 11536              	.L503:
 116:delayline_reverse.h ****                 }
 11537              		.loc 18 116 21 view .LVU3254
 11538              	.LBE2060:
 11539              	.LBE2064:
 11540              	.LBE2174:
 11541              	.LBE2188:
 11542              	.LBE2199:
 578:Veno-Echo.cpp **** 
 11543              		.loc 19 578 1 view .LVU3255
 11544 0bc4 13B0     		add	sp, sp, #76
 11545              		.cfi_remember_state
 11546              		.cfi_def_cfa_offset 92
 11547              		@ sp needed
 11548 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 11549              		.cfi_restore 92
 11550              		.cfi_restore 93
 11551              		.cfi_restore 90
 11552              		.cfi_restore 91
 11553              		.cfi_restore 88
 11554              		.cfi_restore 89
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 350


 11555              		.cfi_restore 86
 11556              		.cfi_restore 87
 11557              		.cfi_restore 84
 11558              		.cfi_restore 85
 11559              		.cfi_restore 82
 11560              		.cfi_restore 83
 11561              		.cfi_restore 80
 11562              		.cfi_restore 81
 11563              		.cfi_def_cfa_offset 36
 11564 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11565              	.LVL793:
 11566              	.L617:
 11567              		.cfi_restore_state
 11568              	.LBB2200:
 11569              	.LBB2189:
 11570              	.LBB2175:
 11571              	.LBB2065:
 11572              	.LBB2061:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11573              		.loc 18 130 17 view .LVU3256
 11574 0bce C2ED007A 		vstr.32	s15, [r2]
 11575 0bd2 E4E4     		b	.L538
 11576              	.L541:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11577              		.loc 18 145 21 view .LVU3257
 11578 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11579              		.loc 18 144 21 view .LVU3258
 11580 0bd6 039C     		ldr	r4, [sp, #12]
 11581              	.LVL794:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11582              		.loc 18 144 21 view .LVU3259
 11583 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11584              		.loc 18 145 21 view .LVU3260
 11585 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11586              		.loc 18 146 21 view .LVU3261
 11587 0bdc 0170     		strb	r1, [r0]
 11588 0bde DEE4     		b	.L538
 11589              	.LVL795:
 11590              	.L582:
 146:delayline_reverse.h ****                 }
 11591              		.loc 18 146 21 view .LVU3262
 11592              	.LBE2061:
 11593              	.LBE2065:
 11594              	.LBE2175:
 11595              	.LBB2176:
 11596              	.LBB2100:
 11597              	.LBB2094:
 11598              	.LBB2085:
1802:Veno-Echo.cpp ****     else
 11599              		.loc 19 1802 19 view .LVU3263
 11600 0be0 B0EE667A 		vmov.f32	s14, s13
 11601              	.LVL796:
1802:Veno-Echo.cpp ****     else
 11602              		.loc 19 1802 19 view .LVU3264
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 351


 11603 0be4 1FED100A 		vldr.32	s0, .L627+100
 11604 0be8 47E6     		b	.L547
 11605              	.LVL797:
 11606              	.L591:
1802:Veno-Echo.cpp ****     else
 11607              		.loc 19 1802 19 view .LVU3265
 11608              	.LBE2085:
 11609              	.LBE2094:
 11610              	.LBE2100:
 11611              	.LBE2176:
 11612              	.LBB2177:
 11613              	.LBB1840:
 11614              	.LBB1834:
 11615              	.LBB1825:
 11616 0bea B0EE667A 		vmov.f32	s14, s13
 11617              	.LVL798:
1802:Veno-Echo.cpp ****     else
 11618              		.loc 19 1802 19 view .LVU3266
 11619 0bee 1FED120A 		vldr.32	s0, .L627+100
 11620 0bf2 3CE7     		b	.L565
 11621              	.LVL799:
 11622              	.L505:
1802:Veno-Echo.cpp ****     else
 11623              		.loc 19 1802 19 view .LVU3267
 11624              	.LBE1825:
 11625              	.LBE1834:
 11626              	.LBE1840:
 11627              	.LBE2177:
 11628              	.LBE2189:
 11629              	.LBE2200:
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 11630              		.loc 19 345 13 is_stmt 1 view .LVU3268
 346:Veno-Echo.cpp ****             break;
 11631              		.loc 19 346 17 view .LVU3269
 346:Veno-Echo.cpp ****             break;
 11632              		.loc 19 346 35 is_stmt 0 view .LVU3270
 11633 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11634              	.LVL800:
 347:Veno-Echo.cpp ****         }
 11635              		.loc 19 347 13 is_stmt 1 view .LVU3271
 11636 0bf8 FFF739BA 		b	.L504
 11637              	.L508:
 337:Veno-Echo.cpp ****                 Update_width();
 11638              		.loc 19 337 13 view .LVU3272
 338:Veno-Echo.cpp ****             break;
 11639              		.loc 19 338 17 view .LVU3273
 338:Veno-Echo.cpp ****             break;
 11640              		.loc 19 338 29 is_stmt 0 view .LVU3274
 11641 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11642              	.LVL801:
 339:Veno-Echo.cpp **** 
 11643              		.loc 19 339 13 is_stmt 1 view .LVU3275
 11644 0c00 FFF735BA 		b	.L504
 11645              	.L509:
 333:Veno-Echo.cpp ****                 Update_width_CV();
 11646              		.loc 19 333 13 view .LVU3276
 334:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 352


 11647              		.loc 19 334 17 view .LVU3277
 11648              	.LBB2201:
 11649              	.LBI2201:
1234:Veno-Echo.cpp **** {
 11650              		.loc 19 1234 6 view .LVU3278
 11651              	.LBB2202:
1236:Veno-Echo.cpp **** }
 11652              		.loc 19 1236 5 view .LVU3279
1236:Veno-Echo.cpp **** }
 11653              		.loc 19 1236 30 is_stmt 0 view .LVU3280
 11654 0c04 0521     		movs	r1, #5
 11655 0c06 2748     		ldr	r0, .L629
 11656 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11657              	.LVL802:
1236:Veno-Echo.cpp **** }
 11658              		.loc 19 1236 13 view .LVU3281
 11659 0c0c 264B     		ldr	r3, .L629+4
 11660 0c0e 83ED000A 		vstr.32	s0, [r3]
1237:Veno-Echo.cpp **** 
 11661              		.loc 19 1237 1 view .LVU3282
 11662 0c12 FFF72CBA 		b	.L504
 11663              	.L510:
 11664              	.LBE2202:
 11665              	.LBE2201:
 329:Veno-Echo.cpp ****                 Update_drywet();
 11666              		.loc 19 329 13 is_stmt 1 view .LVU3283
 330:Veno-Echo.cpp ****             break;
 11667              		.loc 19 330 17 view .LVU3284
 330:Veno-Echo.cpp ****             break;
 11668              		.loc 19 330 30 is_stmt 0 view .LVU3285
 11669 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11670              	.LVL803:
 331:Veno-Echo.cpp **** 
 11671              		.loc 19 331 13 is_stmt 1 view .LVU3286
 11672 0c1a FFF728BA 		b	.L504
 11673              	.L511:
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 11674              		.loc 19 325 13 view .LVU3287
 326:Veno-Echo.cpp ****             break;
 11675              		.loc 19 326 17 view .LVU3288
 11676              	.LBB2203:
 11677              	.LBI2203:
1126:Veno-Echo.cpp **** {
 11678              		.loc 19 1126 6 view .LVU3289
 11679              	.LBB2204:
1128:Veno-Echo.cpp **** }
 11680              		.loc 19 1128 5 view .LVU3290
1128:Veno-Echo.cpp **** }
 11681              		.loc 19 1128 32 is_stmt 0 view .LVU3291
 11682 0c1e 0421     		movs	r1, #4
 11683 0c20 2048     		ldr	r0, .L629
 11684 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11685              	.LVL804:
1128:Veno-Echo.cpp **** }
 11686              		.loc 19 1128 15 view .LVU3292
 11687 0c26 214B     		ldr	r3, .L629+8
 11688 0c28 83ED000A 		vstr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 353


1129:Veno-Echo.cpp **** 
 11689              		.loc 19 1129 1 view .LVU3293
 11690 0c2c FFF71FBA 		b	.L504
 11691              	.L512:
 11692              	.LBE2204:
 11693              	.LBE2203:
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 11694              		.loc 19 321 13 is_stmt 1 view .LVU3294
 322:Veno-Echo.cpp ****             break;
 11695              		.loc 19 322 17 view .LVU3295
 322:Veno-Echo.cpp ****             break;
 11696              		.loc 19 322 33 is_stmt 0 view .LVU3296
 11697 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11698              	.LVL805:
 323:Veno-Echo.cpp **** 
 11699              		.loc 19 323 13 is_stmt 1 view .LVU3297
 11700 0c34 FFF71BBA 		b	.L504
 11701              	.L513:
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11702              		.loc 19 317 13 view .LVU3298
 318:Veno-Echo.cpp ****             break;
 11703              		.loc 19 318 17 view .LVU3299
 11704              	.LBB2205:
 11705              	.LBI2205:
1053:Veno-Echo.cpp **** {
 11706              		.loc 19 1053 6 view .LVU3300
 11707              	.LBB2206:
1055:Veno-Echo.cpp **** }
 11708              		.loc 19 1055 5 view .LVU3301
1055:Veno-Echo.cpp **** }
 11709              		.loc 19 1055 35 is_stmt 0 view .LVU3302
 11710 0c38 0321     		movs	r1, #3
 11711 0c3a 1A48     		ldr	r0, .L629
 11712 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11713              	.LVL806:
1055:Veno-Echo.cpp **** }
 11714              		.loc 19 1055 18 view .LVU3303
 11715 0c40 1B4B     		ldr	r3, .L629+12
 11716 0c42 83ED000A 		vstr.32	s0, [r3]
1056:Veno-Echo.cpp **** 
 11717              		.loc 19 1056 1 view .LVU3304
 11718 0c46 FFF712BA 		b	.L504
 11719              	.L514:
 11720              	.LBE2206:
 11721              	.LBE2205:
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 11722              		.loc 19 313 13 is_stmt 1 view .LVU3305
 314:Veno-Echo.cpp ****             break;
 11723              		.loc 19 314 17 view .LVU3306
 314:Veno-Echo.cpp ****             break;
 11724              		.loc 19 314 33 is_stmt 0 view .LVU3307
 11725 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11726              	.LVL807:
 315:Veno-Echo.cpp **** 
 11727              		.loc 19 315 13 is_stmt 1 view .LVU3308
 11728 0c4e FFF70EBA 		b	.L504
 11729              	.L515:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 354


 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11730              		.loc 19 309 13 view .LVU3309
 310:Veno-Echo.cpp ****             break;
 11731              		.loc 19 310 17 view .LVU3310
 11732              	.LBB2207:
 11733              	.LBI2207:
 980:Veno-Echo.cpp **** {
 11734              		.loc 19 980 6 view .LVU3311
 11735              	.LBB2208:
 982:Veno-Echo.cpp **** }
 11736              		.loc 19 982 5 view .LVU3312
 982:Veno-Echo.cpp **** }
 11737              		.loc 19 982 35 is_stmt 0 view .LVU3313
 11738 0c52 0221     		movs	r1, #2
 11739 0c54 1348     		ldr	r0, .L629
 11740 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11741              	.LVL808:
 982:Veno-Echo.cpp **** }
 11742              		.loc 19 982 18 view .LVU3314
 11743 0c5a 164B     		ldr	r3, .L629+16
 11744 0c5c 83ED000A 		vstr.32	s0, [r3]
 983:Veno-Echo.cpp **** void Update_feedbackL()
 11745              		.loc 19 983 1 view .LVU3315
 11746 0c60 FFF705BA 		b	.L504
 11747              	.L516:
 11748              	.LBE2208:
 11749              	.LBE2207:
 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11750              		.loc 19 305 13 is_stmt 1 view .LVU3316
 306:Veno-Echo.cpp ****             break;
 11751              		.loc 19 306 17 view .LVU3317
 306:Veno-Echo.cpp ****             break;
 11752              		.loc 19 306 34 is_stmt 0 view .LVU3318
 11753 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11754              	.LVL809:
 307:Veno-Echo.cpp **** 
 11755              		.loc 19 307 13 is_stmt 1 view .LVU3319
 11756 0c68 FFF701BA 		b	.L504
 11757              	.L517:
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11758              		.loc 19 301 13 view .LVU3320
 302:Veno-Echo.cpp ****             break;
 11759              		.loc 19 302 17 view .LVU3321
 11760              	.LBB2209:
 11761              	.LBI2209:
 885:Veno-Echo.cpp **** {
 11762              		.loc 19 885 6 view .LVU3322
 11763              	.LBB2210:
 887:Veno-Echo.cpp **** }
 11764              		.loc 19 887 5 view .LVU3323
 887:Veno-Echo.cpp **** }
 11765              		.loc 19 887 36 is_stmt 0 view .LVU3324
 11766 0c6c 0121     		movs	r1, #1
 11767 0c6e 0D48     		ldr	r0, .L629
 11768 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11769              	.LVL810:
 887:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 355


 11770              		.loc 19 887 19 view .LVU3325
 11771 0c74 104B     		ldr	r3, .L629+20
 11772 0c76 83ED000A 		vstr.32	s0, [r3]
 888:Veno-Echo.cpp **** 
 11773              		.loc 19 888 1 view .LVU3326
 11774 0c7a FFF7F8B9 		b	.L504
 11775              	.L518:
 11776              	.LBE2210:
 11777              	.LBE2209:
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11778              		.loc 19 297 13 is_stmt 1 view .LVU3327
 298:Veno-Echo.cpp ****             break;
 11779              		.loc 19 298 17 view .LVU3328
 298:Veno-Echo.cpp ****             break;
 11780              		.loc 19 298 34 is_stmt 0 view .LVU3329
 11781 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11782              	.LVL811:
 299:Veno-Echo.cpp **** 
 11783              		.loc 19 299 13 is_stmt 1 view .LVU3330
 11784 0c82 FFF7F4B9 		b	.L504
 11785              	.L519:
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11786              		.loc 19 293 13 view .LVU3331
 294:Veno-Echo.cpp ****             break;
 11787              		.loc 19 294 17 view .LVU3332
 11788              	.LBB2211:
 11789              	.LBI2211:
 788:Veno-Echo.cpp **** {
 11790              		.loc 19 788 6 view .LVU3333
 11791              	.LBB2212:
 790:Veno-Echo.cpp **** }
 11792              		.loc 19 790 5 view .LVU3334
 790:Veno-Echo.cpp **** }
 11793              		.loc 19 790 36 is_stmt 0 view .LVU3335
 11794 0c86 0021     		movs	r1, #0
 11795 0c88 0648     		ldr	r0, .L629
 11796 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11797              	.LVL812:
 790:Veno-Echo.cpp **** }
 11798              		.loc 19 790 19 view .LVU3336
 11799 0c8e 0B4B     		ldr	r3, .L629+24
 11800 0c90 83ED000A 		vstr.32	s0, [r3]
 791:Veno-Echo.cpp **** 
 11801              		.loc 19 791 1 view .LVU3337
 11802 0c94 FFF7EBB9 		b	.L504
 11803              	.L520:
 11804              	.LBE2212:
 11805              	.LBE2211:
 288:Veno-Echo.cpp ****                 Update_Buttons();
 11806              		.loc 19 288 13 is_stmt 1 view .LVU3338
 289:Veno-Echo.cpp ****                 GetModCV();
 11807              		.loc 19 289 17 view .LVU3339
 289:Veno-Echo.cpp ****                 GetModCV();
 11808              		.loc 19 289 31 is_stmt 0 view .LVU3340
 11809 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11810              	.LVL813:
 290:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 356


 11811              		.loc 19 290 17 is_stmt 1 view .LVU3341
 290:Veno-Echo.cpp ****             break;
 11812              		.loc 19 290 25 is_stmt 0 view .LVU3342
 11813 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 11814              	.LVL814:
 291:Veno-Echo.cpp **** 
 11815              		.loc 19 291 13 is_stmt 1 view .LVU3343
 11816 0ca0 FFF7E5B9 		b	.L504
 11817              	.L630:
 11818              		.align	2
 11819              	.L629:
 11820 0ca4 18000000 		.word	.LANCHOR4+24
 11821 0ca8 00000000 		.word	.LANCHOR39
 11822 0cac 00000000 		.word	.LANCHOR31
 11823 0cb0 00000000 		.word	.LANCHOR20
 11824 0cb4 00000000 		.word	.LANCHOR7
 11825 0cb8 00000000 		.word	.LANCHOR6
 11826 0cbc 00000000 		.word	.LANCHOR5
 11827              		.cfi_endproc
 11828              	.LFE4288:
 11830              		.section	.text._Z9HardLimitff,"ax",%progbits
 11831              		.align	1
 11832              		.p2align 2,,3
 11833              		.global	_Z9HardLimitff
 11834              		.syntax unified
 11835              		.thumb
 11836              		.thumb_func
 11837              		.fpu fpv5-d16
 11839              	_Z9HardLimitff:
 11840              	.LVL815:
 11841              	.LFB4315:
1797:Veno-Echo.cpp ****     float returnval{};
 11842              		.loc 19 1797 1 view -0
 11843              		.cfi_startproc
 11844              		@ args = 0, pretend = 0, frame = 0
 11845              		@ frame_needed = 0, uses_anonymous_args = 0
 11846              		@ link register save eliminated.
1798:Veno-Echo.cpp ****     if (input > limit)
 11847              		.loc 19 1798 5 view .LVU3345
1799:Veno-Echo.cpp ****         returnval = limit;
 11848              		.loc 19 1799 5 view .LVU3346
 11849 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11850 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11851 0008 07DC     		bgt	.L632
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11852              		.loc 19 1801 10 view .LVU3347
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11853              		.loc 19 1801 28 is_stmt 0 view .LVU3348
 11854 000a F1EE600A 		vneg.f32	s1, s1
 11855              	.LVL816:
1801:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11856              		.loc 19 1801 10 view .LVU3349
 11857 000e F4EEC00A 		vcmpe.f32	s1, s0
 11858 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1804:Veno-Echo.cpp **** 
 11859              		.loc 19 1804 19 view .LVU3350
 11860 0016 70FE800A 		vselgt.f32	s1, s1, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 357


 11861              	.L632:
 11862              	.LVL817:
1806:Veno-Echo.cpp **** }
 11863              		.loc 19 1806 5 is_stmt 1 view .LVU3351
1807:Veno-Echo.cpp **** 
 11864              		.loc 19 1807 1 is_stmt 0 view .LVU3352
 11865 001a B0EE600A 		vmov.f32	s0, s1
 11866              	.LVL818:
1807:Veno-Echo.cpp **** 
 11867              		.loc 19 1807 1 view .LVU3353
 11868 001e 7047     		bx	lr
 11869              		.cfi_endproc
 11870              	.LFE4315:
 11872              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11873              		.align	1
 11874              		.p2align 2,,3
 11875              		.global	_Z10PotCVComboff
 11876              		.syntax unified
 11877              		.thumb
 11878              		.thumb_func
 11879              		.fpu fpv5-d16
 11881              	_Z10PotCVComboff:
 11882              	.LVL819:
 11883              	.LFB4316:
1810:Veno-Echo.cpp ****     float output{};
 11884              		.loc 19 1810 1 is_stmt 1 view -0
 11885              		.cfi_startproc
 11886              		@ args = 0, pretend = 0, frame = 0
 11887              		@ frame_needed = 0, uses_anonymous_args = 0
 11888              		@ link register save eliminated.
1811:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11889              		.loc 19 1811 5 view .LVU3355
1812:Veno-Echo.cpp **** 
 11890              		.loc 19 1812 5 view .LVU3356
1812:Veno-Echo.cpp **** 
 11891              		.loc 19 1812 39 is_stmt 0 view .LVU3357
 11892 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1812:Veno-Echo.cpp **** 
 11893              		.loc 19 1812 49 view .LVU3358
 11894 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1812:Veno-Echo.cpp **** 
 11895              		.loc 19 1812 12 view .LVU3359
 11896 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1812:Veno-Echo.cpp **** 
 11897              		.loc 19 1812 39 view .LVU3360
 11898 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11899              	.LVL820:
1812:Veno-Echo.cpp **** 
 11900              		.loc 19 1812 49 view .LVU3361
 11901 0010 70EEE60A 		vsub.f32	s1, s1, s13
1812:Veno-Echo.cpp **** 
 11902              		.loc 19 1812 12 view .LVU3362
 11903 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11904              	.LVL821:
1814:Veno-Echo.cpp ****     {
 11905              		.loc 19 1814 5 is_stmt 1 view .LVU3363
 11906 0018 B5EEC00A 		vcmpe.f32	s0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 358


 11907 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11908 0020 06D4     		bmi	.L638
1819:Veno-Echo.cpp ****     {
 11909              		.loc 19 1819 5 view .LVU3364
1821:Veno-Echo.cpp ****     }
 11910              		.loc 19 1821 16 is_stmt 0 view .LVU3365
 11911 0022 B4EE670A 		vcmp.f32	s0, s15
 11912 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11913 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11914              	.LVL822:
1821:Veno-Echo.cpp ****     }
 11915              		.loc 19 1821 16 view .LVU3366
 11916 002e 7047     		bx	lr
 11917              	.LVL823:
 11918              	.L638:
1816:Veno-Echo.cpp ****     }
 11919              		.loc 19 1816 16 view .LVU3367
 11920 0030 9FED010A 		vldr.32	s0, .L640
 11921              	.LVL824:
1824:Veno-Echo.cpp **** }
 11922              		.loc 19 1824 5 is_stmt 1 view .LVU3368
1825:Veno-Echo.cpp **** 
 11923              		.loc 19 1825 1 is_stmt 0 view .LVU3369
 11924 0034 7047     		bx	lr
 11925              	.L641:
 11926 0036 00BF     		.align	2
 11927              	.L640:
 11928 0038 00000000 		.word	0
 11929              		.cfi_endproc
 11930              	.LFE4316:
 11932              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 11933              		.align	1
 11934              		.p2align 2,,3
 11935              		.global	_Z16checkPickupStateffbb
 11936              		.syntax unified
 11937              		.thumb
 11938              		.thumb_func
 11939              		.fpu fpv5-d16
 11941              	_Z16checkPickupStateffbb:
 11942              	.LVL825:
 11943              	.LFB4317:
1829:Veno-Echo.cpp ****     bool retval{};
 11944              		.loc 19 1829 1 is_stmt 1 view -0
 11945              		.cfi_startproc
 11946              		@ args = 0, pretend = 0, frame = 0
 11947              		@ frame_needed = 0, uses_anonymous_args = 0
 11948              		@ link register save eliminated.
1830:Veno-Echo.cpp ****     
 11949              		.loc 19 1830 5 view .LVU3371
1832:Veno-Echo.cpp ****     {
 11950              		.loc 19 1832 5 view .LVU3372
 11951 0000 69B1     		cbz	r1, .L643
1834:Veno-Echo.cpp ****         {
 11952              		.loc 19 1834 9 view .LVU3373
 11953              	.LVL826:
 11954              	.LBB2221:
 11955              	.LBI2221:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 359


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11956              		.loc 20 75 3 view .LVU3374
 11957              	.LBB2222:
 11958              		.loc 20 76 5 view .LVU3375
 11959              		.loc 20 76 5 is_stmt 0 view .LVU3376
 11960              	.LBE2222:
 11961              	.LBE2221:
1834:Veno-Echo.cpp ****         {
 11962              		.loc 19 1834 15 view .LVU3377
 11963 0002 70EE600A 		vsub.f32	s1, s0, s1
 11964              	.LVL827:
1834:Veno-Echo.cpp ****         {
 11965              		.loc 19 1834 9 view .LVU3378
 11966 0006 DFED0D7A 		vldr.32	s15, .L646
 11967              	.LBB2224:
 11968              	.LBB2223:
 11969              		.loc 20 76 31 view .LVU3379
 11970 000a B0EEE00A 		vabs.f32	s0, s1
 11971              	.LVL828:
 11972              		.loc 20 76 31 view .LVU3380
 11973              	.LBE2223:
 11974              	.LBE2224:
1834:Veno-Echo.cpp ****         {
 11975              		.loc 19 1834 9 view .LVU3381
 11976 000e B4EEE70A 		vcmpe.f32	s0, s15
 11977 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11978 0016 D4BF     		ite	le
 11979 0018 0120     		movle	r0, #1
 11980              	.LVL829:
1834:Veno-Echo.cpp ****         {
 11981              		.loc 19 1834 9 view .LVU3382
 11982 001a 0020     		movgt	r0, #0
 11983 001c 7047     		bx	lr
 11984              	.LVL830:
 11985              	.L643:
 11986              	.LBB2225:
 11987              	.LBI2225:
1828:Veno-Echo.cpp **** {
 11988              		.loc 19 1828 6 is_stmt 1 view .LVU3383
 11989              	.LBB2226:
1846:Veno-Echo.cpp ****     {
 11990              		.loc 19 1846 5 view .LVU3384
 11991 001e 60B9     		cbnz	r0, .L644
1848:Veno-Echo.cpp ****         {
 11992              		.loc 19 1848 9 view .LVU3385
 11993              	.LVL831:
 11994              	.LBB2227:
 11995              	.LBI2227:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11996              		.loc 20 75 3 view .LVU3386
 11997              	.LBB2228:
 11998              		.loc 20 76 5 view .LVU3387
 11999              		.loc 20 76 5 is_stmt 0 view .LVU3388
 12000              	.LBE2228:
 12001              	.LBE2227:
1848:Veno-Echo.cpp ****         {
 12002              		.loc 19 1848 15 view .LVU3389
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 360


 12003 0020 30EE600A 		vsub.f32	s0, s0, s1
 12004              	.LVL832:
1848:Veno-Echo.cpp ****         {
 12005              		.loc 19 1848 9 view .LVU3390
 12006 0024 DFED057A 		vldr.32	s15, .L646
 12007              	.LBB2230:
 12008              	.LBB2229:
 12009              		.loc 20 76 31 view .LVU3391
 12010 0028 B0EEC00A 		vabs.f32	s0, s0
 12011              	.LBE2229:
 12012              	.LBE2230:
1848:Veno-Echo.cpp ****         {
 12013              		.loc 19 1848 9 view .LVU3392
 12014 002c B4EEE70A 		vcmpe.f32	s0, s15
 12015 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12016 0034 CCBF     		ite	gt
 12017 0036 0120     		movgt	r0, #1
 12018              	.LVL833:
1848:Veno-Echo.cpp ****         {
 12019              		.loc 19 1848 9 view .LVU3393
 12020 0038 0020     		movle	r0, #0
 12021              	.L644:
 12022              	.LVL834:
1848:Veno-Echo.cpp ****         {
 12023              		.loc 19 1848 9 view .LVU3394
 12024              	.LBE2226:
 12025              	.LBE2225:
1865:Veno-Echo.cpp **** 
 12026              		.loc 19 1865 5 is_stmt 1 view .LVU3395
1867:Veno-Echo.cpp **** 
 12027              		.loc 19 1867 1 is_stmt 0 view .LVU3396
 12028 003a 7047     		bx	lr
 12029              	.L647:
 12030              		.align	2
 12031              	.L646:
 12032 003c 0AD7A33B 		.word	1000593162
 12033              		.cfi_endproc
 12034              	.LFE4317:
 12036              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12037              		.align	1
 12038              		.p2align 2,,3
 12039              		.global	_Z20checkPickupState_altff11pickupStateb
 12040              		.syntax unified
 12041              		.thumb
 12042              		.thumb_func
 12043              		.fpu fpv5-d16
 12045              	_Z20checkPickupState_altff11pickupStateb:
 12046              	.LVL835:
 12047              	.LFB4318:
1871:Veno-Echo.cpp ****     pickupState retval{};
 12048              		.loc 19 1871 1 is_stmt 1 view -0
 12049              		.cfi_startproc
 12050              		@ args = 0, pretend = 0, frame = 0
 12051              		@ frame_needed = 0, uses_anonymous_args = 0
 12052              		@ link register save eliminated.
1872:Veno-Echo.cpp **** 
 12053              		.loc 19 1872 5 view .LVU3398
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 361


1874:Veno-Echo.cpp ****     {
 12054              		.loc 19 1874 5 view .LVU3399
1871:Veno-Echo.cpp ****     pickupState retval{};
 12055              		.loc 19 1871 1 is_stmt 0 view .LVU3400
 12056 0000 F0EE607A 		vmov.f32	s15, s1
1874:Veno-Echo.cpp ****     {
 12057              		.loc 19 1874 5 view .LVU3401
 12058 0004 51B1     		cbz	r1, .L649
1876:Veno-Echo.cpp ****         {
 12059              		.loc 19 1876 9 is_stmt 1 view .LVU3402
1876:Veno-Echo.cpp ****         {
 12060              		.loc 19 1876 31 is_stmt 0 view .LVU3403
 12061 0006 DFED0B0A 		vldr.32	s1, .L654
 12062              	.LVL836:
1876:Veno-Echo.cpp ****         {
 12063              		.loc 19 1876 31 view .LVU3404
 12064 000a 77EEE06A 		vsub.f32	s13, s15, s1
1876:Veno-Echo.cpp ****         {
 12065              		.loc 19 1876 9 view .LVU3405
 12066 000e F4EEC06A 		vcmpe.f32	s13, s0
 12067 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12068 0016 03DD     		ble	.L653
1878:Veno-Echo.cpp ****         }
 12069              		.loc 19 1878 20 view .LVU3406
 12070 0018 0020     		movs	r0, #0
 12071              	.LVL837:
1915:Veno-Echo.cpp **** }
 12072              		.loc 19 1915 5 is_stmt 1 view .LVU3407
 12073              		.loc 19 1916 1 is_stmt 0 view .LVU3408
 12074 001a 7047     		bx	lr
 12075              	.LVL838:
 12076              	.L649:
 12077              		.loc 19 1916 1 view .LVU3409
 12078 001c FFF7FEBF 		b	_Z20checkPickupState_altff11pickupStateb.part.0
 12079              	.LVL839:
 12080              	.L653:
1881:Veno-Echo.cpp ****         {
 12081              		.loc 19 1881 14 is_stmt 1 view .LVU3410
1881:Veno-Echo.cpp ****         {
 12082              		.loc 19 1881 36 is_stmt 0 view .LVU3411
 12083 0020 77EEA00A 		vadd.f32	s1, s15, s1
1881:Veno-Echo.cpp ****         {
 12084              		.loc 19 1881 14 view .LVU3412
 12085 0024 F4EEC00A 		vcmpe.f32	s1, s0
 12086 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1888:Veno-Echo.cpp ****         }
 12087              		.loc 19 1888 20 view .LVU3413
 12088 002c 4CBF     		ite	mi
 12089 002e 0120     		movmi	r0, #1
 12090              	.LVL840:
1888:Veno-Echo.cpp ****         }
 12091              		.loc 19 1888 20 view .LVU3414
 12092 0030 0220     		movpl	r0, #2
 12093 0032 7047     		bx	lr
 12094              	.L655:
 12095              		.align	2
 12096              	.L654:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 362


 12097 0034 0AD7A33B 		.word	1000593162
 12098              		.cfi_endproc
 12099              	.LFE4318:
 12101              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12102              		.align	1
 12103              		.p2align 2,,3
 12104              		.syntax unified
 12105              		.thumb
 12106              		.thumb_func
 12107              		.fpu fpv5-d16
 12109              	_GLOBAL__sub_I_delMemsL:
 12110              	.LFB4897:
 12111              		.loc 19 1916 1 is_stmt 1 view -0
 12112              		.cfi_startproc
 12113              		@ args = 0, pretend = 0, frame = 0
 12114              		@ frame_needed = 0, uses_anonymous_args = 0
 12115              	.LBB2387:
 12116              	.LBI2387:
 12117              		.loc 19 1916 1 view .LVU3416
 12118              	.LVL841:
 12119              	.LBB2388:
 12120              	.LBB2389:
 12121              	.LBI2389:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12122              		.loc 2 21 5 view .LVU3417
 12123              	.LBB2390:
 12124              	.LBB2391:
 12125              	.LBI2391:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12126              		.loc 6 36 5 view .LVU3418
 12127              	.LBE2391:
 12128              	.LBE2390:
 12129              	.LBE2389:
 12130              	.LBE2388:
 12131              	.LBE2387:
 12132              		.loc 19 1916 1 is_stmt 0 view .LVU3419
 12133 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12134              		.cfi_def_cfa_offset 24
 12135              		.cfi_offset 4, -24
 12136              		.cfi_offset 5, -20
 12137              		.cfi_offset 6, -16
 12138              		.cfi_offset 7, -12
 12139              		.cfi_offset 8, -8
 12140              		.cfi_offset 14, -4
 12141              	.LBB2510:
 12142              	.LBB2506:
 12143              	.LBB2406:
 12144              	.LBB2404:
 12145              	.LBB2396:
 12146              	.LBB2392:
 12147              	.LBB2393:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12148              		.loc 6 36 35 view .LVU3420
 12149 0004 9448     		ldr	r0, .L658
 12150 0006 0026     		movs	r6, #0
 12151              	.LBE2393:
 12152              	.LBE2392:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 363


 12153              	.LBE2396:
 12154              	.LBE2404:
 12155              	.LBE2406:
 12156              		.file 25 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12157              		.loc 25 33 18 view .LVU3421
 12158 0008 944C     		ldr	r4, .L658+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12159              		.loc 19 40 12 view .LVU3422
 12160 000a 954D     		ldr	r5, .L658+8
 12161              		.loc 25 33 18 view .LVU3423
 12162 000c 2246     		mov	r2, r4
 12163 000e 9549     		ldr	r1, .L658+12
 12164              	.LBB2407:
 12165              	.LBB2405:
 12166              	.LBB2397:
 12167              	.LBB2395:
 12168              	.LBB2394:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12169              		.loc 6 36 35 view .LVU3424
 12170 0010 4661     		str	r6, [r0, #20]
 12171              	.LVL842:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12172              		.loc 6 36 35 view .LVU3425
 12173              	.LBE2394:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 364


 12174              	.LBE2395:
 12175              	.LBE2397:
 12176              	.LBB2398:
 12177              	.LBI2398:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12178              		.loc 5 84 5 is_stmt 1 view .LVU3426
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12179              		.loc 5 84 5 is_stmt 0 view .LVU3427
 12180              	.LBE2398:
 12181              	.LBB2399:
 12182              	.LBI2399:
 12183              		.file 26 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 365


  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12184              		.loc 26 83 5 is_stmt 1 view .LVU3428
 12185              	.LBB2400:
 12186              	.LBB2401:
 12187              		.loc 26 83 33 is_stmt 0 view .LVU3429
 12188 0012 0662     		str	r6, [r0, #32]
 12189              	.LVL843:
 12190              		.loc 26 83 33 view .LVU3430
 12191              	.LBE2401:
 12192              	.LBE2400:
 12193              	.LBE2399:
 12194              	.LBB2402:
 12195              	.LBI2402:
  40:../libdaisy/src/hid/usb.h **** 
 12196              		.loc 4 40 5 is_stmt 1 view .LVU3431
  40:../libdaisy/src/hid/usb.h **** 
 12197              		.loc 4 40 5 is_stmt 0 view .LVU3432
 12198              	.LBE2402:
 12199              	.LBB2403:
 12200              	.LBI2403:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 366


  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12201              		.loc 3 56 5 is_stmt 1 view .LVU3433
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12202              		.loc 3 56 5 is_stmt 0 view .LVU3434
 12203              	.LBE2403:
 12204              	.LBE2405:
 12205              	.LBE2407:
 12206              		.loc 25 33 18 view .LVU3435
 12207 0014 FFF7FEFF 		bl	__aeabi_atexit
 12208              	.LVL844:
 12209              	.LBB2408:
 12210              	.LBI2408:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12211              		.loc 9 21 5 is_stmt 1 view .LVU3436
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12212              		.loc 9 21 5 is_stmt 0 view .LVU3437
 12213              	.LBE2408:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12214              		.loc 19 40 12 view .LVU3438
 12215 0018 2246     		mov	r2, r4
 12216 001a 2946     		mov	r1, r5
 12217 001c 9248     		ldr	r0, .L658+16
 12218 001e FFF7FEFF 		bl	__aeabi_atexit
 12219              	.LVL845:
 12220              	.LBB2409:
 12221              	.LBI2409:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12222              		.loc 9 21 5 is_stmt 1 view .LVU3439
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12223              		.loc 9 21 5 is_stmt 0 view .LVU3440
 12224              	.LBE2409:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12225              		.loc 19 41 12 view .LVU3441
 12226 0022 2246     		mov	r2, r4
 12227 0024 2946     		mov	r1, r5
 12228 0026 9148     		ldr	r0, .L658+20
 12229 0028 FFF7FEFF 		bl	__aeabi_atexit
 12230              	.LVL846:
 12231              	.LBB2410:
 12232              	.LBI2410:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12233              		.loc 9 21 5 is_stmt 1 view .LVU3442
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12234              		.loc 9 21 5 is_stmt 0 view .LVU3443
 12235              	.LBE2410:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12236              		.loc 19 42 12 view .LVU3444
 12237 002c 2246     		mov	r2, r4
 12238 002e 2946     		mov	r1, r5
 12239 0030 8F48     		ldr	r0, .L658+24
 12240 0032 FFF7FEFF 		bl	__aeabi_atexit
 12241              	.LVL847:
 12242              	.LBB2411:
 12243              	.LBI2411:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12244              		.loc 9 21 5 is_stmt 1 view .LVU3445
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 367


 12245              		.loc 9 21 5 is_stmt 0 view .LVU3446
 12246              	.LBE2411:
  43:Veno-Echo.cpp **** 
 12247              		.loc 19 43 12 view .LVU3447
 12248 0036 2246     		mov	r2, r4
 12249 0038 2946     		mov	r1, r5
 12250 003a 8E48     		ldr	r0, .L658+28
 12251 003c FFF7FEFF 		bl	__aeabi_atexit
 12252              	.LVL848:
 12253              	.LBB2412:
 12254              	.LBI2412:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12255              		.loc 9 21 5 is_stmt 1 view .LVU3448
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12256              		.loc 9 21 5 is_stmt 0 view .LVU3449
 12257              	.LBE2412:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12258              		.loc 19 45 12 view .LVU3450
 12259 0040 2246     		mov	r2, r4
 12260 0042 2946     		mov	r1, r5
 12261 0044 8C48     		ldr	r0, .L658+32
 12262 0046 FFF7FEFF 		bl	__aeabi_atexit
 12263              	.LVL849:
 12264              	.LBB2413:
 12265              	.LBI2413:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12266              		.loc 9 21 5 is_stmt 1 view .LVU3451
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12267              		.loc 9 21 5 is_stmt 0 view .LVU3452
 12268              	.LBE2413:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12269              		.loc 19 46 12 view .LVU3453
 12270 004a 2246     		mov	r2, r4
 12271 004c 2946     		mov	r1, r5
 12272 004e 8B48     		ldr	r0, .L658+36
 12273 0050 FFF7FEFF 		bl	__aeabi_atexit
 12274              	.LVL850:
 12275              	.LBB2414:
 12276              	.LBI2414:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12277              		.loc 9 21 5 is_stmt 1 view .LVU3454
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12278              		.loc 9 21 5 is_stmt 0 view .LVU3455
 12279              	.LBE2414:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12280              		.loc 19 47 12 view .LVU3456
 12281 0054 2246     		mov	r2, r4
 12282 0056 2946     		mov	r1, r5
 12283 0058 8948     		ldr	r0, .L658+40
 12284 005a FFF7FEFF 		bl	__aeabi_atexit
 12285              	.LVL851:
 12286              	.LBB2415:
 12287              	.LBI2415:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12288              		.loc 9 21 5 is_stmt 1 view .LVU3457
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12289              		.loc 9 21 5 is_stmt 0 view .LVU3458
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 368


 12290              	.LBE2415:
  48:Veno-Echo.cpp **** 
 12291              		.loc 19 48 12 view .LVU3459
 12292 005e 2246     		mov	r2, r4
 12293 0060 2946     		mov	r1, r5
 12294 0062 8848     		ldr	r0, .L658+44
 12295 0064 FFF7FEFF 		bl	__aeabi_atexit
 12296              	.LVL852:
 12297              	.LBB2416:
 12298              	.LBI2416:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12299              		.loc 8 15 5 is_stmt 1 view .LVU3460
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12300              		.loc 8 15 5 is_stmt 0 view .LVU3461
 12301              	.LBE2416:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12302              		.loc 19 50 19 view .LVU3462
 12303 0068 2246     		mov	r2, r4
 12304 006a 8749     		ldr	r1, .L658+48
 12305              	.LBB2417:
 12306              	.LBB2418:
 12307              	.LBB2419:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12308              		.loc 12 45 13 view .LVU3463
 12309 006c 0025     		movs	r5, #0
 12310              	.LBE2419:
 12311              	.LBE2418:
 12312              	.LBE2417:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12313              		.loc 19 50 19 view .LVU3464
 12314 006e 8748     		ldr	r0, .L658+52
 12315 0070 FFF7FEFF 		bl	__aeabi_atexit
 12316              	.LVL853:
 12317              	.LBB2424:
 12318              	.LBI2417:
  43:envFollow.h   ****     {
 12319              		.loc 12 43 5 is_stmt 1 view .LVU3465
 12320              	.LBB2422:
 12321              	.LBB2420:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12322              		.loc 12 45 9 view .LVU3466
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12323              		.loc 12 48 11 is_stmt 0 view .LVU3467
 12324 0074 864F     		ldr	r7, .L658+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12325              		.loc 12 45 13 view .LVU3468
 12326 0076 8748     		ldr	r0, .L658+60
 12327              	.LBE2420:
 12328              	.LBE2422:
 12329              	.LBE2424:
  51:Veno-Echo.cpp **** 
 12330              		.loc 19 51 18 view .LVU3469
 12331 0078 2246     		mov	r2, r4
 12332 007a 8749     		ldr	r1, .L658+64
 12333              	.LBB2425:
 12334              	.LBB2423:
 12335              	.LBB2421:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 369


  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12336              		.loc 12 45 13 view .LVU3470
 12337 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12338              		.loc 12 46 9 is_stmt 1 view .LVU3471
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12339              		.loc 12 46 20 is_stmt 0 view .LVU3472
 12340 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12341              		.loc 12 47 9 is_stmt 1 view .LVU3473
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12342              		.loc 12 47 17 is_stmt 0 view .LVU3474
 12343 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12344              		.loc 12 48 9 is_stmt 1 view .LVU3475
  50:envFollow.h   ****     }  
 12345              		.loc 12 50 21 is_stmt 0 view .LVU3476
 12346 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12347              		.loc 12 48 11 view .LVU3477
 12348 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12349              		.loc 12 49 9 is_stmt 1 view .LVU3478
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12350              		.loc 12 49 15 is_stmt 0 view .LVU3479
 12351 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12352              		.loc 12 50 9 is_stmt 1 view .LVU3480
 12353              	.LVL854:
  50:envFollow.h   ****     }  
 12354              		.loc 12 50 9 is_stmt 0 view .LVU3481
 12355              	.LBE2421:
 12356              	.LBE2423:
 12357              	.LBE2425:
  51:Veno-Echo.cpp **** 
 12358              		.loc 19 51 18 view .LVU3482
 12359 0088 FFF7FEFF 		bl	__aeabi_atexit
 12360              	.LVL855:
 12361              	.LBB2426:
 12362              	.LBI2426:
  43:envFollow.h   ****     {
 12363              		.loc 12 43 5 is_stmt 1 view .LVU3483
 12364              	.LBB2427:
 12365              	.LBB2428:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12366              		.loc 12 45 9 view .LVU3484
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12367              		.loc 12 45 13 is_stmt 0 view .LVU3485
 12368 008c 8348     		ldr	r0, .L658+68
 12369              	.LBE2428:
 12370              	.LBE2427:
 12371              	.LBE2426:
  53:Veno-Echo.cpp **** 
 12372              		.loc 19 53 16 view .LVU3486
 12373 008e DFF8D082 		ldr	r8, .L658+264
  51:Veno-Echo.cpp **** 
 12374              		.loc 19 51 27 view .LVU3487
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 370


 12375 0092 2246     		mov	r2, r4
 12376 0094 8049     		ldr	r1, .L658+64
 12377              	.LBB2431:
 12378              	.LBB2430:
 12379              	.LBB2429:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12380              		.loc 12 45 13 view .LVU3488
 12381 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12382              		.loc 12 46 9 is_stmt 1 view .LVU3489
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12383              		.loc 12 46 20 is_stmt 0 view .LVU3490
 12384 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12385              		.loc 12 47 9 is_stmt 1 view .LVU3491
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12386              		.loc 12 47 17 is_stmt 0 view .LVU3492
 12387 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12388              		.loc 12 48 9 is_stmt 1 view .LVU3493
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12389              		.loc 12 48 11 is_stmt 0 view .LVU3494
 12390 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12391              		.loc 12 49 9 is_stmt 1 view .LVU3495
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12392              		.loc 12 49 15 is_stmt 0 view .LVU3496
 12393 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12394              		.loc 12 50 9 is_stmt 1 view .LVU3497
  50:envFollow.h   ****     }  
 12395              		.loc 12 50 21 is_stmt 0 view .LVU3498
 12396 00a0 8560     		str	r5, [r0, #8]	@ float
 12397              	.LVL856:
  50:envFollow.h   ****     }  
 12398              		.loc 12 50 21 view .LVU3499
 12399              	.LBE2429:
 12400              	.LBE2430:
 12401              	.LBE2431:
  51:Veno-Echo.cpp **** 
 12402              		.loc 19 51 27 view .LVU3500
 12403 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12404              	.LVL857:
 12405              	.LBB2432:
 12406              	.LBI2432:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12407              		.loc 11 14 5 is_stmt 1 view .LVU3501
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12408              		.loc 11 14 5 is_stmt 0 view .LVU3502
 12409              	.LBE2432:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12410              		.loc 19 56 76 view .LVU3503
 12411 00a6 7E4F     		ldr	r7, .L658+72
  53:Veno-Echo.cpp **** 
 12412              		.loc 19 53 16 view .LVU3504
 12413 00a8 2246     		mov	r2, r4
 12414 00aa 4146     		mov	r1, r8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 371


 12415 00ac 7D48     		ldr	r0, .L658+76
 12416 00ae FFF7FEFF 		bl	__aeabi_atexit
 12417              	.LVL858:
 12418              	.LBB2433:
 12419              	.LBI2433:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12420              		.loc 11 14 5 is_stmt 1 view .LVU3505
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12421              		.loc 11 14 5 is_stmt 0 view .LVU3506
 12422              	.LBE2433:
  53:Veno-Echo.cpp **** 
 12423              		.loc 19 53 29 view .LVU3507
 12424 00b2 2246     		mov	r2, r4
 12425 00b4 4146     		mov	r1, r8
 12426 00b6 7C48     		ldr	r0, .L658+80
 12427 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12428              	.LVL859:
 12429              	.LBB2434:
 12430              	.LBI2434:
  48:delayline_multitap.h ****     {
 12431              		.loc 17 48 5 is_stmt 1 view .LVU3508
  48:delayline_multitap.h ****     {
 12432              		.loc 17 48 5 is_stmt 0 view .LVU3509
 12433              	.LBE2434:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12434              		.loc 19 59 80 view .LVU3510
 12435 00bc 7B4D     		ldr	r5, .L658+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12436              		.loc 19 56 76 view .LVU3511
 12437 00be 2246     		mov	r2, r4
 12438 00c0 3946     		mov	r1, r7
 12439 00c2 7B48     		ldr	r0, .L658+88
 12440 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12441              	.LVL860:
 12442              	.LBB2435:
 12443              	.LBI2435:
  48:delayline_multitap.h ****     {
 12444              		.loc 17 48 5 is_stmt 1 view .LVU3512
  48:delayline_multitap.h ****     {
 12445              		.loc 17 48 5 is_stmt 0 view .LVU3513
 12446              	.LBE2435:
  57:Veno-Echo.cpp **** 
 12447              		.loc 19 57 76 view .LVU3514
 12448 00c8 2246     		mov	r2, r4
 12449 00ca 3946     		mov	r1, r7
 12450 00cc 7948     		ldr	r0, .L658+92
 12451 00ce FFF7FEFF 		bl	__aeabi_atexit
 12452              	.LVL861:
 12453              	.LBB2436:
 12454              	.LBI2436:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12455              		.loc 18 38 5 is_stmt 1 view .LVU3515
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12456              		.loc 18 38 5 is_stmt 0 view .LVU3516
 12457              	.LBE2436:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12458              		.loc 19 98 12 view .LVU3517
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 372


 12459 00d2 794F     		ldr	r7, .L658+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12460              		.loc 19 59 80 view .LVU3518
 12461 00d4 2246     		mov	r2, r4
 12462 00d6 2946     		mov	r1, r5
 12463 00d8 7848     		ldr	r0, .L658+100
 12464 00da FFF7FEFF 		bl	__aeabi_atexit
 12465              	.LVL862:
 12466              	.LBB2437:
 12467              	.LBI2437:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12468              		.loc 18 38 5 is_stmt 1 view .LVU3519
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12469              		.loc 18 38 5 is_stmt 0 view .LVU3520
 12470              	.LBE2437:
  60:Veno-Echo.cpp **** 
 12471              		.loc 19 60 80 view .LVU3521
 12472 00de 2246     		mov	r2, r4
 12473 00e0 2946     		mov	r1, r5
 12474 00e2 7748     		ldr	r0, .L658+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12475              		.loc 19 102 11 view .LVU3522
 12476 00e4 774D     		ldr	r5, .L658+108
  60:Veno-Echo.cpp **** 
 12477              		.loc 19 60 80 view .LVU3523
 12478 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12479              	.LVL863:
 12480              	.LBB2438:
 12481              	.LBI2438:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12482              		.loc 16 49 1 is_stmt 1 view .LVU3524
 12483              	.LBB2439:
 12484              	.LBB2440:
 12485              	.LBI2440:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12486              		.loc 14 40 1 view .LVU3525
 12487              	.LBB2441:
 12488              	.LBB2442:
 12489              	.LBI2442:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12490              		.loc 15 24 5 view .LVU3526
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12491              		.loc 15 24 5 is_stmt 0 view .LVU3527
 12492              	.LBE2442:
 12493              	.LBB2443:
 12494              	.LBI2443:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12495              		.loc 8 15 5 is_stmt 1 view .LVU3528
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12496              		.loc 8 15 5 is_stmt 0 view .LVU3529
 12497              	.LBE2443:
 12498              	.LBE2441:
 12499              	.LBE2440:
 12500              	.LBE2439:
 12501              	.LBE2438:
 12502              	.LBE2506:
 12503              	.LBE2510:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 373


  49:DelayMulti.h  **** ~DelayMulti() {}
 12504              		.loc 16 49 14 is_stmt 1 view .LVU3530
  49:DelayMulti.h  **** ~DelayMulti() {}
 12505              		.loc 16 49 14 view .LVU3531
 12506              	.LBB2511:
 12507              	.LBB2507:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12508              		.loc 19 98 12 is_stmt 0 view .LVU3532
 12509 00ea 2246     		mov	r2, r4
 12510 00ec 3946     		mov	r1, r7
 12511 00ee 7648     		ldr	r0, .L658+112
 12512 00f0 FFF7FEFF 		bl	__aeabi_atexit
 12513              	.LVL864:
 12514              	.LBB2444:
 12515              	.LBI2444:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12516              		.loc 16 49 1 is_stmt 1 view .LVU3533
 12517              	.LBB2445:
 12518              	.LBB2446:
 12519              	.LBI2446:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12520              		.loc 14 40 1 view .LVU3534
 12521              	.LBB2447:
 12522              	.LBB2448:
 12523              	.LBI2448:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12524              		.loc 15 24 5 view .LVU3535
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12525              		.loc 15 24 5 is_stmt 0 view .LVU3536
 12526              	.LBE2448:
 12527              	.LBB2449:
 12528              	.LBI2449:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12529              		.loc 8 15 5 is_stmt 1 view .LVU3537
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12530              		.loc 8 15 5 is_stmt 0 view .LVU3538
 12531              	.LBE2449:
 12532              	.LBE2447:
 12533              	.LBE2446:
 12534              	.LBE2445:
 12535              	.LBE2444:
 12536              	.LBE2507:
 12537              	.LBE2511:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12538              		.loc 16 49 14 is_stmt 1 view .LVU3539
  49:DelayMulti.h  **** ~DelayMulti() {}
 12539              		.loc 16 49 14 view .LVU3540
 12540              	.LBB2512:
 12541              	.LBB2508:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12542              		.loc 19 98 19 is_stmt 0 view .LVU3541
 12543 00f4 2246     		mov	r2, r4
 12544 00f6 3946     		mov	r1, r7
 12545 00f8 7448     		ldr	r0, .L658+116
 12546 00fa FFF7FEFF 		bl	__aeabi_atexit
 12547              	.LVL865:
 12548              	.LBB2450:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 374


 12549              	.LBI2450:
  60:LEDs.h        ****     ~ButtonLED() {}
 12550              		.loc 14 60 5 is_stmt 1 view .LVU3542
 12551              	.LBB2451:
 12552              	.LBB2452:
 12553              	.LBI2452:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12554              		.loc 1 40 5 view .LVU3543
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12555              		.loc 1 40 5 is_stmt 0 view .LVU3544
 12556              	.LBE2452:
 12557              	.LBB2453:
 12558              	.LBI2453:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12559              		.loc 15 24 5 is_stmt 1 view .LVU3545
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12560              		.loc 15 24 5 is_stmt 0 view .LVU3546
 12561              	.LBE2453:
 12562              	.LBE2451:
 12563              	.LBE2450:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12564              		.loc 19 102 11 view .LVU3547
 12565 00fe 2246     		mov	r2, r4
 12566 0100 2946     		mov	r1, r5
 12567 0102 7348     		ldr	r0, .L658+120
 12568 0104 FFF7FEFF 		bl	__aeabi_atexit
 12569              	.LVL866:
 12570              	.LBB2454:
 12571              	.LBI2454:
  60:LEDs.h        ****     ~ButtonLED() {}
 12572              		.loc 14 60 5 is_stmt 1 view .LVU3548
 12573              	.LBB2455:
 12574              	.LBB2456:
 12575              	.LBI2456:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12576              		.loc 1 40 5 view .LVU3549
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12577              		.loc 1 40 5 is_stmt 0 view .LVU3550
 12578              	.LBE2456:
 12579              	.LBB2457:
 12580              	.LBI2457:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12581              		.loc 15 24 5 is_stmt 1 view .LVU3551
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12582              		.loc 15 24 5 is_stmt 0 view .LVU3552
 12583              	.LBE2457:
 12584              	.LBE2455:
 12585              	.LBE2454:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12586              		.loc 19 102 18 view .LVU3553
 12587 0108 2246     		mov	r2, r4
 12588 010a 2946     		mov	r1, r5
 12589 010c 7148     		ldr	r0, .L658+124
 12590 010e FFF7FEFF 		bl	__aeabi_atexit
 12591              	.LVL867:
 12592              	.LBB2458:
 12593              	.LBI2458:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 375


  60:LEDs.h        ****     ~ButtonLED() {}
 12594              		.loc 14 60 5 is_stmt 1 view .LVU3554
 12595              	.LBB2459:
 12596              	.LBB2460:
 12597              	.LBI2460:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12598              		.loc 1 40 5 view .LVU3555
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12599              		.loc 1 40 5 is_stmt 0 view .LVU3556
 12600              	.LBE2460:
 12601              	.LBB2461:
 12602              	.LBI2461:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12603              		.loc 15 24 5 is_stmt 1 view .LVU3557
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12604              		.loc 15 24 5 is_stmt 0 view .LVU3558
 12605              	.LBE2461:
 12606              	.LBE2459:
 12607              	.LBE2458:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12608              		.loc 19 102 25 view .LVU3559
 12609 0112 2246     		mov	r2, r4
 12610 0114 2946     		mov	r1, r5
 12611 0116 7048     		ldr	r0, .L658+128
 12612 0118 FFF7FEFF 		bl	__aeabi_atexit
 12613              	.LVL868:
 12614              	.LBB2462:
 12615              	.LBI2462:
  60:LEDs.h        ****     ~ButtonLED() {}
 12616              		.loc 14 60 5 is_stmt 1 view .LVU3560
 12617              	.LBB2463:
 12618              	.LBB2464:
 12619              	.LBI2464:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12620              		.loc 1 40 5 view .LVU3561
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12621              		.loc 1 40 5 is_stmt 0 view .LVU3562
 12622              	.LBE2464:
 12623              	.LBB2465:
 12624              	.LBI2465:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12625              		.loc 15 24 5 is_stmt 1 view .LVU3563
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12626              		.loc 15 24 5 is_stmt 0 view .LVU3564
 12627              	.LBE2465:
 12628              	.LBE2463:
 12629              	.LBE2462:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12630              		.loc 19 102 34 view .LVU3565
 12631 011c 2246     		mov	r2, r4
 12632 011e 2946     		mov	r1, r5
 12633 0120 6E48     		ldr	r0, .L658+132
 12634 0122 FFF7FEFF 		bl	__aeabi_atexit
 12635              	.LVL869:
 12636              	.LBB2466:
 12637              	.LBI2466:
  60:LEDs.h        ****     ~ButtonLED() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 376


 12638              		.loc 14 60 5 is_stmt 1 view .LVU3566
 12639              	.LBB2467:
 12640              	.LBB2468:
 12641              	.LBI2468:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12642              		.loc 1 40 5 view .LVU3567
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12643              		.loc 1 40 5 is_stmt 0 view .LVU3568
 12644              	.LBE2468:
 12645              	.LBB2469:
 12646              	.LBI2469:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12647              		.loc 15 24 5 is_stmt 1 view .LVU3569
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12648              		.loc 15 24 5 is_stmt 0 view .LVU3570
 12649              	.LBE2469:
 12650              	.LBE2467:
 12651              	.LBE2466:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12652              		.loc 19 147 13 view .LVU3571
 12653 0126 6E4F     		ldr	r7, .L658+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12654              		.loc 19 102 44 view .LVU3572
 12655 0128 2246     		mov	r2, r4
 12656 012a 2946     		mov	r1, r5
 12657 012c 6D48     		ldr	r0, .L658+140
 12658 012e FFF7FEFF 		bl	__aeabi_atexit
 12659              	.LVL870:
 12660              	.LBB2470:
 12661              	.LBI2470:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12662              		.loc 14 40 1 is_stmt 1 view .LVU3573
 12663              	.LBB2471:
 12664              	.LBB2472:
 12665              	.LBI2472:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12666              		.loc 15 24 5 view .LVU3574
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12667              		.loc 15 24 5 is_stmt 0 view .LVU3575
 12668              	.LBE2472:
 12669              	.LBB2473:
 12670              	.LBI2473:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12671              		.loc 8 15 5 is_stmt 1 view .LVU3576
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12672              		.loc 8 15 5 is_stmt 0 view .LVU3577
 12673              	.LBE2473:
 12674              	.LBE2471:
 12675              	.LBE2470:
 103:Veno-Echo.cpp **** 
 12676              		.loc 19 103 10 view .LVU3578
 12677 0132 2246     		mov	r2, r4
 12678 0134 6C49     		ldr	r1, .L658+144
 12679 0136 6D48     		ldr	r0, .L658+148
 12680 0138 FFF7FEFF 		bl	__aeabi_atexit
 12681              	.LVL871:
 12682              	.LBB2474:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 377


 12683              	.LBI2474:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12684              		.loc 7 38 5 is_stmt 1 view .LVU3579
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12685              		.loc 7 38 5 is_stmt 0 view .LVU3580
 12686              	.LBE2474:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12687              		.loc 19 147 13 view .LVU3581
 12688 013c 2246     		mov	r2, r4
 12689 013e 3946     		mov	r1, r7
 12690 0140 6B48     		ldr	r0, .L658+152
 12691 0142 FFF7FEFF 		bl	__aeabi_atexit
 12692              	.LVL872:
 12693              	.LBB2475:
 12694              	.LBI2475:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12695              		.loc 7 38 5 is_stmt 1 view .LVU3582
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12696              		.loc 7 38 5 is_stmt 0 view .LVU3583
 12697              	.LBE2475:
 148:Veno-Echo.cpp **** 
 12698              		.loc 19 148 13 view .LVU3584
 12699 0146 2246     		mov	r2, r4
 12700 0148 3946     		mov	r1, r7
 12701 014a 6A48     		ldr	r0, .L658+156
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12702              		.loc 19 153 18 view .LVU3585
 12703 014c 6A4D     		ldr	r5, .L658+160
 148:Veno-Echo.cpp **** 
 12704              		.loc 19 148 13 view .LVU3586
 12705 014e FFF7FEFF 		bl	__aeabi_atexit
 12706              	.LVL873:
 12707              	.LBB2476:
 12708              	.LBI2476:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12709              		.loc 7 38 5 is_stmt 1 view .LVU3587
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12710              		.loc 7 38 5 is_stmt 0 view .LVU3588
 12711              	.LBE2476:
 150:Veno-Echo.cpp **** static Adsr HPF_Env;
 12712              		.loc 19 150 13 view .LVU3589
 12713 0152 2246     		mov	r2, r4
 12714 0154 3946     		mov	r1, r7
 12715 0156 6948     		ldr	r0, .L658+164
 12716 0158 FFF7FEFF 		bl	__aeabi_atexit
 12717              	.LVL874:
 12718              	.LBB2477:
 12719              	.LBI2477:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12720              		.loc 7 38 5 is_stmt 1 view .LVU3590
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12721              		.loc 7 38 5 is_stmt 0 view .LVU3591
 12722              	.LBE2477:
 151:Veno-Echo.cpp **** 
 12723              		.loc 19 151 13 view .LVU3592
 12724 015c 2246     		mov	r2, r4
 12725 015e 3946     		mov	r1, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 378


 12726 0160 6748     		ldr	r0, .L658+168
 12727 0162 FFF7FEFF 		bl	__aeabi_atexit
 12728              	.LVL875:
 12729              	.LBB2478:
 12730              	.LBI2478:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12731              		.loc 10 36 5 is_stmt 1 view .LVU3593
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12732              		.loc 10 36 5 is_stmt 0 view .LVU3594
 12733              	.LBE2478:
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12734              		.loc 19 153 18 view .LVU3595
 12735 0166 2246     		mov	r2, r4
 12736 0168 2946     		mov	r1, r5
 12737 016a 6648     		ldr	r0, .L658+172
 12738 016c FFF7FEFF 		bl	__aeabi_atexit
 12739              	.LVL876:
 12740              	.LBB2479:
 12741              	.LBI2479:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12742              		.loc 10 36 5 is_stmt 1 view .LVU3596
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12743              		.loc 10 36 5 is_stmt 0 view .LVU3597
 12744              	.LBE2479:
 154:Veno-Echo.cpp **** 
 12745              		.loc 19 154 18 view .LVU3598
 12746 0170 2246     		mov	r2, r4
 12747 0172 2946     		mov	r1, r5
 12748 0174 6448     		ldr	r0, .L658+176
 12749 0176 FFF7FEFF 		bl	__aeabi_atexit
 12750              	.LVL877:
 12751              	.LBB2480:
 12752              	.LBI2480:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12753              		.loc 10 36 5 is_stmt 1 view .LVU3599
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12754              		.loc 10 36 5 is_stmt 0 view .LVU3600
 12755              	.LBE2480:
 156:Veno-Echo.cpp **** 
 12756              		.loc 19 156 18 view .LVU3601
 12757 017a 2246     		mov	r2, r4
 12758 017c 2946     		mov	r1, r5
 12759 017e 6348     		ldr	r0, .L658+180
 12760 0180 FFF7FEFF 		bl	__aeabi_atexit
 12761              	.LVL878:
 12762              	.LBB2481:
 12763              	.LBI2481:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12764              		.loc 10 36 5 is_stmt 1 view .LVU3602
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12765              		.loc 10 36 5 is_stmt 0 view .LVU3603
 12766              	.LBE2481:
 159:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12767              		.loc 19 159 18 view .LVU3604
 12768 0184 2246     		mov	r2, r4
 12769 0186 2946     		mov	r1, r5
 12770 0188 6148     		ldr	r0, .L658+184
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 379


 12771 018a FFF7FEFF 		bl	__aeabi_atexit
 12772              	.LVL879:
 12773              	.LBB2482:
 12774              	.LBI2482:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12775              		.loc 10 36 5 is_stmt 1 view .LVU3605
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12776              		.loc 10 36 5 is_stmt 0 view .LVU3606
 12777              	.LBE2482:
 160:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12778              		.loc 19 160 18 view .LVU3607
 12779 018e 2246     		mov	r2, r4
 12780 0190 2946     		mov	r1, r5
 12781 0192 6048     		ldr	r0, .L658+188
 12782 0194 FFF7FEFF 		bl	__aeabi_atexit
 12783              	.LVL880:
 12784              	.LBB2483:
 12785              	.LBI2483:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12786              		.loc 10 36 5 is_stmt 1 view .LVU3608
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12787              		.loc 10 36 5 is_stmt 0 view .LVU3609
 12788              	.LBE2483:
 161:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12789              		.loc 19 161 18 view .LVU3610
 12790 0198 2246     		mov	r2, r4
 12791 019a 2946     		mov	r1, r5
 12792 019c 5E48     		ldr	r0, .L658+192
 12793 019e FFF7FEFF 		bl	__aeabi_atexit
 12794              	.LVL881:
 12795              	.LBB2484:
 12796              	.LBI2484:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12797              		.loc 10 36 5 is_stmt 1 view .LVU3611
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12798              		.loc 10 36 5 is_stmt 0 view .LVU3612
 12799              	.LBE2484:
 162:Veno-Echo.cpp **** 
 12800              		.loc 19 162 18 view .LVU3613
 12801 01a2 2246     		mov	r2, r4
 12802 01a4 2946     		mov	r1, r5
 12803 01a6 5D48     		ldr	r0, .L658+196
 12804 01a8 FFF7FEFF 		bl	__aeabi_atexit
 12805              	.LVL882:
 12806              	.LBB2485:
 12807              	.LBI2485:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12808              		.loc 10 36 5 is_stmt 1 view .LVU3614
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12809              		.loc 10 36 5 is_stmt 0 view .LVU3615
 12810              	.LBE2485:
 165:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12811              		.loc 19 165 18 view .LVU3616
 12812 01ac 2246     		mov	r2, r4
 12813 01ae 2946     		mov	r1, r5
 12814 01b0 5B48     		ldr	r0, .L658+200
 12815 01b2 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 380


 12816              	.LVL883:
 12817              	.LBB2486:
 12818              	.LBI2486:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12819              		.loc 10 36 5 is_stmt 1 view .LVU3617
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12820              		.loc 10 36 5 is_stmt 0 view .LVU3618
 12821              	.LBE2486:
 166:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12822              		.loc 19 166 18 view .LVU3619
 12823 01b6 2246     		mov	r2, r4
 12824 01b8 2946     		mov	r1, r5
 12825 01ba 5A48     		ldr	r0, .L658+204
 12826 01bc FFF7FEFF 		bl	__aeabi_atexit
 12827              	.LVL884:
 12828              	.LBB2487:
 12829              	.LBI2487:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12830              		.loc 10 36 5 is_stmt 1 view .LVU3620
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12831              		.loc 10 36 5 is_stmt 0 view .LVU3621
 12832              	.LBE2487:
 167:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12833              		.loc 19 167 18 view .LVU3622
 12834 01c0 2246     		mov	r2, r4
 12835 01c2 2946     		mov	r1, r5
 12836 01c4 5848     		ldr	r0, .L658+208
 12837 01c6 FFF7FEFF 		bl	__aeabi_atexit
 12838              	.LVL885:
 12839              	.LBB2488:
 12840              	.LBI2488:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12841              		.loc 10 36 5 is_stmt 1 view .LVU3623
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12842              		.loc 10 36 5 is_stmt 0 view .LVU3624
 12843              	.LBE2488:
 168:Veno-Echo.cpp **** 
 12844              		.loc 19 168 18 view .LVU3625
 12845 01ca 2246     		mov	r2, r4
 12846 01cc 2946     		mov	r1, r5
 12847 01ce 5748     		ldr	r0, .L658+212
 12848 01d0 FFF7FEFF 		bl	__aeabi_atexit
 12849              	.LVL886:
 12850              	.LBB2489:
 12851              	.LBI2489:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12852              		.loc 10 36 5 is_stmt 1 view .LVU3626
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12853              		.loc 10 36 5 is_stmt 0 view .LVU3627
 12854              	.LBE2489:
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12855              		.loc 19 171 18 view .LVU3628
 12856 01d4 2246     		mov	r2, r4
 12857 01d6 2946     		mov	r1, r5
 12858 01d8 5548     		ldr	r0, .L658+216
 12859 01da FFF7FEFF 		bl	__aeabi_atexit
 12860              	.LVL887:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 381


 12861              	.LBB2490:
 12862              	.LBI2490:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12863              		.loc 10 36 5 is_stmt 1 view .LVU3629
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12864              		.loc 10 36 5 is_stmt 0 view .LVU3630
 12865              	.LBE2490:
 172:Veno-Echo.cpp **** 
 12866              		.loc 19 172 18 view .LVU3631
 12867 01de 2246     		mov	r2, r4
 12868 01e0 2946     		mov	r1, r5
 12869 01e2 5448     		ldr	r0, .L658+220
 12870 01e4 FFF7FEFF 		bl	__aeabi_atexit
 12871              	.LVL888:
 12872              	.LBB2491:
 12873              	.LBI2491:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12874              		.loc 10 36 5 is_stmt 1 view .LVU3632
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12875              		.loc 10 36 5 is_stmt 0 view .LVU3633
 12876              	.LBE2491:
 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12877              		.loc 19 178 8 view .LVU3634
 12878 01e8 534F     		ldr	r7, .L658+224
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12879              		.loc 19 174 18 view .LVU3635
 12880 01ea 2246     		mov	r2, r4
 12881 01ec 2946     		mov	r1, r5
 12882 01ee 5348     		ldr	r0, .L658+228
 12883 01f0 FFF7FEFF 		bl	__aeabi_atexit
 12884              	.LVL889:
 12885              	.LBB2492:
 12886              	.LBI2492:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12887              		.loc 10 36 5 is_stmt 1 view .LVU3636
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12888              		.loc 10 36 5 is_stmt 0 view .LVU3637
 12889              	.LBE2492:
 175:Veno-Echo.cpp **** 
 12890              		.loc 19 175 18 view .LVU3638
 12891 01f4 2246     		mov	r2, r4
 12892 01f6 2946     		mov	r1, r5
 12893 01f8 5148     		ldr	r0, .L658+232
 12894 01fa FFF7FEFF 		bl	__aeabi_atexit
 12895              	.LVL890:
 12896              	.LBB2493:
 12897              	.LBI2493:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12898              		.loc 1 40 5 is_stmt 1 view .LVU3639
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12899              		.loc 1 40 5 is_stmt 0 view .LVU3640
 12900              	.LBE2493:
 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12901              		.loc 19 178 8 view .LVU3641
 12902 01fe 2246     		mov	r2, r4
 12903 0200 3946     		mov	r1, r7
 12904 0202 5048     		ldr	r0, .L658+236
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 382


 12905 0204 FFF7FEFF 		bl	__aeabi_atexit
 12906              	.LVL891:
 12907              	.LBB2494:
 12908              	.LBI2494:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12909              		.loc 1 40 5 is_stmt 1 view .LVU3642
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12910              		.loc 1 40 5 is_stmt 0 view .LVU3643
 12911              	.LBE2494:
 179:Veno-Echo.cpp **** 
 12912              		.loc 19 179 8 view .LVU3644
 12913 0208 2246     		mov	r2, r4
 12914 020a 3946     		mov	r1, r7
 12915 020c 4E48     		ldr	r0, .L658+240
 12916 020e FFF7FEFF 		bl	__aeabi_atexit
 12917              	.LVL892:
 12918              	.LBB2495:
 12919              	.LBI2495:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12920              		.loc 1 40 5 is_stmt 1 view .LVU3645
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12921              		.loc 1 40 5 is_stmt 0 view .LVU3646
 12922              	.LBE2495:
 182:Veno-Echo.cpp **** Switch ClockIn;
 12923              		.loc 19 182 8 view .LVU3647
 12924 0212 2246     		mov	r2, r4
 12925 0214 3946     		mov	r1, r7
 12926 0216 4D48     		ldr	r0, .L658+244
 12927 0218 FFF7FEFF 		bl	__aeabi_atexit
 12928              	.LVL893:
 12929              	.LBB2496:
 12930              	.LBI2496:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12931              		.loc 1 40 5 is_stmt 1 view .LVU3648
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12932              		.loc 1 40 5 is_stmt 0 view .LVU3649
 12933              	.LBE2496:
 183:Veno-Echo.cpp **** 
 12934              		.loc 19 183 8 view .LVU3650
 12935 021c 2246     		mov	r2, r4
 12936 021e 3946     		mov	r1, r7
 12937 0220 4B48     		ldr	r0, .L658+248
 12938 0222 FFF7FEFF 		bl	__aeabi_atexit
 12939              	.LVL894:
 12940              	.LBB2497:
 12941              	.LBI2497:
  41:taptempo.h    ****     {
 12942              		.loc 13 41 5 is_stmt 1 view .LVU3651
 12943              	.LBB2498:
 12944              	.LBB2499:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12945              		.loc 13 43 9 view .LVU3652
  46:taptempo.h    ****         lastTapLength_ = 0;
 12946              		.loc 13 46 17 is_stmt 0 view .LVU3653
 12947 0226 5027     		movs	r7, #80
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12948              		.loc 13 43 18 view .LVU3654
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 383


 12949 0228 4A48     		ldr	r0, .L658+252
  45:taptempo.h    ****         mintap_ = 80;
 12950              		.loc 13 45 17 view .LVU3655
 12951 022a 4FF4FA6C 		mov	ip, #2000
  44:taptempo.h    ****         maxtap_ = 2000;
 12952              		.loc 13 44 24 view .LVU3656
 12953 022e DFF834E1 		ldr	lr, .L658+268
  51:taptempo.h    **** 
 12954              		.loc 13 51 19 view .LVU3657
 12955 0232 4FF07E53 		mov	r3, #1065353216
  48:taptempo.h    ****         lastTime_ = 0;
 12956              		.loc 13 48 16 view .LVU3658
 12957 0236 484D     		ldr	r5, .L658+256
 12958              	.LBE2499:
 12959              	.LBE2498:
 12960              	.LBE2497:
 186:Veno-Echo.cpp **** 
 12961              		.loc 19 186 10 view .LVU3659
 12962 0238 2246     		mov	r2, r4
 12963              	.LBB2504:
 12964              	.LBB2502:
 12965              	.LBB2500:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12966              		.loc 13 43 18 view .LVU3660
 12967 023a 0676     		strb	r6, [r0, #24]
  44:taptempo.h    ****         maxtap_ = 2000;
 12968              		.loc 13 44 9 is_stmt 1 view .LVU3661
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12969              		.loc 13 50 22 is_stmt 0 view .LVU3662
 12970 023c 8660     		str	r6, [r0, #8]
  44:taptempo.h    ****         maxtap_ = 2000;
 12971              		.loc 13 44 24 view .LVU3663
 12972 023e C0F81CE0 		str	lr, [r0, #28]	@ float
  45:taptempo.h    ****         mintap_ = 80;
 12973              		.loc 13 45 9 is_stmt 1 view .LVU3664
  48:taptempo.h    ****         lastTime_ = 0;
 12974              		.loc 13 48 16 is_stmt 0 view .LVU3665
 12975 0242 0562     		str	r5, [r0, #32]	@ float
 12976              	.LBE2500:
 12977              	.LBE2502:
 12978              	.LBE2504:
 186:Veno-Echo.cpp **** 
 12979              		.loc 19 186 10 view .LVU3666
 12980 0244 4549     		ldr	r1, .L658+260
 12981              	.LBB2505:
 12982              	.LBB2503:
 12983              	.LBB2501:
  51:taptempo.h    **** 
 12984              		.loc 13 51 19 view .LVU3667
 12985 0246 4362     		str	r3, [r0, #36]	@ float
  49:taptempo.h    ****         currentTime_ = 0;
 12986              		.loc 13 49 19 view .LVU3668
 12987 0248 C0E90366 		strd	r6, r6, [r0, #12]
  46:taptempo.h    ****         lastTapLength_ = 0;
 12988              		.loc 13 46 17 view .LVU3669
 12989 024c C0E9007C 		strd	r7, ip, [r0]
  47:taptempo.h    ****         tempo_ = 500.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 384


 12990              		.loc 13 47 9 is_stmt 1 view .LVU3670
  48:taptempo.h    ****         lastTime_ = 0;
 12991              		.loc 13 48 9 view .LVU3671
  49:taptempo.h    ****         currentTime_ = 0;
 12992              		.loc 13 49 9 view .LVU3672
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12993              		.loc 13 50 9 view .LVU3673
  51:taptempo.h    **** 
 12994              		.loc 13 51 9 view .LVU3674
 12995              	.LVL895:
  51:taptempo.h    **** 
 12996              		.loc 13 51 9 is_stmt 0 view .LVU3675
 12997              	.LBE2501:
 12998              	.LBE2503:
 12999              	.LBE2505:
 13000              	.LBE2508:
 13001              	.LBE2512:
 13002              		.loc 19 1916 1 view .LVU3676
 13003 0250 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13004              		.cfi_restore 14
 13005              		.cfi_restore 8
 13006              		.cfi_restore 7
 13007              		.cfi_restore 6
 13008              		.cfi_restore 5
 13009              		.cfi_restore 4
 13010              		.cfi_def_cfa_offset 0
 13011              	.LBB2513:
 13012              	.LBB2509:
 186:Veno-Echo.cpp **** 
 13013              		.loc 19 186 10 view .LVU3677
 13014 0254 FFF7FEBF 		b	__aeabi_atexit
 13015              	.LVL896:
 13016              	.L659:
 13017              		.align	2
 13018              	.L658:
 13019 0258 00000000 		.word	.LANCHOR4
 13020 025c 00000000 		.word	__dso_handle
 13021 0260 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13022 0264 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13023 0268 00000000 		.word	.LANCHOR27
 13024 026c 00000000 		.word	.LANCHOR28
 13025 0270 00000000 		.word	.LANCHOR15
 13026 0274 00000000 		.word	.LANCHOR16
 13027 0278 00000000 		.word	.LANCHOR29
 13028 027c 00000000 		.word	.LANCHOR30
 13029 0280 00000000 		.word	.LANCHOR17
 13030 0284 00000000 		.word	.LANCHOR18
 13031 0288 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13032 028c 00000000 		.word	.LANCHOR47
 13033 0290 17B7D138 		.word	953267991
 13034 0294 00000000 		.word	.LANCHOR113
 13035 0298 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13036 029c 00000000 		.word	.LANCHOR114
 13037 02a0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13038 02a4 00000000 		.word	.LANCHOR90
 13039 02a8 00000000 		.word	.LANCHOR91
 13040 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 385


 13041 02b0 00000000 		.word	delMemsL
 13042 02b4 00000000 		.word	delMemsR
 13043 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
 13044 02bc 00000000 		.word	delMemsL_REV
 13045 02c0 00000000 		.word	delMemsR_REV
 13046 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 13047 02c8 00000000 		.word	.LANCHOR0
 13048 02cc 00000000 		.word	.LANCHOR1
 13049 02d0 00000000 		.word	.LANCHOR76
 13050 02d4 00000000 		.word	.LANCHOR77
 13051 02d8 00000000 		.word	.LANCHOR78
 13052 02dc 00000000 		.word	.LANCHOR79
 13053 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13054 02e4 00000000 		.word	.LANCHOR80
 13055 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 13056 02ec 00000000 		.word	.LANCHOR56
 13057 02f0 00000000 		.word	.LANCHOR84
 13058 02f4 00000000 		.word	.LANCHOR85
 13059 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13060 02fc 00000000 		.word	.LANCHOR86
 13061 0300 00000000 		.word	.LANCHOR87
 13062 0304 00000000 		.word	.LANCHOR88
 13063 0308 00000000 		.word	.LANCHOR89
 13064 030c 00000000 		.word	.LANCHOR42
 13065 0310 00000000 		.word	.LANCHOR101
 13066 0314 00000000 		.word	.LANCHOR102
 13067 0318 00000000 		.word	.LANCHOR99
 13068 031c 00000000 		.word	.LANCHOR100
 13069 0320 00000000 		.word	.LANCHOR105
 13070 0324 00000000 		.word	.LANCHOR106
 13071 0328 00000000 		.word	.LANCHOR103
 13072 032c 00000000 		.word	.LANCHOR104
 13073 0330 00000000 		.word	.LANCHOR107
 13074 0334 00000000 		.word	.LANCHOR108
 13075 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13076 033c 00000000 		.word	.LANCHOR109
 13077 0340 00000000 		.word	.LANCHOR110
 13078 0344 00000000 		.word	.LANCHOR81
 13079 0348 00000000 		.word	.LANCHOR82
 13080 034c 00000000 		.word	.LANCHOR83
 13081 0350 00000000 		.word	.LANCHOR54
 13082 0354 00000000 		.word	.LANCHOR57
 13083 0358 0000FA43 		.word	1140457472
 13084 035c 00000000 		.word	_ZN8TaptempoD1Ev
 13085 0360 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 13086 0364 0000A03F 		.word	1067450368
 13087              	.LBE2509:
 13088              	.LBE2513:
 13089              		.cfi_endproc
 13090              	.LFE4897:
 13092              		.section	.init_array,"aw",%init_array
 13093              		.align	2
 13094 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13095              		.global	AltControls
 13096              		.global	BaseTempo
 13097              		.global	ClockIn
 13098              		.global	Sync
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 386


 13099              		.global	ReverseGateR
 13100              		.global	ReverseGateL
 13101              		.global	save_flag
 13102              		.global	delayR_flag
 13103              		.global	delayL_flag
 13104              		.global	PostFilters
 13105              		.global	ClockInFlag
 13106              		.global	mute
 13107              		.global	shift
 13108              		.global	syncMode
 13109              		.global	modulation_CV_Raw
 13110              		.global	ModDepth
 13111              		.global	div_R
 13112              		.global	div_L
 13113              		.global	filterXfade
 13114              		.global	width_CV
 13115              		.global	width
 13116              		.global	drywet_CV
 13117              		.global	drywet
 13118              		.global	crossfeedback_CV
 13119              		.global	crossfeedback
 13120              		.global	feedbackR_CV
 13121              		.global	feedbackR
 13122              		.global	feedbackL_CV
 13123              		.global	feedbackL
 13124              		.global	delayTimeR_CV
 13125              		.global	delayTimeL_CV
 13126              		.global	tempoLED_BASE
 13127              		.global	Tap_Button
 13128              		.global	Rev_R_sw
 13129              		.global	Rev_L_sw
 13130              		.global	HPF_sw
 13131              		.global	LPF_sw
 13132              		.global	delaysR_REV
 13133              		.global	delaysL_REV
 13134              		.global	delayR
 13135              		.global	delayL
 13136              		.global	delMemsR_REV
 13137              		.global	delMemsL_REV
 13138              		.global	delMemsR
 13139              		.global	delMemsL
 13140              		.section	.bss.AltControls,"aw",%nobits
 13141              		.align	2
 13142              		.set	.LANCHOR19,. + 0
 13145              	AltControls:
 13146 0000 00000000 		.space	32
 13146      00000000 
 13146      00000000 
 13146      00000000 
 13146      00000000 
 13147              		.section	.bss.BaseTempo,"aw",%nobits
 13148              		.align	2
 13149              		.set	.LANCHOR57,. + 0
 13152              	BaseTempo:
 13153 0000 00000000 		.space	40
 13153      00000000 
 13153      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 387


 13153      00000000 
 13153      00000000 
 13154              		.section	.bss.ClockIn,"aw",%nobits
 13155              		.align	2
 13156              		.set	.LANCHOR54,. + 0
 13159              	ClockIn:
 13160 0000 00000000 		.space	16
 13160      00000000 
 13160      00000000 
 13160      00000000 
 13161              		.section	.bss.ClockInFlag,"aw",%nobits
 13164              	ClockInFlag:
 13165 0000 00       		.space	1
 13166              		.section	.bss.HPF_sw,"aw",%nobits
 13167              		.align	2
 13168              		.set	.LANCHOR77,. + 0
 13171              	HPF_sw:
 13172 0000 00000000 		.space	52
 13172      00000000 
 13172      00000000 
 13172      00000000 
 13172      00000000 
 13173              		.section	.bss.LPF_sw,"aw",%nobits
 13174              		.align	2
 13175              		.set	.LANCHOR76,. + 0
 13178              	LPF_sw:
 13179 0000 00000000 		.space	52
 13179      00000000 
 13179      00000000 
 13179      00000000 
 13179      00000000 
 13180              		.section	.bss.ModDepth,"aw",%nobits
 13181              		.align	2
 13182              		.set	.LANCHOR43,. + 0
 13185              	ModDepth:
 13186 0000 00000000 		.space	4
 13187              		.section	.bss.PostFilters,"aw",%nobits
 13188              		.set	.LANCHOR50,. + 0
 13191              	PostFilters:
 13192 0000 00       		.space	1
 13193              		.section	.bss.Rev_L_sw,"aw",%nobits
 13194              		.align	2
 13195              		.set	.LANCHOR78,. + 0
 13198              	Rev_L_sw:
 13199 0000 00000000 		.space	52
 13199      00000000 
 13199      00000000 
 13199      00000000 
 13199      00000000 
 13200              		.section	.bss.Rev_R_sw,"aw",%nobits
 13201              		.align	2
 13202              		.set	.LANCHOR79,. + 0
 13205              	Rev_R_sw:
 13206 0000 00000000 		.space	52
 13206      00000000 
 13206      00000000 
 13206      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 388


 13206      00000000 
 13207              		.section	.bss.ReverseGateL,"aw",%nobits
 13208              		.align	2
 13209              		.set	.LANCHOR81,. + 0
 13212              	ReverseGateL:
 13213 0000 00000000 		.space	16
 13213      00000000 
 13213      00000000 
 13213      00000000 
 13214              		.section	.bss.ReverseGateR,"aw",%nobits
 13215              		.align	2
 13216              		.set	.LANCHOR82,. + 0
 13219              	ReverseGateR:
 13220 0000 00000000 		.space	16
 13220      00000000 
 13220      00000000 
 13220      00000000 
 13221              		.section	.bss.Sync,"aw",%nobits
 13222              		.align	2
 13223              		.set	.LANCHOR83,. + 0
 13226              	Sync:
 13227 0000 00000000 		.space	16
 13227      00000000 
 13227      00000000 
 13227      00000000 
 13228              		.section	.bss.Tap_Button,"aw",%nobits
 13229              		.align	2
 13230              		.set	.LANCHOR80,. + 0
 13233              	Tap_Button:
 13234 0000 00000000 		.space	52
 13234      00000000 
 13234      00000000 
 13234      00000000 
 13234      00000000 
 13235              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13236              		.align	2
 13237              		.set	.LANCHOR84,. + 0
 13240              	_ZL10FwdRevLEnv:
 13241 0000 00000000 		.space	56
 13241      00000000 
 13241      00000000 
 13241      00000000 
 13241      00000000 
 13242              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13243              		.align	2
 13244              		.set	.LANCHOR85,. + 0
 13247              	_ZL10FwdRevREnv:
 13248 0000 00000000 		.space	56
 13248      00000000 
 13248      00000000 
 13248      00000000 
 13248      00000000 
 13249              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13250              		.align	2
 13251              		.set	.LANCHOR99,. + 0
 13254              	_ZL10HPF_LXfade:
 13255 0000 00000000 		.space	8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 389


 13255      00000000 
 13256              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13257              		.align	2
 13258              		.set	.LANCHOR17,. + 0
 13261              	_ZL10HPF_L_post:
 13262 0000 00000000 		.space	76
 13262      00000000 
 13262      00000000 
 13262      00000000 
 13262      00000000 
 13263              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13264              		.align	2
 13265              		.set	.LANCHOR100,. + 0
 13268              	_ZL10HPF_RXfade:
 13269 0000 00000000 		.space	8
 13269      00000000 
 13270              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13271              		.align	2
 13272              		.set	.LANCHOR18,. + 0
 13275              	_ZL10HPF_R_post:
 13276 0000 00000000 		.space	76
 13276      00000000 
 13276      00000000 
 13276      00000000 
 13276      00000000 
 13277              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13278              		.align	2
 13279              		.set	.LANCHOR101,. + 0
 13282              	_ZL10LPF_LXfade:
 13283 0000 00000000 		.space	8
 13283      00000000 
 13284              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13285              		.align	2
 13286              		.set	.LANCHOR29,. + 0
 13289              	_ZL10LPF_L_post:
 13290 0000 00000000 		.space	76
 13290      00000000 
 13290      00000000 
 13290      00000000 
 13290      00000000 
 13291              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13292              		.align	2
 13293              		.set	.LANCHOR102,. + 0
 13296              	_ZL10LPF_RXfade:
 13297 0000 00000000 		.space	8
 13297      00000000 
 13298              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13299              		.align	2
 13300              		.set	.LANCHOR30,. + 0
 13303              	_ZL10LPF_R_post:
 13304 0000 00000000 		.space	76
 13304      00000000 
 13304      00000000 
 13304      00000000 
 13304      00000000 
 13305              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13306              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 390


 13307              		.set	.LANCHOR42,. + 0
 13310              	_ZL10WidthXfade:
 13311 0000 00000000 		.space	8
 13311      00000000 
 13312              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13313              		.align	2
 13314              		.set	.LANCHOR90,. + 0
 13317              	_ZL11DcBlock_LFB:
 13318 0000 00000000 		.space	12
 13318      00000000 
 13318      00000000 
 13319              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13320              		.align	2
 13321              		.set	.LANCHOR91,. + 0
 13324              	_ZL11DcBlock_RFB:
 13325 0000 00000000 		.space	12
 13325      00000000 
 13325      00000000 
 13326              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13327              		.align	2
 13328              		.set	.LANCHOR107,. + 0
 13331              	_ZL11FilterMix_L:
 13332 0000 00000000 		.space	8
 13332      00000000 
 13333              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13334              		.align	2
 13335              		.set	.LANCHOR108,. + 0
 13338              	_ZL11FilterMix_R:
 13339 0000 00000000 		.space	8
 13339      00000000 
 13340              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13341              		.align	2
 13342              		.set	.LANCHOR88,. + 0
 13345              	_ZL12FwdRevLXfade:
 13346 0000 00000000 		.space	8
 13346      00000000 
 13347              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13348              		.align	2
 13349              		.set	.LANCHOR89,. + 0
 13352              	_ZL12FwdRevRXfade:
 13353 0000 00000000 		.space	8
 13353      00000000 
 13354              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13355              		.align	2
 13356              		.set	.LANCHOR103,. + 0
 13359              	_ZL15HPF_LXfade_post:
 13360 0000 00000000 		.space	8
 13360      00000000 
 13361              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13362              		.align	2
 13363              		.set	.LANCHOR104,. + 0
 13366              	_ZL15HPF_RXfade_post:
 13367 0000 00000000 		.space	8
 13367      00000000 
 13368              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13369              		.align	2
 13370              		.set	.LANCHOR105,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 391


 13373              	_ZL15LPF_LXfade_post:
 13374 0000 00000000 		.space	8
 13374      00000000 
 13375              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13376              		.align	2
 13377              		.set	.LANCHOR106,. + 0
 13380              	_ZL15LPF_RXfade_post:
 13381 0000 00000000 		.space	8
 13381      00000000 
 13382              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13383              		.align	2
 13384              		.set	.LANCHOR109,. + 0
 13387              	_ZL16FilterMix_L_post:
 13388 0000 00000000 		.space	8
 13388      00000000 
 13389              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13390              		.align	2
 13391              		.set	.LANCHOR110,. + 0
 13394              	_ZL16FilterMix_R_post:
 13395 0000 00000000 		.space	8
 13395      00000000 
 13396              		.section	.bss._ZL2hw,"aw",%nobits
 13397              		.align	2
 13398              		.set	.LANCHOR4,. + 0
 13401              	_ZL2hw:
 13402 0000 00000000 		.space	60
 13402      00000000 
 13402      00000000 
 13402      00000000 
 13402      00000000 
 13403              		.section	.bss._ZL3lfo,"aw",%nobits
 13404              		.align	2
 13405              		.set	.LANCHOR47,. + 0
 13408              	_ZL3lfo:
 13409 0000 00000000 		.space	40
 13409      00000000 
 13409      00000000 
 13409      00000000 
 13409      00000000 
 13410              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13411              		.align	2
 13412              		.set	.LANCHOR15,. + 0
 13415              	_ZL5HPF_L:
 13416 0000 00000000 		.space	76
 13416      00000000 
 13416      00000000 
 13416      00000000 
 13416      00000000 
 13417              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13418              		.align	2
 13419              		.set	.LANCHOR16,. + 0
 13422              	_ZL5HPF_R:
 13423 0000 00000000 		.space	76
 13423      00000000 
 13423      00000000 
 13423      00000000 
 13423      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 392


 13424              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13425              		.align	2
 13426              		.set	.LANCHOR27,. + 0
 13429              	_ZL5LPF_L:
 13430 0000 00000000 		.space	76
 13430      00000000 
 13430      00000000 
 13430      00000000 
 13430      00000000 
 13431              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13432              		.align	2
 13433              		.set	.LANCHOR28,. + 0
 13436              	_ZL5LPF_R:
 13437 0000 00000000 		.space	76
 13437      00000000 
 13437      00000000 
 13437      00000000 
 13437      00000000 
 13438              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13439              		.align	2
 13440              		.set	.LANCHOR87,. + 0
 13443              	_ZL7HPF_Env:
 13444 0000 00000000 		.space	56
 13444      00000000 
 13444      00000000 
 13444      00000000 
 13444      00000000 
 13445              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13446              		.align	2
 13447              		.set	.LANCHOR86,. + 0
 13450              	_ZL7LPF_Env:
 13451 0000 00000000 		.space	56
 13451      00000000 
 13451      00000000 
 13451      00000000 
 13451      00000000 
 13452              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13453              		.align	2
 13454              		.set	.LANCHOR113,. + 0
 13457              	_ZL7LeftEnv:
 13458 0000 00000000 		.space	24
 13458      00000000 
 13458      00000000 
 13458      00000000 
 13458      00000000 
 13459              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13460              		.align	2
 13461              		.set	.LANCHOR114,. + 0
 13464              	_ZL8RightEnv:
 13465 0000 00000000 		.space	24
 13465      00000000 
 13465      00000000 
 13465      00000000 
 13465      00000000 
 13466              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13467              		.align	2
 13468              		.set	.LANCHOR52,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 393


 13471              	_ZZ10Update_ModvE13modulation_CV:
 13472 0000 00000000 		.space	4
 13473              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13474              		.align	2
 13475              		.set	.LANCHOR53,. + 0
 13478              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13479 0000 00000000 		.space	4
 13480              		.section	.bss._ZZ11UpdateClockvE10divCounter,"aw",%nobits
 13481              		.align	2
 13482              		.set	.LANCHOR55,. + 0
 13485              	_ZZ11UpdateClockvE10divCounter:
 13486 0000 00000000 		.space	4
 13487              		.section	.bss._ZZ12Update_widthvE14width_Pot_Last,"aw",%nobits
 13488              		.align	2
 13489              		.set	.LANCHOR40,. + 0
 13492              	_ZZ12Update_widthvE14width_Pot_Last:
 13493 0000 00000000 		.space	4
 13494              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 13495              		.set	.LANCHOR38,. + 0
 13498              	_ZZ13Update_drywetvE10Res_pickup:
 13499 0000 00       		.space	1
 13500              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 13501              		.align	2
 13502              		.set	.LANCHOR34,. + 0
 13505              	_ZZ13Update_drywetvE10drywet_new:
 13506 0000 00000000 		.space	4
 13507              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13508              		.align	2
 13509              		.set	.LANCHOR35,. + 0
 13512              	_ZZ13Update_drywetvE11drywet_Last:
 13513 0000 00000000 		.space	4
 13514              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 13515              		.set	.LANCHOR33,. + 0
 13518              	_ZZ13Update_drywetvE13drywet_pickup:
 13519 0000 00       		.space	1
 13520              		.section	.bss._ZZ13Update_drywetvE8Res_Last,"aw",%nobits
 13521              		.align	2
 13522              		.set	.LANCHOR37,. + 0
 13525              	_ZZ13Update_drywetvE8Res_Last:
 13526 0000 00000000 		.space	4
 13527              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13528              		.set	.LANCHOR32,. + 0
 13531              	_ZZ13Update_drywetvE9lastShift:
 13532 0000 00       		.space	1
 13533              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13534              		.align	2
 13535              		.set	.LANCHOR93,. + 0
 13538              	_ZZ14Update_ButtonsvE11buttonstate:
 13539 0000 00000000 		.space	4
 13540              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13541              		.align	2
 13542              		.set	.LANCHOR94,. + 0
 13545              	_ZZ14Update_ButtonsvE9resetTime:
 13546 0000 00000000 		.space	4
 13547              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 13548              		.align	2
 13549              		.set	.LANCHOR95,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 394


 13552              	_ZZ14Update_ButtonsvE9shiftTime:
 13553 0000 00000000 		.space	4
 13554              		.section	.bss._ZZ16Update_feedbackLvE13HPCutoff_Last,"aw",%nobits
 13555              		.align	2
 13556              		.set	.LANCHOR13,. + 0
 13559              	_ZZ16Update_feedbackLvE13HPCutoff_Last:
 13560 0000 00000000 		.space	4
 13561              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13562              		.align	2
 13563              		.set	.LANCHOR10,. + 0
 13566              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13567 0000 00000000 		.space	4
 13568              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13569              		.set	.LANCHOR14,. + 0
 13572              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13573 0000 00       		.space	1
 13574              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 13575              		.set	.LANCHOR11,. + 0
 13578              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13579 0000 00       		.space	1
 13580              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13581              		.set	.LANCHOR9,. + 0
 13584              	_ZZ16Update_feedbackLvE9lastShift:
 13585 0000 00       		.space	1
 13586              		.section	.bss._ZZ16Update_feedbackRvE13LPCutoff_Last,"aw",%nobits
 13587              		.align	2
 13588              		.set	.LANCHOR25,. + 0
 13591              	_ZZ16Update_feedbackRvE13LPCutoff_Last:
 13592 0000 00000000 		.space	4
 13593              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13594              		.align	2
 13595              		.set	.LANCHOR22,. + 0
 13598              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13599 0000 00000000 		.space	4
 13600              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13601              		.set	.LANCHOR26,. + 0
 13604              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13605 0000 00       		.space	1
 13606              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13607              		.set	.LANCHOR23,. + 0
 13610              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13611 0000 00       		.space	1
 13612              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13613              		.set	.LANCHOR21,. + 0
 13616              	_ZZ16Update_feedbackRvE9lastShift:
 13617 0000 00       		.space	1
 13618              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 13619              		.align	2
 13620              		.set	.LANCHOR72,. + 0
 13623              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 13624 0000 00000000 		.space	4
 13625              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13626              		.set	.LANCHOR73,. + 0
 13629              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13630 0000 00       		.space	1
 13631              		.section	.bss._ZZ17Update_DelayTimeLvE18Rev_DelayTime_last,"aw",%nobits
 13632              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 395


 13633              		.set	.LANCHOR74,. + 0
 13636              	_ZZ17Update_DelayTimeLvE18Rev_DelayTime_last:
 13637 0000 00000000 		.space	4
 13638              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13639              		.set	.LANCHOR75,. + 0
 13642              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13643 0000 00       		.space	1
 13644              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13645              		.align	2
 13646              		.set	.LANCHOR70,. + 0
 13649              	_ZZ17Update_DelayTimeLvE8counterL:
 13650 0000 00000000 		.space	4
 13651              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13652              		.set	.LANCHOR71,. + 0
 13655              	_ZZ17Update_DelayTimeLvE9lastShift:
 13656 0000 00       		.space	1
 13657              		.section	.bss._ZZ17Update_DelayTimeRvE13tapRatio_last,"aw",%nobits
 13658              		.align	2
 13659              		.set	.LANCHOR67,. + 0
 13662              	_ZZ17Update_DelayTimeRvE13tapRatio_last:
 13663 0000 00000000 		.space	4
 13664              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 13665              		.align	2
 13666              		.set	.LANCHOR65,. + 0
 13669              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 13670 0000 00000000 		.space	4
 13671              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13672              		.set	.LANCHOR68,. + 0
 13675              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13676 0000 00       		.space	1
 13677              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13678              		.set	.LANCHOR66,. + 0
 13681              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13682 0000 00       		.space	1
 13683              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13684              		.align	2
 13685              		.set	.LANCHOR63,. + 0
 13688              	_ZZ17Update_DelayTimeRvE8counterR:
 13689 0000 00000000 		.space	4
 13690              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13691              		.set	.LANCHOR64,. + 0
 13694              	_ZZ17Update_DelayTimeRvE9lastShift:
 13695 0000 00       		.space	1
 13696              		.section	.bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last,"aw",%nobits
 13697              		.align	2
 13698              		.set	.LANCHOR48,. + 0
 13701              	_ZZ18Update_filterXfadevE20filterXfade_Pot_Last:
 13702 0000 00000000 		.space	4
 13703              		.section	.bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last,"aw",%nobits
 13704              		.align	2
 13705              		.set	.LANCHOR44,. + 0
 13708              	_ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:
 13709 0000 00000000 		.space	4
 13710              		.section	.bss._ZZ20Update_crossfeedbackvE7modRate,"aw",%nobits
 13711              		.align	2
 13712              		.set	.LANCHOR46,. + 0
 13715              	_ZZ20Update_crossfeedbackvE7modRate:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 396


 13716 0000 00000000 		.space	4
 13717              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13718              		.align	2
 13719              		.set	.LANCHOR111,. + 0
 13722              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13723 0000 00000000 		.space	4
 13724              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13725              		.align	2
 13726              		.set	.LANCHOR112,. + 0
 13729              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13730 0000 00000000 		.space	4
 13731              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13732              		.align	2
 13733              		.set	.LANCHOR97,. + 0
 13736              	_ZZL13AudioCallbackPfS_jE7Counter:
 13737 0000 00000000 		.space	4
 13738              		.section	.bss.crossfeedback,"aw",%nobits
 13739              		.align	2
 13740              		.set	.LANCHOR45,. + 0
 13743              	crossfeedback:
 13744 0000 00000000 		.space	4
 13745              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13746              		.align	2
 13749              	crossfeedback_CV:
 13750 0000 00000000 		.space	4
 13751              		.section	.bss.delayL,"aw",%nobits
 13752              		.align	2
 13753              		.set	.LANCHOR0,. + 0
 13756              	delayL:
 13757 0000 00000000 		.space	284
 13757      00000000 
 13757      00000000 
 13757      00000000 
 13757      00000000 
 13758              		.section	.bss.delayR,"aw",%nobits
 13759              		.align	2
 13760              		.set	.LANCHOR1,. + 0
 13763              	delayR:
 13764 0000 00000000 		.space	284
 13764      00000000 
 13764      00000000 
 13764      00000000 
 13764      00000000 
 13765              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13766              		.align	2
 13767              		.set	.LANCHOR5,. + 0
 13770              	delayTimeL_CV:
 13771 0000 00000000 		.space	4
 13772              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13773              		.align	2
 13774              		.set	.LANCHOR6,. + 0
 13777              	delayTimeR_CV:
 13778 0000 00000000 		.space	4
 13779              		.section	.bss.delaysL_REV,"aw",%nobits
 13780              		.align	2
 13781              		.set	.LANCHOR2,. + 0
 13784              	delaysL_REV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 397


 13785 0000 00000000 		.space	8
 13785      00000000 
 13786              		.section	.bss.delaysR_REV,"aw",%nobits
 13787              		.align	2
 13788              		.set	.LANCHOR3,. + 0
 13791              	delaysR_REV:
 13792 0000 00000000 		.space	8
 13792      00000000 
 13793              		.section	.bss.div_L,"aw",%nobits
 13794              		.set	.LANCHOR59,. + 0
 13797              	div_L:
 13798 0000 00       		.space	1
 13799              		.section	.bss.div_R,"aw",%nobits
 13800              		.set	.LANCHOR60,. + 0
 13803              	div_R:
 13804 0000 00       		.space	1
 13805              		.section	.bss.drywet_CV,"aw",%nobits
 13806              		.align	2
 13807              		.set	.LANCHOR31,. + 0
 13810              	drywet_CV:
 13811 0000 00000000 		.space	4
 13812              		.section	.bss.feedbackL,"aw",%nobits
 13813              		.align	2
 13814              		.set	.LANCHOR12,. + 0
 13817              	feedbackL:
 13818 0000 00000000 		.space	4
 13819              		.section	.bss.feedbackL_CV,"aw",%nobits
 13820              		.align	2
 13821              		.set	.LANCHOR7,. + 0
 13824              	feedbackL_CV:
 13825 0000 00000000 		.space	4
 13826              		.section	.bss.feedbackR,"aw",%nobits
 13827              		.align	2
 13828              		.set	.LANCHOR24,. + 0
 13831              	feedbackR:
 13832 0000 00000000 		.space	4
 13833              		.section	.bss.feedbackR_CV,"aw",%nobits
 13834              		.align	2
 13835              		.set	.LANCHOR20,. + 0
 13838              	feedbackR_CV:
 13839 0000 00000000 		.space	4
 13840              		.section	.bss.filterXfade,"aw",%nobits
 13841              		.align	2
 13842              		.set	.LANCHOR49,. + 0
 13845              	filterXfade:
 13846 0000 00000000 		.space	4
 13847              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13848              		.align	2
 13849              		.set	.LANCHOR51,. + 0
 13852              	modulation_CV_Raw:
 13853 0000 00000000 		.space	4
 13854              		.section	.bss.mute,"aw",%nobits
 13855              		.set	.LANCHOR96,. + 0
 13858              	mute:
 13859 0000 00       		.space	1
 13860              		.section	.bss.save_flag,"aw",%nobits
 13861              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 398


 13862              		.set	.LANCHOR98,. + 0
 13865              	save_flag:
 13866 0000 00       		.space	1
 13867              		.section	.bss.shift,"aw",%nobits
 13868              		.set	.LANCHOR8,. + 0
 13871              	shift:
 13872 0000 00       		.space	1
 13873              		.section	.bss.syncMode,"aw",%nobits
 13874              		.set	.LANCHOR58,. + 0
 13877              	syncMode:
 13878 0000 00       		.space	1
 13879              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13880              		.align	2
 13881              		.set	.LANCHOR56,. + 0
 13884              	tempoLED_BASE:
 13885 0000 00000000 		.space	68
 13885      00000000 
 13885      00000000 
 13885      00000000 
 13885      00000000 
 13886              		.section	.bss.width_CV,"aw",%nobits
 13887              		.align	2
 13888              		.set	.LANCHOR39,. + 0
 13891              	width_CV:
 13892 0000 00000000 		.space	4
 13893              		.section	.data.delayL_flag,"aw"
 13894              		.set	.LANCHOR61,. + 0
 13897              	delayL_flag:
 13898 0000 01       		.byte	1
 13899              		.section	.data.delayR_flag,"aw"
 13900              		.set	.LANCHOR62,. + 0
 13903              	delayR_flag:
 13904 0000 01       		.byte	1
 13905              		.section	.data.drywet,"aw"
 13906              		.align	2
 13907              		.set	.LANCHOR36,. + 0
 13910              	drywet:
 13911 0000 0000003F 		.word	1056964608
 13912              		.section	.data.width,"aw"
 13913              		.align	2
 13914              		.set	.LANCHOR41,. + 0
 13917              	width:
 13918 0000 0000803F 		.word	1065353216
 13919              		.section	.rodata.CSWTCH.306,"a"
 13920              		.align	2
 13921              		.set	.LANCHOR69,. + 0
 13924              	CSWTCH.306:
 13925 0000 0000C03F 		.word	1069547520
 13926 0004 00000040 		.word	1073741824
 13927 0008 00004040 		.word	1077936128
 13928              		.section	.rodata._ZL18defaultAltControls,"a"
 13929              		.align	2
 13930              		.set	.LANCHOR92,. + 0
 13933              	_ZL18defaultAltControls:
 13934 0000 00650148 		.word	1208050944
 13935 0004 0000803F 		.word	1065353216
 13936 0008 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 399


 13937 000c 9A99A140 		.word	1084332442
 13938 0010 00004843 		.word	1128792064
 13939 0014 00803B46 		.word	1178304512
 13940 0018 00000000 		.word	0
 13941 001c 00000000 		.word	0
 13942              		.section	.sdram_bss,"aw"
 13943              		.align	2
 13946              	delMemsR_REV:
 13947 0000 00000000 		.space	2400040
 13947      00000000 
 13947      00000000 
 13947      00000000 
 13947      00000000 
 13950              	delMemsL_REV:
 13951 249f28 00000000 		.space	2400040
 13951      00000000 
 13951      00000000 
 13951      00000000 
 13951      00000000 
 13954              	delMemsR:
 13955 493e50 00000000 		.space	6912136
 13955      00000000 
 13955      00000000 
 13955      00000000 
 13955      00000000 
 13958              	delMemsL:
 13959 b2b6d8 00000000 		.space	6912136
 13959      00000000 
 13959      00000000 
 13959      00000000 
 13959      00000000 
 13960              		.text
 13961              	.Letext0:
 13962              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13963              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13964              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13965              		.file 30 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13966              		.file 31 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13967              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13968              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13969              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13970              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13971              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13972              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13973              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13974              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13975              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13976              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13977              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13978              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13979              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13980              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13981              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13982              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13983              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13984              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13985              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 400


 13986              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13987              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13988              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13989              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13990              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13991              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13992              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13993              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13994              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13995              		.file 60 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13996              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13997              		.file 62 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13998              		.file 63 "../libdaisy/src/daisy_core.h"
 13999              		.file 64 "../libdaisy/src/per/tim.h"
 14000              		.file 65 "../libdaisy/src/per/sai.h"
 14001              		.file 66 "../libdaisy/src/util/wav_format.h"
 14002              		.file 67 "../libdaisy/src/per/qspi.h"
 14003              		.file 68 "../libdaisy/src/per/gpio.h"
 14004              		.file 69 "../libdaisy/src/dev/sdram.h"
 14005              		.file 70 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14006              		.file 71 "<built-in>"
 14007              		.file 72 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14008              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14009              		.file 74 "../libdaisy/src/util/oled_fonts.h"
 14010              		.file 75 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 14011              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 14012              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 14013              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 14014              		.file 79 "../libdaisy/src/util/sd_diskio.h"
 14015              		.file 80 "../libdaisy/src/sys/fatfs.h"
 14016              		.file 81 "../DaisySP/Source/Control/adenv.h"
 14017              		.file 82 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14018              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14019              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14020              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14021              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14022              		.file 87 "QSPI_Settings.h"
 14023              		.file 88 "scale.h"
 14024              		.file 89 "constants.h"
 14025              		.file 90 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 401


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:303    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:337    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:376    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:401    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:426    .text._Z20checkPickupState_altff11pickupStateb.part.0:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:433    .text._Z20checkPickupState_altff11pickupStateb.part.0:0000000000000000 _Z20checkPickupState_altff11pickupStateb.part.0
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:491    .text._Z20checkPickupState_altff11pickupStateb.part.0:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:496    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:504    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1067   .text._Z10InitDelaysf:000000000000018c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13958  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13954  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13950  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13946  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1093   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1101   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1126   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 402


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1132   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1140   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1165   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1171   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1179   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1204   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1210   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1218   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1794   .text._Z16Update_feedbackLv:00000000000001cc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1819   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1827   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1852   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1858   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:1866   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:2441   .text._Z16Update_feedbackRv:00000000000001cc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:2466   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:2474   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:2499   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:2505   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:2513   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3065   .text._Z13Update_drywetv:0000000000000218 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3099   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3107   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3132   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3138   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3146   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3347   .text._Z12Update_widthv:00000000000000bc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3367   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3375   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3544   .text._Z20Update_crossfeedbackv:0000000000000084 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3559   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3567   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3699   .text._Z18Update_filterXfadev:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3715   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3723   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3753   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3761   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3769   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3923   .text._Z10Update_Modv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3935   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:3943   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4054   .text._Z11UpdateClockv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4069   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4077   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4149   .text._Z19Update_BaseTempoLEDv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4158   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4166   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 _Z11SetTempoDivfP9TempoDivs
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4386   .text._Z11SetTempoDivfP9TempoDivs:0000000000000108 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4403   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:4411   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5082   .text._Z17Update_DelayTimeRv:000000000000022c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5110   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5118   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5898   .text._Z17Update_DelayTimeLv:0000000000000274 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5928   .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5936   .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5966   .text._Z11GetTapRatio9TapRatios:000000000000001c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 403


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5971   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:5979   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:6676   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:6715   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:6723   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:7601   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:7635   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8005   .text.startup.main:00000000000005b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8696   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8023   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8031   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8093   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8104   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8112   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8215   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8227   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8235   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8662   .text._Z14Update_Buttonsv:00000000000001b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8689   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8808   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8823   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8852   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:8863   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:9999   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:10055  .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:10681  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:10703  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11458  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11495  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11820  .text._ZL13AudioCallbackPfS_j:0000000000000ca4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11831  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11839  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11873  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11881  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11928  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11933  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:11941  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:12032  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:12037  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:12045  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:12097  .text._Z20checkPickupState_altff11pickupStateb:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:12102  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:12109  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13019  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000258 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13093  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13145  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13152  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13159  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13226  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13219  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13212  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13865  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13903  .data.delayR_flag:0000000000000000 delayR_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13897  .data.delayL_flag:0000000000000000 delayL_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13191  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13164  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13858  .bss.mute:0000000000000000 mute
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 404


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13871  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13877  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13852  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13185  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13803  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13797  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13845  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13891  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13917  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13810  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13910  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13749  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13743  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13838  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13831  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13824  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13817  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13777  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13770  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13884  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13233  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13205  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13198  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13171  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13178  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13791  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13784  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13763  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13756  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13141  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13148  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13155  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13165  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13167  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13174  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13181  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13192  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13194  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13201  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13208  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13215  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13222  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13229  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13236  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13240  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13243  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13247  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13250  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13254  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13257  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13261  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13264  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13268  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13271  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13275  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13278  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13282  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 405


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13285  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13289  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13292  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13296  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13299  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13303  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13306  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13310  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13313  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13317  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13320  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13324  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13327  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13331  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13334  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13338  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13341  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13345  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13348  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13352  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13355  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13359  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13362  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13366  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13369  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13373  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13376  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13380  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13383  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13387  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13390  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13394  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13397  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13401  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13404  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13408  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13411  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13415  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13418  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13422  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13425  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13429  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13432  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13436  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13439  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13443  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13446  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13450  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13453  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13457  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13460  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13464  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13467  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13471  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13474  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13478  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13481  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 406


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13485  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 _ZZ11UpdateClockvE10divCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13488  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13492  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 _ZZ12Update_widthvE14width_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13498  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13499  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13501  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13505  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13508  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13512  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13518  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13519  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13521  .bss._ZZ13Update_drywetvE8Res_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13525  .bss._ZZ13Update_drywetvE8Res_Last:0000000000000000 _ZZ13Update_drywetvE8Res_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13531  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13532  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13534  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13538  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13541  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13545  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13548  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13552  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13555  .bss._ZZ16Update_feedbackLvE13HPCutoff_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13559  .bss._ZZ16Update_feedbackLvE13HPCutoff_Last:0000000000000000 _ZZ16Update_feedbackLvE13HPCutoff_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13562  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13566  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13572  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13573  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13578  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13579  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13584  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13585  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13587  .bss._ZZ16Update_feedbackRvE13LPCutoff_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13591  .bss._ZZ16Update_feedbackRvE13LPCutoff_Last:0000000000000000 _ZZ16Update_feedbackRvE13LPCutoff_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13594  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13598  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13604  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13605  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13610  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13611  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13616  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13617  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13619  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13623  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13629  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13630  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13632  .bss._ZZ17Update_DelayTimeLvE18Rev_DelayTime_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13636  .bss._ZZ17Update_DelayTimeLvE18Rev_DelayTime_last:0000000000000000 _ZZ17Update_DelayTimeLvE18Rev_DelayTime_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13642  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13643  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13645  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13649  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13655  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13656  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13658  .bss._ZZ17Update_DelayTimeRvE13tapRatio_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13662  .bss._ZZ17Update_DelayTimeRvE13tapRatio_last:0000000000000000 _ZZ17Update_DelayTimeRvE13tapRatio_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13665  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13669  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 407


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13675  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13676  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13681  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13682  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13684  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13688  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13694  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13695  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13697  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13701  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 _ZZ18Update_filterXfadevE20filterXfade_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13704  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13708  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 _ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13711  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13715  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 _ZZ20Update_crossfeedbackvE7modRate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13718  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13722  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13725  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13729  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13732  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13736  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13739  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13746  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13752  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13759  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13766  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13773  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13780  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13787  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13798  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13804  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13806  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13813  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13820  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13827  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13834  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13841  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13848  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13859  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13861  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13872  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13878  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13880  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13887  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13906  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13913  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13920  .rodata.CSWTCH.306:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13924  .rodata.CSWTCH.306:0000000000000000 CSWTCH.306
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13929  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13933  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s:13943  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 408


                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZN10DelayMulti12SetDelayTimeEf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_Z5scalefff9CurveType
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN10DelayMulti13SetModulationERKf
_ZN5daisy6Switch8DebounceEv
_ZN8TempoLED10resetPhaseEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti16SetDelayTime_potEfb
_ZN8Taptempo11setTapRatioEf
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccpS00vS.s 			page 409


_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
