ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy6GateInD2Ev,"axG",%progbits,_ZN5daisy6GateInD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy6GateInD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy6GateInD2Ev:
  52              	.LVL1:
  53              	.LFB1563:
  54              		.file 2 "../libdaisy/src/hid/gatein.h"
   1:../libdaisy/src/hid/gatein.h **** #pragma once
   2:../libdaisy/src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../libdaisy/src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../libdaisy/src/hid/gatein.h **** #include "per/gpio.h"
   5:../libdaisy/src/hid/gatein.h **** 
   6:../libdaisy/src/hid/gatein.h **** namespace daisy
   7:../libdaisy/src/hid/gatein.h **** {
   8:../libdaisy/src/hid/gatein.h **** /** @file hid_gatein.h */
   9:../libdaisy/src/hid/gatein.h **** /**
  10:../libdaisy/src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  11:../libdaisy/src/hid/gatein.h ****    @author Stephen Hensley
  12:../libdaisy/src/hid/gatein.h ****    @date    March 2020
  13:../libdaisy/src/hid/gatein.h ****    @ingroup controls
  14:../libdaisy/src/hid/gatein.h **** */
  15:../libdaisy/src/hid/gatein.h **** class GateIn
  16:../libdaisy/src/hid/gatein.h **** {
  17:../libdaisy/src/hid/gatein.h ****   public:
  18:../libdaisy/src/hid/gatein.h ****     /** GateIn 
  19:../libdaisy/src/hid/gatein.h ****     Constructor 
  20:../libdaisy/src/hid/gatein.h ****     */
  21:../libdaisy/src/hid/gatein.h ****     GateIn() {}
  22:../libdaisy/src/hid/gatein.h ****     /** GateIn~
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 3


  23:../libdaisy/src/hid/gatein.h ****     Destructor 
  24:../libdaisy/src/hid/gatein.h ****     */
  25:../libdaisy/src/hid/gatein.h ****     ~GateIn() {}
  55              		.loc 2 25 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 25 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1563:
  65              		.weak	_ZN5daisy6GateInD1Ev
  66              		.thumb_set _ZN5daisy6GateInD1Ev,_ZN5daisy6GateInD2Ev
  67 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy9DaisySeedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy9DaisySeedD2Ev:
  77              	.LVL2:
  78              	.LFB1703:
  79              		.file 3 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  80              		.loc 3 22 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LBB878:
  86              	.LBI878:
  87              		.file 4 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 4


   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  88              		.loc 4 57 5 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 5


  89              		.loc 4 57 5 is_stmt 0 view .LVU6
  90              	.LBE878:
  91              	.LBB879:
  92              	.LBI879:
  93              		.file 5 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  94              		.loc 5 42 5 is_stmt 1 view .LVU7
  95              		.loc 5 42 5 is_stmt 0 view .LVU8
  96              	.LBE879:
  97              	.LBB880:
  98              	.LBI880:
  99              		.file 6 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 6


   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 7


  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 100              		.loc 6 85 5 is_stmt 1 view .LVU9
 101              		.loc 6 85 5 is_stmt 0 view .LVU10
 102              	.LBE880:
 103              	.LBB881:
 104              	.LBI881:
 105              		.file 7 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 8


  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 106              		.loc 7 37 5 is_stmt 1 view .LVU11
 107              		.loc 7 37 5 is_stmt 0 view .LVU12
 108              	.LBE881:
 109              		.loc 3 22 19 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1703:
 114              		.weak	_ZN5daisy9DaisySeedD1Ev
 115              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp4AdsrD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp4AdsrD2Ev:
 126              	.LVL3:
 127              	.LFB1726:
 128              		.file 8 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 9


  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 129              		.loc 8 39 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 39 14 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE1726:
 139              		.weak	_ZN7daisysp4AdsrD1Ev
 140              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp10OscillatorD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp10OscillatorD2Ev:
 151              	.LVL4:
 152              	.LFB3340:
 153              		.file 9 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 154              		.loc 9 16 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 10


 159              		.loc 9 16 20 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE3340:
 164              		.weak	_ZN7daisysp10OscillatorD1Ev
 165              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp3SvfD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp3SvfD2Ev:
 176              	.LVL5:
 177              	.LFB3356:
 178              		.file 10 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 179              		.loc 10 22 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              		.loc 10 22 13 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3356:
 189              		.weak	_ZN7daisysp3SvfD1Ev
 190              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp9CrossFadeD2Ev
 195              		.syntax unified
 196              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 11


 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp9CrossFadeD2Ev:
 201              	.LVL6:
 202              	.LFB3461:
 203              		.file 11 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 204              		.loc 11 37 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 37 19 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3461:
 214              		.weak	_ZN7daisysp9CrossFadeD1Ev
 215              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 12


 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 13


  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 14


  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_,minclock_,maxclock_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_,currentClockTime_,lastClockTime_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
  41:taptempo.h    **** 
  42:taptempo.h    ****     public:
  43:taptempo.h    **** 
  44:taptempo.h    ****     Taptempo()  //default constructor
  45:taptempo.h    ****     {
  46:taptempo.h    ****         tapflag_ = false;
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
  48:taptempo.h    ****         maxtap_ = 2000000;
  49:taptempo.h    ****         mintap_ = 80000;
  50:taptempo.h    ****         minclock_ = 3840;
  51:taptempo.h    ****         maxclock_ = 96000;
  52:taptempo.h    ****         lastTapLength_ = 0;
  53:taptempo.h    ****         tempo_ = 500000.0f;
  54:taptempo.h    ****         lastTime_ = 0;
  55:taptempo.h    ****         currentTime_ = 0;
  56:taptempo.h    ****         tapRatio_ = 1.0f;
  57:taptempo.h    ****         clockLength_ = 0;
  58:taptempo.h    ****         lastClockLength_ = 0;
  59:taptempo.h    ****         clockThresh_ = 10000; //Us change
  60:taptempo.h    ****     }
  61:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 61 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 61 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 15


   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB882:
 285              	.LBI882:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 16


   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE882:
 290              	.LBB883:
 291              	.LBI883:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE883:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 17


 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB884:
 321              	.LBI884:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE884:
 325              	.LBB885:
 326              	.LBI885:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE885:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 18


 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 19


  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB886:
 356              	.LBI886:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB887:
 359              	.LBI887:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE887:
 363              	.LBB888:
 364              	.LBI888:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE888:
 368              	.LBE886:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4914:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 20


  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4914:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 21


 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4917:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4917:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 22


 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 23


  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** //static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 24


 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** float CLOCK_DEBUG;
 149:Veno-Echo.cpp **** bool DEBUG{};
 150:Veno-Echo.cpp **** 
 151:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 152:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 153:Veno-Echo.cpp **** 
 154:Veno-Echo.cpp **** static Adsr LPF_Env;
 155:Veno-Echo.cpp **** static Adsr HPF_Env;
 156:Veno-Echo.cpp **** 
 157:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 158:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 159:Veno-Echo.cpp **** 
 160:Veno-Echo.cpp **** static CrossFade WidthXfade;
 161:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 25


 162:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 163:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 164:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 165:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 166:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 167:Veno-Echo.cpp **** 
 168:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 169:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 170:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 171:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 172:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 175:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 176:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 177:Veno-Echo.cpp **** 
 178:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 179:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Gate inputs
 182:Veno-Echo.cpp **** Switch ReverseGateL;
 183:Veno-Echo.cpp **** Switch ReverseGateR;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Switch TapButton;
 186:Veno-Echo.cpp **** Switch Sync;
 187:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 188:Veno-Echo.cpp **** GateIn ClockIn;
 189:Veno-Echo.cpp **** //Switch ClockIn;
 190:Veno-Echo.cpp **** 
 191:Veno-Echo.cpp **** //Tap tempo
 192:Veno-Echo.cpp **** Taptempo BaseTempo; 
 193:Veno-Echo.cpp **** 
 194:Veno-Echo.cpp **** Settings AltControls;
 195:Veno-Echo.cpp **** 
 196:Veno-Echo.cpp **** //default alt control values
 197:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 198:Veno-Echo.cpp **** {
 199:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 200:Veno-Echo.cpp ****     1.0f,   //tapRatio
 201:Veno-Echo.cpp ****     0.0f,   //ModDepth
 202:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 203:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 204:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 205:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 206:Veno-Echo.cpp ****     0.0f,    //filter prepost
 207:Veno-Echo.cpp ****     500000.0f,     //base tempo (in us)
 208:Veno-Echo.cpp ****     0.0f,       //L_Rev
 209:Veno-Echo.cpp ****     0.0f    //R_Rev
 210:Veno-Echo.cpp **** };
 211:Veno-Echo.cpp **** 
 212:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 213:Veno-Echo.cpp **** void Update_DelayTimeL();
 214:Veno-Echo.cpp **** 
 215:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 216:Veno-Echo.cpp **** void Update_DelayTimeR();
 217:Veno-Echo.cpp **** 
 218:Veno-Echo.cpp **** void Update_feedbackL_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 26


 219:Veno-Echo.cpp **** void Update_feedbackL();
 220:Veno-Echo.cpp **** 
 221:Veno-Echo.cpp **** void Update_feedbackR_CV();
 222:Veno-Echo.cpp **** void Update_feedbackR();
 223:Veno-Echo.cpp **** 
 224:Veno-Echo.cpp **** void Update_drywet_CV();
 225:Veno-Echo.cpp **** void Update_drywet();
 226:Veno-Echo.cpp **** 
 227:Veno-Echo.cpp **** void Update_width_CV();
 228:Veno-Echo.cpp **** void Update_width();
 229:Veno-Echo.cpp **** 
 230:Veno-Echo.cpp **** void Update_crossfeedback();
 231:Veno-Echo.cpp **** void Update_filterXfade();
 232:Veno-Echo.cpp **** 
 233:Veno-Echo.cpp **** void Update_Buttons();
 234:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 235:Veno-Echo.cpp **** void Update_BaseTempoLED();
 236:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 237:Veno-Echo.cpp **** void Update_Mod();
 238:Veno-Echo.cpp **** void GetModCV();
 239:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 240:Veno-Echo.cpp **** void UpdateClock();
 241:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 242:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 243:Veno-Echo.cpp **** void TurnOnAllLEDs();
 244:Veno-Echo.cpp **** void ResetAllLEDs();
 245:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 246:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 247:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 248:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 251:Veno-Echo.cpp **** {
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** /*
 254:Veno-Echo.cpp **** static uint32_t funcLength{};
 255:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 256:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 257:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 258:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 259:Veno-Echo.cpp **** 
 260:Veno-Echo.cpp **** */
 261:Veno-Echo.cpp **** 
 262:Veno-Echo.cpp **** static int Counter{};
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp **** /*
 265:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 266:Veno-Echo.cpp **** 
 267:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 268:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 269:Veno-Echo.cpp ****     {
 270:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 271:Veno-Echo.cpp ****     }
 272:Veno-Echo.cpp **** 
 273:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 274:Veno-Echo.cpp ****     {
 275:Veno-Echo.cpp ****         minFuncLength = funcLength;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 27


 276:Veno-Echo.cpp ****     }
 277:Veno-Echo.cpp **** 
 278:Veno-Echo.cpp **** */
 279:Veno-Echo.cpp **** 
 280:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 281:Veno-Echo.cpp **** 
 282:Veno-Echo.cpp ****     /*
 283:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 284:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 285:Veno-Echo.cpp ****         //init timeofCall as current time
 286:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 287:Veno-Echo.cpp **** 
 288:Veno-Echo.cpp ****         //wait for random Dither time
 289:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 290:Veno-Echo.cpp ****         {}
 291:Veno-Echo.cpp ****     */
 292:Veno-Echo.cpp **** 
 293:Veno-Echo.cpp ****         switch (Counter)
 294:Veno-Echo.cpp ****         {
 295:Veno-Echo.cpp ****             case 0:
 296:Veno-Echo.cpp ****                 Update_Buttons();
 297:Veno-Echo.cpp ****                 GetModCV();
 298:Veno-Echo.cpp ****                 
 299:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 300:Veno-Echo.cpp ****             break;
 301:Veno-Echo.cpp **** 
 302:Veno-Echo.cpp ****             case 1:
 303:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 304:Veno-Echo.cpp ****             break;
 305:Veno-Echo.cpp **** 
 306:Veno-Echo.cpp ****             case 2:
 307:Veno-Echo.cpp ****                 if(saveState != SAVING)
 308:Veno-Echo.cpp ****                 {
 309:Veno-Echo.cpp ****                     Update_DelayTimeL();
 310:Veno-Echo.cpp ****                 }
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 3:
 314:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 315:Veno-Echo.cpp ****             break;
 316:Veno-Echo.cpp **** 
 317:Veno-Echo.cpp ****             case 4:
 318:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 319:Veno-Echo.cpp ****                 {
 320:Veno-Echo.cpp ****                     Update_DelayTimeR();
 321:Veno-Echo.cpp ****                 }
 322:Veno-Echo.cpp ****             break;
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 5:
 325:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 326:Veno-Echo.cpp ****             break;
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****             case 6:
 329:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 330:Veno-Echo.cpp ****                 {
 331:Veno-Echo.cpp ****                     Update_feedbackL();
 332:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 28


 333:Veno-Echo.cpp ****             break;
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****             case 7:
 336:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 337:Veno-Echo.cpp ****             break;
 338:Veno-Echo.cpp **** 
 339:Veno-Echo.cpp ****             case 8:
 340:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 341:Veno-Echo.cpp ****                 {
 342:Veno-Echo.cpp ****                     Update_feedbackR();
 343:Veno-Echo.cpp ****                 }
 344:Veno-Echo.cpp ****             break;
 345:Veno-Echo.cpp **** 
 346:Veno-Echo.cpp ****             case 9:
 347:Veno-Echo.cpp ****                 Update_drywet_CV();
 348:Veno-Echo.cpp ****             break;
 349:Veno-Echo.cpp **** 
 350:Veno-Echo.cpp ****             case 10:
 351:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 352:Veno-Echo.cpp ****                 {
 353:Veno-Echo.cpp ****                     Update_drywet();
 354:Veno-Echo.cpp ****                 }
 355:Veno-Echo.cpp ****             break;
 356:Veno-Echo.cpp **** 
 357:Veno-Echo.cpp ****             case 11:
 358:Veno-Echo.cpp ****                 Update_width_CV();
 359:Veno-Echo.cpp ****             break;
 360:Veno-Echo.cpp **** 
 361:Veno-Echo.cpp ****             case 12:
 362:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 363:Veno-Echo.cpp ****                 {
 364:Veno-Echo.cpp ****                     Update_width();
 365:Veno-Echo.cpp ****                 }
 366:Veno-Echo.cpp ****             break;
 367:Veno-Echo.cpp **** 
 368:Veno-Echo.cpp ****             case 13:
 369:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 370:Veno-Echo.cpp ****                 {
 371:Veno-Echo.cpp ****                     Update_crossfeedback();
 372:Veno-Echo.cpp ****                 }
 373:Veno-Echo.cpp ****             break;
 374:Veno-Echo.cpp **** 
 375:Veno-Echo.cpp ****             case 14:
 376:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 377:Veno-Echo.cpp ****                 {
 378:Veno-Echo.cpp ****                     Update_filterXfade();
 379:Veno-Echo.cpp ****                 }
 380:Veno-Echo.cpp ****             break;
 381:Veno-Echo.cpp ****         }
 382:Veno-Echo.cpp **** 
 383:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 384:Veno-Echo.cpp ****     {   
 385:Veno-Echo.cpp ****         UpdateClock(); 
 386:Veno-Echo.cpp ****         Update_Mod();
 387:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 388:Veno-Echo.cpp **** 
 389:Veno-Echo.cpp ****         //get xfade positions from envelopes:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 29


 390:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 391:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 392:Veno-Echo.cpp ****         
 393:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 394:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 395:Veno-Echo.cpp **** 
 396:Veno-Echo.cpp ****         //set xfade positions      
 397:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 398:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 399:Veno-Echo.cpp ****         
 400:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 401:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 402:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 403:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 404:Veno-Echo.cpp **** 
 405:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 406:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 407:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 408:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 409:Veno-Echo.cpp **** 
 410:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 411:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 412:Veno-Echo.cpp **** 
 413:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 414:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 415:Veno-Echo.cpp **** 
 416:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 417:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 418:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 419:Veno-Echo.cpp **** 
 420:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 421:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 422:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 423:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 424:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 425:Veno-Echo.cpp **** 
 426:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 427:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 428:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 429:Veno-Echo.cpp **** 
 430:Veno-Echo.cpp ****         //Get combined output from all delay heads
 431:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 432:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 433:Veno-Echo.cpp **** 
 434:Veno-Echo.cpp ****         //Update Base Tempo LED
 435:Veno-Echo.cpp ****         Update_BaseTempoLED();
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp ****         //hard limit
 438:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 439:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 440:Veno-Echo.cpp **** 
 441:Veno-Echo.cpp **** if(!PostFilters)
 442:Veno-Echo.cpp **** {
 443:Veno-Echo.cpp **** //****************************************************************************************
 444:Veno-Echo.cpp ****         //pre filters
 445:Veno-Echo.cpp ****         //process LPF
 446:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 30


 447:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 448:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 449:Veno-Echo.cpp **** 
 450:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 451:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 452:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 453:Veno-Echo.cpp ****         
 454:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 455:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 456:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 457:Veno-Echo.cpp **** 
 458:Veno-Echo.cpp ****         //hard limit
 459:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 460:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 461:Veno-Echo.cpp **** 
 462:Veno-Echo.cpp ****         //process HPF
 463:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 464:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 465:Veno-Echo.cpp **** 
 466:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 467:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 468:Veno-Echo.cpp **** 
 469:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 470:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 471:Veno-Echo.cpp **** 
 472:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 473:Veno-Echo.cpp **** 
 474:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 475:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 476:Veno-Echo.cpp **** 
 477:Veno-Echo.cpp **** //****************************************************************************************
 478:Veno-Echo.cpp **** }
 479:Veno-Echo.cpp **** 
 480:Veno-Echo.cpp **** else
 481:Veno-Echo.cpp **** {
 482:Veno-Echo.cpp ****     /* code */
 483:Veno-Echo.cpp **** }
 484:Veno-Echo.cpp **** 
 485:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 486:Veno-Echo.cpp ****         static float RNegFB{};
 487:Veno-Echo.cpp **** 
 488:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 489:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 490:Veno-Echo.cpp ****             LNegFB = 0.0f;
 491:Veno-Echo.cpp ****         
 492:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 493:Veno-Echo.cpp ****             RNegFB = 0.0f;
 494:Veno-Echo.cpp **** 
 495:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 496:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 497:Veno-Echo.cpp **** 
 498:Veno-Echo.cpp ****         //crossfeedback:
 499:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 501:Veno-Echo.cpp **** 
 502:Veno-Echo.cpp **** 
 503:Veno-Echo.cpp ****         //get envelopes for feedback signals
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 31


 504:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 505:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 506:Veno-Echo.cpp **** 
 507:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 508:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 509:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 510:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 511:Veno-Echo.cpp ****             else LNegFB = 0.0;
 512:Veno-Echo.cpp ****             
 513:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 514:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 515:Veno-Echo.cpp ****             else RNegFB = 0.0;
 516:Veno-Echo.cpp **** 
 517:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 518:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 519:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 520:Veno-Echo.cpp ****  
 521:Veno-Echo.cpp ****         //hard limit
 522:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 523:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 524:Veno-Echo.cpp **** 
 525:Veno-Echo.cpp ****         delayL.Write( combinedL );
 526:Veno-Echo.cpp ****         delayR.Write( combinedR );
 527:Veno-Echo.cpp **** 
 528:Veno-Echo.cpp ****         // floats for wet dry mix
 529:Veno-Echo.cpp ****         float mixL;
 530:Veno-Echo.cpp ****         float mixR;
 531:Veno-Echo.cpp **** 
 532:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 533:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 534:Veno-Echo.cpp **** 
 535:Veno-Echo.cpp ****         //hard limit
 536:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 538:Veno-Echo.cpp **** 
 539:Veno-Echo.cpp **** if(PostFilters)
 540:Veno-Echo.cpp **** {
 541:Veno-Echo.cpp ****     //****************************************************************************************
 542:Veno-Echo.cpp ****         //post filters
 543:Veno-Echo.cpp ****         //process LPF
 544:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 545:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 546:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 547:Veno-Echo.cpp **** 
 548:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 549:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 550:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 551:Veno-Echo.cpp ****         
 552:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 553:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 554:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 555:Veno-Echo.cpp **** 
 556:Veno-Echo.cpp ****         //hard limit
 557:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 558:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 559:Veno-Echo.cpp **** 
 560:Veno-Echo.cpp ****         //process HPF
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 32


 561:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 562:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 563:Veno-Echo.cpp **** 
 564:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 565:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 566:Veno-Echo.cpp **** 
 567:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 568:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 569:Veno-Echo.cpp **** 
 570:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 571:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 572:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 573:Veno-Echo.cpp **** 
 574:Veno-Echo.cpp ****     //****************************************************************************************
 575:Veno-Echo.cpp **** }
 576:Veno-Echo.cpp **** else
 577:Veno-Echo.cpp **** {
 578:Veno-Echo.cpp ****     /* code */
 579:Veno-Echo.cpp **** }
 580:Veno-Echo.cpp ****         if(drywet < 0.5f)
 581:Veno-Echo.cpp ****         {
 582:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 583:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 584:Veno-Echo.cpp ****         }
 585:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 586:Veno-Echo.cpp ****         {
 587:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 588:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 589:Veno-Echo.cpp ****         }
 590:Veno-Echo.cpp ****         else
 591:Veno-Echo.cpp ****         {
 592:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 593:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 594:Veno-Echo.cpp ****         }
 595:Veno-Echo.cpp **** 
 596:Veno-Echo.cpp ****         //send mixes to outputs
 597:Veno-Echo.cpp ****         if(mute)
 598:Veno-Echo.cpp ****         {
 599:Veno-Echo.cpp ****             out[i] = 0.0f;
 600:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 601:Veno-Echo.cpp ****         }
 602:Veno-Echo.cpp ****         else
 603:Veno-Echo.cpp ****         {
 604:Veno-Echo.cpp ****             out[i] = mixL;
 605:Veno-Echo.cpp ****             out[i+1] = mixR;
 606:Veno-Echo.cpp ****         }
 607:Veno-Echo.cpp **** 
 608:Veno-Echo.cpp ****         //write to DAC for debug
 609:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 610:Veno-Echo.cpp **** 
 611:Veno-Echo.cpp ****     }
 612:Veno-Echo.cpp **** 
 613:Veno-Echo.cpp **** }
 614:Veno-Echo.cpp **** 
 615:Veno-Echo.cpp **** void InitDelays(float samplerate)
 616:Veno-Echo.cpp **** {
 439              		.loc 20 616 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 33


 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 617:Veno-Echo.cpp **** 
 618:Veno-Echo.cpp ****     //Init fwd delays
 619:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 619 5 view .LVU50
 444              	.LBB889:
 445              	.LBI889:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB890:
 448              	.LBB891:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE891:
 453              	.LBE890:
 454              	.LBE889:
 616:Veno-Echo.cpp **** 
 455              		.loc 20 616 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB896:
 470              	.LBB895:
 471              	.LBB892:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE892:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 34


 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB893:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE893:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB894:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 35


  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE894:
 525              	.LBE895:
 526              	.LBE896:
 527              	.LBB897:
 528              	.LBB898:
 529              	.LBB899:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE899:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB900:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE900:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB901:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 36


 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE901:
 576              	.LBE898:
 577              	.LBE897:
 620:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 621:Veno-Echo.cpp **** 
 622:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 623:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 623 5 is_stmt 1 view .LVU91
 624:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 624 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 625:Veno-Echo.cpp **** 
 626:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 626 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 623:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 623 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 624:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 624 5 is_stmt 1 view .LVU95
 588              	.LBB902:
 589              	.LBB903:
 590              	.LBB904:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE904:
 594              	.LBE903:
 595              	.LBE902:
 624:Veno-Echo.cpp **** 
 596              		.loc 20 624 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 37


 598              		.loc 20 626 5 is_stmt 1 view .LVU98
 599              		.loc 20 626 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 626 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 627:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 627 5 is_stmt 1 view .LVU101
 611              		.loc 20 627 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB916:
 618              	.LBB911:
 619              	.LBB906:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE906:
 623              	.LBE911:
 624              	.LBE916:
 625              		.loc 20 627 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 628:Veno-Echo.cpp **** 
 629:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 630:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 631:Veno-Echo.cpp **** 
 632:Veno-Echo.cpp ****     //Init rev delays
 633:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 633 5 is_stmt 1 view .LVU105
 632              	.LBB917:
 633              	.LBI902:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB912:
 636              	.LBI903:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB907:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 38


 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB905:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE905:
 660              	.LBE907:
 661              	.LBE912:
 662              	.LBE917:
 663              	.LBB918:
 664              	.LBB919:
 665              	.LBB920:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE920:
 675              	.LBE919:
 676              	.LBE918:
 677              	.LBB943:
 678              	.LBB913:
 679              	.LBB908:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE908:
 683              	.LBE913:
 684              	.LBE943:
 685              	.LBB944:
 686              	.LBB933:
 687              	.LBB923:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 39


 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE923:
 691              	.LBE933:
 692              	.LBE944:
 693              	.LBB945:
 694              	.LBB914:
 695              	.LBB909:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE909:
 714              	.LBE914:
 715              	.LBE945:
 634:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 634 5 is_stmt 1 view .LVU128
 717              	.LBB946:
 718              	.LBI918:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB934:
 721              	.LBI919:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB924:
 724              	.LBB921:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE921:
 727              	.LBE924:
 728              	.LBE934:
 729              	.LBE946:
 730              	.LBB947:
 731              	.LBB915:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 40


 732              	.LBB910:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE910:
 742              	.LBE915:
 743              	.LBE947:
 744              	.LBB948:
 745              	.LBB935:
 746              	.LBB925:
 747              	.LBB922:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE922:
 756              	.LBE925:
 757              	.LBE935:
 758              	.LBE948:
 635:Veno-Echo.cpp **** 
 636:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 637:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 637 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB949:
 762              	.LBB936:
 763              	.LBB926:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE926:
 767              	.LBE936:
 768              	.LBE949:
 769              	.LBB950:
 770              	.LBB951:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 41


 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE951:
 780              	.LBE950:
 781              	.LBB965:
 782              	.LBB937:
 783              	.LBB927:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE927:
 787              	.LBE937:
 788              	.LBE965:
 789              	.LBB966:
 790              	.LBB960:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE960:
 794              	.LBE966:
 795              	.LBB967:
 796              	.LBB938:
 797              	.LBB928:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE928:
 803              	.LBE938:
 804              	.LBE967:
 805              	.LBB968:
 806              	.LBB961:
 807              	.LBB952:
 808              	.LBB953:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 42


  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 43


 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE953:
 813              	.LBE952:
 814              	.LBE961:
 815              	.LBE968:
 816              	.LBB969:
 817              	.LBB939:
 818              	.LBB929:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE929:
 826              	.LBE939:
 827              	.LBE969:
 828              	.LBB970:
 829              	.LBB962:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE962:
 833              	.LBE970:
 834              	.LBB971:
 835              	.LBB940:
 836              	.LBB930:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE930:
 842              	.LBE940:
 843              	.LBE971:
 844              		.loc 20 637 5 is_stmt 1 view .LVU155
 638:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 638 5 view .LVU156
 637:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 637 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB972:
 849              	.LBB941:
 850              	.LBB931:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE931:
 854              	.LBE941:
 855              	.LBE972:
 856              	.LBB973:
 857              	.LBB963:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 44


 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE963:
 861              	.LBE973:
 862              	.LBB974:
 863              	.LBB942:
 864              	.LBB932:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE932:
 868              	.LBE942:
 869              	.LBE974:
 870              		.loc 20 638 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 639:Veno-Echo.cpp **** 
 640:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 641:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 641 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB975:
 876              	.LBI950:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB964:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB955:
 881              	.LBI952:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB954:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE954:
 887              	.LBE955:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB956:
 892              	.LBB957:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE957:
 896              	.LBE956:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 45


 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB959:
 902              	.LBI956:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB958:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE958:
 913              	.LBE959:
 914              	.LBE964:
 915              	.LBE975:
 642:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 642 5 is_stmt 1 view .LVU177
 917              	.LBB976:
 918              	.LBI976:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB977:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB978:
 926              	.LBI978:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB979:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE979:
 932              	.LBE978:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB981:
 942              	.LBB980:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 46


 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE980:
 946              	.LBE981:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB982:
 953              	.LBB983:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE983:
 959              	.LBE982:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB985:
 965              	.LBI982:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB984:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE984:
 976              	.LBE985:
 977              	.LBE977:
 978              	.LBE976:
 643:Veno-Echo.cpp **** 
 644:Veno-Echo.cpp **** }
 979              		.loc 20 644 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 47


 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 645:Veno-Echo.cpp **** 
 646:Veno-Echo.cpp **** int main(void)
 647:Veno-Echo.cpp **** {
 648:Veno-Echo.cpp ****     // initialize hardware.
 649:Veno-Echo.cpp ****     hw.Configure();
 650:Veno-Echo.cpp ****     hw.Init();
 651:Veno-Echo.cpp ****     
 652:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 653:Veno-Echo.cpp **** 
 654:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 659:Veno-Echo.cpp **** 
 660:Veno-Echo.cpp ****     //Gates
 661:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 663:Veno-Echo.cpp **** 
 664:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 665:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 666:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 667:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 668:Veno-Echo.cpp ****     
 669:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 48


 673:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 674:Veno-Echo.cpp **** 
 675:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 678:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 679:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 680:Veno-Echo.cpp **** 
 681:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 684:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 685:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 686:Veno-Echo.cpp **** 
 687:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 690:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 691:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 692:Veno-Echo.cpp **** 
 693:Veno-Echo.cpp ****     // set params for CrossFade objects
 694:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 695:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 696:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 697:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 698:Veno-Echo.cpp **** 
 699:Veno-Echo.cpp ****     WidthXfade.Init();
 700:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 701:Veno-Echo.cpp **** 
 702:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 703:Veno-Echo.cpp **** 
 704:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 705:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 706:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 707:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 708:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 709:Veno-Echo.cpp **** 
 710:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 711:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 712:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 713:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 714:Veno-Echo.cpp **** 
 715:Veno-Echo.cpp ****     //setup L and R High Pass filters
 716:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 717:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 718:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 719:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 720:Veno-Echo.cpp **** 
 721:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 722:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 723:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 724:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     //post filters
 727:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 728:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 729:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 49


 730:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 731:Veno-Echo.cpp **** 
 732:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 733:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 734:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 735:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 736:Veno-Echo.cpp **** 
 737:Veno-Echo.cpp ****     //setup L and R High Pass filters
 738:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 739:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 740:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 741:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 742:Veno-Echo.cpp **** 
 743:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 744:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 745:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 746:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 747:Veno-Echo.cpp **** 
 748:Veno-Echo.cpp ****     //DcBlock_LFB.Init(hw.AudioSampleRate());
 749:Veno-Echo.cpp ****     //DcBlock_RFB.Init(hw.AudioSampleRate());
 750:Veno-Echo.cpp **** 
 751:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 752:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 753:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 754:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 755:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 756:Veno-Echo.cpp **** 
 757:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f);  //max 6 second tap
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     //setup tempo indicators
 760:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 761:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 762:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 763:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****     //load settings from flash
 766:Veno-Echo.cpp **** 
 767:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 768:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 769:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 770:Veno-Echo.cpp **** 
 771:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 772:Veno-Echo.cpp ****     AltControls = SavedSettings;
 773:Veno-Echo.cpp **** 
 774:Veno-Echo.cpp ****     //initialize DAC
 775:Veno-Echo.cpp **** 
 776:Veno-Echo.cpp ****    //ADC
 777:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 778:Veno-Echo.cpp **** 
 779:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 780:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 781:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 782:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 783:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 784:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 785:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 786:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 50


 787:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 788:Veno-Echo.cpp **** 
 789:Veno-Echo.cpp **** 
 790:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 791:Veno-Echo.cpp ****     hw.adc.Start();
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp **** 
 794:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 795:Veno-Echo.cpp ****     // start audio callback
 796:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 797:Veno-Echo.cpp **** 
 798:Veno-Echo.cpp ****     
 799:Veno-Echo.cpp **** 
 800:Veno-Echo.cpp ****      for(;;)
 801:Veno-Echo.cpp ****      {  
 802:Veno-Echo.cpp **** 
 803:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 804:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 805:Veno-Echo.cpp ****        
 806:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 807:Veno-Echo.cpp ****         {
 808:Veno-Echo.cpp ****             save_flag = false;
 809:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 810:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 811:Veno-Echo.cpp ****         }
 812:Veno-Echo.cpp ****         
 813:Veno-Echo.cpp ****         else    //save flag not set
 814:Veno-Echo.cpp ****         {
 815:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 816:Veno-Echo.cpp ****            {
 817:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 818:Veno-Echo.cpp ****                 {
 819:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 820:Veno-Echo.cpp ****                     
 821:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 822:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 823:Veno-Echo.cpp ****                     {
 824:Veno-Echo.cpp ****                     }
 825:Veno-Echo.cpp ****                 }
 826:Veno-Echo.cpp **** 
 827:Veno-Echo.cpp ****                 else{} //still waiting
 828:Veno-Echo.cpp **** 
 829:Veno-Echo.cpp ****            }
 830:Veno-Echo.cpp **** 
 831:Veno-Echo.cpp ****            if(saveState == SAVING)
 832:Veno-Echo.cpp ****            {
 833:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 834:Veno-Echo.cpp ****             {
 835:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 836:Veno-Echo.cpp ****             }
 837:Veno-Echo.cpp ****             else{} //ADCs paused
 838:Veno-Echo.cpp **** 
 839:Veno-Echo.cpp ****            }
 840:Veno-Echo.cpp **** 
 841:Veno-Echo.cpp ****            else //IDLE - do nothing
 842:Veno-Echo.cpp ****            {
 843:Veno-Echo.cpp ****            }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 51


 844:Veno-Echo.cpp ****         }
 845:Veno-Echo.cpp **** 
 846:Veno-Echo.cpp ****      }
 847:Veno-Echo.cpp **** 
 848:Veno-Echo.cpp **** }
 849:Veno-Echo.cpp **** 
 850:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 851:Veno-Echo.cpp **** {
 1022              		.loc 20 851 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 852:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 852 5 view .LVU201
 851:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 851 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 852 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 852 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 853:Veno-Echo.cpp **** }
 1040              		.loc 20 853 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 854:Veno-Echo.cpp **** 
 855:Veno-Echo.cpp **** void Update_DelayTimeL()
 856:Veno-Echo.cpp **** {
 1061              		.loc 20 856 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 857:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 857 5 view .LVU207
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 52


 858:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 858 5 view .LVU208
 859:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 859 5 view .LVU209
 860:Veno-Echo.cpp ****     
 861:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 861 5 view .LVU210
 862:Veno-Echo.cpp **** 
 863:Veno-Echo.cpp ****     //update pot values
 864:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 864 5 view .LVU211
 856:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 856 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 864 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7648     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 865:Veno-Echo.cpp **** 
 866:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 867:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 868:Veno-Echo.cpp ****     static int counterL{};
 869:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 869 26 view .LVU214
 1082 000c 7549     		ldr	r1, .L75+4
 1083              		.loc 20 869 31 view .LVU215
 1084 000e 764B     		ldr	r3, .L75+8
 1085              	.LVL41:
 868:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 868 5 is_stmt 1 view .LVU216
 1087              		.loc 20 869 5 view .LVU217
 1088              		.loc 20 869 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB986:
 870:Veno-Echo.cpp **** 
 871:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 871 9 view .LVU219
 1092 0012 7648     		ldr	r0, .L75+12
 1093              	.LBE986:
 869:Veno-Echo.cpp **** 
 1094              		.loc 20 869 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB1059:
 1097              		.loc 20 871 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE1059:
 869:Veno-Echo.cpp **** 
 1100              		.loc 20 869 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 53


 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB1060:
 1107              	.LBB987:
 872:Veno-Echo.cpp ****     {
 873:Veno-Echo.cpp ****         static float delayTimeL_new{};
 874:Veno-Echo.cpp ****         //udpate pickup
 875:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 875 19 view .LVU223
 1109 002a 714A     		ldr	r2, .L75+16
 1110              	.LBE987:
 1111              	.LBE1060:
 869:Veno-Echo.cpp **** 
 1112              		.loc 20 869 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 871:Veno-Echo.cpp ****     {
 1114              		.loc 20 871 5 is_stmt 1 view .LVU225
 1115              	.LBB1061:
 1116 002e 80BB     		cbnz	r0, .L43
 1117              	.LBB1006:
 873:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 873 9 view .LVU226
 1119              		.loc 20 875 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 876:Veno-Echo.cpp ****         {
 877:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 877 13 view .LVU228
 878:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 878 31 is_stmt 0 view .LVU229
 1125 0036 6F4C     		ldr	r4, .L75+20
 879:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 879 28 view .LVU230
 1127 0038 6F49     		ldr	r1, .L75+24
 877:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 877 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 878:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 878 13 is_stmt 1 view .LVU232
 878:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 878 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 879 13 is_stmt 1 view .LVU234
 1134              		.loc 20 879 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
 880:Veno-Echo.cpp ****         } 
 881:Veno-Echo.cpp ****         else    //not a recent shift change
 882:Veno-Echo.cpp ****         {
 883:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 884:Veno-Echo.cpp ****             {
 885:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 886:Veno-Echo.cpp ****                 {
 887:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 888:Veno-Echo.cpp ****                 }
 889:Veno-Echo.cpp ****             }
 890:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 54


 891:Veno-Echo.cpp **** 
 892:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 892 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 893:Veno-Echo.cpp **** 
 894:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 894 9 view .LVU237
 895:Veno-Echo.cpp ****         {
 896:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 897:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 898:Veno-Echo.cpp ****         }
 899:Veno-Echo.cpp **** 
 900:Veno-Echo.cpp ****         else
 901:Veno-Echo.cpp ****         {
 902:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 902 13 view .LVU238
 1141              	.LBB988:
 1142              	.LBI988:
 903:Veno-Echo.cpp ****         }
 904:Veno-Echo.cpp **** 
 905:Veno-Echo.cpp ****         if(counterL == 0)
 906:Veno-Echo.cpp ****         {
 907:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 908:Veno-Echo.cpp ****             {
 909:Veno-Echo.cpp ****             };
 910:Veno-Echo.cpp ****         }
 911:Veno-Echo.cpp **** 
 912:Veno-Echo.cpp ****     }   //not shift mode
 913:Veno-Echo.cpp **** 
 914:Veno-Echo.cpp ****     else    //shift mode
 915:Veno-Echo.cpp ****     {
 916:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 917:Veno-Echo.cpp **** 
 918:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 919:Veno-Echo.cpp ****         {
 920:Veno-Echo.cpp ****             lastShift = shift;
 921:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 922:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 923:Veno-Echo.cpp ****         }
 924:Veno-Echo.cpp **** 
 925:Veno-Echo.cpp ****         else    //not a recent shift change
 926:Veno-Echo.cpp ****         {
 927:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 928:Veno-Echo.cpp ****             {
 929:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 930:Veno-Echo.cpp ****                 {
 931:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 932:Veno-Echo.cpp ****                 }
 933:Veno-Echo.cpp ****             }
 934:Veno-Echo.cpp ****         }
 935:Veno-Echo.cpp **** 
 936:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 937:Veno-Echo.cpp ****         {
 938:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 939:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 940:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 941:Veno-Echo.cpp ****             //save setting:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 55


 942:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 943:Veno-Echo.cpp ****             save_flag = true;
 944:Veno-Echo.cpp ****         }
 945:Veno-Echo.cpp ****     }
 946:Veno-Echo.cpp ****     
 947:Veno-Echo.cpp **** }
 948:Veno-Echo.cpp **** 
 949:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 950:Veno-Echo.cpp **** {
 951:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 952:Veno-Echo.cpp **** }
 953:Veno-Echo.cpp **** 
 954:Veno-Echo.cpp **** void Update_DelayTimeR()
 955:Veno-Echo.cpp **** {
 956:Veno-Echo.cpp ****     static bool lastShift{};
 957:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 958:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 959:Veno-Echo.cpp ****     
 960:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 961:Veno-Echo.cpp **** 
 962:Veno-Echo.cpp ****     //update pot values
 963:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 964:Veno-Echo.cpp **** 
 965:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 966:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 967:Veno-Echo.cpp ****     static int counterR{};
 968:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 969:Veno-Echo.cpp **** 
 970:Veno-Echo.cpp ****     if (!shift) //default control
 971:Veno-Echo.cpp ****     {
 972:Veno-Echo.cpp ****         static float delayTimeR_new{};
 973:Veno-Echo.cpp ****         //udpate pickup
 974:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 975:Veno-Echo.cpp ****         {
 976:Veno-Echo.cpp ****             lastShift = shift;
 977:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 978:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 979:Veno-Echo.cpp ****         } 
 980:Veno-Echo.cpp ****         else    //not a default shift change
 981:Veno-Echo.cpp ****         {
 982:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 983:Veno-Echo.cpp ****             {
 984:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 985:Veno-Echo.cpp ****                 {
 986:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 987:Veno-Echo.cpp ****                 }
 988:Veno-Echo.cpp ****             }
 989:Veno-Echo.cpp ****         }
 990:Veno-Echo.cpp **** 
 991:Veno-Echo.cpp ****         float delayTimeR{};
 992:Veno-Echo.cpp **** 
 993:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 994:Veno-Echo.cpp ****         {
 995:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 996:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 997:Veno-Echo.cpp ****         }
 998:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 56


 999:Veno-Echo.cpp ****         else
1000:Veno-Echo.cpp ****         {
1001:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
1002:Veno-Echo.cpp ****         }
1003:Veno-Echo.cpp **** 
1004:Veno-Echo.cpp ****         if(counterR == 0)
1005:Veno-Echo.cpp ****         {
1006:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1007:Veno-Echo.cpp ****             {
1008:Veno-Echo.cpp ****             };
1009:Veno-Echo.cpp **** 
1010:Veno-Echo.cpp ****         }
1011:Veno-Echo.cpp ****     }   //not shift mode
1012:Veno-Echo.cpp **** 
1013:Veno-Echo.cpp ****     else    //shift mode
1014:Veno-Echo.cpp ****     {
1015:Veno-Echo.cpp **** 
1016:Veno-Echo.cpp ****         static float tapRatio_new{};
1017:Veno-Echo.cpp **** 
1018:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1019:Veno-Echo.cpp ****         {
1020:Veno-Echo.cpp ****             lastShift = shift;
1021:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1022:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1023:Veno-Echo.cpp ****         }
1024:Veno-Echo.cpp **** 
1025:Veno-Echo.cpp ****         else    //not a recent shift change
1026:Veno-Echo.cpp ****         {
1027:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1028:Veno-Echo.cpp ****             {
1029:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1030:Veno-Echo.cpp ****                 {
1031:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1032:Veno-Echo.cpp ****                 }
1033:Veno-Echo.cpp ****             }
1034:Veno-Echo.cpp ****         }
1035:Veno-Echo.cpp **** 
1036:Veno-Echo.cpp ****         if(tapRatio_pickup)
1037:Veno-Echo.cpp ****         {
1038:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1039:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1040:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1041:Veno-Echo.cpp ****             //save setting:
1042:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1043:Veno-Echo.cpp ****             save_flag = true;
1044:Veno-Echo.cpp ****         }
1045:Veno-Echo.cpp ****     }
1046:Veno-Echo.cpp ****     
1047:Veno-Echo.cpp **** }
1048:Veno-Echo.cpp **** void Update_feedbackL_CV()
1049:Veno-Echo.cpp **** {
1050:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1051:Veno-Echo.cpp **** }
1052:Veno-Echo.cpp **** void Update_feedbackL()
1053:Veno-Echo.cpp **** {
1054:Veno-Echo.cpp ****     static bool lastShift{};
1055:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 57


1056:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
1057:Veno-Echo.cpp **** 
1058:Veno-Echo.cpp ****     static float feedbackL_Last{};
1059:Veno-Echo.cpp **** 
1060:Veno-Echo.cpp ****     //get pot values:
1061:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1062:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1063:Veno-Echo.cpp **** 
1064:Veno-Echo.cpp ****     if (!shift) //default controls
1065:Veno-Echo.cpp ****     {   
1066:Veno-Echo.cpp ****         static float feedbackL_new{};
1067:Veno-Echo.cpp ****         //update pickup
1068:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1069:Veno-Echo.cpp ****         {
1070:Veno-Echo.cpp ****             lastShift = shift;
1071:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1072:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1073:Veno-Echo.cpp ****         } 
1074:Veno-Echo.cpp ****         else    //not a default shift change
1075:Veno-Echo.cpp ****         {
1076:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1077:Veno-Echo.cpp ****             {
1078:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1079:Veno-Echo.cpp ****                 {
1080:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1081:Veno-Echo.cpp ****                 }
1082:Veno-Echo.cpp ****             }
1083:Veno-Echo.cpp ****         }
1084:Veno-Echo.cpp **** 
1085:Veno-Echo.cpp ****         float feedbackL_combo{};
1086:Veno-Echo.cpp **** 
1087:Veno-Echo.cpp ****         if(feedbackL_pickup)
1088:Veno-Echo.cpp ****         {
1089:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1090:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1091:Veno-Echo.cpp ****         }
1092:Veno-Echo.cpp **** 
1093:Veno-Echo.cpp ****         else
1094:Veno-Echo.cpp ****         {
1095:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1096:Veno-Echo.cpp ****         }
1097:Veno-Echo.cpp ****   
1098:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1099:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1100:Veno-Echo.cpp ****     }
1101:Veno-Echo.cpp ****     else    //alternate controls
1102:Veno-Echo.cpp ****     {
1103:Veno-Echo.cpp ****         static float HPCutoff_new{};
1104:Veno-Echo.cpp **** 
1105:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1106:Veno-Echo.cpp ****         {
1107:Veno-Echo.cpp ****             lastShift = shift;
1108:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1109:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1110:Veno-Echo.cpp ****         }
1111:Veno-Echo.cpp **** 
1112:Veno-Echo.cpp ****         else    //not a recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 58


1113:Veno-Echo.cpp ****         {
1114:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1115:Veno-Echo.cpp ****             {
1116:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1117:Veno-Echo.cpp ****                 {
1118:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1119:Veno-Echo.cpp ****                 }
1120:Veno-Echo.cpp ****             }
1121:Veno-Echo.cpp ****         }
1122:Veno-Echo.cpp **** 
1123:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1124:Veno-Echo.cpp ****         {
1125:Veno-Echo.cpp ****             float HPCutoff{};
1126:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1127:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1128:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1129:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1130:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1131:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1132:Veno-Echo.cpp ****             save_flag = true;
1133:Veno-Echo.cpp ****         }
1134:Veno-Echo.cpp ****     }
1135:Veno-Echo.cpp **** }
1136:Veno-Echo.cpp **** 
1137:Veno-Echo.cpp **** void Update_feedbackR_CV()
1138:Veno-Echo.cpp **** {
1139:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1140:Veno-Echo.cpp **** }
1141:Veno-Echo.cpp **** 
1142:Veno-Echo.cpp **** void Update_feedbackR()
1143:Veno-Echo.cpp **** {
1144:Veno-Echo.cpp ****     static bool lastShift{};
1145:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1146:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1147:Veno-Echo.cpp **** 
1148:Veno-Echo.cpp ****     static float feedbackR_Last{};
1149:Veno-Echo.cpp **** 
1150:Veno-Echo.cpp ****     //get pot values:
1151:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1152:Veno-Echo.cpp **** 
1153:Veno-Echo.cpp ****     if (!shift) //default controls
1154:Veno-Echo.cpp ****     {   
1155:Veno-Echo.cpp ****         static float feedbackR_new{};
1156:Veno-Echo.cpp ****         //update pickup
1157:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1158:Veno-Echo.cpp ****         {
1159:Veno-Echo.cpp ****             lastShift = shift;
1160:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1161:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1162:Veno-Echo.cpp ****         } 
1163:Veno-Echo.cpp ****         else    //not a recent shift change
1164:Veno-Echo.cpp ****         {
1165:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1166:Veno-Echo.cpp ****             {
1167:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1168:Veno-Echo.cpp ****                 {
1169:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 59


1170:Veno-Echo.cpp ****                 }
1171:Veno-Echo.cpp ****             }
1172:Veno-Echo.cpp ****         }
1173:Veno-Echo.cpp **** 
1174:Veno-Echo.cpp ****         float feedbackR_combo{};
1175:Veno-Echo.cpp ****         
1176:Veno-Echo.cpp ****         if(feedbackR_pickup)
1177:Veno-Echo.cpp ****         {
1178:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1179:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1180:Veno-Echo.cpp ****         }
1181:Veno-Echo.cpp **** 
1182:Veno-Echo.cpp ****         else
1183:Veno-Echo.cpp ****         {
1184:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1185:Veno-Echo.cpp ****         }
1186:Veno-Echo.cpp **** 
1187:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1188:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1189:Veno-Echo.cpp ****     }
1190:Veno-Echo.cpp ****     else    //alternate controls
1191:Veno-Echo.cpp ****     {
1192:Veno-Echo.cpp **** 
1193:Veno-Echo.cpp ****         static float LPCutoff_new{};
1194:Veno-Echo.cpp **** 
1195:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1196:Veno-Echo.cpp ****         {
1197:Veno-Echo.cpp ****             lastShift = shift;
1198:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1199:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1200:Veno-Echo.cpp ****         }
1201:Veno-Echo.cpp **** 
1202:Veno-Echo.cpp ****         else    //not a recent shift change
1203:Veno-Echo.cpp ****         {
1204:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1205:Veno-Echo.cpp ****             {
1206:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1207:Veno-Echo.cpp ****                 {
1208:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1209:Veno-Echo.cpp ****                 }
1210:Veno-Echo.cpp ****             }
1211:Veno-Echo.cpp ****         }
1212:Veno-Echo.cpp **** 
1213:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1214:Veno-Echo.cpp ****         {
1215:Veno-Echo.cpp ****             float LPCutoff{};
1216:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1217:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1218:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1219:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1220:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1221:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1222:Veno-Echo.cpp ****             save_flag = true;
1223:Veno-Echo.cpp ****         }
1224:Veno-Echo.cpp ****     }
1225:Veno-Echo.cpp **** }
1226:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 60


1227:Veno-Echo.cpp **** void Update_drywet_CV()
1228:Veno-Echo.cpp **** {
1229:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1230:Veno-Echo.cpp **** }
1231:Veno-Echo.cpp **** 
1232:Veno-Echo.cpp **** void Update_drywet()
1233:Veno-Echo.cpp **** {
1234:Veno-Echo.cpp ****     static bool lastShift{};
1235:Veno-Echo.cpp ****     static bool drywet_pickup{};
1236:Veno-Echo.cpp ****     static bool Res_pickup{};
1237:Veno-Echo.cpp **** 
1238:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1239:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1240:Veno-Echo.cpp **** 
1241:Veno-Echo.cpp ****     //get pot values:
1242:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1243:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1244:Veno-Echo.cpp **** 
1245:Veno-Echo.cpp ****     if (!shift) //default controls
1246:Veno-Echo.cpp ****     {   
1247:Veno-Echo.cpp **** 
1248:Veno-Echo.cpp ****         static float drywet_new{};
1249:Veno-Echo.cpp **** 
1250:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1251:Veno-Echo.cpp ****         {
1252:Veno-Echo.cpp ****             lastShift = shift;
1253:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1254:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1255:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1256:Veno-Echo.cpp ****         } 
1257:Veno-Echo.cpp ****         
1258:Veno-Echo.cpp ****         else    //not a recent shift change
1259:Veno-Echo.cpp ****         {
1260:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1261:Veno-Echo.cpp ****             {
1262:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1263:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1264:Veno-Echo.cpp ****                 {
1265:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1266:Veno-Echo.cpp ****                 }
1267:Veno-Echo.cpp ****             }
1268:Veno-Echo.cpp **** 
1269:Veno-Echo.cpp ****         }
1270:Veno-Echo.cpp ****         
1271:Veno-Echo.cpp ****         float drywetcombo{};
1272:Veno-Echo.cpp **** 
1273:Veno-Echo.cpp ****         if (drywet_pickup)
1274:Veno-Echo.cpp ****         {
1275:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1276:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1277:Veno-Echo.cpp ****         }
1278:Veno-Echo.cpp **** 
1279:Veno-Echo.cpp ****         else
1280:Veno-Echo.cpp ****         {
1281:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1282:Veno-Echo.cpp ****         }
1283:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 61


1284:Veno-Echo.cpp ****         float drywetTarget{};
1285:Veno-Echo.cpp **** 
1286:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1287:Veno-Echo.cpp ****         {
1288:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1289:Veno-Echo.cpp ****         }
1290:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1291:Veno-Echo.cpp ****         {
1292:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1293:Veno-Echo.cpp ****         }
1294:Veno-Echo.cpp ****         else
1295:Veno-Echo.cpp ****         {
1296:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1297:Veno-Echo.cpp ****         }
1298:Veno-Echo.cpp **** 
1299:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1300:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1301:Veno-Echo.cpp ****     }
1302:Veno-Echo.cpp ****     else    //alternate controls
1303:Veno-Echo.cpp ****     {
1304:Veno-Echo.cpp ****         static float Res_new{};
1305:Veno-Echo.cpp **** 
1306:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1307:Veno-Echo.cpp ****         {
1308:Veno-Echo.cpp ****             lastShift = shift;
1309:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1310:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1311:Veno-Echo.cpp ****         }
1312:Veno-Echo.cpp **** 
1313:Veno-Echo.cpp ****         else    //not a recent shift change
1314:Veno-Echo.cpp ****         {
1315:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1316:Veno-Echo.cpp ****             {
1317:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1318:Veno-Echo.cpp ****                 {
1319:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1320:Veno-Echo.cpp ****                 }
1321:Veno-Echo.cpp ****             }
1322:Veno-Echo.cpp ****         }
1323:Veno-Echo.cpp **** 
1324:Veno-Echo.cpp ****         if(Res_pickup)
1325:Veno-Echo.cpp ****         {
1326:Veno-Echo.cpp ****             float Res{};
1327:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1328:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1329:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1330:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1331:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1332:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1333:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1334:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1335:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1336:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1337:Veno-Echo.cpp ****             save_flag = true;
1338:Veno-Echo.cpp ****         }
1339:Veno-Echo.cpp ****     }
1340:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 62


1341:Veno-Echo.cpp **** 
1342:Veno-Echo.cpp **** void Update_width_CV()
1343:Veno-Echo.cpp **** {
1344:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1345:Veno-Echo.cpp **** }
1346:Veno-Echo.cpp **** 
1347:Veno-Echo.cpp **** void Update_width()
1348:Veno-Echo.cpp **** {
1349:Veno-Echo.cpp ****     static bool lastShift{};
1350:Veno-Echo.cpp ****     static bool width_pickup{};
1351:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1352:Veno-Echo.cpp **** 
1353:Veno-Echo.cpp ****     static float width_Last{};
1354:Veno-Echo.cpp **** 
1355:Veno-Echo.cpp ****     //get pot values:
1356:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1357:Veno-Echo.cpp **** 
1358:Veno-Echo.cpp ****     if (!shift) //default controls
1359:Veno-Echo.cpp ****     {   
1360:Veno-Echo.cpp ****         static float width_new{};
1361:Veno-Echo.cpp ****         //update pickup
1362:Veno-Echo.cpp ****         if (shift != lastShift)
1363:Veno-Echo.cpp ****         {
1364:Veno-Echo.cpp ****             lastShift = shift;
1365:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1366:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1367:Veno-Echo.cpp ****         }
1368:Veno-Echo.cpp **** 
1369:Veno-Echo.cpp ****         else
1370:Veno-Echo.cpp ****         {
1371:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1372:Veno-Echo.cpp ****             {
1373:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1374:Veno-Echo.cpp ****                 {
1375:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1376:Veno-Echo.cpp ****                 }
1377:Veno-Echo.cpp ****             }
1378:Veno-Echo.cpp **** 
1379:Veno-Echo.cpp ****         }
1380:Veno-Echo.cpp **** 
1381:Veno-Echo.cpp ****         float widthTarget{};
1382:Veno-Echo.cpp **** 
1383:Veno-Echo.cpp ****         if(width_pickup)
1384:Veno-Echo.cpp ****         {
1385:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1386:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1387:Veno-Echo.cpp ****         }
1388:Veno-Echo.cpp **** 
1389:Veno-Echo.cpp ****         else
1390:Veno-Echo.cpp ****         {        
1391:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1392:Veno-Echo.cpp ****         }
1393:Veno-Echo.cpp ****             
1394:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1395:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1396:Veno-Echo.cpp ****     }
1397:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 63


1398:Veno-Echo.cpp ****     else    //alternate controls
1399:Veno-Echo.cpp ****     {
1400:Veno-Echo.cpp ****         static float ModDepth_new{};
1401:Veno-Echo.cpp **** 
1402:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1403:Veno-Echo.cpp ****         {
1404:Veno-Echo.cpp ****             lastShift = shift;
1405:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1406:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1407:Veno-Echo.cpp ****         }
1408:Veno-Echo.cpp **** 
1409:Veno-Echo.cpp ****         else    //not a recent shift change
1410:Veno-Echo.cpp ****         {
1411:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1412:Veno-Echo.cpp ****             {
1413:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1414:Veno-Echo.cpp ****                 {
1415:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1416:Veno-Echo.cpp ****                 }
1417:Veno-Echo.cpp ****             }
1418:Veno-Echo.cpp ****         }
1419:Veno-Echo.cpp **** 
1420:Veno-Echo.cpp ****         if(ModDepth_pickup)
1421:Veno-Echo.cpp ****         {
1422:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1423:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1424:Veno-Echo.cpp ****             save_flag = true;
1425:Veno-Echo.cpp ****         }
1426:Veno-Echo.cpp ****     }
1427:Veno-Echo.cpp **** }
1428:Veno-Echo.cpp **** 
1429:Veno-Echo.cpp **** void Update_crossfeedback()
1430:Veno-Echo.cpp **** {
1431:Veno-Echo.cpp ****     static bool lastShift{};
1432:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1433:Veno-Echo.cpp ****     static bool modRate_pickup{};
1434:Veno-Echo.cpp **** 
1435:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1436:Veno-Echo.cpp **** 
1437:Veno-Echo.cpp ****     //get pot values:
1438:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1439:Veno-Echo.cpp **** 
1440:Veno-Echo.cpp ****     if (!shift) //default controls
1441:Veno-Echo.cpp ****     {   
1442:Veno-Echo.cpp ****         static float crossfeedback_new{};
1443:Veno-Echo.cpp ****         //update pickup
1444:Veno-Echo.cpp ****         if (shift != lastShift)
1445:Veno-Echo.cpp ****         {
1446:Veno-Echo.cpp ****             lastShift = shift;
1447:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1448:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1449:Veno-Echo.cpp ****         }
1450:Veno-Echo.cpp **** 
1451:Veno-Echo.cpp ****         else
1452:Veno-Echo.cpp ****         {
1453:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1454:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 64


1455:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1456:Veno-Echo.cpp ****                 {
1457:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1458:Veno-Echo.cpp ****                 }
1459:Veno-Echo.cpp ****             }
1460:Veno-Echo.cpp ****         }
1461:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1462:Veno-Echo.cpp **** 
1463:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1464:Veno-Echo.cpp ****         {
1465:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1466:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1467:Veno-Echo.cpp ****         }
1468:Veno-Echo.cpp **** 
1469:Veno-Echo.cpp ****         else
1470:Veno-Echo.cpp ****         {
1471:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1472:Veno-Echo.cpp ****         }
1473:Veno-Echo.cpp **** 
1474:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1475:Veno-Echo.cpp ****     }
1476:Veno-Echo.cpp ****     else    //alternate controls
1477:Veno-Echo.cpp ****     {
1478:Veno-Echo.cpp ****         static float modRate_new{};
1479:Veno-Echo.cpp **** 
1480:Veno-Echo.cpp ****         if (shift != lastShift)
1481:Veno-Echo.cpp ****         {
1482:Veno-Echo.cpp ****             lastShift = shift;
1483:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1484:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1485:Veno-Echo.cpp ****         }
1486:Veno-Echo.cpp **** 
1487:Veno-Echo.cpp ****         else
1488:Veno-Echo.cpp ****         {
1489:Veno-Echo.cpp ****             if(!modRate_pickup)
1490:Veno-Echo.cpp ****             {
1491:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1492:Veno-Echo.cpp ****                 {
1493:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1494:Veno-Echo.cpp ****                 }
1495:Veno-Echo.cpp ****             }
1496:Veno-Echo.cpp ****         }
1497:Veno-Echo.cpp **** 
1498:Veno-Echo.cpp ****         if(modRate_pickup)
1499:Veno-Echo.cpp ****         {
1500:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1501:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1502:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1503:Veno-Echo.cpp ****             save_flag = true;
1504:Veno-Echo.cpp ****         }
1505:Veno-Echo.cpp ****     }
1506:Veno-Echo.cpp **** }
1507:Veno-Echo.cpp **** 
1508:Veno-Echo.cpp **** void Update_filterXfade()
1509:Veno-Echo.cpp **** {
1510:Veno-Echo.cpp ****     static bool lastShift{};
1511:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 65


1512:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1513:Veno-Echo.cpp **** 
1514:Veno-Echo.cpp ****     static float filterXfade_last{};
1515:Veno-Echo.cpp **** 
1516:Veno-Echo.cpp ****     //get pot values:
1517:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1518:Veno-Echo.cpp **** 
1519:Veno-Echo.cpp ****     if (!shift) //default controls
1520:Veno-Echo.cpp ****     {   
1521:Veno-Echo.cpp ****         static float filterXfade_new{};
1522:Veno-Echo.cpp ****         //update pickup
1523:Veno-Echo.cpp ****         if (shift != lastShift)
1524:Veno-Echo.cpp ****         {
1525:Veno-Echo.cpp ****             lastShift = shift;
1526:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1527:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1528:Veno-Echo.cpp ****         }
1529:Veno-Echo.cpp **** 
1530:Veno-Echo.cpp ****         else
1531:Veno-Echo.cpp ****         {
1532:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1533:Veno-Echo.cpp ****             {
1534:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1535:Veno-Echo.cpp ****                 {
1536:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1537:Veno-Echo.cpp ****                 }
1538:Veno-Echo.cpp ****             }
1539:Veno-Echo.cpp ****         }
1540:Veno-Echo.cpp **** 
1541:Veno-Echo.cpp ****         float filterXfadeTarget{};
1542:Veno-Echo.cpp **** 
1543:Veno-Echo.cpp ****         if(filterXfade_pickup)
1544:Veno-Echo.cpp ****         {
1545:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1546:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1547:Veno-Echo.cpp ****         }
1548:Veno-Echo.cpp **** 
1549:Veno-Echo.cpp ****         else
1550:Veno-Echo.cpp ****         {
1551:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1552:Veno-Echo.cpp ****         }
1553:Veno-Echo.cpp **** 
1554:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1555:Veno-Echo.cpp ****     }
1556:Veno-Echo.cpp ****     else    //alternate controls
1557:Veno-Echo.cpp ****     {
1558:Veno-Echo.cpp **** 
1559:Veno-Echo.cpp ****         static float PostFilters_new{};
1560:Veno-Echo.cpp **** 
1561:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1562:Veno-Echo.cpp ****         {
1563:Veno-Echo.cpp ****             lastShift = shift;
1564:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1565:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1566:Veno-Echo.cpp ****         }
1567:Veno-Echo.cpp **** 
1568:Veno-Echo.cpp ****         else    //not a recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 66


1569:Veno-Echo.cpp ****         {
1570:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1571:Veno-Echo.cpp ****             {
1572:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1573:Veno-Echo.cpp ****                 {
1574:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1575:Veno-Echo.cpp ****                 }
1576:Veno-Echo.cpp ****             }
1577:Veno-Echo.cpp ****         }
1578:Veno-Echo.cpp ****         
1579:Veno-Echo.cpp ****         if(PostFilters_pickup)
1580:Veno-Echo.cpp ****         {
1581:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1582:Veno-Echo.cpp ****             {
1583:Veno-Echo.cpp ****                 PostFilters = false;
1584:Veno-Echo.cpp ****             }
1585:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1586:Veno-Echo.cpp ****             {
1587:Veno-Echo.cpp ****                 PostFilters = true;
1588:Veno-Echo.cpp ****             }
1589:Veno-Echo.cpp ****             else
1590:Veno-Echo.cpp ****             {
1591:Veno-Echo.cpp ****               //do nothing
1592:Veno-Echo.cpp ****             }
1593:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1594:Veno-Echo.cpp ****             save_flag = true;
1595:Veno-Echo.cpp ****         }  
1596:Veno-Echo.cpp ****     }
1597:Veno-Echo.cpp **** }
1598:Veno-Echo.cpp **** 
1599:Veno-Echo.cpp **** void GetModCV()
1600:Veno-Echo.cpp **** {
1601:Veno-Echo.cpp ****     //get modulation CV input
1602:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1603:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1604:Veno-Echo.cpp **** }
1605:Veno-Echo.cpp **** 
1606:Veno-Echo.cpp **** void Update_Mod()
1607:Veno-Echo.cpp **** {    
1608:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1609:Veno-Echo.cpp ****     static float modulation_CV{};
1610:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1611:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1612:Veno-Echo.cpp ****     //calculate InternalMod
1613:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1614:Veno-Echo.cpp ****     //apply modulation to delay lines
1615:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1616:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1617:Veno-Echo.cpp **** }
1618:Veno-Echo.cpp **** 
1619:Veno-Echo.cpp **** void UpdateClock()
1620:Veno-Echo.cpp **** {
1621:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp ****     ClockCounter += 1; //increment by one
1624:Veno-Echo.cpp ****     //if clock in pulse received
1625:Veno-Echo.cpp ****     if (ClockIn.Trig())     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 67


1626:Veno-Echo.cpp ****     {   
1627:Veno-Echo.cpp ****         DEBUG = true;
1628:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1629:Veno-Echo.cpp ****             if(BaseTempo.clock(ClockCounter)) //if valid tap resistered
1630:Veno-Echo.cpp ****             {
1631:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1632:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
1633:Veno-Echo.cpp ****                 save_flag = true;
1634:Veno-Echo.cpp ****             }
1635:Veno-Echo.cpp ****             ClockCounter = 0; //reset counter
1636:Veno-Echo.cpp ****             DEBUG = false;
1637:Veno-Echo.cpp ****     } 
1638:Veno-Echo.cpp **** }
1639:Veno-Echo.cpp **** 
1640:Veno-Echo.cpp **** void Update_Buttons()
1641:Veno-Echo.cpp **** {  
1642:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1643:Veno-Echo.cpp ****     static uint32_t resetTime{};
1644:Veno-Echo.cpp ****     static int buttonstate{};
1645:Veno-Echo.cpp **** 
1646:Veno-Echo.cpp ****     Rev_L_sw.update();
1647:Veno-Echo.cpp ****     Rev_R_sw.update();
1648:Veno-Echo.cpp ****     LPF_sw.update();
1649:Veno-Echo.cpp ****     HPF_sw.update();
1650:Veno-Echo.cpp ****     Tap_Button.update();
1651:Veno-Echo.cpp **** 
1652:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1653:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1654:Veno-Echo.cpp ****     //TapButton.Debounce();
1655:Veno-Echo.cpp ****     Sync.Debounce();
1656:Veno-Echo.cpp ****     //ClockIn.Debounce();
1657:Veno-Echo.cpp ****     //gate inputs
1658:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1659:Veno-Echo.cpp ****     {
1660:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1661:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1662:Veno-Echo.cpp ****         {
1663:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1664:Veno-Echo.cpp ****         }
1665:Veno-Echo.cpp ****         else
1666:Veno-Echo.cpp ****         {
1667:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1668:Veno-Echo.cpp ****         }
1669:Veno-Echo.cpp ****         save_flag = true;
1670:Veno-Echo.cpp ****     }
1671:Veno-Echo.cpp **** 
1672:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1673:Veno-Echo.cpp ****     {
1674:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1675:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1676:Veno-Echo.cpp ****         {
1677:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1678:Veno-Echo.cpp ****         }
1679:Veno-Echo.cpp ****         else
1680:Veno-Echo.cpp ****         {
1681:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1682:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 68


1683:Veno-Echo.cpp ****         save_flag = true;
1684:Veno-Echo.cpp ****     }
1685:Veno-Echo.cpp **** 
1686:Veno-Echo.cpp ****     //buttons
1687:Veno-Echo.cpp **** 
1688:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1689:Veno-Echo.cpp ****     {
1690:Veno-Echo.cpp ****         buttonstate += 1;
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
1692:Veno-Echo.cpp ****         {
1693:Veno-Echo.cpp ****             resetTime = System::GetNow();
1694:Veno-Echo.cpp ****         }
1695:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1696:Veno-Echo.cpp ****         {
1697:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1698:Veno-Echo.cpp ****         }
1699:Veno-Echo.cpp ****         else
1700:Veno-Echo.cpp ****         {
1701:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1702:Veno-Echo.cpp ****         }
1703:Veno-Echo.cpp ****         save_flag = true;
1704:Veno-Echo.cpp ****     }
1705:Veno-Echo.cpp **** 
1706:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1707:Veno-Echo.cpp ****     {
1708:Veno-Echo.cpp ****         buttonstate -= 1;
1709:Veno-Echo.cpp ****     }
1710:Veno-Echo.cpp **** 
1711:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1712:Veno-Echo.cpp ****     {
1713:Veno-Echo.cpp ****         buttonstate += 1;
1714:Veno-Echo.cpp ****         if (buttonstate == 3)
1715:Veno-Echo.cpp ****         {
1716:Veno-Echo.cpp ****             resetTime = System::GetNow();
1717:Veno-Echo.cpp ****         }
1718:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1719:Veno-Echo.cpp ****         {
1720:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1721:Veno-Echo.cpp ****         }
1722:Veno-Echo.cpp ****         else
1723:Veno-Echo.cpp ****         {
1724:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1725:Veno-Echo.cpp ****         }
1726:Veno-Echo.cpp ****         save_flag = true;
1727:Veno-Echo.cpp ****     }
1728:Veno-Echo.cpp **** 
1729:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1730:Veno-Echo.cpp ****     {
1731:Veno-Echo.cpp ****         buttonstate -= 1;
1732:Veno-Echo.cpp ****     }
1733:Veno-Echo.cpp **** 
1734:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1735:Veno-Echo.cpp ****     {
1736:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1737:Veno-Echo.cpp ****         {
1738:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1739:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 69


1740:Veno-Echo.cpp ****             save_flag = true;
1741:Veno-Echo.cpp ****         }
1742:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1743:Veno-Echo.cpp ****         
1744:Veno-Echo.cpp **** 
1745:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1746:Veno-Echo.cpp ****         buttonstate += 1;
1747:Veno-Echo.cpp ****         
1748:Veno-Echo.cpp ****         if (buttonstate == 3)
1749:Veno-Echo.cpp ****         {
1750:Veno-Echo.cpp ****             resetTime = System::GetNow();
1751:Veno-Echo.cpp ****         }
1752:Veno-Echo.cpp **** 
1753:Veno-Echo.cpp ****     }
1754:Veno-Echo.cpp **** 
1755:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1756:Veno-Echo.cpp ****     {
1757:Veno-Echo.cpp ****         shift = false;
1758:Veno-Echo.cpp ****         buttonstate -= 1;
1759:Veno-Echo.cpp ****         mute = false;
1760:Veno-Echo.cpp ****     }
1761:Veno-Echo.cpp **** 
1762:Veno-Echo.cpp ****     if (Tap_Button.getState())
1763:Veno-Echo.cpp ****     {
1764:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1765:Veno-Echo.cpp ****         {
1766:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1767:Veno-Echo.cpp ****         } 
1768:Veno-Echo.cpp ****     }
1769:Veno-Echo.cpp **** 
1770:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1771:Veno-Echo.cpp ****     {
1772:Veno-Echo.cpp **** 
1773:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1774:Veno-Echo.cpp ****             {
1775:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1776:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1777:Veno-Echo.cpp ****                 ResetAllLEDs();
1778:Veno-Echo.cpp ****                 //don't let reset or shift update
1779:Veno-Echo.cpp ****                 shift = false;
1780:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1781:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1783:Veno-Echo.cpp ****                 save_flag = true;
1784:Veno-Echo.cpp ****             }
1785:Veno-Echo.cpp ****     } 
1786:Veno-Echo.cpp **** 
1787:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1788:Veno-Echo.cpp **** }
1789:Veno-Echo.cpp **** 
1790:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1791:Veno-Echo.cpp **** {
1792:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
1793:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
1794:Veno-Echo.cpp **** }
1795:Veno-Echo.cpp **** 
1796:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 70


1797:Veno-Echo.cpp **** {    
1798:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1799:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1800:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
1801:Veno-Echo.cpp ****     //DELAYR_DEBUG = delayR.GetDelayTime();
1802:Veno-Echo.cpp ****     //CLOCK_DEBUG = BaseTempo.getDelayLength();
1803:Veno-Echo.cpp **** }
1804:Veno-Echo.cpp **** 
1805:Veno-Echo.cpp **** void Update_BaseTempoLED()
1806:Veno-Echo.cpp **** {
1807:Veno-Echo.cpp ****     tempoLED_BASE.update();
1808:Veno-Echo.cpp **** 
1809:Veno-Echo.cpp ****     static int phaseCounter{};
1810:Veno-Echo.cpp **** 
1811:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1812:Veno-Echo.cpp ****     {
1813:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1814:Veno-Echo.cpp ****     }
1815:Veno-Echo.cpp **** 
1816:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
1818:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1819:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1820:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1821:Veno-Echo.cpp **** }
1822:Veno-Echo.cpp **** 
1823:Veno-Echo.cpp **** 
1824:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1825:Veno-Echo.cpp **** {
1826:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1827:Veno-Echo.cpp ****     {
1828:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1830:Veno-Echo.cpp ****     }
1831:Veno-Echo.cpp ****     else
1832:Veno-Echo.cpp ****     {
1833:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1834:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1835:Veno-Echo.cpp ****     }
1836:Veno-Echo.cpp **** 
1837:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1838:Veno-Echo.cpp ****     {
1839:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1840:Veno-Echo.cpp ****     }
1841:Veno-Echo.cpp ****     else
1842:Veno-Echo.cpp ****     {
1843:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1844:Veno-Echo.cpp ****     }
1845:Veno-Echo.cpp **** 
1846:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1847:Veno-Echo.cpp ****     {
1848:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1849:Veno-Echo.cpp ****     }
1850:Veno-Echo.cpp ****     else
1851:Veno-Echo.cpp ****     {
1852:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1853:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 71


1854:Veno-Echo.cpp **** 
1855:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1856:Veno-Echo.cpp ****     {
1857:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1858:Veno-Echo.cpp ****     }
1859:Veno-Echo.cpp ****     else
1860:Veno-Echo.cpp ****     {
1861:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1862:Veno-Echo.cpp ****     }
1863:Veno-Echo.cpp **** 
1864:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1865:Veno-Echo.cpp ****     {
1866:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1867:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1868:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1869:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1870:Veno-Echo.cpp ****     }
1871:Veno-Echo.cpp ****     else
1872:Veno-Echo.cpp ****     {
1873:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1874:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1875:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1876:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1877:Veno-Echo.cpp ****     }
1878:Veno-Echo.cpp ****     
1879:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1880:Veno-Echo.cpp ****     {
1881:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1882:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1883:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1884:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1885:Veno-Echo.cpp ****     }
1886:Veno-Echo.cpp ****     else
1887:Veno-Echo.cpp ****     {
1888:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1889:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1890:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1891:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1892:Veno-Echo.cpp **** 
1893:Veno-Echo.cpp ****     }
1894:Veno-Echo.cpp **** 
1895:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1896:Veno-Echo.cpp ****     {
1897:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1898:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1899:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1900:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1901:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1902:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1903:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1904:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1905:Veno-Echo.cpp ****     }
1906:Veno-Echo.cpp **** 
1907:Veno-Echo.cpp ****     else
1908:Veno-Echo.cpp ****     {
1909:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1910:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 72


1911:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1912:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1913:Veno-Echo.cpp ****     }
1914:Veno-Echo.cpp **** 
1915:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1916:Veno-Echo.cpp ****     {
1917:Veno-Echo.cpp ****         PostFilters = false;
1918:Veno-Echo.cpp ****     }
1919:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1920:Veno-Echo.cpp ****     {
1921:Veno-Echo.cpp ****         PostFilters = true;
1922:Veno-Echo.cpp ****     }
1923:Veno-Echo.cpp ****     else
1924:Veno-Echo.cpp ****     {
1925:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1926:Veno-Echo.cpp ****     }
1927:Veno-Echo.cpp **** 
1928:Veno-Echo.cpp ****     //if between min and max tap length
1929:Veno-Echo.cpp ****     if( (setting.tapLength >= static_cast<float> (mintap)) 
1930:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
1931:Veno-Echo.cpp ****     {
1932:Veno-Echo.cpp ****         BaseTempo.setTapLength(setting.tapLength);
1933:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1934:Veno-Echo.cpp ****     }
1935:Veno-Echo.cpp **** 
1936:Veno-Echo.cpp ****     else
1937:Veno-Echo.cpp ****     {
1938:Veno-Echo.cpp ****         BaseTempo.setTapLength(defaultAltControls.tapLength);
1939:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1940:Veno-Echo.cpp ****     }
1941:Veno-Echo.cpp **** 
1942:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1943:Veno-Echo.cpp ****     {
1944:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1945:Veno-Echo.cpp ****     }
1946:Veno-Echo.cpp ****     else    //default OFF
1947:Veno-Echo.cpp ****     {
1948:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1949:Veno-Echo.cpp ****     }
1950:Veno-Echo.cpp **** 
1951:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1952:Veno-Echo.cpp ****     {
1953:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1954:Veno-Echo.cpp ****     }
1955:Veno-Echo.cpp ****     else    //default OFF
1956:Veno-Echo.cpp ****     {
1957:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1958:Veno-Echo.cpp ****     }
1959:Veno-Echo.cpp **** 
1960:Veno-Echo.cpp **** }
1961:Veno-Echo.cpp **** 
1962:Veno-Echo.cpp **** void TurnOnAllLEDs()
1963:Veno-Echo.cpp **** {
1964:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1965:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1966:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1967:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 73


1968:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1969:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1970:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1971:Veno-Echo.cpp **** }
1972:Veno-Echo.cpp **** 
1973:Veno-Echo.cpp **** void ResetAllLEDs()
1974:Veno-Echo.cpp **** {
1975:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1976:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1977:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1978:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1979:Veno-Echo.cpp ****     {
1980:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1981:Veno-Echo.cpp ****     }
1982:Veno-Echo.cpp ****     else
1983:Veno-Echo.cpp ****     {
1984:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1985:Veno-Echo.cpp ****     }
1986:Veno-Echo.cpp **** 
1987:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1988:Veno-Echo.cpp ****     {
1989:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1990:Veno-Echo.cpp ****     }
1991:Veno-Echo.cpp ****     else
1992:Veno-Echo.cpp ****     {
1993:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1994:Veno-Echo.cpp ****     }
1995:Veno-Echo.cpp ****     
1996:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1997:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1998:Veno-Echo.cpp **** }
1999:Veno-Echo.cpp **** 
2000:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2001:Veno-Echo.cpp **** {
2002:Veno-Echo.cpp ****     float returnval{};
2003:Veno-Echo.cpp ****     if (input > limit)
2004:Veno-Echo.cpp ****         returnval = limit;
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2007:Veno-Echo.cpp ****     else
2008:Veno-Echo.cpp ****         returnval = input;
2009:Veno-Echo.cpp **** 
2010:Veno-Echo.cpp ****     return returnval;   
2011:Veno-Echo.cpp **** }
2012:Veno-Echo.cpp **** 
2013:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 2013 7 view .LVU239
 1144              	.LBB989:
2014:Veno-Echo.cpp **** {
2015:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 2015 5 view .LVU240
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 2016 5 view .LVU241
 1147              	.LBE989:
 1148              	.LBE988:
 902:Veno-Echo.cpp ****         }
 1149              		.loc 20 902 36 is_stmt 0 view .LVU242
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 74


 1150 0042 6E49     		ldr	r1, .L75+28
 1151              	.LBB993:
 1152              	.LBB990:
 1153              		.loc 20 2016 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 2016 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE990:
 1158              	.LBE993:
 902:Veno-Echo.cpp ****         }
 1159              		.loc 20 902 36 view .LVU245
 1160 004c 6C4A     		ldr	r2, .L75+32
 1161              	.LBB994:
 1162              	.LBB991:
 1163              		.loc 20 2016 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
 1165              		.loc 20 2016 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 2016 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 2016 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 2016 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
2017:Veno-Echo.cpp **** 
2018:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 2018 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1B180 		bmi	.L73
2019:Veno-Echo.cpp ****     {
2020:Veno-Echo.cpp ****         output = 0.0f;
2021:Veno-Echo.cpp ****     }
2022:Veno-Echo.cpp **** 
2023:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 2023 5 view .LVU252
2024:Veno-Echo.cpp ****     {
2025:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 2025 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
 1186              		.loc 20 2025 16 view .LVU254
 1187              	.LBE991:
 1188              	.LBE994:
 905:Veno-Echo.cpp ****         {
 1189              		.loc 20 905 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 907:Veno-Echo.cpp ****             {
 1191              		.loc 20 907 13 view .LVU256
 907:Veno-Echo.cpp ****             {
 1192              		.loc 20 907 35 is_stmt 0 view .LVU257
 1193 0080 604B     		ldr	r3, .L75+36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 75


 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 907:Veno-Echo.cpp ****             {
 1196              		.loc 20 907 35 view .LVU258
 1197 0086 6048     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE1006:
 1200              	.LBE1061:
 947:Veno-Echo.cpp **** 
 1201              		.loc 20 947 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB1062:
 1208              	.LBB1007:
 907:Veno-Echo.cpp ****             {
 1209              		.loc 20 907 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 907:Veno-Echo.cpp ****             {
 1214              		.loc 20 907 35 view .LVU261
 1215              	.LBE1007:
 1216              	.LBB1008:
 916:Veno-Echo.cpp **** 
 1217              		.loc 20 916 9 is_stmt 1 view .LVU262
 918:Veno-Echo.cpp ****         {
 1218              		.loc 20 918 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 920:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 920 13 view .LVU264
 920:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 920 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 921:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 921 34 view .LVU266
 1226 009a 5C48     		ldr	r0, .L75+44
 922:Veno-Echo.cpp ****         }
 1227              		.loc 20 922 31 view .LVU267
 1228 009c 5C49     		ldr	r1, .L75+48
 920:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 920 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 921:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 921 13 is_stmt 1 view .LVU269
 921:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 921 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 922:Veno-Echo.cpp ****         }
 1234              		.loc 20 922 13 is_stmt 1 view .LVU271
 922:Veno-Echo.cpp ****         }
 1235              		.loc 20 922 31 is_stmt 0 view .LVU272
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 76


 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 922:Veno-Echo.cpp ****         }
 1238              		.loc 20 922 31 view .LVU273
 1239              	.LBE1008:
 1240              	.LBE1062:
 947:Veno-Echo.cpp **** 
 1241              		.loc 20 947 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB1063:
 1245              	.LBB1056:
 883:Veno-Echo.cpp ****             {
 1246              		.loc 20 883 13 is_stmt 1 view .LVU275
 883:Veno-Echo.cpp ****             {
 1247              		.loc 20 883 16 is_stmt 0 view .LVU276
 1248 00a8 524A     		ldr	r2, .L75+20
 883:Veno-Echo.cpp ****             {
 1249              		.loc 20 883 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 885:Veno-Echo.cpp ****                 {
 1252              		.loc 20 885 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB995:
 1255              	.LBI995:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB996:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE996:
 1261              	.LBE995:
 885:Veno-Echo.cpp ****                 {
 1262              		.loc 20 885 23 view .LVU282
 1263 00ae 5249     		ldr	r1, .L75+24
 885:Veno-Echo.cpp ****                 {
 1264              		.loc 20 885 17 view .LVU283
 1265 00b0 9FED587A 		vldr.32	s14, .L75+52
 885:Veno-Echo.cpp ****                 {
 1266              		.loc 20 885 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB998:
 1270              	.LBB997:
 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE997:
 1274              	.LBE998:
 885:Veno-Echo.cpp ****                 {
 1275              		.loc 20 885 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 887:Veno-Echo.cpp ****                 }
 1279              		.loc 20 887 21 is_stmt 1 view .LVU287
 887:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 77


 1280              		.loc 20 887 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 892:Veno-Echo.cpp **** 
 1284              		.loc 20 892 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 894:Veno-Echo.cpp ****         {
 1286              		.loc 20 894 9 view .LVU290
 896:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 896 13 view .LVU291
 1288              	.LBB999:
 1289              	.LBI999:
2013:Veno-Echo.cpp **** {
 1290              		.loc 20 2013 7 view .LVU292
 1291              	.LBB1000:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 2015 5 view .LVU293
2016:Veno-Echo.cpp **** 
 1293              		.loc 20 2016 5 view .LVU294
 1294              	.LBE1000:
 1295              	.LBE999:
 896:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 896 36 is_stmt 0 view .LVU295
 1297 00ce 4B4A     		ldr	r2, .L75+28
 1298              	.LBB1003:
 1299              	.LBB1001:
2016:Veno-Echo.cpp **** 
 1300              		.loc 20 2016 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2016:Veno-Echo.cpp **** 
 1302              		.loc 20 2016 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2016:Veno-Echo.cpp **** 
 1304              		.loc 20 2016 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
2016:Veno-Echo.cpp **** 
 1306              		.loc 20 2016 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2016:Veno-Echo.cpp **** 
 1308              		.loc 20 2016 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
2016:Veno-Echo.cpp **** 
 1310              		.loc 20 2016 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
2016:Veno-Echo.cpp **** 
 1312              		.loc 20 2016 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2018:Veno-Echo.cpp ****     {
 1315              		.loc 20 2018 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2016:Veno-Echo.cpp **** 
 1317              		.loc 20 2016 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
2018:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 78


 1320              		.loc 20 2018 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 6DD4     		bmi	.L74
2023:Veno-Echo.cpp ****     {
 1323              		.loc 20 2023 5 view .LVU306
 1324              		.loc 20 2025 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
2026:Veno-Echo.cpp ****     }
2027:Veno-Echo.cpp **** 
2028:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 2028 5 is_stmt 1 view .LVU308
 1331              		.loc 20 2028 5 is_stmt 0 view .LVU309
 1332              	.LBE1001:
 1333              	.LBE1003:
 897:Veno-Echo.cpp ****         }
 1334              		.loc 20 897 13 is_stmt 1 view .LVU310
 897:Veno-Echo.cpp ****         }
 1335              		.loc 20 897 29 is_stmt 0 view .LVU311
 1336 010a 3D4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 897:Veno-Echo.cpp ****         }
 1341              		.loc 20 897 29 view .LVU312
 1342              	.LBE1056:
 1343              	.LBB1057:
 927:Veno-Echo.cpp ****             {
 1344              		.loc 20 927 13 is_stmt 1 view .LVU313
 927:Veno-Echo.cpp ****             {
 1345              		.loc 20 927 16 is_stmt 0 view .LVU314
 1346 0112 3E4B     		ldr	r3, .L75+44
 927:Veno-Echo.cpp ****             {
 1347              		.loc 20 927 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 929:Veno-Echo.cpp ****                 {
 1350              		.loc 20 929 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB1009:
 1353              	.LBI1009:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB1010:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE1010:
 1359              	.LBE1009:
 929:Veno-Echo.cpp ****                 {
 1360              		.loc 20 929 23 view .LVU320
 1361 0118 3D4A     		ldr	r2, .L75+48
 929:Veno-Echo.cpp ****                 {
 1362              		.loc 20 929 17 view .LVU321
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 79


 1363 011a 9FED3E7A 		vldr.32	s14, .L75+52
 929:Veno-Echo.cpp ****                 {
 1364              		.loc 20 929 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB1012:
 1368              	.LBB1011:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE1011:
 1372              	.LBE1012:
 929:Veno-Echo.cpp ****                 {
 1373              		.loc 20 929 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
 931:Veno-Echo.cpp ****                 }
 1377              		.loc 20 931 21 is_stmt 1 view .LVU325
 931:Veno-Echo.cpp ****                 }
 1378              		.loc 20 931 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 936:Veno-Echo.cpp ****         {
 1382              		.loc 20 936 9 is_stmt 1 view .LVU327
 1383              	.LBB1013:
 938:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1384              		.loc 20 938 13 view .LVU328
 938:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 938 38 is_stmt 0 view .LVU329
 1386 0138 0120     		movs	r0, #1
 1387 013a 9FED371A 		vldr.32	s2, .L75+56
 1388 013e DFED370A 		vldr.32	s1, .L75+60
 1389 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1390              	.LVL53:
 1391              	.LBB1014:
 1392              	.LBB1015:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1393              		.loc 20 70 28 view .LVU330
 1394 0146 364B     		ldr	r3, .L75+64
 1395              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1396              		.loc 20 70 28 view .LVU331
 1397              	.LBE1015:
 1398              	.LBE1014:
 939:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1399              		.loc 20 939 13 is_stmt 1 view .LVU332
 1400              	.LBB1029:
 1401              	.LBI1014:
  68:Veno-Echo.cpp ****     {
 1402              		.loc 20 68 10 view .LVU333
 1403              	.LBB1027:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1404              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 is_stmt 0 view .LVU335
 1406 0148 DFED326A 		vldr.32	s13, .L75+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 80


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1407              		.loc 20 70 28 view .LVU336
 1408 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1409              	.LVL55:
 1410              	.LBB1016:
 1411              	.LBI1016:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1412              		.loc 21 75 3 is_stmt 1 view .LVU337
 1413              	.LBB1017:
 1414              		.loc 21 76 5 view .LVU338
 1415              		.loc 21 76 5 is_stmt 0 view .LVU339
 1416              	.LBE1017:
 1417              	.LBE1016:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 20 70 15 view .LVU340
 1419 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1420              		.loc 20 70 53 view .LVU341
 1421 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1422              	.LBB1019:
 1423              	.LBB1018:
 1424              		.loc 21 76 31 view .LVU342
 1425 0158 B0EEC77A 		vabs.f32	s14, s14
 1426              	.LBE1018:
 1427              	.LBE1019:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1428              		.loc 20 70 9 view .LVU343
 1429 015c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1431 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1432              		.loc 20 74 29 view .LVU344
 1433 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1434              	.LBB1020:
 1435              	.LBB1021:
 1436              		.loc 19 72 9 view .LVU345
 1437 016a 2E4C     		ldr	r4, .L75+68
 1438              	.LBE1021:
 1439              	.LBE1020:
 1440              	.LBE1027:
 1441              	.LBE1029:
 939:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1442              		.loc 20 939 37 view .LVU346
 1443 016c 1968     		ldr	r1, [r3]
 1444              	.LBB1030:
 1445              	.LBB1028:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1446              		.loc 20 73 13 is_stmt 1 view .LVU347
 1447              	.LBB1024:
 1448              	.LBB1022:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1449              		.loc 19 71 9 is_stmt 0 view .LVU348
 1450 016e 0020     		movs	r0, #0
 1451              	.LBE1022:
 1452              	.LBE1024:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1453              		.loc 20 73 27 view .LVU349
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 81


 1454 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1455              		.loc 20 74 13 is_stmt 1 view .LVU350
 1456              	.LVL56:
 1457              	.LBB1025:
 1458              	.LBI1020:
  69:delayline_reverse.h ****     {
 1459              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 is_stmt 0 view .LVU352
 1461              	.LBE1025:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1462              		.loc 20 74 29 view .LVU353
 1463 0174 17EE902A 		vmov	r2, s15	@ int
 1464              	.LBB1026:
 1465              	.LBB1023:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1466              		.loc 19 71 9 view .LVU354
 1467 0178 0860     		str	r0, [r1]	@ float
 1468              		.loc 19 72 9 view .LVU355
 1469 017a A242     		cmp	r2, r4
 1470 017c 28BF     		it	cs
 1471 017e 2246     		movcs	r2, r4
 1472 0180 0A61     		str	r2, [r1, #16]
 1473              	.LVL57:
 1474              	.L62:
 1475              		.loc 19 72 9 view .LVU356
 1476              	.LBE1023:
 1477              	.LBE1026:
 1478              	.LBE1028:
 1479              	.LBE1030:
 940:Veno-Echo.cpp ****             //save setting:
 1480              		.loc 20 940 13 is_stmt 1 view .LVU357
 1481              	.LBB1031:
 1482              	.LBI1031:
  68:Veno-Echo.cpp ****     {
 1483              		.loc 20 68 10 view .LVU358
 1484              	.LBB1032:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1485              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 28 is_stmt 0 view .LVU360
 1487 0182 294B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU361
 1489 0184 DFED236A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1490              		.loc 20 70 28 view .LVU362
 1491 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1492              	.LVL58:
 1493              	.LBB1033:
 1494              	.LBI1033:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1495              		.loc 21 75 3 is_stmt 1 view .LVU363
 1496              	.LBB1034:
 1497              		.loc 21 76 5 view .LVU364
 1498              		.loc 21 76 5 is_stmt 0 view .LVU365
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 82


 1499              	.LBE1034:
 1500              	.LBE1033:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1501              		.loc 20 70 15 view .LVU366
 1502 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1503              		.loc 20 70 53 view .LVU367
 1504 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1505              	.LBB1036:
 1506              	.LBB1035:
 1507              		.loc 21 76 31 view .LVU368
 1508 0194 B0EEC77A 		vabs.f32	s14, s14
 1509              	.LBE1035:
 1510              	.LBE1036:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 20 70 9 view .LVU369
 1512 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1513 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1514 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1515              		.loc 20 74 29 view .LVU370
 1516 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1517              	.LBB1037:
 1518              	.LBB1038:
 1519              		.loc 19 72 9 view .LVU371
 1520 01a6 1F4C     		ldr	r4, .L75+68
 1521              	.LBE1038:
 1522              	.LBE1037:
 1523              	.LBE1032:
 1524              	.LBE1031:
 940:Veno-Echo.cpp ****             //save setting:
 1525              		.loc 20 940 37 view .LVU372
 1526 01a8 1968     		ldr	r1, [r3]
 1527              	.LBB1045:
 1528              	.LBB1044:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1529              		.loc 20 73 13 is_stmt 1 view .LVU373
 1530              	.LBB1041:
 1531              	.LBB1039:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1532              		.loc 19 71 9 is_stmt 0 view .LVU374
 1533 01aa 0020     		movs	r0, #0
 1534              	.LBE1039:
 1535              	.LBE1041:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1536              		.loc 20 73 27 view .LVU375
 1537 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1538              		.loc 20 74 13 is_stmt 1 view .LVU376
 1539              	.LVL59:
 1540              	.LBB1042:
 1541              	.LBI1037:
  69:delayline_reverse.h ****     {
 1542              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 is_stmt 0 view .LVU378
 1544              	.LBE1042:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 83


  74:Veno-Echo.cpp ****             //del -> Reset();
 1545              		.loc 20 74 29 view .LVU379
 1546 01b0 17EE902A 		vmov	r2, s15	@ int
 1547              	.LBB1043:
 1548              	.LBB1040:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1549              		.loc 19 71 9 view .LVU380
 1550 01b4 0860     		str	r0, [r1]	@ float
 1551              		.loc 19 72 9 view .LVU381
 1552 01b6 A242     		cmp	r2, r4
 1553 01b8 28BF     		it	cs
 1554 01ba 2246     		movcs	r2, r4
 1555 01bc 0A61     		str	r2, [r1, #16]
 1556              	.LVL60:
 1557              	.L56:
 1558              		.loc 19 72 9 view .LVU382
 1559              	.LBE1040:
 1560              	.LBE1043:
 1561              	.LBE1044:
 1562              	.LBE1045:
 942:Veno-Echo.cpp ****             save_flag = true;
 1563              		.loc 20 942 13 is_stmt 1 view .LVU383
 942:Veno-Echo.cpp ****             save_flag = true;
 1564              		.loc 20 942 35 is_stmt 0 view .LVU384
 1565 01be 1B49     		ldr	r1, .L75+76
 1566              	.LBB1046:
 1567              	.LBB1047:
 1568              	.LBB1048:
 1569              	.LBB1049:
 1570              	.LBB1050:
 1571              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 84


  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 85


  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 86


 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 87


 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 88


 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 89


 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 90


 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1572              		.loc 22 397 18 view .LVU385
 1573 01c0 0122     		movs	r2, #1
 1574 01c2 1B4B     		ldr	r3, .L75+80
 1575              	.LBE1050:
 1576              	.LBE1049:
 1577              	.LBE1048:
 1578              	.LBE1047:
 1579              	.LBE1046:
 942:Veno-Echo.cpp ****             save_flag = true;
 1580              		.loc 20 942 35 view .LVU386
 1581 01c4 81ED000A 		vstr.32	s0, [r1]
 943:Veno-Echo.cpp ****         }
 1582              		.loc 20 943 13 is_stmt 1 view .LVU387
 1583              	.LVL61:
 1584              	.LBB1055:
 1585              	.LBI1046:
 1586              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 91


  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 92


  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1587              		.loc 23 80 5 view .LVU388
 1588              	.LBB1054:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1589              		.loc 23 81 7 view .LVU389
 1590              	.LBB1053:
 1591              	.LBI1048:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1592              		.loc 22 288 7 view .LVU390
 1593              	.LBB1052:
 1594              	.LBI1049:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1595              		.loc 22 390 7 view .LVU391
 1596              	.LBB1051:
 1597              		.loc 22 397 18 is_stmt 0 view .LVU392
 1598 01c8 BFF35B8F 		dmb	ish
 1599 01cc 1A70     		strb	r2, [r3]
 1600 01ce BFF35B8F 		dmb	ish
 1601              	.LVL62:
 1602              		.loc 22 397 18 view .LVU393
 1603              	.LBE1051:
 1604              	.LBE1052:
 1605              	.LBE1053:
 1606              	.LBE1054:
 1607              	.LBE1055:
 1608              	.LBE1013:
 1609              	.LBE1057:
 1610              	.LBE1063:
 947:Veno-Echo.cpp **** 
 1611              		.loc 20 947 1 view .LVU394
 1612 01d2 10BD     		pop	{r4, pc}
 1613              	.LVL63:
 1614              	.L73:
 1615              	.LBB1064:
 1616              	.LBB1058:
 1617              	.LBB1004:
 1618              	.LBB992:
2020:Veno-Echo.cpp ****     }
 1619              		.loc 20 2020 16 view .LVU395
 1620 01d4 DFED177A 		vldr.32	s15, .L75+84
 1621              	.LVL64:
2020:Veno-Echo.cpp ****     }
 1622              		.loc 20 2020 16 view .LVU396
 1623 01d8 51E7     		b	.L50
 1624              	.LVL65:
 1625              	.L74:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 93


2020:Veno-Echo.cpp ****     }
 1626              		.loc 20 2020 16 view .LVU397
 1627              	.LBE992:
 1628              	.LBE1004:
 1629              	.LBB1005:
 1630              	.LBB1002:
 1631 01da DFED167A 		vldr.32	s15, .L75+84
 1632 01de 94E7     		b	.L48
 1633              	.L76:
 1634              		.align	2
 1635              	.L75:
 1636 01e0 18000000 		.word	.LANCHOR4+24
 1637 01e4 00000000 		.word	.LANCHOR6
 1638 01e8 ABAAAA2A 		.word	715827883
 1639 01ec 00000000 		.word	.LANCHOR7
 1640 01f0 00000000 		.word	.LANCHOR8
 1641 01f4 00000000 		.word	.LANCHOR9
 1642 01f8 00000000 		.word	.LANCHOR10
 1643 01fc 00000000 		.word	.LANCHOR5
 1644 0200 00000000 		.word	.LANCHOR11
 1645 0204 00000000 		.word	.LANCHOR12
 1646 0208 00000000 		.word	.LANCHOR0
 1647 020c 00000000 		.word	.LANCHOR13
 1648 0210 00000000 		.word	.LANCHOR14
 1649 0214 0AD7A33B 		.word	1000593162
 1650 0218 0050C346 		.word	1187205120
 1651 021c 00606A48 		.word	1214930944
 1652 0220 00000000 		.word	.LANCHOR2
 1653 0224 BF270900 		.word	599999
 1654 0228 00000000 		.word	.LANCHOR3
 1655 022c 00000000 		.word	.LANCHOR15
 1656 0230 00000000 		.word	.LANCHOR16
 1657 0234 00000000 		.word	0
 1658              	.LBE1002:
 1659              	.LBE1005:
 1660              	.LBE1058:
 1661              	.LBE1064:
 1662              		.cfi_endproc
 1663              	.LFE4313:
 1665              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	_Z20Update_DelayTimeR_CVv
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv5-d16
 1674              	_Z20Update_DelayTimeR_CVv:
 1675              	.LFB4314:
 950:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1676              		.loc 20 950 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 951:Veno-Echo.cpp **** }
 1680              		.loc 20 951 5 view .LVU399
 950:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 94


 1681              		.loc 20 950 1 is_stmt 0 view .LVU400
 1682 0000 08B5     		push	{r3, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 3, -8
 1685              		.cfi_offset 14, -4
 951:Veno-Echo.cpp **** }
 1686              		.loc 20 951 36 view .LVU401
 1687 0002 0121     		movs	r1, #1
 1688 0004 0348     		ldr	r0, .L79
 1689 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1690              	.LVL66:
 951:Veno-Echo.cpp **** }
 1691              		.loc 20 951 19 view .LVU402
 1692 000a 034B     		ldr	r3, .L79+4
 1693 000c 83ED000A 		vstr.32	s0, [r3]
 952:Veno-Echo.cpp **** 
 1694              		.loc 20 952 1 view .LVU403
 1695 0010 08BD     		pop	{r3, pc}
 1696              	.L80:
 1697 0012 00BF     		.align	2
 1698              	.L79:
 1699 0014 18000000 		.word	.LANCHOR4+24
 1700 0018 00000000 		.word	.LANCHOR17
 1701              		.cfi_endproc
 1702              	.LFE4314:
 1704              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	_Z17Update_DelayTimeRv
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	_Z17Update_DelayTimeRv:
 1714              	.LFB4315:
 955:Veno-Echo.cpp ****     static bool lastShift{};
 1715              		.loc 20 955 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 956:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1719              		.loc 20 956 5 view .LVU405
 957:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1720              		.loc 20 957 5 view .LVU406
 958:Veno-Echo.cpp ****     
 1721              		.loc 20 958 5 view .LVU407
 960:Veno-Echo.cpp **** 
 1722              		.loc 20 960 5 view .LVU408
 963:Veno-Echo.cpp **** 
 1723              		.loc 20 963 5 view .LVU409
 955:Veno-Echo.cpp ****     static bool lastShift{};
 1724              		.loc 20 955 1 is_stmt 0 view .LVU410
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 963:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 95


 1729              		.loc 20 963 44 view .LVU411
 1730 0002 0622     		movs	r2, #6
 1731 0004 0721     		movs	r1, #7
 1732 0006 6948     		ldr	r0, .L111
 955:Veno-Echo.cpp ****     static bool lastShift{};
 1733              		.loc 20 955 1 view .LVU412
 1734 0008 2DED028B 		vpush.64	{d8}
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 80, -16
 1737              		.cfi_offset 81, -12
 963:Veno-Echo.cpp **** 
 1738              		.loc 20 963 44 view .LVU413
 1739 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1740              	.LVL67:
 968:Veno-Echo.cpp **** 
 1741              		.loc 20 968 26 view .LVU414
 1742 0010 6749     		ldr	r1, .L111+4
 968:Veno-Echo.cpp **** 
 1743              		.loc 20 968 31 view .LVU415
 1744 0012 684B     		ldr	r3, .L111+8
 1745              	.LVL68:
 967:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1746              		.loc 20 967 5 is_stmt 1 view .LVU416
 968:Veno-Echo.cpp **** 
 1747              		.loc 20 968 5 view .LVU417
 968:Veno-Echo.cpp **** 
 1748              		.loc 20 968 26 is_stmt 0 view .LVU418
 1749 0014 0A68     		ldr	r2, [r1]
 1750              	.LBB1065:
 970:Veno-Echo.cpp ****     {
 1751              		.loc 20 970 9 view .LVU419
 1752 0016 6848     		ldr	r0, .L111+12
 1753              	.LBE1065:
 968:Veno-Echo.cpp **** 
 1754              		.loc 20 968 26 view .LVU420
 1755 0018 0132     		adds	r2, r2, #1
 1756              	.LBB1114:
 970:Veno-Echo.cpp ****     {
 1757              		.loc 20 970 5 view .LVU421
 1758 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1759              	.LBE1114:
 968:Veno-Echo.cpp **** 
 1760              		.loc 20 968 31 view .LVU422
 1761 001c 83FB0243 		smull	r4, r3, r3, r2
 1762 0020 D417     		asrs	r4, r2, #31
 1763 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1764 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1765 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1766              	.LBB1115:
 1767              	.LBB1066:
 974:Veno-Echo.cpp ****         {
 1768              		.loc 20 974 19 view .LVU423
 1769 002e 634A     		ldr	r2, .L111+16
 1770              	.LBE1066:
 1771              	.LBE1115:
 968:Veno-Echo.cpp **** 
 1772              		.loc 20 968 14 view .LVU424
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 96


 1773 0030 0B60     		str	r3, [r1]
 970:Veno-Echo.cpp ****     {
 1774              		.loc 20 970 5 is_stmt 1 view .LVU425
 1775              	.LBB1116:
 1776 0032 90BB     		cbnz	r0, .L82
 1777              	.LBB1085:
 972:Veno-Echo.cpp ****         //udpate pickup
 1778              		.loc 20 972 9 view .LVU426
 974:Veno-Echo.cpp ****         {
 1779              		.loc 20 974 9 view .LVU427
 1780 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1781 0036 0029     		cmp	r1, #0
 1782 0038 3CD0     		beq	.L83
 976:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1783              		.loc 20 976 13 view .LVU428
 977:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1784              		.loc 20 977 31 is_stmt 0 view .LVU429
 1785 003a 614C     		ldr	r4, .L111+20
 978:Veno-Echo.cpp ****         } 
 1786              		.loc 20 978 28 view .LVU430
 1787 003c 6149     		ldr	r1, .L111+24
 976:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1788              		.loc 20 976 23 view .LVU431
 1789 003e 1070     		strb	r0, [r2]
 977:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 977 13 is_stmt 1 view .LVU432
 977:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1791              		.loc 20 977 31 is_stmt 0 view .LVU433
 1792 0040 2070     		strb	r0, [r4]
 978:Veno-Echo.cpp ****         } 
 1793              		.loc 20 978 13 is_stmt 1 view .LVU434
 978:Veno-Echo.cpp ****         } 
 1794              		.loc 20 978 28 is_stmt 0 view .LVU435
 1795 0042 81ED000A 		vstr.32	s0, [r1]
 1796              	.L84:
 991:Veno-Echo.cpp **** 
 1797              		.loc 20 991 9 is_stmt 1 view .LVU436
 1798              	.LVL69:
 993:Veno-Echo.cpp ****         {
 1799              		.loc 20 993 9 view .LVU437
1001:Veno-Echo.cpp ****         }
 1800              		.loc 20 1001 13 view .LVU438
 1801              	.LBB1067:
 1802              	.LBI1067:
2013:Veno-Echo.cpp **** {
 1803              		.loc 20 2013 7 view .LVU439
 1804              	.LBB1068:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1805              		.loc 20 2015 5 view .LVU440
2016:Veno-Echo.cpp **** 
 1806              		.loc 20 2016 5 view .LVU441
 1807              	.LBE1068:
 1808              	.LBE1067:
1001:Veno-Echo.cpp ****         }
 1809              		.loc 20 1001 36 is_stmt 0 view .LVU442
 1810 0046 6049     		ldr	r1, .L111+28
 1811              	.LBB1072:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 97


 1812              	.LBB1069:
2016:Veno-Echo.cpp **** 
 1813              		.loc 20 2016 39 view .LVU443
 1814 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2016:Veno-Echo.cpp **** 
 1815              		.loc 20 2016 49 view .LVU444
 1816 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1817              	.LBE1069:
 1818              	.LBE1072:
1001:Veno-Echo.cpp ****         }
 1819              		.loc 20 1001 36 view .LVU445
 1820 0050 5E4A     		ldr	r2, .L111+32
 1821              	.LBB1073:
 1822              	.LBB1070:
2016:Veno-Echo.cpp **** 
 1823              		.loc 20 2016 39 view .LVU446
 1824 0052 91ED007A 		vldr.32	s14, [r1]
2016:Veno-Echo.cpp **** 
 1825              		.loc 20 2016 12 view .LVU447
 1826 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1827 005a D2ED007A 		vldr.32	s15, [r2]
2016:Veno-Echo.cpp **** 
 1828              		.loc 20 2016 39 view .LVU448
 1829 005e 36EEC77A 		vsub.f32	s14, s13, s14
2016:Veno-Echo.cpp **** 
 1830              		.loc 20 2016 49 view .LVU449
 1831 0062 37EE657A 		vsub.f32	s14, s14, s11
2016:Veno-Echo.cpp **** 
 1832              		.loc 20 2016 12 view .LVU450
 1833 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1834              	.LVL70:
2018:Veno-Echo.cpp ****     {
 1835              		.loc 20 2018 5 is_stmt 1 view .LVU451
 1836 006a F5EEC07A 		vcmpe.f32	s15, #0
 1837 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1838 0072 00F18C80 		bmi	.L109
2023:Veno-Echo.cpp ****     {
 1839              		.loc 20 2023 5 view .LVU452
2025:Veno-Echo.cpp ****     }
 1840              		.loc 20 2025 16 is_stmt 0 view .LVU453
 1841 0076 F4EE667A 		vcmp.f32	s15, s13
 1842 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1843 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1844              	.LVL71:
 1845              	.L89:
2025:Veno-Echo.cpp ****     }
 1846              		.loc 20 2025 16 view .LVU454
 1847              	.LBE1070:
 1848              	.LBE1073:
1004:Veno-Echo.cpp ****         {
 1849              		.loc 20 1004 9 is_stmt 1 view .LVU455
 1850 0082 A3B9     		cbnz	r3, .L81
1006:Veno-Echo.cpp ****             {
 1851              		.loc 20 1006 13 view .LVU456
1006:Veno-Echo.cpp ****             {
 1852              		.loc 20 1006 35 is_stmt 0 view .LVU457
 1853 0084 524B     		ldr	r3, .L111+36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 98


 1854 0086 B0EE670A 		vmov.f32	s0, s15
 1855              	.LVL72:
1006:Veno-Echo.cpp ****             {
 1856              		.loc 20 1006 35 view .LVU458
 1857 008a 5248     		ldr	r0, .L111+40
 1858 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1859              	.LBE1085:
 1860              	.LBE1116:
1047:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1861              		.loc 20 1047 1 view .LVU459
 1862 008e BDEC028B 		vldm	sp!, {d8}
 1863              		.cfi_remember_state
 1864              		.cfi_restore 80
 1865              		.cfi_restore 81
 1866              		.cfi_def_cfa_offset 8
 1867 0092 BDE81040 		pop	{r4, lr}
 1868              		.cfi_restore 14
 1869              		.cfi_restore 4
 1870              		.cfi_def_cfa_offset 0
 1871              	.LBB1117:
 1872              	.LBB1086:
1006:Veno-Echo.cpp ****             {
 1873              		.loc 20 1006 35 view .LVU460
 1874 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1875              	.LVL73:
 1876              	.L82:
 1877              		.cfi_restore_state
1006:Veno-Echo.cpp ****             {
 1878              		.loc 20 1006 35 view .LVU461
 1879              	.LBE1086:
 1880              	.LBB1087:
1016:Veno-Echo.cpp **** 
 1881              		.loc 20 1016 9 is_stmt 1 view .LVU462
1018:Veno-Echo.cpp ****         {
 1882              		.loc 20 1018 9 view .LVU463
 1883 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1884 009c 002B     		cmp	r3, #0
 1885 009e 3ED1     		bne	.L92
1020:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1886              		.loc 20 1020 13 view .LVU464
1020:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1887              		.loc 20 1020 23 is_stmt 0 view .LVU465
 1888 00a0 0124     		movs	r4, #1
1021:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1889              		.loc 20 1021 29 view .LVU466
 1890 00a2 4D48     		ldr	r0, .L111+44
1022:Veno-Echo.cpp ****         }
 1891              		.loc 20 1022 26 view .LVU467
 1892 00a4 4D49     		ldr	r1, .L111+48
1020:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1893              		.loc 20 1020 23 view .LVU468
 1894 00a6 1470     		strb	r4, [r2]
1021:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1895              		.loc 20 1021 13 is_stmt 1 view .LVU469
1021:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1896              		.loc 20 1021 29 is_stmt 0 view .LVU470
 1897 00a8 0370     		strb	r3, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 99


1022:Veno-Echo.cpp ****         }
 1898              		.loc 20 1022 13 is_stmt 1 view .LVU471
1022:Veno-Echo.cpp ****         }
 1899              		.loc 20 1022 26 is_stmt 0 view .LVU472
 1900 00aa 81ED000A 		vstr.32	s0, [r1]
 1901              	.L81:
1022:Veno-Echo.cpp ****         }
 1902              		.loc 20 1022 26 view .LVU473
 1903              	.LBE1087:
 1904              	.LBE1117:
1047:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1905              		.loc 20 1047 1 view .LVU474
 1906 00ae BDEC028B 		vldm	sp!, {d8}
 1907              		.cfi_remember_state
 1908              		.cfi_restore 80
 1909              		.cfi_restore 81
 1910              		.cfi_def_cfa_offset 8
 1911 00b2 10BD     		pop	{r4, pc}
 1912              	.L83:
 1913              		.cfi_restore_state
 1914              	.LBB1118:
 1915              	.LBB1110:
 982:Veno-Echo.cpp ****             {
 1916              		.loc 20 982 13 is_stmt 1 view .LVU475
 982:Veno-Echo.cpp ****             {
 1917              		.loc 20 982 16 is_stmt 0 view .LVU476
 1918 00b4 424A     		ldr	r2, .L111+20
 982:Veno-Echo.cpp ****             {
 1919              		.loc 20 982 13 view .LVU477
 1920 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1921 00b8 79B9     		cbnz	r1, .L85
 984:Veno-Echo.cpp ****                 {
 1922              		.loc 20 984 17 is_stmt 1 view .LVU478
 1923              	.LVL74:
 1924              	.LBB1074:
 1925              	.LBI1074:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1926              		.loc 21 75 3 view .LVU479
 1927              	.LBB1075:
 1928              		.loc 21 76 5 view .LVU480
 1929              		.loc 21 76 5 is_stmt 0 view .LVU481
 1930              	.LBE1075:
 1931              	.LBE1074:
 984:Veno-Echo.cpp ****                 {
 1932              		.loc 20 984 23 view .LVU482
 1933 00ba 4249     		ldr	r1, .L111+24
 984:Veno-Echo.cpp ****                 {
 1934              		.loc 20 984 17 view .LVU483
 1935 00bc 9FED487A 		vldr.32	s14, .L111+52
 984:Veno-Echo.cpp ****                 {
 1936              		.loc 20 984 23 view .LVU484
 1937 00c0 D1ED007A 		vldr.32	s15, [r1]
 1938 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1939              	.LBB1077:
 1940              	.LBB1076:
 1941              		.loc 21 76 31 view .LVU485
 1942 00c8 F0EEE77A 		vabs.f32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 100


 1943              	.LBE1076:
 1944              	.LBE1077:
 984:Veno-Echo.cpp ****                 {
 1945              		.loc 20 984 17 view .LVU486
 1946 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1947 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1948 00d4 B7DD     		ble	.L84
 986:Veno-Echo.cpp ****                 }
 1949              		.loc 20 986 21 is_stmt 1 view .LVU487
 986:Veno-Echo.cpp ****                 }
 1950              		.loc 20 986 39 is_stmt 0 view .LVU488
 1951 00d6 0121     		movs	r1, #1
 1952 00d8 1170     		strb	r1, [r2]
 1953              	.L85:
 991:Veno-Echo.cpp **** 
 1954              		.loc 20 991 9 is_stmt 1 view .LVU489
 1955              	.LVL75:
 993:Veno-Echo.cpp ****         {
 1956              		.loc 20 993 9 view .LVU490
 995:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1957              		.loc 20 995 13 view .LVU491
 1958              	.LBB1078:
 1959              	.LBI1078:
2013:Veno-Echo.cpp **** {
 1960              		.loc 20 2013 7 view .LVU492
 1961              	.LBB1079:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 20 2015 5 view .LVU493
2016:Veno-Echo.cpp **** 
 1963              		.loc 20 2016 5 view .LVU494
 1964              	.LBE1079:
 1965              	.LBE1078:
 995:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1966              		.loc 20 995 36 is_stmt 0 view .LVU495
 1967 00da 3B4A     		ldr	r2, .L111+28
 1968              	.LBB1082:
 1969              	.LBB1080:
2016:Veno-Echo.cpp **** 
 1970              		.loc 20 2016 39 view .LVU496
 1971 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2016:Veno-Echo.cpp **** 
 1972              		.loc 20 2016 49 view .LVU497
 1973 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2016:Veno-Echo.cpp **** 
 1974              		.loc 20 2016 39 view .LVU498
 1975 00e4 D2ED007A 		vldr.32	s15, [r2]
2016:Veno-Echo.cpp **** 
 1976              		.loc 20 2016 12 view .LVU499
 1977 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2016:Veno-Echo.cpp **** 
 1978              		.loc 20 2016 39 view .LVU500
 1979 00ec 77EE677A 		vsub.f32	s15, s14, s15
2016:Veno-Echo.cpp **** 
 1980              		.loc 20 2016 49 view .LVU501
 1981 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2016:Veno-Echo.cpp **** 
 1982              		.loc 20 2016 12 view .LVU502
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 101


 1983 00f4 B0EE406A 		vmov.f32	s12, s0
 1984 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2018:Veno-Echo.cpp ****     {
 1985              		.loc 20 2018 5 view .LVU503
 1986 00fc B5EEC06A 		vcmpe.f32	s12, #0
2016:Veno-Echo.cpp **** 
 1987              		.loc 20 2016 12 view .LVU504
 1988 0100 F0EE467A 		vmov.f32	s15, s12
 1989              	.LVL76:
2018:Veno-Echo.cpp ****     {
 1990              		.loc 20 2018 5 is_stmt 1 view .LVU505
 1991 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1992 0108 44D4     		bmi	.L110
2023:Veno-Echo.cpp ****     {
 1993              		.loc 20 2023 5 view .LVU506
2025:Veno-Echo.cpp ****     }
 1994              		.loc 20 2025 16 is_stmt 0 view .LVU507
 1995 010a F4EE477A 		vcmp.f32	s15, s14
 1996 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1997 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1998              	.L87:
 1999              	.LVL77:
 2000              		.loc 20 2028 5 is_stmt 1 view .LVU508
 2001              		.loc 20 2028 5 is_stmt 0 view .LVU509
 2002              	.LBE1080:
 2003              	.LBE1082:
 996:Veno-Echo.cpp ****         }
 2004              		.loc 20 996 13 is_stmt 1 view .LVU510
 996:Veno-Echo.cpp ****         }
 2005              		.loc 20 996 29 is_stmt 0 view .LVU511
 2006 0116 2D4A     		ldr	r2, .L111+32
 2007 0118 82ED000A 		vstr.32	s0, [r2]
 2008 011c B1E7     		b	.L89
 2009              	.LVL78:
 2010              	.L92:
 996:Veno-Echo.cpp ****         }
 2011              		.loc 20 996 29 view .LVU512
 2012              	.LBE1110:
 2013              	.LBB1111:
1027:Veno-Echo.cpp ****             {
 2014              		.loc 20 1027 13 is_stmt 1 view .LVU513
1027:Veno-Echo.cpp ****             {
 2015              		.loc 20 1027 16 is_stmt 0 view .LVU514
 2016 011e 2E4B     		ldr	r3, .L111+44
1027:Veno-Echo.cpp ****             {
 2017              		.loc 20 1027 13 view .LVU515
 2018 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 0122 7AB9     		cbnz	r2, .L93
1029:Veno-Echo.cpp ****                 {
 2020              		.loc 20 1029 17 is_stmt 1 view .LVU516
 2021              	.LVL79:
 2022              	.LBB1088:
 2023              	.LBI1088:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2024              		.loc 21 75 3 view .LVU517
 2025              	.LBB1089:
 2026              		.loc 21 76 5 view .LVU518
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 102


 2027              		.loc 21 76 5 is_stmt 0 view .LVU519
 2028              	.LBE1089:
 2029              	.LBE1088:
1029:Veno-Echo.cpp ****                 {
 2030              		.loc 20 1029 23 view .LVU520
 2031 0124 2D4A     		ldr	r2, .L111+48
1029:Veno-Echo.cpp ****                 {
 2032              		.loc 20 1029 17 view .LVU521
 2033 0126 9FED2E7A 		vldr.32	s14, .L111+52
1029:Veno-Echo.cpp ****                 {
 2034              		.loc 20 1029 23 view .LVU522
 2035 012a D2ED007A 		vldr.32	s15, [r2]
 2036 012e 70EE677A 		vsub.f32	s15, s0, s15
 2037              	.LBB1091:
 2038              	.LBB1090:
 2039              		.loc 21 76 31 view .LVU523
 2040 0132 F0EEE77A 		vabs.f32	s15, s15
 2041              	.LBE1090:
 2042              	.LBE1091:
1029:Veno-Echo.cpp ****                 {
 2043              		.loc 20 1029 17 view .LVU524
 2044 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2045 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2046 013e B6DD     		ble	.L81
1031:Veno-Echo.cpp ****                 }
 2047              		.loc 20 1031 21 is_stmt 1 view .LVU525
1031:Veno-Echo.cpp ****                 }
 2048              		.loc 20 1031 37 is_stmt 0 view .LVU526
 2049 0140 0122     		movs	r2, #1
 2050 0142 1A70     		strb	r2, [r3]
 2051              	.L93:
1036:Veno-Echo.cpp ****         {
 2052              		.loc 20 1036 9 is_stmt 1 view .LVU527
 2053              	.LBB1092:
1038:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2054              		.loc 20 1038 13 view .LVU528
 2055              	.LVL80:
1039:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2056              		.loc 20 1039 13 view .LVU529
1039:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2057              		.loc 20 1039 61 is_stmt 0 view .LVU530
 2058 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2059 0148 0020     		movs	r0, #0
 2060 014a 9FED261A 		vldr.32	s2, .L111+56
 2061 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2062              	.LVL81:
 2063              	.LBB1093:
 2064              	.LBI1093:
 2065              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 103


   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 104


  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 105


 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 106


 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 107


 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 108


 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 109


 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 110


 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 111


 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 112


 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 113


 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 114


 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 115


 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 116


 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 117


 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 118


 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 119


 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 120


 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 121


1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 122


1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 123


1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 124


1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 125


1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 126


1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 127


1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 128


1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 129


1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 130


1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 131


1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 132


1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 133


1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2066              		.loc 24 1756 3 is_stmt 1 view .LVU531
 2067              	.LBB1094:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2068              		.loc 24 1757 5 view .LVU532
 2069              		.loc 24 1757 28 is_stmt 0 view .LVU533
 2070 0152 B8FE400A 		vrinta.f32	s0, s0
 2071              	.LVL82:
 2072              		.loc 24 1757 28 view .LVU534
 2073              	.LBE1094:
 2074              	.LBE1093:
1040:Veno-Echo.cpp ****             //save setting:
 2075              		.loc 20 1040 13 is_stmt 1 view .LVU535
 2076              	.LBB1095:
 2077              	.LBI1095:
2029:Veno-Echo.cpp **** }
2030:Veno-Echo.cpp **** 
2031:Veno-Echo.cpp **** //checks pickup state of primary controls
2032:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2033:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 134


2034:Veno-Echo.cpp ****     bool retval{};
2035:Veno-Echo.cpp ****     
2036:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2037:Veno-Echo.cpp ****     {
2038:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2039:Veno-Echo.cpp ****         {
2040:Veno-Echo.cpp ****             retval = false;
2041:Veno-Echo.cpp ****         }
2042:Veno-Echo.cpp ****         else
2043:Veno-Echo.cpp ****         {
2044:Veno-Echo.cpp ****             retval = true;
2045:Veno-Echo.cpp ****         }
2046:Veno-Echo.cpp ****     }
2047:Veno-Echo.cpp **** 
2048:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2049:Veno-Echo.cpp ****     {
2050:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2051:Veno-Echo.cpp ****     {
2052:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2053:Veno-Echo.cpp ****         {
2054:Veno-Echo.cpp ****             retval = true;
2055:Veno-Echo.cpp ****         }
2056:Veno-Echo.cpp **** 
2057:Veno-Echo.cpp ****         else
2058:Veno-Echo.cpp ****         {
2059:Veno-Echo.cpp ****             retval = false;
2060:Veno-Echo.cpp ****         }
2061:Veno-Echo.cpp **** 
2062:Veno-Echo.cpp ****     }
2063:Veno-Echo.cpp ****     else    //previous state is picked up
2064:Veno-Echo.cpp ****     {
2065:Veno-Echo.cpp ****         retval = true;  //always return true
2066:Veno-Echo.cpp ****     }
2067:Veno-Echo.cpp **** 
2068:Veno-Echo.cpp ****     }
2069:Veno-Echo.cpp ****     return retval;
2070:Veno-Echo.cpp **** 
2071:Veno-Echo.cpp **** }
2072:Veno-Echo.cpp **** 
2073:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2074:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2075:Veno-Echo.cpp **** {
2076:Veno-Echo.cpp ****     pickupState retval{};
2077:Veno-Echo.cpp **** 
2078:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
2079:Veno-Echo.cpp ****     {
2080:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2081:Veno-Echo.cpp ****         {
2082:Veno-Echo.cpp ****             retval = BELOW;
2083:Veno-Echo.cpp ****         }
2084:Veno-Echo.cpp ****         
2085:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2086:Veno-Echo.cpp ****         {
2087:Veno-Echo.cpp ****             retval = ABOVE;
2088:Veno-Echo.cpp ****         }
2089:Veno-Echo.cpp **** 
2090:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 135


2091:Veno-Echo.cpp ****         {
2092:Veno-Echo.cpp ****             retval = PICKEDUP;
2093:Veno-Echo.cpp ****         }
2094:Veno-Echo.cpp ****     }
2095:Veno-Echo.cpp **** 
2096:Veno-Echo.cpp ****     else    //not a recent shift change
2097:Veno-Echo.cpp ****     {
2098:Veno-Echo.cpp ****         switch(lastState)
2099:Veno-Echo.cpp ****         {
2100:Veno-Echo.cpp ****             case BELOW:
2101:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
2103:Veno-Echo.cpp ****             else
2104:Veno-Echo.cpp ****                 retval = lastState;
2105:Veno-Echo.cpp ****             break;
2106:Veno-Echo.cpp **** 
2107:Veno-Echo.cpp ****             case ABOVE:
2108:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
2110:Veno-Echo.cpp ****             else
2111:Veno-Echo.cpp ****                 retval = lastState;
2112:Veno-Echo.cpp ****             break;
2113:Veno-Echo.cpp ****             case PICKEDUP:
2114:Veno-Echo.cpp ****                 retval = lastState;
2115:Veno-Echo.cpp ****             break;
2116:Veno-Echo.cpp ****         }
2117:Veno-Echo.cpp ****     }
2118:Veno-Echo.cpp ****     
2119:Veno-Echo.cpp ****     return retval;
2120:Veno-Echo.cpp **** }
2121:Veno-Echo.cpp **** 
2122:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2078              		.loc 20 2122 8 view .LVU536
 2079              	.LBB1096:
2123:Veno-Echo.cpp **** {
2124:Veno-Echo.cpp **** double retVal{};
 2080              		.loc 20 2124 1 view .LVU537
2125:Veno-Echo.cpp ****     switch(ratio)
 2081              		.loc 20 2125 5 view .LVU538
 2082              	.LBE1096:
 2083              	.LBE1095:
1039:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2084              		.loc 20 1039 130 is_stmt 0 view .LVU539
 2085 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2086 015a 17EE903A 		vmov	r3, s15	@ int
 2087 015e 013B     		subs	r3, r3, #1
 2088 0160 DBB2     		uxtb	r3, r3
 2089 0162 022B     		cmp	r3, #2
 2090 0164 19D9     		bls	.L97
 2091 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2092              	.L98:
 2093              	.LVL83:
 2094              	.LBB1098:
 2095              	.LBB1097:
2126:Veno-Echo.cpp ****     {
2127:Veno-Echo.cpp ****         case QUARTER:
2128:Veno-Echo.cpp ****         retVal = 1.0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 136


2129:Veno-Echo.cpp ****         break;
2130:Veno-Echo.cpp **** 
2131:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2132:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2133:Veno-Echo.cpp ****         break;
2134:Veno-Echo.cpp **** 
2135:Veno-Echo.cpp ****         case EIGHT:
2136:Veno-Echo.cpp ****         retVal = 2.0;
2137:Veno-Echo.cpp ****         break;
2138:Veno-Echo.cpp **** 
2139:Veno-Echo.cpp ****         case TWELVE:
2140:Veno-Echo.cpp ****         retVal = 3.0;
2141:Veno-Echo.cpp ****         break;
2142:Veno-Echo.cpp **** 
2143:Veno-Echo.cpp ****         default:
2144:Veno-Echo.cpp ****         retVal = 1.0;
2145:Veno-Echo.cpp ****         break;
2146:Veno-Echo.cpp ****     }
2147:Veno-Echo.cpp **** 
2148:Veno-Echo.cpp **** return retVal;
 2096              		.loc 20 2148 1 is_stmt 1 view .LVU540
 2097              		.loc 20 2148 1 is_stmt 0 view .LVU541
 2098              	.LBE1097:
 2099              	.LBE1098:
1040:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 20 1040 34 view .LVU542
 2101 016a B0EE480A 		vmov.f32	s0, s16
 2102              	.LVL84:
1040:Veno-Echo.cpp ****             //save setting:
 2103              		.loc 20 1040 34 view .LVU543
 2104 016e 1E48     		ldr	r0, .L111+60
 2105 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2106              	.LVL85:
1042:Veno-Echo.cpp ****             save_flag = true;
 2107              		.loc 20 1042 13 is_stmt 1 view .LVU544
1042:Veno-Echo.cpp ****             save_flag = true;
 2108              		.loc 20 1042 13 is_stmt 0 view .LVU545
 2109              	.LBE1092:
 2110              	.LBE1111:
 2111              	.LBE1118:
2124:Veno-Echo.cpp ****     switch(ratio)
 2112              		.loc 20 2124 1 is_stmt 1 view .LVU546
2125:Veno-Echo.cpp ****     {
 2113              		.loc 20 2125 5 view .LVU547
 2114              		.loc 20 2148 1 view .LVU548
 2115              	.LBB1119:
 2116              	.LBB1112:
 2117              	.LBB1109:
1042:Veno-Echo.cpp ****             save_flag = true;
 2118              		.loc 20 1042 34 is_stmt 0 view .LVU549
 2119 0174 1D49     		ldr	r1, .L111+64
 2120              	.LBB1099:
 2121              	.LBB1100:
 2122              	.LBB1101:
 2123              	.LBB1102:
 2124              	.LBB1103:
 2125              		.loc 22 397 18 view .LVU550
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 137


 2126 0176 1E4B     		ldr	r3, .L111+68
 2127 0178 0122     		movs	r2, #1
 2128              	.LBE1103:
 2129              	.LBE1102:
 2130              	.LBE1101:
 2131              	.LBE1100:
 2132              	.LBE1099:
1042:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 20 1042 34 view .LVU551
 2134 017a 81ED018A 		vstr.32	s16, [r1, #4]
1043:Veno-Echo.cpp ****         }
 2135              		.loc 20 1043 13 is_stmt 1 view .LVU552
 2136              	.LVL86:
 2137              	.LBB1108:
 2138              	.LBI1099:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2139              		.loc 23 80 5 view .LVU553
 2140              	.LBB1107:
 2141              		.loc 23 81 7 view .LVU554
 2142              	.LBB1106:
 2143              	.LBI1101:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2144              		.loc 22 288 7 view .LVU555
 2145              	.LBB1105:
 2146              	.LBI1102:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2147              		.loc 22 390 7 view .LVU556
 2148              	.LBB1104:
 2149              		.loc 22 397 18 is_stmt 0 view .LVU557
 2150 017e BFF35B8F 		dmb	ish
 2151 0182 1A70     		strb	r2, [r3]
 2152 0184 BFF35B8F 		dmb	ish
 2153              	.LVL87:
 2154              		.loc 22 397 18 view .LVU558
 2155              	.LBE1104:
 2156              	.LBE1105:
 2157              	.LBE1106:
 2158              	.LBE1107:
 2159              	.LBE1108:
 2160              	.LBE1109:
 2161              	.LBE1112:
 2162              	.LBE1119:
1047:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2163              		.loc 20 1047 1 view .LVU559
 2164 0188 BDEC028B 		vldm	sp!, {d8}
 2165              		.cfi_remember_state
 2166              		.cfi_restore 80
 2167              		.cfi_restore 81
 2168              		.cfi_def_cfa_offset 8
 2169 018c 10BD     		pop	{r4, pc}
 2170              	.LVL88:
 2171              	.L109:
 2172              		.cfi_restore_state
 2173              	.LBB1120:
 2174              	.LBB1113:
 2175              	.LBB1083:
 2176              	.LBB1071:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 138


2020:Veno-Echo.cpp ****     }
 2177              		.loc 20 2020 16 view .LVU560
 2178 018e DFED157A 		vldr.32	s15, .L111+56
 2179              	.LVL89:
2020:Veno-Echo.cpp ****     }
 2180              		.loc 20 2020 16 view .LVU561
 2181 0192 76E7     		b	.L89
 2182              	.LVL90:
 2183              	.L110:
2020:Veno-Echo.cpp ****     }
 2184              		.loc 20 2020 16 view .LVU562
 2185              	.LBE1071:
 2186              	.LBE1083:
 2187              	.LBB1084:
 2188              	.LBB1081:
 2189 0194 DFED137A 		vldr.32	s15, .L111+56
 2190 0198 BDE7     		b	.L87
 2191              	.LVL91:
 2192              	.L97:
2020:Veno-Echo.cpp ****     }
 2193              		.loc 20 2020 16 view .LVU563
 2194 019a 164A     		ldr	r2, .L111+72
 2195 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2196 01a0 93ED008B 		vldr.64	d8, [r3]
 2197 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2198 01a8 DFE7     		b	.L98
 2199              	.L112:
 2200 01aa 00BF     		.align	2
 2201              	.L111:
 2202 01ac 18000000 		.word	.LANCHOR4+24
 2203 01b0 00000000 		.word	.LANCHOR18
 2204 01b4 ABAAAA2A 		.word	715827883
 2205 01b8 00000000 		.word	.LANCHOR7
 2206 01bc 00000000 		.word	.LANCHOR19
 2207 01c0 00000000 		.word	.LANCHOR20
 2208 01c4 00000000 		.word	.LANCHOR21
 2209 01c8 00000000 		.word	.LANCHOR17
 2210 01cc 00000000 		.word	.LANCHOR22
 2211 01d0 00000000 		.word	.LANCHOR12
 2212 01d4 00000000 		.word	.LANCHOR1
 2213 01d8 00000000 		.word	.LANCHOR23
 2214 01dc 00000000 		.word	.LANCHOR24
 2215 01e0 0AD7A33B 		.word	1000593162
 2216 01e4 00000000 		.word	0
 2217 01e8 00000000 		.word	.LANCHOR26
 2218 01ec 00000000 		.word	.LANCHOR15
 2219 01f0 00000000 		.word	.LANCHOR16
 2220 01f4 00000000 		.word	.LANCHOR25
 2221              	.LBE1081:
 2222              	.LBE1084:
 2223              	.LBE1113:
 2224              	.LBE1120:
 2225              		.cfi_endproc
 2226              	.LFE4315:
 2228              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2229              		.align	1
 2230              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 139


 2231              		.global	_Z19Update_feedbackL_CVv
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z19Update_feedbackL_CVv:
 2238              	.LFB4316:
1049:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2239              		.loc 20 1049 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1050:Veno-Echo.cpp **** }
 2243              		.loc 20 1050 5 view .LVU565
1049:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2244              		.loc 20 1049 1 is_stmt 0 view .LVU566
 2245 0000 08B5     		push	{r3, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 3, -8
 2248              		.cfi_offset 14, -4
1050:Veno-Echo.cpp **** }
 2249              		.loc 20 1050 35 view .LVU567
 2250 0002 0221     		movs	r1, #2
 2251 0004 0348     		ldr	r0, .L115
 2252 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2253              	.LVL92:
1050:Veno-Echo.cpp **** }
 2254              		.loc 20 1050 18 view .LVU568
 2255 000a 034B     		ldr	r3, .L115+4
 2256 000c 83ED000A 		vstr.32	s0, [r3]
1051:Veno-Echo.cpp **** void Update_feedbackL()
 2257              		.loc 20 1051 1 view .LVU569
 2258 0010 08BD     		pop	{r3, pc}
 2259              	.L116:
 2260 0012 00BF     		.align	2
 2261              	.L115:
 2262 0014 18000000 		.word	.LANCHOR4+24
 2263 0018 00000000 		.word	.LANCHOR27
 2264              		.cfi_endproc
 2265              	.LFE4316:
 2267              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2268              		.align	1
 2269              		.p2align 2,,3
 2270              		.global	_Z16Update_feedbackLv
 2271              		.syntax unified
 2272              		.thumb
 2273              		.thumb_func
 2274              		.fpu fpv5-d16
 2276              	_Z16Update_feedbackLv:
 2277              	.LFB4317:
1053:Veno-Echo.cpp ****     static bool lastShift{};
 2278              		.loc 20 1053 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
1054:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2282              		.loc 20 1054 5 view .LVU571
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 140


1055:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2283              		.loc 20 1055 5 view .LVU572
1056:Veno-Echo.cpp **** 
 2284              		.loc 20 1056 5 view .LVU573
1058:Veno-Echo.cpp **** 
 2285              		.loc 20 1058 5 view .LVU574
1062:Veno-Echo.cpp **** 
 2286              		.loc 20 1062 5 view .LVU575
1062:Veno-Echo.cpp **** 
 2287              		.loc 20 1062 43 is_stmt 0 view .LVU576
 2288 0000 0122     		movs	r2, #1
 2289 0002 0721     		movs	r1, #7
 2290 0004 6548     		ldr	r0, .L145
1053:Veno-Echo.cpp ****     static bool lastShift{};
 2291              		.loc 20 1053 1 view .LVU577
 2292 0006 10B5     		push	{r4, lr}
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 4, -8
 2295              		.cfi_offset 14, -4
 2296 0008 2DED028B 		vpush.64	{d8}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 80, -16
 2299              		.cfi_offset 81, -12
1062:Veno-Echo.cpp **** 
 2300              		.loc 20 1062 43 view .LVU578
 2301 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2302              	.LVL93:
 2303              	.LBB1121:
1064:Veno-Echo.cpp ****     {   
 2304              		.loc 20 1064 9 view .LVU579
 2305 0010 634B     		ldr	r3, .L145+4
 2306              	.LVL94:
1064:Veno-Echo.cpp ****     {   
 2307              		.loc 20 1064 9 view .LVU580
 2308              	.LBE1121:
1064:Veno-Echo.cpp ****     {   
 2309              		.loc 20 1064 5 is_stmt 1 view .LVU581
 2310              	.LBB1166:
 2311              	.LBB1122:
1068:Veno-Echo.cpp ****         {
 2312              		.loc 20 1068 19 is_stmt 0 view .LVU582
 2313 0012 644A     		ldr	r2, .L145+8
 2314              	.LBE1122:
1064:Veno-Echo.cpp ****     {   
 2315              		.loc 20 1064 5 view .LVU583
 2316 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0016 002B     		cmp	r3, #0
 2318 0018 3DD1     		bne	.L118
 2319              	.LBB1145:
1066:Veno-Echo.cpp ****         //update pickup
 2320              		.loc 20 1066 9 is_stmt 1 view .LVU584
1068:Veno-Echo.cpp ****         {
 2321              		.loc 20 1068 9 view .LVU585
 2322 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 001c 0029     		cmp	r1, #0
 2324 001e 47D0     		beq	.L119
1070:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 141


 2325              		.loc 20 1070 13 view .LVU586
1071:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2326              		.loc 20 1071 30 is_stmt 0 view .LVU587
 2327 0020 6148     		ldr	r0, .L145+12
1072:Veno-Echo.cpp ****         } 
 2328              		.loc 20 1072 27 view .LVU588
 2329 0022 6249     		ldr	r1, .L145+16
1070:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2330              		.loc 20 1070 23 view .LVU589
 2331 0024 1370     		strb	r3, [r2]
1071:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2332              		.loc 20 1071 13 is_stmt 1 view .LVU590
1071:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2333              		.loc 20 1071 30 is_stmt 0 view .LVU591
 2334 0026 0370     		strb	r3, [r0]
1072:Veno-Echo.cpp ****         } 
 2335              		.loc 20 1072 13 is_stmt 1 view .LVU592
1072:Veno-Echo.cpp ****         } 
 2336              		.loc 20 1072 27 is_stmt 0 view .LVU593
 2337 0028 81ED000A 		vstr.32	s0, [r1]
 2338              	.L120:
1085:Veno-Echo.cpp **** 
 2339              		.loc 20 1085 9 is_stmt 1 view .LVU594
 2340              	.LVL95:
1087:Veno-Echo.cpp ****         {
 2341              		.loc 20 1087 9 view .LVU595
1095:Veno-Echo.cpp ****         }
 2342              		.loc 20 1095 13 view .LVU596
 2343              	.LBB1123:
 2344              	.LBI1123:
2013:Veno-Echo.cpp **** {
 2345              		.loc 20 2013 7 view .LVU597
 2346              	.LBB1124:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2347              		.loc 20 2015 5 view .LVU598
2016:Veno-Echo.cpp **** 
 2348              		.loc 20 2016 5 view .LVU599
 2349              	.LBE1124:
 2350              	.LBE1123:
1095:Veno-Echo.cpp ****         }
 2351              		.loc 20 1095 41 is_stmt 0 view .LVU600
 2352 002c 604A     		ldr	r2, .L145+20
 2353              	.LBB1128:
 2354              	.LBB1125:
2016:Veno-Echo.cpp **** 
 2355              		.loc 20 2016 39 view .LVU601
 2356 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2016:Veno-Echo.cpp **** 
 2357              		.loc 20 2016 49 view .LVU602
 2358 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2359              	.LBE1125:
 2360              	.LBE1128:
1095:Veno-Echo.cpp ****         }
 2361              		.loc 20 1095 41 view .LVU603
 2362 0036 5F4B     		ldr	r3, .L145+24
 2363              	.LBB1129:
 2364              	.LBB1126:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 142


2016:Veno-Echo.cpp **** 
 2365              		.loc 20 2016 39 view .LVU604
 2366 0038 92ED007A 		vldr.32	s14, [r2]
2016:Veno-Echo.cpp **** 
 2367              		.loc 20 2016 12 view .LVU605
 2368 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2369 0040 D3ED007A 		vldr.32	s15, [r3]
2016:Veno-Echo.cpp **** 
 2370              		.loc 20 2016 39 view .LVU606
 2371 0044 36EEC77A 		vsub.f32	s14, s13, s14
2016:Veno-Echo.cpp **** 
 2372              		.loc 20 2016 49 view .LVU607
 2373 0048 37EE657A 		vsub.f32	s14, s14, s11
2016:Veno-Echo.cpp **** 
 2374              		.loc 20 2016 12 view .LVU608
 2375 004c E7EE067A 		vfma.f32	s15, s14, s12
 2376              	.LVL96:
2018:Veno-Echo.cpp ****     {
 2377              		.loc 20 2018 5 is_stmt 1 view .LVU609
 2378 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2379 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2380 0058 00F19A80 		bmi	.L143
2023:Veno-Echo.cpp ****     {
 2381              		.loc 20 2023 5 view .LVU610
2025:Veno-Echo.cpp ****     }
 2382              		.loc 20 2025 16 is_stmt 0 view .LVU611
 2383 005c F4EE667A 		vcmp.f32	s15, s13
 2384 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2385 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2386              	.LVL97:
 2387              	.L125:
2025:Veno-Echo.cpp ****     }
 2388              		.loc 20 2025 16 view .LVU612
 2389              	.LBE1126:
 2390              	.LBE1129:
1098:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2391              		.loc 20 1098 9 is_stmt 1 view .LVU613
1098:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2392              		.loc 20 1098 37 is_stmt 0 view .LVU614
 2393 0068 B0EE670A 		vmov.f32	s0, s15
 2394              	.LVL98:
1098:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2395              		.loc 20 1098 37 view .LVU615
 2396 006c 0020     		movs	r0, #0
 2397 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2398 0072 DFED510A 		vldr.32	s1, .L145+28
 2399 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2400              	.LVL99:
1099:Veno-Echo.cpp ****     }
 2401              		.loc 20 1099 9 is_stmt 1 view .LVU616
 2402              	.LBB1130:
 2403              	.LBI1130:
 2404              		.file 25 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 143


   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 144


  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 145


 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2405              		.loc 25 135 13 view .LVU617
 2406              	.LBB1131:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2407              		.loc 25 137 5 view .LVU618
 2408              		.loc 25 137 9 is_stmt 0 view .LVU619
 2409 007a 504B     		ldr	r3, .L145+32
 2410 007c 9FED507A 		vldr.32	s14, .L145+36
 2411 0080 D3ED007A 		vldr.32	s15, [r3]
 2412              		.loc 25 137 24 view .LVU620
 2413 0084 30EE670A 		vsub.f32	s0, s0, s15
 2414              	.LVL100:
 2415              		.loc 25 137 24 view .LVU621
 2416              	.LBE1131:
 2417              	.LBE1130:
 2418              	.LBE1145:
 2419              	.LBE1166:
1135:Veno-Echo.cpp **** 
 2420              		.loc 20 1135 1 view .LVU622
 2421 0088 BDEC028B 		vldm	sp!, {d8}
 2422              		.cfi_remember_state
 2423              		.cfi_restore 80
 2424              		.cfi_restore 81
 2425              		.cfi_def_cfa_offset 8
 2426              	.LBB1167:
 2427              	.LBB1146:
 2428              	.LBB1133:
 2429              	.LBB1132:
 2430              		.loc 25 137 9 view .LVU623
 2431 008c E0EE077A 		vfma.f32	s15, s0, s14
 2432 0090 C3ED007A 		vstr.32	s15, [r3]
 2433              	.LBE1132:
 2434              	.LBE1133:
 2435              	.LBE1146:
 2436              	.LBE1167:
1135:Veno-Echo.cpp **** 
 2437              		.loc 20 1135 1 view .LVU624
 2438 0094 10BD     		pop	{r4, pc}
 2439              	.LVL101:
 2440              	.L118:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 146


 2441              		.cfi_restore_state
 2442              	.LBB1168:
 2443              	.LBB1147:
1103:Veno-Echo.cpp **** 
 2444              		.loc 20 1103 9 is_stmt 1 view .LVU625
1105:Veno-Echo.cpp ****         {
 2445              		.loc 20 1105 9 view .LVU626
 2446 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2447 0098 002B     		cmp	r3, #0
 2448 009a 3ED1     		bne	.L128
1107:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2449              		.loc 20 1107 13 view .LVU627
1107:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2450              		.loc 20 1107 23 is_stmt 0 view .LVU628
 2451 009c 0124     		movs	r4, #1
1108:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2452              		.loc 20 1108 29 view .LVU629
 2453 009e 4948     		ldr	r0, .L145+40
1109:Veno-Echo.cpp ****         }
 2454              		.loc 20 1109 26 view .LVU630
 2455 00a0 4949     		ldr	r1, .L145+44
1107:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2456              		.loc 20 1107 23 view .LVU631
 2457 00a2 1470     		strb	r4, [r2]
1108:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2458              		.loc 20 1108 13 is_stmt 1 view .LVU632
1108:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2459              		.loc 20 1108 29 is_stmt 0 view .LVU633
 2460 00a4 0370     		strb	r3, [r0]
1109:Veno-Echo.cpp ****         }
 2461              		.loc 20 1109 13 is_stmt 1 view .LVU634
1109:Veno-Echo.cpp ****         }
 2462              		.loc 20 1109 26 is_stmt 0 view .LVU635
 2463 00a6 81ED000A 		vstr.32	s0, [r1]
 2464              	.L117:
1109:Veno-Echo.cpp ****         }
 2465              		.loc 20 1109 26 view .LVU636
 2466              	.LBE1147:
 2467              	.LBE1168:
1135:Veno-Echo.cpp **** 
 2468              		.loc 20 1135 1 view .LVU637
 2469 00aa BDEC028B 		vldm	sp!, {d8}
 2470              		.cfi_remember_state
 2471              		.cfi_restore 80
 2472              		.cfi_restore 81
 2473              		.cfi_def_cfa_offset 8
 2474 00ae 10BD     		pop	{r4, pc}
 2475              	.L119:
 2476              		.cfi_restore_state
 2477              	.LBB1169:
 2478              	.LBB1163:
1076:Veno-Echo.cpp ****             {
 2479              		.loc 20 1076 13 is_stmt 1 view .LVU638
1076:Veno-Echo.cpp ****             {
 2480              		.loc 20 1076 16 is_stmt 0 view .LVU639
 2481 00b0 3D4B     		ldr	r3, .L145+12
1076:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 147


 2482              		.loc 20 1076 13 view .LVU640
 2483 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2484 00b4 7AB9     		cbnz	r2, .L121
1078:Veno-Echo.cpp ****                 {
 2485              		.loc 20 1078 17 is_stmt 1 view .LVU641
 2486              	.LVL102:
 2487              	.LBB1134:
 2488              	.LBI1134:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2489              		.loc 21 75 3 view .LVU642
 2490              	.LBB1135:
 2491              		.loc 21 76 5 view .LVU643
 2492              		.loc 21 76 5 is_stmt 0 view .LVU644
 2493              	.LBE1135:
 2494              	.LBE1134:
1078:Veno-Echo.cpp ****                 {
 2495              		.loc 20 1078 23 view .LVU645
 2496 00b6 3D4A     		ldr	r2, .L145+16
1078:Veno-Echo.cpp ****                 {
 2497              		.loc 20 1078 17 view .LVU646
 2498 00b8 9FED447A 		vldr.32	s14, .L145+48
1078:Veno-Echo.cpp ****                 {
 2499              		.loc 20 1078 23 view .LVU647
 2500 00bc D2ED007A 		vldr.32	s15, [r2]
 2501 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2502              	.LBB1137:
 2503              	.LBB1136:
 2504              		.loc 21 76 31 view .LVU648
 2505 00c4 F0EEE77A 		vabs.f32	s15, s15
 2506              	.LBE1136:
 2507              	.LBE1137:
1078:Veno-Echo.cpp ****                 {
 2508              		.loc 20 1078 17 view .LVU649
 2509 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2510 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2511 00d0 ACDD     		ble	.L120
1080:Veno-Echo.cpp ****                 }
 2512              		.loc 20 1080 21 is_stmt 1 view .LVU650
1080:Veno-Echo.cpp ****                 }
 2513              		.loc 20 1080 38 is_stmt 0 view .LVU651
 2514 00d2 0122     		movs	r2, #1
 2515 00d4 1A70     		strb	r2, [r3]
 2516              	.L121:
1085:Veno-Echo.cpp **** 
 2517              		.loc 20 1085 9 is_stmt 1 view .LVU652
 2518              	.LVL103:
1087:Veno-Echo.cpp ****         {
 2519              		.loc 20 1087 9 view .LVU653
1089:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2520              		.loc 20 1089 13 view .LVU654
 2521              	.LBB1138:
 2522              	.LBI1138:
2013:Veno-Echo.cpp **** {
 2523              		.loc 20 2013 7 view .LVU655
 2524              	.LBB1139:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 20 2015 5 view .LVU656
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 148


2016:Veno-Echo.cpp **** 
 2526              		.loc 20 2016 5 view .LVU657
 2527              	.LBE1139:
 2528              	.LBE1138:
1089:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2529              		.loc 20 1089 41 is_stmt 0 view .LVU658
 2530 00d6 364B     		ldr	r3, .L145+20
 2531              	.LBB1142:
 2532              	.LBB1140:
2016:Veno-Echo.cpp **** 
 2533              		.loc 20 2016 39 view .LVU659
 2534 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2016:Veno-Echo.cpp **** 
 2535              		.loc 20 2016 49 view .LVU660
 2536 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2016:Veno-Echo.cpp **** 
 2537              		.loc 20 2016 39 view .LVU661
 2538 00e0 D3ED007A 		vldr.32	s15, [r3]
2016:Veno-Echo.cpp **** 
 2539              		.loc 20 2016 12 view .LVU662
 2540 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2016:Veno-Echo.cpp **** 
 2541              		.loc 20 2016 39 view .LVU663
 2542 00e8 77EE677A 		vsub.f32	s15, s14, s15
2016:Veno-Echo.cpp **** 
 2543              		.loc 20 2016 49 view .LVU664
 2544 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2016:Veno-Echo.cpp **** 
 2545              		.loc 20 2016 12 view .LVU665
 2546 00f0 B0EE406A 		vmov.f32	s12, s0
 2547 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2018:Veno-Echo.cpp ****     {
 2548              		.loc 20 2018 5 view .LVU666
 2549 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2016:Veno-Echo.cpp **** 
 2550              		.loc 20 2016 12 view .LVU667
 2551 00fc F0EE467A 		vmov.f32	s15, s12
 2552              	.LVL104:
2018:Veno-Echo.cpp ****     {
 2553              		.loc 20 2018 5 is_stmt 1 view .LVU668
 2554 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2555 0104 47D4     		bmi	.L144
2023:Veno-Echo.cpp ****     {
 2556              		.loc 20 2023 5 view .LVU669
2025:Veno-Echo.cpp ****     }
 2557              		.loc 20 2025 16 is_stmt 0 view .LVU670
 2558 0106 F4EE477A 		vcmp.f32	s15, s14
 2559 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2560 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2561              	.L123:
 2562              	.LVL105:
2028:Veno-Echo.cpp **** }
 2563              		.loc 20 2028 5 is_stmt 1 view .LVU671
2028:Veno-Echo.cpp **** }
 2564              		.loc 20 2028 5 is_stmt 0 view .LVU672
 2565              	.LBE1140:
 2566              	.LBE1142:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 149


1090:Veno-Echo.cpp ****         }
 2567              		.loc 20 1090 13 is_stmt 1 view .LVU673
1090:Veno-Echo.cpp ****         }
 2568              		.loc 20 1090 28 is_stmt 0 view .LVU674
 2569 0112 284B     		ldr	r3, .L145+24
 2570 0114 83ED000A 		vstr.32	s0, [r3]
 2571 0118 A6E7     		b	.L125
 2572              	.LVL106:
 2573              	.L128:
1090:Veno-Echo.cpp ****         }
 2574              		.loc 20 1090 28 view .LVU675
 2575              	.LBE1163:
 2576              	.LBB1164:
1114:Veno-Echo.cpp ****             {
 2577              		.loc 20 1114 13 is_stmt 1 view .LVU676
1114:Veno-Echo.cpp ****             {
 2578              		.loc 20 1114 16 is_stmt 0 view .LVU677
 2579 011a 2A4B     		ldr	r3, .L145+40
1114:Veno-Echo.cpp ****             {
 2580              		.loc 20 1114 13 view .LVU678
 2581 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2582 011e 7AB9     		cbnz	r2, .L130
1116:Veno-Echo.cpp ****                 {
 2583              		.loc 20 1116 17 is_stmt 1 view .LVU679
 2584              	.LVL107:
 2585              	.LBB1148:
 2586              	.LBI1148:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2587              		.loc 21 75 3 view .LVU680
 2588              	.LBB1149:
 2589              		.loc 21 76 5 view .LVU681
 2590              		.loc 21 76 5 is_stmt 0 view .LVU682
 2591              	.LBE1149:
 2592              	.LBE1148:
1116:Veno-Echo.cpp ****                 {
 2593              		.loc 20 1116 23 view .LVU683
 2594 0120 294A     		ldr	r2, .L145+44
1116:Veno-Echo.cpp ****                 {
 2595              		.loc 20 1116 17 view .LVU684
 2596 0122 9FED2A7A 		vldr.32	s14, .L145+48
1116:Veno-Echo.cpp ****                 {
 2597              		.loc 20 1116 23 view .LVU685
 2598 0126 D2ED007A 		vldr.32	s15, [r2]
 2599 012a 70EE677A 		vsub.f32	s15, s0, s15
 2600              	.LBB1151:
 2601              	.LBB1150:
 2602              		.loc 21 76 31 view .LVU686
 2603 012e F0EEE77A 		vabs.f32	s15, s15
 2604              	.LBE1150:
 2605              	.LBE1151:
1116:Veno-Echo.cpp ****                 {
 2606              		.loc 20 1116 17 view .LVU687
 2607 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2608 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 013a B6DD     		ble	.L117
1118:Veno-Echo.cpp ****                 }
 2610              		.loc 20 1118 21 is_stmt 1 view .LVU688
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 150


1118:Veno-Echo.cpp ****                 }
 2611              		.loc 20 1118 37 is_stmt 0 view .LVU689
 2612 013c 0122     		movs	r2, #1
 2613 013e 1A70     		strb	r2, [r3]
 2614              	.L130:
1123:Veno-Echo.cpp ****         {
 2615              		.loc 20 1123 9 is_stmt 1 view .LVU690
 2616              	.LBB1152:
1125:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2617              		.loc 20 1125 13 view .LVU691
 2618              	.LVL108:
1126:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2619              		.loc 20 1126 13 view .LVU692
1126:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2620              		.loc 20 1126 29 is_stmt 0 view .LVU693
 2621 0140 9FED231A 		vldr.32	s2, .L145+52
 2622 0144 0120     		movs	r0, #1
 2623 0146 DFED230A 		vldr.32	s1, .L145+56
 2624 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2625              	.LVL109:
1126:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2626              		.loc 20 1126 29 view .LVU694
 2627 014e B0EE408A 		vmov.f32	s16, s0
 2628              	.LVL110:
1127:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2629              		.loc 20 1127 13 is_stmt 1 view .LVU695
1127:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2630              		.loc 20 1127 26 is_stmt 0 view .LVU696
 2631 0152 2148     		ldr	r0, .L145+60
 2632 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2633              	.LVL111:
1128:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2634              		.loc 20 1128 13 is_stmt 1 view .LVU697
1128:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2635              		.loc 20 1128 26 is_stmt 0 view .LVU698
 2636 0158 2048     		ldr	r0, .L145+64
 2637 015a B0EE480A 		vmov.f32	s0, s16
 2638 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2639              	.LVL112:
1129:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2640              		.loc 20 1129 13 is_stmt 1 view .LVU699
1129:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2641              		.loc 20 1129 31 is_stmt 0 view .LVU700
 2642 0162 B0EE480A 		vmov.f32	s0, s16
 2643 0166 1E48     		ldr	r0, .L145+68
 2644 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2645              	.LVL113:
1130:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2646              		.loc 20 1130 13 is_stmt 1 view .LVU701
1130:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2647              		.loc 20 1130 31 is_stmt 0 view .LVU702
 2648 016c B0EE480A 		vmov.f32	s0, s16
 2649 0170 1C48     		ldr	r0, .L145+72
 2650 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2651              	.LVL114:
1131:Veno-Echo.cpp ****             save_flag = true;
 2652              		.loc 20 1131 13 is_stmt 1 view .LVU703
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 151


1131:Veno-Echo.cpp ****             save_flag = true;
 2653              		.loc 20 1131 35 is_stmt 0 view .LVU704
 2654 0176 1C49     		ldr	r1, .L145+76
 2655              	.LBB1153:
 2656              	.LBB1154:
 2657              	.LBB1155:
 2658              	.LBB1156:
 2659              	.LBB1157:
 2660              		.loc 22 397 18 view .LVU705
 2661 0178 1C4B     		ldr	r3, .L145+80
 2662 017a 0122     		movs	r2, #1
 2663              	.LBE1157:
 2664              	.LBE1156:
 2665              	.LBE1155:
 2666              	.LBE1154:
 2667              	.LBE1153:
1131:Veno-Echo.cpp ****             save_flag = true;
 2668              		.loc 20 1131 35 view .LVU706
 2669 017c 81ED048A 		vstr.32	s16, [r1, #16]
1132:Veno-Echo.cpp ****         }
 2670              		.loc 20 1132 13 is_stmt 1 view .LVU707
 2671              	.LVL115:
 2672              	.LBB1162:
 2673              	.LBI1153:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2674              		.loc 23 80 5 view .LVU708
 2675              	.LBB1161:
 2676              		.loc 23 81 7 view .LVU709
 2677              	.LBB1160:
 2678              	.LBI1155:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2679              		.loc 22 288 7 view .LVU710
 2680              	.LBB1159:
 2681              	.LBI1156:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2682              		.loc 22 390 7 view .LVU711
 2683              	.LBB1158:
 2684              		.loc 22 397 18 is_stmt 0 view .LVU712
 2685 0180 BFF35B8F 		dmb	ish
 2686 0184 1A70     		strb	r2, [r3]
 2687 0186 BFF35B8F 		dmb	ish
 2688              	.LVL116:
 2689              		.loc 22 397 18 view .LVU713
 2690              	.LBE1158:
 2691              	.LBE1159:
 2692              	.LBE1160:
 2693              	.LBE1161:
 2694              	.LBE1162:
 2695              	.LBE1152:
 2696              	.LBE1164:
 2697              	.LBE1169:
1135:Veno-Echo.cpp **** 
 2698              		.loc 20 1135 1 view .LVU714
 2699 018a BDEC028B 		vldm	sp!, {d8}
 2700              		.cfi_remember_state
 2701              		.cfi_restore 80
 2702              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 152


 2703              		.cfi_def_cfa_offset 8
 2704              	.LVL117:
1135:Veno-Echo.cpp **** 
 2705              		.loc 20 1135 1 view .LVU715
 2706 018e 10BD     		pop	{r4, pc}
 2707              	.LVL118:
 2708              	.L143:
 2709              		.cfi_restore_state
 2710              	.LBB1170:
 2711              	.LBB1165:
 2712              	.LBB1143:
 2713              	.LBB1127:
2020:Veno-Echo.cpp ****     }
 2714              		.loc 20 2020 16 view .LVU716
 2715 0190 DFED097A 		vldr.32	s15, .L145+28
 2716              	.LVL119:
2020:Veno-Echo.cpp ****     }
 2717              		.loc 20 2020 16 view .LVU717
 2718 0194 68E7     		b	.L125
 2719              	.LVL120:
 2720              	.L144:
2020:Veno-Echo.cpp ****     }
 2721              		.loc 20 2020 16 view .LVU718
 2722              	.LBE1127:
 2723              	.LBE1143:
 2724              	.LBB1144:
 2725              	.LBB1141:
 2726 0196 DFED087A 		vldr.32	s15, .L145+28
 2727 019a BAE7     		b	.L123
 2728              	.L146:
 2729              		.align	2
 2730              	.L145:
 2731 019c 18000000 		.word	.LANCHOR4+24
 2732 01a0 00000000 		.word	.LANCHOR7
 2733 01a4 00000000 		.word	.LANCHOR28
 2734 01a8 00000000 		.word	.LANCHOR29
 2735 01ac 00000000 		.word	.LANCHOR30
 2736 01b0 00000000 		.word	.LANCHOR27
 2737 01b4 00000000 		.word	.LANCHOR31
 2738 01b8 00000000 		.word	0
 2739 01bc 00000000 		.word	.LANCHOR32
 2740 01c0 6F12033D 		.word	1023611503
 2741 01c4 00000000 		.word	.LANCHOR33
 2742 01c8 00000000 		.word	.LANCHOR34
 2743 01cc 0AD7A33B 		.word	1000593162
 2744 01d0 00004844 		.word	1145569280
 2745 01d4 0000C842 		.word	1120403456
 2746 01d8 00000000 		.word	.LANCHOR35
 2747 01dc 00000000 		.word	.LANCHOR36
 2748 01e0 00000000 		.word	.LANCHOR37
 2749 01e4 00000000 		.word	.LANCHOR38
 2750 01e8 00000000 		.word	.LANCHOR15
 2751 01ec 00000000 		.word	.LANCHOR16
 2752              	.LBE1141:
 2753              	.LBE1144:
 2754              	.LBE1165:
 2755              	.LBE1170:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 153


 2756              		.cfi_endproc
 2757              	.LFE4317:
 2759              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.global	_Z19Update_feedbackR_CVv
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv5-d16
 2768              	_Z19Update_feedbackR_CVv:
 2769              	.LFB4318:
1138:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2770              		.loc 20 1138 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1139:Veno-Echo.cpp **** }
 2774              		.loc 20 1139 5 view .LVU720
1138:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2775              		.loc 20 1138 1 is_stmt 0 view .LVU721
 2776 0000 08B5     		push	{r3, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 3, -8
 2779              		.cfi_offset 14, -4
1139:Veno-Echo.cpp **** }
 2780              		.loc 20 1139 35 view .LVU722
 2781 0002 0321     		movs	r1, #3
 2782 0004 0348     		ldr	r0, .L149
 2783 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2784              	.LVL121:
1139:Veno-Echo.cpp **** }
 2785              		.loc 20 1139 18 view .LVU723
 2786 000a 034B     		ldr	r3, .L149+4
 2787 000c 83ED000A 		vstr.32	s0, [r3]
1140:Veno-Echo.cpp **** 
 2788              		.loc 20 1140 1 view .LVU724
 2789 0010 08BD     		pop	{r3, pc}
 2790              	.L150:
 2791 0012 00BF     		.align	2
 2792              	.L149:
 2793 0014 18000000 		.word	.LANCHOR4+24
 2794 0018 00000000 		.word	.LANCHOR39
 2795              		.cfi_endproc
 2796              	.LFE4318:
 2798              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.global	_Z16Update_feedbackRv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu fpv5-d16
 2807              	_Z16Update_feedbackRv:
 2808              	.LFB4319:
1143:Veno-Echo.cpp ****     static bool lastShift{};
 2809              		.loc 20 1143 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 154


 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1144:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2813              		.loc 20 1144 5 view .LVU726
1145:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2814              		.loc 20 1145 5 view .LVU727
1146:Veno-Echo.cpp **** 
 2815              		.loc 20 1146 5 view .LVU728
1148:Veno-Echo.cpp **** 
 2816              		.loc 20 1148 5 view .LVU729
1151:Veno-Echo.cpp **** 
 2817              		.loc 20 1151 5 view .LVU730
1151:Veno-Echo.cpp **** 
 2818              		.loc 20 1151 43 is_stmt 0 view .LVU731
 2819 0000 0422     		movs	r2, #4
 2820 0002 0721     		movs	r1, #7
 2821 0004 6548     		ldr	r0, .L179
1143:Veno-Echo.cpp ****     static bool lastShift{};
 2822              		.loc 20 1143 1 view .LVU732
 2823 0006 10B5     		push	{r4, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0008 2DED028B 		vpush.64	{d8}
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 80, -16
 2830              		.cfi_offset 81, -12
1151:Veno-Echo.cpp **** 
 2831              		.loc 20 1151 43 view .LVU733
 2832 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2833              	.LVL122:
 2834              	.LBB1171:
1153:Veno-Echo.cpp ****     {   
 2835              		.loc 20 1153 9 view .LVU734
 2836 0010 634B     		ldr	r3, .L179+4
 2837              	.LVL123:
1153:Veno-Echo.cpp ****     {   
 2838              		.loc 20 1153 9 view .LVU735
 2839              	.LBE1171:
1153:Veno-Echo.cpp ****     {   
 2840              		.loc 20 1153 5 is_stmt 1 view .LVU736
 2841              	.LBB1216:
 2842              	.LBB1172:
1157:Veno-Echo.cpp ****         {
 2843              		.loc 20 1157 19 is_stmt 0 view .LVU737
 2844 0012 644A     		ldr	r2, .L179+8
 2845              	.LBE1172:
1153:Veno-Echo.cpp ****     {   
 2846              		.loc 20 1153 5 view .LVU738
 2847 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 0016 002B     		cmp	r3, #0
 2849 0018 3DD1     		bne	.L152
 2850              	.LBB1195:
1155:Veno-Echo.cpp ****         //update pickup
 2851              		.loc 20 1155 9 is_stmt 1 view .LVU739
1157:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 155


 2852              		.loc 20 1157 9 view .LVU740
 2853 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 001c 0029     		cmp	r1, #0
 2855 001e 47D0     		beq	.L153
1159:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2856              		.loc 20 1159 13 view .LVU741
1160:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2857              		.loc 20 1160 30 is_stmt 0 view .LVU742
 2858 0020 6148     		ldr	r0, .L179+12
1161:Veno-Echo.cpp ****         } 
 2859              		.loc 20 1161 27 view .LVU743
 2860 0022 6249     		ldr	r1, .L179+16
1159:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2861              		.loc 20 1159 23 view .LVU744
 2862 0024 1370     		strb	r3, [r2]
1160:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2863              		.loc 20 1160 13 is_stmt 1 view .LVU745
1160:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2864              		.loc 20 1160 30 is_stmt 0 view .LVU746
 2865 0026 0370     		strb	r3, [r0]
1161:Veno-Echo.cpp ****         } 
 2866              		.loc 20 1161 13 is_stmt 1 view .LVU747
1161:Veno-Echo.cpp ****         } 
 2867              		.loc 20 1161 27 is_stmt 0 view .LVU748
 2868 0028 81ED000A 		vstr.32	s0, [r1]
 2869              	.L154:
1174:Veno-Echo.cpp ****         
 2870              		.loc 20 1174 9 is_stmt 1 view .LVU749
 2871              	.LVL124:
1176:Veno-Echo.cpp ****         {
 2872              		.loc 20 1176 9 view .LVU750
1184:Veno-Echo.cpp ****         }
 2873              		.loc 20 1184 13 view .LVU751
 2874              	.LBB1173:
 2875              	.LBI1173:
2013:Veno-Echo.cpp **** {
 2876              		.loc 20 2013 7 view .LVU752
 2877              	.LBB1174:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2878              		.loc 20 2015 5 view .LVU753
2016:Veno-Echo.cpp **** 
 2879              		.loc 20 2016 5 view .LVU754
 2880              	.LBE1174:
 2881              	.LBE1173:
1184:Veno-Echo.cpp ****         }
 2882              		.loc 20 1184 41 is_stmt 0 view .LVU755
 2883 002c 604A     		ldr	r2, .L179+20
 2884              	.LBB1178:
 2885              	.LBB1175:
2016:Veno-Echo.cpp **** 
 2886              		.loc 20 2016 39 view .LVU756
 2887 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2016:Veno-Echo.cpp **** 
 2888              		.loc 20 2016 49 view .LVU757
 2889 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2890              	.LBE1175:
 2891              	.LBE1178:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 156


1184:Veno-Echo.cpp ****         }
 2892              		.loc 20 1184 41 view .LVU758
 2893 0036 5F4B     		ldr	r3, .L179+24
 2894              	.LBB1179:
 2895              	.LBB1176:
2016:Veno-Echo.cpp **** 
 2896              		.loc 20 2016 39 view .LVU759
 2897 0038 92ED007A 		vldr.32	s14, [r2]
2016:Veno-Echo.cpp **** 
 2898              		.loc 20 2016 12 view .LVU760
 2899 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2900 0040 D3ED007A 		vldr.32	s15, [r3]
2016:Veno-Echo.cpp **** 
 2901              		.loc 20 2016 39 view .LVU761
 2902 0044 36EEC77A 		vsub.f32	s14, s13, s14
2016:Veno-Echo.cpp **** 
 2903              		.loc 20 2016 49 view .LVU762
 2904 0048 37EE657A 		vsub.f32	s14, s14, s11
2016:Veno-Echo.cpp **** 
 2905              		.loc 20 2016 12 view .LVU763
 2906 004c E7EE067A 		vfma.f32	s15, s14, s12
 2907              	.LVL125:
2018:Veno-Echo.cpp ****     {
 2908              		.loc 20 2018 5 is_stmt 1 view .LVU764
 2909 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2910 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2911 0058 00F19A80 		bmi	.L177
2023:Veno-Echo.cpp ****     {
 2912              		.loc 20 2023 5 view .LVU765
2025:Veno-Echo.cpp ****     }
 2913              		.loc 20 2025 16 is_stmt 0 view .LVU766
 2914 005c F4EE667A 		vcmp.f32	s15, s13
 2915 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2916 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2917              	.LVL126:
 2918              	.L159:
2025:Veno-Echo.cpp ****     }
 2919              		.loc 20 2025 16 view .LVU767
 2920              	.LBE1176:
 2921              	.LBE1179:
1187:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2922              		.loc 20 1187 9 is_stmt 1 view .LVU768
1187:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2923              		.loc 20 1187 37 is_stmt 0 view .LVU769
 2924 0068 B0EE670A 		vmov.f32	s0, s15
 2925              	.LVL127:
1187:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2926              		.loc 20 1187 37 view .LVU770
 2927 006c 0020     		movs	r0, #0
 2928 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2929 0072 DFED510A 		vldr.32	s1, .L179+28
 2930 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2931              	.LVL128:
1188:Veno-Echo.cpp ****     }
 2932              		.loc 20 1188 9 is_stmt 1 view .LVU771
 2933              	.LBB1180:
 2934              	.LBI1180:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 157


 135:../DaisySP/Source/Utility/dsp.h **** {
 2935              		.loc 25 135 13 view .LVU772
 2936              	.LBB1181:
 2937              		.loc 25 137 5 view .LVU773
 2938              		.loc 25 137 9 is_stmt 0 view .LVU774
 2939 007a 504B     		ldr	r3, .L179+32
 2940 007c 9FED507A 		vldr.32	s14, .L179+36
 2941 0080 D3ED007A 		vldr.32	s15, [r3]
 2942              		.loc 25 137 24 view .LVU775
 2943 0084 30EE670A 		vsub.f32	s0, s0, s15
 2944              	.LVL129:
 2945              		.loc 25 137 24 view .LVU776
 2946              	.LBE1181:
 2947              	.LBE1180:
 2948              	.LBE1195:
 2949              	.LBE1216:
1225:Veno-Echo.cpp **** 
 2950              		.loc 20 1225 1 view .LVU777
 2951 0088 BDEC028B 		vldm	sp!, {d8}
 2952              		.cfi_remember_state
 2953              		.cfi_restore 80
 2954              		.cfi_restore 81
 2955              		.cfi_def_cfa_offset 8
 2956              	.LBB1217:
 2957              	.LBB1196:
 2958              	.LBB1183:
 2959              	.LBB1182:
 2960              		.loc 25 137 9 view .LVU778
 2961 008c E0EE077A 		vfma.f32	s15, s0, s14
 2962 0090 C3ED007A 		vstr.32	s15, [r3]
 2963              	.LBE1182:
 2964              	.LBE1183:
 2965              	.LBE1196:
 2966              	.LBE1217:
1225:Veno-Echo.cpp **** 
 2967              		.loc 20 1225 1 view .LVU779
 2968 0094 10BD     		pop	{r4, pc}
 2969              	.LVL130:
 2970              	.L152:
 2971              		.cfi_restore_state
 2972              	.LBB1218:
 2973              	.LBB1197:
1193:Veno-Echo.cpp **** 
 2974              		.loc 20 1193 9 is_stmt 1 view .LVU780
1195:Veno-Echo.cpp ****         {
 2975              		.loc 20 1195 10 view .LVU781
 2976 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2977 0098 002B     		cmp	r3, #0
 2978 009a 3ED1     		bne	.L162
1197:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2979              		.loc 20 1197 13 view .LVU782
1197:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2980              		.loc 20 1197 23 is_stmt 0 view .LVU783
 2981 009c 0124     		movs	r4, #1
1198:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2982              		.loc 20 1198 29 view .LVU784
 2983 009e 4948     		ldr	r0, .L179+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 158


1199:Veno-Echo.cpp ****         }
 2984              		.loc 20 1199 26 view .LVU785
 2985 00a0 4949     		ldr	r1, .L179+44
1197:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2986              		.loc 20 1197 23 view .LVU786
 2987 00a2 1470     		strb	r4, [r2]
1198:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2988              		.loc 20 1198 13 is_stmt 1 view .LVU787
1198:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2989              		.loc 20 1198 29 is_stmt 0 view .LVU788
 2990 00a4 0370     		strb	r3, [r0]
1199:Veno-Echo.cpp ****         }
 2991              		.loc 20 1199 13 is_stmt 1 view .LVU789
1199:Veno-Echo.cpp ****         }
 2992              		.loc 20 1199 26 is_stmt 0 view .LVU790
 2993 00a6 81ED000A 		vstr.32	s0, [r1]
 2994              	.L151:
1199:Veno-Echo.cpp ****         }
 2995              		.loc 20 1199 26 view .LVU791
 2996              	.LBE1197:
 2997              	.LBE1218:
1225:Veno-Echo.cpp **** 
 2998              		.loc 20 1225 1 view .LVU792
 2999 00aa BDEC028B 		vldm	sp!, {d8}
 3000              		.cfi_remember_state
 3001              		.cfi_restore 80
 3002              		.cfi_restore 81
 3003              		.cfi_def_cfa_offset 8
 3004 00ae 10BD     		pop	{r4, pc}
 3005              	.L153:
 3006              		.cfi_restore_state
 3007              	.LBB1219:
 3008              	.LBB1213:
1165:Veno-Echo.cpp ****             {
 3009              		.loc 20 1165 13 is_stmt 1 view .LVU793
1165:Veno-Echo.cpp ****             {
 3010              		.loc 20 1165 16 is_stmt 0 view .LVU794
 3011 00b0 3D4B     		ldr	r3, .L179+12
1165:Veno-Echo.cpp ****             {
 3012              		.loc 20 1165 13 view .LVU795
 3013 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3014 00b4 7AB9     		cbnz	r2, .L155
1167:Veno-Echo.cpp ****                 {
 3015              		.loc 20 1167 17 is_stmt 1 view .LVU796
 3016              	.LVL131:
 3017              	.LBB1184:
 3018              	.LBI1184:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3019              		.loc 21 75 3 view .LVU797
 3020              	.LBB1185:
 3021              		.loc 21 76 5 view .LVU798
 3022              		.loc 21 76 5 is_stmt 0 view .LVU799
 3023              	.LBE1185:
 3024              	.LBE1184:
1167:Veno-Echo.cpp ****                 {
 3025              		.loc 20 1167 23 view .LVU800
 3026 00b6 3D4A     		ldr	r2, .L179+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 159


1167:Veno-Echo.cpp ****                 {
 3027              		.loc 20 1167 17 view .LVU801
 3028 00b8 9FED447A 		vldr.32	s14, .L179+48
1167:Veno-Echo.cpp ****                 {
 3029              		.loc 20 1167 23 view .LVU802
 3030 00bc D2ED007A 		vldr.32	s15, [r2]
 3031 00c0 70EE677A 		vsub.f32	s15, s0, s15
 3032              	.LBB1187:
 3033              	.LBB1186:
 3034              		.loc 21 76 31 view .LVU803
 3035 00c4 F0EEE77A 		vabs.f32	s15, s15
 3036              	.LBE1186:
 3037              	.LBE1187:
1167:Veno-Echo.cpp ****                 {
 3038              		.loc 20 1167 17 view .LVU804
 3039 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 3040 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3041 00d0 ACDD     		ble	.L154
1169:Veno-Echo.cpp ****                 }
 3042              		.loc 20 1169 21 is_stmt 1 view .LVU805
1169:Veno-Echo.cpp ****                 }
 3043              		.loc 20 1169 38 is_stmt 0 view .LVU806
 3044 00d2 0122     		movs	r2, #1
 3045 00d4 1A70     		strb	r2, [r3]
 3046              	.L155:
1174:Veno-Echo.cpp ****         
 3047              		.loc 20 1174 9 is_stmt 1 view .LVU807
 3048              	.LVL132:
1176:Veno-Echo.cpp ****         {
 3049              		.loc 20 1176 9 view .LVU808
1178:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3050              		.loc 20 1178 13 view .LVU809
 3051              	.LBB1188:
 3052              	.LBI1188:
2013:Veno-Echo.cpp **** {
 3053              		.loc 20 2013 7 view .LVU810
 3054              	.LBB1189:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3055              		.loc 20 2015 5 view .LVU811
2016:Veno-Echo.cpp **** 
 3056              		.loc 20 2016 5 view .LVU812
 3057              	.LBE1189:
 3058              	.LBE1188:
1178:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3059              		.loc 20 1178 41 is_stmt 0 view .LVU813
 3060 00d6 364B     		ldr	r3, .L179+20
 3061              	.LBB1192:
 3062              	.LBB1190:
2016:Veno-Echo.cpp **** 
 3063              		.loc 20 2016 39 view .LVU814
 3064 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2016:Veno-Echo.cpp **** 
 3065              		.loc 20 2016 49 view .LVU815
 3066 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2016:Veno-Echo.cpp **** 
 3067              		.loc 20 2016 39 view .LVU816
 3068 00e0 D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 160


2016:Veno-Echo.cpp **** 
 3069              		.loc 20 2016 12 view .LVU817
 3070 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2016:Veno-Echo.cpp **** 
 3071              		.loc 20 2016 39 view .LVU818
 3072 00e8 77EE677A 		vsub.f32	s15, s14, s15
2016:Veno-Echo.cpp **** 
 3073              		.loc 20 2016 49 view .LVU819
 3074 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2016:Veno-Echo.cpp **** 
 3075              		.loc 20 2016 12 view .LVU820
 3076 00f0 B0EE406A 		vmov.f32	s12, s0
 3077 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2018:Veno-Echo.cpp ****     {
 3078              		.loc 20 2018 5 view .LVU821
 3079 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2016:Veno-Echo.cpp **** 
 3080              		.loc 20 2016 12 view .LVU822
 3081 00fc F0EE467A 		vmov.f32	s15, s12
 3082              	.LVL133:
2018:Veno-Echo.cpp ****     {
 3083              		.loc 20 2018 5 is_stmt 1 view .LVU823
 3084 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3085 0104 47D4     		bmi	.L178
2023:Veno-Echo.cpp ****     {
 3086              		.loc 20 2023 5 view .LVU824
2025:Veno-Echo.cpp ****     }
 3087              		.loc 20 2025 16 is_stmt 0 view .LVU825
 3088 0106 F4EE477A 		vcmp.f32	s15, s14
 3089 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3090 010e 77FE277A 		vselgt.f32	s15, s14, s15
 3091              	.L157:
 3092              	.LVL134:
2028:Veno-Echo.cpp **** }
 3093              		.loc 20 2028 5 is_stmt 1 view .LVU826
2028:Veno-Echo.cpp **** }
 3094              		.loc 20 2028 5 is_stmt 0 view .LVU827
 3095              	.LBE1190:
 3096              	.LBE1192:
1179:Veno-Echo.cpp ****         }
 3097              		.loc 20 1179 13 is_stmt 1 view .LVU828
1179:Veno-Echo.cpp ****         }
 3098              		.loc 20 1179 28 is_stmt 0 view .LVU829
 3099 0112 284B     		ldr	r3, .L179+24
 3100 0114 83ED000A 		vstr.32	s0, [r3]
 3101 0118 A6E7     		b	.L159
 3102              	.LVL135:
 3103              	.L162:
1179:Veno-Echo.cpp ****         }
 3104              		.loc 20 1179 28 view .LVU830
 3105              	.LBE1213:
 3106              	.LBB1214:
1204:Veno-Echo.cpp ****             {
 3107              		.loc 20 1204 13 is_stmt 1 view .LVU831
1204:Veno-Echo.cpp ****             {
 3108              		.loc 20 1204 16 is_stmt 0 view .LVU832
 3109 011a 2A4B     		ldr	r3, .L179+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 161


1204:Veno-Echo.cpp ****             {
 3110              		.loc 20 1204 13 view .LVU833
 3111 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3112 011e 7AB9     		cbnz	r2, .L164
1206:Veno-Echo.cpp ****                 {
 3113              		.loc 20 1206 17 is_stmt 1 view .LVU834
 3114              	.LVL136:
 3115              	.LBB1198:
 3116              	.LBI1198:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3117              		.loc 21 75 3 view .LVU835
 3118              	.LBB1199:
 3119              		.loc 21 76 5 view .LVU836
 3120              		.loc 21 76 5 is_stmt 0 view .LVU837
 3121              	.LBE1199:
 3122              	.LBE1198:
1206:Veno-Echo.cpp ****                 {
 3123              		.loc 20 1206 23 view .LVU838
 3124 0120 294A     		ldr	r2, .L179+44
1206:Veno-Echo.cpp ****                 {
 3125              		.loc 20 1206 17 view .LVU839
 3126 0122 9FED2A7A 		vldr.32	s14, .L179+48
1206:Veno-Echo.cpp ****                 {
 3127              		.loc 20 1206 23 view .LVU840
 3128 0126 D2ED007A 		vldr.32	s15, [r2]
 3129 012a 70EE677A 		vsub.f32	s15, s0, s15
 3130              	.LBB1201:
 3131              	.LBB1200:
 3132              		.loc 21 76 31 view .LVU841
 3133 012e F0EEE77A 		vabs.f32	s15, s15
 3134              	.LBE1200:
 3135              	.LBE1201:
1206:Veno-Echo.cpp ****                 {
 3136              		.loc 20 1206 17 view .LVU842
 3137 0132 F4EEC77A 		vcmpe.f32	s15, s14
 3138 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3139 013a B6DD     		ble	.L151
1208:Veno-Echo.cpp ****                 }
 3140              		.loc 20 1208 21 is_stmt 1 view .LVU843
1208:Veno-Echo.cpp ****                 }
 3141              		.loc 20 1208 37 is_stmt 0 view .LVU844
 3142 013c 0122     		movs	r2, #1
 3143 013e 1A70     		strb	r2, [r3]
 3144              	.L164:
1213:Veno-Echo.cpp ****         {
 3145              		.loc 20 1213 9 is_stmt 1 view .LVU845
 3146              	.LBB1202:
1215:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3147              		.loc 20 1215 13 view .LVU846
 3148              	.LVL137:
1216:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3149              		.loc 20 1216 13 view .LVU847
1216:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3150              		.loc 20 1216 29 is_stmt 0 view .LVU848
 3151 0140 9FED231A 		vldr.32	s2, .L179+52
 3152 0144 0120     		movs	r0, #1
 3153 0146 DFED230A 		vldr.32	s1, .L179+56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 162


 3154 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3155              	.LVL138:
1216:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3156              		.loc 20 1216 29 view .LVU849
 3157 014e B0EE408A 		vmov.f32	s16, s0
 3158              	.LVL139:
1217:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3159              		.loc 20 1217 13 is_stmt 1 view .LVU850
1217:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3160              		.loc 20 1217 26 is_stmt 0 view .LVU851
 3161 0152 2148     		ldr	r0, .L179+60
 3162 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3163              	.LVL140:
1218:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3164              		.loc 20 1218 13 is_stmt 1 view .LVU852
1218:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3165              		.loc 20 1218 26 is_stmt 0 view .LVU853
 3166 0158 2048     		ldr	r0, .L179+64
 3167 015a B0EE480A 		vmov.f32	s0, s16
 3168 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3169              	.LVL141:
1219:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3170              		.loc 20 1219 13 is_stmt 1 view .LVU854
1219:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3171              		.loc 20 1219 31 is_stmt 0 view .LVU855
 3172 0162 B0EE480A 		vmov.f32	s0, s16
 3173 0166 1E48     		ldr	r0, .L179+68
 3174 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3175              	.LVL142:
1220:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3176              		.loc 20 1220 13 is_stmt 1 view .LVU856
1220:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3177              		.loc 20 1220 31 is_stmt 0 view .LVU857
 3178 016c B0EE480A 		vmov.f32	s0, s16
 3179 0170 1C48     		ldr	r0, .L179+72
 3180 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3181              	.LVL143:
1221:Veno-Echo.cpp ****             save_flag = true;
 3182              		.loc 20 1221 13 is_stmt 1 view .LVU858
1221:Veno-Echo.cpp ****             save_flag = true;
 3183              		.loc 20 1221 35 is_stmt 0 view .LVU859
 3184 0176 1C49     		ldr	r1, .L179+76
 3185              	.LBB1203:
 3186              	.LBB1204:
 3187              	.LBB1205:
 3188              	.LBB1206:
 3189              	.LBB1207:
 3190              		.loc 22 397 18 view .LVU860
 3191 0178 1C4B     		ldr	r3, .L179+80
 3192 017a 0122     		movs	r2, #1
 3193              	.LBE1207:
 3194              	.LBE1206:
 3195              	.LBE1205:
 3196              	.LBE1204:
 3197              	.LBE1203:
1221:Veno-Echo.cpp ****             save_flag = true;
 3198              		.loc 20 1221 35 view .LVU861
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 163


 3199 017c 81ED058A 		vstr.32	s16, [r1, #20]
1222:Veno-Echo.cpp ****         }
 3200              		.loc 20 1222 13 is_stmt 1 view .LVU862
 3201              	.LVL144:
 3202              	.LBB1212:
 3203              	.LBI1203:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3204              		.loc 23 80 5 view .LVU863
 3205              	.LBB1211:
 3206              		.loc 23 81 7 view .LVU864
 3207              	.LBB1210:
 3208              	.LBI1205:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3209              		.loc 22 288 7 view .LVU865
 3210              	.LBB1209:
 3211              	.LBI1206:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3212              		.loc 22 390 7 view .LVU866
 3213              	.LBB1208:
 3214              		.loc 22 397 18 is_stmt 0 view .LVU867
 3215 0180 BFF35B8F 		dmb	ish
 3216 0184 1A70     		strb	r2, [r3]
 3217 0186 BFF35B8F 		dmb	ish
 3218              	.LVL145:
 3219              		.loc 22 397 18 view .LVU868
 3220              	.LBE1208:
 3221              	.LBE1209:
 3222              	.LBE1210:
 3223              	.LBE1211:
 3224              	.LBE1212:
 3225              	.LBE1202:
 3226              	.LBE1214:
 3227              	.LBE1219:
1225:Veno-Echo.cpp **** 
 3228              		.loc 20 1225 1 view .LVU869
 3229 018a BDEC028B 		vldm	sp!, {d8}
 3230              		.cfi_remember_state
 3231              		.cfi_restore 80
 3232              		.cfi_restore 81
 3233              		.cfi_def_cfa_offset 8
 3234              	.LVL146:
1225:Veno-Echo.cpp **** 
 3235              		.loc 20 1225 1 view .LVU870
 3236 018e 10BD     		pop	{r4, pc}
 3237              	.LVL147:
 3238              	.L177:
 3239              		.cfi_restore_state
 3240              	.LBB1220:
 3241              	.LBB1215:
 3242              	.LBB1193:
 3243              	.LBB1177:
2020:Veno-Echo.cpp ****     }
 3244              		.loc 20 2020 16 view .LVU871
 3245 0190 DFED097A 		vldr.32	s15, .L179+28
 3246              	.LVL148:
2020:Veno-Echo.cpp ****     }
 3247              		.loc 20 2020 16 view .LVU872
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 164


 3248 0194 68E7     		b	.L159
 3249              	.LVL149:
 3250              	.L178:
2020:Veno-Echo.cpp ****     }
 3251              		.loc 20 2020 16 view .LVU873
 3252              	.LBE1177:
 3253              	.LBE1193:
 3254              	.LBB1194:
 3255              	.LBB1191:
 3256 0196 DFED087A 		vldr.32	s15, .L179+28
 3257 019a BAE7     		b	.L157
 3258              	.L180:
 3259              		.align	2
 3260              	.L179:
 3261 019c 18000000 		.word	.LANCHOR4+24
 3262 01a0 00000000 		.word	.LANCHOR7
 3263 01a4 00000000 		.word	.LANCHOR40
 3264 01a8 00000000 		.word	.LANCHOR41
 3265 01ac 00000000 		.word	.LANCHOR42
 3266 01b0 00000000 		.word	.LANCHOR39
 3267 01b4 00000000 		.word	.LANCHOR43
 3268 01b8 00000000 		.word	0
 3269 01bc 00000000 		.word	.LANCHOR44
 3270 01c0 6F12033D 		.word	1023611503
 3271 01c4 00000000 		.word	.LANCHOR45
 3272 01c8 00000000 		.word	.LANCHOR46
 3273 01cc 0AD7A33B 		.word	1000593162
 3274 01d0 00803B46 		.word	1178304512
 3275 01d4 0080BB44 		.word	1153138688
 3276 01d8 00000000 		.word	.LANCHOR47
 3277 01dc 00000000 		.word	.LANCHOR48
 3278 01e0 00000000 		.word	.LANCHOR49
 3279 01e4 00000000 		.word	.LANCHOR50
 3280 01e8 00000000 		.word	.LANCHOR15
 3281 01ec 00000000 		.word	.LANCHOR16
 3282              	.LBE1191:
 3283              	.LBE1194:
 3284              	.LBE1215:
 3285              	.LBE1220:
 3286              		.cfi_endproc
 3287              	.LFE4319:
 3289              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3290              		.align	1
 3291              		.p2align 2,,3
 3292              		.global	_Z16Update_drywet_CVv
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3296              		.fpu fpv5-d16
 3298              	_Z16Update_drywet_CVv:
 3299              	.LFB4320:
1228:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3300              		.loc 20 1228 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1229:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 165


 3304              		.loc 20 1229 5 view .LVU875
1228:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3305              		.loc 20 1228 1 is_stmt 0 view .LVU876
 3306 0000 08B5     		push	{r3, lr}
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 3, -8
 3309              		.cfi_offset 14, -4
1229:Veno-Echo.cpp **** }
 3310              		.loc 20 1229 32 view .LVU877
 3311 0002 0421     		movs	r1, #4
 3312 0004 0348     		ldr	r0, .L183
 3313 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3314              	.LVL150:
1229:Veno-Echo.cpp **** }
 3315              		.loc 20 1229 15 view .LVU878
 3316 000a 034B     		ldr	r3, .L183+4
 3317 000c 83ED000A 		vstr.32	s0, [r3]
1230:Veno-Echo.cpp **** 
 3318              		.loc 20 1230 1 view .LVU879
 3319 0010 08BD     		pop	{r3, pc}
 3320              	.L184:
 3321 0012 00BF     		.align	2
 3322              	.L183:
 3323 0014 18000000 		.word	.LANCHOR4+24
 3324 0018 00000000 		.word	.LANCHOR51
 3325              		.cfi_endproc
 3326              	.LFE4320:
 3328              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 2,,3
 3331              		.global	_Z13Update_drywetv
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu fpv5-d16
 3337              	_Z13Update_drywetv:
 3338              	.LFB4321:
1233:Veno-Echo.cpp ****     static bool lastShift{};
 3339              		.loc 20 1233 1 is_stmt 1 view -0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
1234:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3343              		.loc 20 1234 5 view .LVU881
1235:Veno-Echo.cpp ****     static bool Res_pickup{};
 3344              		.loc 20 1235 5 view .LVU882
1236:Veno-Echo.cpp **** 
 3345              		.loc 20 1236 5 view .LVU883
1238:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3346              		.loc 20 1238 5 view .LVU884
1243:Veno-Echo.cpp **** 
 3347              		.loc 20 1243 5 view .LVU885
1243:Veno-Echo.cpp **** 
 3348              		.loc 20 1243 40 is_stmt 0 view .LVU886
 3349 0000 0522     		movs	r2, #5
 3350 0002 0721     		movs	r1, #7
 3351 0004 8248     		ldr	r0, .L218+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 166


1233:Veno-Echo.cpp ****     static bool lastShift{};
 3352              		.loc 20 1233 1 view .LVU887
 3353 0006 10B5     		push	{r4, lr}
 3354              		.cfi_def_cfa_offset 8
 3355              		.cfi_offset 4, -8
 3356              		.cfi_offset 14, -4
 3357 0008 2DED028B 		vpush.64	{d8}
 3358              		.cfi_def_cfa_offset 16
 3359              		.cfi_offset 80, -16
 3360              		.cfi_offset 81, -12
1243:Veno-Echo.cpp **** 
 3361              		.loc 20 1243 40 view .LVU888
 3362 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3363              	.LVL151:
 3364              	.LBB1221:
1245:Veno-Echo.cpp ****     {   
 3365              		.loc 20 1245 9 view .LVU889
 3366 0010 804B     		ldr	r3, .L218+28
 3367              	.LVL152:
1245:Veno-Echo.cpp ****     {   
 3368              		.loc 20 1245 9 view .LVU890
 3369              	.LBE1221:
1245:Veno-Echo.cpp ****     {   
 3370              		.loc 20 1245 5 is_stmt 1 view .LVU891
 3371              	.LBB1264:
 3372              	.LBB1222:
1250:Veno-Echo.cpp ****         {
 3373              		.loc 20 1250 19 is_stmt 0 view .LVU892
 3374 0012 814A     		ldr	r2, .L218+32
 3375              	.LBE1222:
1245:Veno-Echo.cpp ****     {   
 3376              		.loc 20 1245 5 view .LVU893
 3377 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3378 0016 B3BB     		cbnz	r3, .L186
 3379              	.LBB1243:
1248:Veno-Echo.cpp **** 
 3380              		.loc 20 1248 9 is_stmt 1 view .LVU894
1250:Veno-Echo.cpp ****         {
 3381              		.loc 20 1250 9 view .LVU895
 3382 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3383 001a 0029     		cmp	r1, #0
 3384 001c 40D0     		beq	.L187
1252:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3385              		.loc 20 1252 13 view .LVU896
1254:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3386              		.loc 20 1254 27 is_stmt 0 view .LVU897
 3387 001e 7F48     		ldr	r0, .L218+36
1255:Veno-Echo.cpp ****         } 
 3388              		.loc 20 1255 24 view .LVU898
 3389 0020 7F49     		ldr	r1, .L218+40
1252:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3390              		.loc 20 1252 23 view .LVU899
 3391 0022 1370     		strb	r3, [r2]
1254:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3392              		.loc 20 1254 13 is_stmt 1 view .LVU900
1254:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3393              		.loc 20 1254 27 is_stmt 0 view .LVU901
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 167


 3394 0024 0370     		strb	r3, [r0]
1255:Veno-Echo.cpp ****         } 
 3395              		.loc 20 1255 13 is_stmt 1 view .LVU902
1255:Veno-Echo.cpp ****         } 
 3396              		.loc 20 1255 24 is_stmt 0 view .LVU903
 3397 0026 81ED000A 		vstr.32	s0, [r1]
 3398              	.L188:
1271:Veno-Echo.cpp **** 
 3399              		.loc 20 1271 9 is_stmt 1 view .LVU904
 3400              	.LVL153:
1273:Veno-Echo.cpp ****         {
 3401              		.loc 20 1273 9 view .LVU905
1281:Veno-Echo.cpp ****         }
 3402              		.loc 20 1281 13 view .LVU906
 3403              	.LBB1223:
 3404              	.LBI1223:
2013:Veno-Echo.cpp **** {
 3405              		.loc 20 2013 7 view .LVU907
 3406              	.LBB1224:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3407              		.loc 20 2015 5 view .LVU908
2016:Veno-Echo.cpp **** 
 3408              		.loc 20 2016 5 view .LVU909
 3409              	.LBE1224:
 3410              	.LBE1223:
1281:Veno-Echo.cpp ****         }
 3411              		.loc 20 1281 37 is_stmt 0 view .LVU910
 3412 002a 7E4A     		ldr	r2, .L218+44
 3413              	.LBB1227:
 3414              	.LBB1225:
2016:Veno-Echo.cpp **** 
 3415              		.loc 20 2016 39 view .LVU911
 3416 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2016:Veno-Echo.cpp **** 
 3417              		.loc 20 2016 49 view .LVU912
 3418 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3419              	.LBE1225:
 3420              	.LBE1227:
1281:Veno-Echo.cpp ****         }
 3421              		.loc 20 1281 37 view .LVU913
 3422 0034 7C4B     		ldr	r3, .L218+48
 3423              	.LBB1228:
 3424              	.LBB1226:
2016:Veno-Echo.cpp **** 
 3425              		.loc 20 2016 39 view .LVU914
 3426 0036 92ED007A 		vldr.32	s14, [r2]
2016:Veno-Echo.cpp **** 
 3427              		.loc 20 2016 12 view .LVU915
 3428 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3429 003e D3ED007A 		vldr.32	s15, [r3]
2016:Veno-Echo.cpp **** 
 3430              		.loc 20 2016 39 view .LVU916
 3431 0042 36EEC77A 		vsub.f32	s14, s13, s14
2016:Veno-Echo.cpp **** 
 3432              		.loc 20 2016 49 view .LVU917
 3433 0046 37EE657A 		vsub.f32	s14, s14, s11
2016:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 168


 3434              		.loc 20 2016 12 view .LVU918
 3435 004a E7EE067A 		vfma.f32	s15, s14, s12
 3436              	.LVL154:
2018:Veno-Echo.cpp ****     {
 3437              		.loc 20 2018 5 is_stmt 1 view .LVU919
 3438 004e F5EEC07A 		vcmpe.f32	s15, #0
 3439 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3440 0056 00F1C180 		bmi	.L205
2023:Veno-Echo.cpp ****     {
 3441              		.loc 20 2023 5 view .LVU920
 3442 005a F4EEE67A 		vcmpe.f32	s15, s13
 3443 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3444 0062 40F3C680 		ble	.L211
 3445              	.LVL155:
 3446              	.L196:
2023:Veno-Echo.cpp ****     {
 3447              		.loc 20 2023 5 is_stmt 0 view .LVU921
 3448              	.LBE1226:
 3449              	.LBE1228:
1288:Veno-Echo.cpp ****         }
 3450              		.loc 20 1288 26 view .LVU922
 3451 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3452              	.LVL156:
 3453              	.L195:
1300:Veno-Echo.cpp ****     }
 3454              		.loc 20 1300 9 is_stmt 1 view .LVU923
 3455              	.LBB1229:
 3456              	.LBI1229:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3457              		.loc 25 135 13 view .LVU924
 3458              	.LBB1230:
 3459              		.loc 25 137 5 view .LVU925
 3460              		.loc 25 137 9 is_stmt 0 view .LVU926
 3461 006a 704B     		ldr	r3, .L218+52
 3462 006c 9FED707A 		vldr.32	s14, .L218+56
 3463 0070 D3ED007A 		vldr.32	s15, [r3]
 3464              		.loc 25 137 24 view .LVU927
 3465 0074 30EE670A 		vsub.f32	s0, s0, s15
 3466              	.LVL157:
 3467              		.loc 25 137 24 view .LVU928
 3468              	.LBE1230:
 3469              	.LBE1229:
 3470              	.LBE1243:
 3471              	.LBE1264:
1340:Veno-Echo.cpp **** 
 3472              		.loc 20 1340 1 view .LVU929
 3473 0078 BDEC028B 		vldm	sp!, {d8}
 3474              		.cfi_remember_state
 3475              		.cfi_restore 80
 3476              		.cfi_restore 81
 3477              		.cfi_def_cfa_offset 8
 3478              	.LBB1265:
 3479              	.LBB1244:
 3480              	.LBB1232:
 3481              	.LBB1231:
 3482              		.loc 25 137 9 view .LVU930
 3483 007c E0EE077A 		vfma.f32	s15, s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 169


 3484 0080 C3ED007A 		vstr.32	s15, [r3]
 3485              	.LBE1231:
 3486              	.LBE1232:
 3487              	.LBE1244:
 3488              	.LBE1265:
1340:Veno-Echo.cpp **** 
 3489              		.loc 20 1340 1 view .LVU931
 3490 0084 10BD     		pop	{r4, pc}
 3491              	.LVL158:
 3492              	.L186:
 3493              		.cfi_restore_state
 3494              	.LBB1266:
 3495              	.LBB1245:
1304:Veno-Echo.cpp **** 
 3496              		.loc 20 1304 9 is_stmt 1 view .LVU932
1306:Veno-Echo.cpp ****         {
 3497              		.loc 20 1306 9 view .LVU933
 3498 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3499 0088 002B     		cmp	r3, #0
 3500 008a 58D1     		bne	.L200
1308:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3501              		.loc 20 1308 13 view .LVU934
1308:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3502              		.loc 20 1308 23 is_stmt 0 view .LVU935
 3503 008c 0124     		movs	r4, #1
1309:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3504              		.loc 20 1309 24 view .LVU936
 3505 008e 6948     		ldr	r0, .L218+60
1310:Veno-Echo.cpp ****         }
 3506              		.loc 20 1310 21 view .LVU937
 3507 0090 6949     		ldr	r1, .L218+64
1308:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3508              		.loc 20 1308 23 view .LVU938
 3509 0092 1470     		strb	r4, [r2]
1309:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3510              		.loc 20 1309 13 is_stmt 1 view .LVU939
1309:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3511              		.loc 20 1309 24 is_stmt 0 view .LVU940
 3512 0094 0370     		strb	r3, [r0]
1310:Veno-Echo.cpp ****         }
 3513              		.loc 20 1310 13 is_stmt 1 view .LVU941
1310:Veno-Echo.cpp ****         }
 3514              		.loc 20 1310 21 is_stmt 0 view .LVU942
 3515 0096 81ED000A 		vstr.32	s0, [r1]
 3516              	.L185:
1310:Veno-Echo.cpp ****         }
 3517              		.loc 20 1310 21 view .LVU943
 3518              	.LBE1245:
 3519              	.LBE1266:
1340:Veno-Echo.cpp **** 
 3520              		.loc 20 1340 1 view .LVU944
 3521 009a BDEC028B 		vldm	sp!, {d8}
 3522              		.cfi_remember_state
 3523              		.cfi_restore 80
 3524              		.cfi_restore 81
 3525              		.cfi_def_cfa_offset 8
 3526 009e 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 170


 3527              	.L187:
 3528              		.cfi_restore_state
 3529              	.LBB1267:
 3530              	.LBB1261:
1260:Veno-Echo.cpp ****             {
 3531              		.loc 20 1260 13 is_stmt 1 view .LVU945
1260:Veno-Echo.cpp ****             {
 3532              		.loc 20 1260 16 is_stmt 0 view .LVU946
 3533 00a0 5E4B     		ldr	r3, .L218+36
1260:Veno-Echo.cpp ****             {
 3534              		.loc 20 1260 13 view .LVU947
 3535 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 00a4 7AB9     		cbnz	r2, .L189
1263:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1263 17 is_stmt 1 view .LVU948
 3538              	.LVL159:
 3539              	.LBB1233:
 3540              	.LBI1233:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3541              		.loc 21 75 3 view .LVU949
 3542              	.LBB1234:
 3543              		.loc 21 76 5 view .LVU950
 3544              		.loc 21 76 5 is_stmt 0 view .LVU951
 3545              	.LBE1234:
 3546              	.LBE1233:
1263:Veno-Echo.cpp ****                 {
 3547              		.loc 20 1263 23 view .LVU952
 3548 00a6 5E4A     		ldr	r2, .L218+40
1263:Veno-Echo.cpp ****                 {
 3549              		.loc 20 1263 17 view .LVU953
 3550 00a8 9FED647A 		vldr.32	s14, .L218+68
1263:Veno-Echo.cpp ****                 {
 3551              		.loc 20 1263 23 view .LVU954
 3552 00ac D2ED007A 		vldr.32	s15, [r2]
 3553 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3554              	.LBB1236:
 3555              	.LBB1235:
 3556              		.loc 21 76 31 view .LVU955
 3557 00b4 F0EEE77A 		vabs.f32	s15, s15
 3558              	.LBE1235:
 3559              	.LBE1236:
1263:Veno-Echo.cpp ****                 {
 3560              		.loc 20 1263 17 view .LVU956
 3561 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3562 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3563 00c0 B3DD     		ble	.L188
1265:Veno-Echo.cpp ****                 }
 3564              		.loc 20 1265 21 is_stmt 1 view .LVU957
1265:Veno-Echo.cpp ****                 }
 3565              		.loc 20 1265 35 is_stmt 0 view .LVU958
 3566 00c2 0122     		movs	r2, #1
 3567 00c4 1A70     		strb	r2, [r3]
 3568              	.L189:
1271:Veno-Echo.cpp **** 
 3569              		.loc 20 1271 9 is_stmt 1 view .LVU959
 3570              	.LVL160:
1273:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 171


 3571              		.loc 20 1273 9 view .LVU960
1275:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3572              		.loc 20 1275 13 view .LVU961
 3573              	.LBB1237:
 3574              	.LBI1237:
2013:Veno-Echo.cpp **** {
 3575              		.loc 20 2013 7 view .LVU962
 3576              	.LBB1238:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3577              		.loc 20 2015 5 view .LVU963
2016:Veno-Echo.cpp **** 
 3578              		.loc 20 2016 5 view .LVU964
 3579              	.LBE1238:
 3580              	.LBE1237:
1275:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3581              		.loc 20 1275 37 is_stmt 0 view .LVU965
 3582 00c6 574B     		ldr	r3, .L218+44
 3583              	.LBB1241:
 3584              	.LBB1239:
2016:Veno-Echo.cpp **** 
 3585              		.loc 20 2016 39 view .LVU966
 3586 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2016:Veno-Echo.cpp **** 
 3587              		.loc 20 2016 49 view .LVU967
 3588 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2016:Veno-Echo.cpp **** 
 3589              		.loc 20 2016 39 view .LVU968
 3590 00d0 D3ED007A 		vldr.32	s15, [r3]
2016:Veno-Echo.cpp **** 
 3591              		.loc 20 2016 12 view .LVU969
 3592 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2016:Veno-Echo.cpp **** 
 3593              		.loc 20 2016 39 view .LVU970
 3594 00d8 77EE677A 		vsub.f32	s15, s14, s15
2016:Veno-Echo.cpp **** 
 3595              		.loc 20 2016 49 view .LVU971
 3596 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2016:Veno-Echo.cpp **** 
 3597              		.loc 20 2016 12 view .LVU972
 3598 00e0 B0EE406A 		vmov.f32	s12, s0
 3599 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2018:Veno-Echo.cpp ****     {
 3600              		.loc 20 2018 5 view .LVU973
 3601 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2016:Veno-Echo.cpp **** 
 3602              		.loc 20 2016 12 view .LVU974
 3603 00ec F0EE467A 		vmov.f32	s15, s12
 3604              	.LVL161:
2018:Veno-Echo.cpp ****     {
 3605              		.loc 20 2018 5 is_stmt 1 view .LVU975
 3606 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3607 00f4 75D4     		bmi	.L216
2023:Veno-Echo.cpp ****     {
 3608              		.loc 20 2023 5 view .LVU976
 3609 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3610 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3611 00fe 75DD     		ble	.L217
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 172


2025:Veno-Echo.cpp ****     }
 3612              		.loc 20 2025 16 is_stmt 0 view .LVU977
 3613 0100 F0EE477A 		vmov.f32	s15, s14
 3614 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3615              	.LVL162:
 3616              	.L191:
2028:Veno-Echo.cpp **** }
 3617              		.loc 20 2028 5 is_stmt 1 view .LVU978
2028:Veno-Echo.cpp **** }
 3618              		.loc 20 2028 5 is_stmt 0 view .LVU979
 3619              	.LBE1239:
 3620              	.LBE1241:
1276:Veno-Echo.cpp ****         }
 3621              		.loc 20 1276 13 is_stmt 1 view .LVU980
1276:Veno-Echo.cpp ****         }
 3622              		.loc 20 1276 25 is_stmt 0 view .LVU981
 3623 0108 474B     		ldr	r3, .L218+48
 3624 010a 83ED000A 		vstr.32	s0, [r3]
 3625              	.LVL163:
 3626              	.L192:
1284:Veno-Echo.cpp **** 
 3627              		.loc 20 1284 9 is_stmt 1 view .LVU982
1286:Veno-Echo.cpp ****         {
 3628              		.loc 20 1286 9 view .LVU983
 3629 010e 9FED3A5B 		vldr.64	d5, .L218
 3630 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3631 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3632 011a A4DA     		bge	.L196
1290:Veno-Echo.cpp ****         {
 3633              		.loc 20 1290 14 view .LVU984
 3634 011c 9FED385B 		vldr.64	d5, .L218+8
 3635 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3636 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3637 0128 58D9     		bls	.L205
1296:Veno-Echo.cpp ****         }
 3638              		.loc 20 1296 13 view .LVU985
1296:Veno-Echo.cpp ****         }
 3639              		.loc 20 1296 33 is_stmt 0 view .LVU986
 3640 012a B0EE670A 		vmov.f32	s0, s15
 3641              	.LVL164:
1296:Veno-Echo.cpp ****         }
 3642              		.loc 20 1296 33 view .LVU987
 3643 012e 0020     		movs	r0, #0
 3644 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3645 0134 DFED420A 		vldr.32	s1, .L218+72
 3646 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3647              	.LVL165:
1296:Veno-Echo.cpp ****         }
 3648              		.loc 20 1296 33 view .LVU988
 3649 013c 95E7     		b	.L195
 3650              	.LVL166:
 3651              	.L200:
1296:Veno-Echo.cpp ****         }
 3652              		.loc 20 1296 33 view .LVU989
 3653              	.LBE1261:
 3654              	.LBB1262:
1315:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 173


 3655              		.loc 20 1315 13 is_stmt 1 view .LVU990
1315:Veno-Echo.cpp ****             {
 3656              		.loc 20 1315 16 is_stmt 0 view .LVU991
 3657 013e 3D4B     		ldr	r3, .L218+60
1315:Veno-Echo.cpp ****             {
 3658              		.loc 20 1315 13 view .LVU992
 3659 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3660 0142 7AB9     		cbnz	r2, .L202
1317:Veno-Echo.cpp ****                 {
 3661              		.loc 20 1317 17 is_stmt 1 view .LVU993
 3662              	.LVL167:
 3663              	.LBB1246:
 3664              	.LBI1246:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3665              		.loc 21 75 3 view .LVU994
 3666              	.LBB1247:
 3667              		.loc 21 76 5 view .LVU995
 3668              		.loc 21 76 5 is_stmt 0 view .LVU996
 3669              	.LBE1247:
 3670              	.LBE1246:
1317:Veno-Echo.cpp ****                 {
 3671              		.loc 20 1317 23 view .LVU997
 3672 0144 3C4A     		ldr	r2, .L218+64
1317:Veno-Echo.cpp ****                 {
 3673              		.loc 20 1317 17 view .LVU998
 3674 0146 9FED3D7A 		vldr.32	s14, .L218+68
1317:Veno-Echo.cpp ****                 {
 3675              		.loc 20 1317 23 view .LVU999
 3676 014a D2ED007A 		vldr.32	s15, [r2]
 3677 014e 70EE677A 		vsub.f32	s15, s0, s15
 3678              	.LBB1249:
 3679              	.LBB1248:
 3680              		.loc 21 76 31 view .LVU1000
 3681 0152 F0EEE77A 		vabs.f32	s15, s15
 3682              	.LBE1248:
 3683              	.LBE1249:
1317:Veno-Echo.cpp ****                 {
 3684              		.loc 20 1317 17 view .LVU1001
 3685 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3686 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3687 015e 9CDD     		ble	.L185
1319:Veno-Echo.cpp ****                 }
 3688              		.loc 20 1319 21 is_stmt 1 view .LVU1002
1319:Veno-Echo.cpp ****                 }
 3689              		.loc 20 1319 32 is_stmt 0 view .LVU1003
 3690 0160 0122     		movs	r2, #1
 3691 0162 1A70     		strb	r2, [r3]
 3692              	.L202:
1324:Veno-Echo.cpp ****         {
 3693              		.loc 20 1324 9 is_stmt 1 view .LVU1004
 3694              	.LBB1250:
1326:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3695              		.loc 20 1326 13 view .LVU1005
 3696              	.LVL168:
1327:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3697              		.loc 20 1327 13 view .LVU1006
1327:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 174


 3698              		.loc 20 1327 24 is_stmt 0 view .LVU1007
 3699 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3700 0168 DFED350A 		vldr.32	s1, .L218+72
 3701 016c 0020     		movs	r0, #0
 3702 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3703              	.LVL169:
1327:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3704              		.loc 20 1327 24 view .LVU1008
 3705 0172 B0EE408A 		vmov.f32	s16, s0
 3706              	.LVL170:
1328:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3707              		.loc 20 1328 13 is_stmt 1 view .LVU1009
1328:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3708              		.loc 20 1328 25 is_stmt 0 view .LVU1010
 3709 0176 3348     		ldr	r0, .L218+76
 3710 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3711              	.LVL171:
1329:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3712              		.loc 20 1329 13 is_stmt 1 view .LVU1011
1329:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3713              		.loc 20 1329 25 is_stmt 0 view .LVU1012
 3714 017c 3248     		ldr	r0, .L218+80
 3715 017e B0EE480A 		vmov.f32	s0, s16
 3716 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3717              	.LVL172:
1330:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3718              		.loc 20 1330 13 is_stmt 1 view .LVU1013
1330:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3719              		.loc 20 1330 25 is_stmt 0 view .LVU1014
 3720 0186 B0EE480A 		vmov.f32	s0, s16
 3721 018a 3048     		ldr	r0, .L218+84
 3722 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3723              	.LVL173:
1331:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3724              		.loc 20 1331 13 is_stmt 1 view .LVU1015
1331:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3725              		.loc 20 1331 25 is_stmt 0 view .LVU1016
 3726 0190 B0EE480A 		vmov.f32	s0, s16
 3727 0194 2E48     		ldr	r0, .L218+88
 3728 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3729              	.LVL174:
1332:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3730              		.loc 20 1332 13 is_stmt 1 view .LVU1017
1332:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3731              		.loc 20 1332 30 is_stmt 0 view .LVU1018
 3732 019a B0EE480A 		vmov.f32	s0, s16
 3733 019e 2D48     		ldr	r0, .L218+92
 3734 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3735              	.LVL175:
1333:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3736              		.loc 20 1333 13 is_stmt 1 view .LVU1019
1333:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3737              		.loc 20 1333 30 is_stmt 0 view .LVU1020
 3738 01a4 B0EE480A 		vmov.f32	s0, s16
 3739 01a8 2B48     		ldr	r0, .L218+96
 3740 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3741              	.LVL176:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 175


1334:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3742              		.loc 20 1334 13 is_stmt 1 view .LVU1021
1334:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3743              		.loc 20 1334 30 is_stmt 0 view .LVU1022
 3744 01ae B0EE480A 		vmov.f32	s0, s16
 3745 01b2 2A48     		ldr	r0, .L218+100
 3746 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3747              	.LVL177:
1335:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3748              		.loc 20 1335 13 is_stmt 1 view .LVU1023
1335:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3749              		.loc 20 1335 30 is_stmt 0 view .LVU1024
 3750 01b8 B0EE480A 		vmov.f32	s0, s16
 3751 01bc 2848     		ldr	r0, .L218+104
 3752 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3753              	.LVL178:
1336:Veno-Echo.cpp ****             save_flag = true;
 3754              		.loc 20 1336 13 is_stmt 1 view .LVU1025
1336:Veno-Echo.cpp ****             save_flag = true;
 3755              		.loc 20 1336 35 is_stmt 0 view .LVU1026
 3756 01c2 2849     		ldr	r1, .L218+108
 3757              	.LBB1251:
 3758              	.LBB1252:
 3759              	.LBB1253:
 3760              	.LBB1254:
 3761              	.LBB1255:
 3762              		.loc 22 397 18 view .LVU1027
 3763 01c4 284B     		ldr	r3, .L218+112
 3764 01c6 0122     		movs	r2, #1
 3765              	.LBE1255:
 3766              	.LBE1254:
 3767              	.LBE1253:
 3768              	.LBE1252:
 3769              	.LBE1251:
1336:Veno-Echo.cpp ****             save_flag = true;
 3770              		.loc 20 1336 35 view .LVU1028
 3771 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1337:Veno-Echo.cpp ****         }
 3772              		.loc 20 1337 13 is_stmt 1 view .LVU1029
 3773              	.LVL179:
 3774              	.LBB1260:
 3775              	.LBI1251:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3776              		.loc 23 80 5 view .LVU1030
 3777              	.LBB1259:
 3778              		.loc 23 81 7 view .LVU1031
 3779              	.LBB1258:
 3780              	.LBI1253:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3781              		.loc 22 288 7 view .LVU1032
 3782              	.LBB1257:
 3783              	.LBI1254:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3784              		.loc 22 390 7 view .LVU1033
 3785              	.LBB1256:
 3786              		.loc 22 397 18 is_stmt 0 view .LVU1034
 3787 01cc BFF35B8F 		dmb	ish
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 176


 3788 01d0 1A70     		strb	r2, [r3]
 3789 01d2 BFF35B8F 		dmb	ish
 3790              	.LVL180:
 3791              		.loc 22 397 18 view .LVU1035
 3792              	.LBE1256:
 3793              	.LBE1257:
 3794              	.LBE1258:
 3795              	.LBE1259:
 3796              	.LBE1260:
 3797              	.LBE1250:
 3798              	.LBE1262:
 3799              	.LBE1267:
1340:Veno-Echo.cpp **** 
 3800              		.loc 20 1340 1 view .LVU1036
 3801 01d6 BDEC028B 		vldm	sp!, {d8}
 3802              		.cfi_remember_state
 3803              		.cfi_restore 80
 3804              		.cfi_restore 81
 3805              		.cfi_def_cfa_offset 8
 3806              	.LVL181:
1340:Veno-Echo.cpp **** 
 3807              		.loc 20 1340 1 view .LVU1037
 3808 01da 10BD     		pop	{r4, pc}
 3809              	.LVL182:
 3810              	.L205:
 3811              		.cfi_restore_state
 3812              	.LBB1268:
 3813              	.LBB1263:
1292:Veno-Echo.cpp ****         }
 3814              		.loc 20 1292 26 view .LVU1038
 3815 01dc 9FED180A 		vldr.32	s0, .L218+72
 3816              	.LVL183:
1292:Veno-Echo.cpp ****         }
 3817              		.loc 20 1292 26 view .LVU1039
 3818 01e0 43E7     		b	.L195
 3819              	.LVL184:
 3820              	.L216:
 3821              	.LBB1242:
 3822              	.LBB1240:
1292:Veno-Echo.cpp ****         }
 3823              		.loc 20 1292 26 view .LVU1040
 3824 01e2 9FED096B 		vldr.64	d6, .L218+16
 3825              	.LVL185:
2020:Veno-Echo.cpp ****     }
 3826              		.loc 20 2020 16 view .LVU1041
 3827 01e6 DFED167A 		vldr.32	s15, .L218+72
 3828              	.LVL186:
2020:Veno-Echo.cpp ****     }
 3829              		.loc 20 2020 16 view .LVU1042
 3830 01ea 8DE7     		b	.L191
 3831              	.LVL187:
 3832              	.L217:
2020:Veno-Echo.cpp ****     }
 3833              		.loc 20 2020 16 view .LVU1043
 3834 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3835              	.LVL188:
2020:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 177


 3836              		.loc 20 2020 16 view .LVU1044
 3837 01f0 8AE7     		b	.L191
 3838              	.LVL189:
 3839              	.L211:
2020:Veno-Echo.cpp ****     }
 3840              		.loc 20 2020 16 view .LVU1045
 3841 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
 3842 01f6 8AE7     		b	.L192
 3843              	.L219:
 3844              		.align	3
 3845              	.L218:
 3846 01f8 5C8FC2F5 		.word	4123168604
 3847 01fc 285CEF3F 		.word	1072651304
 3848 0200 7B14AE47 		.word	1202590843
 3849 0204 E17A943F 		.word	1066695393
 3850 0208 00000000 		.word	0
 3851 020c 00000000 		.word	0
 3852 0210 18000000 		.word	.LANCHOR4+24
 3853 0214 00000000 		.word	.LANCHOR7
 3854 0218 00000000 		.word	.LANCHOR52
 3855 021c 00000000 		.word	.LANCHOR53
 3856 0220 00000000 		.word	.LANCHOR54
 3857 0224 00000000 		.word	.LANCHOR51
 3858 0228 00000000 		.word	.LANCHOR55
 3859 022c 00000000 		.word	.LANCHOR56
 3860 0230 6F12833C 		.word	1015222895
 3861 0234 00000000 		.word	.LANCHOR57
 3862 0238 00000000 		.word	.LANCHOR58
 3863 023c 0AD7A33B 		.word	1000593162
 3864 0240 00000000 		.word	0
 3865 0244 00000000 		.word	.LANCHOR47
 3866 0248 00000000 		.word	.LANCHOR48
 3867 024c 00000000 		.word	.LANCHOR35
 3868 0250 00000000 		.word	.LANCHOR36
 3869 0254 00000000 		.word	.LANCHOR49
 3870 0258 00000000 		.word	.LANCHOR50
 3871 025c 00000000 		.word	.LANCHOR37
 3872 0260 00000000 		.word	.LANCHOR38
 3873 0264 00000000 		.word	.LANCHOR15
 3874 0268 00000000 		.word	.LANCHOR16
 3875              	.LBE1240:
 3876              	.LBE1242:
 3877              	.LBE1263:
 3878              	.LBE1268:
 3879              		.cfi_endproc
 3880              	.LFE4321:
 3882              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3883              		.align	1
 3884              		.p2align 2,,3
 3885              		.global	_Z15Update_width_CVv
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv5-d16
 3891              	_Z15Update_width_CVv:
 3892              	.LFB4322:
1343:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 178


 3893              		.loc 20 1343 1 is_stmt 1 view -0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
1344:Veno-Echo.cpp **** }
 3897              		.loc 20 1344 5 view .LVU1047
1343:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3898              		.loc 20 1343 1 is_stmt 0 view .LVU1048
 3899 0000 08B5     		push	{r3, lr}
 3900              		.cfi_def_cfa_offset 8
 3901              		.cfi_offset 3, -8
 3902              		.cfi_offset 14, -4
1344:Veno-Echo.cpp **** }
 3903              		.loc 20 1344 30 view .LVU1049
 3904 0002 0521     		movs	r1, #5
 3905 0004 0348     		ldr	r0, .L222
 3906 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3907              	.LVL190:
1344:Veno-Echo.cpp **** }
 3908              		.loc 20 1344 13 view .LVU1050
 3909 000a 034B     		ldr	r3, .L222+4
 3910 000c 83ED000A 		vstr.32	s0, [r3]
1345:Veno-Echo.cpp **** 
 3911              		.loc 20 1345 1 view .LVU1051
 3912 0010 08BD     		pop	{r3, pc}
 3913              	.L223:
 3914 0012 00BF     		.align	2
 3915              	.L222:
 3916 0014 18000000 		.word	.LANCHOR4+24
 3917 0018 00000000 		.word	.LANCHOR59
 3918              		.cfi_endproc
 3919              	.LFE4322:
 3921              		.section	.text._Z12Update_widthv,"ax",%progbits
 3922              		.align	1
 3923              		.p2align 2,,3
 3924              		.global	_Z12Update_widthv
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv5-d16
 3930              	_Z12Update_widthv:
 3931              	.LFB4323:
1348:Veno-Echo.cpp ****     static bool lastShift{};
 3932              		.loc 20 1348 1 is_stmt 1 view -0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 0
 3935              		@ frame_needed = 0, uses_anonymous_args = 0
1349:Veno-Echo.cpp ****     static bool width_pickup{};
 3936              		.loc 20 1349 5 view .LVU1053
1350:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3937              		.loc 20 1350 5 view .LVU1054
1351:Veno-Echo.cpp **** 
 3938              		.loc 20 1351 5 view .LVU1055
1353:Veno-Echo.cpp **** 
 3939              		.loc 20 1353 5 view .LVU1056
1356:Veno-Echo.cpp **** 
 3940              		.loc 20 1356 5 view .LVU1057
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 179


1356:Veno-Echo.cpp **** 
 3941              		.loc 20 1356 39 is_stmt 0 view .LVU1058
 3942 0000 0722     		movs	r2, #7
 3943 0002 6348     		ldr	r0, .L253
 3944 0004 1146     		mov	r1, r2
1348:Veno-Echo.cpp ****     static bool lastShift{};
 3945              		.loc 20 1348 1 view .LVU1059
 3946 0006 10B5     		push	{r4, lr}
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 4, -8
 3949              		.cfi_offset 14, -4
 3950 0008 2DED028B 		vpush.64	{d8}
 3951              		.cfi_def_cfa_offset 16
 3952              		.cfi_offset 80, -16
 3953              		.cfi_offset 81, -12
1356:Veno-Echo.cpp **** 
 3954              		.loc 20 1356 39 view .LVU1060
 3955 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3956              	.LVL191:
 3957              	.LBB1269:
1358:Veno-Echo.cpp ****     {   
 3958              		.loc 20 1358 9 view .LVU1061
 3959 0010 604B     		ldr	r3, .L253+4
 3960              	.LBE1269:
1356:Veno-Echo.cpp **** 
 3961              		.loc 20 1356 39 view .LVU1062
 3962 0012 B0EE408A 		vmov.f32	s16, s0
 3963              	.LVL192:
1358:Veno-Echo.cpp ****     {   
 3964              		.loc 20 1358 5 is_stmt 1 view .LVU1063
 3965              	.LBB1324:
 3966              	.LBB1270:
1362:Veno-Echo.cpp ****         {
 3967              		.loc 20 1362 19 is_stmt 0 view .LVU1064
 3968 0016 604A     		ldr	r2, .L253+8
 3969              	.LBE1270:
1358:Veno-Echo.cpp ****     {   
 3970              		.loc 20 1358 5 view .LVU1065
 3971 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3972 001a 002B     		cmp	r3, #0
 3973 001c 3ED1     		bne	.L225
 3974              	.LBB1299:
1360:Veno-Echo.cpp ****         //update pickup
 3975              		.loc 20 1360 9 is_stmt 1 view .LVU1066
1362:Veno-Echo.cpp ****         {
 3976              		.loc 20 1362 9 view .LVU1067
 3977 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3978 0020 0029     		cmp	r1, #0
 3979 0022 48D0     		beq	.L226
1364:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3980              		.loc 20 1364 13 view .LVU1068
1365:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3981              		.loc 20 1365 26 is_stmt 0 view .LVU1069
 3982 0024 5D48     		ldr	r0, .L253+12
1366:Veno-Echo.cpp ****         }
 3983              		.loc 20 1366 23 view .LVU1070
 3984 0026 5E49     		ldr	r1, .L253+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 180


1364:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3985              		.loc 20 1364 23 view .LVU1071
 3986 0028 1370     		strb	r3, [r2]
1365:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3987              		.loc 20 1365 13 is_stmt 1 view .LVU1072
1365:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3988              		.loc 20 1365 26 is_stmt 0 view .LVU1073
 3989 002a 0370     		strb	r3, [r0]
1366:Veno-Echo.cpp ****         }
 3990              		.loc 20 1366 13 is_stmt 1 view .LVU1074
1366:Veno-Echo.cpp ****         }
 3991              		.loc 20 1366 23 is_stmt 0 view .LVU1075
 3992 002c 81ED000A 		vstr.32	s0, [r1]
 3993              	.L227:
1381:Veno-Echo.cpp **** 
 3994              		.loc 20 1381 9 is_stmt 1 view .LVU1076
 3995              	.LVL193:
1383:Veno-Echo.cpp ****         {
 3996              		.loc 20 1383 9 view .LVU1077
1391:Veno-Echo.cpp ****         }
 3997              		.loc 20 1391 13 view .LVU1078
 3998              	.LBB1271:
 3999              	.LBI1271:
2013:Veno-Echo.cpp **** {
 4000              		.loc 20 2013 7 view .LVU1079
 4001              	.LBB1272:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4002              		.loc 20 2015 5 view .LVU1080
2016:Veno-Echo.cpp **** 
 4003              		.loc 20 2016 5 view .LVU1081
 4004              	.LBE1272:
 4005              	.LBE1271:
1391:Veno-Echo.cpp ****         }
 4006              		.loc 20 1391 32 is_stmt 0 view .LVU1082
 4007 0030 5C4A     		ldr	r2, .L253+20
 4008              	.LBB1276:
 4009              	.LBB1273:
2016:Veno-Echo.cpp **** 
 4010              		.loc 20 2016 39 view .LVU1083
 4011 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2016:Veno-Echo.cpp **** 
 4012              		.loc 20 2016 49 view .LVU1084
 4013 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4014              	.LBE1273:
 4015              	.LBE1276:
1391:Veno-Echo.cpp ****         }
 4016              		.loc 20 1391 32 view .LVU1085
 4017 003a 5B4B     		ldr	r3, .L253+24
 4018              	.LBB1277:
 4019              	.LBB1274:
2016:Veno-Echo.cpp **** 
 4020              		.loc 20 2016 39 view .LVU1086
 4021 003c D2ED007A 		vldr.32	s15, [r2]
2016:Veno-Echo.cpp **** 
 4022              		.loc 20 2016 12 view .LVU1087
 4023 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4024 0044 93ED000A 		vldr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 181


 4025              	.LVL194:
2016:Veno-Echo.cpp **** 
 4026              		.loc 20 2016 39 view .LVU1088
 4027 0048 77EE677A 		vsub.f32	s15, s14, s15
2016:Veno-Echo.cpp **** 
 4028              		.loc 20 2016 49 view .LVU1089
 4029 004c 77EEC67A 		vsub.f32	s15, s15, s12
2016:Veno-Echo.cpp **** 
 4030              		.loc 20 2016 12 view .LVU1090
 4031 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4032              	.LVL195:
2018:Veno-Echo.cpp ****     {
 4033              		.loc 20 2018 5 is_stmt 1 view .LVU1091
 4034 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4035 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4036 005c 00F19180 		bmi	.L251
2023:Veno-Echo.cpp ****     {
 4037              		.loc 20 2023 5 view .LVU1092
2025:Veno-Echo.cpp ****     }
 4038              		.loc 20 2025 16 is_stmt 0 view .LVU1093
 4039 0060 B4EE470A 		vcmp.f32	s0, s14
 4040 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4041 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4042              	.LVL196:
 4043              	.L233:
2028:Veno-Echo.cpp **** }
 4044              		.loc 20 2028 5 is_stmt 1 view .LVU1094
2028:Veno-Echo.cpp **** }
 4045              		.loc 20 2028 5 is_stmt 0 view .LVU1095
 4046              	.LBE1274:
 4047              	.LBE1277:
1391:Veno-Echo.cpp ****         }
 4048              		.loc 20 1391 32 view .LVU1096
 4049 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4050 0070 0020     		movs	r0, #0
 4051 0072 9FED4E1A 		vldr.32	s2, .L253+28
 4052 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4053              	.LVL197:
 4054              	.L232:
1394:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4055              		.loc 20 1394 13 is_stmt 1 view .LVU1097
 4056              	.LBB1278:
 4057              	.LBI1278:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4058              		.loc 25 135 13 view .LVU1098
 4059              	.LBB1279:
 4060              		.loc 25 137 5 view .LVU1099
 4061              		.loc 25 137 9 is_stmt 0 view .LVU1100
 4062 007a 4D4B     		ldr	r3, .L253+32
 4063 007c 9FED4D7A 		vldr.32	s14, .L253+36
 4064 0080 D3ED007A 		vldr.32	s15, [r3]
 4065              	.LBE1279:
 4066              	.LBE1278:
 4067              	.LBB1282:
 4068              	.LBB1283:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 182


  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4069              		.loc 11 60 42 view .LVU1101
 4070 0084 4C4A     		ldr	r2, .L253+40
 4071              	.LBE1283:
 4072              	.LBE1282:
 4073              	.LBB1285:
 4074              	.LBB1280:
 4075              		.loc 25 137 24 view .LVU1102
 4076 0086 30EE670A 		vsub.f32	s0, s0, s15
 4077              	.LVL198:
 4078              		.loc 25 137 24 view .LVU1103
 4079              	.LBE1280:
 4080              	.LBE1285:
 4081              	.LBE1299:
 4082              	.LBE1324:
1427:Veno-Echo.cpp **** 
 4083              		.loc 20 1427 1 view .LVU1104
 4084 008a BDEC028B 		vldm	sp!, {d8}
 4085              		.cfi_remember_state
 4086              		.cfi_restore 80
 4087              		.cfi_restore 81
 4088              		.cfi_def_cfa_offset 8
 4089              	.LVL199:
 4090              	.LBB1325:
 4091              	.LBB1300:
 4092              	.LBB1286:
 4093              	.LBB1281:
 4094              		.loc 25 137 9 view .LVU1105
 4095 008e E0EE077A 		vfma.f32	s15, s0, s14
 4096 0092 C3ED007A 		vstr.32	s15, [r3]
 4097              	.LVL200:
 4098              		.loc 25 137 9 view .LVU1106
 4099              	.LBE1281:
 4100              	.LBE1286:
1395:Veno-Echo.cpp ****     }
 4101              		.loc 20 1395 13 is_stmt 1 view .LVU1107
 4102              	.LBB1287:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 183


 4103              	.LBI1282:
 4104              		.loc 11 60 17 view .LVU1108
 4105              	.LBB1284:
 4106              		.loc 11 60 37 view .LVU1109
 4107              		.loc 11 60 42 is_stmt 0 view .LVU1110
 4108 0096 C2ED007A 		vstr.32	s15, [r2]
 4109              	.LBE1284:
 4110              	.LBE1287:
 4111              	.LBE1300:
 4112              	.LBE1325:
1427:Veno-Echo.cpp **** 
 4113              		.loc 20 1427 1 view .LVU1111
 4114 009a 10BD     		pop	{r4, pc}
 4115              	.LVL201:
 4116              	.L225:
 4117              		.cfi_restore_state
 4118              	.LBB1326:
 4119              	.LBB1301:
1400:Veno-Echo.cpp **** 
 4120              		.loc 20 1400 9 is_stmt 1 view .LVU1112
1402:Veno-Echo.cpp ****         {
 4121              		.loc 20 1402 9 view .LVU1113
 4122 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4123 009e 002B     		cmp	r3, #0
 4124 00a0 43D1     		bne	.L236
1404:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4125              		.loc 20 1404 13 view .LVU1114
1404:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4126              		.loc 20 1404 23 is_stmt 0 view .LVU1115
 4127 00a2 0124     		movs	r4, #1
1405:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4128              		.loc 20 1405 29 view .LVU1116
 4129 00a4 4548     		ldr	r0, .L253+44
1406:Veno-Echo.cpp ****         }
 4130              		.loc 20 1406 26 view .LVU1117
 4131 00a6 4649     		ldr	r1, .L253+48
1404:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4132              		.loc 20 1404 23 view .LVU1118
 4133 00a8 1470     		strb	r4, [r2]
1405:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4134              		.loc 20 1405 13 is_stmt 1 view .LVU1119
1405:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4135              		.loc 20 1405 29 is_stmt 0 view .LVU1120
 4136 00aa 0370     		strb	r3, [r0]
1406:Veno-Echo.cpp ****         }
 4137              		.loc 20 1406 13 is_stmt 1 view .LVU1121
1406:Veno-Echo.cpp ****         }
 4138              		.loc 20 1406 26 is_stmt 0 view .LVU1122
 4139 00ac 81ED000A 		vstr.32	s0, [r1]
 4140              	.L224:
1406:Veno-Echo.cpp ****         }
 4141              		.loc 20 1406 26 view .LVU1123
 4142              	.LBE1301:
 4143              	.LBE1326:
1427:Veno-Echo.cpp **** 
 4144              		.loc 20 1427 1 view .LVU1124
 4145 00b0 BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 184


 4146              		.cfi_remember_state
 4147              		.cfi_restore 80
 4148              		.cfi_restore 81
 4149              		.cfi_def_cfa_offset 8
 4150 00b4 10BD     		pop	{r4, pc}
 4151              	.L226:
 4152              		.cfi_restore_state
 4153              	.LBB1327:
 4154              	.LBB1321:
1371:Veno-Echo.cpp ****             {
 4155              		.loc 20 1371 13 is_stmt 1 view .LVU1125
1371:Veno-Echo.cpp ****             {
 4156              		.loc 20 1371 16 is_stmt 0 view .LVU1126
 4157 00b6 394B     		ldr	r3, .L253+12
1371:Veno-Echo.cpp ****             {
 4158              		.loc 20 1371 13 view .LVU1127
 4159 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4160 00ba 7AB9     		cbnz	r2, .L228
1373:Veno-Echo.cpp ****                 {
 4161              		.loc 20 1373 17 is_stmt 1 view .LVU1128
 4162              	.LVL202:
 4163              	.LBB1288:
 4164              	.LBI1288:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4165              		.loc 21 75 3 view .LVU1129
 4166              	.LBB1289:
 4167              		.loc 21 76 5 view .LVU1130
 4168              		.loc 21 76 5 is_stmt 0 view .LVU1131
 4169              	.LBE1289:
 4170              	.LBE1288:
1373:Veno-Echo.cpp ****                 {
 4171              		.loc 20 1373 23 view .LVU1132
 4172 00bc 384A     		ldr	r2, .L253+16
1373:Veno-Echo.cpp ****                 {
 4173              		.loc 20 1373 17 view .LVU1133
 4174 00be 9FED417A 		vldr.32	s14, .L253+52
1373:Veno-Echo.cpp ****                 {
 4175              		.loc 20 1373 23 view .LVU1134
 4176 00c2 D2ED007A 		vldr.32	s15, [r2]
 4177 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4178              	.LBB1291:
 4179              	.LBB1290:
 4180              		.loc 21 76 31 view .LVU1135
 4181 00ca F0EEE77A 		vabs.f32	s15, s15
 4182              	.LBE1290:
 4183              	.LBE1291:
1373:Veno-Echo.cpp ****                 {
 4184              		.loc 20 1373 17 view .LVU1136
 4185 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4186 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4187 00d6 ABDD     		ble	.L227
1375:Veno-Echo.cpp ****                 }
 4188              		.loc 20 1375 21 is_stmt 1 view .LVU1137
1375:Veno-Echo.cpp ****                 }
 4189              		.loc 20 1375 34 is_stmt 0 view .LVU1138
 4190 00d8 0122     		movs	r2, #1
 4191 00da 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 185


 4192              	.L228:
1381:Veno-Echo.cpp **** 
 4193              		.loc 20 1381 9 is_stmt 1 view .LVU1139
 4194              	.LVL203:
1383:Veno-Echo.cpp ****         {
 4195              		.loc 20 1383 9 view .LVU1140
1385:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4196              		.loc 20 1385 13 view .LVU1141
 4197              	.LBB1292:
 4198              	.LBI1292:
2013:Veno-Echo.cpp **** {
 4199              		.loc 20 2013 7 view .LVU1142
 4200              	.LBB1293:
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4201              		.loc 20 2015 5 view .LVU1143
2016:Veno-Echo.cpp **** 
 4202              		.loc 20 2016 5 view .LVU1144
 4203              	.LBE1293:
 4204              	.LBE1292:
1385:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4205              		.loc 20 1385 32 is_stmt 0 view .LVU1145
 4206 00dc 314B     		ldr	r3, .L253+20
 4207              	.LBB1296:
 4208              	.LBB1294:
2016:Veno-Echo.cpp **** 
 4209              		.loc 20 2016 39 view .LVU1146
 4210 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2016:Veno-Echo.cpp **** 
 4211              		.loc 20 2016 49 view .LVU1147
 4212 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2016:Veno-Echo.cpp **** 
 4213              		.loc 20 2016 39 view .LVU1148
 4214 00e6 D3ED007A 		vldr.32	s15, [r3]
2016:Veno-Echo.cpp **** 
 4215              		.loc 20 2016 12 view .LVU1149
 4216 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4217 00ee B0EE480A 		vmov.f32	s0, s16
 4218              	.LVL204:
2016:Veno-Echo.cpp **** 
 4219              		.loc 20 2016 39 view .LVU1150
 4220 00f2 77EE677A 		vsub.f32	s15, s14, s15
2016:Veno-Echo.cpp **** 
 4221              		.loc 20 2016 49 view .LVU1151
 4222 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2016:Veno-Echo.cpp **** 
 4223              		.loc 20 2016 12 view .LVU1152
 4224 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4225              	.LVL205:
2018:Veno-Echo.cpp ****     {
 4226              		.loc 20 2018 5 is_stmt 1 view .LVU1153
 4227 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4228 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4229 0106 3FD4     		bmi	.L252
2023:Veno-Echo.cpp ****     {
 4230              		.loc 20 2023 5 view .LVU1154
2025:Veno-Echo.cpp ****     }
 4231              		.loc 20 2025 16 is_stmt 0 view .LVU1155
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 186


 4232 0108 B4EE470A 		vcmp.f32	s0, s14
 4233 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4234 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4235              	.LVL206:
 4236              	.L230:
2028:Veno-Echo.cpp **** }
 4237              		.loc 20 2028 5 is_stmt 1 view .LVU1156
2028:Veno-Echo.cpp **** }
 4238              		.loc 20 2028 5 is_stmt 0 view .LVU1157
 4239              	.LBE1294:
 4240              	.LBE1296:
1385:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4241              		.loc 20 1385 32 view .LVU1158
 4242 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4243 0118 0020     		movs	r0, #0
 4244 011a 9FED241A 		vldr.32	s2, .L253+28
 4245 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4246              	.LVL207:
1386:Veno-Echo.cpp ****         }
 4247              		.loc 20 1386 24 view .LVU1159
 4248 0122 214B     		ldr	r3, .L253+24
 4249              	.LVL208:
1386:Veno-Echo.cpp ****         }
 4250              		.loc 20 1386 13 is_stmt 1 view .LVU1160
1386:Veno-Echo.cpp ****         }
 4251              		.loc 20 1386 24 is_stmt 0 view .LVU1161
 4252 0124 83ED008A 		vstr.32	s16, [r3]
 4253 0128 A7E7     		b	.L232
 4254              	.LVL209:
 4255              	.L236:
1386:Veno-Echo.cpp ****         }
 4256              		.loc 20 1386 24 view .LVU1162
 4257              	.LBE1321:
 4258              	.LBB1322:
1411:Veno-Echo.cpp ****             {
 4259              		.loc 20 1411 13 is_stmt 1 view .LVU1163
1411:Veno-Echo.cpp ****             {
 4260              		.loc 20 1411 16 is_stmt 0 view .LVU1164
 4261 012a 244B     		ldr	r3, .L253+44
1411:Veno-Echo.cpp ****             {
 4262              		.loc 20 1411 13 view .LVU1165
 4263 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4264 012e 7AB9     		cbnz	r2, .L238
1413:Veno-Echo.cpp ****                 {
 4265              		.loc 20 1413 17 is_stmt 1 view .LVU1166
 4266              	.LVL210:
 4267              	.LBB1302:
 4268              	.LBI1302:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4269              		.loc 21 75 3 view .LVU1167
 4270              	.LBB1303:
 4271              		.loc 21 76 5 view .LVU1168
 4272              		.loc 21 76 5 is_stmt 0 view .LVU1169
 4273              	.LBE1303:
 4274              	.LBE1302:
1413:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1413 23 view .LVU1170
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 187


 4276 0130 234A     		ldr	r2, .L253+48
1413:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1413 17 view .LVU1171
 4278 0132 9FED247A 		vldr.32	s14, .L253+52
1413:Veno-Echo.cpp ****                 {
 4279              		.loc 20 1413 23 view .LVU1172
 4280 0136 D2ED007A 		vldr.32	s15, [r2]
 4281 013a 70EE677A 		vsub.f32	s15, s0, s15
 4282              	.LBB1305:
 4283              	.LBB1304:
 4284              		.loc 21 76 31 view .LVU1173
 4285 013e F0EEE77A 		vabs.f32	s15, s15
 4286              	.LBE1304:
 4287              	.LBE1305:
1413:Veno-Echo.cpp ****                 {
 4288              		.loc 20 1413 17 view .LVU1174
 4289 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4290 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4291 014a B1DD     		ble	.L224
1415:Veno-Echo.cpp ****                 }
 4292              		.loc 20 1415 21 is_stmt 1 view .LVU1175
1415:Veno-Echo.cpp ****                 }
 4293              		.loc 20 1415 37 is_stmt 0 view .LVU1176
 4294 014c 0122     		movs	r2, #1
 4295 014e 1A70     		strb	r2, [r3]
 4296              	.L238:
1420:Veno-Echo.cpp ****         {
 4297              		.loc 20 1420 9 is_stmt 1 view .LVU1177
1422:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4298              		.loc 20 1422 13 view .LVU1178
1422:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4299              		.loc 20 1422 29 is_stmt 0 view .LVU1179
 4300 0150 B0EE480A 		vmov.f32	s0, s16
 4301              	.LVL211:
1422:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4302              		.loc 20 1422 29 view .LVU1180
 4303 0154 0020     		movs	r0, #0
 4304 0156 9FED1C1A 		vldr.32	s2, .L253+56
 4305 015a DFED140A 		vldr.32	s1, .L253+28
 4306 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4307              	.LVL212:
1422:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4308              		.loc 20 1422 22 view .LVU1181
 4309 0162 1A48     		ldr	r0, .L253+60
 4310              	.LBB1306:
 4311              	.LBB1307:
 4312              	.LBB1308:
 4313              	.LBB1309:
 4314              	.LBB1310:
 4315              		.loc 22 397 18 view .LVU1182
 4316 0164 0122     		movs	r2, #1
 4317              	.LBE1310:
 4318              	.LBE1309:
 4319              	.LBE1308:
 4320              	.LBE1307:
 4321              	.LBE1306:
1423:Veno-Echo.cpp ****             save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 188


 4322              		.loc 20 1423 34 view .LVU1183
 4323 0166 1A49     		ldr	r1, .L253+64
 4324              	.LBB1319:
 4325              	.LBB1317:
 4326              	.LBB1315:
 4327              	.LBB1313:
 4328              	.LBB1311:
 4329              		.loc 22 397 18 view .LVU1184
 4330 0168 1A4B     		ldr	r3, .L253+68
 4331              	.LBE1311:
 4332              	.LBE1313:
 4333              	.LBE1315:
 4334              	.LBE1317:
 4335              	.LBE1319:
1422:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4336              		.loc 20 1422 22 view .LVU1185
 4337 016a 80ED000A 		vstr.32	s0, [r0]
1423:Veno-Echo.cpp ****             save_flag = true;
 4338              		.loc 20 1423 13 is_stmt 1 view .LVU1186
1423:Veno-Echo.cpp ****             save_flag = true;
 4339              		.loc 20 1423 34 is_stmt 0 view .LVU1187
 4340 016e 81ED020A 		vstr.32	s0, [r1, #8]
1424:Veno-Echo.cpp ****         }
 4341              		.loc 20 1424 13 is_stmt 1 view .LVU1188
 4342              	.LVL213:
 4343              	.LBB1320:
 4344              	.LBI1306:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4345              		.loc 23 80 5 view .LVU1189
 4346              	.LBB1318:
 4347              		.loc 23 81 7 view .LVU1190
 4348              	.LBB1316:
 4349              	.LBI1308:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4350              		.loc 22 288 7 view .LVU1191
 4351              	.LBB1314:
 4352              	.LBI1309:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4353              		.loc 22 390 7 view .LVU1192
 4354              	.LBB1312:
 4355              		.loc 22 397 18 is_stmt 0 view .LVU1193
 4356 0172 BFF35B8F 		dmb	ish
 4357 0176 1A70     		strb	r2, [r3]
 4358 0178 BFF35B8F 		dmb	ish
 4359              	.LVL214:
 4360              		.loc 22 397 18 view .LVU1194
 4361              	.LBE1312:
 4362              	.LBE1314:
 4363              	.LBE1316:
 4364              	.LBE1318:
 4365              	.LBE1320:
 4366              	.LBE1322:
 4367              	.LBE1327:
1427:Veno-Echo.cpp **** 
 4368              		.loc 20 1427 1 view .LVU1195
 4369 017c BDEC028B 		vldm	sp!, {d8}
 4370              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 189


 4371              		.cfi_restore 80
 4372              		.cfi_restore 81
 4373              		.cfi_def_cfa_offset 8
 4374              	.LVL215:
1427:Veno-Echo.cpp **** 
 4375              		.loc 20 1427 1 view .LVU1196
 4376 0180 10BD     		pop	{r4, pc}
 4377              	.LVL216:
 4378              	.L251:
 4379              		.cfi_restore_state
 4380              	.LBB1328:
 4381              	.LBB1323:
 4382              	.LBB1297:
 4383              	.LBB1275:
2020:Veno-Echo.cpp ****     }
 4384              		.loc 20 2020 16 view .LVU1197
 4385 0182 9FED0A0A 		vldr.32	s0, .L253+28
 4386              	.LVL217:
2020:Veno-Echo.cpp ****     }
 4387              		.loc 20 2020 16 view .LVU1198
 4388 0186 71E7     		b	.L233
 4389              	.LVL218:
 4390              	.L252:
2020:Veno-Echo.cpp ****     }
 4391              		.loc 20 2020 16 view .LVU1199
 4392              	.LBE1275:
 4393              	.LBE1297:
 4394              	.LBB1298:
 4395              	.LBB1295:
 4396 0188 9FED080A 		vldr.32	s0, .L253+28
 4397              	.LVL219:
2020:Veno-Echo.cpp ****     }
 4398              		.loc 20 2020 16 view .LVU1200
 4399 018c C2E7     		b	.L230
 4400              	.L254:
 4401 018e 00BF     		.align	2
 4402              	.L253:
 4403 0190 18000000 		.word	.LANCHOR4+24
 4404 0194 00000000 		.word	.LANCHOR7
 4405 0198 00000000 		.word	.LANCHOR60
 4406 019c 00000000 		.word	.LANCHOR61
 4407 01a0 00000000 		.word	.LANCHOR62
 4408 01a4 00000000 		.word	.LANCHOR59
 4409 01a8 00000000 		.word	.LANCHOR63
 4410 01ac 00000000 		.word	0
 4411 01b0 00000000 		.word	.LANCHOR64
 4412 01b4 6F12033D 		.word	1023611503
 4413 01b8 00000000 		.word	.LANCHOR65
 4414 01bc 00000000 		.word	.LANCHOR66
 4415 01c0 00000000 		.word	.LANCHOR67
 4416 01c4 0AD7A33B 		.word	1000593162
 4417 01c8 0000FA43 		.word	1140457472
 4418 01cc 00000000 		.word	.LANCHOR68
 4419 01d0 00000000 		.word	.LANCHOR15
 4420 01d4 00000000 		.word	.LANCHOR16
 4421              	.LBE1295:
 4422              	.LBE1298:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 190


 4423              	.LBE1323:
 4424              	.LBE1328:
 4425              		.cfi_endproc
 4426              	.LFE4323:
 4428              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4429              		.align	1
 4430              		.p2align 2,,3
 4431              		.global	_Z20Update_crossfeedbackv
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
 4435              		.fpu fpv5-d16
 4437              	_Z20Update_crossfeedbackv:
 4438              	.LFB4324:
1430:Veno-Echo.cpp ****     static bool lastShift{};
 4439              		.loc 20 1430 1 is_stmt 1 view -0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 0
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
1431:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4443              		.loc 20 1431 5 view .LVU1202
1432:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4444              		.loc 20 1432 5 view .LVU1203
1433:Veno-Echo.cpp **** 
 4445              		.loc 20 1433 5 view .LVU1204
1435:Veno-Echo.cpp **** 
 4446              		.loc 20 1435 5 view .LVU1205
1438:Veno-Echo.cpp **** 
 4447              		.loc 20 1438 5 view .LVU1206
1438:Veno-Echo.cpp **** 
 4448              		.loc 20 1438 47 is_stmt 0 view .LVU1207
 4449 0000 0022     		movs	r2, #0
 4450 0002 0721     		movs	r1, #7
 4451 0004 4548     		ldr	r0, .L270
1430:Veno-Echo.cpp ****     static bool lastShift{};
 4452              		.loc 20 1430 1 view .LVU1208
 4453 0006 10B5     		push	{r4, lr}
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 4, -8
 4456              		.cfi_offset 14, -4
 4457 0008 2DED028B 		vpush.64	{d8}
 4458              		.cfi_def_cfa_offset 16
 4459              		.cfi_offset 80, -16
 4460              		.cfi_offset 81, -12
1438:Veno-Echo.cpp **** 
 4461              		.loc 20 1438 47 view .LVU1209
 4462 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4463              	.LVL220:
 4464              	.LBB1329:
1440:Veno-Echo.cpp ****     {   
 4465              		.loc 20 1440 9 view .LVU1210
 4466 0010 434B     		ldr	r3, .L270+4
 4467              	.LBE1329:
1438:Veno-Echo.cpp **** 
 4468              		.loc 20 1438 47 view .LVU1211
 4469 0012 B0EE408A 		vmov.f32	s16, s0
 4470              	.LVL221:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 191


1440:Veno-Echo.cpp ****     {   
 4471              		.loc 20 1440 5 is_stmt 1 view .LVU1212
 4472              	.LBB1367:
 4473              	.LBB1330:
1444:Veno-Echo.cpp ****         {
 4474              		.loc 20 1444 19 is_stmt 0 view .LVU1213
 4475 0016 434A     		ldr	r2, .L270+8
 4476              	.LBE1330:
1440:Veno-Echo.cpp ****     {   
 4477              		.loc 20 1440 5 view .LVU1214
 4478 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 001a FBB9     		cbnz	r3, .L256
 4480              	.LBB1339:
1442:Veno-Echo.cpp ****         //update pickup
 4481              		.loc 20 1442 9 is_stmt 1 view .LVU1215
1444:Veno-Echo.cpp ****         {
 4482              		.loc 20 1444 9 view .LVU1216
 4483 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4484 001e 49B3     		cbz	r1, .L257
1446:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4485              		.loc 20 1446 13 view .LVU1217
1447:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4486              		.loc 20 1447 34 is_stmt 0 view .LVU1218
 4487 0020 4148     		ldr	r0, .L270+12
1448:Veno-Echo.cpp ****         }
 4488              		.loc 20 1448 31 view .LVU1219
 4489 0022 4249     		ldr	r1, .L270+16
1446:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4490              		.loc 20 1446 23 view .LVU1220
 4491 0024 1370     		strb	r3, [r2]
1447:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4492              		.loc 20 1447 13 is_stmt 1 view .LVU1221
1447:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4493              		.loc 20 1447 34 is_stmt 0 view .LVU1222
 4494 0026 0370     		strb	r3, [r0]
1448:Veno-Echo.cpp ****         }
 4495              		.loc 20 1448 13 is_stmt 1 view .LVU1223
1448:Veno-Echo.cpp ****         }
 4496              		.loc 20 1448 31 is_stmt 0 view .LVU1224
 4497 0028 81ED000A 		vstr.32	s0, [r1]
 4498              	.L258:
1461:Veno-Echo.cpp **** 
 4499              		.loc 20 1461 9 is_stmt 1 view .LVU1225
 4500              	.LVL222:
1463:Veno-Echo.cpp ****         {
 4501              		.loc 20 1463 9 view .LVU1226
1471:Veno-Echo.cpp ****         }
 4502              		.loc 20 1471 13 view .LVU1227
1471:Veno-Echo.cpp ****         }
 4503              		.loc 20 1471 40 is_stmt 0 view .LVU1228
 4504 002c 404B     		ldr	r3, .L270+20
 4505 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4506 0032 0020     		movs	r0, #0
 4507 0034 DFED3F0A 		vldr.32	s1, .L270+24
 4508 0038 93ED000A 		vldr.32	s0, [r3]
 4509              	.LVL223:
1471:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 192


 4510              		.loc 20 1471 40 view .LVU1229
 4511 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4512              	.LVL224:
 4513              	.L266:
1474:Veno-Echo.cpp ****     }
 4514              		.loc 20 1474 9 is_stmt 1 view .LVU1230
 4515              	.LBB1331:
 4516              	.LBI1331:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4517              		.loc 25 135 13 view .LVU1231
 4518              	.LBB1332:
 4519              		.loc 25 137 5 view .LVU1232
 4520              		.loc 25 137 9 is_stmt 0 view .LVU1233
 4521 0040 3D4B     		ldr	r3, .L270+28
 4522 0042 9FED3E7A 		vldr.32	s14, .L270+32
 4523 0046 D3ED007A 		vldr.32	s15, [r3]
 4524              		.loc 25 137 24 view .LVU1234
 4525 004a 30EE670A 		vsub.f32	s0, s0, s15
 4526              	.LVL225:
 4527              		.loc 25 137 24 view .LVU1235
 4528              	.LBE1332:
 4529              	.LBE1331:
 4530              	.LBE1339:
 4531              	.LBE1367:
1506:Veno-Echo.cpp **** 
 4532              		.loc 20 1506 1 view .LVU1236
 4533 004e BDEC028B 		vldm	sp!, {d8}
 4534              		.cfi_remember_state
 4535              		.cfi_restore 80
 4536              		.cfi_restore 81
 4537              		.cfi_def_cfa_offset 8
 4538              	.LVL226:
 4539              	.LBB1368:
 4540              	.LBB1340:
 4541              	.LBB1334:
 4542              	.LBB1333:
 4543              		.loc 25 137 9 view .LVU1237
 4544 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4545 0056 C3ED007A 		vstr.32	s15, [r3]
 4546              	.LBE1333:
 4547              	.LBE1334:
 4548              	.LBE1340:
 4549              	.LBE1368:
1506:Veno-Echo.cpp **** 
 4550              		.loc 20 1506 1 view .LVU1238
 4551 005a 10BD     		pop	{r4, pc}
 4552              	.LVL227:
 4553              	.L256:
 4554              		.cfi_restore_state
 4555              	.LBB1369:
 4556              	.LBB1341:
1478:Veno-Echo.cpp **** 
 4557              		.loc 20 1478 9 is_stmt 1 view .LVU1239
1480:Veno-Echo.cpp ****         {
 4558              		.loc 20 1480 9 view .LVU1240
 4559 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4560 005e 4BBB     		cbnz	r3, .L262
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 193


1482:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4561              		.loc 20 1482 13 view .LVU1241
1482:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4562              		.loc 20 1482 23 is_stmt 0 view .LVU1242
 4563 0060 0124     		movs	r4, #1
1483:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4564              		.loc 20 1483 28 view .LVU1243
 4565 0062 3748     		ldr	r0, .L270+36
1484:Veno-Echo.cpp ****         }
 4566              		.loc 20 1484 25 view .LVU1244
 4567 0064 3749     		ldr	r1, .L270+40
1482:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4568              		.loc 20 1482 23 view .LVU1245
 4569 0066 1470     		strb	r4, [r2]
1483:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4570              		.loc 20 1483 13 is_stmt 1 view .LVU1246
1483:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4571              		.loc 20 1483 28 is_stmt 0 view .LVU1247
 4572 0068 0370     		strb	r3, [r0]
1484:Veno-Echo.cpp ****         }
 4573              		.loc 20 1484 13 is_stmt 1 view .LVU1248
1484:Veno-Echo.cpp ****         }
 4574              		.loc 20 1484 25 is_stmt 0 view .LVU1249
 4575 006a 81ED000A 		vstr.32	s0, [r1]
 4576              	.L255:
1484:Veno-Echo.cpp ****         }
 4577              		.loc 20 1484 25 view .LVU1250
 4578              	.LBE1341:
 4579              	.LBE1369:
1506:Veno-Echo.cpp **** 
 4580              		.loc 20 1506 1 view .LVU1251
 4581 006e BDEC028B 		vldm	sp!, {d8}
 4582              		.cfi_remember_state
 4583              		.cfi_restore 80
 4584              		.cfi_restore 81
 4585              		.cfi_def_cfa_offset 8
 4586 0072 10BD     		pop	{r4, pc}
 4587              	.L257:
 4588              		.cfi_restore_state
 4589              	.LBB1370:
 4590              	.LBB1365:
1453:Veno-Echo.cpp ****             {
 4591              		.loc 20 1453 13 is_stmt 1 view .LVU1252
1453:Veno-Echo.cpp ****             {
 4592              		.loc 20 1453 16 is_stmt 0 view .LVU1253
 4593 0074 2C4B     		ldr	r3, .L270+12
1453:Veno-Echo.cpp ****             {
 4594              		.loc 20 1453 13 view .LVU1254
 4595 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4596 0078 7AB9     		cbnz	r2, .L259
1455:Veno-Echo.cpp ****                 {
 4597              		.loc 20 1455 17 is_stmt 1 view .LVU1255
 4598              	.LVL228:
 4599              	.LBB1335:
 4600              	.LBI1335:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4601              		.loc 21 75 3 view .LVU1256
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 194


 4602              	.LBB1336:
 4603              		.loc 21 76 5 view .LVU1257
 4604              		.loc 21 76 5 is_stmt 0 view .LVU1258
 4605              	.LBE1336:
 4606              	.LBE1335:
1455:Veno-Echo.cpp ****                 {
 4607              		.loc 20 1455 23 view .LVU1259
 4608 007a 2C4A     		ldr	r2, .L270+16
1455:Veno-Echo.cpp ****                 {
 4609              		.loc 20 1455 17 view .LVU1260
 4610 007c 9FED327A 		vldr.32	s14, .L270+44
1455:Veno-Echo.cpp ****                 {
 4611              		.loc 20 1455 23 view .LVU1261
 4612 0080 D2ED007A 		vldr.32	s15, [r2]
 4613 0084 70EE677A 		vsub.f32	s15, s0, s15
 4614              	.LBB1338:
 4615              	.LBB1337:
 4616              		.loc 21 76 31 view .LVU1262
 4617 0088 F0EEE77A 		vabs.f32	s15, s15
 4618              	.LBE1337:
 4619              	.LBE1338:
1455:Veno-Echo.cpp ****                 {
 4620              		.loc 20 1455 17 view .LVU1263
 4621 008c F4EEC77A 		vcmpe.f32	s15, s14
 4622 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4623 0094 CADD     		ble	.L258
1457:Veno-Echo.cpp ****                 }
 4624              		.loc 20 1457 21 is_stmt 1 view .LVU1264
1457:Veno-Echo.cpp ****                 }
 4625              		.loc 20 1457 42 is_stmt 0 view .LVU1265
 4626 0096 0122     		movs	r2, #1
 4627 0098 1A70     		strb	r2, [r3]
 4628              	.L259:
1461:Veno-Echo.cpp **** 
 4629              		.loc 20 1461 9 is_stmt 1 view .LVU1266
 4630              	.LVL229:
1463:Veno-Echo.cpp ****         {
 4631              		.loc 20 1463 9 view .LVU1267
1465:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4632              		.loc 20 1465 13 view .LVU1268
1465:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4633              		.loc 20 1465 40 is_stmt 0 view .LVU1269
 4634 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4635 009e 0020     		movs	r0, #0
 4636 00a0 B0EE480A 		vmov.f32	s0, s16
 4637              	.LVL230:
1465:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4638              		.loc 20 1465 40 view .LVU1270
 4639 00a4 DFED230A 		vldr.32	s1, .L270+24
 4640 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4641              	.LVL231:
1466:Veno-Echo.cpp ****         }
 4642              		.loc 20 1466 32 view .LVU1271
 4643 00ac 204B     		ldr	r3, .L270+20
 4644              	.LVL232:
1466:Veno-Echo.cpp ****         }
 4645              		.loc 20 1466 13 is_stmt 1 view .LVU1272
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 195


1466:Veno-Echo.cpp ****         }
 4646              		.loc 20 1466 32 is_stmt 0 view .LVU1273
 4647 00ae 83ED008A 		vstr.32	s16, [r3]
 4648 00b2 C5E7     		b	.L266
 4649              	.LVL233:
 4650              	.L262:
1466:Veno-Echo.cpp ****         }
 4651              		.loc 20 1466 32 view .LVU1274
 4652              	.LBE1365:
 4653              	.LBB1366:
1489:Veno-Echo.cpp ****             {
 4654              		.loc 20 1489 13 is_stmt 1 view .LVU1275
1489:Veno-Echo.cpp ****             {
 4655              		.loc 20 1489 16 is_stmt 0 view .LVU1276
 4656 00b4 224B     		ldr	r3, .L270+36
1489:Veno-Echo.cpp ****             {
 4657              		.loc 20 1489 13 view .LVU1277
 4658 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4659 00b8 7AB9     		cbnz	r2, .L264
1491:Veno-Echo.cpp ****                 {
 4660              		.loc 20 1491 17 is_stmt 1 view .LVU1278
 4661              	.LVL234:
 4662              	.LBB1342:
 4663              	.LBI1342:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4664              		.loc 21 75 3 view .LVU1279
 4665              	.LBB1343:
 4666              		.loc 21 76 5 view .LVU1280
 4667              		.loc 21 76 5 is_stmt 0 view .LVU1281
 4668              	.LBE1343:
 4669              	.LBE1342:
1491:Veno-Echo.cpp ****                 {
 4670              		.loc 20 1491 23 view .LVU1282
 4671 00ba 224A     		ldr	r2, .L270+40
1491:Veno-Echo.cpp ****                 {
 4672              		.loc 20 1491 17 view .LVU1283
 4673 00bc 9FED227A 		vldr.32	s14, .L270+44
1491:Veno-Echo.cpp ****                 {
 4674              		.loc 20 1491 23 view .LVU1284
 4675 00c0 D2ED007A 		vldr.32	s15, [r2]
 4676 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4677              	.LBB1345:
 4678              	.LBB1344:
 4679              		.loc 21 76 31 view .LVU1285
 4680 00c8 F0EEE77A 		vabs.f32	s15, s15
 4681              	.LBE1344:
 4682              	.LBE1345:
1491:Veno-Echo.cpp ****                 {
 4683              		.loc 20 1491 17 view .LVU1286
 4684 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4685 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4686 00d4 CBDD     		ble	.L255
1493:Veno-Echo.cpp ****                 }
 4687              		.loc 20 1493 21 is_stmt 1 view .LVU1287
1493:Veno-Echo.cpp ****                 }
 4688              		.loc 20 1493 36 is_stmt 0 view .LVU1288
 4689 00d6 0122     		movs	r2, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 196


 4690 00d8 1A70     		strb	r2, [r3]
 4691              	.L264:
1498:Veno-Echo.cpp ****         {
 4692              		.loc 20 1498 9 is_stmt 1 view .LVU1289
 4693              	.LBB1346:
1500:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4694              		.loc 20 1500 13 view .LVU1290
 4695              	.LBB1347:
 4696              	.LBB1348:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4697              		.loc 9 60 20 is_stmt 0 view .LVU1291
 4698 00da 1C4C     		ldr	r4, .L270+48
 4699              	.LBE1348:
 4700              	.LBE1347:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 197


1500:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4701              		.loc 20 1500 32 view .LVU1292
 4702 00dc B0EE480A 		vmov.f32	s0, s16
 4703              	.LVL235:
1500:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4704              		.loc 20 1500 32 view .LVU1293
 4705 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4706 00e4 0020     		movs	r0, #0
 4707 00e6 DFED1A0A 		vldr.32	s1, .L270+52
 4708 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4709              	.LVL236:
 4710              	.LBB1352:
 4711              	.LBB1349:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4712              		.loc 9 61 34 view .LVU1294
 4713 00ee 2046     		mov	r0, r4
 4714              	.LBE1349:
 4715              	.LBE1352:
1500:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4716              		.loc 20 1500 32 view .LVU1295
 4717 00f0 B0EE408A 		vmov.f32	s16, s0
 4718              	.LVL237:
1501:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4719              		.loc 20 1501 13 is_stmt 1 view .LVU1296
 4720              	.LBB1353:
 4721              	.LBI1347:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4722              		.loc 9 58 17 view .LVU1297
 4723              	.LBB1350:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4724              		.loc 9 60 9 view .LVU1298
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4725              		.loc 9 60 20 is_stmt 0 view .LVU1299
 4726 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4727              		.loc 9 61 9 is_stmt 1 view .LVU1300
 4728              		.loc 9 61 34 is_stmt 0 view .LVU1301
 4729 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4730              	.LVL238:
 4731              		.loc 9 61 34 view .LVU1302
 4732              	.LBE1350:
 4733              	.LBE1353:
1502:Veno-Echo.cpp ****             save_flag = true;
 4734              		.loc 20 1502 33 view .LVU1303
 4735 00fc 1549     		ldr	r1, .L270+56
 4736              	.LBB1354:
 4737              	.LBB1355:
 4738              	.LBB1356:
 4739              	.LBB1357:
 4740              	.LBB1358:
 4741              		.loc 22 397 18 view .LVU1304
 4742 00fe 164B     		ldr	r3, .L270+60
 4743 0100 0122     		movs	r2, #1
 4744              	.LBE1358:
 4745              	.LBE1357:
 4746              	.LBE1356:
 4747              	.LBE1355:
 4748              	.LBE1354:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 198


1502:Veno-Echo.cpp ****             save_flag = true;
 4749              		.loc 20 1502 33 view .LVU1305
 4750 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4751              	.LBB1363:
 4752              	.LBB1351:
 4753              		.loc 9 61 20 view .LVU1306
 4754 0106 84ED060A 		vstr.32	s0, [r4, #24]
 4755              	.LVL239:
 4756              		.loc 9 61 20 view .LVU1307
 4757              	.LBE1351:
 4758              	.LBE1363:
1502:Veno-Echo.cpp ****             save_flag = true;
 4759              		.loc 20 1502 13 is_stmt 1 view .LVU1308
1503:Veno-Echo.cpp ****         }
 4760              		.loc 20 1503 13 view .LVU1309
 4761              	.LBB1364:
 4762              	.LBI1354:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4763              		.loc 23 80 5 view .LVU1310
 4764              	.LBB1362:
 4765              		.loc 23 81 7 view .LVU1311
 4766              	.LBB1361:
 4767              	.LBI1356:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4768              		.loc 22 288 7 view .LVU1312
 4769              	.LBB1360:
 4770              	.LBI1357:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4771              		.loc 22 390 7 view .LVU1313
 4772              	.LBB1359:
 4773              		.loc 22 397 18 is_stmt 0 view .LVU1314
 4774 010a BFF35B8F 		dmb	ish
 4775 010e 1A70     		strb	r2, [r3]
 4776 0110 BFF35B8F 		dmb	ish
 4777              	.LVL240:
 4778              		.loc 22 397 18 view .LVU1315
 4779              	.LBE1359:
 4780              	.LBE1360:
 4781              	.LBE1361:
 4782              	.LBE1362:
 4783              	.LBE1364:
 4784              	.LBE1346:
 4785              	.LBE1366:
 4786              	.LBE1370:
1506:Veno-Echo.cpp **** 
 4787              		.loc 20 1506 1 view .LVU1316
 4788 0114 BDEC028B 		vldm	sp!, {d8}
 4789              		.cfi_restore 80
 4790              		.cfi_restore 81
 4791              		.cfi_def_cfa_offset 8
 4792              	.LVL241:
1506:Veno-Echo.cpp **** 
 4793              		.loc 20 1506 1 view .LVU1317
 4794 0118 10BD     		pop	{r4, pc}
 4795              	.L271:
 4796 011a 00BF     		.align	2
 4797              	.L270:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 199


 4798 011c 18000000 		.word	.LANCHOR4+24
 4799 0120 00000000 		.word	.LANCHOR7
 4800 0124 00000000 		.word	.LANCHOR69
 4801 0128 00000000 		.word	.LANCHOR70
 4802 012c 00000000 		.word	.LANCHOR71
 4803 0130 00000000 		.word	.LANCHOR75
 4804 0134 00000000 		.word	0
 4805 0138 00000000 		.word	.LANCHOR72
 4806 013c 6F12033D 		.word	1023611503
 4807 0140 00000000 		.word	.LANCHOR73
 4808 0144 00000000 		.word	.LANCHOR74
 4809 0148 0AD7A33B 		.word	1000593162
 4810 014c 00000000 		.word	.LANCHOR76
 4811 0150 CDCCCC3D 		.word	1036831949
 4812 0154 00000000 		.word	.LANCHOR15
 4813 0158 00000000 		.word	.LANCHOR16
 4814              		.cfi_endproc
 4815              	.LFE4324:
 4817              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4818              		.align	1
 4819              		.p2align 2,,3
 4820              		.global	_Z18Update_filterXfadev
 4821              		.syntax unified
 4822              		.thumb
 4823              		.thumb_func
 4824              		.fpu fpv5-d16
 4826              	_Z18Update_filterXfadev:
 4827              	.LFB4325:
1509:Veno-Echo.cpp ****     static bool lastShift{};
 4828              		.loc 20 1509 1 is_stmt 1 view -0
 4829              		.cfi_startproc
 4830              		@ args = 0, pretend = 0, frame = 0
 4831              		@ frame_needed = 0, uses_anonymous_args = 0
1510:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4832              		.loc 20 1510 5 view .LVU1319
1511:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4833              		.loc 20 1511 5 view .LVU1320
1512:Veno-Echo.cpp **** 
 4834              		.loc 20 1512 5 view .LVU1321
1514:Veno-Echo.cpp **** 
 4835              		.loc 20 1514 5 view .LVU1322
1517:Veno-Echo.cpp **** 
 4836              		.loc 20 1517 5 view .LVU1323
1517:Veno-Echo.cpp **** 
 4837              		.loc 20 1517 45 is_stmt 0 view .LVU1324
 4838 0000 0322     		movs	r2, #3
 4839 0002 0721     		movs	r1, #7
 4840 0004 4648     		ldr	r0, .L294
1509:Veno-Echo.cpp ****     static bool lastShift{};
 4841              		.loc 20 1509 1 view .LVU1325
 4842 0006 10B5     		push	{r4, lr}
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
 4846 0008 2DED028B 		vpush.64	{d8}
 4847              		.cfi_def_cfa_offset 16
 4848              		.cfi_offset 80, -16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 200


 4849              		.cfi_offset 81, -12
1517:Veno-Echo.cpp **** 
 4850              		.loc 20 1517 45 view .LVU1326
 4851 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4852              	.LVL242:
 4853              	.LBB1371:
1519:Veno-Echo.cpp ****     {   
 4854              		.loc 20 1519 9 view .LVU1327
 4855 0010 444B     		ldr	r3, .L294+4
 4856              	.LBE1371:
1517:Veno-Echo.cpp **** 
 4857              		.loc 20 1517 45 view .LVU1328
 4858 0012 B0EE408A 		vmov.f32	s16, s0
 4859              	.LVL243:
1519:Veno-Echo.cpp ****     {   
 4860              		.loc 20 1519 5 is_stmt 1 view .LVU1329
 4861              	.LBB1401:
 4862              	.LBB1372:
1523:Veno-Echo.cpp ****         {
 4863              		.loc 20 1523 19 is_stmt 0 view .LVU1330
 4864 0016 444A     		ldr	r2, .L294+8
 4865              	.LBE1372:
1519:Veno-Echo.cpp ****     {   
 4866              		.loc 20 1519 5 view .LVU1331
 4867 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4868 001a FBB9     		cbnz	r3, .L273
 4869              	.LBB1381:
1521:Veno-Echo.cpp ****         //update pickup
 4870              		.loc 20 1521 9 is_stmt 1 view .LVU1332
1523:Veno-Echo.cpp ****         {
 4871              		.loc 20 1523 9 view .LVU1333
 4872 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4873 001e 49B3     		cbz	r1, .L274
1525:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4874              		.loc 20 1525 13 view .LVU1334
1526:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4875              		.loc 20 1526 32 is_stmt 0 view .LVU1335
 4876 0020 4248     		ldr	r0, .L294+12
1527:Veno-Echo.cpp ****         }
 4877              		.loc 20 1527 29 view .LVU1336
 4878 0022 4349     		ldr	r1, .L294+16
1525:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4879              		.loc 20 1525 23 view .LVU1337
 4880 0024 1370     		strb	r3, [r2]
1526:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4881              		.loc 20 1526 13 is_stmt 1 view .LVU1338
1526:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4882              		.loc 20 1526 32 is_stmt 0 view .LVU1339
 4883 0026 0370     		strb	r3, [r0]
1527:Veno-Echo.cpp ****         }
 4884              		.loc 20 1527 13 is_stmt 1 view .LVU1340
1527:Veno-Echo.cpp ****         }
 4885              		.loc 20 1527 29 is_stmt 0 view .LVU1341
 4886 0028 81ED000A 		vstr.32	s0, [r1]
 4887              	.L275:
1541:Veno-Echo.cpp **** 
 4888              		.loc 20 1541 9 is_stmt 1 view .LVU1342
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 201


 4889              	.LVL244:
1543:Veno-Echo.cpp ****         {
 4890              		.loc 20 1543 9 view .LVU1343
1551:Veno-Echo.cpp ****         }
 4891              		.loc 20 1551 13 view .LVU1344
1551:Veno-Echo.cpp ****         }
 4892              		.loc 20 1551 38 is_stmt 0 view .LVU1345
 4893 002c 414B     		ldr	r3, .L294+20
 4894 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4895 0032 0120     		movs	r0, #1
 4896 0034 DFED400A 		vldr.32	s1, .L294+24
 4897 0038 93ED000A 		vldr.32	s0, [r3]
 4898              	.LVL245:
1551:Veno-Echo.cpp ****         }
 4899              		.loc 20 1551 38 view .LVU1346
 4900 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4901              	.LVL246:
 4902              	.L285:
1554:Veno-Echo.cpp ****     }
 4903              		.loc 20 1554 9 is_stmt 1 view .LVU1347
 4904              	.LBB1373:
 4905              	.LBI1373:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4906              		.loc 25 135 13 view .LVU1348
 4907              	.LBB1374:
 4908              		.loc 25 137 5 view .LVU1349
 4909              		.loc 25 137 9 is_stmt 0 view .LVU1350
 4910 0040 3E4B     		ldr	r3, .L294+28
 4911 0042 9FED3F7A 		vldr.32	s14, .L294+32
 4912 0046 D3ED007A 		vldr.32	s15, [r3]
 4913              		.loc 25 137 24 view .LVU1351
 4914 004a 30EE670A 		vsub.f32	s0, s0, s15
 4915              	.LVL247:
 4916              		.loc 25 137 24 view .LVU1352
 4917              	.LBE1374:
 4918              	.LBE1373:
 4919              	.LBE1381:
 4920              	.LBE1401:
1597:Veno-Echo.cpp **** 
 4921              		.loc 20 1597 1 view .LVU1353
 4922 004e BDEC028B 		vldm	sp!, {d8}
 4923              		.cfi_remember_state
 4924              		.cfi_restore 80
 4925              		.cfi_restore 81
 4926              		.cfi_def_cfa_offset 8
 4927              	.LVL248:
 4928              	.LBB1402:
 4929              	.LBB1382:
 4930              	.LBB1376:
 4931              	.LBB1375:
 4932              		.loc 25 137 9 view .LVU1354
 4933 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4934 0056 C3ED007A 		vstr.32	s15, [r3]
 4935              	.LBE1375:
 4936              	.LBE1376:
 4937              	.LBE1382:
 4938              	.LBE1402:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 202


1597:Veno-Echo.cpp **** 
 4939              		.loc 20 1597 1 view .LVU1355
 4940 005a 10BD     		pop	{r4, pc}
 4941              	.LVL249:
 4942              	.L273:
 4943              		.cfi_restore_state
 4944              	.LBB1403:
 4945              	.LBB1383:
1559:Veno-Echo.cpp **** 
 4946              		.loc 20 1559 9 is_stmt 1 view .LVU1356
1561:Veno-Echo.cpp ****         {
 4947              		.loc 20 1561 9 view .LVU1357
 4948 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4949 005e 4BBB     		cbnz	r3, .L279
1563:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4950              		.loc 20 1563 13 view .LVU1358
1563:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4951              		.loc 20 1563 23 is_stmt 0 view .LVU1359
 4952 0060 0124     		movs	r4, #1
1564:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4953              		.loc 20 1564 32 view .LVU1360
 4954 0062 3848     		ldr	r0, .L294+36
1565:Veno-Echo.cpp ****         }
 4955              		.loc 20 1565 29 view .LVU1361
 4956 0064 3849     		ldr	r1, .L294+40
1563:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4957              		.loc 20 1563 23 view .LVU1362
 4958 0066 1470     		strb	r4, [r2]
1564:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4959              		.loc 20 1564 13 is_stmt 1 view .LVU1363
1564:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4960              		.loc 20 1564 32 is_stmt 0 view .LVU1364
 4961 0068 0370     		strb	r3, [r0]
1565:Veno-Echo.cpp ****         }
 4962              		.loc 20 1565 13 is_stmt 1 view .LVU1365
1565:Veno-Echo.cpp ****         }
 4963              		.loc 20 1565 29 is_stmt 0 view .LVU1366
 4964 006a 81ED000A 		vstr.32	s0, [r1]
 4965              	.L272:
1565:Veno-Echo.cpp ****         }
 4966              		.loc 20 1565 29 view .LVU1367
 4967              	.LBE1383:
 4968              	.LBE1403:
1597:Veno-Echo.cpp **** 
 4969              		.loc 20 1597 1 view .LVU1368
 4970 006e BDEC028B 		vldm	sp!, {d8}
 4971              		.cfi_remember_state
 4972              		.cfi_restore 80
 4973              		.cfi_restore 81
 4974              		.cfi_def_cfa_offset 8
 4975 0072 10BD     		pop	{r4, pc}
 4976              	.L274:
 4977              		.cfi_restore_state
 4978              	.LBB1404:
 4979              	.LBB1398:
1532:Veno-Echo.cpp ****             {
 4980              		.loc 20 1532 13 is_stmt 1 view .LVU1369
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 203


1532:Veno-Echo.cpp ****             {
 4981              		.loc 20 1532 16 is_stmt 0 view .LVU1370
 4982 0074 2D4B     		ldr	r3, .L294+12
1532:Veno-Echo.cpp ****             {
 4983              		.loc 20 1532 13 view .LVU1371
 4984 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4985 0078 7AB9     		cbnz	r2, .L276
1534:Veno-Echo.cpp ****                 {
 4986              		.loc 20 1534 17 is_stmt 1 view .LVU1372
 4987              	.LVL250:
 4988              	.LBB1377:
 4989              	.LBI1377:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4990              		.loc 21 75 3 view .LVU1373
 4991              	.LBB1378:
 4992              		.loc 21 76 5 view .LVU1374
 4993              		.loc 21 76 5 is_stmt 0 view .LVU1375
 4994              	.LBE1378:
 4995              	.LBE1377:
1534:Veno-Echo.cpp ****                 {
 4996              		.loc 20 1534 23 view .LVU1376
 4997 007a 2D4A     		ldr	r2, .L294+16
1534:Veno-Echo.cpp ****                 {
 4998              		.loc 20 1534 17 view .LVU1377
 4999 007c 9FED337A 		vldr.32	s14, .L294+44
1534:Veno-Echo.cpp ****                 {
 5000              		.loc 20 1534 23 view .LVU1378
 5001 0080 D2ED007A 		vldr.32	s15, [r2]
 5002 0084 70EE677A 		vsub.f32	s15, s0, s15
 5003              	.LBB1380:
 5004              	.LBB1379:
 5005              		.loc 21 76 31 view .LVU1379
 5006 0088 F0EEE77A 		vabs.f32	s15, s15
 5007              	.LBE1379:
 5008              	.LBE1380:
1534:Veno-Echo.cpp ****                 {
 5009              		.loc 20 1534 17 view .LVU1380
 5010 008c F4EEC77A 		vcmpe.f32	s15, s14
 5011 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5012 0094 CADD     		ble	.L275
1536:Veno-Echo.cpp ****                 }
 5013              		.loc 20 1536 21 is_stmt 1 view .LVU1381
1536:Veno-Echo.cpp ****                 }
 5014              		.loc 20 1536 40 is_stmt 0 view .LVU1382
 5015 0096 0122     		movs	r2, #1
 5016 0098 1A70     		strb	r2, [r3]
 5017              	.L276:
1541:Veno-Echo.cpp **** 
 5018              		.loc 20 1541 9 is_stmt 1 view .LVU1383
 5019              	.LVL251:
1543:Veno-Echo.cpp ****         {
 5020              		.loc 20 1543 9 view .LVU1384
1545:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5021              		.loc 20 1545 13 view .LVU1385
1545:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5022              		.loc 20 1545 38 is_stmt 0 view .LVU1386
 5023 009a B7EE001A 		vmov.f32	s2, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 204


 5024 009e 0120     		movs	r0, #1
 5025 00a0 B0EE480A 		vmov.f32	s0, s16
 5026              	.LVL252:
1545:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5027              		.loc 20 1545 38 view .LVU1387
 5028 00a4 DFED240A 		vldr.32	s1, .L294+24
 5029 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5030              	.LVL253:
1546:Veno-Echo.cpp ****         }
 5031              		.loc 20 1546 30 view .LVU1388
 5032 00ac 214B     		ldr	r3, .L294+20
 5033              	.LVL254:
1546:Veno-Echo.cpp ****         }
 5034              		.loc 20 1546 13 is_stmt 1 view .LVU1389
1546:Veno-Echo.cpp ****         }
 5035              		.loc 20 1546 30 is_stmt 0 view .LVU1390
 5036 00ae 83ED008A 		vstr.32	s16, [r3]
 5037 00b2 C5E7     		b	.L285
 5038              	.LVL255:
 5039              	.L279:
1546:Veno-Echo.cpp ****         }
 5040              		.loc 20 1546 30 view .LVU1391
 5041              	.LBE1398:
 5042              	.LBB1399:
1570:Veno-Echo.cpp ****             {
 5043              		.loc 20 1570 13 is_stmt 1 view .LVU1392
1570:Veno-Echo.cpp ****             {
 5044              		.loc 20 1570 16 is_stmt 0 view .LVU1393
 5045 00b4 234B     		ldr	r3, .L294+36
1570:Veno-Echo.cpp ****             {
 5046              		.loc 20 1570 13 view .LVU1394
 5047 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5048 00b8 7AB9     		cbnz	r2, .L281
1572:Veno-Echo.cpp ****                 {
 5049              		.loc 20 1572 17 is_stmt 1 view .LVU1395
 5050              	.LVL256:
 5051              	.LBB1384:
 5052              	.LBI1384:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5053              		.loc 21 75 3 view .LVU1396
 5054              	.LBB1385:
 5055              		.loc 21 76 5 view .LVU1397
 5056              		.loc 21 76 5 is_stmt 0 view .LVU1398
 5057              	.LBE1385:
 5058              	.LBE1384:
1572:Veno-Echo.cpp ****                 {
 5059              		.loc 20 1572 23 view .LVU1399
 5060 00ba 234A     		ldr	r2, .L294+40
1572:Veno-Echo.cpp ****                 {
 5061              		.loc 20 1572 17 view .LVU1400
 5062 00bc 9FED237A 		vldr.32	s14, .L294+44
1572:Veno-Echo.cpp ****                 {
 5063              		.loc 20 1572 23 view .LVU1401
 5064 00c0 D2ED007A 		vldr.32	s15, [r2]
 5065 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5066              	.LBB1387:
 5067              	.LBB1386:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 205


 5068              		.loc 21 76 31 view .LVU1402
 5069 00c8 F0EEE77A 		vabs.f32	s15, s15
 5070              	.LBE1386:
 5071              	.LBE1387:
1572:Veno-Echo.cpp ****                 {
 5072              		.loc 20 1572 17 view .LVU1403
 5073 00cc F4EEC77A 		vcmpe.f32	s15, s14
 5074 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5075 00d4 CBDD     		ble	.L272
1574:Veno-Echo.cpp ****                 }
 5076              		.loc 20 1574 21 is_stmt 1 view .LVU1404
1574:Veno-Echo.cpp ****                 }
 5077              		.loc 20 1574 40 is_stmt 0 view .LVU1405
 5078 00d6 0122     		movs	r2, #1
 5079 00d8 1A70     		strb	r2, [r3]
 5080              	.L281:
1579:Veno-Echo.cpp ****         {
 5081              		.loc 20 1579 9 is_stmt 1 view .LVU1406
1581:Veno-Echo.cpp ****             {
 5082              		.loc 20 1581 13 view .LVU1407
 5083 00da DFED1D7A 		vldr.32	s15, .L294+48
 5084 00de B4EEE78A 		vcmpe.f32	s16, s15
 5085 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5086 00e6 0FD5     		bpl	.L293
1583:Veno-Echo.cpp ****             }
 5087              		.loc 20 1583 17 view .LVU1408
1583:Veno-Echo.cpp ****             }
 5088              		.loc 20 1583 29 is_stmt 0 view .LVU1409
 5089 00e8 1A4B     		ldr	r3, .L294+52
 5090 00ea 0022     		movs	r2, #0
 5091 00ec 1A70     		strb	r2, [r3]
 5092              	.L283:
1593:Veno-Echo.cpp ****             save_flag = true;
 5093              		.loc 20 1593 13 is_stmt 1 view .LVU1410
1593:Veno-Echo.cpp ****             save_flag = true;
 5094              		.loc 20 1593 39 is_stmt 0 view .LVU1411
 5095 00ee 1A49     		ldr	r1, .L294+56
 5096              	.LBB1388:
 5097              	.LBB1389:
 5098              	.LBB1390:
 5099              	.LBB1391:
 5100              	.LBB1392:
 5101              		.loc 22 397 18 view .LVU1412
 5102 00f0 0122     		movs	r2, #1
 5103 00f2 1A4B     		ldr	r3, .L294+60
 5104              	.LBE1392:
 5105              	.LBE1391:
 5106              	.LBE1390:
 5107              	.LBE1389:
 5108              	.LBE1388:
1593:Veno-Echo.cpp ****             save_flag = true;
 5109              		.loc 20 1593 39 view .LVU1413
 5110 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1594:Veno-Echo.cpp ****         }  
 5111              		.loc 20 1594 13 is_stmt 1 view .LVU1414
 5112              	.LVL257:
 5113              	.LBB1397:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 206


 5114              	.LBI1388:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5115              		.loc 23 80 5 view .LVU1415
 5116              	.LBB1396:
 5117              		.loc 23 81 7 view .LVU1416
 5118              	.LBB1395:
 5119              	.LBI1390:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5120              		.loc 22 288 7 view .LVU1417
 5121              	.LBB1394:
 5122              	.LBI1391:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5123              		.loc 22 390 7 view .LVU1418
 5124              	.LBB1393:
 5125              		.loc 22 397 18 is_stmt 0 view .LVU1419
 5126 00f8 BFF35B8F 		dmb	ish
 5127 00fc 1A70     		strb	r2, [r3]
 5128 00fe BFF35B8F 		dmb	ish
 5129              	.LVL258:
 5130              		.loc 22 397 18 view .LVU1420
 5131              	.LBE1393:
 5132              	.LBE1394:
 5133              	.LBE1395:
 5134              	.LBE1396:
 5135              	.LBE1397:
 5136              	.LBE1399:
 5137              	.LBE1404:
1597:Veno-Echo.cpp **** 
 5138              		.loc 20 1597 1 view .LVU1421
 5139 0102 BDEC028B 		vldm	sp!, {d8}
 5140              		.cfi_remember_state
 5141              		.cfi_restore 80
 5142              		.cfi_restore 81
 5143              		.cfi_def_cfa_offset 8
 5144 0106 10BD     		pop	{r4, pc}
 5145              	.L293:
 5146              		.cfi_restore_state
 5147              	.LBB1405:
 5148              	.LBB1400:
1585:Veno-Echo.cpp ****             {
 5149              		.loc 20 1585 18 is_stmt 1 view .LVU1422
 5150 0108 DFED157A 		vldr.32	s15, .L294+64
 5151 010c B4EEE78A 		vcmpe.f32	s16, s15
 5152 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5153 0114 EBDD     		ble	.L283
1587:Veno-Echo.cpp ****             }
 5154              		.loc 20 1587 17 view .LVU1423
1587:Veno-Echo.cpp ****             }
 5155              		.loc 20 1587 29 is_stmt 0 view .LVU1424
 5156 0116 0F4B     		ldr	r3, .L294+52
 5157 0118 0122     		movs	r2, #1
 5158 011a 1A70     		strb	r2, [r3]
 5159 011c E7E7     		b	.L283
 5160              	.L295:
 5161 011e 00BF     		.align	2
 5162              	.L294:
 5163 0120 18000000 		.word	.LANCHOR4+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 207


 5164 0124 00000000 		.word	.LANCHOR7
 5165 0128 00000000 		.word	.LANCHOR77
 5166 012c 00000000 		.word	.LANCHOR78
 5167 0130 00000000 		.word	.LANCHOR79
 5168 0134 00000000 		.word	.LANCHOR84
 5169 0138 00000000 		.word	0
 5170 013c 00000000 		.word	.LANCHOR80
 5171 0140 6F12033D 		.word	1023611503
 5172 0144 00000000 		.word	.LANCHOR81
 5173 0148 00000000 		.word	.LANCHOR82
 5174 014c 0AD7A33B 		.word	1000593162
 5175 0150 6666E63E 		.word	1055286886
 5176 0154 00000000 		.word	.LANCHOR83
 5177 0158 00000000 		.word	.LANCHOR15
 5178 015c 00000000 		.word	.LANCHOR16
 5179 0160 CDCC0C3F 		.word	1057803469
 5180              	.LBE1400:
 5181              	.LBE1405:
 5182              		.cfi_endproc
 5183              	.LFE4325:
 5185              		.section	.text._Z8GetModCVv,"ax",%progbits
 5186              		.align	1
 5187              		.p2align 2,,3
 5188              		.global	_Z8GetModCVv
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv5-d16
 5194              	_Z8GetModCVv:
 5195              	.LFB4326:
1600:Veno-Echo.cpp ****     //get modulation CV input
 5196              		.loc 20 1600 1 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
1602:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5200              		.loc 20 1602 5 view .LVU1426
1600:Veno-Echo.cpp ****     //get modulation CV input
 5201              		.loc 20 1600 1 is_stmt 0 view .LVU1427
 5202 0000 08B5     		push	{r3, lr}
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 3, -8
 5205              		.cfi_offset 14, -4
1602:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5206              		.loc 20 1602 30 view .LVU1428
 5207 0002 0621     		movs	r1, #6
 5208 0004 0648     		ldr	r0, .L298
 5209 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5210              	.LVL259:
 5211 000a 0020     		movs	r0, #0
 5212 000c 9FED051A 		vldr.32	s2, .L298+4
 5213 0010 DFED050A 		vldr.32	s1, .L298+8
 5214 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5215              	.LVL260:
1602:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5216              		.loc 20 1602 23 view .LVU1429
 5217 0018 044B     		ldr	r3, .L298+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 208


 5218 001a 83ED000A 		vstr.32	s0, [r3]
1604:Veno-Echo.cpp **** 
 5219              		.loc 20 1604 1 view .LVU1430
 5220 001e 08BD     		pop	{r3, pc}
 5221              	.L299:
 5222              		.align	2
 5223              	.L298:
 5224 0020 18000000 		.word	.LANCHOR4+24
 5225 0024 00004843 		.word	1128792064
 5226 0028 000048C3 		.word	3276275712
 5227 002c 00000000 		.word	.LANCHOR85
 5228              		.cfi_endproc
 5229              	.LFE4326:
 5231              		.section	.text._Z10Update_Modv,"ax",%progbits
 5232              		.align	1
 5233              		.p2align 2,,3
 5234              		.global	_Z10Update_Modv
 5235              		.syntax unified
 5236              		.thumb
 5237              		.thumb_func
 5238              		.fpu fpv5-d16
 5240              	_Z10Update_Modv:
 5241              	.LFB4327:
1607:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5242              		.loc 20 1607 1 is_stmt 1 view -0
 5243              		.cfi_startproc
 5244              		@ args = 0, pretend = 0, frame = 0
 5245              		@ frame_needed = 0, uses_anonymous_args = 0
1608:Veno-Echo.cpp ****     static float modulation_CV{};
 5246              		.loc 20 1608 5 view .LVU1432
1609:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5247              		.loc 20 1609 5 view .LVU1433
1610:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5248              		.loc 20 1610 5 view .LVU1434
 5249              	.LVL261:
 5250              	.LBB1406:
 5251              	.LBI1406:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5252              		.loc 25 135 13 view .LVU1435
 5253              	.LBB1407:
 5254              		.loc 25 137 5 view .LVU1436
 5255              	.LBE1407:
 5256              	.LBE1406:
1607:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5257              		.loc 20 1607 1 is_stmt 0 view .LVU1437
 5258 0000 38B5     		push	{r3, r4, r5, lr}
 5259              		.cfi_def_cfa_offset 16
 5260              		.cfi_offset 3, -16
 5261              		.cfi_offset 4, -12
 5262              		.cfi_offset 5, -8
 5263              		.cfi_offset 14, -4
1610:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5264              		.loc 20 1610 13 view .LVU1438
 5265 0002 154A     		ldr	r2, .L302
 5266              	.LBB1414:
 5267              	.LBB1408:
 5268              		.loc 25 137 9 view .LVU1439
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 209


 5269 0004 154C     		ldr	r4, .L302+4
 5270              	.LBE1408:
 5271              	.LBE1414:
 5272              	.LBB1415:
 5273              	.LBB1416:
 5274 0006 164D     		ldr	r5, .L302+8
 5275              	.LBE1416:
 5276              	.LBE1415:
1611:Veno-Echo.cpp ****     //calculate InternalMod
 5277              		.loc 20 1611 13 view .LVU1440
 5278 0008 164B     		ldr	r3, .L302+12
 5279              	.LBB1422:
 5280              	.LBB1409:
 5281              		.loc 25 137 9 view .LVU1441
 5282 000a 94ED007A 		vldr.32	s14, [r4]
 5283              	.LBE1409:
 5284              	.LBE1422:
 5285              	.LBB1423:
 5286              	.LBB1417:
 5287 000e D5ED007A 		vldr.32	s15, [r5]
 5288              	.LBE1417:
 5289              	.LBE1423:
 5290              	.LBB1424:
 5291              	.LBB1410:
 5292              		.loc 25 137 24 view .LVU1442
 5293 0012 92ED006A 		vldr.32	s12, [r2]
 5294              	.LBE1410:
 5295              	.LBE1424:
 5296              	.LBB1425:
 5297              	.LBB1418:
 5298 0016 D3ED006A 		vldr.32	s13, [r3]
 5299              	.LBE1418:
 5300              	.LBE1425:
 5301              	.LBB1426:
 5302              	.LBB1411:
 5303 001a 36EE476A 		vsub.f32	s12, s12, s14
 5304              		.loc 25 137 9 view .LVU1443
 5305 001e DFED125A 		vldr.32	s11, .L302+16
 5306              	.LBE1411:
 5307              	.LBE1426:
 5308              	.LBB1427:
 5309              	.LBB1419:
 5310              		.loc 25 137 24 view .LVU1444
 5311 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5312              	.LBE1419:
 5313              	.LBE1427:
1613:Veno-Echo.cpp ****     //apply modulation to delay lines
 5314              		.loc 20 1613 34 view .LVU1445
 5315 0026 1148     		ldr	r0, .L302+20
 5316              	.LBB1428:
 5317              	.LBB1412:
 5318              		.loc 25 137 9 view .LVU1446
 5319 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5320              	.LBE1412:
 5321              	.LBE1428:
 5322              	.LBB1429:
 5323              	.LBB1420:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 210


 5324 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5325              	.LBE1420:
 5326              	.LBE1429:
 5327              	.LBB1430:
 5328              	.LBB1413:
 5329 0030 84ED007A 		vstr.32	s14, [r4]
 5330              	.LVL262:
 5331              		.loc 25 137 9 view .LVU1447
 5332              	.LBE1413:
 5333              	.LBE1430:
1611:Veno-Echo.cpp ****     //calculate InternalMod
 5334              		.loc 20 1611 5 is_stmt 1 view .LVU1448
 5335              	.LBB1431:
 5336              	.LBI1415:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5337              		.loc 25 135 13 view .LVU1449
 5338              	.LBB1421:
 5339              		.loc 25 137 5 view .LVU1450
 5340              		.loc 25 137 9 is_stmt 0 view .LVU1451
 5341 0034 C5ED007A 		vstr.32	s15, [r5]
 5342              	.LVL263:
 5343              		.loc 25 137 9 view .LVU1452
 5344              	.LBE1421:
 5345              	.LBE1431:
1613:Veno-Echo.cpp ****     //apply modulation to delay lines
 5346              		.loc 20 1613 5 is_stmt 1 view .LVU1453
1613:Veno-Echo.cpp ****     //apply modulation to delay lines
 5347              		.loc 20 1613 34 is_stmt 0 view .LVU1454
 5348 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5349              	.LVL264:
1615:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5350              		.loc 20 1615 5 is_stmt 1 view .LVU1455
1615:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5351              		.loc 20 1615 40 is_stmt 0 view .LVU1456
 5352 003c 95ED007A 		vldr.32	s14, [r5]
 5353 0040 D4ED007A 		vldr.32	s15, [r4]
 5354              	.LBB1432:
 5355              	.LBB1433:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 211


 5356              		.loc 17 69 43 view .LVU1457
 5357 0044 0A4A     		ldr	r2, .L302+24
 5358              	.LBE1433:
 5359              	.LBE1432:
1615:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5360              		.loc 20 1615 40 view .LVU1458
 5361 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5362              	.LBB1436:
 5363              	.LBI1432:
 5364              		.loc 17 69 6 is_stmt 1 view .LVU1459
 5365              	.LVL265:
 5366              	.LBB1434:
 5367              		.loc 17 69 38 view .LVU1460
 5368              	.LBE1434:
 5369              	.LBE1436:
 5370              	.LBB1437:
 5371              	.LBB1438:
 5372              		.loc 17 69 43 is_stmt 0 view .LVU1461
 5373 004a 0A4B     		ldr	r3, .L302+28
 5374              	.LBE1438:
 5375              	.LBE1437:
 5376              	.LBB1440:
 5377              	.LBB1435:
 5378 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5379              	.LBE1435:
 5380              	.LBE1440:
1616:Veno-Echo.cpp **** }
 5381              		.loc 20 1616 5 is_stmt 1 view .LVU1462
 5382              	.LVL266:
 5383              	.LBB1441:
 5384              	.LBI1437:
 5385              		.loc 17 69 6 view .LVU1463
 5386              	.LBB1439:
 5387              		.loc 17 69 38 view .LVU1464
 5388              		.loc 17 69 43 is_stmt 0 view .LVU1465
 5389 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5390              	.LBE1439:
 5391              	.LBE1441:
1617:Veno-Echo.cpp **** 
 5392              		.loc 20 1617 1 view .LVU1466
 5393 0054 38BD     		pop	{r3, r4, r5, pc}
 5394              	.L303:
 5395 0056 00BF     		.align	2
 5396              	.L302:
 5397 0058 00000000 		.word	.LANCHOR85
 5398 005c 00000000 		.word	.LANCHOR86
 5399 0060 00000000 		.word	.LANCHOR87
 5400 0064 00000000 		.word	.LANCHOR68
 5401 0068 0AD7233C 		.word	1008981770
 5402 006c 00000000 		.word	.LANCHOR76
 5403 0070 00000000 		.word	.LANCHOR0
 5404 0074 00000000 		.word	.LANCHOR1
 5405              		.cfi_endproc
 5406              	.LFE4327:
 5408              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5409              		.align	1
 5410              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 212


 5411              		.global	_Z11UpdateClockv
 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5415              		.fpu fpv5-d16
 5417              	_Z11UpdateClockv:
 5418              	.LFB4328:
1620:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
 5419              		.loc 20 1620 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 0
 5422              		@ frame_needed = 0, uses_anonymous_args = 0
1621:Veno-Echo.cpp **** 
 5423              		.loc 20 1621 5 view .LVU1468
1623:Veno-Echo.cpp ****     //if clock in pulse received
 5424              		.loc 20 1623 5 view .LVU1469
1620:Veno-Echo.cpp ****     static uint32_t ClockCounter{};
 5425              		.loc 20 1620 1 is_stmt 0 view .LVU1470
 5426 0000 70B5     		push	{r4, r5, r6, lr}
 5427              		.cfi_def_cfa_offset 16
 5428              		.cfi_offset 4, -16
 5429              		.cfi_offset 5, -12
 5430              		.cfi_offset 6, -8
 5431              		.cfi_offset 14, -4
1623:Veno-Echo.cpp ****     //if clock in pulse received
 5432              		.loc 20 1623 18 view .LVU1471
 5433 0002 144C     		ldr	r4, .L316
1625:Veno-Echo.cpp ****     {   
 5434              		.loc 20 1625 21 view .LVU1472
 5435 0004 1448     		ldr	r0, .L316+4
1623:Veno-Echo.cpp ****     //if clock in pulse received
 5436              		.loc 20 1623 18 view .LVU1473
 5437 0006 2368     		ldr	r3, [r4]
 5438 0008 0133     		adds	r3, r3, #1
 5439 000a 2360     		str	r3, [r4]
1625:Veno-Echo.cpp ****     {   
 5440              		.loc 20 1625 5 is_stmt 1 view .LVU1474
1625:Veno-Echo.cpp ****     {   
 5441              		.loc 20 1625 21 is_stmt 0 view .LVU1475
 5442 000c FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 5443              	.LVL267:
1625:Veno-Echo.cpp ****     {   
 5444              		.loc 20 1625 5 view .LVU1476
 5445 0010 00B9     		cbnz	r0, .L314
1638:Veno-Echo.cpp **** 
 5446              		.loc 20 1638 1 view .LVU1477
 5447 0012 70BD     		pop	{r4, r5, r6, pc}
 5448              	.L314:
 5449              	.LBB1449:
 5450              	.LBI1449:
1619:Veno-Echo.cpp **** {
 5451              		.loc 20 1619 6 is_stmt 1 view .LVU1478
 5452              	.LBB1450:
1627:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5453              		.loc 20 1627 9 view .LVU1479
1627:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5454              		.loc 20 1627 15 is_stmt 0 view .LVU1480
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 213


 5455 0014 114D     		ldr	r5, .L316+8
 5456 0016 0126     		movs	r6, #1
1629:Veno-Echo.cpp ****             {
 5457              		.loc 20 1629 31 view .LVU1481
 5458 0018 2168     		ldr	r1, [r4]
 5459 001a 1148     		ldr	r0, .L316+12
1627:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5460              		.loc 20 1627 15 view .LVU1482
 5461 001c 2E70     		strb	r6, [r5]
1629:Veno-Echo.cpp ****             {
 5462              		.loc 20 1629 13 is_stmt 1 view .LVU1483
1629:Veno-Echo.cpp ****             {
 5463              		.loc 20 1629 31 is_stmt 0 view .LVU1484
 5464 001e FFF7FEFF 		bl	_ZN8Taptempo5clockEm
 5465              	.LVL268:
1629:Veno-Echo.cpp ****             {
 5466              		.loc 20 1629 13 view .LVU1485
 5467 0022 18B9     		cbnz	r0, .L315
 5468              	.L306:
1635:Veno-Echo.cpp ****             DEBUG = false;
 5469              		.loc 20 1635 13 is_stmt 1 view .LVU1486
1635:Veno-Echo.cpp ****             DEBUG = false;
 5470              		.loc 20 1635 26 is_stmt 0 view .LVU1487
 5471 0024 0023     		movs	r3, #0
 5472 0026 2360     		str	r3, [r4]
1636:Veno-Echo.cpp ****     } 
 5473              		.loc 20 1636 13 is_stmt 1 view .LVU1488
1636:Veno-Echo.cpp ****     } 
 5474              		.loc 20 1636 19 is_stmt 0 view .LVU1489
 5475 0028 2B70     		strb	r3, [r5]
 5476              	.LBE1450:
 5477              	.LBE1449:
1638:Veno-Echo.cpp **** 
 5478              		.loc 20 1638 1 view .LVU1490
 5479 002a 70BD     		pop	{r4, r5, r6, pc}
 5480              	.L315:
 5481              	.LBB1462:
 5482              	.LBB1461:
1631:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5483              		.loc 20 1631 17 is_stmt 1 view .LVU1491
1631:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5484              		.loc 20 1631 39 is_stmt 0 view .LVU1492
 5485 002c 0C48     		ldr	r0, .L316+12
 5486 002e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5487              	.LVL269:
 5488 0032 0C48     		ldr	r0, .L316+16
 5489 0034 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5490              	.LVL270:
1632:Veno-Echo.cpp ****                 save_flag = true;
 5491              		.loc 20 1632 17 is_stmt 1 view .LVU1493
1632:Veno-Echo.cpp ****                 save_flag = true;
 5492              		.loc 20 1632 63 is_stmt 0 view .LVU1494
 5493 0038 0948     		ldr	r0, .L316+12
 5494 003a FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5495              	.LVL271:
1632:Veno-Echo.cpp ****                 save_flag = true;
 5496              		.loc 20 1632 39 view .LVU1495
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 214


 5497 003e 0A4A     		ldr	r2, .L316+20
 5498              	.LBB1451:
 5499              	.LBB1452:
 5500              	.LBB1453:
 5501              	.LBB1454:
 5502              	.LBB1455:
 5503              		.loc 22 397 18 view .LVU1496
 5504 0040 0A4B     		ldr	r3, .L316+24
 5505              	.LBE1455:
 5506              	.LBE1454:
 5507              	.LBE1453:
 5508              	.LBE1452:
 5509              	.LBE1451:
1632:Veno-Echo.cpp ****                 save_flag = true;
 5510              		.loc 20 1632 39 view .LVU1497
 5511 0042 82ED080A 		vstr.32	s0, [r2, #32]
1633:Veno-Echo.cpp ****             }
 5512              		.loc 20 1633 17 is_stmt 1 view .LVU1498
 5513              	.LVL272:
 5514              	.LBB1460:
 5515              	.LBI1451:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5516              		.loc 23 80 5 view .LVU1499
 5517              	.LBB1459:
 5518              		.loc 23 81 7 view .LVU1500
 5519              	.LBB1458:
 5520              	.LBI1453:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5521              		.loc 22 288 7 view .LVU1501
 5522              	.LBB1457:
 5523              	.LBI1454:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5524              		.loc 22 390 7 view .LVU1502
 5525              	.LBB1456:
 5526              		.loc 22 397 18 is_stmt 0 view .LVU1503
 5527 0046 BFF35B8F 		dmb	ish
 5528 004a 1E70     		strb	r6, [r3]
 5529 004c BFF35B8F 		dmb	ish
 5530              	.LVL273:
 5531              		.loc 22 397 18 view .LVU1504
 5532              	.LBE1456:
 5533              	.LBE1457:
 5534              	.LBE1458:
 5535              		.loc 23 81 35 view .LVU1505
 5536 0050 E8E7     		b	.L306
 5537              	.L317:
 5538 0052 00BF     		.align	2
 5539              	.L316:
 5540 0054 00000000 		.word	.LANCHOR88
 5541 0058 00000000 		.word	.LANCHOR89
 5542 005c 00000000 		.word	.LANCHOR90
 5543 0060 00000000 		.word	.LANCHOR26
 5544 0064 00000000 		.word	.LANCHOR91
 5545 0068 00000000 		.word	.LANCHOR15
 5546 006c 00000000 		.word	.LANCHOR16
 5547              	.LBE1459:
 5548              	.LBE1460:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 215


 5549              	.LBE1461:
 5550              	.LBE1462:
 5551              		.cfi_endproc
 5552              	.LFE4328:
 5554              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5555              		.align	1
 5556              		.p2align 2,,3
 5557              		.global	_Z21Update_DelayBaseTempov
 5558              		.syntax unified
 5559              		.thumb
 5560              		.thumb_func
 5561              		.fpu fpv5-d16
 5563              	_Z21Update_DelayBaseTempov:
 5564              	.LFB4330:
1791:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5565              		.loc 20 1791 1 is_stmt 1 view -0
 5566              		.cfi_startproc
 5567              		@ args = 0, pretend = 0, frame = 0
 5568              		@ frame_needed = 0, uses_anonymous_args = 0
1792:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5569              		.loc 20 1792 5 view .LVU1507
1791:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5570              		.loc 20 1791 1 is_stmt 0 view .LVU1508
 5571 0000 08B5     		push	{r3, lr}
 5572              		.cfi_def_cfa_offset 8
 5573              		.cfi_offset 3, -8
 5574              		.cfi_offset 14, -4
1792:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5575              		.loc 20 1792 49 view .LVU1509
 5576 0002 0648     		ldr	r0, .L320
 5577 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5578              	.LVL274:
 5579              	.LBB1463:
 5580              	.LBI1463:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5581              		.loc 17 71 6 is_stmt 1 view .LVU1510
 5582              	.LBB1464:
 5583              		.loc 17 71 39 view .LVU1511
 5584              		.loc 17 71 50 is_stmt 0 view .LVU1512
 5585 0008 054B     		ldr	r3, .L320+4
 5586              	.LBE1464:
 5587              	.LBE1463:
1793:Veno-Echo.cpp **** }
 5588              		.loc 20 1793 49 view .LVU1513
 5589 000a 0448     		ldr	r0, .L320
 5590              	.LBB1466:
 5591              	.LBB1465:
 5592              		.loc 17 71 50 view .LVU1514
 5593 000c 83ED480A 		vstr.32	s0, [r3, #288]
 5594              	.LBE1465:
 5595              	.LBE1466:
1793:Veno-Echo.cpp **** }
 5596              		.loc 20 1793 5 is_stmt 1 view .LVU1515
1793:Veno-Echo.cpp **** }
 5597              		.loc 20 1793 49 is_stmt 0 view .LVU1516
 5598 0010 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 216


 5599              	.LVL275:
 5600              	.LBB1467:
 5601              	.LBI1467:
 5602              		.loc 17 71 6 is_stmt 1 view .LVU1517
 5603              	.LBB1468:
 5604              		.loc 17 71 39 view .LVU1518
 5605              		.loc 17 71 50 is_stmt 0 view .LVU1519
 5606 0014 034B     		ldr	r3, .L320+8
 5607 0016 83ED480A 		vstr.32	s0, [r3, #288]
 5608              	.LBE1468:
 5609              	.LBE1467:
1794:Veno-Echo.cpp **** 
 5610              		.loc 20 1794 1 view .LVU1520
 5611 001a 08BD     		pop	{r3, pc}
 5612              	.L321:
 5613              		.align	2
 5614              	.L320:
 5615 001c 00000000 		.word	.LANCHOR26
 5616 0020 00000000 		.word	.LANCHOR0
 5617 0024 00000000 		.word	.LANCHOR1
 5618              		.cfi_endproc
 5619              	.LFE4330:
 5621              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5622              		.align	1
 5623              		.p2align 2,,3
 5624              		.global	_Z21Update_DelayTempoLEDsv
 5625              		.syntax unified
 5626              		.thumb
 5627              		.thumb_func
 5628              		.fpu fpv5-d16
 5630              	_Z21Update_DelayTempoLEDsv:
 5631              	.LFB4331:
1797:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5632              		.loc 20 1797 1 is_stmt 1 view -0
 5633              		.cfi_startproc
 5634              		@ args = 0, pretend = 0, frame = 0
 5635              		@ frame_needed = 0, uses_anonymous_args = 0
1798:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5636              		.loc 20 1798 5 view .LVU1522
1797:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5637              		.loc 20 1797 1 is_stmt 0 view .LVU1523
 5638 0000 10B5     		push	{r4, lr}
 5639              		.cfi_def_cfa_offset 8
 5640              		.cfi_offset 4, -8
 5641              		.cfi_offset 14, -4
1798:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5642              		.loc 20 1798 26 view .LVU1524
 5643 0002 054C     		ldr	r4, .L324
 5644 0004 0548     		ldr	r0, .L324+4
 5645 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5646 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5647              	.LVL276:
1799:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5648              		.loc 20 1799 5 is_stmt 1 view .LVU1525
1799:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5649              		.loc 20 1799 26 is_stmt 0 view .LVU1526
 5650 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 217


 5651 000e 0448     		ldr	r0, .L324+8
1803:Veno-Echo.cpp **** 
 5652              		.loc 20 1803 1 view .LVU1527
 5653 0010 BDE81040 		pop	{r4, lr}
 5654              		.cfi_restore 14
 5655              		.cfi_restore 4
 5656              		.cfi_def_cfa_offset 0
1799:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5657              		.loc 20 1799 26 view .LVU1528
 5658 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5659              	.LVL277:
 5660              	.L325:
 5661              		.align	2
 5662              	.L324:
 5663 0018 00000000 		.word	.LANCHOR12
 5664 001c 00000000 		.word	.LANCHOR0
 5665 0020 00000000 		.word	.LANCHOR1
 5666              		.cfi_endproc
 5667              	.LFE4331:
 5669              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5670              		.align	1
 5671              		.p2align 2,,3
 5672              		.global	_Z19Update_BaseTempoLEDv
 5673              		.syntax unified
 5674              		.thumb
 5675              		.thumb_func
 5676              		.fpu fpv5-d16
 5678              	_Z19Update_BaseTempoLEDv:
 5679              	.LFB4332:
1806:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5680              		.loc 20 1806 1 is_stmt 1 view -0
 5681              		.cfi_startproc
 5682              		@ args = 0, pretend = 0, frame = 0
 5683              		@ frame_needed = 0, uses_anonymous_args = 0
1807:Veno-Echo.cpp **** 
 5684              		.loc 20 1807 5 view .LVU1530
1807:Veno-Echo.cpp **** 
 5685              		.loc 20 1807 25 is_stmt 0 view .LVU1531
 5686 0000 1848     		ldr	r0, .L330
1806:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5687              		.loc 20 1806 1 view .LVU1532
 5688 0002 08B5     		push	{r3, lr}
 5689              		.cfi_def_cfa_offset 8
 5690              		.cfi_offset 3, -8
 5691              		.cfi_offset 14, -4
1807:Veno-Echo.cpp **** 
 5692              		.loc 20 1807 25 view .LVU1533
 5693 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5694              	.LVL278:
1809:Veno-Echo.cpp **** 
 5695              		.loc 20 1809 5 is_stmt 1 view .LVU1534
1811:Veno-Echo.cpp ****     {
 5696              		.loc 20 1811 5 view .LVU1535
1811:Veno-Echo.cpp ****     {
 5697              		.loc 20 1811 27 is_stmt 0 view .LVU1536
 5698 0008 1648     		ldr	r0, .L330
 5699 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 218


 5700              	.LVL279:
1811:Veno-Echo.cpp ****     {
 5701              		.loc 20 1811 5 view .LVU1537
 5702 000e D0B9     		cbnz	r0, .L327
 5703 0010 154B     		ldr	r3, .L330+4
 5704 0012 1B68     		ldr	r3, [r3]
 5705              	.L328:
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5706              		.loc 20 1816 5 is_stmt 1 view .LVU1538
 5707              	.LVL280:
 5708              	.LBB1469:
 5709              	.LBI1469:
  71:LEDs.h        **** 
 5710              		.loc 14 71 7 view .LVU1539
 5711              	.LBB1470:
  71:LEDs.h        **** 
 5712              		.loc 14 71 20 view .LVU1540
  71:LEDs.h        **** 
 5713              		.loc 14 71 20 is_stmt 0 view .LVU1541
 5714              	.LBE1470:
 5715              	.LBE1469:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 219


  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5716              		.loc 15 92 31 is_stmt 1 view .LVU1542
 5717              	.LBB1472:
 5718              	.LBB1471:
  71:LEDs.h        **** 
 5719              		.loc 14 71 41 is_stmt 0 view .LVU1543
 5720 0014 134A     		ldr	r2, .L330
 5721              	.LBE1471:
 5722              	.LBE1472:
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5723              		.loc 20 1816 50 view .LVU1544
 5724 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5725              		.loc 20 1816 73 view .LVU1545
 5726 001a 07EE903A 		vmov	s15, r3	@ int
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5727              		.loc 20 1816 55 view .LVU1546
 5728 001e DFED136A 		vldr.32	s13, .L330+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 220


1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5729              		.loc 20 1816 50 view .LVU1547
 5730 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5731              		.loc 20 1816 73 view .LVU1548
 5732 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5733              	.LBB1473:
 5734              	.LBB1474:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5735              		.loc 17 72 54 view .LVU1549
 5736 002a 1149     		ldr	r1, .L330+12
 5737              	.LBE1474:
 5738              	.LBE1473:
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5739              		.loc 20 1816 50 view .LVU1550
 5740 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5741              	.LBB1476:
 5742              	.LBB1477:
 5743              		.loc 17 72 54 view .LVU1551
 5744 0030 104A     		ldr	r2, .L330+16
 5745              	.LBE1477:
 5746              	.LBE1476:
1820:Veno-Echo.cpp **** }
 5747              		.loc 20 1820 17 view .LVU1552
 5748 0032 114B     		ldr	r3, .L330+20
1816:Veno-Echo.cpp ****     //update base phase for both delay lines
 5749              		.loc 20 1816 55 view .LVU1553
 5750 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5751              	.LVL281:
1818:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5752              		.loc 20 1818 5 is_stmt 1 view .LVU1554
 5753              	.LBB1479:
 5754              	.LBI1473:
 5755              		.loc 17 72 6 view .LVU1555
 5756              	.LBB1475:
 5757              		.loc 17 72 43 view .LVU1556
 5758              		.loc 17 72 54 is_stmt 0 view .LVU1557
 5759 0038 81ED477A 		vstr.32	s14, [r1, #284]
 5760              	.LBE1475:
 5761              	.LBE1479:
1819:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5762              		.loc 20 1819 5 is_stmt 1 view .LVU1558
 5763              	.LVL282:
 5764              	.LBB1480:
 5765              	.LBI1476:
 5766              		.loc 17 72 6 view .LVU1559
 5767              	.LBB1478:
 5768              		.loc 17 72 43 view .LVU1560
 5769              		.loc 17 72 54 is_stmt 0 view .LVU1561
 5770 003c 82ED477A 		vstr.32	s14, [r2, #284]
 5771              	.LBE1478:
 5772              	.LBE1480:
1820:Veno-Echo.cpp **** }
 5773              		.loc 20 1820 5 is_stmt 1 view .LVU1562
1820:Veno-Echo.cpp **** }
 5774              		.loc 20 1820 17 is_stmt 0 view .LVU1563
 5775 0040 83ED007A 		vstr.32	s14, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 221


 5776              	.LVL283:
1821:Veno-Echo.cpp **** 
 5777              		.loc 20 1821 1 view .LVU1564
 5778 0044 08BD     		pop	{r3, pc}
 5779              	.LVL284:
 5780              	.L327:
1813:Veno-Echo.cpp ****     }
 5781              		.loc 20 1813 9 is_stmt 1 view .LVU1565
1813:Veno-Echo.cpp ****     }
 5782              		.loc 20 1813 38 is_stmt 0 view .LVU1566
 5783 0046 0849     		ldr	r1, .L330+4
1813:Veno-Echo.cpp ****     }
 5784              		.loc 20 1813 43 view .LVU1567
 5785 0048 0C4B     		ldr	r3, .L330+24
1813:Veno-Echo.cpp ****     }
 5786              		.loc 20 1813 38 view .LVU1568
 5787 004a 0A68     		ldr	r2, [r1]
 5788 004c 0132     		adds	r2, r2, #1
1813:Veno-Echo.cpp ****     }
 5789              		.loc 20 1813 43 view .LVU1569
 5790 004e 83FB0203 		smull	r0, r3, r3, r2
 5791 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5792 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5793 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1813:Veno-Echo.cpp ****     }
 5794              		.loc 20 1813 22 view .LVU1570
 5795 005e 0B60     		str	r3, [r1]
 5796 0060 D8E7     		b	.L328
 5797              	.L331:
 5798 0062 00BF     		.align	2
 5799              	.L330:
 5800 0064 00000000 		.word	.LANCHOR91
 5801 0068 00000000 		.word	.LANCHOR92
 5802 006c 920A863F 		.word	1065749138
 5803 0070 00000000 		.word	.LANCHOR0
 5804 0074 00000000 		.word	.LANCHOR1
 5805 0078 00000000 		.word	.LANCHOR93
 5806 007c ABAAAA2A 		.word	715827883
 5807              		.cfi_endproc
 5808              	.LFE4332:
 5810              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5811              		.align	1
 5812              		.p2align 2,,3
 5813              		.global	_Z13ApplySettingsRK8Settings
 5814              		.syntax unified
 5815              		.thumb
 5816              		.thumb_func
 5817              		.fpu fpv5-d16
 5819              	_Z13ApplySettingsRK8Settings:
 5820              	.LVL285:
 5821              	.LFB4333:
1825:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5822              		.loc 20 1825 1 is_stmt 1 view -0
 5823              		.cfi_startproc
 5824              		@ args = 0, pretend = 0, frame = 0
 5825              		@ frame_needed = 0, uses_anonymous_args = 0
1826:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 222


 5826              		.loc 20 1826 5 view .LVU1572
 5827 0000 9FEDDA7A 		vldr.32	s14, .L417
1826:Veno-Echo.cpp ****     {
 5828              		.loc 20 1826 17 is_stmt 0 view .LVU1573
 5829 0004 D0ED007A 		vldr.32	s15, [r0]
1826:Veno-Echo.cpp ****     {
 5830              		.loc 20 1826 5 view .LVU1574
 5831 0008 F4EEC77A 		vcmpe.f32	s15, s14
1825:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5832              		.loc 20 1825 1 view .LVU1575
 5833 000c 38B5     		push	{r3, r4, r5, lr}
 5834              		.cfi_def_cfa_offset 16
 5835              		.cfi_offset 3, -16
 5836              		.cfi_offset 4, -12
 5837              		.cfi_offset 5, -8
 5838              		.cfi_offset 14, -4
1826:Veno-Echo.cpp ****     {
 5839              		.loc 20 1826 5 view .LVU1576
 5840 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1825:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5841              		.loc 20 1825 1 view .LVU1577
 5842 0012 0446     		mov	r4, r0
 5843              	.LBB1481:
 5844              	.LBB1482:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5845              		.loc 20 70 28 view .LVU1578
 5846 0014 D64B     		ldr	r3, .L417+4
 5847              	.LBE1482:
 5848              	.LBE1481:
1826:Veno-Echo.cpp ****     {
 5849              		.loc 20 1826 5 view .LVU1579
 5850 0016 C0F23281 		blt	.L333
1826:Veno-Echo.cpp ****     {
 5851              		.loc 20 1826 43 discriminator 1 view .LVU1580
 5852 001a 9FEDD67A 		vldr.32	s14, .L417+8
 5853 001e F4EEC77A 		vcmpe.f32	s15, s14
 5854 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5855 0026 00F22A81 		bhi	.L333
1828:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5856              		.loc 20 1828 9 is_stmt 1 view .LVU1581
 5857              	.LVL286:
 5858              	.LBB1496:
 5859              	.LBI1481:
  68:Veno-Echo.cpp ****     {
 5860              		.loc 20 68 10 view .LVU1582
 5861              	.LBB1494:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5862              		.loc 20 70 9 view .LVU1583
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5863              		.loc 20 70 28 is_stmt 0 view .LVU1584
 5864 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5865              	.LVL287:
 5866              	.LBB1483:
 5867              	.LBI1483:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5868              		.loc 21 75 3 is_stmt 1 view .LVU1585
 5869              	.LBB1484:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 223


 5870              		.loc 21 76 5 view .LVU1586
 5871              		.loc 21 76 5 is_stmt 0 view .LVU1587
 5872              	.LBE1484:
 5873              	.LBE1483:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5874              		.loc 20 70 53 view .LVU1588
 5875 002e 9FEDD26A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5876              		.loc 20 70 15 view .LVU1589
 5877 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5878              		.loc 20 70 53 view .LVU1590
 5879 0036 27EE067A 		vmul.f32	s14, s14, s12
 5880              	.LBB1486:
 5881              	.LBB1485:
 5882              		.loc 21 76 31 view .LVU1591
 5883 003a F0EEE66A 		vabs.f32	s13, s13
 5884              	.LBE1485:
 5885              	.LBE1486:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5886              		.loc 20 70 9 view .LVU1592
 5887 003e F4EEC76A 		vcmpe.f32	s13, s14
 5888 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5889 0046 0FDD     		ble	.L336
  74:Veno-Echo.cpp ****             //del -> Reset();
 5890              		.loc 20 74 29 view .LVU1593
 5891 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5892              	.LBB1487:
 5893              	.LBB1488:
 5894              		.loc 19 72 9 view .LVU1594
 5895 004c CB4D     		ldr	r5, .L417+16
 5896              	.LBE1488:
 5897              	.LBE1487:
 5898              	.LBE1494:
 5899              	.LBE1496:
1828:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5900              		.loc 20 1828 33 view .LVU1595
 5901 004e 1968     		ldr	r1, [r3]
 5902              	.LBB1497:
 5903              	.LBB1495:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5904              		.loc 20 73 13 is_stmt 1 view .LVU1596
 5905              	.LBB1491:
 5906              	.LBB1489:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5907              		.loc 19 71 9 is_stmt 0 view .LVU1597
 5908 0050 0020     		movs	r0, #0
 5909              	.LVL288:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5910              		.loc 19 71 9 view .LVU1598
 5911              	.LBE1489:
 5912              	.LBE1491:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5913              		.loc 20 73 27 view .LVU1599
 5914 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5915              		.loc 20 74 13 is_stmt 1 view .LVU1600
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 224


 5916              	.LVL289:
 5917              	.LBB1492:
 5918              	.LBI1487:
  69:delayline_reverse.h ****     {
 5919              		.loc 19 69 17 view .LVU1601
  69:delayline_reverse.h ****     {
 5920              		.loc 19 69 17 is_stmt 0 view .LVU1602
 5921              	.LBE1492:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5922              		.loc 20 74 29 view .LVU1603
 5923 0056 17EE102A 		vmov	r2, s14	@ int
 5924              	.LBB1493:
 5925              	.LBB1490:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5926              		.loc 19 71 9 view .LVU1604
 5927 005a 0860     		str	r0, [r1]	@ float
 5928 005c D4ED007A 		vldr.32	s15, [r4]
 5929              	.LVL290:
 5930              		.loc 19 72 9 view .LVU1605
 5931 0060 AA42     		cmp	r2, r5
 5932 0062 28BF     		it	cs
 5933 0064 2A46     		movcs	r2, r5
 5934 0066 0A61     		str	r2, [r1, #16]
 5935              	.LVL291:
 5936              	.L336:
 5937              		.loc 19 72 9 view .LVU1606
 5938              	.LBE1490:
 5939              	.LBE1493:
 5940              	.LBE1495:
 5941              	.LBE1497:
1829:Veno-Echo.cpp ****     }
 5942              		.loc 20 1829 9 is_stmt 1 view .LVU1607
 5943              	.LBB1498:
 5944              	.LBI1498:
  68:Veno-Echo.cpp ****     {
 5945              		.loc 20 68 10 view .LVU1608
 5946              	.LBB1499:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5947              		.loc 20 70 9 view .LVU1609
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5948              		.loc 20 70 28 is_stmt 0 view .LVU1610
 5949 0068 C54B     		ldr	r3, .L417+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5950              		.loc 20 70 53 view .LVU1611
 5951 006a 9FEDC36A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5952              		.loc 20 70 28 view .LVU1612
 5953 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5954              	.LVL292:
 5955              	.LBB1500:
 5956              	.LBI1500:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5957              		.loc 21 75 3 is_stmt 1 view .LVU1613
 5958              	.LBB1501:
 5959              		.loc 21 76 5 view .LVU1614
 5960              		.loc 21 76 5 is_stmt 0 view .LVU1615
 5961              	.LBE1501:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 225


 5962              	.LBE1500:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5963              		.loc 20 70 15 view .LVU1616
 5964 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5965              		.loc 20 70 53 view .LVU1617
 5966 0076 27EE067A 		vmul.f32	s14, s14, s12
 5967              	.LBB1503:
 5968              	.LBB1502:
 5969              		.loc 21 76 31 view .LVU1618
 5970 007a F0EEE66A 		vabs.f32	s13, s13
 5971              	.LBE1502:
 5972              	.LBE1503:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5973              		.loc 20 70 9 view .LVU1619
 5974 007e F4EEC76A 		vcmpe.f32	s13, s14
 5975 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5976 0086 00F3D381 		bgt	.L412
 5977              	.LVL293:
 5978              	.L339:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5979              		.loc 20 70 9 view .LVU1620
 5980              	.LBE1499:
 5981              	.LBE1498:
1837:Veno-Echo.cpp ****     {
 5982              		.loc 20 1837 5 is_stmt 1 view .LVU1621
 5983 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1837:Veno-Echo.cpp ****     {
 5984              		.loc 20 1837 17 is_stmt 0 view .LVU1622
 5985 008e 94ED010A 		vldr.32	s0, [r4, #4]
1837:Veno-Echo.cpp ****     {
 5986              		.loc 20 1837 5 view .LVU1623
 5987 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5988 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5989 009a 06DB     		blt	.L344
1837:Veno-Echo.cpp ****     {
 5990              		.loc 20 1837 35 discriminator 1 view .LVU1624
 5991 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5992 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5993 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5994 00a8 01D9     		bls	.L409
 5995              	.L344:
1843:Veno-Echo.cpp ****     }
 5996              		.loc 20 1843 9 is_stmt 1 view .LVU1625
1843:Veno-Echo.cpp ****     }
 5997              		.loc 20 1843 30 is_stmt 0 view .LVU1626
 5998 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5999              	.L409:
 6000 00ae B548     		ldr	r0, .L417+24
 6001 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 6002              	.LVL294:
1846:Veno-Echo.cpp ****     {
 6003              		.loc 20 1846 5 is_stmt 1 view .LVU1627
1846:Veno-Echo.cpp ****     {
 6004              		.loc 20 1846 17 is_stmt 0 view .LVU1628
 6005 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1846:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 226


 6006              		.loc 20 1846 5 view .LVU1629
 6007 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 6008 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6009 00c0 C0F2B381 		blt	.L404
1846:Veno-Echo.cpp ****     {
 6010              		.loc 20 1846 42 discriminator 1 view .LVU1630
 6011 00c4 DFEDB06A 		vldr.32	s13, .L417+28
1852:Veno-Echo.cpp ****     }
 6012              		.loc 20 1852 18 discriminator 1 view .LVU1631
 6013 00c8 9FEDB07A 		vldr.32	s14, .L417+32
 6014 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6015 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6016 00d4 88BF     		it	hi
 6017 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6018              	.L348:
1855:Veno-Echo.cpp ****     {
 6019              		.loc 20 1855 17 view .LVU1632
 6020 00da 94ED030A 		vldr.32	s0, [r4, #12]
1855:Veno-Echo.cpp ****     {
 6021              		.loc 20 1855 5 view .LVU1633
 6022 00de 9FEDAC7A 		vldr.32	s14, .L417+36
 6023 00e2 AC4B     		ldr	r3, .L417+40
 6024 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6025              	.LBB1514:
 6026              	.LBB1515:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6027              		.loc 9 60 20 view .LVU1634
 6028 00e8 AB4D     		ldr	r5, .L417+44
 6029 00ea C3ED007A 		vstr.32	s15, [r3]
 6030              	.LBE1515:
 6031              	.LBE1514:
1855:Veno-Echo.cpp ****     {
 6032              		.loc 20 1855 5 is_stmt 1 view .LVU1635
 6033 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6034 00f2 06DB     		blt	.L351
1855:Veno-Echo.cpp ****     {
 6035              		.loc 20 1855 40 is_stmt 0 discriminator 1 view .LVU1636
 6036 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6037 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6038 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6039 0100 01D9     		bls	.L410
 6040              	.L351:
1861:Veno-Echo.cpp ****     }
 6041              		.loc 20 1861 9 is_stmt 1 view .LVU1637
 6042              	.LVL295:
 6043              	.LBB1516:
 6044              	.LBI1516:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6045              		.loc 9 58 17 view .LVU1638
 6046              	.LBB1517:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6047              		.loc 9 60 9 view .LVU1639
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6048              		.loc 9 60 20 is_stmt 0 view .LVU1640
 6049 0102 9FEDA60A 		vldr.32	s0, .L417+48
 6050              	.LVL296:
 6051              	.L410:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 227


 6052              		.loc 9 61 34 view .LVU1641
 6053 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6054              		.loc 9 60 20 view .LVU1642
 6055 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6056              		.loc 9 61 9 is_stmt 1 view .LVU1643
 6057              		.loc 9 61 34 is_stmt 0 view .LVU1644
 6058 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6059              	.LVL297:
 6060              	.LBE1517:
 6061              	.LBE1516:
1864:Veno-Echo.cpp ****     {
 6062              		.loc 20 1864 5 view .LVU1645
 6063 0110 DFEDA37A 		vldr.32	s15, .L417+52
 6064              	.LBB1519:
 6065              	.LBB1518:
 6066              		.loc 9 61 20 view .LVU1646
 6067 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6068              	.LBE1518:
 6069              	.LBE1519:
1864:Veno-Echo.cpp ****     {
 6070              		.loc 20 1864 5 is_stmt 1 view .LVU1647
1864:Veno-Echo.cpp ****     {
 6071              		.loc 20 1864 17 is_stmt 0 view .LVU1648
 6072 0118 94ED050A 		vldr.32	s0, [r4, #20]
1864:Veno-Echo.cpp ****     {
 6073              		.loc 20 1864 5 view .LVU1649
 6074 011c B4EEE70A 		vcmpe.f32	s0, s15
 6075 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6076 0124 07DB     		blt	.L355
1864:Veno-Echo.cpp ****     {
 6077              		.loc 20 1864 40 discriminator 1 view .LVU1650
 6078 0126 DFED9F7A 		vldr.32	s15, .L417+56
 6079 012a B4EEE70A 		vcmpe.f32	s0, s15
 6080 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6081 0132 40F26781 		bls	.L413
 6082              	.L355:
1873:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6083              		.loc 20 1873 9 is_stmt 1 view .LVU1651
1873:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6084              		.loc 20 1873 22 is_stmt 0 view .LVU1652
 6085 0136 9FED9B0A 		vldr.32	s0, .L417+56
 6086 013a 9B48     		ldr	r0, .L417+60
 6087 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6088              	.LVL298:
1874:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6089              		.loc 20 1874 9 is_stmt 1 view .LVU1653
1874:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6090              		.loc 20 1874 22 is_stmt 0 view .LVU1654
 6091 0140 9FED980A 		vldr.32	s0, .L417+56
 6092 0144 9948     		ldr	r0, .L417+64
 6093 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6094              	.LVL299:
1875:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6095              		.loc 20 1875 9 is_stmt 1 view .LVU1655
1875:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6096              		.loc 20 1875 27 is_stmt 0 view .LVU1656
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 228


 6097 014a 9FED960A 		vldr.32	s0, .L417+56
 6098 014e 9848     		ldr	r0, .L417+68
 6099 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6100              	.LVL300:
1876:Veno-Echo.cpp ****     }
 6101              		.loc 20 1876 9 is_stmt 1 view .LVU1657
1876:Veno-Echo.cpp ****     }
 6102              		.loc 20 1876 27 is_stmt 0 view .LVU1658
 6103 0154 9FED930A 		vldr.32	s0, .L417+56
 6104 0158 9648     		ldr	r0, .L417+72
 6105 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6106              	.LVL301:
 6107              	.L358:
1879:Veno-Echo.cpp ****     {
 6108              		.loc 20 1879 5 is_stmt 1 view .LVU1659
1879:Veno-Echo.cpp ****     {
 6109              		.loc 20 1879 17 is_stmt 0 view .LVU1660
 6110 015e 94ED040A 		vldr.32	s0, [r4, #16]
1879:Veno-Echo.cpp ****     {
 6111              		.loc 20 1879 5 view .LVU1661
 6112 0162 DFED957A 		vldr.32	s15, .L417+76
 6113 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6114 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6115 016e 07DB     		blt	.L359
1879:Veno-Echo.cpp ****     {
 6116              		.loc 20 1879 40 discriminator 1 view .LVU1662
 6117 0170 DFED927A 		vldr.32	s15, .L417+80
 6118 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6119 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6120 017c 40F2E380 		bls	.L414
 6121              	.L359:
1888:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6122              		.loc 20 1888 9 is_stmt 1 view .LVU1663
1888:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6123              		.loc 20 1888 22 is_stmt 0 view .LVU1664
 6124 0180 9FED8F0A 		vldr.32	s0, .L417+84
 6125 0184 8F48     		ldr	r0, .L417+88
 6126 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6127              	.LVL302:
1889:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6128              		.loc 20 1889 9 is_stmt 1 view .LVU1665
1889:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6129              		.loc 20 1889 22 is_stmt 0 view .LVU1666
 6130 018a 9FED8D0A 		vldr.32	s0, .L417+84
 6131 018e 8E48     		ldr	r0, .L417+92
 6132 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6133              	.LVL303:
1890:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6134              		.loc 20 1890 9 is_stmt 1 view .LVU1667
1890:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6135              		.loc 20 1890 27 is_stmt 0 view .LVU1668
 6136 0194 9FED8A0A 		vldr.32	s0, .L417+84
 6137 0198 8C48     		ldr	r0, .L417+96
 6138 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6139              	.LVL304:
1891:Veno-Echo.cpp **** 
 6140              		.loc 20 1891 9 is_stmt 1 view .LVU1669
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 229


1891:Veno-Echo.cpp **** 
 6141              		.loc 20 1891 27 is_stmt 0 view .LVU1670
 6142 019e 9FED880A 		vldr.32	s0, .L417+84
 6143 01a2 8B48     		ldr	r0, .L417+100
 6144 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6145              	.LVL305:
 6146              	.L362:
1895:Veno-Echo.cpp ****     {
 6147              		.loc 20 1895 5 is_stmt 1 view .LVU1671
1895:Veno-Echo.cpp ****     {
 6148              		.loc 20 1895 17 is_stmt 0 view .LVU1672
 6149 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1895:Veno-Echo.cpp ****     {
 6150              		.loc 20 1895 5 view .LVU1673
 6151 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6152 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6153 01b4 07DB     		blt	.L363
1895:Veno-Echo.cpp ****     {
 6154              		.loc 20 1895 38 discriminator 1 view .LVU1674
 6155 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6156 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6157 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6158 01c2 40F29980 		bls	.L415
 6159              	.L363:
1909:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6160              		.loc 20 1909 9 is_stmt 1 view .LVU1675
1909:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6161              		.loc 20 1909 26 is_stmt 0 view .LVU1676
 6162 01c6 9FED710A 		vldr.32	s0, .L417+32
 6163 01ca 7948     		ldr	r0, .L417+68
 6164 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6165              	.LVL306:
1910:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6166              		.loc 20 1910 9 is_stmt 1 view .LVU1677
1910:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6167              		.loc 20 1910 26 is_stmt 0 view .LVU1678
 6168 01d0 9FED6E0A 		vldr.32	s0, .L417+32
 6169 01d4 7D48     		ldr	r0, .L417+96
 6170 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6171              	.LVL307:
1911:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6172              		.loc 20 1911 9 is_stmt 1 view .LVU1679
1911:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6173              		.loc 20 1911 26 is_stmt 0 view .LVU1680
 6174 01da 9FED6C0A 		vldr.32	s0, .L417+32
 6175 01de 7548     		ldr	r0, .L417+72
 6176 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6177              	.LVL308:
1912:Veno-Echo.cpp ****     }
 6178              		.loc 20 1912 9 is_stmt 1 view .LVU1681
1912:Veno-Echo.cpp ****     }
 6179              		.loc 20 1912 26 is_stmt 0 view .LVU1682
 6180 01e4 9FED690A 		vldr.32	s0, .L417+32
 6181 01e8 7948     		ldr	r0, .L417+100
 6182 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6183              	.LVL309:
 6184              	.L366:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 230


1915:Veno-Echo.cpp ****     {
 6185              		.loc 20 1915 5 is_stmt 1 view .LVU1683
1915:Veno-Echo.cpp ****     {
 6186              		.loc 20 1915 16 is_stmt 0 view .LVU1684
 6187 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1915:Veno-Echo.cpp ****     {
 6188              		.loc 20 1915 5 view .LVU1685
 6189 01f2 9FED787A 		vldr.32	s14, .L417+104
1921:Veno-Echo.cpp ****     }
 6190              		.loc 20 1921 21 view .LVU1686
 6191 01f6 784B     		ldr	r3, .L417+108
1915:Veno-Echo.cpp ****     {
 6192              		.loc 20 1915 5 view .LVU1687
 6193 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6194 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6195 0200 06D4     		bmi	.L370
1919:Veno-Echo.cpp ****     {
 6196              		.loc 20 1919 14 is_stmt 1 view .LVU1688
 6197 0202 9FED767A 		vldr.32	s14, .L417+112
 6198 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6199 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6200 020e 70DC     		bgt	.L416
 6201              	.L370:
1917:Veno-Echo.cpp ****     }
 6202              		.loc 20 1917 9 view .LVU1689
1917:Veno-Echo.cpp ****     }
 6203              		.loc 20 1917 21 is_stmt 0 view .LVU1690
 6204 0210 0022     		movs	r2, #0
 6205 0212 1A70     		strb	r2, [r3]
 6206              	.L369:
1929:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6207              		.loc 20 1929 5 is_stmt 1 view .LVU1691
1929:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6208              		.loc 20 1929 18 is_stmt 0 view .LVU1692
 6209 0214 94ED080A 		vldr.32	s0, [r4, #32]
1929:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6210              		.loc 20 1929 5 view .LVU1693
 6211 0218 DFED717A 		vldr.32	s15, .L417+116
 6212 021c B4EEE70A 		vcmpe.f32	s0, s15
 6213 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6214 0224 06DB     		blt	.L372
1930:Veno-Echo.cpp ****     {
 6215              		.loc 20 1930 9 view .LVU1694
 6216 0226 DFED6F7A 		vldr.32	s15, .L417+120
 6217 022a B4EEE70A 		vcmpe.f32	s0, s15
 6218 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6219 0232 01D9     		bls	.L411
 6220              	.L372:
1938:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6221              		.loc 20 1938 9 is_stmt 1 view .LVU1695
1938:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6222              		.loc 20 1938 31 is_stmt 0 view .LVU1696
 6223 0234 9FED6C0A 		vldr.32	s0, .L417+124
 6224              	.L411:
 6225 0238 5248     		ldr	r0, .L417+24
 6226 023a FFF7FEFF 		bl	_ZN8Taptempo12setTapLengthEf
 6227              	.LVL310:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 231


1939:Veno-Echo.cpp ****     }
 6228              		.loc 20 1939 9 is_stmt 1 view .LVU1697
1939:Veno-Echo.cpp ****     }
 6229              		.loc 20 1939 31 is_stmt 0 view .LVU1698
 6230 023e 5148     		ldr	r0, .L417+24
 6231 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6232              	.LVL311:
 6233 0244 6948     		ldr	r0, .L417+128
 6234 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6235              	.LVL312:
1942:Veno-Echo.cpp ****     {
 6236              		.loc 20 1942 5 is_stmt 1 view .LVU1699
 6237 024a DFED697A 		vldr.32	s15, .L417+132
 6238 024e 94ED097A 		vldr.32	s14, [r4, #36]
1944:Veno-Echo.cpp ****     }
 6239              		.loc 20 1944 24 is_stmt 0 view .LVU1700
 6240 0252 6848     		ldr	r0, .L417+136
1942:Veno-Echo.cpp ****     {
 6241              		.loc 20 1942 5 view .LVU1701
 6242 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6243 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6244 025c 42DD     		ble	.L406
1944:Veno-Echo.cpp ****     }
 6245              		.loc 20 1944 9 is_stmt 1 view .LVU1702
1944:Veno-Echo.cpp ****     }
 6246              		.loc 20 1944 24 is_stmt 0 view .LVU1703
 6247 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
 6248              	.LVL313:
 6249              	.L378:
1951:Veno-Echo.cpp ****     {
 6250              		.loc 20 1951 5 is_stmt 1 view .LVU1704
 6251 0262 DFED637A 		vldr.32	s15, .L417+132
 6252 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1953:Veno-Echo.cpp ****     }
 6253              		.loc 20 1953 24 is_stmt 0 view .LVU1705
 6254 026a 6348     		ldr	r0, .L417+140
1951:Veno-Echo.cpp ****     {
 6255              		.loc 20 1951 5 view .LVU1706
 6256 026c B4EEE77A 		vcmpe.f32	s14, s15
 6257 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6258 0274 39DD     		ble	.L407
1953:Veno-Echo.cpp ****     }
 6259              		.loc 20 1953 9 is_stmt 1 view .LVU1707
1960:Veno-Echo.cpp **** 
 6260              		.loc 20 1960 1 is_stmt 0 view .LVU1708
 6261 0276 BDE83840 		pop	{r3, r4, r5, lr}
 6262              		.cfi_remember_state
 6263              		.cfi_restore 14
 6264              		.cfi_restore 5
 6265              		.cfi_restore 4
 6266              		.cfi_restore 3
 6267              		.cfi_def_cfa_offset 0
 6268              	.LVL314:
1953:Veno-Echo.cpp ****     }
 6269              		.loc 20 1953 24 view .LVU1709
 6270 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6271              	.LVL315:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 232


 6272              	.L333:
 6273              		.cfi_restore_state
1833:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6274              		.loc 20 1833 9 is_stmt 1 view .LVU1710
 6275              	.LBB1520:
 6276              	.LBI1520:
  68:Veno-Echo.cpp ****     {
 6277              		.loc 20 68 10 view .LVU1711
 6278              	.LBB1521:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6279              		.loc 20 70 9 view .LVU1712
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6280              		.loc 20 70 28 is_stmt 0 view .LVU1713
 6281 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6282              	.LVL316:
 6283              	.LBB1522:
 6284              	.LBI1522:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6285              		.loc 21 75 3 is_stmt 1 view .LVU1714
 6286              	.LBB1523:
 6287              		.loc 21 76 5 view .LVU1715
 6288              		.loc 21 76 5 is_stmt 0 view .LVU1716
 6289              	.LBE1523:
 6290              	.LBE1522:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6291              		.loc 20 70 15 view .LVU1717
 6292 0282 DFED5E6A 		vldr.32	s13, .L417+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6293              		.loc 20 70 53 view .LVU1718
 6294 0286 9FED3C6A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6295              		.loc 20 70 15 view .LVU1719
 6296 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6297              		.loc 20 70 53 view .LVU1720
 6298 028e 67EE867A 		vmul.f32	s15, s15, s12
 6299              	.LBB1525:
 6300              	.LBB1524:
 6301              		.loc 21 76 31 view .LVU1721
 6302 0292 B0EEC77A 		vabs.f32	s14, s14
 6303              	.LBE1524:
 6304              	.LBE1525:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6305              		.loc 20 70 9 view .LVU1722
 6306 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6307 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6308 029e 06DD     		ble	.L340
 6309              	.LBE1521:
 6310              	.LBE1520:
1833:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6311              		.loc 20 1833 33 view .LVU1723
 6312 02a0 1A68     		ldr	r2, [r3]
 6313              	.LBB1531:
 6314              	.LBB1530:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6315              		.loc 20 73 13 is_stmt 1 view .LVU1724
 6316              	.LBB1526:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 233


 6317              	.LBB1527:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6318              		.loc 19 71 9 is_stmt 0 view .LVU1725
 6319 02a2 0021     		movs	r1, #0
 6320              		.loc 19 72 9 view .LVU1726
 6321 02a4 5648     		ldr	r0, .L417+148
 6322              	.LVL317:
 6323              		.loc 19 72 9 view .LVU1727
 6324              	.LBE1527:
 6325              	.LBE1526:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6326              		.loc 20 73 27 view .LVU1728
 6327 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6328              		.loc 20 74 13 is_stmt 1 view .LVU1729
 6329              	.LVL318:
 6330              	.LBB1529:
 6331              	.LBI1526:
  69:delayline_reverse.h ****     {
 6332              		.loc 19 69 17 view .LVU1730
 6333              	.LBB1528:
 6334              		.loc 19 72 9 is_stmt 0 view .LVU1731
 6335 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6336              		.loc 19 71 9 view .LVU1732
 6337 02ac 1160     		str	r1, [r2]	@ float
 6338              	.LVL319:
 6339              	.L340:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6340              		.loc 19 71 9 view .LVU1733
 6341              	.LBE1528:
 6342              	.LBE1529:
 6343              	.LBE1530:
 6344              	.LBE1531:
1834:Veno-Echo.cpp ****     }
 6345              		.loc 20 1834 9 is_stmt 1 view .LVU1734
 6346              	.LBB1532:
 6347              	.LBI1532:
  68:Veno-Echo.cpp ****     {
 6348              		.loc 20 68 10 view .LVU1735
 6349              	.LBB1533:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6350              		.loc 20 70 9 view .LVU1736
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6351              		.loc 20 70 28 is_stmt 0 view .LVU1737
 6352 02ae 344B     		ldr	r3, .L417+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6353              		.loc 20 70 15 view .LVU1738
 6354 02b0 DFED526A 		vldr.32	s13, .L417+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6355              		.loc 20 70 28 view .LVU1739
 6356 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6357              	.LVL320:
 6358              	.LBB1534:
 6359              	.LBI1534:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6360              		.loc 21 75 3 is_stmt 1 view .LVU1740
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 234


 6361              	.LBB1535:
 6362              		.loc 21 76 5 view .LVU1741
 6363              		.loc 21 76 5 is_stmt 0 view .LVU1742
 6364              	.LBE1535:
 6365              	.LBE1534:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6366              		.loc 20 70 53 view .LVU1743
 6367 02b8 9FED2F6A 		vldr.32	s12, .L417+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6368              		.loc 20 70 15 view .LVU1744
 6369 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6370              		.loc 20 70 53 view .LVU1745
 6371 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6372              	.LBB1537:
 6373              	.LBB1536:
 6374              		.loc 21 76 31 view .LVU1746
 6375 02c4 B0EEC77A 		vabs.f32	s14, s14
 6376              	.LBE1536:
 6377              	.LBE1537:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6378              		.loc 20 70 9 view .LVU1747
 6379 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6380 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6381 02d0 7FF7DBAE 		ble	.L339
 6382              	.LBE1533:
 6383              	.LBE1532:
1834:Veno-Echo.cpp ****     }
 6384              		.loc 20 1834 33 view .LVU1748
 6385 02d4 1A68     		ldr	r2, [r3]
 6386              	.LBB1543:
 6387              	.LBB1542:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6388              		.loc 20 73 13 is_stmt 1 view .LVU1749
 6389              	.LBB1538:
 6390              	.LBB1539:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6391              		.loc 19 71 9 is_stmt 0 view .LVU1750
 6392 02d6 0021     		movs	r1, #0
 6393              		.loc 19 72 9 view .LVU1751
 6394 02d8 4948     		ldr	r0, .L417+148
 6395              	.LBE1539:
 6396              	.LBE1538:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6397              		.loc 20 73 27 view .LVU1752
 6398 02da C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6399              		.loc 20 74 13 is_stmt 1 view .LVU1753
 6400              	.LVL321:
 6401              	.LBB1541:
 6402              	.LBI1538:
  69:delayline_reverse.h ****     {
 6403              		.loc 19 69 17 view .LVU1754
 6404              	.LBB1540:
 6405              		.loc 19 72 9 is_stmt 0 view .LVU1755
 6406 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 235


 6407              		.loc 19 71 9 view .LVU1756
 6408 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6409              		.loc 19 73 5 view .LVU1757
 6410 02e2 D2E6     		b	.L339
 6411              	.LVL322:
 6412              	.L406:
 6413              		.loc 19 73 5 view .LVU1758
 6414              	.LBE1540:
 6415              	.LBE1541:
 6416              	.LBE1542:
 6417              	.LBE1543:
1948:Veno-Echo.cpp ****     }
 6418              		.loc 20 1948 9 is_stmt 1 view .LVU1759
1948:Veno-Echo.cpp ****     }
 6419              		.loc 20 1948 25 is_stmt 0 view .LVU1760
 6420 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6421              	.LVL323:
 6422 02e8 BBE7     		b	.L378
 6423              	.L407:
1957:Veno-Echo.cpp ****     }
 6424              		.loc 20 1957 9 is_stmt 1 view .LVU1761
1960:Veno-Echo.cpp **** 
 6425              		.loc 20 1960 1 is_stmt 0 view .LVU1762
 6426 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6427              		.cfi_remember_state
 6428              		.cfi_restore 14
 6429              		.cfi_restore 5
 6430              		.cfi_restore 4
 6431              		.cfi_restore 3
 6432              		.cfi_def_cfa_offset 0
 6433              	.LVL324:
1957:Veno-Echo.cpp ****     }
 6434              		.loc 20 1957 25 view .LVU1763
 6435 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6436              	.LVL325:
 6437              	.L416:
 6438              		.cfi_restore_state
1921:Veno-Echo.cpp ****     }
 6439              		.loc 20 1921 9 is_stmt 1 view .LVU1764
1921:Veno-Echo.cpp ****     }
 6440              		.loc 20 1921 21 is_stmt 0 view .LVU1765
 6441 02f2 0122     		movs	r2, #1
 6442 02f4 1A70     		strb	r2, [r3]
 6443 02f6 8DE7     		b	.L369
 6444              	.L415:
1897:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6445              		.loc 20 1897 9 is_stmt 1 view .LVU1766
1897:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6446              		.loc 20 1897 21 is_stmt 0 view .LVU1767
 6447 02f8 2B48     		ldr	r0, .L417+60
 6448 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6449              	.LVL326:
1898:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6450              		.loc 20 1898 9 is_stmt 1 view .LVU1768
1898:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6451              		.loc 20 1898 21 is_stmt 0 view .LVU1769
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 236


 6452 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6453 0302 3048     		ldr	r0, .L417+88
 6454 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6455              	.LVL327:
1899:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6456              		.loc 20 1899 9 is_stmt 1 view .LVU1770
1899:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6457              		.loc 20 1899 21 is_stmt 0 view .LVU1771
 6458 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6459 030c 2748     		ldr	r0, .L417+64
 6460 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6461              	.LVL328:
1900:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6462              		.loc 20 1900 9 is_stmt 1 view .LVU1772
1900:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6463              		.loc 20 1900 21 is_stmt 0 view .LVU1773
 6464 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6465 0316 2C48     		ldr	r0, .L417+92
 6466 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6467              	.LVL329:
1901:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6468              		.loc 20 1901 9 is_stmt 1 view .LVU1774
1901:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6469              		.loc 20 1901 26 is_stmt 0 view .LVU1775
 6470 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6471 0320 2348     		ldr	r0, .L417+68
 6472 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6473              	.LVL330:
1902:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6474              		.loc 20 1902 9 is_stmt 1 view .LVU1776
1902:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6475              		.loc 20 1902 26 is_stmt 0 view .LVU1777
 6476 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6477 032a 2848     		ldr	r0, .L417+96
 6478 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6479              	.LVL331:
1903:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6480              		.loc 20 1903 9 is_stmt 1 view .LVU1778
1903:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6481              		.loc 20 1903 26 is_stmt 0 view .LVU1779
 6482 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6483 0334 1F48     		ldr	r0, .L417+72
 6484 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6485              	.LVL332:
1904:Veno-Echo.cpp ****     }
 6486              		.loc 20 1904 9 is_stmt 1 view .LVU1780
1904:Veno-Echo.cpp ****     }
 6487              		.loc 20 1904 26 is_stmt 0 view .LVU1781
 6488 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6489 033e 2448     		ldr	r0, .L417+100
 6490 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6491              	.LVL333:
 6492 0344 53E7     		b	.L366
 6493              	.L414:
1881:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6494              		.loc 20 1881 9 is_stmt 1 view .LVU1782
1881:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 237


 6495              		.loc 20 1881 22 is_stmt 0 view .LVU1783
 6496 0346 1F48     		ldr	r0, .L417+88
 6497 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6498              	.LVL334:
1882:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6499              		.loc 20 1882 9 is_stmt 1 view .LVU1784
1882:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6500              		.loc 20 1882 22 is_stmt 0 view .LVU1785
 6501 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6502 0350 1D48     		ldr	r0, .L417+92
 6503 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6504              	.LVL335:
1883:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6505              		.loc 20 1883 9 is_stmt 1 view .LVU1786
1883:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6506              		.loc 20 1883 27 is_stmt 0 view .LVU1787
 6507 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6508 035a 1C48     		ldr	r0, .L417+96
 6509 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6510              	.LVL336:
1884:Veno-Echo.cpp ****     }
 6511              		.loc 20 1884 9 is_stmt 1 view .LVU1788
1884:Veno-Echo.cpp ****     }
 6512              		.loc 20 1884 27 is_stmt 0 view .LVU1789
 6513 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6514 0364 1A48     		ldr	r0, .L417+100
 6515 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6516              	.LVL337:
 6517 036a 1DE7     		b	.L362
 6518              	.L418:
 6519              		.align	2
 6520              	.L417:
 6521 036c 0050C346 		.word	1187205120
 6522 0370 00000000 		.word	.LANCHOR2
 6523 0374 00606A48 		.word	1214930944
 6524 0378 0AD7A33B 		.word	1000593162
 6525 037c BF270900 		.word	599999
 6526 0380 00000000 		.word	.LANCHOR3
 6527 0384 00000000 		.word	.LANCHOR26
 6528 0388 0000FA43 		.word	1140457472
 6529 038c 00000000 		.word	0
 6530 0390 CDCCCC3D 		.word	1036831949
 6531 0394 00000000 		.word	.LANCHOR68
 6532 0398 00000000 		.word	.LANCHOR76
 6533 039c 9A99A140 		.word	1084332442
 6534 03a0 0080BB44 		.word	1153138688
 6535 03a4 00803B46 		.word	1178304512
 6536 03a8 00000000 		.word	.LANCHOR47
 6537 03ac 00000000 		.word	.LANCHOR48
 6538 03b0 00000000 		.word	.LANCHOR49
 6539 03b4 00000000 		.word	.LANCHOR50
 6540 03b8 0000C842 		.word	1120403456
 6541 03bc 00004844 		.word	1145569280
 6542 03c0 00004843 		.word	1128792064
 6543 03c4 00000000 		.word	.LANCHOR35
 6544 03c8 00000000 		.word	.LANCHOR36
 6545 03cc 00000000 		.word	.LANCHOR37
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 238


 6546 03d0 00000000 		.word	.LANCHOR38
 6547 03d4 6666E63E 		.word	1055286886
 6548 03d8 00000000 		.word	.LANCHOR83
 6549 03dc CDCC0C3F 		.word	1057803469
 6550 03e0 00409C46 		.word	1184645120
 6551 03e4 001BB74A 		.word	1253513984
 6552 03e8 0024F448 		.word	1223959552
 6553 03ec 00000000 		.word	.LANCHOR91
 6554 03f0 48E1FA3E 		.word	1056629064
 6555 03f4 00000000 		.word	.LANCHOR94
 6556 03f8 00000000 		.word	.LANCHOR95
 6557 03fc 00650148 		.word	1208050944
 6558 0400 94050200 		.word	132500
 6559              	.L413:
1866:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6560              		.loc 20 1866 9 is_stmt 1 view .LVU1790
1866:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6561              		.loc 20 1866 22 is_stmt 0 view .LVU1791
 6562 0404 1248     		ldr	r0, .L419
 6563 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6564              	.LVL338:
1867:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6565              		.loc 20 1867 9 is_stmt 1 view .LVU1792
1867:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6566              		.loc 20 1867 22 is_stmt 0 view .LVU1793
 6567 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6568 040e 1148     		ldr	r0, .L419+4
 6569 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6570              	.LVL339:
1868:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6571              		.loc 20 1868 9 is_stmt 1 view .LVU1794
1868:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6572              		.loc 20 1868 27 is_stmt 0 view .LVU1795
 6573 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6574 0418 0F48     		ldr	r0, .L419+8
 6575 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6576              	.LVL340:
1869:Veno-Echo.cpp ****     }
 6577              		.loc 20 1869 9 is_stmt 1 view .LVU1796
1869:Veno-Echo.cpp ****     }
 6578              		.loc 20 1869 27 is_stmt 0 view .LVU1797
 6579 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6580 0422 0E48     		ldr	r0, .L419+12
 6581 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6582              	.LVL341:
 6583 0428 99E6     		b	.L358
 6584              	.L404:
1852:Veno-Echo.cpp ****     }
 6585              		.loc 20 1852 18 view .LVU1798
 6586 042a DFED0D7A 		vldr.32	s15, .L419+16
 6587 042e 54E6     		b	.L348
 6588              	.LVL342:
 6589              	.L412:
 6590              	.LBB1544:
 6591              	.LBB1512:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6592              		.loc 20 74 29 view .LVU1799
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 239


 6593 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6594              	.LBB1504:
 6595              	.LBB1505:
  72:delayline_reverse.h ****     }
 6596              		.loc 19 72 9 view .LVU1800
 6597 0434 0B4D     		ldr	r5, .L419+20
 6598              	.LBE1505:
 6599              	.LBE1504:
 6600              	.LBE1512:
 6601              	.LBE1544:
1829:Veno-Echo.cpp ****     }
 6602              		.loc 20 1829 33 view .LVU1801
 6603 0436 1968     		ldr	r1, [r3]
 6604              	.LBB1545:
 6605              	.LBB1513:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6606              		.loc 20 73 13 is_stmt 1 view .LVU1802
 6607              	.LBB1509:
 6608              	.LBB1506:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6609              		.loc 19 71 9 is_stmt 0 view .LVU1803
 6610 0438 0020     		movs	r0, #0
 6611              	.LBE1506:
 6612              	.LBE1509:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6613              		.loc 20 73 27 view .LVU1804
 6614 043a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6615              		.loc 20 74 29 view .LVU1805
 6616 043e 17EE102A 		vmov	r2, s14	@ int
 6617              	.LBB1510:
 6618              	.LBB1507:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6619              		.loc 19 71 9 view .LVU1806
 6620 0442 0860     		str	r0, [r1]	@ float
 6621              	.LVL343:
  72:delayline_reverse.h ****     }
 6622              		.loc 19 72 9 view .LVU1807
 6623 0444 AA42     		cmp	r2, r5
 6624 0446 28BF     		it	cs
 6625 0448 2A46     		movcs	r2, r5
 6626              	.LBE1507:
 6627              	.LBE1510:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6628              		.loc 20 74 13 is_stmt 1 view .LVU1808
 6629              	.LVL344:
 6630              	.LBB1511:
 6631              	.LBI1504:
  69:delayline_reverse.h ****     {
 6632              		.loc 19 69 17 view .LVU1809
 6633              	.LBB1508:
  72:delayline_reverse.h ****     }
 6634              		.loc 19 72 9 is_stmt 0 view .LVU1810
 6635 044a 0A61     		str	r2, [r1, #16]
 6636              		.loc 19 73 5 view .LVU1811
 6637 044c 1DE6     		b	.L339
 6638              	.L420:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 240


 6639 044e 00BF     		.align	2
 6640              	.L419:
 6641 0450 00000000 		.word	.LANCHOR47
 6642 0454 00000000 		.word	.LANCHOR48
 6643 0458 00000000 		.word	.LANCHOR49
 6644 045c 00000000 		.word	.LANCHOR50
 6645 0460 00000000 		.word	0
 6646 0464 BF270900 		.word	599999
 6647              	.LBE1508:
 6648              	.LBE1511:
 6649              	.LBE1513:
 6650              	.LBE1545:
 6651              		.cfi_endproc
 6652              	.LFE4333:
 6654              		.section	.text.startup.main,"ax",%progbits
 6655              		.align	1
 6656              		.p2align 2,,3
 6657              		.global	main
 6658              		.syntax unified
 6659              		.thumb
 6660              		.thumb_func
 6661              		.fpu fpv5-d16
 6663              	main:
 6664              	.LFB4311:
 647:Veno-Echo.cpp ****     // initialize hardware.
 6665              		.loc 20 647 1 is_stmt 1 view -0
 6666              		.cfi_startproc
 6667              		@ Volatile: function does not return.
 6668              		@ args = 0, pretend = 0, frame = 328
 6669              		@ frame_needed = 0, uses_anonymous_args = 0
 649:Veno-Echo.cpp ****     hw.Init();
 6670              		.loc 20 649 5 view .LVU1813
 647:Veno-Echo.cpp ****     // initialize hardware.
 6671              		.loc 20 647 1 is_stmt 0 view .LVU1814
 6672 0000 80B5     		push	{r7, lr}
 6673              		.cfi_def_cfa_offset 8
 6674              		.cfi_offset 7, -8
 6675              		.cfi_offset 14, -4
 649:Veno-Echo.cpp ****     hw.Init();
 6676              		.loc 20 649 17 view .LVU1815
 6677 0002 CF48     		ldr	r0, .L431
 647:Veno-Echo.cpp ****     // initialize hardware.
 6678              		.loc 20 647 1 view .LVU1816
 6679 0004 D4B0     		sub	sp, sp, #336
 6680              		.cfi_def_cfa_offset 344
 649:Veno-Echo.cpp ****     hw.Init();
 6681              		.loc 20 649 17 view .LVU1817
 6682 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6683              	.LVL345:
 650:Veno-Echo.cpp ****     
 6684              		.loc 20 650 5 is_stmt 1 view .LVU1818
 650:Veno-Echo.cpp ****     
 6685              		.loc 20 650 12 is_stmt 0 view .LVU1819
 6686 000a 0021     		movs	r1, #0
 6687 000c CC48     		ldr	r0, .L431
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6688              		.loc 20 654 16 view .LVU1820
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 241


 6689 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 650:Veno-Echo.cpp ****     
 6690              		.loc 20 650 12 view .LVU1821
 6691 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6692              	.LVL346:
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6693              		.loc 20 654 5 is_stmt 1 view .LVU1822
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6694              		.loc 20 654 16 is_stmt 0 view .LVU1823
 6695 0016 1D20     		movs	r0, #29
 6696 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6697              	.LVL347:
 6698 001c 0346     		mov	r3, r0	@ movhi
 6699 001e 0620     		movs	r0, #6
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6700              		.loc 20 661 22 view .LVU1824
 6701 0020 0224     		movs	r4, #2
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6702              		.loc 20 654 16 view .LVU1825
 6703 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 6704 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6705              	.LVL348:
 6706 002a 0346     		mov	r3, r0	@ movhi
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6707              		.loc 20 654 80 view .LVU1826
 6708 002c C448     		ldr	r0, .L431
 6709              	.LBB1546:
 6710              	.LBB1547:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6711              		.loc 11 64 50 view .LVU1827
 6712 002e 4FF00108 		mov	r8, #1
 6713              	.LBE1547:
 6714              	.LBE1546:
 6715              	.LBB1550:
 6716              	.LBB1551:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 242


 6717              		.loc 8 58 57 view .LVU1828
 6718 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6719              	.LBE1551:
 6720              	.LBE1550:
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6721              		.loc 20 654 16 view .LVU1829
 6722 0036 ADF81030 		strh	r3, [sp, #16]	@ movhi
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6723              		.loc 20 654 80 view .LVU1830
 6724 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6725              	.LVL349:
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6726              		.loc 20 654 16 view .LVU1831
 6727 003e 0123     		movs	r3, #1
 6728 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6729 0044 BF48     		ldr	r0, .L431+4
 669:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6730              		.loc 20 669 20 view .LVU1832
 6731 0046 C04F     		ldr	r7, .L431+8
 6732              	.LBB1554:
 6733              	.LBB1555:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6734              		.loc 8 54 63 view .LVU1833
 6735 0048 C04D     		ldr	r5, .L431+12
 6736              	.LBE1555:
 6737              	.LBE1554:
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6738              		.loc 20 675 20 view .LVU1834
 6739 004a C14E     		ldr	r6, .L431+16
 654:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6740              		.loc 20 654 16 view .LVU1835
 6741 004c DDE90312 		ldrd	r1, r2, [sp, #12]
 6742 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6743              	.LVL350:
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6744              		.loc 20 655 5 is_stmt 1 view .LVU1836
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6745              		.loc 20 655 16 is_stmt 0 view .LVU1837
 6746 0054 1E20     		movs	r0, #30
 6747 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6748              	.LVL351:
 6749 005a 0346     		mov	r3, r0	@ movhi
 6750 005c 0720     		movs	r0, #7
 6751 005e ADF81430 		strh	r3, [sp, #20]	@ movhi
 6752 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6753              	.LVL352:
 6754 0066 0346     		mov	r3, r0	@ movhi
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6755              		.loc 20 655 80 view .LVU1838
 6756 0068 B548     		ldr	r0, .L431
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6757              		.loc 20 655 16 view .LVU1839
 6758 006a ADF81830 		strh	r3, [sp, #24]	@ movhi
 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6759              		.loc 20 655 80 view .LVU1840
 6760 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6761              	.LVL353:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 243


 655:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6762              		.loc 20 655 16 view .LVU1841
 6763 0072 0123     		movs	r3, #1
 6764 0074 80EE080A 		vdiv.f32	s0, s0, s16
 6765 0078 B648     		ldr	r0, .L431+20
 6766 007a DDE90512 		ldrd	r1, r2, [sp, #20]
 6767 007e FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6768              	.LVL354:
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6769              		.loc 20 656 5 is_stmt 1 view .LVU1842
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6770              		.loc 20 656 18 is_stmt 0 view .LVU1843
 6771 0082 0A20     		movs	r0, #10
 6772 0084 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6773              	.LVL355:
 6774 0088 0346     		mov	r3, r0	@ movhi
 6775 008a 0220     		movs	r0, #2
 6776 008c ADF81C30 		strh	r3, [sp, #28]	@ movhi
 6777 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6778              	.LVL356:
 6779 0094 0346     		mov	r3, r0	@ movhi
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6780              		.loc 20 656 85 view .LVU1844
 6781 0096 AA48     		ldr	r0, .L431
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6782              		.loc 20 656 18 view .LVU1845
 6783 0098 ADF82030 		strh	r3, [sp, #32]	@ movhi
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6784              		.loc 20 656 85 view .LVU1846
 6785 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6786              	.LVL357:
 656:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6787              		.loc 20 656 18 view .LVU1847
 6788 00a0 0023     		movs	r3, #0
 6789 00a2 80EE080A 		vdiv.f32	s0, s0, s16
 6790 00a6 AC48     		ldr	r0, .L431+24
 6791 00a8 DDE90712 		ldrd	r1, r2, [sp, #28]
 6792 00ac FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6793              	.LVL358:
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6794              		.loc 20 657 5 is_stmt 1 view .LVU1848
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6795              		.loc 20 657 18 is_stmt 0 view .LVU1849
 6796 00b0 0B20     		movs	r0, #11
 6797 00b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6798              	.LVL359:
 6799 00b6 0346     		mov	r3, r0	@ movhi
 6800 00b8 0320     		movs	r0, #3
 6801 00ba ADF82430 		strh	r3, [sp, #36]	@ movhi
 6802 00be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6803              	.LVL360:
 6804 00c2 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6805              		.loc 20 657 85 view .LVU1850
 6806 00c4 9E48     		ldr	r0, .L431
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6807              		.loc 20 657 18 view .LVU1851
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 244


 6808 00c6 ADF82830 		strh	r3, [sp, #40]	@ movhi
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6809              		.loc 20 657 85 view .LVU1852
 6810 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6811              	.LVL361:
 657:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6812              		.loc 20 657 18 view .LVU1853
 6813 00ce 0023     		movs	r3, #0
 6814 00d0 80EE080A 		vdiv.f32	s0, s0, s16
 6815 00d4 A148     		ldr	r0, .L431+28
 6816 00d6 DDE90912 		ldrd	r1, r2, [sp, #36]
 6817 00da FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6818              	.LVL362:
 658:Veno-Echo.cpp **** 
 6819              		.loc 20 658 5 is_stmt 1 view .LVU1854
 658:Veno-Echo.cpp **** 
 6820              		.loc 20 658 20 is_stmt 0 view .LVU1855
 6821 00de 1820     		movs	r0, #24
 6822 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6823              	.LVL363:
 6824 00e4 0346     		mov	r3, r0	@ movhi
 6825 00e6 0420     		movs	r0, #4
 6826 00e8 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6827 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6828              	.LVL364:
 6829 00f0 0346     		mov	r3, r0	@ movhi
 658:Veno-Echo.cpp **** 
 6830              		.loc 20 658 93 view .LVU1856
 6831 00f2 9348     		ldr	r0, .L431
 658:Veno-Echo.cpp **** 
 6832              		.loc 20 658 20 view .LVU1857
 6833 00f4 ADF83030 		strh	r3, [sp, #48]	@ movhi
 658:Veno-Echo.cpp **** 
 6834              		.loc 20 658 93 view .LVU1858
 6835 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6836              	.LVL365:
 658:Veno-Echo.cpp **** 
 6837              		.loc 20 658 20 view .LVU1859
 6838 00fc 2346     		mov	r3, r4
 6839 00fe 80EE080A 		vdiv.f32	s0, s0, s16
 6840 0102 9748     		ldr	r0, .L431+32
 6841 0104 DDE90B12 		ldrd	r1, r2, [sp, #44]
 6842 0108 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6843              	.LVL366:
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6844              		.loc 20 661 5 is_stmt 1 view .LVU1860
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6845              		.loc 20 661 22 is_stmt 0 view .LVU1861
 6846 010c 0020     		movs	r0, #0
 6847 010e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6848              	.LVL367:
 6849 0112 0346     		mov	r3, r0	@ movhi
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6850              		.loc 20 661 55 view .LVU1862
 6851 0114 8A48     		ldr	r0, .L431
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6852              		.loc 20 661 22 view .LVU1863
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 245


 6853 0116 ADF83430 		strh	r3, [sp, #52]	@ movhi
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6854              		.loc 20 661 55 view .LVU1864
 6855 011a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6856              	.LVL368:
 661:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6857              		.loc 20 661 22 view .LVU1865
 6858 011e 0D99     		ldr	r1, [sp, #52]
 6859 0120 80EE080A 		vdiv.f32	s0, s0, s16
 6860 0124 4246     		mov	r2, r8
 6861 0126 4346     		mov	r3, r8
 6862 0128 8E48     		ldr	r0, .L431+36
 6863 012a 0094     		str	r4, [sp]
 6864 012c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6865              	.LVL369:
 662:Veno-Echo.cpp **** 
 6866              		.loc 20 662 5 is_stmt 1 view .LVU1866
 662:Veno-Echo.cpp **** 
 6867              		.loc 20 662 22 is_stmt 0 view .LVU1867
 6868 0130 4046     		mov	r0, r8
 6869 0132 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6870              	.LVL370:
 6871 0136 0346     		mov	r3, r0	@ movhi
 662:Veno-Echo.cpp **** 
 6872              		.loc 20 662 55 view .LVU1868
 6873 0138 8148     		ldr	r0, .L431
 662:Veno-Echo.cpp **** 
 6874              		.loc 20 662 22 view .LVU1869
 6875 013a ADF83830 		strh	r3, [sp, #56]	@ movhi
 662:Veno-Echo.cpp **** 
 6876              		.loc 20 662 55 view .LVU1870
 6877 013e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6878              	.LVL371:
 662:Veno-Echo.cpp **** 
 6879              		.loc 20 662 22 view .LVU1871
 6880 0142 4246     		mov	r2, r8
 6881 0144 80EE080A 		vdiv.f32	s0, s0, s16
 6882 0148 0E99     		ldr	r1, [sp, #56]
 6883 014a 4346     		mov	r3, r8
 6884 014c 8648     		ldr	r0, .L431+40
 6885 014e 0094     		str	r4, [sp]
 6886              	.LBB1558:
 6887              	.LBB1559:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6888              		.loc 8 54 63 view .LVU1872
 6889 0150 4FF07C54 		mov	r4, #1056964608
 6890              	.LBE1559:
 6891              	.LBE1558:
 662:Veno-Echo.cpp **** 
 6892              		.loc 20 662 22 view .LVU1873
 6893 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6894              	.LVL372:
 665:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6895              		.loc 20 665 5 is_stmt 1 view .LVU1874
 665:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6896              		.loc 20 665 14 is_stmt 0 view .LVU1875
 6897 0158 1720     		movs	r0, #23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 246


 6898 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6899              	.LVL373:
 6900 015e 0346     		mov	r3, r0	@ movhi
 665:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6901              		.loc 20 665 48 view .LVU1876
 6902 0160 7748     		ldr	r0, .L431
 665:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6903              		.loc 20 665 14 view .LVU1877
 6904 0162 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 665:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6905              		.loc 20 665 48 view .LVU1878
 6906 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6907              	.LVL374:
 665:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6908              		.loc 20 665 14 view .LVU1879
 6909 016a 0F99     		ldr	r1, [sp, #60]
 6910 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6911 0170 7E48     		ldr	r0, .L431+44
 6912 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6913              	.LVL375:
 666:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6914              		.loc 20 666 6 is_stmt 1 view .LVU1880
 666:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6915              		.loc 20 666 18 is_stmt 0 view .LVU1881
 6916 0176 7E49     		ldr	r1, .L431+48
 6917 0178 7E48     		ldr	r0, .L431+52
 6918 017a FFF7FEFF 		bl	_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
 6919              	.LVL376:
 669:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6920              		.loc 20 669 5 is_stmt 1 view .LVU1882
 669:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6921              		.loc 20 669 20 is_stmt 0 view .LVU1883
 6922 017e 7048     		ldr	r0, .L431
 6923 0180 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6924              	.LVL377:
 6925 0184 3846     		mov	r0, r7
 6926 0186 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6927              	.LVL378:
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6928              		.loc 20 670 5 is_stmt 1 view .LVU1884
 6929              	.LBB1562:
 6930              	.LBI1558:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6931              		.loc 8 54 17 view .LVU1885
 6932              	.LBB1560:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6933              		.loc 8 54 48 view .LVU1886
 6934              	.LBE1560:
 6935              	.LBE1562:
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6936              		.loc 20 675 20 is_stmt 0 view .LVU1887
 6937 018a 6D48     		ldr	r0, .L431
 6938              	.LBB1563:
 6939              	.LBB1552:
 6940              		.loc 8 58 57 view .LVU1888
 6941 018c C7ED008A 		vstr.32	s17, [r7]
 6942              	.LBE1552:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 247


 6943              	.LBE1563:
 6944              	.LBB1564:
 6945              	.LBB1561:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6946              		.loc 8 54 63 view .LVU1889
 6947 0190 BC60     		str	r4, [r7, #8]	@ float
 6948              	.LVL379:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6949              		.loc 8 54 63 view .LVU1890
 6950              	.LBE1561:
 6951              	.LBE1564:
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6952              		.loc 20 671 5 is_stmt 1 view .LVU1891
 6953              	.LBB1565:
 6954              	.LBI1554:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6955              		.loc 8 54 17 view .LVU1892
 6956              	.LBB1556:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6957              		.loc 8 54 48 view .LVU1893
 6958              	.LBE1556:
 6959              	.LBE1565:
 6960              	.LBB1566:
 6961              	.LBB1567:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6962              		.loc 8 54 63 is_stmt 0 view .LVU1894
 6963 0192 7C61     		str	r4, [r7, #20]	@ float
 6964              	.LBE1567:
 6965              	.LBE1566:
 6966              	.LBB1569:
 6967              	.LBB1557:
 6968 0194 FD60     		str	r5, [r7, #12]	@ float
 6969              	.LVL380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6970              		.loc 8 54 63 view .LVU1895
 6971              	.LBE1557:
 6972              	.LBE1569:
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6973              		.loc 20 672 5 is_stmt 1 view .LVU1896
 6974              	.LBB1570:
 6975              	.LBI1566:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6976              		.loc 8 54 17 view .LVU1897
 6977              	.LBB1568:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6978              		.loc 8 54 48 view .LVU1898
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6979              		.loc 8 54 48 is_stmt 0 view .LVU1899
 6980              	.LBE1568:
 6981              	.LBE1570:
 673:Veno-Echo.cpp **** 
 6982              		.loc 20 673 5 is_stmt 1 view .LVU1900
 6983              	.LBB1571:
 6984              	.LBI1550:
 6985              		.loc 8 58 17 view .LVU1901
 6986              	.LBB1553:
 6987              		.loc 8 58 52 view .LVU1902
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 248


 6988              		.loc 8 58 52 is_stmt 0 view .LVU1903
 6989              	.LBE1553:
 6990              	.LBE1571:
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6991              		.loc 20 675 5 is_stmt 1 view .LVU1904
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6992              		.loc 20 675 20 is_stmt 0 view .LVU1905
 6993 0196 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6994              	.LVL381:
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6995              		.loc 20 681 17 view .LVU1906
 6996 019a 774F     		ldr	r7, .L431+56
 675:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6997              		.loc 20 675 20 view .LVU1907
 6998 019c 3046     		mov	r0, r6
 6999 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7000              	.LVL382:
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7001              		.loc 20 676 5 is_stmt 1 view .LVU1908
 7002              	.LBB1572:
 7003              	.LBI1572:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7004              		.loc 8 54 17 view .LVU1909
 7005              	.LBB1573:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7006              		.loc 8 54 48 view .LVU1910
 7007              	.LBE1573:
 7008              	.LBE1572:
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7009              		.loc 20 681 17 is_stmt 0 view .LVU1911
 7010 01a2 6748     		ldr	r0, .L431
 7011              	.LBB1575:
 7012              	.LBB1576:
 7013              		.loc 8 58 57 view .LVU1912
 7014 01a4 C6ED008A 		vstr.32	s17, [r6]
 7015              	.LBE1576:
 7016              	.LBE1575:
 7017              	.LBB1578:
 7018              	.LBB1574:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7019              		.loc 8 54 63 view .LVU1913
 7020 01a8 B460     		str	r4, [r6, #8]	@ float
 7021              	.LVL383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7022              		.loc 8 54 63 view .LVU1914
 7023              	.LBE1574:
 7024              	.LBE1578:
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7025              		.loc 20 677 5 is_stmt 1 view .LVU1915
 7026              	.LBB1579:
 7027              	.LBI1579:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7028              		.loc 8 54 17 view .LVU1916
 7029              	.LBB1580:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7030              		.loc 8 54 48 view .LVU1917
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 249


 7031              		.loc 8 54 63 is_stmt 0 view .LVU1918
 7032 01aa F560     		str	r5, [r6, #12]	@ float
 7033              	.LVL384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7034              		.loc 8 54 63 view .LVU1919
 7035              	.LBE1580:
 7036              	.LBE1579:
 678:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7037              		.loc 20 678 5 is_stmt 1 view .LVU1920
 7038              	.LBB1581:
 7039              	.LBI1581:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7040              		.loc 8 54 17 view .LVU1921
 7041              	.LBB1582:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7042              		.loc 8 54 48 view .LVU1922
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7043              		.loc 8 54 63 is_stmt 0 view .LVU1923
 7044 01ac 7461     		str	r4, [r6, #20]	@ float
 7045              	.LVL385:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7046              		.loc 8 54 63 view .LVU1924
 7047              	.LBE1582:
 7048              	.LBE1581:
 679:Veno-Echo.cpp **** 
 7049              		.loc 20 679 5 is_stmt 1 view .LVU1925
 7050              	.LBB1583:
 7051              	.LBI1575:
 7052              		.loc 8 58 17 view .LVU1926
 7053              	.LBB1577:
 7054              		.loc 8 58 52 view .LVU1927
 7055              		.loc 8 58 52 is_stmt 0 view .LVU1928
 7056              	.LBE1577:
 7057              	.LBE1583:
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7058              		.loc 20 681 5 is_stmt 1 view .LVU1929
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7059              		.loc 20 681 17 is_stmt 0 view .LVU1930
 7060 01ae FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7061              	.LVL386:
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7062              		.loc 20 687 17 view .LVU1931
 7063 01b2 724E     		ldr	r6, .L431+60
 681:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7064              		.loc 20 681 17 view .LVU1932
 7065 01b4 3846     		mov	r0, r7
 7066 01b6 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7067              	.LVL387:
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7068              		.loc 20 682 5 is_stmt 1 view .LVU1933
 7069              	.LBB1584:
 7070              	.LBI1584:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7071              		.loc 8 54 17 view .LVU1934
 7072              	.LBB1585:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7073              		.loc 8 54 48 view .LVU1935
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 250


 7074              	.LBE1585:
 7075              	.LBE1584:
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7076              		.loc 20 687 17 is_stmt 0 view .LVU1936
 7077 01ba 6148     		ldr	r0, .L431
 7078              	.LBB1587:
 7079              	.LBB1588:
 7080              		.loc 8 58 57 view .LVU1937
 7081 01bc C7ED008A 		vstr.32	s17, [r7]
 7082              	.LBE1588:
 7083              	.LBE1587:
 7084              	.LBB1590:
 7085              	.LBB1586:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7086              		.loc 8 54 63 view .LVU1938
 7087 01c0 BD60     		str	r5, [r7, #8]	@ float
 7088              	.LVL388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7089              		.loc 8 54 63 view .LVU1939
 7090              	.LBE1586:
 7091              	.LBE1590:
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7092              		.loc 20 683 5 is_stmt 1 view .LVU1940
 7093              	.LBB1591:
 7094              	.LBI1591:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7095              		.loc 8 54 17 view .LVU1941
 7096              	.LBB1592:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7097              		.loc 8 54 48 view .LVU1942
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7098              		.loc 8 54 63 is_stmt 0 view .LVU1943
 7099 01c2 FD60     		str	r5, [r7, #12]	@ float
 7100              	.LVL389:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7101              		.loc 8 54 63 view .LVU1944
 7102              	.LBE1592:
 7103              	.LBE1591:
 684:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7104              		.loc 20 684 5 is_stmt 1 view .LVU1945
 7105              	.LBB1593:
 7106              	.LBI1593:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7107              		.loc 8 54 17 view .LVU1946
 7108              	.LBB1594:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7109              		.loc 8 54 48 view .LVU1947
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7110              		.loc 8 54 63 is_stmt 0 view .LVU1948
 7111 01c4 7D61     		str	r5, [r7, #20]	@ float
 7112              	.LVL390:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7113              		.loc 8 54 63 view .LVU1949
 7114              	.LBE1594:
 7115              	.LBE1593:
 685:Veno-Echo.cpp **** 
 7116              		.loc 20 685 5 is_stmt 1 view .LVU1950
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 251


 7117              	.LBB1595:
 7118              	.LBI1587:
 7119              		.loc 8 58 17 view .LVU1951
 7120              	.LBB1589:
 7121              		.loc 8 58 52 view .LVU1952
 7122              		.loc 8 58 52 is_stmt 0 view .LVU1953
 7123              	.LBE1589:
 7124              	.LBE1595:
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7125              		.loc 20 687 5 is_stmt 1 view .LVU1954
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7126              		.loc 20 687 17 is_stmt 0 view .LVU1955
 7127 01c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7128              	.LVL391:
 7129 01ca 3046     		mov	r0, r6
 706:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7130              		.loc 20 706 17 view .LVU1956
 7131 01cc 9FED6C8A 		vldr.32	s16, .L431+64
 687:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7132              		.loc 20 687 17 view .LVU1957
 7133 01d0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7134              	.LVL392:
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7135              		.loc 20 688 5 is_stmt 1 view .LVU1958
 7136              	.LBB1596:
 7137              	.LBI1596:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7138              		.loc 8 54 17 view .LVU1959
 7139              	.LBB1597:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7140              		.loc 8 54 48 view .LVU1960
 7141              	.LBE1597:
 7142              	.LBE1596:
 7143              	.LBB1599:
 7144              	.LBB1600:
 7145              	.LBB1601:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7146              		.loc 11 45 16 is_stmt 0 view .LVU1961
 7147 01d4 6B49     		ldr	r1, .L431+68
 7148              	.LBE1601:
 7149              	.LBE1600:
 7150              	.LBE1599:
 7151              	.LBB1606:
 7152              	.LBB1607:
 7153              	.LBB1608:
 7154 01d6 6C4A     		ldr	r2, .L431+72
 7155              	.LBE1608:
 7156              	.LBE1607:
 7157              	.LBE1606:
 7158              	.LBB1613:
 7159              	.LBB1614:
 7160              	.LBB1615:
 7161 01d8 6C4B     		ldr	r3, .L431+76
 7162              	.LBE1615:
 7163              	.LBE1614:
 7164              	.LBE1613:
 7165              	.LBB1620:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 252


 7166              	.LBB1604:
 7167              	.LBB1602:
 7168 01da 0C60     		str	r4, [r1]	@ float
 7169              	.LBE1602:
 7170              	.LBE1604:
 7171              	.LBE1620:
 7172              	.LBB1621:
 7173              	.LBB1611:
 7174              	.LBB1609:
 7175 01dc 1460     		str	r4, [r2]	@ float
 7176              	.LBE1609:
 7177              	.LBE1611:
 7178              	.LBE1621:
 7179              	.LBB1622:
 7180              	.LBB1618:
 7181              	.LBB1616:
 7182 01de 1C60     		str	r4, [r3]	@ float
 7183              	.LBE1616:
 7184              	.LBE1618:
 7185              	.LBE1622:
 7186              	.LBB1623:
 7187              	.LBB1548:
 7188              		.loc 11 64 50 view .LVU1962
 7189 01e0 81F80480 		strb	r8, [r1, #4]
 7190              	.LBE1548:
 7191              	.LBE1623:
 7192              	.LBB1624:
 7193              	.LBB1625:
 7194 01e4 82F80480 		strb	r8, [r2, #4]
 7195              	.LBE1625:
 7196              	.LBE1624:
 7197              	.LBB1627:
 7198              	.LBB1628:
 7199 01e8 83F80480 		strb	r8, [r3, #4]
 7200              	.LBE1628:
 7201              	.LBE1627:
 702:Veno-Echo.cpp **** 
 7202              		.loc 20 702 15 view .LVU1963
 7203 01ec 5448     		ldr	r0, .L431
 7204              	.LBB1630:
 7205              	.LBB1631:
 7206              		.loc 8 58 57 view .LVU1964
 7207 01ee C6ED008A 		vstr.32	s17, [r6]
 7208              	.LBE1631:
 7209              	.LBE1630:
 7210              	.LBB1633:
 7211              	.LBB1598:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7212              		.loc 8 54 63 view .LVU1965
 7213 01f2 B560     		str	r5, [r6, #8]	@ float
 7214              	.LVL393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7215              		.loc 8 54 63 view .LVU1966
 7216              	.LBE1598:
 7217              	.LBE1633:
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7218              		.loc 20 689 5 is_stmt 1 view .LVU1967
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 253


 7219              	.LBB1634:
 7220              	.LBI1634:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7221              		.loc 8 54 17 view .LVU1968
 7222              	.LBB1635:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7223              		.loc 8 54 48 view .LVU1969
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7224              		.loc 8 54 63 is_stmt 0 view .LVU1970
 7225 01f4 F560     		str	r5, [r6, #12]	@ float
 7226              	.LVL394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7227              		.loc 8 54 63 view .LVU1971
 7228              	.LBE1635:
 7229              	.LBE1634:
 690:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7230              		.loc 20 690 5 is_stmt 1 view .LVU1972
 7231              	.LBB1636:
 7232              	.LBI1636:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7233              		.loc 8 54 17 view .LVU1973
 7234              	.LBB1637:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7235              		.loc 8 54 48 view .LVU1974
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7236              		.loc 8 54 63 is_stmt 0 view .LVU1975
 7237 01f6 7561     		str	r5, [r6, #20]	@ float
 7238              	.LVL395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7239              		.loc 8 54 63 view .LVU1976
 7240              	.LBE1637:
 7241              	.LBE1636:
 691:Veno-Echo.cpp **** 
 7242              		.loc 20 691 5 is_stmt 1 view .LVU1977
 7243              	.LBB1638:
 7244              	.LBI1630:
 7245              		.loc 8 58 17 view .LVU1978
 7246              	.LBB1632:
 7247              		.loc 8 58 52 view .LVU1979
 7248              		.loc 8 58 52 is_stmt 0 view .LVU1980
 7249              	.LBE1632:
 7250              	.LBE1638:
 694:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7251              		.loc 20 694 5 is_stmt 1 view .LVU1981
 7252              	.LBB1639:
 7253              	.LBI1599:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7254              		.loc 11 51 17 view .LVU1982
 7255              	.LBE1639:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7256              		.loc 11 51 26 view .LVU1983
 7257              	.LBB1640:
 7258              	.LBB1605:
 7259              	.LBI1600:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7260              		.loc 11 43 17 view .LVU1984
 7261              	.LBB1603:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 254


  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7262              		.loc 11 45 9 view .LVU1985
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7263              		.loc 11 46 9 view .LVU1986
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7264              		.loc 11 46 9 is_stmt 0 view .LVU1987
 7265              	.LBE1603:
 7266              	.LBE1605:
 7267              	.LBE1640:
 695:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7268              		.loc 20 695 5 is_stmt 1 view .LVU1988
 7269              	.LBB1641:
 7270              	.LBI1546:
 7271              		.loc 11 64 17 view .LVU1989
 7272              	.LBB1549:
 7273              		.loc 11 64 43 view .LVU1990
 7274              		.loc 11 64 43 is_stmt 0 view .LVU1991
 7275              	.LBE1549:
 7276              	.LBE1641:
 696:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7277              		.loc 20 696 5 is_stmt 1 view .LVU1992
 7278              	.LBB1642:
 7279              	.LBI1606:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7280              		.loc 11 51 17 view .LVU1993
 7281              	.LBE1642:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7282              		.loc 11 51 26 view .LVU1994
 7283              	.LBB1643:
 7284              	.LBB1612:
 7285              	.LBI1607:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7286              		.loc 11 43 17 view .LVU1995
 7287              	.LBB1610:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7288              		.loc 11 45 9 view .LVU1996
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7289              		.loc 11 46 9 view .LVU1997
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7290              		.loc 11 46 9 is_stmt 0 view .LVU1998
 7291              	.LBE1610:
 7292              	.LBE1612:
 7293              	.LBE1643:
 697:Veno-Echo.cpp **** 
 7294              		.loc 20 697 5 is_stmt 1 view .LVU1999
 7295              	.LBB1644:
 7296              	.LBI1624:
 7297              		.loc 11 64 17 view .LVU2000
 7298              	.LBB1626:
 7299              		.loc 11 64 43 view .LVU2001
 7300              		.loc 11 64 43 is_stmt 0 view .LVU2002
 7301              	.LBE1626:
 7302              	.LBE1644:
 699:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7303              		.loc 20 699 5 is_stmt 1 view .LVU2003
 7304              	.LBB1645:
 7305              	.LBI1613:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 255


  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7306              		.loc 11 51 17 view .LVU2004
 7307              	.LBE1645:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7308              		.loc 11 51 26 view .LVU2005
 7309              	.LBB1646:
 7310              	.LBB1619:
 7311              	.LBI1614:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7312              		.loc 11 43 17 view .LVU2006
 7313              	.LBB1617:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7314              		.loc 11 45 9 view .LVU2007
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7315              		.loc 11 46 9 view .LVU2008
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7316              		.loc 11 46 9 is_stmt 0 view .LVU2009
 7317              	.LBE1617:
 7318              	.LBE1619:
 7319              	.LBE1646:
 700:Veno-Echo.cpp **** 
 7320              		.loc 20 700 5 is_stmt 1 view .LVU2010
 7321              	.LBB1647:
 7322              	.LBI1627:
 7323              		.loc 11 64 17 view .LVU2011
 7324              	.LBB1629:
 7325              		.loc 11 64 43 view .LVU2012
 7326              		.loc 11 64 43 is_stmt 0 view .LVU2013
 7327              	.LBE1629:
 7328              	.LBE1647:
 702:Veno-Echo.cpp **** 
 7329              		.loc 20 702 5 is_stmt 1 view .LVU2014
 702:Veno-Echo.cpp **** 
 7330              		.loc 20 702 15 is_stmt 0 view .LVU2015
 7331 01f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7332              	.LVL396:
 7333 01fc FFF7FEFF 		bl	_Z10InitDelaysf
 7334              	.LVL397:
 705:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7335              		.loc 20 705 5 is_stmt 1 view .LVU2016
 705:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7336              		.loc 20 705 15 is_stmt 0 view .LVU2017
 7337 0200 4F48     		ldr	r0, .L431
 7338 0202 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7339              	.LVL398:
 7340 0206 6248     		ldr	r0, .L431+80
 7341 0208 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7342              	.LVL399:
 706:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7343              		.loc 20 706 5 is_stmt 1 view .LVU2018
 706:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7344              		.loc 20 706 17 is_stmt 0 view .LVU2019
 7345 020c B0EE480A 		vmov.f32	s0, s16
 7346 0210 5F48     		ldr	r0, .L431+80
 7347 0212 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7348              	.LVL400:
 707:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 256


 7349              		.loc 20 707 5 is_stmt 1 view .LVU2020
 707:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7350              		.loc 20 707 18 is_stmt 0 view .LVU2021
 7351 0216 9FED5F0A 		vldr.32	s0, .L431+84
 7352 021a 5D48     		ldr	r0, .L431+80
 7353 021c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7354              	.LVL401:
 708:Veno-Echo.cpp **** 
 7355              		.loc 20 708 5 is_stmt 1 view .LVU2022
 708:Veno-Echo.cpp **** 
 7356              		.loc 20 708 19 is_stmt 0 view .LVU2023
 7357 0220 9FED5D0A 		vldr.32	s0, .L431+88
 7358 0224 5A48     		ldr	r0, .L431+80
 7359 0226 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7360              	.LVL402:
 710:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7361              		.loc 20 710 5 is_stmt 1 view .LVU2024
 710:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7362              		.loc 20 710 15 is_stmt 0 view .LVU2025
 7363 022a 4548     		ldr	r0, .L431
 7364 022c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7365              	.LVL403:
 7366 0230 5A48     		ldr	r0, .L431+92
 7367 0232 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7368              	.LVL404:
 711:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7369              		.loc 20 711 5 is_stmt 1 view .LVU2026
 711:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7370              		.loc 20 711 17 is_stmt 0 view .LVU2027
 7371 0236 B0EE480A 		vmov.f32	s0, s16
 7372 023a 5848     		ldr	r0, .L431+92
 7373 023c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7374              	.LVL405:
 712:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7375              		.loc 20 712 5 is_stmt 1 view .LVU2028
 712:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7376              		.loc 20 712 18 is_stmt 0 view .LVU2029
 7377 0240 9FED540A 		vldr.32	s0, .L431+84
 7378 0244 5548     		ldr	r0, .L431+92
 7379 0246 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7380              	.LVL406:
 713:Veno-Echo.cpp **** 
 7381              		.loc 20 713 5 is_stmt 1 view .LVU2030
 713:Veno-Echo.cpp **** 
 7382              		.loc 20 713 19 is_stmt 0 view .LVU2031
 7383 024a 9FED530A 		vldr.32	s0, .L431+88
 7384 024e 5348     		ldr	r0, .L431+92
 7385 0250 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7386              	.LVL407:
 716:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7387              		.loc 20 716 5 is_stmt 1 view .LVU2032
 716:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7388              		.loc 20 716 15 is_stmt 0 view .LVU2033
 7389 0254 3A48     		ldr	r0, .L431
 7390 0256 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7391              	.LVL408:
 7392 025a 5148     		ldr	r0, .L431+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 257


 7393 025c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7394              	.LVL409:
 717:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7395              		.loc 20 717 5 is_stmt 1 view .LVU2034
 717:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7396              		.loc 20 717 17 is_stmt 0 view .LVU2035
 7397 0260 B0EE480A 		vmov.f32	s0, s16
 7398 0264 4E48     		ldr	r0, .L431+96
 7399 0266 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7400              	.LVL410:
 718:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7401              		.loc 20 718 5 is_stmt 1 view .LVU2036
 718:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7402              		.loc 20 718 18 is_stmt 0 view .LVU2037
 7403 026a 9FED530A 		vldr.32	s0, .L431+120
 7404 026e 4C48     		ldr	r0, .L431+96
 7405 0270 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7406              	.LVL411:
 719:Veno-Echo.cpp **** 
 7407              		.loc 20 719 5 is_stmt 1 view .LVU2038
 719:Veno-Echo.cpp **** 
 7408              		.loc 20 719 19 is_stmt 0 view .LVU2039
 7409 0274 9FED480A 		vldr.32	s0, .L431+88
 7410 0278 4948     		ldr	r0, .L431+96
 7411 027a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7412              	.LVL412:
 721:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7413              		.loc 20 721 5 is_stmt 1 view .LVU2040
 721:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7414              		.loc 20 721 15 is_stmt 0 view .LVU2041
 7415 027e 3048     		ldr	r0, .L431
 7416 0280 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7417              	.LVL413:
 7418 0284 4748     		ldr	r0, .L431+100
 7419 0286 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7420              	.LVL414:
 722:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7421              		.loc 20 722 5 is_stmt 1 view .LVU2042
 722:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7422              		.loc 20 722 17 is_stmt 0 view .LVU2043
 7423 028a B0EE480A 		vmov.f32	s0, s16
 7424 028e 4548     		ldr	r0, .L431+100
 7425 0290 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7426              	.LVL415:
 723:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7427              		.loc 20 723 5 is_stmt 1 view .LVU2044
 723:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7428              		.loc 20 723 18 is_stmt 0 view .LVU2045
 7429 0294 9FED480A 		vldr.32	s0, .L431+120
 7430 0298 4248     		ldr	r0, .L431+100
 7431 029a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7432              	.LVL416:
 724:Veno-Echo.cpp **** 
 7433              		.loc 20 724 5 is_stmt 1 view .LVU2046
 724:Veno-Echo.cpp **** 
 7434              		.loc 20 724 19 is_stmt 0 view .LVU2047
 7435 029e 9FED3E0A 		vldr.32	s0, .L431+88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 258


 7436 02a2 4048     		ldr	r0, .L431+100
 7437 02a4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7438              	.LVL417:
 727:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7439              		.loc 20 727 5 is_stmt 1 view .LVU2048
 727:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7440              		.loc 20 727 20 is_stmt 0 view .LVU2049
 7441 02a8 2548     		ldr	r0, .L431
 7442 02aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7443              	.LVL418:
 7444 02ae 3E48     		ldr	r0, .L431+104
 7445 02b0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7446              	.LVL419:
 728:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7447              		.loc 20 728 5 is_stmt 1 view .LVU2050
 728:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7448              		.loc 20 728 22 is_stmt 0 view .LVU2051
 7449 02b4 B0EE480A 		vmov.f32	s0, s16
 7450 02b8 3B48     		ldr	r0, .L431+104
 7451 02ba FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7452              	.LVL420:
 729:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7453              		.loc 20 729 5 is_stmt 1 view .LVU2052
 729:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7454              		.loc 20 729 23 is_stmt 0 view .LVU2053
 7455 02be 9FED350A 		vldr.32	s0, .L431+84
 7456 02c2 3948     		ldr	r0, .L431+104
 7457 02c4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7458              	.LVL421:
 730:Veno-Echo.cpp **** 
 7459              		.loc 20 730 5 is_stmt 1 view .LVU2054
 730:Veno-Echo.cpp **** 
 7460              		.loc 20 730 24 is_stmt 0 view .LVU2055
 7461 02c8 9FED330A 		vldr.32	s0, .L431+88
 7462 02cc 3648     		ldr	r0, .L431+104
 7463 02ce FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7464              	.LVL422:
 732:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7465              		.loc 20 732 5 is_stmt 1 view .LVU2056
 732:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7466              		.loc 20 732 20 is_stmt 0 view .LVU2057
 7467 02d2 1B48     		ldr	r0, .L431
 7468 02d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7469              	.LVL423:
 7470 02d8 3448     		ldr	r0, .L431+108
 7471 02da FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7472              	.LVL424:
 733:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7473              		.loc 20 733 5 is_stmt 1 view .LVU2058
 733:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7474              		.loc 20 733 22 is_stmt 0 view .LVU2059
 7475 02de B0EE480A 		vmov.f32	s0, s16
 7476 02e2 3248     		ldr	r0, .L431+108
 7477 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7478              	.LVL425:
 734:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7479              		.loc 20 734 5 is_stmt 1 view .LVU2060
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 259


 734:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7480              		.loc 20 734 23 is_stmt 0 view .LVU2061
 7481 02e8 9FED2A0A 		vldr.32	s0, .L431+84
 7482 02ec 2F48     		ldr	r0, .L431+108
 7483 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7484              	.LVL426:
 735:Veno-Echo.cpp **** 
 7485              		.loc 20 735 5 is_stmt 1 view .LVU2062
 735:Veno-Echo.cpp **** 
 7486              		.loc 20 735 24 is_stmt 0 view .LVU2063
 7487 02f2 9FED290A 		vldr.32	s0, .L431+88
 7488 02f6 2D48     		ldr	r0, .L431+108
 7489 02f8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7490              	.LVL427:
 738:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7491              		.loc 20 738 5 is_stmt 1 view .LVU2064
 738:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7492              		.loc 20 738 20 is_stmt 0 view .LVU2065
 7493 02fc 1048     		ldr	r0, .L431
 7494 02fe FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7495              	.LVL428:
 7496 0302 2B48     		ldr	r0, .L431+112
 7497 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7498              	.LVL429:
 739:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7499              		.loc 20 739 5 is_stmt 1 view .LVU2066
 739:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7500              		.loc 20 739 22 is_stmt 0 view .LVU2067
 7501 0308 B0EE480A 		vmov.f32	s0, s16
 7502 030c 2848     		ldr	r0, .L431+112
 7503 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7504              	.LVL430:
 740:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7505              		.loc 20 740 5 is_stmt 1 view .LVU2068
 740:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7506              		.loc 20 740 23 is_stmt 0 view .LVU2069
 7507 0312 9FED290A 		vldr.32	s0, .L431+120
 7508 0316 2648     		ldr	r0, .L431+112
 7509 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7510              	.LVL431:
 741:Veno-Echo.cpp **** 
 7511              		.loc 20 741 5 is_stmt 1 view .LVU2070
 741:Veno-Echo.cpp **** 
 7512              		.loc 20 741 24 is_stmt 0 view .LVU2071
 7513 031c 9FED1E0A 		vldr.32	s0, .L431+88
 7514 0320 2348     		ldr	r0, .L431+112
 7515 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7516              	.LVL432:
 743:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7517              		.loc 20 743 5 is_stmt 1 view .LVU2072
 743:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7518              		.loc 20 743 20 is_stmt 0 view .LVU2073
 7519 0326 0648     		ldr	r0, .L431
 7520 0328 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7521              	.LVL433:
 7522 032c 2148     		ldr	r0, .L431+116
 7523 032e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 260


 7524              	.LVL434:
 744:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7525              		.loc 20 744 5 is_stmt 1 view .LVU2074
 744:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7526              		.loc 20 744 22 is_stmt 0 view .LVU2075
 7527 0332 B0EE480A 		vmov.f32	s0, s16
 7528 0336 1F48     		ldr	r0, .L431+116
 7529 0338 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7530              	.LVL435:
 7531 033c 3EE0     		b	.L432
 7532              	.L433:
 7533 033e 00BF     		.align	2
 7534              	.L431:
 7535 0340 00000000 		.word	.LANCHOR4
 7536 0344 00000000 		.word	.LANCHOR96
 7537 0348 00000000 		.word	.LANCHOR103
 7538 034c 0AD7233C 		.word	1008981770
 7539 0350 00000000 		.word	.LANCHOR104
 7540 0354 00000000 		.word	.LANCHOR97
 7541 0358 00000000 		.word	.LANCHOR94
 7542 035c 00000000 		.word	.LANCHOR95
 7543 0360 00000000 		.word	.LANCHOR98
 7544 0364 00000000 		.word	.LANCHOR99
 7545 0368 00000000 		.word	.LANCHOR100
 7546 036c 00000000 		.word	.LANCHOR101
 7547 0370 00000000 		.word	.LANCHOR102
 7548 0374 00000000 		.word	.LANCHOR89
 7549 0378 00000000 		.word	.LANCHOR105
 7550 037c 00000000 		.word	.LANCHOR106
 7551 0380 00000000 		.word	0
 7552 0384 00000000 		.word	.LANCHOR107
 7553 0388 00000000 		.word	.LANCHOR108
 7554 038c 00000000 		.word	.LANCHOR65
 7555 0390 00000000 		.word	.LANCHOR47
 7556 0394 00803B46 		.word	1178304512
 7557 0398 3333333F 		.word	1060320051
 7558 039c 00000000 		.word	.LANCHOR48
 7559 03a0 00000000 		.word	.LANCHOR35
 7560 03a4 00000000 		.word	.LANCHOR36
 7561 03a8 00000000 		.word	.LANCHOR49
 7562 03ac 00000000 		.word	.LANCHOR50
 7563 03b0 00000000 		.word	.LANCHOR37
 7564 03b4 00000000 		.word	.LANCHOR38
 7565 03b8 00004843 		.word	1128792064
 7566              	.L432:
 745:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7567              		.loc 20 745 5 is_stmt 1 view .LVU2076
 745:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7568              		.loc 20 745 23 is_stmt 0 view .LVU2077
 7569 03bc 1FED020A 		vldr.32	s0, .L431+120
 7570 03c0 9348     		ldr	r0, .L434
 7571 03c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7572              	.LVL436:
 746:Veno-Echo.cpp **** 
 7573              		.loc 20 746 5 is_stmt 1 view .LVU2078
 746:Veno-Echo.cpp **** 
 7574              		.loc 20 746 24 is_stmt 0 view .LVU2079
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 261


 7575 03c6 9FED930A 		vldr.32	s0, .L434+4
 7576 03ca 9148     		ldr	r0, .L434
 7577 03cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7578              	.LVL437:
 752:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7579              		.loc 20 752 5 is_stmt 1 view .LVU2080
 752:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7580              		.loc 20 752 13 is_stmt 0 view .LVU2081
 7581 03d0 9148     		ldr	r0, .L434+8
 7582 03d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7583              	.LVL438:
 7584 03d6 F0EE407A 		vmov.f32	s15, s0
 7585              	.LVL439:
 7586              	.LBB1648:
 7587              	.LBI1648:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7588              		.loc 9 42 10 is_stmt 1 view .LVU2082
 7589              	.LBB1649:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7590              		.loc 9 44 9 view .LVU2083
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7591              		.loc 9 44 20 is_stmt 0 view .LVU2084
 7592 03da 904F     		ldr	r7, .L434+12
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7593              		.loc 9 46 20 view .LVU2085
 7594 03dc 9FED900A 		vldr.32	s0, .L434+16
 7595              	.LVL440:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7596              		.loc 9 45 27 view .LVU2086
 7597 03e0 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7598              		.loc 9 49 34 view .LVU2087
 7599 03e4 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7600              		.loc 9 47 20 view .LVU2088
 7601 03e6 7C60     		str	r4, [r7, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7602              		.loc 9 44 20 view .LVU2089
 7603 03e8 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7604              		.loc 9 45 9 is_stmt 1 view .LVU2090
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7605              		.loc 9 48 20 is_stmt 0 view .LVU2091
 7606 03ec 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7607              		.loc 9 46 20 view .LVU2092
 7608 03f0 87ED020A 		vstr.32	s0, [r7, #8]
 7609 03f4 8B4C     		ldr	r4, .L434+20
 7610 03f6 8C4D     		ldr	r5, .L434+24
 7611 03f8 8C4E     		ldr	r6, .L434+28
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7612              		.loc 9 45 20 view .LVU2093
 7613 03fa 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7614              		.loc 9 46 9 is_stmt 1 view .LVU2094
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7615              		.loc 9 47 9 view .LVU2095
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 262


  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7616              		.loc 9 48 9 view .LVU2096
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7617              		.loc 9 49 9 view .LVU2097
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7618              		.loc 9 49 34 is_stmt 0 view .LVU2098
 7619 03fe FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7620              	.LVL441:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7621              		.loc 9 52 20 view .LVU2099
 7622 0402 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7623              		.loc 9 49 34 view .LVU2100
 7624 0406 F0EE407A 		vmov.f32	s15, s0
 7625              	.LBE1649:
 7626              	.LBE1648:
 7627              	.LBB1652:
 7628              	.LBB1653:
 7629              		.loc 9 61 34 view .LVU2101
 7630 040a 3846     		mov	r0, r7
 7631              	.LBE1653:
 7632              	.LBE1652:
 7633              	.LBB1657:
 7634              	.LBB1658:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7635              		.loc 9 72 19 view .LVU2102
 7636 040c 87F80080 		strb	r8, [r7]
 7637              	.LBE1658:
 7638              	.LBE1657:
 7639              	.LBB1660:
 7640              	.LBB1650:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7641              		.loc 9 52 20 view .LVU2103
 7642 0410 BB84     		strh	r3, [r7, #36]	@ movhi
 7643              	.LBE1650:
 7644              	.LBE1660:
 7645              	.LBB1661:
 7646              	.LBB1654:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7647              		.loc 9 61 34 view .LVU2104
 7648 0412 B0EE680A 		vmov.f32	s0, s17
 7649              	.LBE1654:
 7650              	.LBE1661:
 7651              	.LBB1662:
 7652              	.LBB1651:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7653              		.loc 9 49 20 view .LVU2105
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 263


 7654 0416 C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7655              		.loc 9 50 9 is_stmt 1 view .LVU2106
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7656              		.loc 9 51 9 view .LVU2107
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7657              		.loc 9 52 9 view .LVU2108
 7658              	.LVL442:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7659              		.loc 9 52 9 is_stmt 0 view .LVU2109
 7660              	.LBE1651:
 7661              	.LBE1662:
 753:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7662              		.loc 20 753 5 is_stmt 1 view .LVU2110
 7663              	.LBB1663:
 7664              	.LBI1657:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7665              		.loc 9 70 17 view .LVU2111
 7666              	.LBB1659:
 7667              		.loc 9 72 9 view .LVU2112
 7668              		.loc 9 72 9 is_stmt 0 view .LVU2113
 7669              	.LBE1659:
 7670              	.LBE1663:
 754:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7671              		.loc 20 754 5 is_stmt 1 view .LVU2114
 7672              	.LBB1664:
 7673              	.LBI1652:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7674              		.loc 9 58 17 view .LVU2115
 7675              	.LBB1655:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7676              		.loc 9 60 9 view .LVU2116
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7677              		.loc 9 61 9 view .LVU2117
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7678              		.loc 9 60 20 is_stmt 0 view .LVU2118
 7679 041a C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7680              		.loc 9 61 34 view .LVU2119
 7681 041e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7682              	.LVL443:
 7683 0422 F0EE407A 		vmov.f32	s15, s0
 7684              	.LBE1655:
 7685              	.LBE1664:
 757:Veno-Echo.cpp **** 
 7686              		.loc 20 757 19 view .LVU2120
 7687 0426 824A     		ldr	r2, .L434+32
 7688 0428 44F62061 		movw	r1, #20000
 7689 042c B7EE040A 		vmov.f32	s0, #1.25e+0
 7690 0430 8048     		ldr	r0, .L434+36
 7691              	.LBB1665:
 7692              	.LBB1666:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7693              		.loc 9 67 46 view .LVU2121
 7694 0432 C7ED018A 		vstr.32	s17, [r7, #4]
 7695              	.LBE1666:
 7696              	.LBE1665:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 264


 7697              	.LBB1668:
 7698              	.LBB1656:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7699              		.loc 9 61 20 view .LVU2122
 7700 0436 C7ED067A 		vstr.32	s15, [r7, #24]
 7701              	.LVL444:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7702              		.loc 9 61 20 view .LVU2123
 7703              	.LBE1656:
 7704              	.LBE1668:
 755:Veno-Echo.cpp **** 
 7705              		.loc 20 755 5 is_stmt 1 view .LVU2124
 7706              	.LBB1669:
 7707              	.LBI1665:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7708              		.loc 9 67 17 view .LVU2125
 7709              	.LBB1667:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7710              		.loc 9 67 41 view .LVU2126
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7711              		.loc 9 67 41 is_stmt 0 view .LVU2127
 7712              	.LBE1667:
 7713              	.LBE1669:
 757:Veno-Echo.cpp **** 
 7714              		.loc 20 757 5 is_stmt 1 view .LVU2128
 757:Veno-Echo.cpp **** 
 7715              		.loc 20 757 19 is_stmt 0 view .LVU2129
 7716 043a FFF7FEFF 		bl	_ZN8Taptempo4initEmmf
 7717              	.LVL445:
 761:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7718              		.loc 20 761 5 is_stmt 1 view .LVU2130
 761:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7719              		.loc 20 761 23 is_stmt 0 view .LVU2131
 7720 043e 1820     		movs	r0, #24
 772:Veno-Echo.cpp **** 
 7721              		.loc 20 772 17 view .LVU2132
 7722 0440 1CAF     		add	r7, sp, #112
 761:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7723              		.loc 20 761 23 view .LVU2133
 7724 0442 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7725              	.LVL446:
 7726 0446 0346     		mov	r3, r0	@ movhi
 7727 0448 7348     		ldr	r0, .L434+8
 7728 044a ADF84030 		strh	r3, [sp, #64]	@ movhi
 7729 044e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7730              	.LVL447:
 7731 0452 1099     		ldr	r1, [sp, #64]
 7732 0454 7848     		ldr	r0, .L434+40
 7733 0456 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7734              	.LVL448:
 762:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7735              		.loc 20 762 5 is_stmt 1 view .LVU2134
 762:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7736              		.loc 20 762 27 is_stmt 0 view .LVU2135
 7737 045a 7648     		ldr	r0, .L434+36
 7738 045c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7739              	.LVL449:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 265


 7740 0460 7548     		ldr	r0, .L434+40
 7741 0462 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7742              	.LVL450:
 763:Veno-Echo.cpp **** 
 7743              		.loc 20 763 5 is_stmt 1 view .LVU2136
 763:Veno-Echo.cpp **** 
 7744              		.loc 20 763 29 is_stmt 0 view .LVU2137
 7745 0466 7448     		ldr	r0, .L434+40
 7746 0468 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7747              	.LVL451:
 767:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7748              		.loc 20 767 5 is_stmt 1 view .LVU2138
 767:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7749              		.loc 20 767 41 is_stmt 0 view .LVU2139
 7750 046c 1CA8     		add	r0, sp, #112
 7751 046e FFF7FEFF 		bl	_Z12LoadSettingsv
 7752              	.LVL452:
 771:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7753              		.loc 20 771 5 is_stmt 1 view .LVU2140
 771:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7754              		.loc 20 771 18 is_stmt 0 view .LVU2141
 7755 0472 1CA8     		add	r0, sp, #112
 7756 0474 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7757              	.LVL453:
 772:Veno-Echo.cpp **** 
 7758              		.loc 20 772 5 is_stmt 1 view .LVU2142
 772:Veno-Echo.cpp **** 
 7759              		.loc 20 772 17 is_stmt 0 view .LVU2143
 7760 0478 DFF8C8C1 		ldr	ip, .L434+52
 7761 047c 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7762 047e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7763 0482 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7764 0484 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7765 0488 97E80700 		ldm	r7, {r0, r1, r2}
 7766 048c 8CE80700 		stm	ip, {r0, r1, r2}
 777:Veno-Echo.cpp **** 
 7767              		.loc 20 777 5 is_stmt 1 view .LVU2144
 779:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7768              		.loc 20 779 5 view .LVU2145
 779:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7769              		.loc 20 779 28 is_stmt 0 view .LVU2146
 7770 0490 0F20     		movs	r0, #15
 7771 0492 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7772              	.LVL454:
 7773 0496 0346     		mov	r3, r0	@ movhi
 7774 0498 32A8     		add	r0, sp, #200
 7775 049a ADF84430 		strh	r3, [sp, #68]	@ movhi
 7776 049e 1199     		ldr	r1, [sp, #68]
 7777 04a0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7778              	.LVL455:
 780:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7779              		.loc 20 780 5 is_stmt 1 view .LVU2147
 780:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7780              		.loc 20 780 28 is_stmt 0 view .LVU2148
 7781 04a4 1020     		movs	r0, #16
 7782 04a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7783              	.LVL456:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 266


 7784 04aa 0346     		mov	r3, r0	@ movhi
 7785 04ac 0DF1D900 		add	r0, sp, #217
 7786 04b0 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7787 04b4 1299     		ldr	r1, [sp, #72]
 7788 04b6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7789              	.LVL457:
 781:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7790              		.loc 20 781 5 is_stmt 1 view .LVU2149
 781:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7791              		.loc 20 781 28 is_stmt 0 view .LVU2150
 7792 04ba 1120     		movs	r0, #17
 7793 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7794              	.LVL458:
 7795 04c0 0346     		mov	r3, r0	@ movhi
 7796 04c2 0DF1EA00 		add	r0, sp, #234
 7797 04c6 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7798 04ca 1399     		ldr	r1, [sp, #76]
 7799 04cc FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7800              	.LVL459:
 782:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7801              		.loc 20 782 5 is_stmt 1 view .LVU2151
 782:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7802              		.loc 20 782 28 is_stmt 0 view .LVU2152
 7803 04d0 1220     		movs	r0, #18
 7804 04d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7805              	.LVL460:
 7806 04d6 0346     		mov	r3, r0	@ movhi
 7807 04d8 0DF1FB00 		add	r0, sp, #251
 7808 04dc ADF85030 		strh	r3, [sp, #80]	@ movhi
 7809 04e0 1499     		ldr	r1, [sp, #80]
 7810 04e2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7811              	.LVL461:
 783:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7812              		.loc 20 783 5 is_stmt 1 view .LVU2153
 783:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7813              		.loc 20 783 28 is_stmt 0 view .LVU2154
 7814 04e6 1320     		movs	r0, #19
 7815 04e8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7816              	.LVL462:
 7817 04ec 0346     		mov	r3, r0	@ movhi
 7818 04ee 43A8     		add	r0, sp, #268
 7819 04f0 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7820 04f4 1599     		ldr	r1, [sp, #84]
 7821 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7822              	.LVL463:
 784:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7823              		.loc 20 784 5 is_stmt 1 view .LVU2155
 784:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7824              		.loc 20 784 28 is_stmt 0 view .LVU2156
 7825 04fa 1420     		movs	r0, #20
 7826 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7827              	.LVL464:
 7828 0500 0346     		mov	r3, r0	@ movhi
 7829 0502 0DF21D10 		addw	r0, sp, #285
 7830 0506 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7831 050a 1699     		ldr	r1, [sp, #88]
 7832 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 267


 7833              	.LVL465:
 786:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7834              		.loc 20 786 5 is_stmt 1 view .LVU2157
 786:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7835              		.loc 20 786 28 is_stmt 0 view .LVU2158
 7836 0510 1620     		movs	r0, #22
 7837 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7838              	.LVL466:
 7839 0516 0346     		mov	r3, r0	@ movhi
 7840 0518 0DF59770 		add	r0, sp, #302
 7841 051c ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7842 0520 1799     		ldr	r1, [sp, #92]
 7843 0522 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7844              	.LVL467:
 787:Veno-Echo.cpp **** 
 7845              		.loc 20 787 5 is_stmt 1 view .LVU2159
 787:Veno-Echo.cpp **** 
 7846              		.loc 20 787 25 is_stmt 0 view .LVU2160
 7847 0526 1920     		movs	r0, #25
 7848 0528 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7849              	.LVL468:
 7850 052c 0346     		mov	r3, r0	@ movhi
 7851 052e 0E20     		movs	r0, #14
 7852 0530 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7853 0534 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7854              	.LVL469:
 7855 0538 0346     		mov	r3, r0	@ movhi
 7856 053a 0D20     		movs	r0, #13
 7857 053c ADF86430 		strh	r3, [sp, #100]	@ movhi
 7858 0540 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7859              	.LVL470:
 7860 0544 0346     		mov	r3, r0	@ movhi
 7861 0546 0C20     		movs	r0, #12
 7862 0548 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7863 054c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7864              	.LVL471:
 7865 0550 BDF86810 		ldrh	r1, [sp, #104]
 7866 0554 0822     		movs	r2, #8
 7867 0556 199B     		ldr	r3, [sp, #100]
 7868 0558 ADF80010 		strh	r1, [sp]	@ movhi
 7869 055c ADF80400 		strh	r0, [sp, #4]	@ movhi
 7870 0560 1899     		ldr	r1, [sp, #96]
 7871 0562 ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7872 0566 0DF23F10 		addw	r0, sp, #319
 7873 056a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7874              	.LVL472:
 790:Veno-Echo.cpp ****     hw.adc.Start();
 7875              		.loc 20 790 5 is_stmt 1 view .LVU2161
 790:Veno-Echo.cpp ****     hw.adc.Start();
 7876              		.loc 20 790 16 is_stmt 0 view .LVU2162
 7877 056e 32A9     		add	r1, sp, #200
 7878 0570 0623     		movs	r3, #6
 7879 0572 0822     		movs	r2, #8
 7880 0574 3148     		ldr	r0, .L434+44
 7881 0576 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7882              	.LVL473:
 791:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 268


 7883              		.loc 20 791 5 is_stmt 1 view .LVU2163
 791:Veno-Echo.cpp **** 
 7884              		.loc 20 791 17 is_stmt 0 view .LVU2164
 7885 057a 3048     		ldr	r0, .L434+44
 7886 057c FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7887              	.LVL474:
 794:Veno-Echo.cpp ****     // start audio callback
 7888              		.loc 20 794 5 is_stmt 1 view .LVU2165
 794:Veno-Echo.cpp ****     // start audio callback
 7889              		.loc 20 794 25 is_stmt 0 view .LVU2166
 7890 0580 4146     		mov	r1, r8
 7891 0582 2548     		ldr	r0, .L434+8
 7892 0584 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7893              	.LVL475:
 796:Veno-Echo.cpp **** 
 7894              		.loc 20 796 5 is_stmt 1 view .LVU2167
 796:Veno-Echo.cpp **** 
 7895              		.loc 20 796 18 is_stmt 0 view .LVU2168
 7896 0588 2D49     		ldr	r1, .L434+48
 7897 058a 2348     		ldr	r0, .L434+8
 7898 058c FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7899              	.LVL476:
 7900              	.L422:
 800:Veno-Echo.cpp ****      {  
 7901              		.loc 20 800 6 is_stmt 1 view .LVU2169
 7902              	.LBB1670:
 803:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 7903              		.loc 20 803 9 view .LVU2170
 806:Veno-Echo.cpp ****         {
 7904              		.loc 20 806 9 view .LVU2171
 7905              	.LBB1671:
 7906              	.LBB1672:
 7907              	.LBI1672:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7908              		.loc 23 87 5 view .LVU2172
 7909              	.LBE1672:
 7910              	.LBE1671:
 7911              	.LBE1670:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7912              		.loc 23 88 7 view .LVU2173
 7913              	.LBB1703:
 7914              	.LBB1700:
 7915              	.LBB1678:
 7916              	.LBB1673:
 7917              	.LBI1673:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 269


 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7918              		.loc 22 413 7 view .LVU2174
 7919              		.loc 22 413 7 is_stmt 0 view .LVU2175
 7920              	.LBE1673:
 7921              	.LBE1678:
 808:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7922              		.loc 20 808 13 is_stmt 1 view .LVU2176
 7923              	.LBB1679:
 7924              	.LBI1679:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 7925              		.loc 23 80 5 view .LVU2177
 7926              	.LBE1679:
 7927              	.LBE1700:
 7928              	.LBE1703:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7929              		.loc 23 81 7 view .LVU2178
 7930              	.LBB1704:
 7931              	.LBB1701:
 7932              	.LBB1688:
 7933              	.LBB1680:
 7934              	.LBI1680:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7935              		.loc 22 288 7 view .LVU2179
 7936              	.LBB1681:
 7937              	.LBI1681:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7938              		.loc 22 390 7 view .LVU2180
 7939              	.LBE1681:
 7940              	.LBE1680:
 7941              	.LBE1688:
 7942              	.LBB1689:
 815:Veno-Echo.cpp ****            {
 7943              		.loc 20 815 12 view .LVU2181
 7944              	.LBE1689:
 7945              	.LBB1694:
 7946              	.LBB1676:
 7947              	.LBB1674:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7948              		.loc 22 419 24 is_stmt 0 view .LVU2182
 7949 0590 BFF35B8F 		dmb	ish
 7950 0594 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7951              	.LBE1674:
 7952              	.LBE1676:
 7953              	.LBE1694:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 270


 7954              	.LBB1695:
 7955              	.LBB1686:
 7956              	.LBB1684:
 7957              	.LBB1682:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7958              		.loc 22 397 18 view .LVU2183
 7959 0596 0021     		movs	r1, #0
 7960              	.LBE1682:
 7961              	.LBE1684:
 7962              	.LBE1686:
 7963              	.LBE1695:
 809:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7964              		.loc 20 809 23 view .LVU2184
 7965 0598 0122     		movs	r2, #1
 7966              	.LBB1696:
 7967              	.LBB1677:
 7968              	.LBB1675:
 7969              		.loc 22 419 24 view .LVU2185
 7970 059a BFF35B8F 		dmb	ish
 7971              	.LBE1675:
 7972              	.LBE1677:
 7973              	.LBE1696:
 806:Veno-Echo.cpp ****         {
 7974              		.loc 20 806 9 view .LVU2186
 7975 059e 4BB1     		cbz	r3, .L423
 7976              	.LBB1697:
 7977              	.LBB1687:
 7978              	.LBB1685:
 7979              	.LBB1683:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7980              		.loc 22 397 18 view .LVU2187
 7981 05a0 BFF35B8F 		dmb	ish
 7982 05a4 2170     		strb	r1, [r4]
 7983 05a6 BFF35B8F 		dmb	ish
 7984              	.LVL477:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7985              		.loc 22 397 18 view .LVU2188
 7986              	.LBE1683:
 7987              	.LBE1685:
 7988              	.LBE1687:
 7989              	.LBE1697:
 809:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7990              		.loc 20 809 13 is_stmt 1 view .LVU2189
 809:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7991              		.loc 20 809 23 is_stmt 0 view .LVU2190
 7992 05aa 2A70     		strb	r2, [r5]
 810:Veno-Echo.cpp ****         }
 7993              		.loc 20 810 13 is_stmt 1 view .LVU2191
 810:Veno-Echo.cpp ****         }
 7994              		.loc 20 810 39 is_stmt 0 view .LVU2192
 7995 05ac FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7996              	.LVL478:
 810:Veno-Echo.cpp ****         }
 7997              		.loc 20 810 23 view .LVU2193
 7998 05b0 3060     		str	r0, [r6]
 7999 05b2 EDE7     		b	.L422
 8000              	.LVL479:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 271


 8001              	.L423:
 8002              	.LBB1698:
 8003              	.LBB1690:
 815:Veno-Echo.cpp ****            {
 8004              		.loc 20 815 25 view .LVU2194
 8005 05b4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 815:Veno-Echo.cpp ****            {
 8006              		.loc 20 815 12 view .LVU2195
 8007 05b6 012B     		cmp	r3, #1
 8008 05b8 0BD0     		beq	.L430
 8009              	.L425:
 8010              	.LBE1690:
 831:Veno-Echo.cpp ****            {
 8011              		.loc 20 831 12 is_stmt 1 view .LVU2196
 8012 05ba 022B     		cmp	r3, #2
 8013 05bc E8D1     		bne	.L422
 833:Veno-Echo.cpp ****             {
 8014              		.loc 20 833 13 view .LVU2197
 833:Veno-Echo.cpp ****             {
 8015              		.loc 20 833 30 is_stmt 0 view .LVU2198
 8016 05be FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8017              	.LVL480:
 835:Veno-Echo.cpp ****             }
 8018              		.loc 20 835 21 is_stmt 1 view .LVU2199
 833:Veno-Echo.cpp ****             {
 8019              		.loc 20 833 33 is_stmt 0 view .LVU2200
 8020 05c2 3368     		ldr	r3, [r6]
 835:Veno-Echo.cpp ****             }
 8021              		.loc 20 835 31 view .LVU2201
 8022 05c4 0022     		movs	r2, #0
 833:Veno-Echo.cpp ****             {
 8023              		.loc 20 833 33 view .LVU2202
 8024 05c6 C01A     		subs	r0, r0, r3
 833:Veno-Echo.cpp ****             {
 8025              		.loc 20 833 13 view .LVU2203
 8026 05c8 B0F5966F 		cmp	r0, #1200
 8027 05cc E0D9     		bls	.L422
 835:Veno-Echo.cpp ****             }
 8028              		.loc 20 835 31 view .LVU2204
 8029 05ce 2A70     		strb	r2, [r5]
 8030 05d0 DEE7     		b	.L422
 8031              	.L430:
 8032              	.LBE1698:
 8033              	.LBE1701:
 8034              	.LBE1704:
 817:Veno-Echo.cpp ****                 {
 8035              		.loc 20 817 16 is_stmt 1 view .LVU2205
 8036              	.LBB1705:
 8037              	.LBB1702:
 8038              	.LBB1699:
 8039              	.LBB1693:
 8040              	.LBB1691:
 817:Veno-Echo.cpp ****                 {
 8041              		.loc 20 817 33 is_stmt 0 view .LVU2206
 8042 05d2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8043              	.LVL481:
 817:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 272


 8044              		.loc 20 817 36 view .LVU2207
 8045 05d6 3368     		ldr	r3, [r6]
 8046 05d8 C01A     		subs	r0, r0, r3
 817:Veno-Echo.cpp ****                 {
 8047              		.loc 20 817 16 view .LVU2208
 8048 05da B0F57A7F 		cmp	r0, #1000
 8049 05de 01D8     		bhi	.L426
 8050              	.L429:
 8051 05e0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8052 05e2 EAE7     		b	.L425
 8053              	.L426:
 8054              	.LBB1692:
 819:Veno-Echo.cpp ****                     
 8055              		.loc 20 819 21 is_stmt 1 view .LVU2209
 821:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8056              		.loc 20 821 30 is_stmt 0 view .LVU2210
 8057 05e4 DFF85CC0 		ldr	ip, .L434+52
 8058 05e8 27AF     		add	r7, sp, #156
 819:Veno-Echo.cpp ****                     
 8059              		.loc 20 819 31 view .LVU2211
 8060 05ea 4FF0020E 		mov	lr, #2
 821:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8061              		.loc 20 821 30 view .LVU2212
 8062 05ee BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8063 05f2 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8064 05f4 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8065 05f8 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8066 05fa 9CE80700 		ldm	ip, {r0, r1, r2}
 8067 05fe 87E80700 		stm	r7, {r0, r1, r2}
 822:Veno-Echo.cpp ****                     {
 8068              		.loc 20 822 37 view .LVU2213
 8069 0602 27A8     		add	r0, sp, #156
 819:Veno-Echo.cpp ****                     
 8070              		.loc 20 819 31 view .LVU2214
 8071 0604 85F800E0 		strb	lr, [r5]
 821:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8072              		.loc 20 821 21 is_stmt 1 view .LVU2215
 822:Veno-Echo.cpp ****                     {
 8073              		.loc 20 822 21 view .LVU2216
 822:Veno-Echo.cpp ****                     {
 8074              		.loc 20 822 37 is_stmt 0 view .LVU2217
 8075 0608 FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 8076              	.LVL482:
 8077 060c E8E7     		b	.L429
 8078              	.L435:
 8079 060e 00BF     		.align	2
 8080              	.L434:
 8081 0610 00000000 		.word	.LANCHOR38
 8082 0614 3333333F 		.word	1060320051
 8083 0618 00000000 		.word	.LANCHOR4
 8084 061c 00000000 		.word	.LANCHOR76
 8085 0620 0000C842 		.word	1120403456
 8086 0624 00000000 		.word	.LANCHOR16
 8087 0628 00000000 		.word	.LANCHOR109
 8088 062c 00000000 		.word	.LANCHOR110
 8089 0630 808D5B00 		.word	6000000
 8090 0634 00000000 		.word	.LANCHOR26
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 273


 8091 0638 00000000 		.word	.LANCHOR91
 8092 063c 18000000 		.word	.LANCHOR4+24
 8093 0640 00000000 		.word	_ZL13AudioCallbackPfS_j
 8094 0644 00000000 		.word	.LANCHOR15
 8095              	.LBE1692:
 8096              	.LBE1691:
 8097              	.LBE1693:
 8098              	.LBE1699:
 8099              	.LBE1702:
 8100              	.LBE1705:
 8101              		.cfi_endproc
 8102              	.LFE4311:
 8104              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8105              		.align	1
 8106              		.p2align 2,,3
 8107              		.global	_Z13TurnOnAllLEDsv
 8108              		.syntax unified
 8109              		.thumb
 8110              		.thumb_func
 8111              		.fpu fpv5-d16
 8113              	_Z13TurnOnAllLEDsv:
 8114              	.LFB4334:
1963:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8115              		.loc 20 1963 1 is_stmt 1 view -0
 8116              		.cfi_startproc
 8117              		@ args = 0, pretend = 0, frame = 0
 8118              		@ frame_needed = 0, uses_anonymous_args = 0
1964:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8119              		.loc 20 1964 5 view .LVU2219
1963:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8120              		.loc 20 1963 1 is_stmt 0 view .LVU2220
 8121 0000 08B5     		push	{r3, lr}
 8122              		.cfi_def_cfa_offset 8
 8123              		.cfi_offset 3, -8
 8124              		.cfi_offset 14, -4
1964:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8125              		.loc 20 1964 26 view .LVU2221
 8126 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8127 0006 1148     		ldr	r0, .L438
 8128 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8129              	.LVL483:
1965:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8130              		.loc 20 1965 5 is_stmt 1 view .LVU2222
1965:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8131              		.loc 20 1965 28 is_stmt 0 view .LVU2223
 8132 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8133 0010 0F48     		ldr	r0, .L438+4
 8134 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8135              	.LVL484:
1966:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8136              		.loc 20 1966 5 is_stmt 1 view .LVU2224
1966:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8137              		.loc 20 1966 28 is_stmt 0 view .LVU2225
 8138 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8139 001a 0E48     		ldr	r0, .L438+8
 8140 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8141              	.LVL485:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 274


1967:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8142              		.loc 20 1967 5 is_stmt 1 view .LVU2226
1967:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8143              		.loc 20 1967 21 is_stmt 0 view .LVU2227
 8144 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8145 0024 0C48     		ldr	r0, .L438+12
 8146 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8147              	.LVL486:
1968:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8148              		.loc 20 1968 5 is_stmt 1 view .LVU2228
1968:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8149              		.loc 20 1968 21 is_stmt 0 view .LVU2229
 8150 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8151 002e 0B48     		ldr	r0, .L438+16
 8152 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8153              	.LVL487:
1969:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8154              		.loc 20 1969 5 is_stmt 1 view .LVU2230
1969:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8155              		.loc 20 1969 19 is_stmt 0 view .LVU2231
 8156 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8157 0038 0948     		ldr	r0, .L438+20
 8158 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8159              	.LVL488:
1970:Veno-Echo.cpp **** }
 8160              		.loc 20 1970 5 is_stmt 1 view .LVU2232
1970:Veno-Echo.cpp **** }
 8161              		.loc 20 1970 19 is_stmt 0 view .LVU2233
 8162 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8163 0042 0848     		ldr	r0, .L438+24
1971:Veno-Echo.cpp **** 
 8164              		.loc 20 1971 1 view .LVU2234
 8165 0044 BDE80840 		pop	{r3, lr}
 8166              		.cfi_restore 14
 8167              		.cfi_restore 3
 8168              		.cfi_def_cfa_offset 0
1970:Veno-Echo.cpp **** }
 8169              		.loc 20 1970 19 view .LVU2235
 8170 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8171              	.LVL489:
 8172              	.L439:
 8173              		.align	2
 8174              	.L438:
 8175 004c 00000000 		.word	.LANCHOR91
 8176 0050 04000000 		.word	.LANCHOR0+4
 8177 0054 04000000 		.word	.LANCHOR1+4
 8178 0058 00000000 		.word	.LANCHOR94
 8179 005c 00000000 		.word	.LANCHOR95
 8180 0060 00000000 		.word	.LANCHOR96
 8181 0064 00000000 		.word	.LANCHOR97
 8182              		.cfi_endproc
 8183              	.LFE4334:
 8185              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8186              		.align	1
 8187              		.p2align 2,,3
 8188              		.global	_Z12ResetAllLEDsv
 8189              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 275


 8190              		.thumb
 8191              		.thumb_func
 8192              		.fpu fpv5-d16
 8194              	_Z12ResetAllLEDsv:
 8195              	.LFB4335:
1974:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8196              		.loc 20 1974 1 is_stmt 1 view -0
 8197              		.cfi_startproc
 8198              		@ args = 0, pretend = 0, frame = 0
 8199              		@ frame_needed = 0, uses_anonymous_args = 0
1975:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8200              		.loc 20 1975 5 view .LVU2237
1974:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8201              		.loc 20 1974 1 is_stmt 0 view .LVU2238
 8202 0000 08B5     		push	{r3, lr}
 8203              		.cfi_def_cfa_offset 8
 8204              		.cfi_offset 3, -8
 8205              		.cfi_offset 14, -4
1975:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8206              		.loc 20 1975 26 view .LVU2239
 8207 0002 9FED1E0A 		vldr.32	s0, .L447
 8208 0006 1E48     		ldr	r0, .L447+4
 8209 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8210              	.LVL490:
1976:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8211              		.loc 20 1976 5 is_stmt 1 view .LVU2240
1976:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8212              		.loc 20 1976 28 is_stmt 0 view .LVU2241
 8213 000c 9FED1B0A 		vldr.32	s0, .L447
 8214 0010 1C48     		ldr	r0, .L447+8
 8215 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8216              	.LVL491:
1977:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8217              		.loc 20 1977 5 is_stmt 1 view .LVU2242
1977:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8218              		.loc 20 1977 28 is_stmt 0 view .LVU2243
 8219 0016 1C48     		ldr	r0, .L447+12
 8220 0018 9FED180A 		vldr.32	s0, .L447
 8221 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8222              	.LVL492:
1978:Veno-Echo.cpp ****     {
 8223              		.loc 20 1978 5 is_stmt 1 view .LVU2244
1978:Veno-Echo.cpp ****     {
 8224              		.loc 20 1978 26 is_stmt 0 view .LVU2245
 8225 0020 1A48     		ldr	r0, .L447+16
 8226 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8227              	.LVL493:
1978:Veno-Echo.cpp ****     {
 8228              		.loc 20 1978 5 view .LVU2246
 8229 0026 C8B9     		cbnz	r0, .L441
1980:Veno-Echo.cpp ****     }
 8230              		.loc 20 1980 9 is_stmt 1 view .LVU2247
1980:Veno-Echo.cpp ****     }
 8231              		.loc 20 1980 25 is_stmt 0 view .LVU2248
 8232 0028 1848     		ldr	r0, .L447+16
 8233 002a 9FED140A 		vldr.32	s0, .L447
 8234 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 276


 8235              	.LVL494:
1987:Veno-Echo.cpp ****     {
 8236              		.loc 20 1987 5 is_stmt 1 view .LVU2249
1987:Veno-Echo.cpp ****     {
 8237              		.loc 20 1987 26 is_stmt 0 view .LVU2250
 8238 0032 1748     		ldr	r0, .L447+20
 8239 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8240              	.LVL495:
1987:Veno-Echo.cpp ****     {
 8241              		.loc 20 1987 5 view .LVU2251
 8242 0038 D0B9     		cbnz	r0, .L443
 8243              	.L446:
1989:Veno-Echo.cpp ****     }
 8244              		.loc 20 1989 9 is_stmt 1 view .LVU2252
1989:Veno-Echo.cpp ****     }
 8245              		.loc 20 1989 25 is_stmt 0 view .LVU2253
 8246 003a 9FED100A 		vldr.32	s0, .L447
 8247 003e 1448     		ldr	r0, .L447+20
 8248 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8249              	.LVL496:
 8250              	.L444:
1996:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8251              		.loc 20 1996 5 is_stmt 1 view .LVU2254
1996:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8252              		.loc 20 1996 19 is_stmt 0 view .LVU2255
 8253 0044 9FED0D0A 		vldr.32	s0, .L447
 8254 0048 1248     		ldr	r0, .L447+24
 8255 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8256              	.LVL497:
1997:Veno-Echo.cpp **** }
 8257              		.loc 20 1997 5 is_stmt 1 view .LVU2256
1997:Veno-Echo.cpp **** }
 8258              		.loc 20 1997 19 is_stmt 0 view .LVU2257
 8259 004e 9FED0B0A 		vldr.32	s0, .L447
 8260 0052 1148     		ldr	r0, .L447+28
1998:Veno-Echo.cpp **** 
 8261              		.loc 20 1998 1 view .LVU2258
 8262 0054 BDE80840 		pop	{r3, lr}
 8263              		.cfi_remember_state
 8264              		.cfi_restore 14
 8265              		.cfi_restore 3
 8266              		.cfi_def_cfa_offset 0
1997:Veno-Echo.cpp **** }
 8267              		.loc 20 1997 19 view .LVU2259
 8268 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8269              	.LVL498:
 8270              	.L441:
 8271              		.cfi_restore_state
1984:Veno-Echo.cpp ****     }
 8272              		.loc 20 1984 8 is_stmt 1 view .LVU2260
1984:Veno-Echo.cpp ****     }
 8273              		.loc 20 1984 24 is_stmt 0 view .LVU2261
 8274 005c 0B48     		ldr	r0, .L447+16
 8275 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8276 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8277              	.LVL499:
1987:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 277


 8278              		.loc 20 1987 5 is_stmt 1 view .LVU2262
1987:Veno-Echo.cpp ****     {
 8279              		.loc 20 1987 26 is_stmt 0 view .LVU2263
 8280 0066 0A48     		ldr	r0, .L447+20
 8281 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8282              	.LVL500:
1987:Veno-Echo.cpp ****     {
 8283              		.loc 20 1987 5 view .LVU2264
 8284 006c 0028     		cmp	r0, #0
 8285 006e E4D0     		beq	.L446
 8286              	.L443:
1993:Veno-Echo.cpp ****     }
 8287              		.loc 20 1993 9 is_stmt 1 view .LVU2265
1993:Veno-Echo.cpp ****     }
 8288              		.loc 20 1993 25 is_stmt 0 view .LVU2266
 8289 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8290 0074 0648     		ldr	r0, .L447+20
 8291 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8292              	.LVL501:
 8293 007a E3E7     		b	.L444
 8294              	.L448:
 8295              		.align	2
 8296              	.L447:
 8297 007c 00000000 		.word	0
 8298 0080 00000000 		.word	.LANCHOR91
 8299 0084 04000000 		.word	.LANCHOR0+4
 8300 0088 04000000 		.word	.LANCHOR1+4
 8301 008c 00000000 		.word	.LANCHOR94
 8302 0090 00000000 		.word	.LANCHOR95
 8303 0094 00000000 		.word	.LANCHOR96
 8304 0098 00000000 		.word	.LANCHOR97
 8305              		.cfi_endproc
 8306              	.LFE4335:
 8308              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8309              		.align	1
 8310              		.p2align 2,,3
 8311              		.global	_Z14Update_Buttonsv
 8312              		.syntax unified
 8313              		.thumb
 8314              		.thumb_func
 8315              		.fpu fpv5-d16
 8317              	_Z14Update_Buttonsv:
 8318              	.LFB4329:
1641:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8319              		.loc 20 1641 1 is_stmt 1 view -0
 8320              		.cfi_startproc
 8321              		@ args = 0, pretend = 0, frame = 0
 8322              		@ frame_needed = 0, uses_anonymous_args = 0
1642:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8323              		.loc 20 1642 5 view .LVU2268
1643:Veno-Echo.cpp ****     static int buttonstate{};
 8324              		.loc 20 1643 5 view .LVU2269
1644:Veno-Echo.cpp **** 
 8325              		.loc 20 1644 5 view .LVU2270
1646:Veno-Echo.cpp ****     Rev_R_sw.update();
 8326              		.loc 20 1646 5 view .LVU2271
1641:Veno-Echo.cpp ****     static uint32_t shiftTime{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 278


 8327              		.loc 20 1641 1 is_stmt 0 view .LVU2272
 8328 0000 70B5     		push	{r4, r5, r6, lr}
 8329              		.cfi_def_cfa_offset 16
 8330              		.cfi_offset 4, -16
 8331              		.cfi_offset 5, -12
 8332              		.cfi_offset 6, -8
 8333              		.cfi_offset 14, -4
1646:Veno-Echo.cpp ****     Rev_R_sw.update();
 8334              		.loc 20 1646 20 view .LVU2273
 8335 0002 9848     		ldr	r0, .L504
 8336 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8337              	.LVL502:
1647:Veno-Echo.cpp ****     LPF_sw.update();
 8338              		.loc 20 1647 5 is_stmt 1 view .LVU2274
1647:Veno-Echo.cpp ****     LPF_sw.update();
 8339              		.loc 20 1647 20 is_stmt 0 view .LVU2275
 8340 0008 9748     		ldr	r0, .L504+4
 8341 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8342              	.LVL503:
1648:Veno-Echo.cpp ****     HPF_sw.update();
 8343              		.loc 20 1648 5 is_stmt 1 view .LVU2276
1648:Veno-Echo.cpp ****     HPF_sw.update();
 8344              		.loc 20 1648 18 is_stmt 0 view .LVU2277
 8345 000e 9748     		ldr	r0, .L504+8
 8346 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8347              	.LVL504:
1649:Veno-Echo.cpp ****     Tap_Button.update();
 8348              		.loc 20 1649 5 is_stmt 1 view .LVU2278
1652:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8349              		.loc 20 1652 26 is_stmt 0 view .LVU2279
 8350 0014 964C     		ldr	r4, .L504+12
1649:Veno-Echo.cpp ****     Tap_Button.update();
 8351              		.loc 20 1649 18 view .LVU2280
 8352 0016 9748     		ldr	r0, .L504+16
 8353 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8354              	.LVL505:
1650:Veno-Echo.cpp **** 
 8355              		.loc 20 1650 5 is_stmt 1 view .LVU2281
1650:Veno-Echo.cpp **** 
 8356              		.loc 20 1650 22 is_stmt 0 view .LVU2282
 8357 001c 9648     		ldr	r0, .L504+20
 8358 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8359              	.LVL506:
1652:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8360              		.loc 20 1652 5 is_stmt 1 view .LVU2283
1652:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8361              		.loc 20 1652 26 is_stmt 0 view .LVU2284
 8362 0022 2046     		mov	r0, r4
 8363 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8364              	.LVL507:
1653:Veno-Echo.cpp ****     //TapButton.Debounce();
 8365              		.loc 20 1653 5 is_stmt 1 view .LVU2285
1653:Veno-Echo.cpp ****     //TapButton.Debounce();
 8366              		.loc 20 1653 26 is_stmt 0 view .LVU2286
 8367 0028 9448     		ldr	r0, .L504+24
 8368 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8369              	.LVL508:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 279


1655:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8370              		.loc 20 1655 5 is_stmt 1 view .LVU2287
1655:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8371              		.loc 20 1655 18 is_stmt 0 view .LVU2288
 8372 002e 9448     		ldr	r0, .L504+28
 8373 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8374              	.LVL509:
1658:Veno-Echo.cpp ****     {
 8375              		.loc 20 1658 5 is_stmt 1 view .LVU2289
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 8376              		.loc 1 69 38 view .LVU2290
1658:Veno-Echo.cpp ****     {
 8377              		.loc 20 1658 5 is_stmt 0 view .LVU2291
 8378 0034 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8379 0036 7F2B     		cmp	r3, #127
 8380 0038 00F0DC80 		beq	.L496
 8381              	.L450:
1672:Veno-Echo.cpp ****     {
 8382              		.loc 20 1672 5 is_stmt 1 view .LVU2292
 8383              	.LVL510:
 8384              		.loc 1 69 38 view .LVU2293
1672:Veno-Echo.cpp ****     {
 8385              		.loc 20 1672 32 is_stmt 0 view .LVU2294
 8386 003c 8F4B     		ldr	r3, .L504+24
1672:Veno-Echo.cpp ****     {
 8387              		.loc 20 1672 5 view .LVU2295
 8388 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8389 0040 7F2B     		cmp	r3, #127
 8390 0042 00F0BE80 		beq	.L497
 8391              	.L452:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 280


1688:Veno-Echo.cpp ****     {
 8392              		.loc 20 1688 5 is_stmt 1 view .LVU2296
1688:Veno-Echo.cpp ****     {
 8393              		.loc 20 1688 28 is_stmt 0 view .LVU2297
 8394 0046 8748     		ldr	r0, .L504
1690:Veno-Echo.cpp ****         if (buttonstate == 3)
 8395              		.loc 20 1690 21 view .LVU2298
 8396 0048 8E4C     		ldr	r4, .L504+32
1688:Veno-Echo.cpp ****     {
 8397              		.loc 20 1688 28 view .LVU2299
 8398 004a FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8399              	.LVL511:
1688:Veno-Echo.cpp ****     {
 8400              		.loc 20 1688 5 view .LVU2300
 8401 004e D0B1     		cbz	r0, .L454
1690:Veno-Echo.cpp ****         if (buttonstate == 3)
 8402              		.loc 20 1690 9 is_stmt 1 view .LVU2301
1690:Veno-Echo.cpp ****         if (buttonstate == 3)
 8403              		.loc 20 1690 21 is_stmt 0 view .LVU2302
 8404 0050 2368     		ldr	r3, [r4]
 8405 0052 0133     		adds	r3, r3, #1
1691:Veno-Echo.cpp ****         {
 8406              		.loc 20 1691 9 view .LVU2303
 8407 0054 032B     		cmp	r3, #3
1690:Veno-Echo.cpp ****         if (buttonstate == 3)
 8408              		.loc 20 1690 21 view .LVU2304
 8409 0056 2360     		str	r3, [r4]
1691:Veno-Echo.cpp ****         {
 8410              		.loc 20 1691 9 is_stmt 1 view .LVU2305
 8411 0058 00F0E580 		beq	.L498
 8412              	.L455:
1695:Veno-Echo.cpp ****         {
 8413              		.loc 20 1695 9 view .LVU2306
1695:Veno-Echo.cpp ****         {
 8414              		.loc 20 1695 29 is_stmt 0 view .LVU2307
 8415 005c 8148     		ldr	r0, .L504
 8416 005e FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8417              	.LVL512:
1701:Veno-Echo.cpp ****         }
 8418              		.loc 20 1701 31 view .LVU2308
 8419 0062 F7EE007A 		vmov.f32	s15, #1.0e+0
 8420 0066 9FED887A 		vldr.32	s14, .L504+36
 8421 006a 0028     		cmp	r0, #0
 8422 006c 8749     		ldr	r1, .L504+40
 8423              	.LBB1706:
 8424              	.LBB1707:
 8425              	.LBB1708:
 8426              	.LBB1709:
 8427              	.LBB1710:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8428              		.loc 22 397 18 view .LVU2309
 8429 006e 4FF00102 		mov	r2, #1
 8430 0072 874B     		ldr	r3, .L504+44
 8431              	.LBE1710:
 8432              	.LBE1709:
 8433              	.LBE1708:
 8434              	.LBE1707:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 281


 8435              	.LBE1706:
1701:Veno-Echo.cpp ****         }
 8436              		.loc 20 1701 31 view .LVU2310
 8437 0074 47FE277A 		vseleq.f32	s15, s14, s15
 8438 0078 C1ED097A 		vstr.32	s15, [r1, #36]
1703:Veno-Echo.cpp ****     }
 8439              		.loc 20 1703 9 is_stmt 1 view .LVU2311
 8440              	.LVL513:
 8441              	.LBB1715:
 8442              	.LBI1706:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8443              		.loc 23 80 5 view .LVU2312
 8444              	.LBB1714:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8445              		.loc 23 81 7 view .LVU2313
 8446              	.LBB1713:
 8447              	.LBI1708:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8448              		.loc 22 288 7 view .LVU2314
 8449              	.LBB1712:
 8450              	.LBI1709:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8451              		.loc 22 390 7 view .LVU2315
 8452              	.LBB1711:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8453              		.loc 22 397 18 is_stmt 0 view .LVU2316
 8454 007c BFF35B8F 		dmb	ish
 8455 0080 1A70     		strb	r2, [r3]
 8456 0082 BFF35B8F 		dmb	ish
 8457              	.LVL514:
 8458              	.L454:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8459              		.loc 22 397 18 view .LVU2317
 8460              	.LBE1711:
 8461              	.LBE1712:
 8462              	.LBE1713:
 8463              	.LBE1714:
 8464              	.LBE1715:
1706:Veno-Echo.cpp ****     {
 8465              		.loc 20 1706 5 is_stmt 1 view .LVU2318
1706:Veno-Echo.cpp ****     {
 8466              		.loc 20 1706 29 is_stmt 0 view .LVU2319
 8467 0086 7748     		ldr	r0, .L504
 8468 0088 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8469              	.LVL515:
1706:Veno-Echo.cpp ****     {
 8470              		.loc 20 1706 5 view .LVU2320
 8471 008c 10B1     		cbz	r0, .L457
1708:Veno-Echo.cpp ****     }
 8472              		.loc 20 1708 9 is_stmt 1 view .LVU2321
1708:Veno-Echo.cpp ****     }
 8473              		.loc 20 1708 21 is_stmt 0 view .LVU2322
 8474 008e 2368     		ldr	r3, [r4]
 8475 0090 013B     		subs	r3, r3, #1
 8476 0092 2360     		str	r3, [r4]
 8477              	.L457:
1711:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 282


 8478              		.loc 20 1711 5 is_stmt 1 view .LVU2323
1711:Veno-Echo.cpp ****     {
 8479              		.loc 20 1711 28 is_stmt 0 view .LVU2324
 8480 0094 7448     		ldr	r0, .L504+4
 8481 0096 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8482              	.LVL516:
1711:Veno-Echo.cpp ****     {
 8483              		.loc 20 1711 5 view .LVU2325
 8484 009a D0B1     		cbz	r0, .L458
1713:Veno-Echo.cpp ****         if (buttonstate == 3)
 8485              		.loc 20 1713 9 is_stmt 1 view .LVU2326
1713:Veno-Echo.cpp ****         if (buttonstate == 3)
 8486              		.loc 20 1713 21 is_stmt 0 view .LVU2327
 8487 009c 2368     		ldr	r3, [r4]
 8488 009e 0133     		adds	r3, r3, #1
1714:Veno-Echo.cpp ****         {
 8489              		.loc 20 1714 9 view .LVU2328
 8490 00a0 032B     		cmp	r3, #3
1713:Veno-Echo.cpp ****         if (buttonstate == 3)
 8491              		.loc 20 1713 21 view .LVU2329
 8492 00a2 2360     		str	r3, [r4]
1714:Veno-Echo.cpp ****         {
 8493              		.loc 20 1714 9 is_stmt 1 view .LVU2330
 8494 00a4 00F0C480 		beq	.L499
 8495              	.L459:
1718:Veno-Echo.cpp ****         {
 8496              		.loc 20 1718 9 view .LVU2331
1718:Veno-Echo.cpp ****         {
 8497              		.loc 20 1718 29 is_stmt 0 view .LVU2332
 8498 00a8 6F48     		ldr	r0, .L504+4
 8499 00aa FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8500              	.LVL517:
1724:Veno-Echo.cpp ****         }
 8501              		.loc 20 1724 31 view .LVU2333
 8502 00ae F7EE007A 		vmov.f32	s15, #1.0e+0
 8503 00b2 9FED757A 		vldr.32	s14, .L504+36
 8504 00b6 0028     		cmp	r0, #0
 8505 00b8 7449     		ldr	r1, .L504+40
 8506              	.LBB1716:
 8507              	.LBB1717:
 8508              	.LBB1718:
 8509              	.LBB1719:
 8510              	.LBB1720:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8511              		.loc 22 397 18 view .LVU2334
 8512 00ba 4FF00102 		mov	r2, #1
 8513 00be 744B     		ldr	r3, .L504+44
 8514              	.LBE1720:
 8515              	.LBE1719:
 8516              	.LBE1718:
 8517              	.LBE1717:
 8518              	.LBE1716:
1724:Veno-Echo.cpp ****         }
 8519              		.loc 20 1724 31 view .LVU2335
 8520 00c0 47FE277A 		vseleq.f32	s15, s14, s15
 8521 00c4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1726:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 283


 8522              		.loc 20 1726 9 is_stmt 1 view .LVU2336
 8523              	.LVL518:
 8524              	.LBB1725:
 8525              	.LBI1716:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8526              		.loc 23 80 5 view .LVU2337
 8527              	.LBB1724:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8528              		.loc 23 81 7 view .LVU2338
 8529              	.LBB1723:
 8530              	.LBI1718:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8531              		.loc 22 288 7 view .LVU2339
 8532              	.LBB1722:
 8533              	.LBI1719:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8534              		.loc 22 390 7 view .LVU2340
 8535              	.LBB1721:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8536              		.loc 22 397 18 is_stmt 0 view .LVU2341
 8537 00c8 BFF35B8F 		dmb	ish
 8538 00cc 1A70     		strb	r2, [r3]
 8539 00ce BFF35B8F 		dmb	ish
 8540              	.LVL519:
 8541              	.L458:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8542              		.loc 22 397 18 view .LVU2342
 8543              	.LBE1721:
 8544              	.LBE1722:
 8545              	.LBE1723:
 8546              	.LBE1724:
 8547              	.LBE1725:
1729:Veno-Echo.cpp ****     {
 8548              		.loc 20 1729 5 is_stmt 1 view .LVU2343
1729:Veno-Echo.cpp ****     {
 8549              		.loc 20 1729 29 is_stmt 0 view .LVU2344
 8550 00d2 6548     		ldr	r0, .L504+4
 8551 00d4 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8552              	.LVL520:
1729:Veno-Echo.cpp ****     {
 8553              		.loc 20 1729 5 view .LVU2345
 8554 00d8 10B1     		cbz	r0, .L461
1731:Veno-Echo.cpp ****     }
 8555              		.loc 20 1731 9 is_stmt 1 view .LVU2346
1731:Veno-Echo.cpp ****     }
 8556              		.loc 20 1731 21 is_stmt 0 view .LVU2347
 8557 00da 2368     		ldr	r3, [r4]
 8558 00dc 013B     		subs	r3, r3, #1
 8559 00de 2360     		str	r3, [r4]
 8560              	.L461:
1734:Veno-Echo.cpp ****     {
 8561              		.loc 20 1734 5 is_stmt 1 view .LVU2348
1734:Veno-Echo.cpp ****     {
 8562              		.loc 20 1734 30 is_stmt 0 view .LVU2349
 8563 00e0 6548     		ldr	r0, .L504+20
 8564 00e2 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8565              	.LVL521:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 284


1734:Veno-Echo.cpp ****     {
 8566              		.loc 20 1734 5 view .LVU2350
 8567 00e6 0028     		cmp	r0, #0
 8568 00e8 55D1     		bne	.L500
 8569              	.L463:
1755:Veno-Echo.cpp ****     {
 8570              		.loc 20 1755 5 is_stmt 1 view .LVU2351
1755:Veno-Echo.cpp ****     {
 8571              		.loc 20 1755 31 is_stmt 0 view .LVU2352
 8572 00ea 6348     		ldr	r0, .L504+20
 8573 00ec FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8574              	.LVL522:
1755:Veno-Echo.cpp ****     {
 8575              		.loc 20 1755 5 view .LVU2353
 8576 00f0 38B1     		cbz	r0, .L466
1757:Veno-Echo.cpp ****         buttonstate -= 1;
 8577              		.loc 20 1757 9 is_stmt 1 view .LVU2354
1758:Veno-Echo.cpp ****         mute = false;
 8578              		.loc 20 1758 21 is_stmt 0 view .LVU2355
 8579 00f2 2368     		ldr	r3, [r4]
1757:Veno-Echo.cpp ****         buttonstate -= 1;
 8580              		.loc 20 1757 15 view .LVU2356
 8581 00f4 0022     		movs	r2, #0
 8582 00f6 6748     		ldr	r0, .L504+48
1758:Veno-Echo.cpp ****         mute = false;
 8583              		.loc 20 1758 21 view .LVU2357
 8584 00f8 013B     		subs	r3, r3, #1
1759:Veno-Echo.cpp ****     }
 8585              		.loc 20 1759 14 view .LVU2358
 8586 00fa 6749     		ldr	r1, .L504+52
1757:Veno-Echo.cpp ****         buttonstate -= 1;
 8587              		.loc 20 1757 15 view .LVU2359
 8588 00fc 0270     		strb	r2, [r0]
1758:Veno-Echo.cpp ****         mute = false;
 8589              		.loc 20 1758 9 is_stmt 1 view .LVU2360
1758:Veno-Echo.cpp ****         mute = false;
 8590              		.loc 20 1758 21 is_stmt 0 view .LVU2361
 8591 00fe 2360     		str	r3, [r4]
1759:Veno-Echo.cpp ****     }
 8592              		.loc 20 1759 9 is_stmt 1 view .LVU2362
1759:Veno-Echo.cpp ****     }
 8593              		.loc 20 1759 14 is_stmt 0 view .LVU2363
 8594 0100 0A70     		strb	r2, [r1]
 8595              	.L466:
1762:Veno-Echo.cpp ****     {
 8596              		.loc 20 1762 5 is_stmt 1 view .LVU2364
1762:Veno-Echo.cpp ****     {
 8597              		.loc 20 1762 28 is_stmt 0 view .LVU2365
 8598 0102 5D48     		ldr	r0, .L504+20
 8599 0104 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8600              	.LVL523:
1762:Veno-Echo.cpp ****     {
 8601              		.loc 20 1762 5 view .LVU2366
 8602 0108 60B9     		cbnz	r0, .L501
 8603              	.L468:
1770:Veno-Echo.cpp ****     {
 8604              		.loc 20 1770 5 is_stmt 1 view .LVU2367
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 285


 8605 010a 2368     		ldr	r3, [r4]
 8606 010c 032B     		cmp	r3, #3
 8607 010e 16D0     		beq	.L502
 8608              	.L471:
1787:Veno-Echo.cpp **** }
 8609              		.loc 20 1787 5 view .LVU2368
 8610              	.LBB1726:
 8611              	.LBI1726:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8612              		.loc 1 75 17 view .LVU2369
 8613              	.LVL524:
 8614              	.LBB1727:
 8615              		.loc 1 75 35 view .LVU2370
 8616              	.LBE1727:
 8617              	.LBE1726:
1787:Veno-Echo.cpp **** }
 8618              		.loc 20 1787 31 is_stmt 0 view .LVU2371
 8619 0110 5B4B     		ldr	r3, .L504+28
1787:Veno-Echo.cpp **** }
 8620              		.loc 20 1787 14 view .LVU2372
 8621 0112 624A     		ldr	r2, .L504+56
 8622              	.LBB1729:
 8623              	.LBB1728:
 8624              		.loc 1 75 52 view .LVU2373
 8625 0114 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8626 0116 A3F1FF03 		sub	r3, #255
 8627 011a B3FA83F3 		clz	r3, r3
 8628 011e 5B09     		lsrs	r3, r3, #5
 8629 0120 1370     		strb	r3, [r2]
 8630              	.LBE1728:
 8631              	.LBE1729:
1788:Veno-Echo.cpp **** 
 8632              		.loc 20 1788 1 view .LVU2374
 8633 0122 70BD     		pop	{r4, r5, r6, pc}
 8634              	.LVL525:
 8635              	.L501:
1764:Veno-Echo.cpp ****         {
 8636              		.loc 20 1764 9 is_stmt 1 view .LVU2375
1764:Veno-Echo.cpp ****         {
 8637              		.loc 20 1764 29 is_stmt 0 view .LVU2376
 8638 0124 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8639              	.LVL526:
1764:Veno-Echo.cpp ****         {
 8640              		.loc 20 1764 32 view .LVU2377
 8641 0128 5D4B     		ldr	r3, .L504+60
 8642 012a 1B68     		ldr	r3, [r3]
 8643 012c C01A     		subs	r0, r0, r3
1764:Veno-Echo.cpp ****         {
 8644              		.loc 20 1764 9 view .LVU2378
 8645 012e 3228     		cmp	r0, #50
 8646 0130 EBD9     		bls	.L468
1766:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 286


 8647              		.loc 20 1766 13 is_stmt 1 view .LVU2379
1766:Veno-Echo.cpp ****         } 
 8648              		.loc 20 1766 19 is_stmt 0 view .LVU2380
 8649 0132 584B     		ldr	r3, .L504+48
 8650 0134 0122     		movs	r2, #1
 8651 0136 1A70     		strb	r2, [r3]
1770:Veno-Echo.cpp ****     {
 8652              		.loc 20 1770 5 is_stmt 1 view .LVU2381
 8653 0138 2368     		ldr	r3, [r4]
 8654 013a 032B     		cmp	r3, #3
 8655 013c E8D1     		bne	.L471
 8656              	.L502:
1773:Veno-Echo.cpp ****             {
 8657              		.loc 20 1773 13 view .LVU2382
1773:Veno-Echo.cpp ****             {
 8658              		.loc 20 1773 36 is_stmt 0 view .LVU2383
 8659 013e 594E     		ldr	r6, .L504+64
1773:Veno-Echo.cpp ****             {
 8660              		.loc 20 1773 33 view .LVU2384
 8661 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8662              	.LVL527:
1773:Veno-Echo.cpp ****             {
 8663              		.loc 20 1773 13 view .LVU2385
 8664 0144 40F6B833 		movw	r3, #3000
1773:Veno-Echo.cpp ****             {
 8665              		.loc 20 1773 36 view .LVU2386
 8666 0148 3268     		ldr	r2, [r6]
 8667 014a 801A     		subs	r0, r0, r2
1773:Veno-Echo.cpp ****             {
 8668              		.loc 20 1773 13 view .LVU2387
 8669 014c 9842     		cmp	r0, r3
 8670 014e DFD9     		bls	.L471
1775:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8671              		.loc 20 1775 17 is_stmt 1 view .LVU2388
1775:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8672              		.loc 20 1775 32 is_stmt 0 view .LVU2389
 8673 0150 4448     		ldr	r0, .L504
 8674 0152 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8675              	.LVL528:
1776:Veno-Echo.cpp ****                 ResetAllLEDs();
 8676              		.loc 20 1776 17 is_stmt 1 view .LVU2390
1776:Veno-Echo.cpp ****                 ResetAllLEDs();
 8677              		.loc 20 1776 32 is_stmt 0 view .LVU2391
 8678 0156 4448     		ldr	r0, .L504+4
 8679 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8680              	.LVL529:
1777:Veno-Echo.cpp ****                 //don't let reset or shift update
 8681              		.loc 20 1777 17 is_stmt 1 view .LVU2392
1781:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8682              		.loc 20 1781 29 is_stmt 0 view .LVU2393
 8683 015c 524D     		ldr	r5, .L504+68
1777:Veno-Echo.cpp ****                 //don't let reset or shift update
 8684              		.loc 20 1777 29 view .LVU2394
 8685 015e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8686              	.LVL530:
1779:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8687              		.loc 20 1779 17 is_stmt 1 view .LVU2395
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 287


1779:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8688              		.loc 20 1779 23 is_stmt 0 view .LVU2396
 8689 0162 4C4B     		ldr	r3, .L504+48
 8690 0164 0022     		movs	r2, #0
1780:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8691              		.loc 20 1780 30 view .LVU2397
 8692 0166 5048     		ldr	r0, .L504+68
1781:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8693              		.loc 20 1781 29 view .LVU2398
 8694 0168 484C     		ldr	r4, .L504+40
1779:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8695              		.loc 20 1779 23 view .LVU2399
 8696 016a 1A70     		strb	r2, [r3]
1780:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8697              		.loc 20 1780 17 is_stmt 1 view .LVU2400
1780:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8698              		.loc 20 1780 30 is_stmt 0 view .LVU2401
 8699 016c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8700              	.LVL531:
1781:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8701              		.loc 20 1781 17 is_stmt 1 view .LVU2402
1781:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8702              		.loc 20 1781 29 is_stmt 0 view .LVU2403
 8703 0170 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8704 0172 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8705 0174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8706 0176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8707 0178 95E80700 		ldm	r5, {r0, r1, r2}
 8708 017c 84E80700 		stm	r4, {r0, r1, r2}
1782:Veno-Echo.cpp ****                 save_flag = true;
 8709              		.loc 20 1782 17 is_stmt 1 view .LVU2404
1782:Veno-Echo.cpp ****                 save_flag = true;
 8710              		.loc 20 1782 43 is_stmt 0 view .LVU2405
 8711 0180 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8712              	.LVL532:
 8713              	.LBB1730:
 8714              	.LBB1731:
 8715              	.LBB1732:
 8716              	.LBB1733:
 8717              	.LBB1734:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8718              		.loc 22 397 18 view .LVU2406
 8719 0184 424B     		ldr	r3, .L504+44
 8720 0186 0122     		movs	r2, #1
 8721              	.LBE1734:
 8722              	.LBE1733:
 8723              	.LBE1732:
 8724              	.LBE1731:
 8725              	.LBE1730:
1782:Veno-Echo.cpp ****                 save_flag = true;
 8726              		.loc 20 1782 27 view .LVU2407
 8727 0188 3060     		str	r0, [r6]
1783:Veno-Echo.cpp ****             }
 8728              		.loc 20 1783 17 is_stmt 1 view .LVU2408
 8729              	.LVL533:
 8730              	.LBB1739:
 8731              	.LBI1730:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 288


  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8732              		.loc 23 80 5 view .LVU2409
 8733              	.LBB1738:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8734              		.loc 23 81 7 view .LVU2410
 8735              	.LBB1737:
 8736              	.LBI1732:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8737              		.loc 22 288 7 view .LVU2411
 8738              	.LBB1736:
 8739              	.LBI1733:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8740              		.loc 22 390 7 view .LVU2412
 8741              	.LBB1735:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8742              		.loc 22 397 18 is_stmt 0 view .LVU2413
 8743 018a BFF35B8F 		dmb	ish
 8744 018e 1A70     		strb	r2, [r3]
 8745 0190 BFF35B8F 		dmb	ish
 8746              	.LVL534:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8747              		.loc 22 397 18 view .LVU2414
 8748              	.LBE1735:
 8749              	.LBE1736:
 8750              	.LBE1737:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8751              		.loc 23 81 35 view .LVU2415
 8752 0194 BCE7     		b	.L471
 8753              	.LVL535:
 8754              	.L500:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8755              		.loc 23 81 35 view .LVU2416
 8756              	.LBE1738:
 8757              	.LBE1739:
1736:Veno-Echo.cpp ****         {
 8758              		.loc 20 1736 9 is_stmt 1 view .LVU2417
1736:Veno-Echo.cpp ****         {
 8759              		.loc 20 1736 25 is_stmt 0 view .LVU2418
 8760 0196 4548     		ldr	r0, .L504+72
 8761 0198 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8762              	.LVL536:
1736:Veno-Echo.cpp ****         {
 8763              		.loc 20 1736 9 view .LVU2419
 8764 019c 0028     		cmp	r0, #0
 8765 019e 4CD1     		bne	.L503
 8766              	.L464:
1742:Veno-Echo.cpp ****         
 8767              		.loc 20 1742 9 is_stmt 1 view .LVU2420
1742:Veno-Echo.cpp ****         
 8768              		.loc 20 1742 33 is_stmt 0 view .LVU2421
 8769 01a0 4348     		ldr	r0, .L504+76
 8770 01a2 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8771              	.LVL537:
1745:Veno-Echo.cpp ****         buttonstate += 1;
 8772              		.loc 20 1745 9 is_stmt 1 view .LVU2422
1745:Veno-Echo.cpp ****         buttonstate += 1;
 8773              		.loc 20 1745 35 is_stmt 0 view .LVU2423
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 289


 8774 01a6 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8775              	.LVL538:
1746:Veno-Echo.cpp ****         
 8776              		.loc 20 1746 21 view .LVU2424
 8777 01aa 2368     		ldr	r3, [r4]
1745:Veno-Echo.cpp ****         buttonstate += 1;
 8778              		.loc 20 1745 19 view .LVU2425
 8779 01ac 3C4A     		ldr	r2, .L504+60
1746:Veno-Echo.cpp ****         
 8780              		.loc 20 1746 21 view .LVU2426
 8781 01ae 0133     		adds	r3, r3, #1
1745:Veno-Echo.cpp ****         buttonstate += 1;
 8782              		.loc 20 1745 19 view .LVU2427
 8783 01b0 1060     		str	r0, [r2]
1746:Veno-Echo.cpp ****         
 8784              		.loc 20 1746 9 is_stmt 1 view .LVU2428
1748:Veno-Echo.cpp ****         {
 8785              		.loc 20 1748 9 is_stmt 0 view .LVU2429
 8786 01b2 032B     		cmp	r3, #3
1746:Veno-Echo.cpp ****         
 8787              		.loc 20 1746 21 view .LVU2430
 8788 01b4 2360     		str	r3, [r4]
1748:Veno-Echo.cpp ****         {
 8789              		.loc 20 1748 9 is_stmt 1 view .LVU2431
 8790 01b6 98D1     		bne	.L463
1750:Veno-Echo.cpp ****         }
 8791              		.loc 20 1750 13 view .LVU2432
1750:Veno-Echo.cpp ****         }
 8792              		.loc 20 1750 39 is_stmt 0 view .LVU2433
 8793 01b8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8794              	.LVL539:
1750:Veno-Echo.cpp ****         }
 8795              		.loc 20 1750 23 view .LVU2434
 8796 01bc 394B     		ldr	r3, .L504+64
 8797 01be 1860     		str	r0, [r3]
 8798 01c0 93E7     		b	.L463
 8799              	.L497:
1674:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8800              		.loc 20 1674 9 is_stmt 1 view .LVU2435
1674:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8801              		.loc 20 1674 24 is_stmt 0 view .LVU2436
 8802 01c2 2948     		ldr	r0, .L504+4
 8803 01c4 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8804              	.LVL540:
1675:Veno-Echo.cpp ****         {
 8805              		.loc 20 1675 9 is_stmt 1 view .LVU2437
1675:Veno-Echo.cpp ****         {
 8806              		.loc 20 1675 29 is_stmt 0 view .LVU2438
 8807 01c8 2748     		ldr	r0, .L504+4
 8808 01ca FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8809              	.LVL541:
1681:Veno-Echo.cpp ****         }
 8810              		.loc 20 1681 31 view .LVU2439
 8811 01ce F7EE007A 		vmov.f32	s15, #1.0e+0
 8812 01d2 9FED2D7A 		vldr.32	s14, .L504+36
 8813 01d6 0028     		cmp	r0, #0
 8814 01d8 2C49     		ldr	r1, .L504+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 290


 8815              	.LBB1740:
 8816              	.LBB1741:
 8817              	.LBB1742:
 8818              	.LBB1743:
 8819              	.LBB1744:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8820              		.loc 22 397 18 view .LVU2440
 8821 01da 4FF00102 		mov	r2, #1
 8822 01de 2C4B     		ldr	r3, .L504+44
 8823              	.LBE1744:
 8824              	.LBE1743:
 8825              	.LBE1742:
 8826              	.LBE1741:
 8827              	.LBE1740:
1681:Veno-Echo.cpp ****         }
 8828              		.loc 20 1681 31 view .LVU2441
 8829 01e0 47FE277A 		vseleq.f32	s15, s14, s15
 8830 01e4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1683:Veno-Echo.cpp ****     }
 8831              		.loc 20 1683 9 is_stmt 1 view .LVU2442
 8832              	.LVL542:
 8833              	.LBB1749:
 8834              	.LBI1740:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8835              		.loc 23 80 5 view .LVU2443
 8836              	.LBB1748:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8837              		.loc 23 81 7 view .LVU2444
 8838              	.LBB1747:
 8839              	.LBI1742:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8840              		.loc 22 288 7 view .LVU2445
 8841              	.LBB1746:
 8842              	.LBI1743:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8843              		.loc 22 390 7 view .LVU2446
 8844              	.LBB1745:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8845              		.loc 22 397 18 is_stmt 0 view .LVU2447
 8846 01e8 BFF35B8F 		dmb	ish
 8847 01ec 1A70     		strb	r2, [r3]
 8848 01ee BFF35B8F 		dmb	ish
 8849              	.LVL543:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8850              		.loc 22 397 18 view .LVU2448
 8851              	.LBE1745:
 8852              	.LBE1746:
 8853              	.LBE1747:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8854              		.loc 23 81 35 view .LVU2449
 8855 01f2 28E7     		b	.L452
 8856              	.LVL544:
 8857              	.L496:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8858              		.loc 23 81 35 view .LVU2450
 8859              	.LBE1748:
 8860              	.LBE1749:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 291


1660:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8861              		.loc 20 1660 9 is_stmt 1 view .LVU2451
1660:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8862              		.loc 20 1660 24 is_stmt 0 view .LVU2452
 8863 01f4 1B48     		ldr	r0, .L504
 8864 01f6 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8865              	.LVL545:
1661:Veno-Echo.cpp ****         {
 8866              		.loc 20 1661 9 is_stmt 1 view .LVU2453
1661:Veno-Echo.cpp ****         {
 8867              		.loc 20 1661 29 is_stmt 0 view .LVU2454
 8868 01fa 1A48     		ldr	r0, .L504
 8869 01fc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8870              	.LVL546:
1667:Veno-Echo.cpp ****         }
 8871              		.loc 20 1667 31 view .LVU2455
 8872 0200 F7EE007A 		vmov.f32	s15, #1.0e+0
 8873 0204 9FED207A 		vldr.32	s14, .L504+36
 8874 0208 0028     		cmp	r0, #0
 8875 020a 2049     		ldr	r1, .L504+40
 8876              	.LBB1750:
 8877              	.LBB1751:
 8878              	.LBB1752:
 8879              	.LBB1753:
 8880              	.LBB1754:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8881              		.loc 22 397 18 view .LVU2456
 8882 020c 4FF00102 		mov	r2, #1
 8883 0210 1F4B     		ldr	r3, .L504+44
 8884              	.LBE1754:
 8885              	.LBE1753:
 8886              	.LBE1752:
 8887              	.LBE1751:
 8888              	.LBE1750:
1667:Veno-Echo.cpp ****         }
 8889              		.loc 20 1667 31 view .LVU2457
 8890 0212 47FE277A 		vseleq.f32	s15, s14, s15
 8891 0216 C1ED097A 		vstr.32	s15, [r1, #36]
1669:Veno-Echo.cpp ****     }
 8892              		.loc 20 1669 9 is_stmt 1 view .LVU2458
 8893              	.LVL547:
 8894              	.LBB1759:
 8895              	.LBI1750:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8896              		.loc 23 80 5 view .LVU2459
 8897              	.LBB1758:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8898              		.loc 23 81 7 view .LVU2460
 8899              	.LBB1757:
 8900              	.LBI1752:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8901              		.loc 22 288 7 view .LVU2461
 8902              	.LBB1756:
 8903              	.LBI1753:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8904              		.loc 22 390 7 view .LVU2462
 8905              	.LBB1755:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 292


 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8906              		.loc 22 397 18 is_stmt 0 view .LVU2463
 8907 021a BFF35B8F 		dmb	ish
 8908 021e 1A70     		strb	r2, [r3]
 8909 0220 BFF35B8F 		dmb	ish
 8910              	.LVL548:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8911              		.loc 22 397 18 view .LVU2464
 8912              	.LBE1755:
 8913              	.LBE1756:
 8914              	.LBE1757:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8915              		.loc 23 81 35 view .LVU2465
 8916 0224 0AE7     		b	.L450
 8917              	.LVL549:
 8918              	.L498:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8919              		.loc 23 81 35 view .LVU2466
 8920              	.LBE1758:
 8921              	.LBE1759:
1693:Veno-Echo.cpp ****         }
 8922              		.loc 20 1693 13 is_stmt 1 view .LVU2467
1693:Veno-Echo.cpp ****         }
 8923              		.loc 20 1693 39 is_stmt 0 view .LVU2468
 8924 0226 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8925              	.LVL550:
1693:Veno-Echo.cpp ****         }
 8926              		.loc 20 1693 23 view .LVU2469
 8927 022a 1E4B     		ldr	r3, .L504+64
 8928 022c 1860     		str	r0, [r3]
 8929 022e 15E7     		b	.L455
 8930              	.L499:
1716:Veno-Echo.cpp ****         }
 8931              		.loc 20 1716 13 is_stmt 1 view .LVU2470
1716:Veno-Echo.cpp ****         }
 8932              		.loc 20 1716 39 is_stmt 0 view .LVU2471
 8933 0230 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8934              	.LVL551:
1716:Veno-Echo.cpp ****         }
 8935              		.loc 20 1716 23 view .LVU2472
 8936 0234 1B4B     		ldr	r3, .L504+64
 8937 0236 1860     		str	r0, [r3]
 8938 0238 36E7     		b	.L459
 8939              	.L503:
1738:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8940              		.loc 20 1738 13 is_stmt 1 view .LVU2473
1738:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8941              		.loc 20 1738 35 is_stmt 0 view .LVU2474
 8942 023a 1C48     		ldr	r0, .L504+72
 8943 023c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8944              	.LVL552:
 8945 0240 1B48     		ldr	r0, .L504+76
 8946 0242 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8947              	.LVL553:
1739:Veno-Echo.cpp ****             save_flag = true;
 8948              		.loc 20 1739 13 is_stmt 1 view .LVU2475
1739:Veno-Echo.cpp ****             save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 293


 8949              		.loc 20 1739 59 is_stmt 0 view .LVU2476
 8950 0246 1948     		ldr	r0, .L504+72
 8951 0248 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 8952              	.LVL554:
1739:Veno-Echo.cpp ****             save_flag = true;
 8953              		.loc 20 1739 35 view .LVU2477
 8954 024c 0F49     		ldr	r1, .L504+40
 8955              	.LBB1760:
 8956              	.LBB1761:
 8957              	.LBB1762:
 8958              	.LBB1763:
 8959              	.LBB1764:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8960              		.loc 22 397 18 view .LVU2478
 8961 024e 0122     		movs	r2, #1
 8962 0250 0F4B     		ldr	r3, .L504+44
 8963              	.LBE1764:
 8964              	.LBE1763:
 8965              	.LBE1762:
 8966              	.LBE1761:
 8967              	.LBE1760:
1739:Veno-Echo.cpp ****             save_flag = true;
 8968              		.loc 20 1739 35 view .LVU2479
 8969 0252 81ED080A 		vstr.32	s0, [r1, #32]
1740:Veno-Echo.cpp ****         }
 8970              		.loc 20 1740 13 is_stmt 1 view .LVU2480
 8971              	.LVL555:
 8972              	.LBB1769:
 8973              	.LBI1760:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8974              		.loc 23 80 5 view .LVU2481
 8975              	.LBB1768:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8976              		.loc 23 81 7 view .LVU2482
 8977              	.LBB1767:
 8978              	.LBI1762:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8979              		.loc 22 288 7 view .LVU2483
 8980              	.LBB1766:
 8981              	.LBI1763:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8982              		.loc 22 390 7 view .LVU2484
 8983              	.LBB1765:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8984              		.loc 22 397 18 is_stmt 0 view .LVU2485
 8985 0256 BFF35B8F 		dmb	ish
 8986 025a 1A70     		strb	r2, [r3]
 8987 025c BFF35B8F 		dmb	ish
 8988              	.LVL556:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8989              		.loc 22 397 18 view .LVU2486
 8990              	.LBE1765:
 8991              	.LBE1766:
 8992              	.LBE1767:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8993              		.loc 23 81 35 view .LVU2487
 8994 0260 9EE7     		b	.L464
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 294


 8995              	.L505:
 8996 0262 00BF     		.align	2
 8997              	.L504:
 8998 0264 00000000 		.word	.LANCHOR94
 8999 0268 00000000 		.word	.LANCHOR95
 9000 026c 00000000 		.word	.LANCHOR96
 9001 0270 00000000 		.word	.LANCHOR99
 9002 0274 00000000 		.word	.LANCHOR97
 9003 0278 00000000 		.word	.LANCHOR98
 9004 027c 00000000 		.word	.LANCHOR100
 9005 0280 00000000 		.word	.LANCHOR101
 9006 0284 00000000 		.word	.LANCHOR111
 9007 0288 00000000 		.word	0
 9008 028c 00000000 		.word	.LANCHOR15
 9009 0290 00000000 		.word	.LANCHOR16
 9010 0294 00000000 		.word	.LANCHOR7
 9011 0298 00000000 		.word	.LANCHOR114
 9012 029c 00000000 		.word	.LANCHOR12
 9013 02a0 00000000 		.word	.LANCHOR113
 9014 02a4 00000000 		.word	.LANCHOR112
 9015 02a8 00000000 		.word	.LANCHOR115
 9016 02ac 00000000 		.word	.LANCHOR26
 9017 02b0 00000000 		.word	.LANCHOR91
 9018              	.LBE1768:
 9019              	.LBE1769:
 9020              		.cfi_endproc
 9021              	.LFE4329:
 9023              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 9024              		.align	1
 9025              		.p2align 2,,3
 9026              		.syntax unified
 9027              		.thumb
 9028              		.thumb_func
 9029              		.fpu fpv5-d16
 9031              	_ZL13AudioCallbackPfS_j:
 9032              	.LVL557:
 9033              	.LFB4309:
 251:Veno-Echo.cpp **** 
 9034              		.loc 20 251 1 is_stmt 1 view -0
 9035              		.cfi_startproc
 9036              		@ args = 0, pretend = 0, frame = 80
 9037              		@ frame_needed = 0, uses_anonymous_args = 0
 262:Veno-Echo.cpp **** 
 9038              		.loc 20 262 1 view .LVU2489
 280:Veno-Echo.cpp **** 
 9039              		.loc 20 280 1 view .LVU2490
 280:Veno-Echo.cpp **** 
 9040              		.loc 20 280 20 is_stmt 0 view .LVU2491
 9041 0000 DFF890C0 		ldr	ip, .L647+12
 280:Veno-Echo.cpp **** 
 9042              		.loc 20 280 25 view .LVU2492
 9043 0004 204B     		ldr	r3, .L647
 251:Veno-Echo.cpp **** 
 9044              		.loc 20 251 1 view .LVU2493
 9045 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9046              		.cfi_def_cfa_offset 36
 9047              		.cfi_offset 4, -36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 295


 9048              		.cfi_offset 5, -32
 9049              		.cfi_offset 6, -28
 9050              		.cfi_offset 7, -24
 9051              		.cfi_offset 8, -20
 9052              		.cfi_offset 9, -16
 9053              		.cfi_offset 10, -12
 9054              		.cfi_offset 11, -8
 9055              		.cfi_offset 14, -4
 280:Veno-Echo.cpp **** 
 9056              		.loc 20 280 20 view .LVU2494
 9057 000a DCF80040 		ldr	r4, [ip]
 251:Veno-Echo.cpp **** 
 9058              		.loc 20 251 1 view .LVU2495
 9059 000e 1546     		mov	r5, r2
 9060 0010 0646     		mov	r6, r0
 9061 0012 0F46     		mov	r7, r1
 280:Veno-Echo.cpp **** 
 9062              		.loc 20 280 20 view .LVU2496
 9063 0014 0134     		adds	r4, r4, #1
 280:Veno-Echo.cpp **** 
 9064              		.loc 20 280 25 view .LVU2497
 9065 0016 83FB0432 		smull	r3, r2, r3, r4
 9066              	.LVL558:
 280:Veno-Echo.cpp **** 
 9067              		.loc 20 280 25 view .LVU2498
 9068 001a E317     		asrs	r3, r4, #31
 9069 001c 2244     		add	r2, r2, r4
 9070 001e C3EBE203 		rsb	r3, r3, r2, asr #3
 9071 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9072 0026 E31A     		subs	r3, r4, r3
 251:Veno-Echo.cpp **** 
 9073              		.loc 20 251 1 view .LVU2499
 9074 0028 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 9075              		.cfi_def_cfa_offset 92
 9076              		.cfi_offset 80, -92
 9077              		.cfi_offset 81, -88
 9078              		.cfi_offset 82, -84
 9079              		.cfi_offset 83, -80
 9080              		.cfi_offset 84, -76
 9081              		.cfi_offset 85, -72
 9082              		.cfi_offset 86, -68
 9083              		.cfi_offset 87, -64
 9084              		.cfi_offset 88, -60
 9085              		.cfi_offset 89, -56
 9086              		.cfi_offset 90, -52
 9087              		.cfi_offset 91, -48
 9088              		.cfi_offset 92, -44
 9089              		.cfi_offset 93, -40
 280:Veno-Echo.cpp **** 
 9090              		.loc 20 280 9 view .LVU2500
 9091 002c CCF80030 		str	r3, [ip]
 293:Veno-Echo.cpp ****         {
 9092              		.loc 20 293 9 is_stmt 1 view .LVU2501
 251:Veno-Echo.cpp **** 
 9093              		.loc 20 251 1 is_stmt 0 view .LVU2502
 9094 0030 95B0     		sub	sp, sp, #84
 9095              		.cfi_def_cfa_offset 176
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 296


 9096 0032 0E2B     		cmp	r3, #14
 9097 0034 17D8     		bhi	.L507
 9098 0036 DFE813F0 		tbh	[pc, r3, lsl #1]
 9099              	.L509:
 9100 003a 9205     		.2byte	(.L523-.L509)/2
 9101 003c 0F00     		.2byte	(.L522-.L509)/2
 9102 003e 9A05     		.2byte	(.L521-.L509)/2
 9103 0040 A305     		.2byte	(.L520-.L509)/2
 9104 0042 AC05     		.2byte	(.L519-.L509)/2
 9105 0044 ED05     		.2byte	(.L518-.L509)/2
 9106 0046 F605     		.2byte	(.L517-.L509)/2
 9107 0048 FF05     		.2byte	(.L516-.L509)/2
 9108 004a 0806     		.2byte	(.L515-.L509)/2
 9109 004c 1106     		.2byte	(.L514-.L509)/2
 9110 004e 1A06     		.2byte	(.L513-.L509)/2
 9111 0050 2306     		.2byte	(.L512-.L509)/2
 9112 0052 2C06     		.2byte	(.L511-.L509)/2
 9113 0054 3506     		.2byte	(.L510-.L509)/2
 9114 0056 8905     		.2byte	(.L508-.L509)/2
 9115              		.p2align 1
 9116              	.L522:
 302:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9117              		.loc 20 302 13 is_stmt 1 view .LVU2503
 303:Veno-Echo.cpp ****             break;
 9118              		.loc 20 303 17 view .LVU2504
 9119              	.LBB1856:
 9120              	.LBI1856:
 850:Veno-Echo.cpp **** {
 9121              		.loc 20 850 6 view .LVU2505
 9122              	.LBB1857:
 852:Veno-Echo.cpp **** }
 9123              		.loc 20 852 5 view .LVU2506
 852:Veno-Echo.cpp **** }
 9124              		.loc 20 852 36 is_stmt 0 view .LVU2507
 9125 0058 0021     		movs	r1, #0
 9126              	.LVL559:
 852:Veno-Echo.cpp **** }
 9127              		.loc 20 852 36 view .LVU2508
 9128 005a 0C48     		ldr	r0, .L647+4
 9129              	.LVL560:
 852:Veno-Echo.cpp **** }
 9130              		.loc 20 852 36 view .LVU2509
 9131 005c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9132              	.LVL561:
 852:Veno-Echo.cpp **** }
 9133              		.loc 20 852 19 view .LVU2510
 9134 0060 0B4B     		ldr	r3, .L647+8
 9135 0062 83ED000A 		vstr.32	s0, [r3]
 9136              	.L507:
 9137              	.LVL562:
 852:Veno-Echo.cpp **** }
 9138              		.loc 20 852 19 view .LVU2511
 9139              	.LBE1857:
 9140              	.LBE1856:
 9141              	.LBB1858:
 383:Veno-Echo.cpp ****     {   
 9142              		.loc 20 383 25 is_stmt 1 discriminator 1 view .LVU2512
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 297


 9143 0066 002D     		cmp	r5, #0
 9144 0068 00F05285 		beq	.L506
 383:Veno-Echo.cpp ****     {   
 9145              		.loc 20 383 25 is_stmt 0 view .LVU2513
 9146 006c 0023     		movs	r3, #0
 9147 006e 013D     		subs	r5, r5, #1
 9148              	.LVL563:
 383:Veno-Echo.cpp ****     {   
 9149              		.loc 20 383 25 view .LVU2514
 9150 0070 DFF82480 		ldr	r8, .L647+16
 9151 0074 B346     		mov	fp, r6
 9152 0076 0293     		str	r3, [sp, #8]
 9153 0078 25F00103 		bic	r3, r5, #1
 9154 007c DFF81C90 		ldr	r9, .L647+20
 9155 0080 0097     		str	r7, [sp]
 9156 0082 0593     		str	r3, [sp, #20]
 9157 0084 5AE1     		b	.L579
 9158              	.L648:
 9159 0086 00BF     		.align	2
 9160              	.L647:
 9161 0088 89888888 		.word	-2004318071
 9162 008c 18000000 		.word	.LANCHOR4+24
 9163 0090 00000000 		.word	.LANCHOR5
 9164 0094 00000000 		.word	.LANCHOR116
 9165 0098 00000000 		.word	.LANCHOR131
 9166 009c 00000000 		.word	.LANCHOR132
 9167              	.LVL564:
 9168              	.L646:
 9169              	.LBB1859:
 9170              	.LBB1860:
 9171              	.LBB1861:
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9172              		.loc 20 2005 10 is_stmt 1 view .LVU2515
 9173 00a0 B8EE007A 		vmov.f32	s14, #-2.0e+0
2006:Veno-Echo.cpp ****     else
 9174              		.loc 20 2006 19 is_stmt 0 view .LVU2516
 9175 00a4 F4EE477A 		vcmp.f32	s15, s14
 9176 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9177 00ac 48BF     		it	mi
 9178 00ae F0EE477A 		vmovmi.f32	s15, s14
 9179              	.LVL565:
 9180              	.L545:
2010:Veno-Echo.cpp **** }
 9181              		.loc 20 2010 5 is_stmt 1 view .LVU2517
2010:Veno-Echo.cpp **** }
 9182              		.loc 20 2010 5 is_stmt 0 view .LVU2518
 9183              	.LBE1861:
 9184              	.LBE1860:
 9185              	.LBB1864:
 9186              	.LBB1865:
2003:Veno-Echo.cpp ****         returnval = limit;
 9187              		.loc 20 2003 5 view .LVU2519
 9188 00b2 B0EE007A 		vmov.f32	s14, #2.0e+0
 9189              	.LBE1865:
 9190              	.LBE1864:
 439:Veno-Echo.cpp **** 
 9191              		.loc 20 439 34 view .LVU2520
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 298


 9192 00b6 9DED090A 		vldr.32	s0, [sp, #36]
 438:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9193              		.loc 20 438 23 view .LVU2521
 9194 00ba CDED087A 		vstr.32	s15, [sp, #32]
 439:Veno-Echo.cpp **** 
 9195              		.loc 20 439 9 is_stmt 1 view .LVU2522
 9196              	.LVL566:
 9197              	.LBB1869:
 9198              	.LBI1864:
2000:Veno-Echo.cpp **** {
 9199              		.loc 20 2000 7 view .LVU2523
 9200              	.LBB1866:
2002:Veno-Echo.cpp ****     if (input > limit)
 9201              		.loc 20 2002 5 view .LVU2524
2003:Veno-Echo.cpp ****         returnval = limit;
 9202              		.loc 20 2003 5 view .LVU2525
 9203 00be B4EEC70A 		vcmpe.f32	s0, s14
 9204 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9205 00c6 00F36284 		bgt	.L583
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9206              		.loc 20 2005 10 view .LVU2526
 9207 00ca B8EE007A 		vmov.f32	s14, #-2.0e+0
 9208              	.LBE1866:
 9209              	.LBE1869:
 9210              	.LBB1870:
 441:Veno-Echo.cpp **** {
 9211              		.loc 20 441 1 is_stmt 0 view .LVU2527
 9212 00ce DD4B     		ldr	r3, .L649
 9213 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9214              	.LBE1870:
 9215              	.LBB1892:
 9216              	.LBB1867:
2006:Veno-Echo.cpp ****     else
 9217              		.loc 20 2006 19 view .LVU2528
 9218 00d2 B4EE470A 		vcmp.f32	s0, s14
 9219 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9220 00da 48BF     		it	mi
 9221 00dc B0EE470A 		vmovmi.f32	s0, s14
 9222              	.LVL567:
2010:Veno-Echo.cpp **** }
 9223              		.loc 20 2010 5 is_stmt 1 view .LVU2529
2010:Veno-Echo.cpp **** }
 9224              		.loc 20 2010 5 is_stmt 0 view .LVU2530
 9225              	.LBE1867:
 9226              	.LBE1892:
 439:Veno-Echo.cpp **** 
 9227              		.loc 20 439 23 view .LVU2531
 9228 00e0 8DED090A 		vstr.32	s0, [sp, #36]
 441:Veno-Echo.cpp **** {
 9229              		.loc 20 441 1 is_stmt 1 view .LVU2532
 9230              	.LBB1893:
 9231 00e4 002B     		cmp	r3, #0
 9232 00e6 00F05B84 		beq	.L643
 9233              	.L549:
 9234              	.LBE1893:
 485:Veno-Echo.cpp ****         static float RNegFB{};
 9235              		.loc 20 485 9 view .LVU2533
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 299


 486:Veno-Echo.cpp **** 
 9236              		.loc 20 486 9 view .LVU2534
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9237              		.loc 20 489 9 view .LVU2535
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9238              		.loc 20 489 22 is_stmt 0 view .LVU2536
 9239 00ea D74B     		ldr	r3, .L649+4
 9240              	.LBB1894:
 9241              	.LBB1895:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9242              		.loc 12 57 16 view .LVU2537
 9243 00ec D8ED042A 		vldr.32	s5, [r8, #16]
 9244              	.LBE1895:
 9245              	.LBE1894:
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9246              		.loc 20 489 22 view .LVU2538
 9247 00f0 D3ED004A 		vldr.32	s9, [r3]
 9248 00f4 D54B     		ldr	r3, .L649+8
 9249              	.LBB1907:
 9250              	.LBB1896:
 9251              		.loc 12 57 37 view .LVU2539
 9252 00f6 98ED006A 		vldr.32	s12, [r8]
 9253              	.LBE1896:
 9254              	.LBE1907:
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9255              		.loc 20 489 22 view .LVU2540
 9256 00fa 93ED007A 		vldr.32	s14, [r3]
 492:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9257              		.loc 20 492 22 view .LVU2541
 9258 00fe D44B     		ldr	r3, .L649+12
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9259              		.loc 20 489 9 view .LVU2542
 9260 0100 F4EEC74A 		vcmpe.f32	s9, s14
 9261              	.LBB1908:
 9262              	.LBB1909:
 9263              		.loc 12 57 16 view .LVU2543
 9264 0104 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9265              		.loc 12 65 20 view .LVU2544
 9266 0108 99ED054A 		vldr.32	s8, [r9, #20]
 9267              		.loc 12 65 53 view .LVU2545
 9268 010c 99ED032A 		vldr.32	s4, [r9, #12]
 9269              	.LBE1909:
 9270              	.LBE1908:
 489:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9271              		.loc 20 489 9 view .LVU2546
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 300


 9272 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9273              	.LBB1918:
 9274              	.LBB1897:
 9275              		.loc 12 65 20 view .LVU2547
 9276 0114 98ED053A 		vldr.32	s6, [r8, #20]
 9277              		.loc 12 65 53 view .LVU2548
 9278 0118 98ED031A 		vldr.32	s2, [r8, #12]
 9279              	.LBE1897:
 9280              	.LBE1918:
 508:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9281              		.loc 20 508 13 view .LVU2549
 9282 011c DFEDCD1A 		vldr.32	s3, .L649+16
 9283 0120 58BF     		it	pl
 9284 0122 74EEC74A 		vsubpl.f32	s9, s9, s14
 492:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9285              		.loc 20 492 9 is_stmt 1 view .LVU2550
 492:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9286              		.loc 20 492 22 is_stmt 0 view .LVU2551
 9287 0126 93ED007A 		vldr.32	s14, [r3]
 9288 012a CB4B     		ldr	r3, .L649+20
 9289 012c D3ED006A 		vldr.32	s13, [r3]
 495:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9290              		.loc 20 495 15 view .LVU2552
 9291 0130 67EEA44A 		vmul.f32	s9, s15, s9
 9292              	.LBB1919:
 9293              	.LBB1910:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9294              		.loc 12 57 37 view .LVU2553
 9295 0134 D9ED007A 		vldr.32	s15, [r9]
 9296              	.LBE1910:
 9297              	.LBE1919:
 492:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9298              		.loc 20 492 9 view .LVU2554
 9299 0138 B4EEE67A 		vcmpe.f32	s14, s13
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9300              		.loc 20 499 36 view .LVU2555
 9301 013c C74B     		ldr	r3, .L649+24
 492:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9302              		.loc 20 492 9 view .LVU2556
 9303 013e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9304 0142 58BF     		it	pl
 9305 0144 37EE667A 		vsubpl.f32	s14, s14, s13
 495:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9306              		.loc 20 495 9 is_stmt 1 view .LVU2557
 9307              	.LVL568:
 496:Veno-Echo.cpp **** 
 9308              		.loc 20 496 9 view .LVU2558
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9309              		.loc 20 499 36 is_stmt 0 view .LVU2559
 9310 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 496:Veno-Echo.cpp **** 
 9311              		.loc 20 496 15 view .LVU2560
 9312 014c 20EE070A 		vmul.f32	s0, s0, s14
 9313              	.LVL569:
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9314              		.loc 20 499 9 is_stmt 1 view .LVU2561
 9315              	.LBB1920:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 301


 9316              	.LBB1898:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9317              		.loc 12 57 33 is_stmt 0 view .LVU2562
 9318 0150 36EEE25A 		vsub.f32	s10, s13, s5
 9319              	.LBE1898:
 9320              	.LBE1920:
 9321              	.LBB1921:
 9322              	.LBB1911:
 9323 0154 76EEE35A 		vsub.f32	s11, s13, s7
 9324              	.LBE1911:
 9325              	.LBE1921:
 9326              	.LBB1922:
 9327              	.LBB1899:
 9328              		.loc 12 65 45 view .LVU2563
 9329 0158 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9330              		.loc 12 57 37 view .LVU2564
 9331 015c 25EE065A 		vmul.f32	s10, s10, s12
 9332              	.LBE1899:
 9333              	.LBE1922:
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9334              		.loc 20 499 36 view .LVU2565
 9335 0160 93ED006A 		vldr.32	s12, [r3]
 9336              	.LBB1923:
 9337              	.LBB1912:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9338              		.loc 12 57 37 view .LVU2566
 9339 0164 65EEA75A 		vmul.f32	s11, s11, s15
 9340              		.loc 12 65 45 view .LVU2567
 9341 0168 76EEC47A 		vsub.f32	s15, s13, s8
 9342              	.LBE1912:
 9343              	.LBE1923:
 9344              	.LBB1924:
 9345              	.LBB1900:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9346              		.loc 12 57 28 view .LVU2568
 9347 016c A4EEA25A 		vfma.f32	s10, s9, s5
 9348              	.LBE1900:
 9349              	.LBE1924:
 9350              	.LBB1925:
 9351              	.LBB1913:
 9352 0170 E0EE235A 		vfma.f32	s11, s0, s7
 9353              		.loc 12 65 53 view .LVU2569
 9354 0174 67EE827A 		vmul.f32	s15, s15, s4
 9355              	.LBE1913:
 9356              	.LBE1925:
 9357              	.LBB1926:
 9358              	.LBB1901:
 9359 0178 27EE017A 		vmul.f32	s14, s14, s2
 9360              	.LBE1901:
 9361              	.LBE1926:
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9362              		.loc 20 499 36 view .LVU2570
 9363 017c 76EEC66A 		vsub.f32	s13, s13, s12
 9364              	.LBB1927:
 9365              	.LBB1902:
  58:envFollow.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 302


 9366              		.loc 12 58 30 view .LVU2571
 9367 0180 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9368              		.loc 12 57 13 view .LVU2572
 9369 0184 88ED005A 		vstr.32	s10, [r8]
 9370              	.LBE1902:
 9371              	.LBE1927:
 9372              	.LBB1928:
 9373              	.LBB1914:
  58:envFollow.h   **** 
 9374              		.loc 12 58 30 view .LVU2573
 9375 0188 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9376              		.loc 12 57 13 view .LVU2574
 9377 018c C9ED005A 		vstr.32	s11, [r9]
 9378              	.LBE1914:
 9379              	.LBE1928:
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9380              		.loc 20 499 89 view .LVU2575
 9381 0190 66EE005A 		vmul.f32	s11, s12, s0
 9382              	.LBB1929:
 9383              	.LBB1903:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9384              		.loc 12 61 27 view .LVU2576
 9385 0194 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9386              		.loc 12 58 21 view .LVU2577
 9387 0198 88ED022A 		vstr.32	s4, [r8, #8]
 9388              	.LBE1903:
 9389              	.LBE1929:
 9390              	.LBB1930:
 9391              	.LBB1915:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9392              		.loc 12 61 27 view .LVU2578
 9393 019c B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9394              		.loc 12 58 21 view .LVU2579
 9395 01a0 C9ED022A 		vstr.32	s5, [r9, #8]
 9396              	.LBE1915:
 9397              	.LBE1930:
 500:Veno-Echo.cpp **** 
 9398              		.loc 20 500 89 view .LVU2580
 9399 01a4 26EE246A 		vmul.f32	s12, s12, s9
 9400              	.LBB1931:
 9401              	.LBB1904:
 9402              		.loc 12 65 40 view .LVU2581
 9403 01a8 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9404              		.loc 12 61 20 view .LVU2582
 9405 01ac C8ED013A 		vstr.32	s7, [r8, #4]
 9406              	.LBE1904:
 9407              	.LBE1931:
 9408              	.LBB1932:
 9409              	.LBB1916:
 9410              		.loc 12 65 40 view .LVU2583
 9411 01b0 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 303


 9412              		.loc 12 61 20 view .LVU2584
 9413 01b4 89ED015A 		vstr.32	s10, [r9, #4]
 9414              	.LBE1916:
 9415              	.LBE1932:
 499:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9416              		.loc 20 499 15 view .LVU2585
 9417 01b8 E6EEA45A 		vfma.f32	s11, s13, s9
 9418              	.LVL570:
 500:Veno-Echo.cpp **** 
 9419              		.loc 20 500 9 is_stmt 1 view .LVU2586
 500:Veno-Echo.cpp **** 
 9420              		.loc 20 500 15 is_stmt 0 view .LVU2587
 9421 01bc A6EE806A 		vfma.f32	s12, s13, s0
 9422              	.LVL571:
 504:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9423              		.loc 20 504 9 is_stmt 1 view .LVU2588
 9424              	.LBB1933:
 9425              	.LBI1894:
  54:envFollow.h   ****     {
 9426              		.loc 12 54 11 view .LVU2589
 9427              	.LBB1905:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9428              		.loc 12 57 9 view .LVU2590
  58:envFollow.h   **** 
 9429              		.loc 12 58 9 view .LVU2591
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9430              		.loc 12 61 9 view .LVU2592
 9431              		.loc 12 65 9 view .LVU2593
 9432              	.LBE1905:
 9433              	.LBE1933:
 508:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9434              		.loc 20 508 13 is_stmt 0 view .LVU2594
 9435 01c0 B4EEE17A 		vcmpe.f32	s14, s3
 9436              	.LBB1934:
 9437              	.LBB1906:
 9438              		.loc 12 65 17 view .LVU2595
 9439 01c4 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9440              		.loc 12 67 9 is_stmt 1 view .LVU2596
 9441              	.LVL572:
 9442              		.loc 12 67 9 is_stmt 0 view .LVU2597
 9443              	.LBE1906:
 9444              	.LBE1934:
 505:Veno-Echo.cpp **** 
 9445              		.loc 20 505 9 is_stmt 1 view .LVU2598
 9446              	.LBB1935:
 9447              	.LBI1908:
  54:envFollow.h   ****     {
 9448              		.loc 12 54 11 view .LVU2599
 9449              	.LBB1917:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9450              		.loc 12 57 9 view .LVU2600
  58:envFollow.h   **** 
 9451              		.loc 12 58 9 view .LVU2601
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9452              		.loc 12 61 9 view .LVU2602
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 304


  65:envFollow.h   **** 
 9453              		.loc 12 65 9 view .LVU2603
  65:envFollow.h   **** 
 9454              		.loc 12 65 17 is_stmt 0 view .LVU2604
 9455 01c8 C9ED037A 		vstr.32	s15, [r9, #12]
 9456              		.loc 12 67 9 is_stmt 1 view .LVU2605
 9457              	.LVL573:
 9458              		.loc 12 67 9 is_stmt 0 view .LVU2606
 9459              	.LBE1917:
 9460              	.LBE1935:
 508:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9461              		.loc 20 508 13 is_stmt 1 view .LVU2607
 9462 01cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9463 01d0 C0F2DA83 		blt	.L635
 509:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9464              		.loc 20 509 17 view .LVU2608
 509:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9465              		.loc 20 509 32 is_stmt 0 view .LVU2609
 9466 01d4 37EE617A 		vsub.f32	s14, s14, s3
 9467              	.LVL574:
 509:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9468              		.loc 20 509 47 view .LVU2610
 9469 01d8 F0EE086A 		vmov.f32	s13, #3.0e+0
 9470 01dc 27EE267A 		vmul.f32	s14, s14, s13
 9471              	.L555:
 513:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9472              		.loc 20 513 13 view .LVU2611
 9473 01e0 DFED9C6A 		vldr.32	s13, .L649+16
 9474 01e4 994B     		ldr	r3, .L649+8
 9475 01e6 F4EEE67A 		vcmpe.f32	s15, s13
 9476 01ea 83ED007A 		vstr.32	s14, [r3]
 513:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9477              		.loc 20 513 13 is_stmt 1 view .LVU2612
 9478 01ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9479 01f2 C0F2C683 		blt	.L636
 514:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9480              		.loc 20 514 17 view .LVU2613
 514:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9481              		.loc 20 514 32 is_stmt 0 view .LVU2614
 9482 01f6 77EEE67A 		vsub.f32	s15, s15, s13
 9483              	.LVL575:
 514:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9484              		.loc 20 514 47 view .LVU2615
 9485 01fa B0EE087A 		vmov.f32	s14, #3.0e+0
 9486 01fe 67EE877A 		vmul.f32	s15, s15, s14
 9487              	.L557:
 9488 0202 954B     		ldr	r3, .L649+20
 518:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9489              		.loc 20 518 42 view .LVU2616
 9490 0204 78EEA58A 		vadd.f32	s17, s17, s11
 9491              	.LVL576:
 519:Veno-Echo.cpp ****  
 9492              		.loc 20 519 42 view .LVU2617
 9493 0208 38EE066A 		vadd.f32	s12, s16, s12
 9494              	.LVL577:
 519:Veno-Echo.cpp ****  
 9495              		.loc 20 519 42 view .LVU2618
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 305


 9496 020c C3ED007A 		vstr.32	s15, [r3]
 518:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9497              		.loc 20 518 9 is_stmt 1 view .LVU2619
 519:Veno-Echo.cpp ****  
 9498              		.loc 20 519 9 view .LVU2620
 522:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9499              		.loc 20 522 9 view .LVU2621
 9500              	.LVL578:
 9501              	.LBB1936:
 9502              	.LBI1936:
2000:Veno-Echo.cpp **** {
 9503              		.loc 20 2000 7 view .LVU2622
 9504              	.LBB1937:
2002:Veno-Echo.cpp ****     if (input > limit)
 9505              		.loc 20 2002 5 view .LVU2623
2003:Veno-Echo.cpp ****         returnval = limit;
 9506              		.loc 20 2003 5 view .LVU2624
 9507 0210 F0EE007A 		vmov.f32	s15, #2.0e+0
 9508 0214 F4EEE78A 		vcmpe.f32	s17, s15
 9509 0218 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9510 021c 00F35384 		bgt	.L589
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9511              		.loc 20 2005 10 view .LVU2625
 9512 0220 F8EE007A 		vmov.f32	s15, #-2.0e+0
2006:Veno-Echo.cpp ****     else
 9513              		.loc 20 2006 19 is_stmt 0 view .LVU2626
 9514 0224 F4EE678A 		vcmp.f32	s17, s15
 9515 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9516 022c 48BF     		it	mi
 9517 022e F0EE678A 		vmovmi.f32	s17, s15
 9518              	.LVL579:
 9519              	.L559:
2010:Veno-Echo.cpp **** }
 9520              		.loc 20 2010 5 is_stmt 1 view .LVU2627
2010:Veno-Echo.cpp **** }
 9521              		.loc 20 2010 5 is_stmt 0 view .LVU2628
 9522              	.LBE1937:
 9523              	.LBE1936:
 9524              	.LBB1939:
 9525              	.LBB1940:
2003:Veno-Echo.cpp ****         returnval = limit;
 9526              		.loc 20 2003 5 view .LVU2629
 9527 0232 F0EE007A 		vmov.f32	s15, #2.0e+0
 9528              	.LBE1940:
 9529              	.LBE1939:
 522:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9530              		.loc 20 522 19 view .LVU2630
 9531 0236 CDED0A8A 		vstr.32	s17, [sp, #40]
 523:Veno-Echo.cpp **** 
 9532              		.loc 20 523 9 is_stmt 1 view .LVU2631
 9533              	.LVL580:
 9534              	.LBB1943:
 9535              	.LBI1939:
2000:Veno-Echo.cpp **** {
 9536              		.loc 20 2000 7 view .LVU2632
 9537              	.LBB1941:
2002:Veno-Echo.cpp ****     if (input > limit)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 306


 9538              		.loc 20 2002 5 view .LVU2633
2003:Veno-Echo.cpp ****         returnval = limit;
 9539              		.loc 20 2003 5 view .LVU2634
 9540 023a B4EEE76A 		vcmpe.f32	s12, s15
 9541 023e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9542 0242 00F33C84 		bgt	.L590
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9543              		.loc 20 2005 10 view .LVU2635
 9544 0246 F8EE007A 		vmov.f32	s15, #-2.0e+0
2006:Veno-Echo.cpp ****     else
 9545              		.loc 20 2006 19 is_stmt 0 view .LVU2636
 9546 024a B4EE676A 		vcmp.f32	s12, s15
 9547 024e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9548 0252 48BF     		it	mi
 9549 0254 B0EE676A 		vmovmi.f32	s12, s15
 9550              	.LVL581:
 9551              	.L561:
2010:Veno-Echo.cpp **** }
 9552              		.loc 20 2010 5 is_stmt 1 view .LVU2637
2010:Veno-Echo.cpp **** }
 9553              		.loc 20 2010 5 is_stmt 0 view .LVU2638
 9554              	.LBE1941:
 9555              	.LBE1943:
 525:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9556              		.loc 20 525 21 view .LVU2639
 9557 0258 0AA9     		add	r1, sp, #40
 9558 025a 8148     		ldr	r0, .L649+28
 523:Veno-Echo.cpp **** 
 9559              		.loc 20 523 19 view .LVU2640
 9560 025c 8DED0B6A 		vstr.32	s12, [sp, #44]
 525:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9561              		.loc 20 525 9 is_stmt 1 view .LVU2641
 525:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9562              		.loc 20 525 21 is_stmt 0 view .LVU2642
 9563 0260 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9564              	.LVL582:
 526:Veno-Echo.cpp **** 
 9565              		.loc 20 526 9 is_stmt 1 view .LVU2643
 526:Veno-Echo.cpp **** 
 9566              		.loc 20 526 21 is_stmt 0 view .LVU2644
 9567 0264 0BA9     		add	r1, sp, #44
 9568 0266 7F48     		ldr	r0, .L649+32
 9569 0268 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9570              	.LVL583:
 529:Veno-Echo.cpp ****         float mixR;
 9571              		.loc 20 529 9 is_stmt 1 view .LVU2645
 530:Veno-Echo.cpp **** 
 9572              		.loc 20 530 9 view .LVU2646
 532:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9573              		.loc 20 532 9 view .LVU2647
 532:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9574              		.loc 20 532 53 is_stmt 0 view .LVU2648
 9575 026c 09AA     		add	r2, sp, #36
 9576 026e 08A9     		add	r1, sp, #32
 9577 0270 7D48     		ldr	r0, .L649+36
 9578 0272 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9579              	.LVL584:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 307


 533:Veno-Echo.cpp **** 
 9580              		.loc 20 533 53 view .LVU2649
 9581 0276 08AA     		add	r2, sp, #32
 9582 0278 09A9     		add	r1, sp, #36
 9583 027a 7B48     		ldr	r0, .L649+36
 532:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9584              		.loc 20 532 81 view .LVU2650
 9585 027c 8DED0C0A 		vstr.32	s0, [sp, #48]
 533:Veno-Echo.cpp **** 
 9586              		.loc 20 533 9 is_stmt 1 view .LVU2651
 533:Veno-Echo.cpp **** 
 9587              		.loc 20 533 53 is_stmt 0 view .LVU2652
 9588 0280 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9589              	.LVL585:
 9590              	.LBB1944:
 9591              	.LBB1945:
2003:Veno-Echo.cpp ****         returnval = limit;
 9592              		.loc 20 2003 5 view .LVU2653
 9593 0284 B0EE007A 		vmov.f32	s14, #2.0e+0
 9594              	.LBE1945:
 9595              	.LBE1944:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9596              		.loc 20 536 38 view .LVU2654
 9597 0288 DDED0C7A 		vldr.32	s15, [sp, #48]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9598              		.loc 20 536 9 is_stmt 1 view .LVU2655
 9599              	.LVL586:
 9600              	.LBB1948:
 9601              	.LBI1944:
2000:Veno-Echo.cpp **** {
 9602              		.loc 20 2000 7 view .LVU2656
 9603              	.LBB1946:
2002:Veno-Echo.cpp ****     if (input > limit)
 9604              		.loc 20 2002 5 view .LVU2657
2003:Veno-Echo.cpp ****         returnval = limit;
 9605              		.loc 20 2003 5 view .LVU2658
 9606 028c F4EEC77A 		vcmpe.f32	s15, s14
 9607 0290 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9608 0294 00F31B84 		bgt	.L591
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9609              		.loc 20 2005 10 view .LVU2659
 9610 0298 B8EE007A 		vmov.f32	s14, #-2.0e+0
2006:Veno-Echo.cpp ****     else
 9611              		.loc 20 2006 19 is_stmt 0 view .LVU2660
 9612 029c F4EE477A 		vcmp.f32	s15, s14
 9613 02a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9614 02a4 48BF     		it	mi
 9615 02a6 F0EE477A 		vmovmi.f32	s15, s14
 9616              	.LVL587:
 9617              	.L563:
2010:Veno-Echo.cpp **** }
 9618              		.loc 20 2010 5 is_stmt 1 view .LVU2661
2010:Veno-Echo.cpp **** }
 9619              		.loc 20 2010 5 is_stmt 0 view .LVU2662
 9620              	.LBE1946:
 9621              	.LBE1948:
 9622              	.LBB1949:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 308


 9623              	.LBB1950:
2003:Veno-Echo.cpp ****         returnval = limit;
 9624              		.loc 20 2003 5 view .LVU2663
 9625 02aa B0EE007A 		vmov.f32	s14, #2.0e+0
 9626              	.LBE1950:
 9627              	.LBE1949:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9628              		.loc 20 536 27 view .LVU2664
 9629 02ae CDED0C7A 		vstr.32	s15, [sp, #48]
 537:Veno-Echo.cpp **** 
 9630              		.loc 20 537 9 is_stmt 1 view .LVU2665
 9631              	.LVL588:
 9632              	.LBB1954:
 9633              	.LBI1949:
2000:Veno-Echo.cpp **** {
 9634              		.loc 20 2000 7 view .LVU2666
 9635              	.LBB1951:
2002:Veno-Echo.cpp ****     if (input > limit)
 9636              		.loc 20 2002 5 view .LVU2667
2003:Veno-Echo.cpp ****         returnval = limit;
 9637              		.loc 20 2003 5 view .LVU2668
 9638 02b2 B4EEC70A 		vcmpe.f32	s0, s14
 9639 02b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9640 02ba 00F3C982 		bgt	.L592
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9641              		.loc 20 2005 10 view .LVU2669
 9642 02be B8EE007A 		vmov.f32	s14, #-2.0e+0
 9643              	.LBE1951:
 9644              	.LBE1954:
 9645              	.LBB1955:
 539:Veno-Echo.cpp **** {
 9646              		.loc 20 539 1 is_stmt 0 view .LVU2670
 9647 02c2 604B     		ldr	r3, .L649
 9648 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9649              	.LBE1955:
 9650              	.LBB1978:
 9651              	.LBB1952:
2006:Veno-Echo.cpp ****     else
 9652              		.loc 20 2006 19 view .LVU2671
 9653 02c6 B4EE470A 		vcmp.f32	s0, s14
 9654 02ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9655 02ce 48BF     		it	mi
 9656 02d0 B0EE470A 		vmovmi.f32	s0, s14
 9657              	.LVL589:
2010:Veno-Echo.cpp **** }
 9658              		.loc 20 2010 5 is_stmt 1 view .LVU2672
2010:Veno-Echo.cpp **** }
 9659              		.loc 20 2010 5 is_stmt 0 view .LVU2673
 9660              	.LBE1952:
 9661              	.LBE1978:
 537:Veno-Echo.cpp **** 
 9662              		.loc 20 537 27 view .LVU2674
 9663 02d4 8DED0D0A 		vstr.32	s0, [sp, #52]
 539:Veno-Echo.cpp **** {
 9664              		.loc 20 539 1 is_stmt 1 view .LVU2675
 9665              	.LBB1979:
 9666 02d8 002B     		cmp	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 309


 9667 02da 40F0C282 		bne	.L644
 9668              	.LVL590:
 9669              	.L567:
 539:Veno-Echo.cpp **** {
 9670              		.loc 20 539 1 is_stmt 0 view .LVU2676
 9671              	.LBE1979:
 580:Veno-Echo.cpp ****         {
 9672              		.loc 20 580 9 is_stmt 1 view .LVU2677
 580:Veno-Echo.cpp ****         {
 9673              		.loc 20 580 19 is_stmt 0 view .LVU2678
 9674 02de 634B     		ldr	r3, .L649+40
 580:Veno-Echo.cpp ****         {
 9675              		.loc 20 580 9 view .LVU2679
 9676 02e0 F6EE006A 		vmov.f32	s13, #5.0e-1
 580:Veno-Echo.cpp ****         {
 9677              		.loc 20 580 19 view .LVU2680
 9678 02e4 93ED007A 		vldr.32	s14, [r3]
 580:Veno-Echo.cpp ****         {
 9679              		.loc 20 580 9 view .LVU2681
 9680 02e8 B4EEE67A 		vcmpe.f32	s14, s13
 9681 02ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9682 02f0 40F18582 		bpl	.L637
 582:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9683              		.loc 20 582 13 is_stmt 1 view .LVU2682
 582:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9684              		.loc 20 582 34 is_stmt 0 view .LVU2683
 9685 02f4 37EE077A 		vadd.f32	s14, s14, s14
 582:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9686              		.loc 20 582 18 view .LVU2684
 9687 02f8 9BED006A 		vldr.32	s12, [fp]
 583:Veno-Echo.cpp ****         }
 9688              		.loc 20 583 18 view .LVU2685
 9689 02fc DBED016A 		vldr.32	s13, [fp, #4]
 582:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9690              		.loc 20 582 18 view .LVU2686
 9691 0300 A7EE276A 		vfma.f32	s12, s14, s15
 583:Veno-Echo.cpp ****         }
 9692              		.loc 20 583 18 view .LVU2687
 9693 0304 E7EE006A 		vfma.f32	s13, s14, s0
 582:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9694              		.loc 20 582 18 view .LVU2688
 9695 0308 F0EE467A 		vmov.f32	s15, s12
 9696              	.LVL591:
 583:Veno-Echo.cpp ****         }
 9697              		.loc 20 583 13 is_stmt 1 view .LVU2689
 583:Veno-Echo.cpp ****         }
 9698              		.loc 20 583 18 is_stmt 0 view .LVU2690
 9699 030c B0EE660A 		vmov.f32	s0, s13
 9700              	.LVL592:
 9701              	.L573:
 597:Veno-Echo.cpp ****         {
 9702              		.loc 20 597 9 is_stmt 1 view .LVU2691
 9703 0310 574B     		ldr	r3, .L649+44
 9704 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9705 0314 002B     		cmp	r3, #0
 9706 0316 00F06C82 		beq	.L576
 599:Veno-Echo.cpp ****             out[i+1] = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 310


 9707              		.loc 20 599 13 view .LVU2692
 599:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9708              		.loc 20 599 20 is_stmt 0 view .LVU2693
 9709 031a 0023     		movs	r3, #0
 9710 031c 009A     		ldr	r2, [sp]
 9711 031e 1360     		str	r3, [r2]	@ float
 600:Veno-Echo.cpp ****         }
 9712              		.loc 20 600 13 is_stmt 1 view .LVU2694
 600:Veno-Echo.cpp ****         }
 9713              		.loc 20 600 22 is_stmt 0 view .LVU2695
 9714 0320 5360     		str	r3, [r2, #4]	@ float
 9715              	.L577:
 9716              	.LBE1859:
 383:Veno-Echo.cpp ****     {   
 9717              		.loc 20 383 5 is_stmt 1 discriminator 2 view .LVU2696
 9718 0322 009B     		ldr	r3, [sp]
 9719 0324 0BF1080B 		add	fp, fp, #8
 383:Veno-Echo.cpp ****     {   
 9720              		.loc 20 383 35 is_stmt 0 discriminator 2 view .LVU2697
 9721 0328 029A     		ldr	r2, [sp, #8]
 383:Veno-Echo.cpp ****     {   
 9722              		.loc 20 383 25 discriminator 2 view .LVU2698
 9723 032a 0599     		ldr	r1, [sp, #20]
 9724 032c 0833     		adds	r3, r3, #8
 9725 032e 8A42     		cmp	r2, r1
 9726 0330 0093     		str	r3, [sp]
 383:Veno-Echo.cpp ****     {   
 9727              		.loc 20 383 35 discriminator 2 view .LVU2699
 9728 0332 02F10203 		add	r3, r2, #2
 9729              	.LVL593:
 383:Veno-Echo.cpp ****     {   
 9730              		.loc 20 383 25 is_stmt 1 discriminator 2 view .LVU2700
 9731 0336 00F0EB83 		beq	.L506
 9732 033a 0293     		str	r3, [sp, #8]
 9733              	.LVL594:
 9734              	.L579:
 9735              	.LBB2244:
 385:Veno-Echo.cpp ****         Update_Mod();
 9736              		.loc 20 385 9 view .LVU2701
 385:Veno-Echo.cpp ****         Update_Mod();
 9737              		.loc 20 385 20 is_stmt 0 view .LVU2702
 9738 033c FFF7FEFF 		bl	_Z11UpdateClockv
 9739              	.LVL595:
 386:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9740              		.loc 20 386 9 is_stmt 1 view .LVU2703
 9741              	.LBB1980:
 9742              	.LBB1981:
 9743              	.LBB1982:
 9744              	.LBB1983:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 311


  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 312


 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9745              		.loc 19 174 71 is_stmt 0 view .LVU2704
 9746 0340 DFF89CA1 		ldr	r10, .L649+156
 9747              	.LBE1983:
 9748              	.LBE1982:
 9749              	.LBE1981:
 9750              	.LBE1980:
 386:Veno-Echo.cpp ****         Update_DelayBaseTempo();
 9751              		.loc 20 386 19 view .LVU2705
 9752 0344 FFF7FEFF 		bl	_Z10Update_Modv
 9753              	.LVL596:
 387:Veno-Echo.cpp **** 
 9754              		.loc 20 387 9 is_stmt 1 view .LVU2706
 9755              	.LBB2038:
 9756              	.LBB2020:
 9757              	.LBB2002:
 9758              	.LBB1984:
 9759              		.loc 19 174 46 is_stmt 0 view .LVU2707
 9760 0348 9FED4AAA 		vldr.32	s20, .L649+48
 9761              	.LBE1984:
 9762              	.LBE2002:
 9763              	.LBE2020:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 313


 9764              	.LBE2038:
 387:Veno-Echo.cpp **** 
 9765              		.loc 20 387 30 view .LVU2708
 9766 034c FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 9767              	.LVL597:
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9768              		.loc 20 390 9 is_stmt 1 view .LVU2709
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9769              		.loc 20 390 51 is_stmt 0 view .LVU2710
 9770 0350 4948     		ldr	r0, .L649+52
 9771 0352 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9772              	.LVL598:
 9773 0356 0146     		mov	r1, r0
 9774 0358 4848     		ldr	r0, .L649+56
 9775              	.LBB2039:
 9776              	.LBB2021:
 9777              	.LBB2003:
 9778              	.LBB1985:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9779              		.loc 19 175 77 view .LVU2711
 9780 035a F7EE00AA 		vmov.f32	s21, #1.0e+0
 9781              	.LBE1985:
 9782              	.LBE2003:
 9783              	.LBE2021:
 9784              	.LBE2039:
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9785              		.loc 20 390 51 view .LVU2712
 9786 035e FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9787              	.LVL599:
 391:Veno-Echo.cpp ****         
 9788              		.loc 20 391 51 view .LVU2713
 9789 0362 4748     		ldr	r0, .L649+60
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9790              		.loc 20 390 51 view .LVU2714
 9791 0364 F0EE40BA 		vmov.f32	s23, s0
 9792              	.LVL600:
 391:Veno-Echo.cpp ****         
 9793              		.loc 20 391 9 is_stmt 1 view .LVU2715
 391:Veno-Echo.cpp ****         
 9794              		.loc 20 391 51 is_stmt 0 view .LVU2716
 9795 0368 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9796              	.LVL601:
 391:Veno-Echo.cpp ****         
 9797              		.loc 20 391 51 view .LVU2717
 9798 036c 0146     		mov	r1, r0
 9799 036e 4548     		ldr	r0, .L649+64
 9800 0370 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9801              	.LVL602:
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9802              		.loc 20 393 44 view .LVU2718
 9803 0374 4448     		ldr	r0, .L649+68
 391:Veno-Echo.cpp ****         
 9804              		.loc 20 391 51 view .LVU2719
 9805 0376 B0EE409A 		vmov.f32	s18, s0
 9806              	.LVL603:
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9807              		.loc 20 393 9 is_stmt 1 view .LVU2720
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 314


 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9808              		.loc 20 393 44 is_stmt 0 view .LVU2721
 9809 037a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9810              	.LVL604:
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9811              		.loc 20 393 44 view .LVU2722
 9812 037e 0146     		mov	r1, r0
 9813 0380 4248     		ldr	r0, .L649+72
 9814 0382 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9815              	.LVL605:
 394:Veno-Echo.cpp **** 
 9816              		.loc 20 394 44 view .LVU2723
 9817 0386 4248     		ldr	r0, .L649+76
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9818              		.loc 20 393 44 view .LVU2724
 9819 0388 B0EE408A 		vmov.f32	s16, s0
 9820              	.LVL606:
 394:Veno-Echo.cpp **** 
 9821              		.loc 20 394 9 is_stmt 1 view .LVU2725
 394:Veno-Echo.cpp **** 
 9822              		.loc 20 394 44 is_stmt 0 view .LVU2726
 9823 038c FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9824              	.LVL607:
 394:Veno-Echo.cpp **** 
 9825              		.loc 20 394 44 view .LVU2727
 9826 0390 0146     		mov	r1, r0
 9827 0392 4048     		ldr	r0, .L649+80
 9828 0394 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9829              	.LVL608:
 9830              	.LBB2040:
 9831              	.LBB2041:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9832              		.loc 11 60 42 view .LVU2728
 9833 0398 3F48     		ldr	r0, .L649+84
 9834              	.LBE2041:
 9835              	.LBE2040:
 417:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9836              		.loc 20 417 49 view .LVU2729
 9837 039a 404B     		ldr	r3, .L649+88
 394:Veno-Echo.cpp **** 
 9838              		.loc 20 394 44 view .LVU2730
 9839 039c F0EE407A 		vmov.f32	s15, s0
 9840              	.LVL609:
 397:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9841              		.loc 20 397 9 is_stmt 1 view .LVU2731
 9842              	.LBB2043:
 9843              	.LBI2040:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9844              		.loc 11 60 17 view .LVU2732
 9845              	.LBB2042:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9846              		.loc 11 60 37 view .LVU2733
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9847              		.loc 11 60 42 is_stmt 0 view .LVU2734
 9848 03a0 C0ED00BA 		vstr.32	s23, [r0]
 9849              	.LVL610:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 315


 9850              		.loc 11 60 42 view .LVU2735
 9851              	.LBE2042:
 9852              	.LBE2043:
 398:Veno-Echo.cpp ****         
 9853              		.loc 20 398 9 is_stmt 1 view .LVU2736
 9854              	.LBB2044:
 9855              	.LBI2044:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9856              		.loc 11 60 17 view .LVU2737
 9857              	.LBB2045:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9858              		.loc 11 60 37 view .LVU2738
 9859              	.LBE2045:
 9860              	.LBE2044:
 9861              	.LBB2048:
 9862              	.LBB2022:
 9863              	.LBB2004:
 9864              	.LBB1986:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9865              		.loc 19 174 82 is_stmt 0 view .LVU2739
 9866 03a4 F6EE028A 		vmov.f32	s17, #5.625e-1
 9867              	.LBE1986:
 9868              	.LBE2004:
 9869              	.LBE2022:
 9870              	.LBE2048:
 9871              	.LBB2049:
 9872              	.LBB2046:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9873              		.loc 11 60 42 view .LVU2740
 9874 03a8 3D48     		ldr	r0, .L649+92
 9875              	.LBE2046:
 9876              	.LBE2049:
 417:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9877              		.loc 20 417 49 view .LVU2741
 9878 03aa 1D68     		ldr	r5, [r3]
 9879              	.LBB2050:
 9880              	.LBB2047:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9881              		.loc 11 60 42 view .LVU2742
 9882 03ac 80ED009A 		vstr.32	s18, [r0]
 9883              	.LVL611:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9884              		.loc 11 60 42 view .LVU2743
 9885              	.LBE2047:
 9886              	.LBE2050:
 400:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9887              		.loc 20 400 9 is_stmt 1 view .LVU2744
 9888              	.LBB2051:
 9889              	.LBI2051:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9890              		.loc 11 60 17 view .LVU2745
 9891              	.LBB2052:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9892              		.loc 11 60 37 view .LVU2746
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9893              		.loc 11 60 42 is_stmt 0 view .LVU2747
 9894 03b0 3C48     		ldr	r0, .L649+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 316


 9895              	.LBE2052:
 9896              	.LBE2051:
 9897              	.LBB2054:
 9898              	.LBB2023:
 9899              	.LBB2005:
 9900              	.LBB1987:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9901              		.loc 19 174 71 view .LVU2748
 9902 03b2 05EB0A02 		add	r2, r5, r10
 9903              	.LBE1987:
 9904              	.LBE2005:
 9905              	.LBE2023:
 9906              	.LBE2054:
 410:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9907              		.loc 20 410 27 view .LVU2749
 9908 03b6 3C4B     		ldr	r3, .L649+100
 9909              	.LBB2055:
 9910              	.LBB2053:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9911              		.loc 11 60 42 view .LVU2750
 9912 03b8 80ED008A 		vstr.32	s16, [r0]
 9913              	.LVL612:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9914              		.loc 11 60 42 view .LVU2751
 9915              	.LBE2053:
 9916              	.LBE2055:
 401:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9917              		.loc 20 401 9 is_stmt 1 view .LVU2752
 9918              	.LBB2056:
 9919              	.LBI2056:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9920              		.loc 11 60 17 view .LVU2753
 9921              	.LBB2057:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9922              		.loc 11 60 37 view .LVU2754
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9923              		.loc 11 60 42 is_stmt 0 view .LVU2755
 9924 03bc 3B48     		ldr	r0, .L649+104
 9925              	.LBE2057:
 9926              	.LBE2056:
 9927              	.LBB2059:
 9928              	.LBB2024:
 9929              	.LBB2006:
 9930              	.LBB1988:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9931              		.loc 19 174 71 view .LVU2756
 9932 03be 92ED00BA 		vldr.32	s22, [r2]
 9933              	.LBE1988:
 9934              	.LBE2006:
 9935              	.LBE2024:
 9936              	.LBE2059:
 9937              	.LBB2060:
 9938              	.LBB2058:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9939              		.loc 11 60 42 view .LVU2757
 9940 03c2 80ED008A 		vstr.32	s16, [r0]
 9941              	.LVL613:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 317


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9942              		.loc 11 60 42 view .LVU2758
 9943              	.LBE2058:
 9944              	.LBE2060:
 402:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9945              		.loc 20 402 9 is_stmt 1 view .LVU2759
 9946              	.LBB2061:
 9947              	.LBI2061:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9948              		.loc 11 60 17 view .LVU2760
 9949              	.LBB2062:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9950              		.loc 11 60 37 view .LVU2761
 9951              	.LBE2062:
 9952              	.LBE2061:
 9953              	.LBB2065:
 9954              	.LBB2066:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9955              		.loc 11 60 42 is_stmt 0 view .LVU2762
 9956 03c6 3A48     		ldr	r0, .L649+108
 9957              	.LBE2066:
 9958              	.LBE2065:
 9959              	.LBB2069:
 9960              	.LBB2025:
 9961              	.LBB2007:
 9962              	.LBB1989:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9963              		.loc 19 174 46 view .LVU2763
 9964 03c8 2BEE0A0A 		vmul.f32	s0, s22, s20
 9965              	.LVL614:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9966              		.loc 19 174 71 view .LVU2764
 9967 03cc 0492     		str	r2, [sp, #16]
 9968              		.loc 19 175 77 view .LVU2765
 9969 03ce 3AEECBCA 		vsub.f32	s24, s21, s22
 9970              	.LBE1989:
 9971              	.LBE2007:
 9972              	.LBE2025:
 9973              	.LBE2069:
 9974              	.LBB2070:
 9975              	.LBB2067:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9976              		.loc 11 60 42 view .LVU2766
 9977 03d2 80ED008A 		vstr.32	s16, [r0]
 9978              	.LBE2067:
 9979              	.LBE2070:
 9980              	.LBB2071:
 9981              	.LBB2072:
 9982 03d6 3748     		ldr	r0, .L649+112
 9983              	.LBE2072:
 9984              	.LBE2071:
 410:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9985              		.loc 20 410 27 view .LVU2767
 9986 03d8 1B68     		ldr	r3, [r3]	@ float
 9987              	.LBB2075:
 9988              	.LBB2073:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 318


 9989              		.loc 11 60 42 view .LVU2768
 9990 03da 80ED008A 		vstr.32	s16, [r0]
 9991              	.LBE2073:
 9992              	.LBE2075:
 9993              	.LBB2076:
 9994              	.LBB2063:
 9995 03de 3648     		ldr	r0, .L649+116
 9996              	.LBE2063:
 9997              	.LBE2076:
 9998              	.LBB2077:
 9999              	.LBB2026:
 10000              	.LBB2008:
 10001              	.LBB1990:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10002              		.loc 19 174 103 view .LVU2769
 10003 03e0 DFED369A 		vldr.32	s19, .L649+120
 10004              	.LBE1990:
 10005              	.LBE2008:
 10006              	.LBE2026:
 10007              	.LBE2077:
 10008              	.LBB2078:
 10009              	.LBB2064:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10010              		.loc 11 60 42 view .LVU2770
 10011 03e4 C0ED007A 		vstr.32	s15, [r0]
 10012              	.LVL615:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10013              		.loc 11 60 42 view .LVU2771
 10014              	.LBE2064:
 10015              	.LBE2078:
 403:Veno-Echo.cpp **** 
 10016              		.loc 20 403 9 is_stmt 1 view .LVU2772
 10017              	.LBB2079:
 10018              	.LBI2079:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10019              		.loc 11 60 17 view .LVU2773
 10020              	.LBB2080:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10021              		.loc 11 60 37 view .LVU2774
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10022              		.loc 11 60 42 is_stmt 0 view .LVU2775
 10023 03e8 3548     		ldr	r0, .L649+124
 10024              	.LBE2080:
 10025              	.LBE2079:
 10026              	.LBB2082:
 10027              	.LBB2027:
 10028              	.LBB2009:
 10029              	.LBB1991:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10030              		.loc 19 174 98 view .LVU2776
 10031 03ea 9FED369A 		vldr.32	s18, .L649+128
 10032              	.LVL616:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10033              		.loc 19 174 98 view .LVU2777
 10034              	.LBE1991:
 10035              	.LBE2009:
 10036              	.LBE2027:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 319


 10037              	.LBE2082:
 10038              	.LBB2083:
 10039              	.LBB2081:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10040              		.loc 11 60 42 view .LVU2778
 10041 03ee C0ED007A 		vstr.32	s15, [r0]
 10042              	.LVL617:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10043              		.loc 11 60 42 view .LVU2779
 10044              	.LBE2081:
 10045              	.LBE2083:
 405:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10046              		.loc 20 405 9 is_stmt 1 view .LVU2780
 10047              	.LBB2084:
 10048              	.LBI2065:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10049              		.loc 11 60 17 view .LVU2781
 10050              	.LBB2068:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10051              		.loc 11 60 37 view .LVU2782
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10052              		.loc 11 60 37 is_stmt 0 view .LVU2783
 10053              	.LBE2068:
 10054              	.LBE2084:
 406:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10055              		.loc 20 406 9 is_stmt 1 view .LVU2784
 10056              	.LBB2085:
 10057              	.LBI2071:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10058              		.loc 11 60 17 view .LVU2785
 10059              	.LBB2074:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10060              		.loc 11 60 37 view .LVU2786
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10061              		.loc 11 60 37 is_stmt 0 view .LVU2787
 10062              	.LBE2074:
 10063              	.LBE2085:
 407:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10064              		.loc 20 407 9 is_stmt 1 view .LVU2788
 10065              	.LBB2086:
 10066              	.LBI2086:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10067              		.loc 11 60 17 view .LVU2789
 10068              	.LBB2087:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10069              		.loc 11 60 37 view .LVU2790
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10070              		.loc 11 60 42 is_stmt 0 view .LVU2791
 10071 03f2 3548     		ldr	r0, .L649+132
 10072              	.LBE2087:
 10073              	.LBE2086:
 10074              	.LBB2089:
 10075              	.LBB2028:
 10076              	.LBB2010:
 10077              	.LBB1992:
 162:delayline_reverse.h **** 
 10078              		.loc 19 162 23 view .LVU2792
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 320


 10079 03f4 D5E90267 		ldrd	r6, r7, [r5, #8]
 10080              	.LBE1992:
 10081              	.LBE2010:
 10082              	.LBE2028:
 10083              	.LBE2089:
 10084              	.LBB2090:
 10085              	.LBB2088:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10086              		.loc 11 60 42 view .LVU2793
 10087 03f8 C0ED007A 		vstr.32	s15, [r0]
 10088              	.LVL618:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10089              		.loc 11 60 42 view .LVU2794
 10090              	.LBE2088:
 10091              	.LBE2090:
 408:Veno-Echo.cpp **** 
 10092              		.loc 20 408 9 is_stmt 1 view .LVU2795
 10093              	.LBB2091:
 10094              	.LBI2091:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10095              		.loc 11 60 17 view .LVU2796
 10096              	.LBB2092:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10097              		.loc 11 60 37 view .LVU2797
 10098              	.LBE2092:
 10099              	.LBE2091:
 10100              	.LBB2095:
 10101              	.LBB2029:
 10102              	.LBB2011:
 10103              	.LBB1993:
 162:delayline_reverse.h **** 
 10104              		.loc 19 162 11 is_stmt 0 view .LVU2798
 10105 03fc 05EB8702 		add	r2, r5, r7, lsl #2
 10106              	.LBE1993:
 10107              	.LBE2011:
 10108              	.LBE2029:
 10109              	.LBE2095:
 10110              	.LBB2096:
 10111              	.LBB2093:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10112              		.loc 11 60 42 view .LVU2799
 10113 0400 3248     		ldr	r0, .L649+136
 10114              	.LBE2093:
 10115              	.LBE2096:
 10116              	.LBB2097:
 10117              	.LBB2030:
 10118              	.LBB2012:
 10119              	.LBB1994:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10120              		.loc 19 161 11 view .LVU2800
 10121 0402 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 10122              		.loc 19 162 11 view .LVU2801
 10123 0406 D2ED06DA 		vldr.32	s27, [r2, #24]
 10124              	.LBE1994:
 10125              	.LBE2012:
 10126              	.LBE2030:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 321


 10127              	.LBE2097:
 10128              	.LBB2098:
 10129              	.LBB2099:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10130              		.loc 11 60 42 view .LVU2802
 10131 040a 314A     		ldr	r2, .L649+140
 10132              	.LBE2099:
 10133              	.LBE2098:
 10134              	.LBB2101:
 10135              	.LBB2094:
 10136 040c C0ED007A 		vstr.32	s15, [r0]
 10137              	.LVL619:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10138              		.loc 11 60 42 view .LVU2803
 10139              	.LBE2094:
 10140              	.LBE2101:
 410:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10141              		.loc 20 410 9 is_stmt 1 view .LVU2804
 10142              	.LBB2102:
 10143              	.LBI2098:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10144              		.loc 11 60 17 view .LVU2805
 10145              	.LBB2100:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10146              		.loc 11 60 37 view .LVU2806
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10147              		.loc 11 60 42 is_stmt 0 view .LVU2807
 10148 0410 1360     		str	r3, [r2]	@ float
 10149              	.LVL620:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10150              		.loc 11 60 42 view .LVU2808
 10151              	.LBE2100:
 10152              	.LBE2102:
 411:Veno-Echo.cpp **** 
 10153              		.loc 20 411 9 is_stmt 1 view .LVU2809
 10154              	.LBB2103:
 10155              	.LBI2103:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10156              		.loc 11 60 17 view .LVU2810
 10157              	.LBB2104:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10158              		.loc 11 60 37 view .LVU2811
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10159              		.loc 11 60 42 is_stmt 0 view .LVU2812
 10160 0412 304A     		ldr	r2, .L649+144
 10161              	.LBE2104:
 10162              	.LBE2103:
 10163              	.LBB2106:
 10164              	.LBB2031:
 10165              	.LBB2013:
 10166              	.LBB1995:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10167              		.loc 19 161 11 view .LVU2813
 10168 0414 91ED06EA 		vldr.32	s28, [r1, #24]
 10169              	.LBE1995:
 10170              	.LBE2013:
 10171              	.LBE2031:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 322


 10172              	.LBE2106:
 10173              	.LBB2107:
 10174              	.LBB2105:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10175              		.loc 11 60 42 view .LVU2814
 10176 0418 1360     		str	r3, [r2]	@ float
 10177              	.LVL621:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10178              		.loc 11 60 42 view .LVU2815
 10179              	.LBE2105:
 10180              	.LBE2107:
 413:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10181              		.loc 20 413 9 is_stmt 1 view .LVU2816
 10182              	.LBB2108:
 10183              	.LBI2108:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10184              		.loc 11 60 17 view .LVU2817
 10185              	.LBB2109:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10186              		.loc 11 60 37 view .LVU2818
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10187              		.loc 11 60 42 is_stmt 0 view .LVU2819
 10188 041a 2F4A     		ldr	r2, .L649+148
 10189 041c 1360     		str	r3, [r2]	@ float
 10190              	.LVL622:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10191              		.loc 11 60 42 view .LVU2820
 10192              	.LBE2109:
 10193              	.LBE2108:
 414:Veno-Echo.cpp **** 
 10194              		.loc 20 414 9 is_stmt 1 view .LVU2821
 10195              	.LBB2110:
 10196              	.LBI2110:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10197              		.loc 11 60 17 view .LVU2822
 10198              	.LBB2111:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10199              		.loc 11 60 37 view .LVU2823
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10200              		.loc 11 60 42 is_stmt 0 view .LVU2824
 10201 041e 2F4A     		ldr	r2, .L649+152
 10202 0420 1360     		str	r3, [r2]	@ float
 10203              	.LVL623:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10204              		.loc 11 60 42 view .LVU2825
 10205              	.LBE2111:
 10206              	.LBE2110:
 417:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10207              		.loc 20 417 9 is_stmt 1 view .LVU2826
 10208              	.LBB2112:
 10209              	.LBI1980:
  79:Veno-Echo.cpp ****     {
 10210              		.loc 20 79 11 view .LVU2827
 10211              	.LBB2032:
  82:Veno-Echo.cpp ****         return read;
 10212              		.loc 20 82 9 view .LVU2828
 10213              	.LBB2014:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 323


 10214              	.LBI1982:
 159:delayline_reverse.h ****     {
 10215              		.loc 19 159 20 view .LVU2829
 10216              	.LBB1996:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10217              		.loc 19 174 46 is_stmt 0 view .LVU2830
 10218 0422 FFF7FEFF 		bl	sinf
 10219              	.LVL624:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10220              		.loc 19 174 46 view .LVU2831
 10221 0426 F0EE40BA 		vmov.f32	s23, s0
 10222              	.LVL625:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10223              		.loc 19 174 103 view .LVU2832
 10224 042a 2BEE290A 		vmul.f32	s0, s22, s19
 10225 042e FFF7FEFF 		bl	sinf
 10226              	.LVL626:
 10227 0432 B0EE408A 		vmov.f32	s16, s0
 10228              	.LVL627:
 10229              		.loc 19 175 46 view .LVU2833
 10230 0436 2CEE0A0A 		vmul.f32	s0, s24, s20
 10231 043a FFF7FEFF 		bl	sinf
 10232              	.LVL628:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10233              		.loc 19 174 98 view .LVU2834
 10234 043e 28EE098A 		vmul.f32	s16, s16, s18
 10235 0442 4FE0     		b	.L650
 10236              	.L651:
 10237              		.align	2
 10238              	.L649:
 10239 0444 00000000 		.word	.LANCHOR83
 10240 0448 00000000 		.word	.LANCHOR32
 10241 044c 00000000 		.word	.LANCHOR129
 10242 0450 00000000 		.word	.LANCHOR44
 10243 0454 CDCCCC3E 		.word	1053609165
 10244 0458 00000000 		.word	.LANCHOR130
 10245 045c 00000000 		.word	.LANCHOR72
 10246 0460 00000000 		.word	.LANCHOR0
 10247 0464 00000000 		.word	.LANCHOR1
 10248 0468 00000000 		.word	.LANCHOR65
 10249 046c 00000000 		.word	.LANCHOR56
 10250 0470 00000000 		.word	.LANCHOR114
 10251 0474 DB0FC93F 		.word	1070141403
 10252 0478 00000000 		.word	.LANCHOR94
 10253 047c 00000000 		.word	.LANCHOR103
 10254 0480 00000000 		.word	.LANCHOR95
 10255 0484 00000000 		.word	.LANCHOR104
 10256 0488 00000000 		.word	.LANCHOR97
 10257 048c 00000000 		.word	.LANCHOR106
 10258 0490 00000000 		.word	.LANCHOR96
 10259 0494 00000000 		.word	.LANCHOR105
 10260 0498 00000000 		.word	.LANCHOR107
 10261 049c 00000000 		.word	.LANCHOR2
 10262 04a0 00000000 		.word	.LANCHOR108
 10263 04a4 00000000 		.word	.LANCHOR117
 10264 04a8 00000000 		.word	.LANCHOR80
 10265 04ac 00000000 		.word	.LANCHOR118
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 324


 10266 04b0 00000000 		.word	.LANCHOR121
 10267 04b4 00000000 		.word	.LANCHOR122
 10268 04b8 00000000 		.word	.LANCHOR119
 10269 04bc E4CB9640 		.word	1083624420
 10270 04c0 00000000 		.word	.LANCHOR120
 10271 04c4 0000803D 		.word	1031798784
 10272 04c8 00000000 		.word	.LANCHOR123
 10273 04cc 00000000 		.word	.LANCHOR124
 10274 04d0 00000000 		.word	.LANCHOR125
 10275 04d4 00000000 		.word	.LANCHOR126
 10276 04d8 00000000 		.word	.LANCHOR127
 10277 04dc 00000000 		.word	.LANCHOR128
 10278 04e0 209F2400 		.word	2400032
 10279              	.L650:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10280              		.loc 19 174 82 view .LVU2835
 10281 04e4 ABEEA88A 		vfma.f32	s16, s23, s17
 10282              	.LVL629:
 10283              		.loc 19 175 46 view .LVU2836
 10284 04e8 F0EE40BA 		vmov.f32	s23, s0
 10285              		.loc 19 175 112 view .LVU2837
 10286 04ec 2CEE290A 		vmul.f32	s0, s24, s19
 10287 04f0 FFF7FEFF 		bl	sinf
 10288              	.LVL630:
 10289              		.loc 19 175 107 view .LVU2838
 10290 04f4 60EE097A 		vmul.f32	s15, s0, s18
 10291              	.LBE1996:
 10292              	.LBE2014:
 10293              	.LBE2032:
 10294              	.LBE2112:
 418:Veno-Echo.cpp **** 
 10295              		.loc 20 418 49 view .LVU2839
 10296 04f8 C94B     		ldr	r3, .L652
 10297              	.LBB2113:
 10298              	.LBB2033:
 10299              	.LBB2015:
 10300              	.LBB1997:
 10301              		.loc 19 175 91 view .LVU2840
 10302 04fa EBEEA87A 		vfma.f32	s15, s23, s17
 10303              	.LVL631:
 10304              		.loc 19 175 91 view .LVU2841
 10305              	.LBE1997:
 10306              	.LBE2015:
 10307              	.LBE2033:
 10308              	.LBE2113:
 418:Veno-Echo.cpp **** 
 10309              		.loc 20 418 49 view .LVU2842
 10310 04fe 1C68     		ldr	r4, [r3]
 10311              	.LBB2114:
 10312              	.LBB2034:
 10313              	.LBB2016:
 10314              	.LBB1998:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10315              		.loc 19 174 9 view .LVU2843
 10316 0500 38EE088A 		vadd.f32	s16, s16, s16
 10317              	.LVL632:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 325


 10318              		.loc 19 174 9 view .LVU2844
 10319              	.LBE1998:
 10320              	.LBE2016:
 10321              	.LBE2034:
 10322              	.LBE2114:
 10323              	.LBB2115:
 10324              	.LBB2116:
 10325              	.LBB2117:
 10326              	.LBB2118:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10327              		.loc 19 174 71 view .LVU2845
 10328 0504 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 10329              		.loc 19 162 11 view .LVU2846
 10330 0508 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10331              		.loc 19 174 71 view .LVU2847
 10332 050c 91ED00CA 		vldr.32	s24, [r1]
 10333              	.LBE2118:
 10334              	.LBE2117:
 10335              	.LBE2116:
 10336              	.LBE2115:
 10337              	.LBB2149:
 10338              	.LBB2035:
 10339              	.LBB2017:
 10340              	.LBB1999:
 10341              		.loc 19 175 9 view .LVU2848
 10342 0510 77EEA77A 		vadd.f32	s15, s15, s15
 10343              	.LVL633:
 10344              		.loc 19 175 9 view .LVU2849
 10345              	.LBE1999:
 10346              	.LBE2017:
 10347              	.LBE2035:
 10348              	.LBE2149:
 10349              	.LBB2150:
 10350              	.LBB2139:
 10351              	.LBB2129:
 10352              	.LBB2119:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10353              		.loc 19 161 11 view .LVU2850
 10354 0514 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10355              		.loc 19 162 11 view .LVU2851
 10356 0518 04EB8303 		add	r3, r4, r3, lsl #2
 10357              		.loc 19 175 77 view .LVU2852
 10358 051c 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10359              		.loc 19 174 46 view .LVU2853
 10360 0520 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10361              		.loc 19 161 11 view .LVU2854
 10362 0524 92ED06DA 		vldr.32	s26, [r2, #24]
 10363              	.LBE2119:
 10364              	.LBE2129:
 10365              	.LBE2139:
 10366              	.LBE2150:
 10367              	.LBB2151:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 326


 10368              	.LBB2036:
 10369              	.LBB2018:
 10370              	.LBB2000:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10371              		.loc 19 177 44 view .LVU2855
 10372 0528 67EE8E7A 		vmul.f32	s15, s15, s28
 10373              	.LVL634:
 10374              		.loc 19 177 44 view .LVU2856
 10375              	.LBE2000:
 10376              	.LBE2018:
 10377              	.LBE2036:
 10378              	.LBE2151:
 10379              	.LBB2152:
 10380              	.LBB2140:
 10381              	.LBB2130:
 10382              	.LBB2120:
 162:delayline_reverse.h **** 
 10383              		.loc 19 162 11 view .LVU2857
 10384 052c D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10385              		.loc 19 174 71 view .LVU2858
 10386 0530 0391     		str	r1, [sp, #12]
 10387              	.LBE2120:
 10388              	.LBE2130:
 10389              	.LBE2140:
 10390              	.LBE2152:
 10391              	.LBB2153:
 10392              	.LBB2037:
 10393              	.LBB2019:
 10394              	.LBB2001:
 10395              		.loc 19 177 54 view .LVU2859
 10396 0532 EDEE887A 		vfma.f32	s15, s27, s16
 10397              	.LVL635:
 10398              		.loc 19 177 54 view .LVU2860
 10399              	.LBE2001:
 10400              	.LBE2019:
  83:Veno-Echo.cpp ****     }
 10401              		.loc 20 83 9 is_stmt 1 view .LVU2861
  83:Veno-Echo.cpp ****     }
 10402              		.loc 20 83 9 is_stmt 0 view .LVU2862
 10403              	.LBE2037:
 10404              	.LBE2153:
 417:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10405              		.loc 20 417 50 view .LVU2863
 10406 0536 CDED067A 		vstr.32	s15, [sp, #24]
 418:Veno-Echo.cpp **** 
 10407              		.loc 20 418 9 is_stmt 1 view .LVU2864
 10408              	.LVL636:
 10409              	.LBB2154:
 10410              	.LBI2115:
  79:Veno-Echo.cpp ****     {
 10411              		.loc 20 79 11 view .LVU2865
 10412              	.LBB2141:
  82:Veno-Echo.cpp ****         return read;
 10413              		.loc 20 82 9 view .LVU2866
 10414              	.LBB2131:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 327


 10415              	.LBI2117:
 159:delayline_reverse.h ****     {
 10416              		.loc 19 159 20 view .LVU2867
 10417              	.LBB2121:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10418              		.loc 19 174 46 is_stmt 0 view .LVU2868
 10419 053a FFF7FEFF 		bl	sinf
 10420              	.LVL637:
 10421 053e F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10422              		.loc 19 174 103 view .LVU2869
 10423 0542 2CEE290A 		vmul.f32	s0, s24, s19
 10424 0546 FFF7FEFF 		bl	sinf
 10425              	.LVL638:
 10426 054a B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10427              		.loc 19 175 46 view .LVU2870
 10428 054e 2AEE8A0A 		vmul.f32	s0, s21, s20
 10429 0552 FFF7FEFF 		bl	sinf
 10430              	.LVL639:
 10431 0556 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10432              		.loc 19 175 112 view .LVU2871
 10433 055a 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10434              		.loc 19 174 98 view .LVU2872
 10435 055e 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10436              		.loc 19 175 46 view .LVU2873
 10437 0562 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 10438              		.loc 19 175 112 view .LVU2874
 10439 0566 FFF7FEFF 		bl	sinf
 10440              	.LVL640:
 10441              	.LBE2121:
 10442              	.LBE2131:
 10443              	.LBE2141:
 10444              	.LBE2154:
 10445              	.LBB2155:
 10446              	.LBB2156:
 10447              	.LBB2157:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10448              		.loc 19 98 38 view .LVU2875
 10449 056a AE48     		ldr	r0, .L652+4
 10450              	.LBE2157:
 10451              	.LBE2156:
 10452              	.LBE2155:
 10453              	.LBB2180:
 10454              	.LBB2142:
 10455              	.LBB2132:
 10456              	.LBB2122:
 175:delayline_reverse.h **** 
 10457              		.loc 19 175 107 view .LVU2876
 10458 056c 60EE097A 		vmul.f32	s15, s0, s18
 10459              	.LBE2122:
 10460              	.LBE2132:
 10461              	.LBE2142:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 328


 10462              	.LBE2180:
 10463              	.LBB2181:
 10464              	.LBB2169:
 10465              	.LBB2158:
  92:delayline_reverse.h ****         
 10466              		.loc 19 92 57 view .LVU2877
 10467 0570 AD4B     		ldr	r3, .L652+8
 10468              	.LBE2158:
 10469              	.LBE2169:
 10470              	.LBE2181:
 10471              	.LBB2182:
 10472              	.LBB2143:
 10473              	.LBB2133:
 10474              	.LBB2123:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10475              		.loc 19 174 82 view .LVU2878
 10476 0572 ABEEA88A 		vfma.f32	s16, s23, s17
 10477              	.LVL641:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10478              		.loc 19 174 82 view .LVU2879
 10479              	.LBE2123:
 10480              	.LBE2133:
 10481              	.LBE2143:
 10482              	.LBE2182:
 10483              	.LBB2183:
 10484              	.LBB2170:
 10485              	.LBB2159:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10486              		.loc 19 98 38 view .LVU2880
 10487 0576 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10488              		.loc 19 90 15 view .LVU2881
 10489 0578 D5F804E0 		ldr	lr, [r5, #4]
 10490              	.LBE2159:
 10491              	.LBE2170:
 10492              	.LBE2183:
 10493              	.LBB2184:
 10494              	.LBB2144:
 10495              	.LBB2134:
 10496              	.LBB2124:
 175:delayline_reverse.h **** 
 10497              		.loc 19 175 91 view .LVU2882
 10498 057c E9EEA87A 		vfma.f32	s15, s19, s17
 10499              	.LVL642:
 175:delayline_reverse.h **** 
 10500              		.loc 19 175 91 view .LVU2883
 10501              	.LBE2124:
 10502              	.LBE2134:
 10503              	.LBE2144:
 10504              	.LBE2184:
 10505              	.LBB2185:
 10506              	.LBB2171:
 10507              	.LBB2160:
  99:delayline_reverse.h ****  
 10508              		.loc 19 99 38 view .LVU2884
 10509 0580 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 329


 10510              		.loc 19 98 50 view .LVU2885
 10511 0582 A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 10512              		.loc 19 92 57 view .LVU2886
 10513 0586 DFF8C4C2 		ldr	ip, .L652+44
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10514              		.loc 19 90 9 view .LVU2887
 10515 058a 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10516              		.loc 19 98 50 view .LVU2888
 10517 058e 890C     		lsrs	r1, r1, #18
 10518              	.LBE2160:
 10519              	.LBE2171:
 10520              	.LBE2185:
 10521              	.LBB2186:
 10522              	.LBB2145:
 10523              	.LBB2135:
 10524              	.LBB2125:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10525              		.loc 19 174 9 view .LVU2889
 10526 0590 38EE088A 		vadd.f32	s16, s16, s16
 10527              	.LVL643:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10528              		.loc 19 174 9 view .LVU2890
 10529              	.LBE2125:
 10530              	.LBE2135:
 10531              	.LBE2145:
 10532              	.LBE2186:
 10533              	.LBB2187:
 10534              	.LBB2172:
 10535              	.LBB2161:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10536              		.loc 19 98 50 view .LVU2891
 10537 0594 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 10538              		.loc 19 92 45 view .LVU2892
 10539 0598 A44E     		ldr	r6, .L652+12
 10540              	.LBE2161:
 10541              	.LBE2172:
 10542              	.LBE2187:
 10543              	.LBB2188:
 10544              	.LBB2146:
 10545              	.LBB2136:
 10546              	.LBB2126:
 175:delayline_reverse.h **** 
 10547              		.loc 19 175 9 view .LVU2893
 10548 059a 37EEA70A 		vadd.f32	s0, s15, s15
 10549              	.LVL644:
 175:delayline_reverse.h **** 
 10550              		.loc 19 175 9 view .LVU2894
 10551              	.LBE2126:
 10552              	.LBE2136:
 10553              	.LBE2146:
 10554              	.LBE2188:
 421:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10555              		.loc 20 421 26 view .LVU2895
 10556 059e DBED007A 		vldr.32	s15, [fp]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 330


 10557              	.LBB2189:
 10558              	.LBB2173:
 10559              	.LBB2162:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10560              		.loc 19 98 50 view .LVU2896
 10561 05a2 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10562              		.loc 19 92 45 view .LVU2897
 10563 05a4 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 10564              		.loc 19 99 50 view .LVU2898
 10565 05a6 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 10566              		.loc 19 92 57 view .LVU2899
 10567 05aa A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10568              		.loc 19 98 9 view .LVU2900
 10569 05ae 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 10570              		.loc 19 99 50 view .LVU2901
 10571 05b0 4FEA9E4E 		lsr	lr, lr, #18
 10572              	.LBE2162:
 10573              	.LBE2173:
 10574              	.LBE2189:
 10575              	.LBB2190:
 10576              	.LBB2147:
 10577              	.LBB2137:
 10578              	.LBB2127:
 10579              		.loc 19 177 44 view .LVU2902
 10580 05b4 20EE0D0A 		vmul.f32	s0, s0, s26
 10581              	.LVL645:
 10582              		.loc 19 177 44 view .LVU2903
 10583              	.LBE2127:
 10584              	.LBE2137:
 10585              	.LBE2147:
 10586              	.LBE2190:
 10587              	.LBB2191:
 10588              	.LBB2174:
 10589              	.LBB2163:
  92:delayline_reverse.h ****         
 10590              		.loc 19 92 57 view .LVU2904
 10591 05b8 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 10592              		.loc 19 99 50 view .LVU2905
 10593 05ba 0CFB1E00 		mls	r0, ip, lr, r0
 10594              	.LBE2163:
 10595              	.LBE2174:
 10596              	.LBE2191:
 10597              	.LBB2192:
 10598              	.LBB2148:
 10599              	.LBB2138:
 10600              	.LBB2128:
 10601              		.loc 19 177 54 view .LVU2906
 10602 05be ACEE880A 		vfma.f32	s0, s25, s16
 10603              	.LVL646:
 10604              		.loc 19 177 54 view .LVU2907
 10605              	.LBE2128:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 331


 10606              	.LBE2138:
  83:Veno-Echo.cpp ****     }
 10607              		.loc 20 83 9 is_stmt 1 view .LVU2908
  83:Veno-Echo.cpp ****     }
 10608              		.loc 20 83 9 is_stmt 0 view .LVU2909
 10609              	.LBE2148:
 10610              	.LBE2192:
 10611              	.LBB2193:
 10612              	.LBB2175:
 10613              	.LBB2164:
  92:delayline_reverse.h ****         
 10614              		.loc 19 92 57 view .LVU2910
 10615 05c2 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 10616              		.loc 19 95 43 view .LVU2911
 10617 05c6 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10618              		.loc 19 90 9 view .LVU2912
 10619 05ca CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 10620              		.loc 19 95 43 view .LVU2913
 10621 05ce 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 10622              		.loc 19 101 36 view .LVU2914
 10623 05d0 DFF864A2 		ldr	r10, .L652+24
  95:delayline_reverse.h **** 
 10624              		.loc 19 95 43 view .LVU2915
 10625 05d4 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 10626              		.loc 19 101 36 view .LVU2916
 10627 05d6 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 10628              		.loc 19 101 45 view .LVU2917
 10629 05da 07F1FF3A 		add	r10, r7, #-1
 10630              	.LBE2164:
 10631              	.LBE2175:
 10632              	.LBE2193:
 418:Veno-Echo.cpp **** 
 10633              		.loc 20 418 50 view .LVU2918
 10634 05de 8DED070A 		vstr.32	s0, [sp, #28]
 421:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10635              		.loc 20 421 9 is_stmt 1 view .LVU2919
 10636              	.LVL647:
 10637              	.LBB2194:
 10638              	.LBI2155:
  92:Veno-Echo.cpp ****     {
 10639              		.loc 20 92 10 view .LVU2920
  92:Veno-Echo.cpp ****     {
 10640              		.loc 20 92 10 is_stmt 0 view .LVU2921
 10641              	.LBE2194:
 10642              	.LBE2244:
 10643              	.LBE1858:
  94:Veno-Echo.cpp ****     }
 10644              		.loc 20 94 9 is_stmt 1 view .LVU2922
 10645              	.LBB2256:
 10646              	.LBB2245:
 10647              	.LBB2195:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 332


 10648              	.LBB2176:
 10649              	.LBI2156:
  88:delayline_reverse.h ****     {
 10650              		.loc 19 88 17 view .LVU2923
 10651              	.LBB2165:
  99:delayline_reverse.h ****  
 10652              		.loc 19 99 9 is_stmt 0 view .LVU2924
 10653 05e2 C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 10654              		.loc 19 95 54 view .LVU2925
 10655 05e6 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 10656              		.loc 19 101 45 view .LVU2926
 10657 05ea AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 10658              		.loc 19 95 54 view .LVU2927
 10659 05ee 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 10660              		.loc 19 92 9 view .LVU2928
 10661 05f2 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 10662              		.loc 19 101 9 view .LVU2929
 10663 05f4 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 10664              		.loc 19 95 9 view .LVU2930
 10665 05f6 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 10666              		.loc 19 101 9 view .LVU2931
 10667 05f8 40F2DA80 		bls	.L525
 103:delayline_reverse.h ****             {
 10668              		.loc 19 103 17 view .LVU2932
 10669 05fc 8C49     		ldr	r1, .L652+16
 103:delayline_reverse.h ****             {
 10670              		.loc 19 103 13 view .LVU2933
 10671 05fe 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10672              		.loc 19 103 17 view .LVU2934
 10673 0600 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 10674              		.loc 19 103 13 view .LVU2935
 10675 0602 0028     		cmp	r0, #0
 10676 0604 40F0DA80 		bne	.L640
 107:delayline_reverse.h ****                 {
 10677              		.loc 19 107 21 view .LVU2936
 10678 0608 8A48     		ldr	r0, .L652+20
 105:delayline_reverse.h ****                 
 10679              		.loc 19 105 17 view .LVU2937
 10680 060a 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10681              		.loc 19 110 45 view .LVU2938
 10682 060c 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 10683              		.loc 19 107 17 view .LVU2939
 10684 060e 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10685              		.loc 19 107 21 view .LVU2940
 10686 0610 2844     		add	r0, r0, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 333


 105:delayline_reverse.h ****                 
 10687              		.loc 19 105 17 view .LVU2941
 10688 0612 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 10689              		.loc 19 107 17 view .LVU2942
 10690 0614 002E     		cmp	r6, #0
 10691 0616 40F07782 		bne	.L527
 110:delayline_reverse.h ****                 }
 10692              		.loc 19 110 21 view .LVU2943
 10693 061a EB60     		str	r3, [r5, #12]
 10694              	.L528:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10695              		.loc 19 130 45 view .LVU2944
 10696 061c 07EE90EA 		vmov	s15, lr	@ int
 10697              	.LVL648:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10698              		.loc 19 130 45 view .LVU2945
 10699 0620 B7EE007A 		vmov.f32	s14, #1.0e+0
 10700 0624 F8EE676A 		vcvt.f32.u32	s13, s15
 10701 0628 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10702              		.loc 19 130 37 view .LVU2946
 10703 062c 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10704              		.loc 19 131 17 view .LVU2947
 10705 0630 B4EEC7BA 		vcmpe.f32	s22, s14
 10706 0634 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10707 0638 40F3D780 		ble	.L641
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10708              		.loc 19 133 21 view .LVU2948
 10709 063c 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10710              		.loc 19 134 21 view .LVU2949
 10711 063e 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10712              		.loc 19 133 21 view .LVU2950
 10713 0640 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 10714              		.loc 19 135 21 view .LVU2951
 10715 0644 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10716              		.loc 19 134 21 view .LVU2952
 10717 0646 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 10718              		.loc 19 135 21 view .LVU2953
 10719 0648 0370     		strb	r3, [r0]
 10720              	.LVL649:
 10721              	.L531:
 135:delayline_reverse.h ****                 }
 10722              		.loc 19 135 21 view .LVU2954
 10723              	.LBE2165:
 10724              	.LBE2176:
 10725              	.LBE2195:
 422:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10726              		.loc 20 422 9 is_stmt 1 view .LVU2955
 10727              	.LBB2196:
 10728              	.LBB2197:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 334


 10729              	.LBB2198:
  95:delayline_reverse.h **** 
 10730              		.loc 19 95 45 is_stmt 0 view .LVU2956
 10731 064a 2169     		ldr	r1, [r4, #16]
 10732 064c 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10733              		.loc 19 95 43 view .LVU2957
 10734 0650 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10735              		.loc 19 90 15 view .LVU2958
 10736 0652 6568     		ldr	r5, [r4, #4]
 10737 0654 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10738              		.loc 19 95 43 view .LVU2959
 10739 0658 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10740              		.loc 19 92 45 view .LVU2960
 10741 065a 744F     		ldr	r7, .L652+12
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10742              		.loc 19 90 9 view .LVU2961
 10743 065c 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10744              		.loc 19 98 38 view .LVU2962
 10745 0660 704B     		ldr	r3, .L652+4
  95:delayline_reverse.h **** 
 10746              		.loc 19 95 43 view .LVU2963
 10747 0662 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10748              		.loc 19 92 45 view .LVU2964
 10749 0664 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 10750              		.loc 19 101 45 view .LVU2965
 10751 0666 01F1FF3C 		add	ip, r1, #-1
 10752              	.LBE2198:
 10753              	.LBE2197:
 10754              	.LBE2196:
 422:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10755              		.loc 20 422 26 view .LVU2966
 10756 066a DBED017A 		vldr.32	s15, [fp, #4]
 10757              	.LVL650:
 10758              	.LBB2209:
 10759              	.LBI2196:
  92:Veno-Echo.cpp ****     {
 10760              		.loc 20 92 10 is_stmt 1 view .LVU2967
  92:Veno-Echo.cpp ****     {
 10761              		.loc 20 92 10 is_stmt 0 view .LVU2968
 10762              	.LBE2209:
 10763              	.LBE2245:
 10764              	.LBE2256:
  94:Veno-Echo.cpp ****     }
 10765              		.loc 20 94 9 is_stmt 1 view .LVU2969
 10766              	.LBB2257:
 10767              	.LBB2246:
 10768              	.LBB2210:
 10769              	.LBB2204:
 10770              	.LBI2197:
  88:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 335


 10771              		.loc 19 88 17 view .LVU2970
 10772              	.LBB2199:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10773              		.loc 19 98 38 is_stmt 0 view .LVU2971
 10774 066e D4E90205 		ldrd	r0, r5, [r4, #8]
 10775 0672 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10776              		.loc 19 99 38 view .LVU2972
 10777 0676 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10778              		.loc 19 92 57 view .LVU2973
 10779 0678 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10780              		.loc 19 95 54 view .LVU2974
 10781 067c B2FBF1F0 		udiv	r0, r2, r1
 10782 0680 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 10783              		.loc 19 101 36 view .LVU2975
 10784 0684 6C49     		ldr	r1, .L652+24
  92:delayline_reverse.h ****         
 10785              		.loc 19 92 57 view .LVU2976
 10786 0686 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 10787              		.loc 19 101 36 view .LVU2977
 10788 068a 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10789              		.loc 19 92 57 view .LVU2978
 10790 068c A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10791              		.loc 19 90 9 view .LVU2979
 10792 0690 CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 10793              		.loc 19 101 36 view .LVU2980
 10794 0694 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10795              		.loc 19 92 57 view .LVU2981
 10796 0696 A3FB0762 		umull	r6, r2, r3, r7
 10797 069a DFF8B0E1 		ldr	lr, .L652+44
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10798              		.loc 19 98 50 view .LVU2982
 10799 069e A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10800              		.loc 19 99 50 view .LVU2983
 10801 06a2 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10802              		.loc 19 101 45 view .LVU2984
 10803 06a6 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10804              		.loc 19 92 57 view .LVU2985
 10805 06a8 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10806              		.loc 19 95 9 view .LVU2986
 10807 06aa 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10808              		.loc 19 98 50 view .LVU2987
 10809 06ac 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 336


 10810              		.loc 19 101 45 view .LVU2988
 10811 06ae ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10812              		.loc 19 99 50 view .LVU2989
 10813 06b2 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10814              		.loc 19 92 57 view .LVU2990
 10815 06b4 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10816              		.loc 19 98 50 view .LVU2991
 10817 06b8 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10818              		.loc 19 101 9 view .LVU2992
 10819 06bc 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10820              		.loc 19 99 50 view .LVU2993
 10821 06be 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10822              		.loc 19 98 9 view .LVU2994
 10823 06c2 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10824              		.loc 19 99 9 view .LVU2995
 10825 06c6 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10826              		.loc 19 101 9 view .LVU2996
 10827 06c8 51D9     		bls	.L535
 103:delayline_reverse.h ****             {
 10828              		.loc 19 103 17 view .LVU2997
 10829 06ca 5949     		ldr	r1, .L652+16
 103:delayline_reverse.h ****             {
 10830              		.loc 19 103 13 view .LVU2998
 10831 06cc 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10832              		.loc 19 103 17 view .LVU2999
 10833 06ce 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10834              		.loc 19 103 13 view .LVU3000
 10835 06d0 0028     		cmp	r0, #0
 10836 06d2 51D1     		bne	.L642
 107:delayline_reverse.h ****                 {
 10837              		.loc 19 107 21 view .LVU3001
 10838 06d4 5748     		ldr	r0, .L652+20
 105:delayline_reverse.h ****                 
 10839              		.loc 19 105 17 view .LVU3002
 10840 06d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10841              		.loc 19 110 45 view .LVU3003
 10842 06d8 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10843              		.loc 19 107 17 view .LVU3004
 10844 06da 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10845              		.loc 19 107 21 view .LVU3005
 10846 06dc 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10847              		.loc 19 105 17 view .LVU3006
 10848 06de 6754     		strb	r7, [r4, r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 337


 107:delayline_reverse.h ****                 {
 10849              		.loc 19 107 17 view .LVU3007
 10850 06e0 002D     		cmp	r5, #0
 10851 06e2 40F01382 		bne	.L537
 110:delayline_reverse.h ****                 }
 10852              		.loc 19 110 21 view .LVU3008
 10853 06e6 E260     		str	r2, [r4, #12]
 10854              	.L538:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10855              		.loc 19 130 45 view .LVU3009
 10856 06e8 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10857              	.LVL651:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10858              		.loc 19 130 45 view .LVU3010
 10859 06ec B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10860              		.loc 19 130 37 view .LVU3011
 10861 06f0 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10862              		.loc 19 130 45 view .LVU3012
 10863 06f2 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10864              		.loc 19 130 37 view .LVU3013
 10865 06f6 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10866              		.loc 19 130 45 view .LVU3014
 10867 06fa C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10868              		.loc 19 130 37 view .LVU3015
 10869 06fe 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10870              		.loc 19 131 17 view .LVU3016
 10871 0702 F4EEC77A 		vcmpe.f32	s15, s14
 10872 0706 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10873 070a 40F31282 		ble	.L645
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10874              		.loc 19 133 21 view .LVU3017
 10875 070e 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10876              		.loc 19 134 21 view .LVU3018
 10877 0710 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10878              		.loc 19 133 21 view .LVU3019
 10879 0712 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10880              		.loc 19 135 21 view .LVU3020
 10881 0716 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10882              		.loc 19 134 21 view .LVU3021
 10883 0718 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10884              		.loc 19 135 21 view .LVU3022
 10885 071a 0270     		strb	r2, [r0]
 10886              	.LVL652:
 10887              	.L541:
 135:delayline_reverse.h ****                 }
 10888              		.loc 19 135 21 view .LVU3023
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 338


 10889              	.LBE2199:
 10890              	.LBE2204:
 10891              	.LBE2210:
 427:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10892              		.loc 20 427 9 is_stmt 1 view .LVU3024
 427:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10893              		.loc 20 427 56 is_stmt 0 view .LVU3025
 10894 071c 06AA     		add	r2, sp, #24
 10895 071e 5946     		mov	r1, fp
 10896 0720 4648     		ldr	r0, .L652+28
 10897 0722 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10898              	.LVL653:
 428:Veno-Echo.cpp **** 
 10899              		.loc 20 428 56 view .LVU3026
 10900 0726 18EE101A 		vmov	r1, s16	@ int
 10901 072a 07AA     		add	r2, sp, #28
 10902 072c 4448     		ldr	r0, .L652+32
 427:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10903              		.loc 20 427 56 view .LVU3027
 10904 072e F0EE408A 		vmov.f32	s17, s0
 10905              	.LVL654:
 428:Veno-Echo.cpp **** 
 10906              		.loc 20 428 9 is_stmt 1 view .LVU3028
 428:Veno-Echo.cpp **** 
 10907              		.loc 20 428 56 is_stmt 0 view .LVU3029
 10908 0732 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10909              	.LVL655:
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10910              		.loc 20 431 46 view .LVU3030
 10911 0736 4348     		ldr	r0, .L652+36
 428:Veno-Echo.cpp **** 
 10912              		.loc 20 428 56 view .LVU3031
 10913 0738 B0EE408A 		vmov.f32	s16, s0
 10914              	.LVL656:
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10915              		.loc 20 431 9 is_stmt 1 view .LVU3032
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10916              		.loc 20 431 46 is_stmt 0 view .LVU3033
 10917 073c FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10918              	.LVL657:
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10919              		.loc 20 431 46 view .LVU3034
 10920 0740 0346     		mov	r3, r0
 432:Veno-Echo.cpp **** 
 10921              		.loc 20 432 46 view .LVU3035
 10922 0742 4148     		ldr	r0, .L652+40
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10923              		.loc 20 431 45 view .LVU3036
 10924 0744 1B68     		ldr	r3, [r3]	@ float
 431:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10925              		.loc 20 431 47 view .LVU3037
 10926 0746 0893     		str	r3, [sp, #32]	@ float
 432:Veno-Echo.cpp **** 
 10927              		.loc 20 432 9 is_stmt 1 view .LVU3038
 432:Veno-Echo.cpp **** 
 10928              		.loc 20 432 46 is_stmt 0 view .LVU3039
 10929 0748 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 339


 10930              	.LVL658:
 432:Veno-Echo.cpp **** 
 10931              		.loc 20 432 45 view .LVU3040
 10932 074c 0368     		ldr	r3, [r0]	@ float
 432:Veno-Echo.cpp **** 
 10933              		.loc 20 432 47 view .LVU3041
 10934 074e 0993     		str	r3, [sp, #36]	@ float
 435:Veno-Echo.cpp **** 
 10935              		.loc 20 435 9 is_stmt 1 view .LVU3042
 435:Veno-Echo.cpp **** 
 10936              		.loc 20 435 28 is_stmt 0 view .LVU3043
 10937 0750 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10938              	.LVL659:
 438:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10939              		.loc 20 438 9 is_stmt 1 view .LVU3044
 10940              	.LBB2211:
 10941              	.LBB1862:
2003:Veno-Echo.cpp ****         returnval = limit;
 10942              		.loc 20 2003 5 is_stmt 0 view .LVU3045
 10943 0754 B0EE007A 		vmov.f32	s14, #2.0e+0
 10944              	.LBE1862:
 10945              	.LBE2211:
 438:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10946              		.loc 20 438 34 view .LVU3046
 10947 0758 DDED087A 		vldr.32	s15, [sp, #32]
 10948              	.LVL660:
 10949              	.LBB2212:
 10950              	.LBI1860:
2000:Veno-Echo.cpp **** {
 10951              		.loc 20 2000 7 is_stmt 1 view .LVU3047
 10952              	.LBB1863:
2002:Veno-Echo.cpp ****     if (input > limit)
 10953              		.loc 20 2002 5 view .LVU3048
2003:Veno-Echo.cpp ****         returnval = limit;
 10954              		.loc 20 2003 5 view .LVU3049
 10955 075c F4EEC77A 		vcmpe.f32	s15, s14
 10956 0760 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10957 0764 7FF79CAC 		ble	.L646
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10958              		.loc 20 2004 19 is_stmt 0 view .LVU3050
 10959 0768 F0EE477A 		vmov.f32	s15, s14
 10960              	.LVL661:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10961              		.loc 20 2004 19 view .LVU3051
 10962 076c A1E4     		b	.L545
 10963              	.LVL662:
 10964              	.L535:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10965              		.loc 20 2004 19 view .LVU3052
 10966              	.LBE1863:
 10967              	.LBE2212:
 10968              	.LBB2213:
 10969              	.LBB2205:
 10970              	.LBB2200:
 126:delayline_reverse.h ****         {
 10971              		.loc 19 126 12 view .LVU3053
 10972 076e 304B     		ldr	r3, .L652+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 340


 126:delayline_reverse.h ****         {
 10973              		.loc 19 126 9 view .LVU3054
 10974 0770 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10975              		.loc 19 126 12 view .LVU3055
 10976 0772 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10977              		.loc 19 126 9 view .LVU3056
 10978 0774 002A     		cmp	r2, #0
 10979 0776 D1D0     		beq	.L541
 10980              	.L642:
 126:delayline_reverse.h ****         {
 10981              		.loc 19 126 9 view .LVU3057
 10982 0778 2E4A     		ldr	r2, .L652+20
 10983 077a A018     		adds	r0, r4, r2
 10984 077c A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10985              		.loc 19 128 13 view .LVU3058
 10986 077e 002A     		cmp	r2, #0
 10987 0780 B2D0     		beq	.L538
 10988              	.L539:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10989              		.loc 19 141 45 view .LVU3059
 10990 0782 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10991              	.LVL663:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10992              		.loc 19 141 45 view .LVU3060
 10993 0786 B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10994              		.loc 19 141 37 view .LVU3061
 10995 078a 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10996              		.loc 19 142 17 view .LVU3062
 10997 078c 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10998              		.loc 19 141 45 view .LVU3063
 10999 078e F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11000              		.loc 19 141 37 view .LVU3064
 11001 0792 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11002              		.loc 19 141 45 view .LVU3065
 11003 0796 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11004              		.loc 19 141 37 view .LVU3066
 11005 079a 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 11006              		.loc 19 142 17 view .LVU3067
 11007 079e F5EEC07A 		vcmpe.f32	s15, #0
 11008 07a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11009 07a6 00F1B881 		bmi	.L544
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11010              		.loc 19 141 17 view .LVU3068
 11011 07aa C1ED007A 		vstr.32	s15, [r1]
 11012 07ae B5E7     		b	.L541
 11013              	.LVL664:
 11014              	.L525:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 341


 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11015              		.loc 19 141 17 view .LVU3069
 11016              	.LBE2200:
 11017              	.LBE2205:
 11018              	.LBE2213:
 11019              	.LBB2214:
 11020              	.LBB2177:
 11021              	.LBB2166:
 126:delayline_reverse.h ****         {
 11022              		.loc 19 126 12 view .LVU3070
 11023 07b0 1F4A     		ldr	r2, .L652+16
 126:delayline_reverse.h ****         {
 11024              		.loc 19 126 9 view .LVU3071
 11025 07b2 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11026              		.loc 19 126 12 view .LVU3072
 11027 07b4 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 11028              		.loc 19 126 9 view .LVU3073
 11029 07b6 002B     		cmp	r3, #0
 11030 07b8 3FF447AF 		beq	.L531
 11031              	.L640:
 126:delayline_reverse.h ****         {
 11032              		.loc 19 126 9 view .LVU3074
 11033 07bc 1D4B     		ldr	r3, .L652+20
 11034 07be E818     		adds	r0, r5, r3
 11035 07c0 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11036              		.loc 19 128 13 view .LVU3075
 11037 07c2 002B     		cmp	r3, #0
 11038 07c4 3FF42AAF 		beq	.L528
 11039              	.L529:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11040              		.loc 19 141 45 view .LVU3076
 11041 07c8 07EE90EA 		vmov	s15, lr	@ int
 11042              	.LVL665:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11043              		.loc 19 141 45 view .LVU3077
 11044 07cc F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 11045              		.loc 19 142 17 view .LVU3078
 11046 07d0 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11047              		.loc 19 141 45 view .LVU3079
 11048 07d2 B8EE677A 		vcvt.f32.u32	s14, s15
 11049 07d6 C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11050              		.loc 19 141 37 view .LVU3080
 11051 07da 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11052              		.loc 19 142 17 view .LVU3081
 11053 07de B5EEC0BA 		vcmpe.f32	s22, #0
 11054 07e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11055 07e6 00F19E81 		bmi	.L534
 11056              	.L641:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11057              		.loc 19 141 17 view .LVU3082
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 342


 11058 07ea 049B     		ldr	r3, [sp, #16]
 11059 07ec 83ED00BA 		vstr.32	s22, [r3]
 11060 07f0 2BE7     		b	.L531
 11061              	.LVL666:
 11062              	.L576:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11063              		.loc 19 141 17 view .LVU3083
 11064              	.LBE2166:
 11065              	.LBE2177:
 11066              	.LBE2214:
 604:Veno-Echo.cpp ****             out[i+1] = mixR;
 11067              		.loc 20 604 13 is_stmt 1 view .LVU3084
 604:Veno-Echo.cpp ****             out[i+1] = mixR;
 11068              		.loc 20 604 20 is_stmt 0 view .LVU3085
 11069 07f2 009B     		ldr	r3, [sp]
 11070 07f4 C3ED007A 		vstr.32	s15, [r3]
 605:Veno-Echo.cpp ****         }
 11071              		.loc 20 605 13 is_stmt 1 view .LVU3086
 605:Veno-Echo.cpp ****         }
 11072              		.loc 20 605 22 is_stmt 0 view .LVU3087
 11073 07f8 83ED010A 		vstr.32	s0, [r3, #4]
 11074 07fc 91E5     		b	.L577
 11075              	.LVL667:
 11076              	.L637:
 585:Veno-Echo.cpp ****         {
 11077              		.loc 20 585 14 is_stmt 1 view .LVU3088
 11078 07fe 40F36A81 		ble	.L638
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11079              		.loc 20 587 13 view .LVU3089
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11080              		.loc 20 587 24 is_stmt 0 view .LVU3090
 11081 0802 F7EE006A 		vmov.f32	s13, #1.0e+0
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11082              		.loc 20 587 18 view .LVU3091
 11083 0806 DBED005A 		vldr.32	s11, [fp]
 588:Veno-Echo.cpp ****         }
 11084              		.loc 20 588 18 view .LVU3092
 11085 080a 9BED016A 		vldr.32	s12, [fp, #4]
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11086              		.loc 20 587 24 view .LVU3093
 11087 080e 36EEC77A 		vsub.f32	s14, s13, s14
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11088              		.loc 20 587 33 view .LVU3094
 11089 0812 37EE077A 		vadd.f32	s14, s14, s14
 587:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11090              		.loc 20 587 18 view .LVU3095
 11091 0816 E7EE257A 		vfma.f32	s15, s14, s11
 11092              	.LVL668:
 588:Veno-Echo.cpp ****         }
 11093              		.loc 20 588 13 is_stmt 1 view .LVU3096
 588:Veno-Echo.cpp ****         }
 11094              		.loc 20 588 18 is_stmt 0 view .LVU3097
 11095 081a A7EE060A 		vfma.f32	s0, s14, s12
 11096              	.LVL669:
 588:Veno-Echo.cpp ****         }
 11097              		.loc 20 588 18 view .LVU3098
 11098 081e 77E5     		b	.L573
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 343


 11099              	.L653:
 11100              		.align	2
 11101              	.L652:
 11102 0820 00000000 		.word	.LANCHOR3
 11103 0824 BF270900 		.word	599999
 11104 0828 851DD96F 		.word	1876499845
 11105 082c C1270900 		.word	600001
 11106 0830 249F2400 		.word	2400036
 11107 0834 1C9F2400 		.word	2400028
 11108 0838 189F2400 		.word	2400024
 11109 083c 00000000 		.word	.LANCHOR107
 11110 0840 00000000 		.word	.LANCHOR108
 11111 0844 00000000 		.word	.LANCHOR0
 11112 0848 00000000 		.word	.LANCHOR1
 11113 084c C0270900 		.word	600000
 11114              	.LVL670:
 11115              	.L592:
 11116              	.LBB2215:
 539:Veno-Echo.cpp **** {
 11117              		.loc 20 539 1 view .LVU3099
 11118 0850 D44B     		ldr	r3, .L654
 11119              	.LBE2215:
 11120              	.LBB2216:
 11121              	.LBB1953:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11122              		.loc 20 2004 19 view .LVU3100
 11123 0852 B0EE470A 		vmov.f32	s0, s14
 11124              	.LVL671:
2010:Veno-Echo.cpp **** }
 11125              		.loc 20 2010 5 is_stmt 1 view .LVU3101
2010:Veno-Echo.cpp **** }
 11126              		.loc 20 2010 5 is_stmt 0 view .LVU3102
 11127              	.LBE1953:
 11128              	.LBE2216:
 11129              	.LBB2217:
 539:Veno-Echo.cpp **** {
 11130              		.loc 20 539 1 view .LVU3103
 11131 0856 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11132              	.LBE2217:
 537:Veno-Echo.cpp **** 
 11133              		.loc 20 537 27 view .LVU3104
 11134 0858 8DED0D0A 		vstr.32	s0, [sp, #52]
 539:Veno-Echo.cpp **** {
 11135              		.loc 20 539 1 is_stmt 1 view .LVU3105
 11136              	.LBB2218:
 11137 085c 002B     		cmp	r3, #0
 11138 085e 3FF43EAD 		beq	.L567
 11139              	.L644:
 11140              	.LBB1956:
 545:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11141              		.loc 20 545 9 view .LVU3106
 545:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11142              		.loc 20 545 27 is_stmt 0 view .LVU3107
 11143 0862 9FEDD18A 		vldr.32	s16, .L654+4
 11144              	.LVL672:
 545:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11145              		.loc 20 545 27 view .LVU3108
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 344


 11146 0866 D14D     		ldr	r5, .L654+8
 11147 0868 27EE880A 		vmul.f32	s0, s15, s16
 546:Veno-Echo.cpp **** 
 11148              		.loc 20 546 27 view .LVU3109
 11149 086c D04C     		ldr	r4, .L654+12
 545:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11150              		.loc 20 545 27 view .LVU3110
 11151 086e 2846     		mov	r0, r5
 11152 0870 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11153              	.LVL673:
 546:Veno-Echo.cpp **** 
 11154              		.loc 20 546 9 is_stmt 1 view .LVU3111
 546:Veno-Echo.cpp **** 
 11155              		.loc 20 546 27 is_stmt 0 view .LVU3112
 11156 0874 9DED0D0A 		vldr.32	s0, [sp, #52]
 11157 0878 2046     		mov	r0, r4
 11158 087a 20EE080A 		vmul.f32	s0, s0, s16
 11159 087e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11160              	.LVL674:
 549:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11161              		.loc 20 549 9 is_stmt 1 view .LVU3113
 549:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11162              		.loc 20 549 9 is_stmt 0 view .LVU3114
 11163              	.LBE1956:
 11164              	.LBE2218:
 11165              	.LBE2246:
 11166              	.LBE2257:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 345


 11167              		.loc 10 52 26 is_stmt 1 view .LVU3115
 11168              	.LBB2258:
 11169              	.LBB2247:
 11170              	.LBB2219:
 11171              	.LBB1971:
 549:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11172              		.loc 20 549 50 is_stmt 0 view .LVU3116
 11173 0882 F2EE046A 		vmov.f32	s13, #1.0e+1
 11174 0886 95ED0C7A 		vldr.32	s14, [r5, #48]
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11175              		.loc 20 553 59 view .LVU3117
 11176 088a 0CA9     		add	r1, sp, #48
 550:Veno-Echo.cpp ****         
 11177              		.loc 20 550 50 view .LVU3118
 11178 088c D4ED0C7A 		vldr.32	s15, [r4, #48]
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11179              		.loc 20 553 59 view .LVU3119
 11180 0890 0EAA     		add	r2, sp, #56
 549:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11181              		.loc 20 549 50 view .LVU3120
 11182 0892 27EE267A 		vmul.f32	s14, s14, s13
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11183              		.loc 20 553 59 view .LVU3121
 11184 0896 C748     		ldr	r0, .L654+16
 550:Veno-Echo.cpp ****         
 11185              		.loc 20 550 50 view .LVU3122
 11186 0898 67EEA67A 		vmul.f32	s15, s15, s13
 549:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11187              		.loc 20 549 57 view .LVU3123
 11188 089c 8DED0E7A 		vstr.32	s14, [sp, #56]
 550:Veno-Echo.cpp ****         
 11189              		.loc 20 550 9 is_stmt 1 view .LVU3124
 11190              	.LVL675:
 550:Veno-Echo.cpp ****         
 11191              		.loc 20 550 9 is_stmt 0 view .LVU3125
 11192              	.LBE1971:
 11193              	.LBE2219:
 11194              	.LBE2247:
 11195              	.LBE2258:
 11196              		.loc 10 52 26 is_stmt 1 view .LVU3126
 11197              	.LBB2259:
 11198              	.LBB2248:
 11199              	.LBB2220:
 11200              	.LBB1972:
 550:Veno-Echo.cpp ****         
 11201              		.loc 20 550 57 is_stmt 0 view .LVU3127
 11202 08a0 CDED0F7A 		vstr.32	s15, [sp, #60]
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11203              		.loc 20 553 9 is_stmt 1 view .LVU3128
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11204              		.loc 20 553 59 is_stmt 0 view .LVU3129
 11205 08a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11206              	.LVL676:
 554:Veno-Echo.cpp **** 
 11207              		.loc 20 554 59 view .LVU3130
 11208 08a8 0DA9     		add	r1, sp, #52
 11209 08aa 0FAA     		add	r2, sp, #60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 346


 11210 08ac C248     		ldr	r0, .L654+20
 553:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11211              		.loc 20 553 97 view .LVU3131
 11212 08ae 8DED100A 		vstr.32	s0, [sp, #64]
 554:Veno-Echo.cpp **** 
 11213              		.loc 20 554 9 is_stmt 1 view .LVU3132
 554:Veno-Echo.cpp **** 
 11214              		.loc 20 554 59 is_stmt 0 view .LVU3133
 11215 08b2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11216              	.LVL677:
 11217              	.LBB1957:
 11218              	.LBB1958:
2003:Veno-Echo.cpp ****         returnval = limit;
 11219              		.loc 20 2003 5 view .LVU3134
 11220 08b6 F0EE006A 		vmov.f32	s13, #2.0e+0
 11221              	.LBE1958:
 11222              	.LBE1957:
 557:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11223              		.loc 20 557 41 view .LVU3135
 11224 08ba 9DED107A 		vldr.32	s14, [sp, #64]
 554:Veno-Echo.cpp **** 
 11225              		.loc 20 554 59 view .LVU3136
 11226 08be F0EE407A 		vmov.f32	s15, s0
 557:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11227              		.loc 20 557 9 is_stmt 1 view .LVU3137
 11228              	.LVL678:
 11229              	.LBB1962:
 11230              	.LBI1957:
2000:Veno-Echo.cpp **** {
 11231              		.loc 20 2000 7 view .LVU3138
 11232              	.LBB1959:
2002:Veno-Echo.cpp ****     if (input > limit)
 11233              		.loc 20 2002 5 view .LVU3139
2003:Veno-Echo.cpp ****         returnval = limit;
 11234              		.loc 20 2003 5 view .LVU3140
 11235 08c2 B4EEE67A 		vcmpe.f32	s14, s13
 11236 08c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11237 08ca 00F30D81 		bgt	.L593
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11238              		.loc 20 2005 10 view .LVU3141
 11239 08ce F8EE006A 		vmov.f32	s13, #-2.0e+0
 11240 08d2 B4EEE67A 		vcmpe.f32	s14, s13
 11241 08d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11242 08da 00F12D81 		bmi	.L594
 11243 08de 27EE080A 		vmul.f32	s0, s14, s16
 11244              	.LVL679:
 11245              	.L568:
2010:Veno-Echo.cpp **** }
 11246              		.loc 20 2010 5 view .LVU3142
2010:Veno-Echo.cpp **** }
 11247              		.loc 20 2010 5 is_stmt 0 view .LVU3143
 11248              	.LBE1959:
 11249              	.LBE1962:
 11250              	.LBB1963:
 11251              	.LBB1964:
2003:Veno-Echo.cpp ****         returnval = limit;
 11252              		.loc 20 2003 5 view .LVU3144
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 347


 11253 08e2 F0EE006A 		vmov.f32	s13, #2.0e+0
 11254              	.LBE1964:
 11255              	.LBE1963:
 557:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11256              		.loc 20 557 30 view .LVU3145
 11257 08e6 8DED107A 		vstr.32	s14, [sp, #64]
 558:Veno-Echo.cpp **** 
 11258              		.loc 20 558 9 is_stmt 1 view .LVU3146
 11259              	.LVL680:
 11260              	.LBB1967:
 11261              	.LBI1963:
2000:Veno-Echo.cpp **** {
 11262              		.loc 20 2000 7 view .LVU3147
 11263              	.LBB1965:
2002:Veno-Echo.cpp ****     if (input > limit)
 11264              		.loc 20 2002 5 view .LVU3148
2003:Veno-Echo.cpp ****         returnval = limit;
 11265              		.loc 20 2003 5 view .LVU3149
 11266 08ea F4EEE67A 		vcmpe.f32	s15, s13
 11267 08ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11268 08f2 00F30681 		bgt	.L595
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11269              		.loc 20 2005 10 view .LVU3150
 11270 08f6 B8EE007A 		vmov.f32	s14, #-2.0e+0
2006:Veno-Echo.cpp ****     else
 11271              		.loc 20 2006 19 is_stmt 0 view .LVU3151
 11272 08fa F4EE477A 		vcmp.f32	s15, s14
 11273 08fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11274 0902 48BF     		it	mi
 11275 0904 F0EE477A 		vmovmi.f32	s15, s14
 11276              	.LVL681:
 11277              	.L569:
2010:Veno-Echo.cpp **** }
 11278              		.loc 20 2010 5 is_stmt 1 view .LVU3152
2010:Veno-Echo.cpp **** }
 11279              		.loc 20 2010 5 is_stmt 0 view .LVU3153
 11280              	.LBE1965:
 11281              	.LBE1967:
 561:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11282              		.loc 20 561 27 view .LVU3154
 11283 0908 AC4D     		ldr	r5, .L654+24
 562:Veno-Echo.cpp **** 
 11284              		.loc 20 562 27 view .LVU3155
 11285 090a AD4C     		ldr	r4, .L654+28
 561:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11286              		.loc 20 561 27 view .LVU3156
 11287 090c 2846     		mov	r0, r5
 558:Veno-Echo.cpp **** 
 11288              		.loc 20 558 30 view .LVU3157
 11289 090e CDED117A 		vstr.32	s15, [sp, #68]
 561:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11290              		.loc 20 561 9 is_stmt 1 view .LVU3158
 561:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11291              		.loc 20 561 27 is_stmt 0 view .LVU3159
 11292 0912 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11293              	.LVL682:
 562:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 348


 11294              		.loc 20 562 9 is_stmt 1 view .LVU3160
 562:Veno-Echo.cpp **** 
 11295              		.loc 20 562 27 is_stmt 0 view .LVU3161
 11296 0916 DFEDA47A 		vldr.32	s15, .L654+4
 11297 091a 9DED110A 		vldr.32	s0, [sp, #68]
 11298 091e 2046     		mov	r0, r4
 11299 0920 20EE270A 		vmul.f32	s0, s0, s15
 11300 0924 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11301              	.LVL683:
 564:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11302              		.loc 20 564 9 is_stmt 1 view .LVU3162
 564:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11303              		.loc 20 564 9 is_stmt 0 view .LVU3163
 11304              	.LBE1972:
 11305              	.LBE2220:
 11306              	.LBE2248:
 11307              	.LBE2259:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11308              		.loc 10 56 27 is_stmt 1 view .LVU3164
 11309              	.LBB2260:
 11310              	.LBB2249:
 11311              	.LBB2221:
 11312              	.LBB1973:
 564:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11313              		.loc 20 564 51 is_stmt 0 view .LVU3165
 11314 0928 F2EE046A 		vmov.f32	s13, #1.0e+1
 11315 092c 95ED0D7A 		vldr.32	s14, [r5, #52]
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11316              		.loc 20 567 55 view .LVU3166
 11317 0930 10A9     		add	r1, sp, #64
 565:Veno-Echo.cpp **** 
 11318              		.loc 20 565 51 view .LVU3167
 11319 0932 D4ED0D7A 		vldr.32	s15, [r4, #52]
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11320              		.loc 20 567 55 view .LVU3168
 11321 0936 12AA     		add	r2, sp, #72
 564:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11322              		.loc 20 564 51 view .LVU3169
 11323 0938 27EE267A 		vmul.f32	s14, s14, s13
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11324              		.loc 20 567 55 view .LVU3170
 11325 093c A148     		ldr	r0, .L654+32
 565:Veno-Echo.cpp **** 
 11326              		.loc 20 565 51 view .LVU3171
 11327 093e 67EEA67A 		vmul.f32	s15, s15, s13
 564:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11328              		.loc 20 564 58 view .LVU3172
 11329 0942 8DED127A 		vstr.32	s14, [sp, #72]
 565:Veno-Echo.cpp **** 
 11330              		.loc 20 565 9 is_stmt 1 view .LVU3173
 11331              	.LVL684:
 565:Veno-Echo.cpp **** 
 11332              		.loc 20 565 9 is_stmt 0 view .LVU3174
 11333              	.LBE1973:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 349


 11334              	.LBE2221:
 11335              	.LBE2249:
 11336              	.LBE2260:
 11337              		.loc 10 56 27 is_stmt 1 view .LVU3175
 11338              	.LBB2261:
 11339              	.LBB2250:
 11340              	.LBB2222:
 11341              	.LBB1974:
 565:Veno-Echo.cpp **** 
 11342              		.loc 20 565 58 is_stmt 0 view .LVU3176
 11343 0946 CDED137A 		vstr.32	s15, [sp, #76]
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11344              		.loc 20 567 9 is_stmt 1 view .LVU3177
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11345              		.loc 20 567 55 is_stmt 0 view .LVU3178
 11346 094a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11347              	.LVL685:
 568:Veno-Echo.cpp **** 
 11348              		.loc 20 568 55 view .LVU3179
 11349 094e 11A9     		add	r1, sp, #68
 11350 0950 13AA     		add	r2, sp, #76
 11351 0952 9D48     		ldr	r0, .L654+36
 567:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11352              		.loc 20 567 30 view .LVU3180
 11353 0954 8DED100A 		vstr.32	s0, [sp, #64]
 568:Veno-Echo.cpp **** 
 11354              		.loc 20 568 9 is_stmt 1 view .LVU3181
 568:Veno-Echo.cpp **** 
 11355              		.loc 20 568 55 is_stmt 0 view .LVU3182
 11356 0958 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11357              	.LVL686:
 571:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11358              		.loc 20 571 53 view .LVU3183
 11359 095c 10AA     		add	r2, sp, #64
 11360 095e 0CA9     		add	r1, sp, #48
 11361 0960 9A48     		ldr	r0, .L654+40
 568:Veno-Echo.cpp **** 
 11362              		.loc 20 568 30 view .LVU3184
 11363 0962 8DED110A 		vstr.32	s0, [sp, #68]
 571:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11364              		.loc 20 571 9 is_stmt 1 view .LVU3185
 571:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11365              		.loc 20 571 53 is_stmt 0 view .LVU3186
 11366 0966 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11367              	.LVL687:
 572:Veno-Echo.cpp **** 
 11368              		.loc 20 572 53 view .LVU3187
 11369 096a 11AA     		add	r2, sp, #68
 11370 096c 0DA9     		add	r1, sp, #52
 11371 096e 9848     		ldr	r0, .L654+44
 571:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11372              		.loc 20 571 27 view .LVU3188
 11373 0970 8DED0C0A 		vstr.32	s0, [sp, #48]
 572:Veno-Echo.cpp **** 
 11374              		.loc 20 572 9 is_stmt 1 view .LVU3189
 572:Veno-Echo.cpp **** 
 11375              		.loc 20 572 53 is_stmt 0 view .LVU3190
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 350


 11376 0974 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11377              	.LVL688:
 11378 0978 DDED0C7A 		vldr.32	s15, [sp, #48]
 572:Veno-Echo.cpp **** 
 11379              		.loc 20 572 27 view .LVU3191
 11380 097c 8DED0D0A 		vstr.32	s0, [sp, #52]
 11381              	.LBE1974:
 11382 0980 ADE4     		b	.L567
 11383              	.LVL689:
 11384              	.L636:
 572:Veno-Echo.cpp **** 
 11385              		.loc 20 572 27 view .LVU3192
 11386              	.LBE2222:
 515:Veno-Echo.cpp **** 
 11387              		.loc 20 515 25 view .LVU3193
 11388 0982 DFED947A 		vldr.32	s15, .L654+48
 11389              	.LVL690:
 515:Veno-Echo.cpp **** 
 11390              		.loc 20 515 25 view .LVU3194
 11391 0986 3CE4     		b	.L557
 11392              	.LVL691:
 11393              	.L635:
 511:Veno-Echo.cpp ****             
 11394              		.loc 20 511 25 view .LVU3195
 11395 0988 9FED927A 		vldr.32	s14, .L654+48
 11396              	.LVL692:
 511:Veno-Echo.cpp ****             
 11397              		.loc 20 511 25 view .LVU3196
 11398 098c 28E4     		b	.L555
 11399              	.LVL693:
 11400              	.L583:
 11401              	.LBB2223:
 441:Veno-Echo.cpp **** {
 11402              		.loc 20 441 1 view .LVU3197
 11403 098e 854B     		ldr	r3, .L654
 11404              	.LBE2223:
 11405              	.LBB2224:
 11406              	.LBB1868:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11407              		.loc 20 2004 19 view .LVU3198
 11408 0990 B0EE470A 		vmov.f32	s0, s14
 11409              	.LVL694:
2010:Veno-Echo.cpp **** }
 11410              		.loc 20 2010 5 is_stmt 1 view .LVU3199
2010:Veno-Echo.cpp **** }
 11411              		.loc 20 2010 5 is_stmt 0 view .LVU3200
 11412              	.LBE1868:
 11413              	.LBE2224:
 11414              	.LBB2225:
 441:Veno-Echo.cpp **** {
 11415              		.loc 20 441 1 view .LVU3201
 11416 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11417              	.LBE2225:
 439:Veno-Echo.cpp **** 
 11418              		.loc 20 439 23 view .LVU3202
 11419 0996 8DED090A 		vstr.32	s0, [sp, #36]
 441:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 351


 11420              		.loc 20 441 1 is_stmt 1 view .LVU3203
 11421              	.LBB2226:
 11422 099a 002B     		cmp	r3, #0
 11423 099c 7FF4A5AB 		bne	.L549
 11424              	.L643:
 11425              	.LBB1871:
 447:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11426              		.loc 20 447 9 view .LVU3204
 447:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11427              		.loc 20 447 22 is_stmt 0 view .LVU3205
 11428 09a0 9FED819A 		vldr.32	s18, .L654+4
 11429 09a4 8C4D     		ldr	r5, .L654+52
 11430 09a6 27EE890A 		vmul.f32	s0, s15, s18
 448:Veno-Echo.cpp **** 
 11431              		.loc 20 448 22 view .LVU3206
 11432 09aa 8C4C     		ldr	r4, .L654+56
 447:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11433              		.loc 20 447 22 view .LVU3207
 11434 09ac 2846     		mov	r0, r5
 11435 09ae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11436              	.LVL695:
 448:Veno-Echo.cpp **** 
 11437              		.loc 20 448 9 is_stmt 1 view .LVU3208
 448:Veno-Echo.cpp **** 
 11438              		.loc 20 448 22 is_stmt 0 view .LVU3209
 11439 09b2 9DED090A 		vldr.32	s0, [sp, #36]
 11440 09b6 2046     		mov	r0, r4
 11441 09b8 20EE090A 		vmul.f32	s0, s0, s18
 11442 09bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11443              	.LVL696:
 451:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11444              		.loc 20 451 9 is_stmt 1 view .LVU3210
 451:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11445              		.loc 20 451 9 is_stmt 0 view .LVU3211
 11446              	.LBE1871:
 11447              	.LBE2226:
 11448              	.LBE2250:
 11449              	.LBE2261:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11450              		.loc 10 52 26 is_stmt 1 view .LVU3212
 11451              	.LBB2262:
 11452              	.LBB2251:
 11453              	.LBB2227:
 11454              	.LBB1886:
 451:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11455              		.loc 20 451 40 is_stmt 0 view .LVU3213
 11456 09c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 11457 09c4 95ED0C7A 		vldr.32	s14, [r5, #48]
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11458              		.loc 20 455 49 view .LVU3214
 11459 09c8 0EAA     		add	r2, sp, #56
 452:Veno-Echo.cpp ****         
 11460              		.loc 20 452 40 view .LVU3215
 11461 09ca D4ED0C7A 		vldr.32	s15, [r4, #48]
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11462              		.loc 20 455 49 view .LVU3216
 11463 09ce 08A9     		add	r1, sp, #32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 352


 451:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11464              		.loc 20 451 40 view .LVU3217
 11465 09d0 27EE267A 		vmul.f32	s14, s14, s13
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11466              		.loc 20 455 49 view .LVU3218
 11467 09d4 8248     		ldr	r0, .L654+60
 452:Veno-Echo.cpp ****         
 11468              		.loc 20 452 40 view .LVU3219
 11469 09d6 67EEA67A 		vmul.f32	s15, s15, s13
 451:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11470              		.loc 20 451 47 view .LVU3220
 11471 09da 8DED0E7A 		vstr.32	s14, [sp, #56]
 452:Veno-Echo.cpp ****         
 11472              		.loc 20 452 9 is_stmt 1 view .LVU3221
 11473              	.LVL697:
 452:Veno-Echo.cpp ****         
 11474              		.loc 20 452 9 is_stmt 0 view .LVU3222
 11475              	.LBE1886:
 11476              	.LBE2227:
 11477              	.LBE2251:
 11478              	.LBE2262:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11479              		.loc 10 52 26 is_stmt 1 view .LVU3223
 11480              	.LBB2263:
 11481              	.LBB2252:
 11482              	.LBB2228:
 11483              	.LBB1887:
 452:Veno-Echo.cpp ****         
 11484              		.loc 20 452 47 is_stmt 0 view .LVU3224
 11485 09de CDED0F7A 		vstr.32	s15, [sp, #60]
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11486              		.loc 20 455 9 is_stmt 1 view .LVU3225
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11487              		.loc 20 455 49 is_stmt 0 view .LVU3226
 11488 09e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11489              	.LVL698:
 456:Veno-Echo.cpp **** 
 11490              		.loc 20 456 49 view .LVU3227
 11491 09e6 0FAA     		add	r2, sp, #60
 11492 09e8 09A9     		add	r1, sp, #36
 11493 09ea 7E48     		ldr	r0, .L654+64
 455:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11494              		.loc 20 455 78 view .LVU3228
 11495 09ec 8DED100A 		vstr.32	s0, [sp, #64]
 456:Veno-Echo.cpp **** 
 11496              		.loc 20 456 9 is_stmt 1 view .LVU3229
 456:Veno-Echo.cpp **** 
 11497              		.loc 20 456 49 is_stmt 0 view .LVU3230
 11498 09f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11499              	.LVL699:
 11500              	.LBB1872:
 11501              	.LBB1873:
2003:Veno-Echo.cpp ****         returnval = limit;
 11502              		.loc 20 2003 5 view .LVU3231
 11503 09f4 F0EE006A 		vmov.f32	s13, #2.0e+0
 11504              	.LBE1873:
 11505              	.LBE1872:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 353


 459:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11506              		.loc 20 459 36 view .LVU3232
 11507 09f8 9DED107A 		vldr.32	s14, [sp, #64]
 456:Veno-Echo.cpp **** 
 11508              		.loc 20 456 49 view .LVU3233
 11509 09fc F0EE407A 		vmov.f32	s15, s0
 459:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11510              		.loc 20 459 9 is_stmt 1 view .LVU3234
 11511              	.LVL700:
 11512              	.LBB1877:
 11513              	.LBI1872:
2000:Veno-Echo.cpp **** {
 11514              		.loc 20 2000 7 view .LVU3235
 11515              	.LBB1874:
2002:Veno-Echo.cpp ****     if (input > limit)
 11516              		.loc 20 2002 5 view .LVU3236
2003:Veno-Echo.cpp ****         returnval = limit;
 11517              		.loc 20 2003 5 view .LVU3237
 11518 0a00 B4EEE67A 		vcmpe.f32	s14, s13
 11519 0a04 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11520 0a08 76DC     		bgt	.L584
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11521              		.loc 20 2005 10 view .LVU3238
 11522 0a0a F8EE006A 		vmov.f32	s13, #-2.0e+0
 11523 0a0e B4EEE67A 		vcmpe.f32	s14, s13
 11524 0a12 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11525 0a16 00F19480 		bmi	.L585
 11526 0a1a 27EE090A 		vmul.f32	s0, s14, s18
 11527              	.LVL701:
 11528              	.L550:
2010:Veno-Echo.cpp **** }
 11529              		.loc 20 2010 5 view .LVU3239
2010:Veno-Echo.cpp **** }
 11530              		.loc 20 2010 5 is_stmt 0 view .LVU3240
 11531              	.LBE1874:
 11532              	.LBE1877:
 11533              	.LBB1878:
 11534              	.LBB1879:
2003:Veno-Echo.cpp ****         returnval = limit;
 11535              		.loc 20 2003 5 view .LVU3241
 11536 0a1e F0EE006A 		vmov.f32	s13, #2.0e+0
 11537              	.LBE1879:
 11538              	.LBE1878:
 459:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11539              		.loc 20 459 25 view .LVU3242
 11540 0a22 8DED107A 		vstr.32	s14, [sp, #64]
 460:Veno-Echo.cpp **** 
 11541              		.loc 20 460 9 is_stmt 1 view .LVU3243
 11542              	.LVL702:
 11543              	.LBB1882:
 11544              	.LBI1878:
2000:Veno-Echo.cpp **** {
 11545              		.loc 20 2000 7 view .LVU3244
 11546              	.LBB1880:
2002:Veno-Echo.cpp ****     if (input > limit)
 11547              		.loc 20 2002 5 view .LVU3245
2003:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 354


 11548              		.loc 20 2003 5 view .LVU3246
 11549 0a26 F4EEE67A 		vcmpe.f32	s15, s13
 11550 0a2a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11551 0a2e 60DC     		bgt	.L586
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11552              		.loc 20 2005 10 view .LVU3247
 11553 0a30 B8EE007A 		vmov.f32	s14, #-2.0e+0
2006:Veno-Echo.cpp ****     else
 11554              		.loc 20 2006 19 is_stmt 0 view .LVU3248
 11555 0a34 F4EE477A 		vcmp.f32	s15, s14
 11556 0a38 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11557 0a3c 48BF     		it	mi
 11558 0a3e F0EE477A 		vmovmi.f32	s15, s14
 11559              	.LVL703:
 11560              	.L551:
2010:Veno-Echo.cpp **** }
 11561              		.loc 20 2010 5 is_stmt 1 view .LVU3249
2010:Veno-Echo.cpp **** }
 11562              		.loc 20 2010 5 is_stmt 0 view .LVU3250
 11563              	.LBE1880:
 11564              	.LBE1882:
 463:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11565              		.loc 20 463 22 view .LVU3251
 11566 0a42 694D     		ldr	r5, .L654+68
 464:Veno-Echo.cpp **** 
 11567              		.loc 20 464 22 view .LVU3252
 11568 0a44 694C     		ldr	r4, .L654+72
 463:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11569              		.loc 20 463 22 view .LVU3253
 11570 0a46 2846     		mov	r0, r5
 460:Veno-Echo.cpp **** 
 11571              		.loc 20 460 25 view .LVU3254
 11572 0a48 CDED117A 		vstr.32	s15, [sp, #68]
 463:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11573              		.loc 20 463 9 is_stmt 1 view .LVU3255
 463:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11574              		.loc 20 463 22 is_stmt 0 view .LVU3256
 11575 0a4c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11576              	.LVL704:
 464:Veno-Echo.cpp **** 
 11577              		.loc 20 464 9 is_stmt 1 view .LVU3257
 464:Veno-Echo.cpp **** 
 11578              		.loc 20 464 22 is_stmt 0 view .LVU3258
 11579 0a50 DFED557A 		vldr.32	s15, .L654+4
 11580 0a54 9DED110A 		vldr.32	s0, [sp, #68]
 11581 0a58 2046     		mov	r0, r4
 11582 0a5a 20EE270A 		vmul.f32	s0, s0, s15
 11583 0a5e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11584              	.LVL705:
 466:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11585              		.loc 20 466 9 is_stmt 1 view .LVU3259
 466:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11586              		.loc 20 466 9 is_stmt 0 view .LVU3260
 11587              	.LBE1887:
 11588              	.LBE2228:
 11589              	.LBE2252:
 11590              	.LBE2263:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 355


 11591              		.loc 10 56 27 is_stmt 1 view .LVU3261
 11592              	.LBB2264:
 11593              	.LBB2253:
 11594              	.LBB2229:
 11595              	.LBB1888:
 466:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11596              		.loc 20 466 41 is_stmt 0 view .LVU3262
 11597 0a62 F2EE046A 		vmov.f32	s13, #1.0e+1
 11598 0a66 95ED0D7A 		vldr.32	s14, [r5, #52]
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11599              		.loc 20 469 45 view .LVU3263
 11600 0a6a 10A9     		add	r1, sp, #64
 467:Veno-Echo.cpp **** 
 11601              		.loc 20 467 41 view .LVU3264
 11602 0a6c D4ED0D7A 		vldr.32	s15, [r4, #52]
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11603              		.loc 20 469 45 view .LVU3265
 11604 0a70 12AA     		add	r2, sp, #72
 466:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11605              		.loc 20 466 41 view .LVU3266
 11606 0a72 27EE267A 		vmul.f32	s14, s14, s13
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11607              		.loc 20 469 45 view .LVU3267
 11608 0a76 5E48     		ldr	r0, .L654+76
 467:Veno-Echo.cpp **** 
 11609              		.loc 20 467 41 view .LVU3268
 11610 0a78 67EEA67A 		vmul.f32	s15, s15, s13
 466:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11611              		.loc 20 466 48 view .LVU3269
 11612 0a7c 8DED127A 		vstr.32	s14, [sp, #72]
 467:Veno-Echo.cpp **** 
 11613              		.loc 20 467 9 is_stmt 1 view .LVU3270
 11614              	.LVL706:
 467:Veno-Echo.cpp **** 
 11615              		.loc 20 467 9 is_stmt 0 view .LVU3271
 11616              	.LBE1888:
 11617              	.LBE2229:
 11618              	.LBE2253:
 11619              	.LBE2264:
 11620              		.loc 10 56 27 is_stmt 1 view .LVU3272
 11621              	.LBB2265:
 11622              	.LBB2254:
 11623              	.LBB2230:
 11624              	.LBB1889:
 467:Veno-Echo.cpp **** 
 11625              		.loc 20 467 48 is_stmt 0 view .LVU3273
 11626 0a80 CDED137A 		vstr.32	s15, [sp, #76]
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11627              		.loc 20 469 9 is_stmt 1 view .LVU3274
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11628              		.loc 20 469 45 is_stmt 0 view .LVU3275
 11629 0a84 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11630              	.LVL707:
 470:Veno-Echo.cpp **** 
 11631              		.loc 20 470 45 view .LVU3276
 11632 0a88 11A9     		add	r1, sp, #68
 11633 0a8a 13AA     		add	r2, sp, #76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 356


 11634 0a8c 5948     		ldr	r0, .L654+80
 469:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11635              		.loc 20 469 25 view .LVU3277
 11636 0a8e 8DED100A 		vstr.32	s0, [sp, #64]
 470:Veno-Echo.cpp **** 
 11637              		.loc 20 470 9 is_stmt 1 view .LVU3278
 470:Veno-Echo.cpp **** 
 11638              		.loc 20 470 45 is_stmt 0 view .LVU3279
 11639 0a92 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11640              	.LVL708:
 474:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11641              		.loc 20 474 44 view .LVU3280
 11642 0a96 10AA     		add	r2, sp, #64
 11643 0a98 08A9     		add	r1, sp, #32
 11644 0a9a 5748     		ldr	r0, .L654+84
 470:Veno-Echo.cpp **** 
 11645              		.loc 20 470 25 view .LVU3281
 11646 0a9c 8DED110A 		vstr.32	s0, [sp, #68]
 474:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11647              		.loc 20 474 9 is_stmt 1 view .LVU3282
 474:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11648              		.loc 20 474 44 is_stmt 0 view .LVU3283
 11649 0aa0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11650              	.LVL709:
 475:Veno-Echo.cpp **** 
 11651              		.loc 20 475 44 view .LVU3284
 11652 0aa4 11AA     		add	r2, sp, #68
 11653 0aa6 09A9     		add	r1, sp, #36
 11654 0aa8 5448     		ldr	r0, .L654+88
 474:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11655              		.loc 20 474 23 view .LVU3285
 11656 0aaa 8DED080A 		vstr.32	s0, [sp, #32]
 475:Veno-Echo.cpp **** 
 11657              		.loc 20 475 9 is_stmt 1 view .LVU3286
 475:Veno-Echo.cpp **** 
 11658              		.loc 20 475 44 is_stmt 0 view .LVU3287
 11659 0aae FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11660              	.LVL710:
 11661 0ab2 DDED087A 		vldr.32	s15, [sp, #32]
 475:Veno-Echo.cpp **** 
 11662              		.loc 20 475 23 view .LVU3288
 11663 0ab6 8DED090A 		vstr.32	s0, [sp, #36]
 11664              	.LBE1889:
 11665 0aba FFF716BB 		b	.L549
 11666              	.LVL711:
 11667              	.L590:
 475:Veno-Echo.cpp **** 
 11668              		.loc 20 475 23 view .LVU3289
 11669              	.LBE2230:
 11670              	.LBB2231:
 11671              	.LBB1942:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11672              		.loc 20 2004 19 view .LVU3290
 11673 0abe B0EE676A 		vmov.f32	s12, s15
 11674              	.LVL712:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11675              		.loc 20 2004 19 view .LVU3291
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 357


 11676 0ac2 FFF7C9BB 		b	.L561
 11677              	.LVL713:
 11678              	.L589:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11679              		.loc 20 2004 19 view .LVU3292
 11680              	.LBE1942:
 11681              	.LBE2231:
 11682              	.LBB2232:
 11683              	.LBB1938:
 11684 0ac6 F0EE678A 		vmov.f32	s17, s15
 11685              	.LVL714:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11686              		.loc 20 2004 19 view .LVU3293
 11687 0aca FFF7B2BB 		b	.L559
 11688              	.LVL715:
 11689              	.L591:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11690              		.loc 20 2004 19 view .LVU3294
 11691              	.LBE1938:
 11692              	.LBE2232:
 11693              	.LBB2233:
 11694              	.LBB1947:
 11695 0ace F0EE477A 		vmov.f32	s15, s14
 11696              	.LVL716:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11697              		.loc 20 2004 19 view .LVU3295
 11698 0ad2 FFF7EABB 		b	.L563
 11699              	.LVL717:
 11700              	.L638:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11701              		.loc 20 2004 19 view .LVU3296
 11702              	.LBE1947:
 11703              	.LBE2233:
 592:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11704              		.loc 20 592 13 is_stmt 1 view .LVU3297
 592:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11705              		.loc 20 592 18 is_stmt 0 view .LVU3298
 11706 0ad6 DBED006A 		vldr.32	s13, [fp]
 593:Veno-Echo.cpp ****         }
 11707              		.loc 20 593 18 view .LVU3299
 11708 0ada 9BED017A 		vldr.32	s14, [fp, #4]
 592:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11709              		.loc 20 592 18 view .LVU3300
 11710 0ade 77EEA67A 		vadd.f32	s15, s15, s13
 11711              	.LVL718:
 593:Veno-Echo.cpp ****         }
 11712              		.loc 20 593 13 is_stmt 1 view .LVU3301
 593:Veno-Echo.cpp ****         }
 11713              		.loc 20 593 18 is_stmt 0 view .LVU3302
 11714 0ae2 30EE070A 		vadd.f32	s0, s0, s14
 11715              	.LVL719:
 593:Veno-Echo.cpp ****         }
 11716              		.loc 20 593 18 view .LVU3303
 11717 0ae6 13E4     		b	.L573
 11718              	.LVL720:
 11719              	.L593:
 11720              	.LBB2234:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 358


 11721              	.LBB1975:
 11722              	.LBB1968:
 11723              	.LBB1960:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11724              		.loc 20 2004 19 view .LVU3304
 11725 0ae8 B0EE667A 		vmov.f32	s14, s13
 11726              	.LVL721:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11727              		.loc 20 2004 19 view .LVU3305
 11728 0aec 9FED440A 		vldr.32	s0, .L654+92
 11729 0af0 F7E6     		b	.L568
 11730              	.LVL722:
 11731              	.L586:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11732              		.loc 20 2004 19 view .LVU3306
 11733              	.LBE1960:
 11734              	.LBE1968:
 11735              	.LBE1975:
 11736              	.LBE2234:
 11737              	.LBB2235:
 11738              	.LBB1890:
 11739              	.LBB1883:
 11740              	.LBB1881:
 11741 0af2 F0EE667A 		vmov.f32	s15, s13
 11742              	.LVL723:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11743              		.loc 20 2004 19 view .LVU3307
 11744 0af6 A4E7     		b	.L551
 11745              	.LVL724:
 11746              	.L584:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11747              		.loc 20 2004 19 view .LVU3308
 11748              	.LBE1881:
 11749              	.LBE1883:
 11750              	.LBB1884:
 11751              	.LBB1875:
 11752 0af8 B0EE667A 		vmov.f32	s14, s13
 11753              	.LVL725:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11754              		.loc 20 2004 19 view .LVU3309
 11755 0afc 9FED400A 		vldr.32	s0, .L654+92
 11756 0b00 8DE7     		b	.L550
 11757              	.LVL726:
 11758              	.L595:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11759              		.loc 20 2004 19 view .LVU3310
 11760              	.LBE1875:
 11761              	.LBE1884:
 11762              	.LBE1890:
 11763              	.LBE2235:
 11764              	.LBB2236:
 11765              	.LBB1976:
 11766              	.LBB1969:
 11767              	.LBB1966:
 11768 0b02 F0EE667A 		vmov.f32	s15, s13
 11769              	.LVL727:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 359


 11770              		.loc 20 2004 19 view .LVU3311
 11771 0b06 FFE6     		b	.L569
 11772              	.LVL728:
 11773              	.L527:
2004:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11774              		.loc 20 2004 19 view .LVU3312
 11775              	.LBE1966:
 11776              	.LBE1969:
 11777              	.LBE1976:
 11778              	.LBE2236:
 11779              	.LBB2237:
 11780              	.LBB2178:
 11781              	.LBB2167:
 116:delayline_reverse.h ****                 }
 11782              		.loc 19 116 21 view .LVU3313
 11783 0b08 AB60     		str	r3, [r5, #8]
 11784 0b0a 5DE6     		b	.L529
 11785              	.LVL729:
 11786              	.L537:
 116:delayline_reverse.h ****                 }
 11787              		.loc 19 116 21 view .LVU3314
 11788              	.LBE2167:
 11789              	.LBE2178:
 11790              	.LBE2237:
 11791              	.LBB2238:
 11792              	.LBB2206:
 11793              	.LBB2201:
 11794 0b0c A260     		str	r2, [r4, #8]
 11795 0b0e 38E6     		b	.L539
 11796              	.LVL730:
 11797              	.L506:
 116:delayline_reverse.h ****                 }
 11798              		.loc 19 116 21 view .LVU3315
 11799              	.LBE2201:
 11800              	.LBE2206:
 11801              	.LBE2238:
 11802              	.LBE2254:
 11803              	.LBE2265:
 613:Veno-Echo.cpp **** 
 11804              		.loc 20 613 1 view .LVU3316
 11805 0b10 15B0     		add	sp, sp, #84
 11806              		.cfi_remember_state
 11807              		.cfi_def_cfa_offset 92
 11808              		@ sp needed
 11809 0b12 BDEC0E8B 		vldm	sp!, {d8-d14}
 11810              		.cfi_restore 92
 11811              		.cfi_restore 93
 11812              		.cfi_restore 90
 11813              		.cfi_restore 91
 11814              		.cfi_restore 88
 11815              		.cfi_restore 89
 11816              		.cfi_restore 86
 11817              		.cfi_restore 87
 11818              		.cfi_restore 84
 11819              		.cfi_restore 85
 11820              		.cfi_restore 82
 11821              		.cfi_restore 83
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 360


 11822              		.cfi_restore 80
 11823              		.cfi_restore 81
 11824              		.cfi_def_cfa_offset 36
 11825 0b16 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11826              	.LVL731:
 11827              	.L544:
 11828              		.cfi_restore_state
 11829              	.LBB2266:
 11830              	.LBB2255:
 11831              	.LBB2239:
 11832              	.LBB2207:
 11833              	.LBB2202:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11834              		.loc 19 145 21 view .LVU3317
 11835 0b1a 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11836              		.loc 19 144 21 view .LVU3318
 11837 0b1c 039C     		ldr	r4, [sp, #12]
 11838              	.LVL732:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11839              		.loc 19 144 21 view .LVU3319
 11840 0b1e 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11841              		.loc 19 145 21 view .LVU3320
 11842 0b20 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11843              		.loc 19 146 21 view .LVU3321
 11844 0b22 0170     		strb	r1, [r0]
 11845 0b24 FAE5     		b	.L541
 11846              	.LVL733:
 11847              	.L534:
 146:delayline_reverse.h ****                 }
 11848              		.loc 19 146 21 view .LVU3322
 11849              	.LBE2202:
 11850              	.LBE2207:
 11851              	.LBE2239:
 11852              	.LBB2240:
 11853              	.LBB2179:
 11854              	.LBB2168:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11855              		.loc 19 145 21 view .LVU3323
 11856 0b26 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11857              		.loc 19 144 21 view .LVU3324
 11858 0b28 049D     		ldr	r5, [sp, #16]
 11859              	.LVL734:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11860              		.loc 19 144 21 view .LVU3325
 11861 0b2a 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11862              		.loc 19 145 21 view .LVU3326
 11863 0b2c 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11864              		.loc 19 146 21 view .LVU3327
 11865 0b2e 0170     		strb	r1, [r0]
 11866 0b30 8BE5     		b	.L531
 11867              	.LVL735:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 361


 11868              	.L645:
 146:delayline_reverse.h ****                 }
 11869              		.loc 19 146 21 view .LVU3328
 11870              	.LBE2168:
 11871              	.LBE2179:
 11872              	.LBE2240:
 11873              	.LBB2241:
 11874              	.LBB2208:
 11875              	.LBB2203:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11876              		.loc 19 130 17 view .LVU3329
 11877 0b32 C2ED007A 		vstr.32	s15, [r2]
 11878 0b36 F1E5     		b	.L541
 11879              	.LVL736:
 11880              	.L594:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11881              		.loc 19 130 17 view .LVU3330
 11882              	.LBE2203:
 11883              	.LBE2208:
 11884              	.LBE2241:
 11885              	.LBB2242:
 11886              	.LBB1977:
 11887              	.LBB1970:
 11888              	.LBB1961:
2006:Veno-Echo.cpp ****     else
 11889              		.loc 20 2006 19 view .LVU3331
 11890 0b38 B0EE667A 		vmov.f32	s14, s13
 11891              	.LVL737:
2006:Veno-Echo.cpp ****     else
 11892              		.loc 20 2006 19 view .LVU3332
 11893 0b3c 9FED310A 		vldr.32	s0, .L654+96
 11894 0b40 CFE6     		b	.L568
 11895              	.LVL738:
 11896              	.L585:
2006:Veno-Echo.cpp ****     else
 11897              		.loc 20 2006 19 view .LVU3333
 11898              	.LBE1961:
 11899              	.LBE1970:
 11900              	.LBE1977:
 11901              	.LBE2242:
 11902              	.LBB2243:
 11903              	.LBB1891:
 11904              	.LBB1885:
 11905              	.LBB1876:
 11906 0b42 B0EE667A 		vmov.f32	s14, s13
 11907              	.LVL739:
2006:Veno-Echo.cpp ****     else
 11908              		.loc 20 2006 19 view .LVU3334
 11909 0b46 9FED2F0A 		vldr.32	s0, .L654+96
 11910 0b4a 68E7     		b	.L550
 11911              	.LVL740:
 11912              	.L508:
2006:Veno-Echo.cpp ****     else
 11913              		.loc 20 2006 19 view .LVU3335
 11914              	.LBE1876:
 11915              	.LBE1885:
 11916              	.LBE1891:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 362


 11917              	.LBE2243:
 11918              	.LBE2255:
 11919              	.LBE2266:
 375:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11920              		.loc 20 375 13 is_stmt 1 view .LVU3336
 376:Veno-Echo.cpp ****                 {
 11921              		.loc 20 376 17 view .LVU3337
 376:Veno-Echo.cpp ****                 {
 11922              		.loc 20 376 30 is_stmt 0 view .LVU3338
 11923 0b4c 2E4B     		ldr	r3, .L654+100
 376:Veno-Echo.cpp ****                 {
 11924              		.loc 20 376 17 view .LVU3339
 11925 0b4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11926 0b50 022B     		cmp	r3, #2
 11927 0b52 3FF488AA 		beq	.L507
 378:Veno-Echo.cpp ****                 }
 11928              		.loc 20 378 21 is_stmt 1 view .LVU3340
 378:Veno-Echo.cpp ****                 }
 11929              		.loc 20 378 39 is_stmt 0 view .LVU3341
 11930 0b56 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11931              	.LVL741:
 378:Veno-Echo.cpp ****                 }
 11932              		.loc 20 378 39 view .LVU3342
 11933 0b5a FFF784BA 		b	.L507
 11934              	.LVL742:
 11935              	.L523:
 295:Veno-Echo.cpp ****                 Update_Buttons();
 11936              		.loc 20 295 13 is_stmt 1 view .LVU3343
 296:Veno-Echo.cpp ****                 GetModCV();
 11937              		.loc 20 296 17 view .LVU3344
 296:Veno-Echo.cpp ****                 GetModCV();
 11938              		.loc 20 296 31 is_stmt 0 view .LVU3345
 11939 0b5e FFF7FEFF 		bl	_Z14Update_Buttonsv
 11940              	.LVL743:
 297:Veno-Echo.cpp ****                 
 11941              		.loc 20 297 17 is_stmt 1 view .LVU3346
 297:Veno-Echo.cpp ****                 
 11942              		.loc 20 297 25 is_stmt 0 view .LVU3347
 11943 0b62 FFF7FEFF 		bl	_Z8GetModCVv
 11944              	.LVL744:
 299:Veno-Echo.cpp ****             break;
 11945              		.loc 20 299 17 is_stmt 1 view .LVU3348
 299:Veno-Echo.cpp ****             break;
 11946              		.loc 20 299 38 is_stmt 0 view .LVU3349
 11947 0b66 FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11948              	.LVL745:
 300:Veno-Echo.cpp **** 
 11949              		.loc 20 300 13 is_stmt 1 view .LVU3350
 11950 0b6a FFF77CBA 		b	.L507
 11951              	.LVL746:
 11952              	.L521:
 306:Veno-Echo.cpp ****                 if(saveState != SAVING)
 11953              		.loc 20 306 13 view .LVU3351
 307:Veno-Echo.cpp ****                 {
 11954              		.loc 20 307 17 view .LVU3352
 307:Veno-Echo.cpp ****                 {
 11955              		.loc 20 307 30 is_stmt 0 view .LVU3353
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 363


 11956 0b6e 264B     		ldr	r3, .L654+100
 307:Veno-Echo.cpp ****                 {
 11957              		.loc 20 307 17 view .LVU3354
 11958 0b70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11959 0b72 022B     		cmp	r3, #2
 11960 0b74 3FF477AA 		beq	.L507
 309:Veno-Echo.cpp ****                 }
 11961              		.loc 20 309 21 is_stmt 1 view .LVU3355
 309:Veno-Echo.cpp ****                 }
 11962              		.loc 20 309 38 is_stmt 0 view .LVU3356
 11963 0b78 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11964              	.LVL747:
 309:Veno-Echo.cpp ****                 }
 11965              		.loc 20 309 38 view .LVU3357
 11966 0b7c FFF773BA 		b	.L507
 11967              	.LVL748:
 11968              	.L520:
 313:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11969              		.loc 20 313 13 is_stmt 1 view .LVU3358
 314:Veno-Echo.cpp ****             break;
 11970              		.loc 20 314 17 view .LVU3359
 11971              	.LBB2267:
 11972              	.LBI2267:
 949:Veno-Echo.cpp **** {
 11973              		.loc 20 949 6 view .LVU3360
 11974              	.LBB2268:
 951:Veno-Echo.cpp **** }
 11975              		.loc 20 951 5 view .LVU3361
 951:Veno-Echo.cpp **** }
 11976              		.loc 20 951 36 is_stmt 0 view .LVU3362
 11977 0b80 0121     		movs	r1, #1
 11978              	.LVL749:
 951:Veno-Echo.cpp **** }
 11979              		.loc 20 951 36 view .LVU3363
 11980 0b82 2248     		ldr	r0, .L654+104
 11981              	.LVL750:
 951:Veno-Echo.cpp **** }
 11982              		.loc 20 951 36 view .LVU3364
 11983 0b84 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11984              	.LVL751:
 951:Veno-Echo.cpp **** }
 11985              		.loc 20 951 19 view .LVU3365
 11986 0b88 214B     		ldr	r3, .L654+108
 11987 0b8a 83ED000A 		vstr.32	s0, [r3]
 952:Veno-Echo.cpp **** 
 11988              		.loc 20 952 1 view .LVU3366
 11989 0b8e FFF76ABA 		b	.L507
 11990              	.LVL752:
 11991              	.L519:
 952:Veno-Echo.cpp **** 
 11992              		.loc 20 952 1 view .LVU3367
 11993              	.LBE2268:
 11994              	.LBE2267:
 317:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11995              		.loc 20 317 13 is_stmt 1 view .LVU3368
 318:Veno-Echo.cpp ****                 {
 11996              		.loc 20 318 17 view .LVU3369
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 364


 318:Veno-Echo.cpp ****                 {
 11997              		.loc 20 318 30 is_stmt 0 view .LVU3370
 11998 0b92 1D4B     		ldr	r3, .L654+100
 318:Veno-Echo.cpp ****                 {
 11999              		.loc 20 318 17 view .LVU3371
 12000 0b94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12001 0b96 022B     		cmp	r3, #2
 12002 0b98 3FF465AA 		beq	.L507
 320:Veno-Echo.cpp ****                 }
 12003              		.loc 20 320 21 is_stmt 1 view .LVU3372
 320:Veno-Echo.cpp ****                 }
 12004              		.loc 20 320 38 is_stmt 0 view .LVU3373
 12005 0b9c FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 12006              	.LVL753:
 320:Veno-Echo.cpp ****                 }
 12007              		.loc 20 320 38 view .LVU3374
 12008 0ba0 FFF761BA 		b	.L507
 12009              	.L655:
 12010              		.align	2
 12011              	.L654:
 12012 0ba4 00000000 		.word	.LANCHOR83
 12013 0ba8 CDCCCC3D 		.word	1036831949
 12014 0bac 00000000 		.word	.LANCHOR49
 12015 0bb0 00000000 		.word	.LANCHOR50
 12016 0bb4 00000000 		.word	.LANCHOR123
 12017 0bb8 00000000 		.word	.LANCHOR124
 12018 0bbc 00000000 		.word	.LANCHOR37
 12019 0bc0 00000000 		.word	.LANCHOR38
 12020 0bc4 00000000 		.word	.LANCHOR121
 12021 0bc8 00000000 		.word	.LANCHOR122
 12022 0bcc 00000000 		.word	.LANCHOR127
 12023 0bd0 00000000 		.word	.LANCHOR128
 12024 0bd4 00000000 		.word	0
 12025 0bd8 00000000 		.word	.LANCHOR47
 12026 0bdc 00000000 		.word	.LANCHOR48
 12027 0be0 00000000 		.word	.LANCHOR119
 12028 0be4 00000000 		.word	.LANCHOR120
 12029 0be8 00000000 		.word	.LANCHOR35
 12030 0bec 00000000 		.word	.LANCHOR36
 12031 0bf0 00000000 		.word	.LANCHOR117
 12032 0bf4 00000000 		.word	.LANCHOR118
 12033 0bf8 00000000 		.word	.LANCHOR125
 12034 0bfc 00000000 		.word	.LANCHOR126
 12035 0c00 CDCC4C3E 		.word	1045220557
 12036 0c04 CDCC4CBE 		.word	3192704205
 12037 0c08 00000000 		.word	.LANCHOR109
 12038 0c0c 18000000 		.word	.LANCHOR4+24
 12039 0c10 00000000 		.word	.LANCHOR17
 12040              	.LVL754:
 12041              	.L518:
 324:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 12042              		.loc 20 324 13 is_stmt 1 view .LVU3375
 325:Veno-Echo.cpp ****             break;
 12043              		.loc 20 325 17 view .LVU3376
 12044              	.LBB2269:
 12045              	.LBI2269:
1048:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 365


 12046              		.loc 20 1048 6 view .LVU3377
 12047              	.LBB2270:
1050:Veno-Echo.cpp **** }
 12048              		.loc 20 1050 5 view .LVU3378
1050:Veno-Echo.cpp **** }
 12049              		.loc 20 1050 35 is_stmt 0 view .LVU3379
 12050 0c14 0221     		movs	r1, #2
 12051              	.LVL755:
1050:Veno-Echo.cpp **** }
 12052              		.loc 20 1050 35 view .LVU3380
 12053 0c16 2848     		ldr	r0, .L656
 12054              	.LVL756:
1050:Veno-Echo.cpp **** }
 12055              		.loc 20 1050 35 view .LVU3381
 12056 0c18 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12057              	.LVL757:
1050:Veno-Echo.cpp **** }
 12058              		.loc 20 1050 18 view .LVU3382
 12059 0c1c 274B     		ldr	r3, .L656+4
 12060 0c1e 83ED000A 		vstr.32	s0, [r3]
1051:Veno-Echo.cpp **** void Update_feedbackL()
 12061              		.loc 20 1051 1 view .LVU3383
 12062 0c22 FFF720BA 		b	.L507
 12063              	.LVL758:
 12064              	.L517:
1051:Veno-Echo.cpp **** void Update_feedbackL()
 12065              		.loc 20 1051 1 view .LVU3384
 12066              	.LBE2270:
 12067              	.LBE2269:
 328:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12068              		.loc 20 328 13 is_stmt 1 view .LVU3385
 329:Veno-Echo.cpp ****                 {
 12069              		.loc 20 329 17 view .LVU3386
 329:Veno-Echo.cpp ****                 {
 12070              		.loc 20 329 30 is_stmt 0 view .LVU3387
 12071 0c26 264B     		ldr	r3, .L656+8
 329:Veno-Echo.cpp ****                 {
 12072              		.loc 20 329 17 view .LVU3388
 12073 0c28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12074 0c2a 022B     		cmp	r3, #2
 12075 0c2c 3FF41BAA 		beq	.L507
 331:Veno-Echo.cpp ****                 }
 12076              		.loc 20 331 21 is_stmt 1 view .LVU3389
 331:Veno-Echo.cpp ****                 }
 12077              		.loc 20 331 37 is_stmt 0 view .LVU3390
 12078 0c30 FFF7FEFF 		bl	_Z16Update_feedbackLv
 12079              	.LVL759:
 331:Veno-Echo.cpp ****                 }
 12080              		.loc 20 331 37 view .LVU3391
 12081 0c34 FFF717BA 		b	.L507
 12082              	.LVL760:
 12083              	.L516:
 335:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 12084              		.loc 20 335 13 is_stmt 1 view .LVU3392
 336:Veno-Echo.cpp ****             break;
 12085              		.loc 20 336 17 view .LVU3393
 12086              	.LBB2271:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 366


 12087              	.LBI2271:
1137:Veno-Echo.cpp **** {
 12088              		.loc 20 1137 6 view .LVU3394
 12089              	.LBB2272:
1139:Veno-Echo.cpp **** }
 12090              		.loc 20 1139 5 view .LVU3395
1139:Veno-Echo.cpp **** }
 12091              		.loc 20 1139 35 is_stmt 0 view .LVU3396
 12092 0c38 0321     		movs	r1, #3
 12093              	.LVL761:
1139:Veno-Echo.cpp **** }
 12094              		.loc 20 1139 35 view .LVU3397
 12095 0c3a 1F48     		ldr	r0, .L656
 12096              	.LVL762:
1139:Veno-Echo.cpp **** }
 12097              		.loc 20 1139 35 view .LVU3398
 12098 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12099              	.LVL763:
1139:Veno-Echo.cpp **** }
 12100              		.loc 20 1139 18 view .LVU3399
 12101 0c40 204B     		ldr	r3, .L656+12
 12102 0c42 83ED000A 		vstr.32	s0, [r3]
1140:Veno-Echo.cpp **** 
 12103              		.loc 20 1140 1 view .LVU3400
 12104 0c46 FFF70EBA 		b	.L507
 12105              	.LVL764:
 12106              	.L515:
1140:Veno-Echo.cpp **** 
 12107              		.loc 20 1140 1 view .LVU3401
 12108              	.LBE2272:
 12109              	.LBE2271:
 339:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12110              		.loc 20 339 13 is_stmt 1 view .LVU3402
 340:Veno-Echo.cpp ****                 {
 12111              		.loc 20 340 17 view .LVU3403
 340:Veno-Echo.cpp ****                 {
 12112              		.loc 20 340 30 is_stmt 0 view .LVU3404
 12113 0c4a 1D4B     		ldr	r3, .L656+8
 340:Veno-Echo.cpp ****                 {
 12114              		.loc 20 340 17 view .LVU3405
 12115 0c4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12116 0c4e 022B     		cmp	r3, #2
 12117 0c50 3FF409AA 		beq	.L507
 342:Veno-Echo.cpp ****                 }
 12118              		.loc 20 342 21 is_stmt 1 view .LVU3406
 342:Veno-Echo.cpp ****                 }
 12119              		.loc 20 342 37 is_stmt 0 view .LVU3407
 12120 0c54 FFF7FEFF 		bl	_Z16Update_feedbackRv
 12121              	.LVL765:
 342:Veno-Echo.cpp ****                 }
 12122              		.loc 20 342 37 view .LVU3408
 12123 0c58 FFF705BA 		b	.L507
 12124              	.LVL766:
 12125              	.L514:
 346:Veno-Echo.cpp ****                 Update_drywet_CV();
 12126              		.loc 20 346 13 is_stmt 1 view .LVU3409
 347:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 367


 12127              		.loc 20 347 17 view .LVU3410
 12128              	.LBB2273:
 12129              	.LBI2273:
1227:Veno-Echo.cpp **** {
 12130              		.loc 20 1227 6 view .LVU3411
 12131              	.LBB2274:
1229:Veno-Echo.cpp **** }
 12132              		.loc 20 1229 5 view .LVU3412
1229:Veno-Echo.cpp **** }
 12133              		.loc 20 1229 32 is_stmt 0 view .LVU3413
 12134 0c5c 0421     		movs	r1, #4
 12135              	.LVL767:
1229:Veno-Echo.cpp **** }
 12136              		.loc 20 1229 32 view .LVU3414
 12137 0c5e 1648     		ldr	r0, .L656
 12138              	.LVL768:
1229:Veno-Echo.cpp **** }
 12139              		.loc 20 1229 32 view .LVU3415
 12140 0c60 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12141              	.LVL769:
1229:Veno-Echo.cpp **** }
 12142              		.loc 20 1229 15 view .LVU3416
 12143 0c64 184B     		ldr	r3, .L656+16
 12144 0c66 83ED000A 		vstr.32	s0, [r3]
1230:Veno-Echo.cpp **** 
 12145              		.loc 20 1230 1 view .LVU3417
 12146 0c6a FFF7FCB9 		b	.L507
 12147              	.LVL770:
 12148              	.L513:
1230:Veno-Echo.cpp **** 
 12149              		.loc 20 1230 1 view .LVU3418
 12150              	.LBE2274:
 12151              	.LBE2273:
 350:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12152              		.loc 20 350 13 is_stmt 1 view .LVU3419
 351:Veno-Echo.cpp ****                 {
 12153              		.loc 20 351 17 view .LVU3420
 351:Veno-Echo.cpp ****                 {
 12154              		.loc 20 351 30 is_stmt 0 view .LVU3421
 12155 0c6e 144B     		ldr	r3, .L656+8
 351:Veno-Echo.cpp ****                 {
 12156              		.loc 20 351 17 view .LVU3422
 12157 0c70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12158 0c72 022B     		cmp	r3, #2
 12159 0c74 3FF4F7A9 		beq	.L507
 353:Veno-Echo.cpp ****                 }
 12160              		.loc 20 353 21 is_stmt 1 view .LVU3423
 353:Veno-Echo.cpp ****                 }
 12161              		.loc 20 353 34 is_stmt 0 view .LVU3424
 12162 0c78 FFF7FEFF 		bl	_Z13Update_drywetv
 12163              	.LVL771:
 353:Veno-Echo.cpp ****                 }
 12164              		.loc 20 353 34 view .LVU3425
 12165 0c7c FFF7F3B9 		b	.L507
 12166              	.LVL772:
 12167              	.L512:
 357:Veno-Echo.cpp ****                 Update_width_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 368


 12168              		.loc 20 357 13 is_stmt 1 view .LVU3426
 358:Veno-Echo.cpp ****             break;
 12169              		.loc 20 358 17 view .LVU3427
 12170              	.LBB2275:
 12171              	.LBI2275:
1342:Veno-Echo.cpp **** {
 12172              		.loc 20 1342 6 view .LVU3428
 12173              	.LBB2276:
1344:Veno-Echo.cpp **** }
 12174              		.loc 20 1344 5 view .LVU3429
1344:Veno-Echo.cpp **** }
 12175              		.loc 20 1344 30 is_stmt 0 view .LVU3430
 12176 0c80 0521     		movs	r1, #5
 12177              	.LVL773:
1344:Veno-Echo.cpp **** }
 12178              		.loc 20 1344 30 view .LVU3431
 12179 0c82 0D48     		ldr	r0, .L656
 12180              	.LVL774:
1344:Veno-Echo.cpp **** }
 12181              		.loc 20 1344 30 view .LVU3432
 12182 0c84 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12183              	.LVL775:
1344:Veno-Echo.cpp **** }
 12184              		.loc 20 1344 13 view .LVU3433
 12185 0c88 104B     		ldr	r3, .L656+20
 12186 0c8a 83ED000A 		vstr.32	s0, [r3]
1345:Veno-Echo.cpp **** 
 12187              		.loc 20 1345 1 view .LVU3434
 12188 0c8e FFF7EAB9 		b	.L507
 12189              	.LVL776:
 12190              	.L511:
1345:Veno-Echo.cpp **** 
 12191              		.loc 20 1345 1 view .LVU3435
 12192              	.LBE2276:
 12193              	.LBE2275:
 361:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12194              		.loc 20 361 13 is_stmt 1 view .LVU3436
 362:Veno-Echo.cpp ****                 {
 12195              		.loc 20 362 17 view .LVU3437
 362:Veno-Echo.cpp ****                 {
 12196              		.loc 20 362 30 is_stmt 0 view .LVU3438
 12197 0c92 0B4B     		ldr	r3, .L656+8
 362:Veno-Echo.cpp ****                 {
 12198              		.loc 20 362 17 view .LVU3439
 12199 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12200 0c96 022B     		cmp	r3, #2
 12201 0c98 3FF4E5A9 		beq	.L507
 364:Veno-Echo.cpp ****                 }
 12202              		.loc 20 364 21 is_stmt 1 view .LVU3440
 364:Veno-Echo.cpp ****                 }
 12203              		.loc 20 364 33 is_stmt 0 view .LVU3441
 12204 0c9c FFF7FEFF 		bl	_Z12Update_widthv
 12205              	.LVL777:
 364:Veno-Echo.cpp ****                 }
 12206              		.loc 20 364 33 view .LVU3442
 12207 0ca0 FFF7E1B9 		b	.L507
 12208              	.LVL778:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 369


 12209              	.L510:
 368:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12210              		.loc 20 368 13 is_stmt 1 view .LVU3443
 369:Veno-Echo.cpp ****                 {
 12211              		.loc 20 369 17 view .LVU3444
 369:Veno-Echo.cpp ****                 {
 12212              		.loc 20 369 30 is_stmt 0 view .LVU3445
 12213 0ca4 064B     		ldr	r3, .L656+8
 369:Veno-Echo.cpp ****                 {
 12214              		.loc 20 369 17 view .LVU3446
 12215 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12216 0ca8 022B     		cmp	r3, #2
 12217 0caa 3FF4DCA9 		beq	.L507
 371:Veno-Echo.cpp ****                 }
 12218              		.loc 20 371 21 is_stmt 1 view .LVU3447
 371:Veno-Echo.cpp ****                 }
 12219              		.loc 20 371 41 is_stmt 0 view .LVU3448
 12220 0cae FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 12221              	.LVL779:
 371:Veno-Echo.cpp ****                 }
 12222              		.loc 20 371 41 view .LVU3449
 12223 0cb2 FFF7D8B9 		b	.L507
 12224              	.L657:
 12225 0cb6 00BF     		.align	2
 12226              	.L656:
 12227 0cb8 18000000 		.word	.LANCHOR4+24
 12228 0cbc 00000000 		.word	.LANCHOR27
 12229 0cc0 00000000 		.word	.LANCHOR109
 12230 0cc4 00000000 		.word	.LANCHOR39
 12231 0cc8 00000000 		.word	.LANCHOR51
 12232 0ccc 00000000 		.word	.LANCHOR59
 12233              		.cfi_endproc
 12234              	.LFE4309:
 12236              		.section	.text._Z9HardLimitff,"ax",%progbits
 12237              		.align	1
 12238              		.p2align 2,,3
 12239              		.global	_Z9HardLimitff
 12240              		.syntax unified
 12241              		.thumb
 12242              		.thumb_func
 12243              		.fpu fpv5-d16
 12245              	_Z9HardLimitff:
 12246              	.LVL780:
 12247              	.LFB4336:
2001:Veno-Echo.cpp ****     float returnval{};
 12248              		.loc 20 2001 1 is_stmt 1 view -0
 12249              		.cfi_startproc
 12250              		@ args = 0, pretend = 0, frame = 0
 12251              		@ frame_needed = 0, uses_anonymous_args = 0
 12252              		@ link register save eliminated.
2002:Veno-Echo.cpp ****     if (input > limit)
 12253              		.loc 20 2002 5 view .LVU3451
2003:Veno-Echo.cpp ****         returnval = limit;
 12254              		.loc 20 2003 5 view .LVU3452
 12255 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12256 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12257 0008 07DC     		bgt	.L659
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 370


2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12258              		.loc 20 2005 10 view .LVU3453
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12259              		.loc 20 2005 28 is_stmt 0 view .LVU3454
 12260 000a F1EE600A 		vneg.f32	s1, s1
 12261              	.LVL781:
2005:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12262              		.loc 20 2005 10 view .LVU3455
 12263 000e F4EEC00A 		vcmpe.f32	s1, s0
 12264 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2008:Veno-Echo.cpp **** 
 12265              		.loc 20 2008 19 view .LVU3456
 12266 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12267              	.L659:
 12268              	.LVL782:
2010:Veno-Echo.cpp **** }
 12269              		.loc 20 2010 5 is_stmt 1 view .LVU3457
2011:Veno-Echo.cpp **** 
 12270              		.loc 20 2011 1 is_stmt 0 view .LVU3458
 12271 001a B0EE600A 		vmov.f32	s0, s1
 12272              	.LVL783:
2011:Veno-Echo.cpp **** 
 12273              		.loc 20 2011 1 view .LVU3459
 12274 001e 7047     		bx	lr
 12275              		.cfi_endproc
 12276              	.LFE4336:
 12278              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12279              		.align	1
 12280              		.p2align 2,,3
 12281              		.global	_Z10PotCVComboff
 12282              		.syntax unified
 12283              		.thumb
 12284              		.thumb_func
 12285              		.fpu fpv5-d16
 12287              	_Z10PotCVComboff:
 12288              	.LVL784:
 12289              	.LFB4337:
2014:Veno-Echo.cpp ****     float output{};
 12290              		.loc 20 2014 1 is_stmt 1 view -0
 12291              		.cfi_startproc
 12292              		@ args = 0, pretend = 0, frame = 0
 12293              		@ frame_needed = 0, uses_anonymous_args = 0
 12294              		@ link register save eliminated.
2015:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12295              		.loc 20 2015 5 view .LVU3461
2016:Veno-Echo.cpp **** 
 12296              		.loc 20 2016 5 view .LVU3462
2016:Veno-Echo.cpp **** 
 12297              		.loc 20 2016 39 is_stmt 0 view .LVU3463
 12298 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2016:Veno-Echo.cpp **** 
 12299              		.loc 20 2016 49 view .LVU3464
 12300 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2016:Veno-Echo.cpp **** 
 12301              		.loc 20 2016 12 view .LVU3465
 12302 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2016:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 371


 12303              		.loc 20 2016 39 view .LVU3466
 12304 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12305              	.LVL785:
2016:Veno-Echo.cpp **** 
 12306              		.loc 20 2016 49 view .LVU3467
 12307 0010 70EEE60A 		vsub.f32	s1, s1, s13
2016:Veno-Echo.cpp **** 
 12308              		.loc 20 2016 12 view .LVU3468
 12309 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12310              	.LVL786:
2018:Veno-Echo.cpp ****     {
 12311              		.loc 20 2018 5 is_stmt 1 view .LVU3469
 12312 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12313 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12314 0020 06D4     		bmi	.L665
2023:Veno-Echo.cpp ****     {
 12315              		.loc 20 2023 5 view .LVU3470
2025:Veno-Echo.cpp ****     }
 12316              		.loc 20 2025 16 is_stmt 0 view .LVU3471
 12317 0022 B4EE670A 		vcmp.f32	s0, s15
 12318 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12319 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12320              	.LVL787:
2025:Veno-Echo.cpp ****     }
 12321              		.loc 20 2025 16 view .LVU3472
 12322 002e 7047     		bx	lr
 12323              	.LVL788:
 12324              	.L665:
2020:Veno-Echo.cpp ****     }
 12325              		.loc 20 2020 16 view .LVU3473
 12326 0030 9FED010A 		vldr.32	s0, .L667
 12327              	.LVL789:
2028:Veno-Echo.cpp **** }
 12328              		.loc 20 2028 5 is_stmt 1 view .LVU3474
2029:Veno-Echo.cpp **** 
 12329              		.loc 20 2029 1 is_stmt 0 view .LVU3475
 12330 0034 7047     		bx	lr
 12331              	.L668:
 12332 0036 00BF     		.align	2
 12333              	.L667:
 12334 0038 00000000 		.word	0
 12335              		.cfi_endproc
 12336              	.LFE4337:
 12338              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12339              		.align	1
 12340              		.p2align 2,,3
 12341              		.global	_Z16checkPickupStateffbb
 12342              		.syntax unified
 12343              		.thumb
 12344              		.thumb_func
 12345              		.fpu fpv5-d16
 12347              	_Z16checkPickupStateffbb:
 12348              	.LVL790:
 12349              	.LFB4338:
2033:Veno-Echo.cpp ****     bool retval{};
 12350              		.loc 20 2033 1 is_stmt 1 view -0
 12351              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 372


 12352              		@ args = 0, pretend = 0, frame = 0
 12353              		@ frame_needed = 0, uses_anonymous_args = 0
 12354              		@ link register save eliminated.
2034:Veno-Echo.cpp ****     
 12355              		.loc 20 2034 5 view .LVU3477
2036:Veno-Echo.cpp ****     {
 12356              		.loc 20 2036 5 view .LVU3478
 12357 0000 69B1     		cbz	r1, .L670
2038:Veno-Echo.cpp ****         {
 12358              		.loc 20 2038 9 view .LVU3479
 12359              	.LVL791:
 12360              	.LBB2277:
 12361              	.LBI2277:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12362              		.loc 21 75 3 view .LVU3480
 12363              	.LBB2278:
 12364              		.loc 21 76 5 view .LVU3481
 12365              		.loc 21 76 5 is_stmt 0 view .LVU3482
 12366              	.LBE2278:
 12367              	.LBE2277:
2038:Veno-Echo.cpp ****         {
 12368              		.loc 20 2038 15 view .LVU3483
 12369 0002 70EE600A 		vsub.f32	s1, s0, s1
 12370              	.LVL792:
2038:Veno-Echo.cpp ****         {
 12371              		.loc 20 2038 9 view .LVU3484
 12372 0006 DFED0D7A 		vldr.32	s15, .L673
 12373              	.LBB2280:
 12374              	.LBB2279:
 12375              		.loc 21 76 31 view .LVU3485
 12376 000a B0EEE00A 		vabs.f32	s0, s1
 12377              	.LVL793:
 12378              		.loc 21 76 31 view .LVU3486
 12379              	.LBE2279:
 12380              	.LBE2280:
2038:Veno-Echo.cpp ****         {
 12381              		.loc 20 2038 9 view .LVU3487
 12382 000e B4EEE70A 		vcmpe.f32	s0, s15
 12383 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12384 0016 D4BF     		ite	le
 12385 0018 0120     		movle	r0, #1
 12386              	.LVL794:
2038:Veno-Echo.cpp ****         {
 12387              		.loc 20 2038 9 view .LVU3488
 12388 001a 0020     		movgt	r0, #0
 12389 001c 7047     		bx	lr
 12390              	.LVL795:
 12391              	.L670:
2050:Veno-Echo.cpp ****     {
 12392              		.loc 20 2050 5 is_stmt 1 view .LVU3489
 12393 001e 60B9     		cbnz	r0, .L671
2052:Veno-Echo.cpp ****         {
 12394              		.loc 20 2052 9 view .LVU3490
 12395              	.LVL796:
 12396              	.LBB2281:
 12397              	.LBI2281:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 373


 12398              		.loc 21 75 3 view .LVU3491
 12399              	.LBB2282:
 12400              		.loc 21 76 5 view .LVU3492
 12401              		.loc 21 76 5 is_stmt 0 view .LVU3493
 12402              	.LBE2282:
 12403              	.LBE2281:
2052:Veno-Echo.cpp ****         {
 12404              		.loc 20 2052 15 view .LVU3494
 12405 0020 30EE600A 		vsub.f32	s0, s0, s1
 12406              	.LVL797:
2052:Veno-Echo.cpp ****         {
 12407              		.loc 20 2052 9 view .LVU3495
 12408 0024 DFED057A 		vldr.32	s15, .L673
 12409              	.LBB2284:
 12410              	.LBB2283:
 12411              		.loc 21 76 31 view .LVU3496
 12412 0028 B0EEC00A 		vabs.f32	s0, s0
 12413              	.LBE2283:
 12414              	.LBE2284:
2052:Veno-Echo.cpp ****         {
 12415              		.loc 20 2052 9 view .LVU3497
 12416 002c B4EEE70A 		vcmpe.f32	s0, s15
 12417 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12418 0034 CCBF     		ite	gt
 12419 0036 0120     		movgt	r0, #1
 12420              	.LVL798:
2052:Veno-Echo.cpp ****         {
 12421              		.loc 20 2052 9 view .LVU3498
 12422 0038 0020     		movle	r0, #0
 12423              	.L671:
 12424              	.LVL799:
2069:Veno-Echo.cpp **** 
 12425              		.loc 20 2069 5 is_stmt 1 view .LVU3499
2071:Veno-Echo.cpp **** 
 12426              		.loc 20 2071 1 is_stmt 0 view .LVU3500
 12427 003a 7047     		bx	lr
 12428              	.L674:
 12429              		.align	2
 12430              	.L673:
 12431 003c 0AD7A33B 		.word	1000593162
 12432              		.cfi_endproc
 12433              	.LFE4338:
 12435              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12436              		.align	1
 12437              		.p2align 2,,3
 12438              		.global	_Z20checkPickupState_altff11pickupStateb
 12439              		.syntax unified
 12440              		.thumb
 12441              		.thumb_func
 12442              		.fpu fpv5-d16
 12444              	_Z20checkPickupState_altff11pickupStateb:
 12445              	.LVL800:
 12446              	.LFB4339:
2075:Veno-Echo.cpp ****     pickupState retval{};
 12447              		.loc 20 2075 1 is_stmt 1 view -0
 12448              		.cfi_startproc
 12449              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 374


 12450              		@ frame_needed = 0, uses_anonymous_args = 0
 12451              		@ link register save eliminated.
2076:Veno-Echo.cpp **** 
 12452              		.loc 20 2076 5 view .LVU3502
2078:Veno-Echo.cpp ****     {
 12453              		.loc 20 2078 5 view .LVU3503
 12454 0000 A1B1     		cbz	r1, .L676
2080:Veno-Echo.cpp ****         {
 12455              		.loc 20 2080 9 view .LVU3504
2080:Veno-Echo.cpp ****         {
 12456              		.loc 20 2080 31 is_stmt 0 view .LVU3505
 12457 0002 DFED1A7A 		vldr.32	s15, .L693
 12458 0006 30EEE77A 		vsub.f32	s14, s1, s15
2080:Veno-Echo.cpp ****         {
 12459              		.loc 20 2080 9 view .LVU3506
 12460 000a B4EEC07A 		vcmpe.f32	s14, s0
 12461 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12462 0012 01DD     		ble	.L691
 12463 0014 0020     		movs	r0, #0
 12464              	.LVL801:
2080:Veno-Echo.cpp ****         {
 12465              		.loc 20 2080 9 view .LVU3507
 12466 0016 7047     		bx	lr
 12467              	.LVL802:
 12468              	.L691:
2085:Veno-Echo.cpp ****         {
 12469              		.loc 20 2085 14 is_stmt 1 view .LVU3508
2085:Veno-Echo.cpp ****         {
 12470              		.loc 20 2085 36 is_stmt 0 view .LVU3509
 12471 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12472              	.LVL803:
2085:Veno-Echo.cpp ****         {
 12473              		.loc 20 2085 14 view .LVU3510
 12474 001c F4EEC00A 		vcmpe.f32	s1, s0
 12475 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2092:Veno-Echo.cpp ****         }
 12476              		.loc 20 2092 20 view .LVU3511
 12477 0024 4CBF     		ite	mi
 12478 0026 0120     		movmi	r0, #1
 12479              	.LVL804:
2092:Veno-Echo.cpp ****         }
 12480              		.loc 20 2092 20 view .LVU3512
 12481 0028 0220     		movpl	r0, #2
 12482 002a 7047     		bx	lr
 12483              	.LVL805:
 12484              	.L676:
2098:Veno-Echo.cpp ****         {
 12485              		.loc 20 2098 9 is_stmt 1 view .LVU3513
 12486 002c 0128     		cmp	r0, #1
 12487 002e 04D0     		beq	.L679
 12488 0030 0228     		cmp	r0, #2
 12489 0032 01D0     		beq	.L677
 12490 0034 68B1     		cbz	r0, .L692
 12491 0036 0846     		mov	r0, r1
 12492              	.LVL806:
 12493              	.L677:
2119:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 375


 12494              		.loc 20 2119 5 view .LVU3514
2120:Veno-Echo.cpp **** 
 12495              		.loc 20 2120 1 is_stmt 0 view .LVU3515
 12496 0038 7047     		bx	lr
 12497              	.LVL807:
 12498              	.L679:
2107:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12499              		.loc 20 2107 13 is_stmt 1 view .LVU3516
2108:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12500              		.loc 20 2108 13 view .LVU3517
2108:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12501              		.loc 20 2108 35 is_stmt 0 view .LVU3518
 12502 003a DFED0C7A 		vldr.32	s15, .L693
 12503 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12504              	.LVL808:
2108:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12505              		.loc 20 2108 13 view .LVU3519
 12506 0042 F4EEC00A 		vcmpe.f32	s1, s0
 12507 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12508 004a CCBF     		ite	gt
 12509 004c 0220     		movgt	r0, #2
 12510              	.LVL809:
2108:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12511              		.loc 20 2108 13 view .LVU3520
 12512 004e 0120     		movle	r0, #1
 12513 0050 7047     		bx	lr
 12514              	.LVL810:
 12515              	.L692:
2100:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12516              		.loc 20 2100 13 is_stmt 1 view .LVU3521
2101:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12517              		.loc 20 2101 13 view .LVU3522
2101:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12518              		.loc 20 2101 35 is_stmt 0 view .LVU3523
 12519 0052 DFED067A 		vldr.32	s15, .L693
 12520 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12521              	.LVL811:
2101:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12522              		.loc 20 2101 13 view .LVU3524
 12523 005a F4EEC00A 		vcmpe.f32	s1, s0
 12524 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12525 0062 4CBF     		ite	mi
 12526 0064 0220     		movmi	r0, #2
 12527              	.LVL812:
2101:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12528              		.loc 20 2101 13 view .LVU3525
 12529 0066 0020     		movpl	r0, #0
 12530 0068 7047     		bx	lr
 12531              	.L694:
 12532 006a 00BF     		.align	2
 12533              	.L693:
 12534 006c 0AD7A33B 		.word	1000593162
 12535              		.cfi_endproc
 12536              	.LFE4339:
 12538              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12539              		.align	1
 12540              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 376


 12541              		.global	_Z11GetTapRatio9TapRatios
 12542              		.syntax unified
 12543              		.thumb
 12544              		.thumb_func
 12545              		.fpu fpv5-d16
 12547              	_Z11GetTapRatio9TapRatios:
 12548              	.LVL813:
 12549              	.LFB4340:
2123:Veno-Echo.cpp **** double retVal{};
 12550              		.loc 20 2123 1 is_stmt 1 view -0
 12551              		.cfi_startproc
 12552              		@ args = 0, pretend = 0, frame = 0
 12553              		@ frame_needed = 0, uses_anonymous_args = 0
 12554              		@ link register save eliminated.
2124:Veno-Echo.cpp ****     switch(ratio)
 12555              		.loc 20 2124 1 view .LVU3527
2125:Veno-Echo.cpp ****     {
 12556              		.loc 20 2125 5 view .LVU3528
 12557 0000 0138     		subs	r0, r0, #1
 12558              	.LVL814:
2125:Veno-Echo.cpp ****     {
 12559              		.loc 20 2125 5 is_stmt 0 view .LVU3529
 12560 0002 C0B2     		uxtb	r0, r0
 12561 0004 0228     		cmp	r0, #2
 12562 0006 05D8     		bhi	.L697
 12563 0008 044B     		ldr	r3, .L698
 12564 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12565 000e 90ED000B 		vldr.64	d0, [r0]
 12566 0012 7047     		bx	lr
 12567              	.L697:
2123:Veno-Echo.cpp **** double retVal{};
 12568              		.loc 20 2123 1 view .LVU3530
 12569 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12570              	.LVL815:
 12571              		.loc 20 2148 1 is_stmt 1 view .LVU3531
2149:Veno-Echo.cpp **** }
 12572              		.loc 20 2149 1 is_stmt 0 view .LVU3532
 12573 0018 7047     		bx	lr
 12574              	.L699:
 12575 001a 00BF     		.align	2
 12576              	.L698:
 12577 001c 00000000 		.word	.LANCHOR25
 12578              		.cfi_endproc
 12579              	.LFE4340:
 12581              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12582              		.align	1
 12583              		.p2align 2,,3
 12584              		.syntax unified
 12585              		.thumb
 12586              		.thumb_func
 12587              		.fpu fpv5-d16
 12589              	_GLOBAL__sub_I_delMemsL:
 12590              	.LFB4919:
 12591              		.loc 20 2149 1 is_stmt 1 view -0
 12592              		.cfi_startproc
 12593              		@ args = 0, pretend = 0, frame = 0
 12594              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 377


 12595              	.LBB2437:
 12596              	.LBI2437:
 12597              		.loc 20 2149 1 view .LVU3534
 12598              	.LVL816:
 12599              	.LBB2438:
 12600              	.LBB2439:
 12601              	.LBI2439:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12602              		.loc 3 21 5 view .LVU3535
 12603              	.LBB2440:
 12604              	.LBB2441:
 12605              	.LBI2441:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12606              		.loc 7 36 5 view .LVU3536
 12607              	.LBE2441:
 12608              	.LBE2440:
 12609              	.LBE2439:
 12610              	.LBE2438:
 12611              	.LBE2437:
 12612              		.loc 20 2149 1 is_stmt 0 view .LVU3537
 12613 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12614              		.cfi_def_cfa_offset 24
 12615              		.cfi_offset 4, -24
 12616              		.cfi_offset 5, -20
 12617              		.cfi_offset 6, -16
 12618              		.cfi_offset 7, -12
 12619              		.cfi_offset 8, -8
 12620              		.cfi_offset 14, -4
 12621              	.LBB2558:
 12622              	.LBB2554:
 12623              	.LBB2456:
 12624              	.LBB2454:
 12625              	.LBB2446:
 12626              	.LBB2442:
 12627              	.LBB2443:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12628              		.loc 7 36 35 view .LVU3538
 12629 0004 9848     		ldr	r0, .L702
 12630 0006 0026     		movs	r6, #0
 12631              	.LBE2443:
 12632              	.LBE2442:
 12633              	.LBE2446:
 12634              	.LBE2454:
 12635              	.LBE2456:
 12636              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 378


  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12637              		.loc 26 33 18 view .LVU3539
 12638 0008 984C     		ldr	r4, .L702+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12639              		.loc 20 40 12 view .LVU3540
 12640 000a 994D     		ldr	r5, .L702+8
 12641              		.loc 26 33 18 view .LVU3541
 12642 000c 2246     		mov	r2, r4
 12643 000e 9949     		ldr	r1, .L702+12
 12644              	.LBB2457:
 12645              	.LBB2455:
 12646              	.LBB2447:
 12647              	.LBB2445:
 12648              	.LBB2444:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12649              		.loc 7 36 35 view .LVU3542
 12650 0010 4661     		str	r6, [r0, #20]
 12651              	.LVL817:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12652              		.loc 7 36 35 view .LVU3543
 12653              	.LBE2444:
 12654              	.LBE2445:
 12655              	.LBE2447:
 12656              	.LBB2448:
 12657              	.LBI2448:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12658              		.loc 6 84 5 is_stmt 1 view .LVU3544
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12659              		.loc 6 84 5 is_stmt 0 view .LVU3545
 12660              	.LBE2448:
 12661              	.LBB2449:
 12662              	.LBI2449:
 12663              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 379


   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 380


  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12664              		.loc 27 83 5 is_stmt 1 view .LVU3546
 12665              	.LBB2450:
 12666              	.LBB2451:
 12667              		.loc 27 83 33 is_stmt 0 view .LVU3547
 12668 0012 0662     		str	r6, [r0, #32]
 12669              	.LVL818:
 12670              		.loc 27 83 33 view .LVU3548
 12671              	.LBE2451:
 12672              	.LBE2450:
 12673              	.LBE2449:
 12674              	.LBB2452:
 12675              	.LBI2452:
  40:../libdaisy/src/hid/usb.h **** 
 12676              		.loc 5 40 5 is_stmt 1 view .LVU3549
  40:../libdaisy/src/hid/usb.h **** 
 12677              		.loc 5 40 5 is_stmt 0 view .LVU3550
 12678              	.LBE2452:
 12679              	.LBB2453:
 12680              	.LBI2453:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12681              		.loc 4 56 5 is_stmt 1 view .LVU3551
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12682              		.loc 4 56 5 is_stmt 0 view .LVU3552
 12683              	.LBE2453:
 12684              	.LBE2455:
 12685              	.LBE2457:
 12686              		.loc 26 33 18 view .LVU3553
 12687 0014 FFF7FEFF 		bl	__aeabi_atexit
 12688              	.LVL819:
 12689              	.LBB2458:
 12690              	.LBI2458:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12691              		.loc 10 21 5 is_stmt 1 view .LVU3554
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12692              		.loc 10 21 5 is_stmt 0 view .LVU3555
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 381


 12693              	.LBE2458:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12694              		.loc 20 40 12 view .LVU3556
 12695 0018 2246     		mov	r2, r4
 12696 001a 2946     		mov	r1, r5
 12697 001c 9648     		ldr	r0, .L702+16
 12698 001e FFF7FEFF 		bl	__aeabi_atexit
 12699              	.LVL820:
 12700              	.LBB2459:
 12701              	.LBI2459:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12702              		.loc 10 21 5 is_stmt 1 view .LVU3557
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12703              		.loc 10 21 5 is_stmt 0 view .LVU3558
 12704              	.LBE2459:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12705              		.loc 20 41 12 view .LVU3559
 12706 0022 2246     		mov	r2, r4
 12707 0024 2946     		mov	r1, r5
 12708 0026 9548     		ldr	r0, .L702+20
 12709 0028 FFF7FEFF 		bl	__aeabi_atexit
 12710              	.LVL821:
 12711              	.LBB2460:
 12712              	.LBI2460:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12713              		.loc 10 21 5 is_stmt 1 view .LVU3560
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12714              		.loc 10 21 5 is_stmt 0 view .LVU3561
 12715              	.LBE2460:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12716              		.loc 20 42 12 view .LVU3562
 12717 002c 2246     		mov	r2, r4
 12718 002e 2946     		mov	r1, r5
 12719 0030 9348     		ldr	r0, .L702+24
 12720 0032 FFF7FEFF 		bl	__aeabi_atexit
 12721              	.LVL822:
 12722              	.LBB2461:
 12723              	.LBI2461:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12724              		.loc 10 21 5 is_stmt 1 view .LVU3563
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12725              		.loc 10 21 5 is_stmt 0 view .LVU3564
 12726              	.LBE2461:
  43:Veno-Echo.cpp **** 
 12727              		.loc 20 43 12 view .LVU3565
 12728 0036 2246     		mov	r2, r4
 12729 0038 2946     		mov	r1, r5
 12730 003a 9248     		ldr	r0, .L702+28
 12731 003c FFF7FEFF 		bl	__aeabi_atexit
 12732              	.LVL823:
 12733              	.LBB2462:
 12734              	.LBI2462:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12735              		.loc 10 21 5 is_stmt 1 view .LVU3566
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12736              		.loc 10 21 5 is_stmt 0 view .LVU3567
 12737              	.LBE2462:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 382


  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12738              		.loc 20 45 12 view .LVU3568
 12739 0040 2246     		mov	r2, r4
 12740 0042 2946     		mov	r1, r5
 12741 0044 9048     		ldr	r0, .L702+32
 12742 0046 FFF7FEFF 		bl	__aeabi_atexit
 12743              	.LVL824:
 12744              	.LBB2463:
 12745              	.LBI2463:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12746              		.loc 10 21 5 is_stmt 1 view .LVU3569
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12747              		.loc 10 21 5 is_stmt 0 view .LVU3570
 12748              	.LBE2463:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12749              		.loc 20 46 12 view .LVU3571
 12750 004a 2246     		mov	r2, r4
 12751 004c 2946     		mov	r1, r5
 12752 004e 8F48     		ldr	r0, .L702+36
 12753 0050 FFF7FEFF 		bl	__aeabi_atexit
 12754              	.LVL825:
 12755              	.LBB2464:
 12756              	.LBI2464:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12757              		.loc 10 21 5 is_stmt 1 view .LVU3572
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12758              		.loc 10 21 5 is_stmt 0 view .LVU3573
 12759              	.LBE2464:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12760              		.loc 20 47 12 view .LVU3574
 12761 0054 2246     		mov	r2, r4
 12762 0056 2946     		mov	r1, r5
 12763 0058 8D48     		ldr	r0, .L702+40
 12764 005a FFF7FEFF 		bl	__aeabi_atexit
 12765              	.LVL826:
 12766              	.LBB2465:
 12767              	.LBI2465:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12768              		.loc 10 21 5 is_stmt 1 view .LVU3575
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12769              		.loc 10 21 5 is_stmt 0 view .LVU3576
 12770              	.LBE2465:
  48:Veno-Echo.cpp **** 
 12771              		.loc 20 48 12 view .LVU3577
 12772 005e 2246     		mov	r2, r4
 12773 0060 2946     		mov	r1, r5
 12774 0062 8C48     		ldr	r0, .L702+44
 12775 0064 FFF7FEFF 		bl	__aeabi_atexit
 12776              	.LVL827:
 12777              	.LBB2466:
 12778              	.LBI2466:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12779              		.loc 9 15 5 is_stmt 1 view .LVU3578
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12780              		.loc 9 15 5 is_stmt 0 view .LVU3579
 12781              	.LBE2466:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 383


 12782              		.loc 20 50 19 view .LVU3580
 12783 0068 2246     		mov	r2, r4
 12784 006a 8B49     		ldr	r1, .L702+48
 12785              	.LBB2467:
 12786              	.LBB2468:
 12787              	.LBB2469:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12788              		.loc 12 45 13 view .LVU3581
 12789 006c 0025     		movs	r5, #0
 12790              	.LBE2469:
 12791              	.LBE2468:
 12792              	.LBE2467:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12793              		.loc 20 50 19 view .LVU3582
 12794 006e 8B48     		ldr	r0, .L702+52
 12795 0070 FFF7FEFF 		bl	__aeabi_atexit
 12796              	.LVL828:
 12797              	.LBB2474:
 12798              	.LBI2467:
  43:envFollow.h   ****     {
 12799              		.loc 12 43 5 is_stmt 1 view .LVU3583
 12800              	.LBB2472:
 12801              	.LBB2470:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12802              		.loc 12 45 9 view .LVU3584
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12803              		.loc 12 48 11 is_stmt 0 view .LVU3585
 12804 0074 8A4F     		ldr	r7, .L702+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12805              		.loc 12 45 13 view .LVU3586
 12806 0076 8B48     		ldr	r0, .L702+60
 12807              	.LBE2470:
 12808              	.LBE2472:
 12809              	.LBE2474:
  51:Veno-Echo.cpp **** 
 12810              		.loc 20 51 18 view .LVU3587
 12811 0078 2246     		mov	r2, r4
 12812 007a 8B49     		ldr	r1, .L702+64
 12813              	.LBB2475:
 12814              	.LBB2473:
 12815              	.LBB2471:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12816              		.loc 12 45 13 view .LVU3588
 12817 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12818              		.loc 12 46 9 is_stmt 1 view .LVU3589
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12819              		.loc 12 46 20 is_stmt 0 view .LVU3590
 12820 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12821              		.loc 12 47 9 is_stmt 1 view .LVU3591
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12822              		.loc 12 47 17 is_stmt 0 view .LVU3592
 12823 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12824              		.loc 12 48 9 is_stmt 1 view .LVU3593
  50:envFollow.h   ****     }  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 384


 12825              		.loc 12 50 21 is_stmt 0 view .LVU3594
 12826 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12827              		.loc 12 48 11 view .LVU3595
 12828 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12829              		.loc 12 49 9 is_stmt 1 view .LVU3596
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12830              		.loc 12 49 15 is_stmt 0 view .LVU3597
 12831 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12832              		.loc 12 50 9 is_stmt 1 view .LVU3598
 12833              	.LVL829:
  50:envFollow.h   ****     }  
 12834              		.loc 12 50 9 is_stmt 0 view .LVU3599
 12835              	.LBE2471:
 12836              	.LBE2473:
 12837              	.LBE2475:
  51:Veno-Echo.cpp **** 
 12838              		.loc 20 51 18 view .LVU3600
 12839 0088 FFF7FEFF 		bl	__aeabi_atexit
 12840              	.LVL830:
 12841              	.LBB2476:
 12842              	.LBI2476:
  43:envFollow.h   ****     {
 12843              		.loc 12 43 5 is_stmt 1 view .LVU3601
 12844              	.LBB2477:
 12845              	.LBB2478:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12846              		.loc 12 45 9 view .LVU3602
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12847              		.loc 12 45 13 is_stmt 0 view .LVU3603
 12848 008c 8748     		ldr	r0, .L702+68
 12849              	.LBE2478:
 12850              	.LBE2477:
 12851              	.LBE2476:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12852              		.loc 20 56 76 view .LVU3604
 12853 008e DFF8E482 		ldr	r8, .L702+268
  51:Veno-Echo.cpp **** 
 12854              		.loc 20 51 27 view .LVU3605
 12855 0092 2246     		mov	r2, r4
 12856 0094 8449     		ldr	r1, .L702+64
 12857              	.LBB2481:
 12858              	.LBB2480:
 12859              	.LBB2479:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12860              		.loc 12 45 13 view .LVU3606
 12861 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12862              		.loc 12 46 9 is_stmt 1 view .LVU3607
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12863              		.loc 12 46 20 is_stmt 0 view .LVU3608
 12864 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12865              		.loc 12 47 9 is_stmt 1 view .LVU3609
  47:envFollow.h   ****         w = 0.0001f;        //weighting
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 385


 12866              		.loc 12 47 17 is_stmt 0 view .LVU3610
 12867 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12868              		.loc 12 48 9 is_stmt 1 view .LVU3611
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12869              		.loc 12 48 11 is_stmt 0 view .LVU3612
 12870 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12871              		.loc 12 49 9 is_stmt 1 view .LVU3613
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12872              		.loc 12 49 15 is_stmt 0 view .LVU3614
 12873 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12874              		.loc 12 50 9 is_stmt 1 view .LVU3615
  50:envFollow.h   ****     }  
 12875              		.loc 12 50 21 is_stmt 0 view .LVU3616
 12876 00a0 8560     		str	r5, [r0, #8]	@ float
 12877              	.LVL831:
  50:envFollow.h   ****     }  
 12878              		.loc 12 50 21 view .LVU3617
 12879              	.LBE2479:
 12880              	.LBE2480:
 12881              	.LBE2481:
  51:Veno-Echo.cpp **** 
 12882              		.loc 20 51 27 view .LVU3618
 12883 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12884              	.LVL832:
 12885              	.LBB2482:
 12886              	.LBI2482:
  48:delayline_multitap.h ****     {
 12887              		.loc 18 48 5 is_stmt 1 view .LVU3619
  48:delayline_multitap.h ****     {
 12888              		.loc 18 48 5 is_stmt 0 view .LVU3620
 12889              	.LBE2482:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12890              		.loc 20 59 80 view .LVU3621
 12891 00a6 824D     		ldr	r5, .L702+72
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12892              		.loc 20 56 76 view .LVU3622
 12893 00a8 2246     		mov	r2, r4
 12894 00aa 4146     		mov	r1, r8
 12895 00ac 8148     		ldr	r0, .L702+76
 12896 00ae FFF7FEFF 		bl	__aeabi_atexit
 12897              	.LVL833:
 12898              	.LBB2483:
 12899              	.LBI2483:
  48:delayline_multitap.h ****     {
 12900              		.loc 18 48 5 is_stmt 1 view .LVU3623
  48:delayline_multitap.h ****     {
 12901              		.loc 18 48 5 is_stmt 0 view .LVU3624
 12902              	.LBE2483:
  57:Veno-Echo.cpp **** 
 12903              		.loc 20 57 76 view .LVU3625
 12904 00b2 2246     		mov	r2, r4
 12905 00b4 4146     		mov	r1, r8
 12906 00b6 8048     		ldr	r0, .L702+80
 12907 00b8 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 386


 12908              	.LVL834:
 12909              	.LBB2484:
 12910              	.LBI2484:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12911              		.loc 19 38 5 is_stmt 1 view .LVU3626
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12912              		.loc 19 38 5 is_stmt 0 view .LVU3627
 12913              	.LBE2484:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12914              		.loc 20 98 12 view .LVU3628
 12915 00bc 7F4F     		ldr	r7, .L702+84
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12916              		.loc 20 59 80 view .LVU3629
 12917 00be 2246     		mov	r2, r4
 12918 00c0 2946     		mov	r1, r5
 12919 00c2 7F48     		ldr	r0, .L702+88
 12920 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12921              	.LVL835:
 12922              	.LBB2485:
 12923              	.LBI2485:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12924              		.loc 19 38 5 is_stmt 1 view .LVU3630
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12925              		.loc 19 38 5 is_stmt 0 view .LVU3631
 12926              	.LBE2485:
  60:Veno-Echo.cpp **** 
 12927              		.loc 20 60 80 view .LVU3632
 12928 00c8 2246     		mov	r2, r4
 12929 00ca 2946     		mov	r1, r5
 12930 00cc 7D48     		ldr	r0, .L702+92
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12931              		.loc 20 102 11 view .LVU3633
 12932 00ce 7E4D     		ldr	r5, .L702+96
  60:Veno-Echo.cpp **** 
 12933              		.loc 20 60 80 view .LVU3634
 12934 00d0 FFF7FEFF 		bl	__aeabi_atexit
 12935              	.LVL836:
 12936              	.LBB2486:
 12937              	.LBI2486:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12938              		.loc 17 49 1 is_stmt 1 view .LVU3635
 12939              	.LBB2487:
 12940              	.LBB2488:
 12941              	.LBI2488:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12942              		.loc 14 47 1 view .LVU3636
 12943              	.LBB2489:
 12944              	.LBB2490:
 12945              	.LBI2490:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12946              		.loc 16 24 5 view .LVU3637
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12947              		.loc 16 24 5 is_stmt 0 view .LVU3638
 12948              	.LBE2490:
 12949              	.LBB2491:
 12950              	.LBI2491:
  15:oscillator_p.h ****     ~Oscillator_p() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 387


 12951              		.loc 15 15 5 is_stmt 1 view .LVU3639
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12952              		.loc 15 15 5 is_stmt 0 view .LVU3640
 12953              	.LBE2491:
 12954              	.LBE2489:
 12955              	.LBE2488:
 12956              	.LBE2487:
 12957              	.LBE2486:
 12958              	.LBE2554:
 12959              	.LBE2558:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12960              		.loc 17 49 14 is_stmt 1 view .LVU3641
  49:DelayMulti.h  **** ~DelayMulti() {}
 12961              		.loc 17 49 14 view .LVU3642
 12962              	.LBB2559:
 12963              	.LBB2555:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12964              		.loc 20 98 12 is_stmt 0 view .LVU3643
 12965 00d4 2246     		mov	r2, r4
 12966 00d6 3946     		mov	r1, r7
 12967 00d8 7C48     		ldr	r0, .L702+100
 12968 00da FFF7FEFF 		bl	__aeabi_atexit
 12969              	.LVL837:
 12970              	.LBB2492:
 12971              	.LBI2492:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12972              		.loc 17 49 1 is_stmt 1 view .LVU3644
 12973              	.LBB2493:
 12974              	.LBB2494:
 12975              	.LBI2494:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12976              		.loc 14 47 1 view .LVU3645
 12977              	.LBB2495:
 12978              	.LBB2496:
 12979              	.LBI2496:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12980              		.loc 16 24 5 view .LVU3646
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12981              		.loc 16 24 5 is_stmt 0 view .LVU3647
 12982              	.LBE2496:
 12983              	.LBB2497:
 12984              	.LBI2497:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12985              		.loc 15 15 5 is_stmt 1 view .LVU3648
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12986              		.loc 15 15 5 is_stmt 0 view .LVU3649
 12987              	.LBE2497:
 12988              	.LBE2495:
 12989              	.LBE2494:
 12990              	.LBE2493:
 12991              	.LBE2492:
 12992              	.LBE2555:
 12993              	.LBE2559:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12994              		.loc 17 49 14 is_stmt 1 view .LVU3650
  49:DelayMulti.h  **** ~DelayMulti() {}
 12995              		.loc 17 49 14 view .LVU3651
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 388


 12996              	.LBB2560:
 12997              	.LBB2556:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12998              		.loc 20 98 19 is_stmt 0 view .LVU3652
 12999 00de 2246     		mov	r2, r4
 13000 00e0 3946     		mov	r1, r7
 13001 00e2 7B48     		ldr	r0, .L702+104
 13002 00e4 FFF7FEFF 		bl	__aeabi_atexit
 13003              	.LVL838:
 13004              	.LBB2498:
 13005              	.LBI2498:
  78:LEDs.h        ****     ~ButtonLED() {}
 13006              		.loc 14 78 5 is_stmt 1 view .LVU3653
 13007              	.LBB2499:
 13008              	.LBB2500:
 13009              	.LBI2500:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13010              		.loc 1 40 5 view .LVU3654
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13011              		.loc 1 40 5 is_stmt 0 view .LVU3655
 13012              	.LBE2500:
 13013              	.LBB2501:
 13014              	.LBI2501:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13015              		.loc 16 24 5 is_stmt 1 view .LVU3656
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13016              		.loc 16 24 5 is_stmt 0 view .LVU3657
 13017              	.LBE2501:
 13018              	.LBE2499:
 13019              	.LBE2498:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13020              		.loc 20 102 11 view .LVU3658
 13021 00e8 2246     		mov	r2, r4
 13022 00ea 2946     		mov	r1, r5
 13023 00ec 7948     		ldr	r0, .L702+108
 13024 00ee FFF7FEFF 		bl	__aeabi_atexit
 13025              	.LVL839:
 13026              	.LBB2502:
 13027              	.LBI2502:
  78:LEDs.h        ****     ~ButtonLED() {}
 13028              		.loc 14 78 5 is_stmt 1 view .LVU3659
 13029              	.LBB2503:
 13030              	.LBB2504:
 13031              	.LBI2504:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13032              		.loc 1 40 5 view .LVU3660
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13033              		.loc 1 40 5 is_stmt 0 view .LVU3661
 13034              	.LBE2504:
 13035              	.LBB2505:
 13036              	.LBI2505:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13037              		.loc 16 24 5 is_stmt 1 view .LVU3662
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13038              		.loc 16 24 5 is_stmt 0 view .LVU3663
 13039              	.LBE2505:
 13040              	.LBE2503:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 389


 13041              	.LBE2502:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13042              		.loc 20 102 18 view .LVU3664
 13043 00f2 2246     		mov	r2, r4
 13044 00f4 2946     		mov	r1, r5
 13045 00f6 7848     		ldr	r0, .L702+112
 13046 00f8 FFF7FEFF 		bl	__aeabi_atexit
 13047              	.LVL840:
 13048              	.LBB2506:
 13049              	.LBI2506:
  78:LEDs.h        ****     ~ButtonLED() {}
 13050              		.loc 14 78 5 is_stmt 1 view .LVU3665
 13051              	.LBB2507:
 13052              	.LBB2508:
 13053              	.LBI2508:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13054              		.loc 1 40 5 view .LVU3666
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13055              		.loc 1 40 5 is_stmt 0 view .LVU3667
 13056              	.LBE2508:
 13057              	.LBB2509:
 13058              	.LBI2509:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13059              		.loc 16 24 5 is_stmt 1 view .LVU3668
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13060              		.loc 16 24 5 is_stmt 0 view .LVU3669
 13061              	.LBE2509:
 13062              	.LBE2507:
 13063              	.LBE2506:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13064              		.loc 20 102 25 view .LVU3670
 13065 00fc 2246     		mov	r2, r4
 13066 00fe 2946     		mov	r1, r5
 13067 0100 7648     		ldr	r0, .L702+116
 13068 0102 FFF7FEFF 		bl	__aeabi_atexit
 13069              	.LVL841:
 13070              	.LBB2510:
 13071              	.LBI2510:
  78:LEDs.h        ****     ~ButtonLED() {}
 13072              		.loc 14 78 5 is_stmt 1 view .LVU3671
 13073              	.LBB2511:
 13074              	.LBB2512:
 13075              	.LBI2512:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13076              		.loc 1 40 5 view .LVU3672
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13077              		.loc 1 40 5 is_stmt 0 view .LVU3673
 13078              	.LBE2512:
 13079              	.LBB2513:
 13080              	.LBI2513:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13081              		.loc 16 24 5 is_stmt 1 view .LVU3674
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13082              		.loc 16 24 5 is_stmt 0 view .LVU3675
 13083              	.LBE2513:
 13084              	.LBE2511:
 13085              	.LBE2510:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 390


 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13086              		.loc 20 102 34 view .LVU3676
 13087 0106 2246     		mov	r2, r4
 13088 0108 2946     		mov	r1, r5
 13089 010a 7548     		ldr	r0, .L702+120
 13090 010c FFF7FEFF 		bl	__aeabi_atexit
 13091              	.LVL842:
 13092              	.LBB2514:
 13093              	.LBI2514:
  78:LEDs.h        ****     ~ButtonLED() {}
 13094              		.loc 14 78 5 is_stmt 1 view .LVU3677
 13095              	.LBB2515:
 13096              	.LBB2516:
 13097              	.LBI2516:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13098              		.loc 1 40 5 view .LVU3678
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13099              		.loc 1 40 5 is_stmt 0 view .LVU3679
 13100              	.LBE2516:
 13101              	.LBB2517:
 13102              	.LBI2517:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13103              		.loc 16 24 5 is_stmt 1 view .LVU3680
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13104              		.loc 16 24 5 is_stmt 0 view .LVU3681
 13105              	.LBE2517:
 13106              	.LBE2515:
 13107              	.LBE2514:
 151:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13108              		.loc 20 151 13 view .LVU3682
 13109 0110 744F     		ldr	r7, .L702+124
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13110              		.loc 20 102 44 view .LVU3683
 13111 0112 2246     		mov	r2, r4
 13112 0114 2946     		mov	r1, r5
 13113 0116 7448     		ldr	r0, .L702+128
 13114 0118 FFF7FEFF 		bl	__aeabi_atexit
 13115              	.LVL843:
 13116              	.LBB2518:
 13117              	.LBI2518:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13118              		.loc 14 47 1 is_stmt 1 view .LVU3684
 13119              	.LBB2519:
 13120              	.LBB2520:
 13121              	.LBI2520:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13122              		.loc 16 24 5 view .LVU3685
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13123              		.loc 16 24 5 is_stmt 0 view .LVU3686
 13124              	.LBE2520:
 13125              	.LBB2521:
 13126              	.LBI2521:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13127              		.loc 15 15 5 is_stmt 1 view .LVU3687
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13128              		.loc 15 15 5 is_stmt 0 view .LVU3688
 13129              	.LBE2521:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 391


 13130              	.LBE2519:
 13131              	.LBE2518:
 103:Veno-Echo.cpp **** 
 13132              		.loc 20 103 10 view .LVU3689
 13133 011c 2246     		mov	r2, r4
 13134 011e 7349     		ldr	r1, .L702+132
 13135 0120 7348     		ldr	r0, .L702+136
 13136 0122 FFF7FEFF 		bl	__aeabi_atexit
 13137              	.LVL844:
 13138              	.LBB2522:
 13139              	.LBI2522:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13140              		.loc 8 38 5 is_stmt 1 view .LVU3690
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13141              		.loc 8 38 5 is_stmt 0 view .LVU3691
 13142              	.LBE2522:
 151:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13143              		.loc 20 151 13 view .LVU3692
 13144 0126 2246     		mov	r2, r4
 13145 0128 3946     		mov	r1, r7
 13146 012a 7248     		ldr	r0, .L702+140
 13147 012c FFF7FEFF 		bl	__aeabi_atexit
 13148              	.LVL845:
 13149              	.LBB2523:
 13150              	.LBI2523:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13151              		.loc 8 38 5 is_stmt 1 view .LVU3693
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13152              		.loc 8 38 5 is_stmt 0 view .LVU3694
 13153              	.LBE2523:
 152:Veno-Echo.cpp **** 
 13154              		.loc 20 152 13 view .LVU3695
 13155 0130 2246     		mov	r2, r4
 13156 0132 3946     		mov	r1, r7
 13157 0134 7048     		ldr	r0, .L702+144
 157:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13158              		.loc 20 157 18 view .LVU3696
 13159 0136 714D     		ldr	r5, .L702+148
 152:Veno-Echo.cpp **** 
 13160              		.loc 20 152 13 view .LVU3697
 13161 0138 FFF7FEFF 		bl	__aeabi_atexit
 13162              	.LVL846:
 13163              	.LBB2524:
 13164              	.LBI2524:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13165              		.loc 8 38 5 is_stmt 1 view .LVU3698
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13166              		.loc 8 38 5 is_stmt 0 view .LVU3699
 13167              	.LBE2524:
 154:Veno-Echo.cpp **** static Adsr HPF_Env;
 13168              		.loc 20 154 13 view .LVU3700
 13169 013c 2246     		mov	r2, r4
 13170 013e 3946     		mov	r1, r7
 13171 0140 6F48     		ldr	r0, .L702+152
 13172 0142 FFF7FEFF 		bl	__aeabi_atexit
 13173              	.LVL847:
 13174              	.LBB2525:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 392


 13175              	.LBI2525:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13176              		.loc 8 38 5 is_stmt 1 view .LVU3701
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13177              		.loc 8 38 5 is_stmt 0 view .LVU3702
 13178              	.LBE2525:
 155:Veno-Echo.cpp **** 
 13179              		.loc 20 155 13 view .LVU3703
 13180 0146 2246     		mov	r2, r4
 13181 0148 3946     		mov	r1, r7
 13182 014a 6E48     		ldr	r0, .L702+156
 13183 014c FFF7FEFF 		bl	__aeabi_atexit
 13184              	.LVL848:
 13185              	.LBB2526:
 13186              	.LBI2526:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13187              		.loc 11 36 5 is_stmt 1 view .LVU3704
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13188              		.loc 11 36 5 is_stmt 0 view .LVU3705
 13189              	.LBE2526:
 157:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13190              		.loc 20 157 18 view .LVU3706
 13191 0150 2246     		mov	r2, r4
 13192 0152 2946     		mov	r1, r5
 13193 0154 6C48     		ldr	r0, .L702+160
 13194 0156 FFF7FEFF 		bl	__aeabi_atexit
 13195              	.LVL849:
 13196              	.LBB2527:
 13197              	.LBI2527:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13198              		.loc 11 36 5 is_stmt 1 view .LVU3707
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13199              		.loc 11 36 5 is_stmt 0 view .LVU3708
 13200              	.LBE2527:
 158:Veno-Echo.cpp **** 
 13201              		.loc 20 158 18 view .LVU3709
 13202 015a 2246     		mov	r2, r4
 13203 015c 2946     		mov	r1, r5
 13204 015e 6B48     		ldr	r0, .L702+164
 13205 0160 FFF7FEFF 		bl	__aeabi_atexit
 13206              	.LVL850:
 13207              	.LBB2528:
 13208              	.LBI2528:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13209              		.loc 11 36 5 is_stmt 1 view .LVU3710
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13210              		.loc 11 36 5 is_stmt 0 view .LVU3711
 13211              	.LBE2528:
 160:Veno-Echo.cpp **** 
 13212              		.loc 20 160 18 view .LVU3712
 13213 0164 2246     		mov	r2, r4
 13214 0166 2946     		mov	r1, r5
 13215 0168 6948     		ldr	r0, .L702+168
 13216 016a FFF7FEFF 		bl	__aeabi_atexit
 13217              	.LVL851:
 13218              	.LBB2529:
 13219              	.LBI2529:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 393


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13220              		.loc 11 36 5 is_stmt 1 view .LVU3713
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13221              		.loc 11 36 5 is_stmt 0 view .LVU3714
 13222              	.LBE2529:
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13223              		.loc 20 163 18 view .LVU3715
 13224 016e 2246     		mov	r2, r4
 13225 0170 2946     		mov	r1, r5
 13226 0172 6848     		ldr	r0, .L702+172
 13227 0174 FFF7FEFF 		bl	__aeabi_atexit
 13228              	.LVL852:
 13229              	.LBB2530:
 13230              	.LBI2530:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13231              		.loc 11 36 5 is_stmt 1 view .LVU3716
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13232              		.loc 11 36 5 is_stmt 0 view .LVU3717
 13233              	.LBE2530:
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13234              		.loc 20 164 18 view .LVU3718
 13235 0178 2246     		mov	r2, r4
 13236 017a 2946     		mov	r1, r5
 13237 017c 6648     		ldr	r0, .L702+176
 13238 017e FFF7FEFF 		bl	__aeabi_atexit
 13239              	.LVL853:
 13240              	.LBB2531:
 13241              	.LBI2531:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13242              		.loc 11 36 5 is_stmt 1 view .LVU3719
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13243              		.loc 11 36 5 is_stmt 0 view .LVU3720
 13244              	.LBE2531:
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13245              		.loc 20 165 18 view .LVU3721
 13246 0182 2246     		mov	r2, r4
 13247 0184 2946     		mov	r1, r5
 13248 0186 6548     		ldr	r0, .L702+180
 13249 0188 FFF7FEFF 		bl	__aeabi_atexit
 13250              	.LVL854:
 13251              	.LBB2532:
 13252              	.LBI2532:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13253              		.loc 11 36 5 is_stmt 1 view .LVU3722
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13254              		.loc 11 36 5 is_stmt 0 view .LVU3723
 13255              	.LBE2532:
 166:Veno-Echo.cpp **** 
 13256              		.loc 20 166 18 view .LVU3724
 13257 018c 2246     		mov	r2, r4
 13258 018e 2946     		mov	r1, r5
 13259 0190 6348     		ldr	r0, .L702+184
 13260 0192 FFF7FEFF 		bl	__aeabi_atexit
 13261              	.LVL855:
 13262              	.LBB2533:
 13263              	.LBI2533:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 394


 13264              		.loc 11 36 5 is_stmt 1 view .LVU3725
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13265              		.loc 11 36 5 is_stmt 0 view .LVU3726
 13266              	.LBE2533:
 169:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13267              		.loc 20 169 18 view .LVU3727
 13268 0196 2246     		mov	r2, r4
 13269 0198 2946     		mov	r1, r5
 13270 019a 6248     		ldr	r0, .L702+188
 13271 019c FFF7FEFF 		bl	__aeabi_atexit
 13272              	.LVL856:
 13273              	.LBB2534:
 13274              	.LBI2534:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13275              		.loc 11 36 5 is_stmt 1 view .LVU3728
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13276              		.loc 11 36 5 is_stmt 0 view .LVU3729
 13277              	.LBE2534:
 170:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13278              		.loc 20 170 18 view .LVU3730
 13279 01a0 2246     		mov	r2, r4
 13280 01a2 2946     		mov	r1, r5
 13281 01a4 6048     		ldr	r0, .L702+192
 13282 01a6 FFF7FEFF 		bl	__aeabi_atexit
 13283              	.LVL857:
 13284              	.LBB2535:
 13285              	.LBI2535:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13286              		.loc 11 36 5 is_stmt 1 view .LVU3731
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13287              		.loc 11 36 5 is_stmt 0 view .LVU3732
 13288              	.LBE2535:
 171:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13289              		.loc 20 171 18 view .LVU3733
 13290 01aa 2246     		mov	r2, r4
 13291 01ac 2946     		mov	r1, r5
 13292 01ae 5F48     		ldr	r0, .L702+196
 13293 01b0 FFF7FEFF 		bl	__aeabi_atexit
 13294              	.LVL858:
 13295              	.LBB2536:
 13296              	.LBI2536:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13297              		.loc 11 36 5 is_stmt 1 view .LVU3734
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13298              		.loc 11 36 5 is_stmt 0 view .LVU3735
 13299              	.LBE2536:
 172:Veno-Echo.cpp **** 
 13300              		.loc 20 172 18 view .LVU3736
 13301 01b4 2246     		mov	r2, r4
 13302 01b6 2946     		mov	r1, r5
 13303 01b8 5D48     		ldr	r0, .L702+200
 13304 01ba FFF7FEFF 		bl	__aeabi_atexit
 13305              	.LVL859:
 13306              	.LBB2537:
 13307              	.LBI2537:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13308              		.loc 11 36 5 is_stmt 1 view .LVU3737
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 395


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13309              		.loc 11 36 5 is_stmt 0 view .LVU3738
 13310              	.LBE2537:
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13311              		.loc 20 175 18 view .LVU3739
 13312 01be 2246     		mov	r2, r4
 13313 01c0 2946     		mov	r1, r5
 13314 01c2 5C48     		ldr	r0, .L702+204
 13315 01c4 FFF7FEFF 		bl	__aeabi_atexit
 13316              	.LVL860:
 13317              	.LBB2538:
 13318              	.LBI2538:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13319              		.loc 11 36 5 is_stmt 1 view .LVU3740
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13320              		.loc 11 36 5 is_stmt 0 view .LVU3741
 13321              	.LBE2538:
 176:Veno-Echo.cpp **** 
 13322              		.loc 20 176 18 view .LVU3742
 13323 01c8 2246     		mov	r2, r4
 13324 01ca 2946     		mov	r1, r5
 13325 01cc 5A48     		ldr	r0, .L702+208
 13326 01ce FFF7FEFF 		bl	__aeabi_atexit
 13327              	.LVL861:
 13328              	.LBB2539:
 13329              	.LBI2539:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13330              		.loc 11 36 5 is_stmt 1 view .LVU3743
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13331              		.loc 11 36 5 is_stmt 0 view .LVU3744
 13332              	.LBE2539:
 182:Veno-Echo.cpp **** Switch ReverseGateR;
 13333              		.loc 20 182 8 view .LVU3745
 13334 01d2 5A4F     		ldr	r7, .L702+212
 178:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13335              		.loc 20 178 18 view .LVU3746
 13336 01d4 2246     		mov	r2, r4
 13337 01d6 2946     		mov	r1, r5
 13338 01d8 5948     		ldr	r0, .L702+216
 13339 01da FFF7FEFF 		bl	__aeabi_atexit
 13340              	.LVL862:
 13341              	.LBB2540:
 13342              	.LBI2540:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13343              		.loc 11 36 5 is_stmt 1 view .LVU3747
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13344              		.loc 11 36 5 is_stmt 0 view .LVU3748
 13345              	.LBE2540:
 179:Veno-Echo.cpp **** 
 13346              		.loc 20 179 18 view .LVU3749
 13347 01de 2246     		mov	r2, r4
 13348 01e0 2946     		mov	r1, r5
 13349 01e2 5848     		ldr	r0, .L702+220
 13350 01e4 FFF7FEFF 		bl	__aeabi_atexit
 13351              	.LVL863:
 13352              	.LBB2541:
 13353              	.LBI2541:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 396


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13354              		.loc 1 40 5 is_stmt 1 view .LVU3750
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13355              		.loc 1 40 5 is_stmt 0 view .LVU3751
 13356              	.LBE2541:
 182:Veno-Echo.cpp **** Switch ReverseGateR;
 13357              		.loc 20 182 8 view .LVU3752
 13358 01e8 2246     		mov	r2, r4
 13359 01ea 3946     		mov	r1, r7
 13360 01ec 5648     		ldr	r0, .L702+224
 13361 01ee FFF7FEFF 		bl	__aeabi_atexit
 13362              	.LVL864:
 13363              	.LBB2542:
 13364              	.LBI2542:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13365              		.loc 1 40 5 is_stmt 1 view .LVU3753
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13366              		.loc 1 40 5 is_stmt 0 view .LVU3754
 13367              	.LBE2542:
 183:Veno-Echo.cpp **** 
 13368              		.loc 20 183 8 view .LVU3755
 13369 01f2 2246     		mov	r2, r4
 13370 01f4 3946     		mov	r1, r7
 13371 01f6 5548     		ldr	r0, .L702+228
 13372 01f8 FFF7FEFF 		bl	__aeabi_atexit
 13373              	.LVL865:
 13374              	.LBB2543:
 13375              	.LBI2543:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13376              		.loc 1 40 5 is_stmt 1 view .LVU3756
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13377              		.loc 1 40 5 is_stmt 0 view .LVU3757
 13378              	.LBE2543:
 186:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 13379              		.loc 20 186 8 view .LVU3758
 13380 01fc 2246     		mov	r2, r4
 13381 01fe 3946     		mov	r1, r7
 13382 0200 5348     		ldr	r0, .L702+232
 13383 0202 FFF7FEFF 		bl	__aeabi_atexit
 13384              	.LVL866:
 187:Veno-Echo.cpp **** GateIn ClockIn;
 13385              		.loc 20 187 34 view .LVU3759
 13386 0206 0520     		movs	r0, #5
 13387 0208 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 13388              	.LVL867:
 13389 020c 514B     		ldr	r3, .L702+236
 13390 020e 0546     		mov	r5, r0	@ movhi
 188:Veno-Echo.cpp **** //Switch ClockIn;
 13391              		.loc 20 188 8 view .LVU3760
 13392 0210 2246     		mov	r2, r4
 13393 0212 5149     		ldr	r1, .L702+240
 13394 0214 5148     		ldr	r0, .L702+244
 187:Veno-Echo.cpp **** GateIn ClockIn;
 13395              		.loc 20 187 34 view .LVU3761
 13396 0216 1D80     		strh	r5, [r3]	@ movhi
 13397              	.LVL868:
 13398              	.LBB2544:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 397


 13399              	.LBI2544:
  21:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13400              		.loc 2 21 5 is_stmt 1 view .LVU3762
  21:../libdaisy/src/hid/gatein.h ****     /** GateIn~
 13401              		.loc 2 21 5 is_stmt 0 view .LVU3763
 13402              	.LBE2544:
 188:Veno-Echo.cpp **** //Switch ClockIn;
 13403              		.loc 20 188 8 view .LVU3764
 13404 0218 FFF7FEFF 		bl	__aeabi_atexit
 13405              	.LVL869:
 13406              	.LBB2545:
 13407              	.LBI2545:
  44:taptempo.h    ****     {
 13408              		.loc 13 44 5 is_stmt 1 view .LVU3765
 13409              	.LBB2546:
 13410              	.LBB2547:
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13411              		.loc 13 46 9 view .LVU3766
  47:taptempo.h    ****         maxtap_ = 2000000;
 13412              		.loc 13 47 24 is_stmt 0 view .LVU3767
 13413 021c DFF85881 		ldr	r8, .L702+272
  56:taptempo.h    ****         clockLength_ = 0;
 13414              		.loc 13 56 19 view .LVU3768
 13415 0220 4FF07E55 		mov	r5, #1065353216
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13416              		.loc 13 46 18 view .LVU3769
 13417 0224 4E48     		ldr	r0, .L702+248
  50:taptempo.h    ****         maxclock_ = 96000;
 13418              		.loc 13 50 19 view .LVU3770
 13419 0226 4FF4706C 		mov	ip, #3840
  48:taptempo.h    ****         mintap_ = 80000;
 13420              		.loc 13 48 17 view .LVU3771
 13421 022a DFF850E1 		ldr	lr, .L702+276
 13422              	.LBE2547:
 13423              	.LBE2546:
 13424              	.LBE2545:
 192:Veno-Echo.cpp **** 
 13425              		.loc 20 192 10 view .LVU3772
 13426 022e 2246     		mov	r2, r4
 13427              	.LBB2552:
 13428              	.LBB2550:
 13429              	.LBB2548:
  49:taptempo.h    ****         minclock_ = 3840;
 13430              		.loc 13 49 17 view .LVU3773
 13431 0230 4C49     		ldr	r1, .L702+252
  59:taptempo.h    ****     }
 13432              		.loc 13 59 22 view .LVU3774
 13433 0232 42F21073 		movw	r3, #10000
  51:taptempo.h    ****         lastTapLength_ = 0;
 13434              		.loc 13 51 19 view .LVU3775
 13435 0236 4C4F     		ldr	r7, .L702+256
  53:taptempo.h    ****         lastTime_ = 0;
 13436              		.loc 13 53 16 view .LVU3776
 13437 0238 4C4C     		ldr	r4, .L702+260
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13438              		.loc 13 46 18 view .LVU3777
 13439 023a 80F83460 		strb	r6, [r0, #52]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 398


  47:taptempo.h    ****         maxtap_ = 2000000;
 13440              		.loc 13 47 9 is_stmt 1 view .LVU3778
  55:taptempo.h    ****         tapRatio_ = 1.0f;
 13441              		.loc 13 55 22 is_stmt 0 view .LVU3779
 13442 023e 0661     		str	r6, [r0, #16]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13443              		.loc 13 47 24 view .LVU3780
 13444 0240 C0F83880 		str	r8, [r0, #56]	@ float
  48:taptempo.h    ****         mintap_ = 80000;
 13445              		.loc 13 48 9 is_stmt 1 view .LVU3781
  48:taptempo.h    ****         mintap_ = 80000;
 13446              		.loc 13 48 17 is_stmt 0 view .LVU3782
 13447 0244 C0F804E0 		str	lr, [r0, #4]
  49:taptempo.h    ****         minclock_ = 3840;
 13448              		.loc 13 49 9 is_stmt 1 view .LVU3783
  49:taptempo.h    ****         minclock_ = 3840;
 13449              		.loc 13 49 17 is_stmt 0 view .LVU3784
 13450 0248 0160     		str	r1, [r0]
  50:taptempo.h    ****         maxclock_ = 96000;
 13451              		.loc 13 50 9 is_stmt 1 view .LVU3785
  53:taptempo.h    ****         lastTime_ = 0;
 13452              		.loc 13 53 16 is_stmt 0 view .LVU3786
 13453 024a C463     		str	r4, [r0, #60]	@ float
  56:taptempo.h    ****         clockLength_ = 0;
 13454              		.loc 13 56 19 view .LVU3787
 13455 024c 0564     		str	r5, [r0, #64]	@ float
 13456              	.LBE2548:
 13457              	.LBE2550:
 13458              	.LBE2552:
 192:Veno-Echo.cpp **** 
 13459              		.loc 20 192 10 view .LVU3788
 13460 024e 4849     		ldr	r1, .L702+264
 13461              	.LBB2553:
 13462              	.LBB2551:
 13463              	.LBB2549:
  59:taptempo.h    ****     }
 13464              		.loc 13 59 22 view .LVU3789
 13465 0250 8362     		str	r3, [r0, #40]
  54:taptempo.h    ****         currentTime_ = 0;
 13466              		.loc 13 54 19 view .LVU3790
 13467 0252 C0E90566 		strd	r6, r6, [r0, #20]
  58:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13468              		.loc 13 58 26 view .LVU3791
 13469 0256 C0E90866 		strd	r6, r6, [r0, #32]
  51:taptempo.h    ****         lastTapLength_ = 0;
 13470              		.loc 13 51 19 view .LVU3792
 13471 025a C0E902C7 		strd	ip, r7, [r0, #8]
  52:taptempo.h    ****         tempo_ = 500000.0f;
 13472              		.loc 13 52 9 is_stmt 1 view .LVU3793
  53:taptempo.h    ****         lastTime_ = 0;
 13473              		.loc 13 53 9 view .LVU3794
  54:taptempo.h    ****         currentTime_ = 0;
 13474              		.loc 13 54 9 view .LVU3795
  55:taptempo.h    ****         tapRatio_ = 1.0f;
 13475              		.loc 13 55 9 view .LVU3796
  56:taptempo.h    ****         clockLength_ = 0;
 13476              		.loc 13 56 9 view .LVU3797
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 399


  57:taptempo.h    ****         lastClockLength_ = 0;
 13477              		.loc 13 57 9 view .LVU3798
  58:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13478              		.loc 13 58 9 view .LVU3799
  59:taptempo.h    ****     }
 13479              		.loc 13 59 9 view .LVU3800
 13480              	.LVL870:
  59:taptempo.h    ****     }
 13481              		.loc 13 59 9 is_stmt 0 view .LVU3801
 13482              	.LBE2549:
 13483              	.LBE2551:
 13484              	.LBE2553:
 13485              	.LBE2556:
 13486              	.LBE2560:
 13487              		.loc 20 2149 1 view .LVU3802
 13488 025e BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13489              		.cfi_restore 14
 13490              		.cfi_restore 8
 13491              		.cfi_restore 7
 13492              		.cfi_restore 6
 13493              		.cfi_restore 5
 13494              		.cfi_restore 4
 13495              		.cfi_def_cfa_offset 0
 13496              	.LBB2561:
 13497              	.LBB2557:
 192:Veno-Echo.cpp **** 
 13498              		.loc 20 192 10 view .LVU3803
 13499 0262 FFF7FEBF 		b	__aeabi_atexit
 13500              	.LVL871:
 13501              	.L703:
 13502 0266 00BF     		.align	2
 13503              	.L702:
 13504 0268 00000000 		.word	.LANCHOR4
 13505 026c 00000000 		.word	__dso_handle
 13506 0270 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13507 0274 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13508 0278 00000000 		.word	.LANCHOR47
 13509 027c 00000000 		.word	.LANCHOR48
 13510 0280 00000000 		.word	.LANCHOR35
 13511 0284 00000000 		.word	.LANCHOR36
 13512 0288 00000000 		.word	.LANCHOR49
 13513 028c 00000000 		.word	.LANCHOR50
 13514 0290 00000000 		.word	.LANCHOR37
 13515 0294 00000000 		.word	.LANCHOR38
 13516 0298 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13517 029c 00000000 		.word	.LANCHOR76
 13518 02a0 17B7D138 		.word	953267991
 13519 02a4 00000000 		.word	.LANCHOR131
 13520 02a8 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13521 02ac 00000000 		.word	.LANCHOR132
 13522 02b0 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13523 02b4 00000000 		.word	delMemsL
 13524 02b8 00000000 		.word	delMemsR
 13525 02bc 00000000 		.word	_ZN10DelayMultiD1Ev
 13526 02c0 00000000 		.word	delMemsL_REV
 13527 02c4 00000000 		.word	delMemsR_REV
 13528 02c8 00000000 		.word	_ZN9ButtonLEDD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 400


 13529 02cc 00000000 		.word	.LANCHOR0
 13530 02d0 00000000 		.word	.LANCHOR1
 13531 02d4 00000000 		.word	.LANCHOR96
 13532 02d8 00000000 		.word	.LANCHOR97
 13533 02dc 00000000 		.word	.LANCHOR94
 13534 02e0 00000000 		.word	.LANCHOR95
 13535 02e4 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13536 02e8 00000000 		.word	.LANCHOR98
 13537 02ec 00000000 		.word	_ZN8TempoLEDD1Ev
 13538 02f0 00000000 		.word	.LANCHOR91
 13539 02f4 00000000 		.word	.LANCHOR103
 13540 02f8 00000000 		.word	.LANCHOR104
 13541 02fc 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13542 0300 00000000 		.word	.LANCHOR105
 13543 0304 00000000 		.word	.LANCHOR106
 13544 0308 00000000 		.word	.LANCHOR107
 13545 030c 00000000 		.word	.LANCHOR108
 13546 0310 00000000 		.word	.LANCHOR65
 13547 0314 00000000 		.word	.LANCHOR119
 13548 0318 00000000 		.word	.LANCHOR120
 13549 031c 00000000 		.word	.LANCHOR117
 13550 0320 00000000 		.word	.LANCHOR118
 13551 0324 00000000 		.word	.LANCHOR123
 13552 0328 00000000 		.word	.LANCHOR124
 13553 032c 00000000 		.word	.LANCHOR121
 13554 0330 00000000 		.word	.LANCHOR122
 13555 0334 00000000 		.word	.LANCHOR125
 13556 0338 00000000 		.word	.LANCHOR126
 13557 033c 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13558 0340 00000000 		.word	.LANCHOR127
 13559 0344 00000000 		.word	.LANCHOR128
 13560 0348 00000000 		.word	.LANCHOR99
 13561 034c 00000000 		.word	.LANCHOR100
 13562 0350 00000000 		.word	.LANCHOR101
 13563 0354 00000000 		.word	.LANCHOR102
 13564 0358 00000000 		.word	_ZN5daisy6GateInD1Ev
 13565 035c 00000000 		.word	.LANCHOR89
 13566 0360 00000000 		.word	.LANCHOR26
 13567 0364 80380100 		.word	80000
 13568 0368 00770100 		.word	96000
 13569 036c 0024F448 		.word	1223959552
 13570 0370 00000000 		.word	_ZN8TaptempoD1Ev
 13571 0374 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13572 0378 0000A03F 		.word	1067450368
 13573 037c 80841E00 		.word	2000000
 13574              	.LBE2557:
 13575              	.LBE2561:
 13576              		.cfi_endproc
 13577              	.LFE4919:
 13579              		.section	.init_array,"aw",%init_array
 13580              		.align	2
 13581 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13582              		.global	AltControls
 13583              		.global	BaseTempo
 13584              		.global	ClockIn
 13585              		.global	ClockPin
 13586              		.global	Sync
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 401


 13587              		.global	ReverseGateR
 13588              		.global	ReverseGateL
 13589              		.global	DEBUG
 13590              		.global	CLOCK_DEBUG
 13591              		.global	PHASE_DEBUG
 13592              		.global	DELAYR_DEBUG
 13593              		.global	DELAYL_DEBUG
 13594              		.global	saveState
 13595              		.global	save_flag
 13596              		.global	PostFilters
 13597              		.global	ClockInFlag
 13598              		.global	mute
 13599              		.global	shift
 13600              		.global	syncMode
 13601              		.global	modulation_CV_Raw
 13602              		.global	ModDepth
 13603              		.global	filterXfade
 13604              		.global	width_CV
 13605              		.global	width
 13606              		.global	drywet_CV
 13607              		.global	drywet
 13608              		.global	crossfeedback_CV
 13609              		.global	crossfeedback
 13610              		.global	feedbackR_CV
 13611              		.global	feedbackR
 13612              		.global	feedbackL_CV
 13613              		.global	feedbackL
 13614              		.global	delayTimeR_CV
 13615              		.global	delayTimeL_CV
 13616              		.global	tempoLED_BASE
 13617              		.global	Tap_Button
 13618              		.global	Rev_R_sw
 13619              		.global	Rev_L_sw
 13620              		.global	HPF_sw
 13621              		.global	LPF_sw
 13622              		.global	delaysR_REV
 13623              		.global	delaysL_REV
 13624              		.global	delayR
 13625              		.global	delayL
 13626              		.global	delMemsR_REV
 13627              		.global	delMemsL_REV
 13628              		.global	delMemsR
 13629              		.global	delMemsL
 13630              		.section	.bss.AltControls,"aw",%nobits
 13631              		.align	2
 13632              		.set	.LANCHOR15,. + 0
 13635              	AltControls:
 13636 0000 00000000 		.space	44
 13636      00000000 
 13636      00000000 
 13636      00000000 
 13636      00000000 
 13637              		.section	.bss.BaseTempo,"aw",%nobits
 13638              		.align	2
 13639              		.set	.LANCHOR26,. + 0
 13642              	BaseTempo:
 13643 0000 00000000 		.space	68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 402


 13643      00000000 
 13643      00000000 
 13643      00000000 
 13643      00000000 
 13644              		.section	.bss.CLOCK_DEBUG,"aw",%nobits
 13645              		.align	2
 13648              	CLOCK_DEBUG:
 13649 0000 00000000 		.space	4
 13650              		.section	.bss.ClockIn,"aw",%nobits
 13651              		.align	2
 13652              		.set	.LANCHOR89,. + 0
 13655              	ClockIn:
 13656 0000 00000000 		.space	6
 13656      0000
 13657              		.section	.bss.ClockInFlag,"aw",%nobits
 13660              	ClockInFlag:
 13661 0000 00       		.space	1
 13662              		.section	.bss.ClockPin,"aw",%nobits
 13663              		.align	2
 13664              		.set	.LANCHOR102,. + 0
 13667              	ClockPin:
 13668 0000 0000     		.space	2
 13669              		.section	.bss.DEBUG,"aw",%nobits
 13670              		.set	.LANCHOR90,. + 0
 13673              	DEBUG:
 13674 0000 00       		.space	1
 13675              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 13676              		.align	2
 13679              	DELAYL_DEBUG:
 13680 0000 00000000 		.space	4
 13681              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13682              		.align	2
 13685              	DELAYR_DEBUG:
 13686 0000 00000000 		.space	4
 13687              		.section	.bss.HPF_sw,"aw",%nobits
 13688              		.align	2
 13689              		.set	.LANCHOR97,. + 0
 13692              	HPF_sw:
 13693 0000 00000000 		.space	52
 13693      00000000 
 13693      00000000 
 13693      00000000 
 13693      00000000 
 13694              		.section	.bss.LPF_sw,"aw",%nobits
 13695              		.align	2
 13696              		.set	.LANCHOR96,. + 0
 13699              	LPF_sw:
 13700 0000 00000000 		.space	52
 13700      00000000 
 13700      00000000 
 13700      00000000 
 13700      00000000 
 13701              		.section	.bss.ModDepth,"aw",%nobits
 13702              		.align	2
 13703              		.set	.LANCHOR68,. + 0
 13706              	ModDepth:
 13707 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 403


 13708              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13709              		.align	2
 13710              		.set	.LANCHOR93,. + 0
 13713              	PHASE_DEBUG:
 13714 0000 00000000 		.space	4
 13715              		.section	.bss.PostFilters,"aw",%nobits
 13716              		.set	.LANCHOR83,. + 0
 13719              	PostFilters:
 13720 0000 00       		.space	1
 13721              		.section	.bss.Rev_L_sw,"aw",%nobits
 13722              		.align	2
 13723              		.set	.LANCHOR94,. + 0
 13726              	Rev_L_sw:
 13727 0000 00000000 		.space	52
 13727      00000000 
 13727      00000000 
 13727      00000000 
 13727      00000000 
 13728              		.section	.bss.Rev_R_sw,"aw",%nobits
 13729              		.align	2
 13730              		.set	.LANCHOR95,. + 0
 13733              	Rev_R_sw:
 13734 0000 00000000 		.space	52
 13734      00000000 
 13734      00000000 
 13734      00000000 
 13734      00000000 
 13735              		.section	.bss.ReverseGateL,"aw",%nobits
 13736              		.align	2
 13737              		.set	.LANCHOR99,. + 0
 13740              	ReverseGateL:
 13741 0000 00000000 		.space	16
 13741      00000000 
 13741      00000000 
 13741      00000000 
 13742              		.section	.bss.ReverseGateR,"aw",%nobits
 13743              		.align	2
 13744              		.set	.LANCHOR100,. + 0
 13747              	ReverseGateR:
 13748 0000 00000000 		.space	16
 13748      00000000 
 13748      00000000 
 13748      00000000 
 13749              		.section	.bss.Sync,"aw",%nobits
 13750              		.align	2
 13751              		.set	.LANCHOR101,. + 0
 13754              	Sync:
 13755 0000 00000000 		.space	16
 13755      00000000 
 13755      00000000 
 13755      00000000 
 13756              		.section	.bss.Tap_Button,"aw",%nobits
 13757              		.align	2
 13758              		.set	.LANCHOR98,. + 0
 13761              	Tap_Button:
 13762 0000 00000000 		.space	52
 13762      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 404


 13762      00000000 
 13762      00000000 
 13762      00000000 
 13763              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13764              		.align	2
 13765              		.set	.LANCHOR103,. + 0
 13768              	_ZL10FwdRevLEnv:
 13769 0000 00000000 		.space	56
 13769      00000000 
 13769      00000000 
 13769      00000000 
 13769      00000000 
 13770              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13771              		.align	2
 13772              		.set	.LANCHOR104,. + 0
 13775              	_ZL10FwdRevREnv:
 13776 0000 00000000 		.space	56
 13776      00000000 
 13776      00000000 
 13776      00000000 
 13776      00000000 
 13777              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13778              		.align	2
 13779              		.set	.LANCHOR117,. + 0
 13782              	_ZL10HPF_LXfade:
 13783 0000 00000000 		.space	8
 13783      00000000 
 13784              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13785              		.align	2
 13786              		.set	.LANCHOR37,. + 0
 13789              	_ZL10HPF_L_post:
 13790 0000 00000000 		.space	76
 13790      00000000 
 13790      00000000 
 13790      00000000 
 13790      00000000 
 13791              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13792              		.align	2
 13793              		.set	.LANCHOR118,. + 0
 13796              	_ZL10HPF_RXfade:
 13797 0000 00000000 		.space	8
 13797      00000000 
 13798              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13799              		.align	2
 13800              		.set	.LANCHOR38,. + 0
 13803              	_ZL10HPF_R_post:
 13804 0000 00000000 		.space	76
 13804      00000000 
 13804      00000000 
 13804      00000000 
 13804      00000000 
 13805              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13806              		.align	2
 13807              		.set	.LANCHOR119,. + 0
 13810              	_ZL10LPF_LXfade:
 13811 0000 00000000 		.space	8
 13811      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 405


 13812              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13813              		.align	2
 13814              		.set	.LANCHOR49,. + 0
 13817              	_ZL10LPF_L_post:
 13818 0000 00000000 		.space	76
 13818      00000000 
 13818      00000000 
 13818      00000000 
 13818      00000000 
 13819              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13820              		.align	2
 13821              		.set	.LANCHOR120,. + 0
 13824              	_ZL10LPF_RXfade:
 13825 0000 00000000 		.space	8
 13825      00000000 
 13826              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13827              		.align	2
 13828              		.set	.LANCHOR50,. + 0
 13831              	_ZL10LPF_R_post:
 13832 0000 00000000 		.space	76
 13832      00000000 
 13832      00000000 
 13832      00000000 
 13832      00000000 
 13833              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13834              		.align	2
 13835              		.set	.LANCHOR65,. + 0
 13838              	_ZL10WidthXfade:
 13839 0000 00000000 		.space	8
 13839      00000000 
 13840              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13841              		.align	2
 13842              		.set	.LANCHOR125,. + 0
 13845              	_ZL11FilterMix_L:
 13846 0000 00000000 		.space	8
 13846      00000000 
 13847              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13848              		.align	2
 13849              		.set	.LANCHOR126,. + 0
 13852              	_ZL11FilterMix_R:
 13853 0000 00000000 		.space	8
 13853      00000000 
 13854              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13855              		.align	2
 13856              		.set	.LANCHOR107,. + 0
 13859              	_ZL12FwdRevLXfade:
 13860 0000 00000000 		.space	8
 13860      00000000 
 13861              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13862              		.align	2
 13863              		.set	.LANCHOR108,. + 0
 13866              	_ZL12FwdRevRXfade:
 13867 0000 00000000 		.space	8
 13867      00000000 
 13868              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13869              		.align	2
 13870              		.set	.LANCHOR121,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 406


 13873              	_ZL15HPF_LXfade_post:
 13874 0000 00000000 		.space	8
 13874      00000000 
 13875              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13876              		.align	2
 13877              		.set	.LANCHOR122,. + 0
 13880              	_ZL15HPF_RXfade_post:
 13881 0000 00000000 		.space	8
 13881      00000000 
 13882              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13883              		.align	2
 13884              		.set	.LANCHOR123,. + 0
 13887              	_ZL15LPF_LXfade_post:
 13888 0000 00000000 		.space	8
 13888      00000000 
 13889              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13890              		.align	2
 13891              		.set	.LANCHOR124,. + 0
 13894              	_ZL15LPF_RXfade_post:
 13895 0000 00000000 		.space	8
 13895      00000000 
 13896              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13897              		.align	2
 13898              		.set	.LANCHOR127,. + 0
 13901              	_ZL16FilterMix_L_post:
 13902 0000 00000000 		.space	8
 13902      00000000 
 13903              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13904              		.align	2
 13905              		.set	.LANCHOR128,. + 0
 13908              	_ZL16FilterMix_R_post:
 13909 0000 00000000 		.space	8
 13909      00000000 
 13910              		.section	.bss._ZL2hw,"aw",%nobits
 13911              		.align	2
 13912              		.set	.LANCHOR4,. + 0
 13915              	_ZL2hw:
 13916 0000 00000000 		.space	60
 13916      00000000 
 13916      00000000 
 13916      00000000 
 13916      00000000 
 13917              		.section	.bss._ZL3lfo,"aw",%nobits
 13918              		.align	2
 13919              		.set	.LANCHOR76,. + 0
 13922              	_ZL3lfo:
 13923 0000 00000000 		.space	40
 13923      00000000 
 13923      00000000 
 13923      00000000 
 13923      00000000 
 13924              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13925              		.align	2
 13926              		.set	.LANCHOR35,. + 0
 13929              	_ZL5HPF_L:
 13930 0000 00000000 		.space	76
 13930      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 407


 13930      00000000 
 13930      00000000 
 13930      00000000 
 13931              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13932              		.align	2
 13933              		.set	.LANCHOR36,. + 0
 13936              	_ZL5HPF_R:
 13937 0000 00000000 		.space	76
 13937      00000000 
 13937      00000000 
 13937      00000000 
 13937      00000000 
 13938              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13939              		.align	2
 13940              		.set	.LANCHOR47,. + 0
 13943              	_ZL5LPF_L:
 13944 0000 00000000 		.space	76
 13944      00000000 
 13944      00000000 
 13944      00000000 
 13944      00000000 
 13945              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13946              		.align	2
 13947              		.set	.LANCHOR48,. + 0
 13950              	_ZL5LPF_R:
 13951 0000 00000000 		.space	76
 13951      00000000 
 13951      00000000 
 13951      00000000 
 13951      00000000 
 13952              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13953              		.align	2
 13954              		.set	.LANCHOR106,. + 0
 13957              	_ZL7HPF_Env:
 13958 0000 00000000 		.space	56
 13958      00000000 
 13958      00000000 
 13958      00000000 
 13958      00000000 
 13959              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13960              		.align	2
 13961              		.set	.LANCHOR105,. + 0
 13964              	_ZL7LPF_Env:
 13965 0000 00000000 		.space	56
 13965      00000000 
 13965      00000000 
 13965      00000000 
 13965      00000000 
 13966              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13967              		.align	2
 13968              		.set	.LANCHOR131,. + 0
 13971              	_ZL7LeftEnv:
 13972 0000 00000000 		.space	24
 13972      00000000 
 13972      00000000 
 13972      00000000 
 13972      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 408


 13973              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13974              		.align	2
 13975              		.set	.LANCHOR132,. + 0
 13978              	_ZL8RightEnv:
 13979 0000 00000000 		.space	24
 13979      00000000 
 13979      00000000 
 13979      00000000 
 13979      00000000 
 13980              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13981              		.align	2
 13982              		.set	.LANCHOR86,. + 0
 13985              	_ZZ10Update_ModvE13modulation_CV:
 13986 0000 00000000 		.space	4
 13987              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13988              		.align	2
 13989              		.set	.LANCHOR87,. + 0
 13992              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13993 0000 00000000 		.space	4
 13994              		.section	.bss._ZZ11UpdateClockvE12ClockCounter,"aw",%nobits
 13995              		.align	2
 13996              		.set	.LANCHOR88,. + 0
 13999              	_ZZ11UpdateClockvE12ClockCounter:
 14000 0000 00000000 		.space	4
 14001              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 14002              		.align	2
 14003              		.set	.LANCHOR63,. + 0
 14006              	_ZZ12Update_widthvE10width_Last:
 14007 0000 00000000 		.space	4
 14008              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 14009              		.align	2
 14010              		.set	.LANCHOR67,. + 0
 14013              	_ZZ12Update_widthvE12ModDepth_new:
 14014 0000 00000000 		.space	4
 14015              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 14016              		.set	.LANCHOR61,. + 0
 14019              	_ZZ12Update_widthvE12width_pickup:
 14020 0000 00       		.space	1
 14021              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 14022              		.set	.LANCHOR66,. + 0
 14025              	_ZZ12Update_widthvE15ModDepth_pickup:
 14026 0000 00       		.space	1
 14027              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 14028              		.set	.LANCHOR60,. + 0
 14031              	_ZZ12Update_widthvE9lastShift:
 14032 0000 00       		.space	1
 14033              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 14034              		.align	2
 14035              		.set	.LANCHOR62,. + 0
 14038              	_ZZ12Update_widthvE9width_new:
 14039 0000 00000000 		.space	4
 14040              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 14041              		.set	.LANCHOR57,. + 0
 14044              	_ZZ13Update_drywetvE10Res_pickup:
 14045 0000 00       		.space	1
 14046              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 14047              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 409


 14048              		.set	.LANCHOR54,. + 0
 14051              	_ZZ13Update_drywetvE10drywet_new:
 14052 0000 00000000 		.space	4
 14053              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 14054              		.align	2
 14055              		.set	.LANCHOR55,. + 0
 14058              	_ZZ13Update_drywetvE11drywet_Last:
 14059 0000 00000000 		.space	4
 14060              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 14061              		.set	.LANCHOR53,. + 0
 14064              	_ZZ13Update_drywetvE13drywet_pickup:
 14065 0000 00       		.space	1
 14066              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14067              		.align	2
 14068              		.set	.LANCHOR58,. + 0
 14071              	_ZZ13Update_drywetvE7Res_new:
 14072 0000 00000000 		.space	4
 14073              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 14074              		.set	.LANCHOR52,. + 0
 14077              	_ZZ13Update_drywetvE9lastShift:
 14078 0000 00       		.space	1
 14079              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 14080              		.align	2
 14081              		.set	.LANCHOR111,. + 0
 14084              	_ZZ14Update_ButtonsvE11buttonstate:
 14085 0000 00000000 		.space	4
 14086              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 14087              		.align	2
 14088              		.set	.LANCHOR112,. + 0
 14091              	_ZZ14Update_ButtonsvE9resetTime:
 14092 0000 00000000 		.space	4
 14093              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14094              		.align	2
 14095              		.set	.LANCHOR113,. + 0
 14098              	_ZZ14Update_ButtonsvE9shiftTime:
 14099 0000 00000000 		.space	4
 14100              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14101              		.align	2
 14102              		.set	.LANCHOR34,. + 0
 14105              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14106 0000 00000000 		.space	4
 14107              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14108              		.align	2
 14109              		.set	.LANCHOR30,. + 0
 14112              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14113 0000 00000000 		.space	4
 14114              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14115              		.align	2
 14116              		.set	.LANCHOR31,. + 0
 14119              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14120 0000 00000000 		.space	4
 14121              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14122              		.set	.LANCHOR33,. + 0
 14125              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14126 0000 00       		.space	1
 14127              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14128              		.set	.LANCHOR29,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 410


 14131              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14132 0000 00       		.space	1
 14133              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14134              		.set	.LANCHOR28,. + 0
 14137              	_ZZ16Update_feedbackLvE9lastShift:
 14138 0000 00       		.space	1
 14139              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14140              		.align	2
 14141              		.set	.LANCHOR46,. + 0
 14144              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14145 0000 00000000 		.space	4
 14146              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14147              		.align	2
 14148              		.set	.LANCHOR42,. + 0
 14151              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14152 0000 00000000 		.space	4
 14153              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14154              		.align	2
 14155              		.set	.LANCHOR43,. + 0
 14158              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14159 0000 00000000 		.space	4
 14160              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 14161              		.set	.LANCHOR45,. + 0
 14164              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14165 0000 00       		.space	1
 14166              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 14167              		.set	.LANCHOR41,. + 0
 14170              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 14171 0000 00       		.space	1
 14172              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14173              		.set	.LANCHOR40,. + 0
 14176              	_ZZ16Update_feedbackRvE9lastShift:
 14177 0000 00       		.space	1
 14178              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14179              		.align	2
 14180              		.set	.LANCHOR10,. + 0
 14183              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14184 0000 00000000 		.space	4
 14185              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14186              		.align	2
 14187              		.set	.LANCHOR11,. + 0
 14190              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14191 0000 00000000 		.space	4
 14192              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14193              		.align	2
 14194              		.set	.LANCHOR14,. + 0
 14197              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14198 0000 00000000 		.space	4
 14199              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14200              		.set	.LANCHOR9,. + 0
 14203              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14204 0000 00       		.space	1
 14205              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14206              		.set	.LANCHOR13,. + 0
 14209              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14210 0000 00       		.space	1
 14211              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 411


 14212              		.align	2
 14213              		.set	.LANCHOR6,. + 0
 14216              	_ZZ17Update_DelayTimeLvE8counterL:
 14217 0000 00000000 		.space	4
 14218              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14219              		.set	.LANCHOR8,. + 0
 14222              	_ZZ17Update_DelayTimeLvE9lastShift:
 14223 0000 00       		.space	1
 14224              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 14225              		.align	2
 14226              		.set	.LANCHOR24,. + 0
 14229              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14230 0000 00000000 		.space	4
 14231              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14232              		.align	2
 14233              		.set	.LANCHOR21,. + 0
 14236              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14237 0000 00000000 		.space	4
 14238              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14239              		.align	2
 14240              		.set	.LANCHOR22,. + 0
 14243              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 14244 0000 00000000 		.space	4
 14245              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14246              		.set	.LANCHOR23,. + 0
 14249              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 14250 0000 00       		.space	1
 14251              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 14252              		.set	.LANCHOR20,. + 0
 14255              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14256 0000 00       		.space	1
 14257              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14258              		.align	2
 14259              		.set	.LANCHOR18,. + 0
 14262              	_ZZ17Update_DelayTimeRvE8counterR:
 14263 0000 00000000 		.space	4
 14264              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14265              		.set	.LANCHOR19,. + 0
 14268              	_ZZ17Update_DelayTimeRvE9lastShift:
 14269 0000 00       		.space	1
 14270              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14271              		.align	2
 14272              		.set	.LANCHOR82,. + 0
 14275              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14276 0000 00000000 		.space	4
 14277              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14278              		.align	2
 14279              		.set	.LANCHOR79,. + 0
 14282              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14283 0000 00000000 		.space	4
 14284              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14285              		.align	2
 14286              		.set	.LANCHOR84,. + 0
 14289              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14290 0000 00000000 		.space	4
 14291              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14292              		.set	.LANCHOR81,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 412


 14295              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14296 0000 00       		.space	1
 14297              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14298              		.set	.LANCHOR78,. + 0
 14301              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14302 0000 00       		.space	1
 14303              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14304              		.set	.LANCHOR77,. + 0
 14307              	_ZZ18Update_filterXfadevE9lastShift:
 14308 0000 00       		.space	1
 14309              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14310              		.align	2
 14311              		.set	.LANCHOR92,. + 0
 14314              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14315 0000 00000000 		.space	4
 14316              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14317              		.align	2
 14318              		.set	.LANCHOR74,. + 0
 14321              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14322 0000 00000000 		.space	4
 14323              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14324              		.set	.LANCHOR73,. + 0
 14327              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14328 0000 00       		.space	1
 14329              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14330              		.align	2
 14331              		.set	.LANCHOR71,. + 0
 14334              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 14335 0000 00000000 		.space	4
 14336              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14337              		.align	2
 14338              		.set	.LANCHOR75,. + 0
 14341              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14342 0000 00000000 		.space	4
 14343              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 14344              		.set	.LANCHOR70,. + 0
 14347              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14348 0000 00       		.space	1
 14349              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14350              		.set	.LANCHOR69,. + 0
 14353              	_ZZ20Update_crossfeedbackvE9lastShift:
 14354 0000 00       		.space	1
 14355              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14356              		.align	2
 14357              		.set	.LANCHOR110,. + 0
 14360              	_ZZ4mainE9saveTimer:
 14361 0000 00000000 		.space	4
 14362              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 14363              		.align	2
 14364              		.set	.LANCHOR129,. + 0
 14367              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 14368 0000 00000000 		.space	4
 14369              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 14370              		.align	2
 14371              		.set	.LANCHOR130,. + 0
 14374              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 14375 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 413


 14376              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 14377              		.align	2
 14378              		.set	.LANCHOR116,. + 0
 14381              	_ZZL13AudioCallbackPfS_jE7Counter:
 14382 0000 00000000 		.space	4
 14383              		.section	.bss.crossfeedback,"aw",%nobits
 14384              		.align	2
 14385              		.set	.LANCHOR72,. + 0
 14388              	crossfeedback:
 14389 0000 00000000 		.space	4
 14390              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14391              		.align	2
 14394              	crossfeedback_CV:
 14395 0000 00000000 		.space	4
 14396              		.section	.bss.delayL,"aw",%nobits
 14397              		.align	2
 14398              		.set	.LANCHOR0,. + 0
 14401              	delayL:
 14402 0000 00000000 		.space	296
 14402      00000000 
 14402      00000000 
 14402      00000000 
 14402      00000000 
 14403              		.section	.bss.delayR,"aw",%nobits
 14404              		.align	2
 14405              		.set	.LANCHOR1,. + 0
 14408              	delayR:
 14409 0000 00000000 		.space	296
 14409      00000000 
 14409      00000000 
 14409      00000000 
 14409      00000000 
 14410              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14411              		.align	2
 14412              		.set	.LANCHOR5,. + 0
 14415              	delayTimeL_CV:
 14416 0000 00000000 		.space	4
 14417              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14418              		.align	2
 14419              		.set	.LANCHOR17,. + 0
 14422              	delayTimeR_CV:
 14423 0000 00000000 		.space	4
 14424              		.section	.bss.delaysL_REV,"aw",%nobits
 14425              		.align	2
 14426              		.set	.LANCHOR2,. + 0
 14429              	delaysL_REV:
 14430 0000 00000000 		.space	8
 14430      00000000 
 14431              		.section	.bss.delaysR_REV,"aw",%nobits
 14432              		.align	2
 14433              		.set	.LANCHOR3,. + 0
 14436              	delaysR_REV:
 14437 0000 00000000 		.space	8
 14437      00000000 
 14438              		.section	.bss.drywet_CV,"aw",%nobits
 14439              		.align	2
 14440              		.set	.LANCHOR51,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 414


 14443              	drywet_CV:
 14444 0000 00000000 		.space	4
 14445              		.section	.bss.feedbackL,"aw",%nobits
 14446              		.align	2
 14447              		.set	.LANCHOR32,. + 0
 14450              	feedbackL:
 14451 0000 00000000 		.space	4
 14452              		.section	.bss.feedbackL_CV,"aw",%nobits
 14453              		.align	2
 14454              		.set	.LANCHOR27,. + 0
 14457              	feedbackL_CV:
 14458 0000 00000000 		.space	4
 14459              		.section	.bss.feedbackR,"aw",%nobits
 14460              		.align	2
 14461              		.set	.LANCHOR44,. + 0
 14464              	feedbackR:
 14465 0000 00000000 		.space	4
 14466              		.section	.bss.feedbackR_CV,"aw",%nobits
 14467              		.align	2
 14468              		.set	.LANCHOR39,. + 0
 14471              	feedbackR_CV:
 14472 0000 00000000 		.space	4
 14473              		.section	.bss.filterXfade,"aw",%nobits
 14474              		.align	2
 14475              		.set	.LANCHOR80,. + 0
 14478              	filterXfade:
 14479 0000 00000000 		.space	4
 14480              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 14481              		.align	2
 14482              		.set	.LANCHOR85,. + 0
 14485              	modulation_CV_Raw:
 14486 0000 00000000 		.space	4
 14487              		.section	.bss.mute,"aw",%nobits
 14488              		.set	.LANCHOR114,. + 0
 14491              	mute:
 14492 0000 00       		.space	1
 14493              		.section	.bss.saveState,"aw",%nobits
 14494              		.set	.LANCHOR109,. + 0
 14497              	saveState:
 14498 0000 00       		.space	1
 14499              		.section	.bss.save_flag,"aw",%nobits
 14500              		.align	2
 14501              		.set	.LANCHOR16,. + 0
 14504              	save_flag:
 14505 0000 00       		.space	1
 14506              		.section	.bss.shift,"aw",%nobits
 14507              		.set	.LANCHOR7,. + 0
 14510              	shift:
 14511 0000 00       		.space	1
 14512              		.section	.bss.syncMode,"aw",%nobits
 14513              		.set	.LANCHOR12,. + 0
 14516              	syncMode:
 14517 0000 00       		.space	1
 14518              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14519              		.align	2
 14520              		.set	.LANCHOR91,. + 0
 14523              	tempoLED_BASE:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 415


 14524 0000 00000000 		.space	72
 14524      00000000 
 14524      00000000 
 14524      00000000 
 14524      00000000 
 14525              		.section	.bss.width_CV,"aw",%nobits
 14526              		.align	2
 14527              		.set	.LANCHOR59,. + 0
 14530              	width_CV:
 14531 0000 00000000 		.space	4
 14532              		.section	.data.drywet,"aw"
 14533              		.align	2
 14534              		.set	.LANCHOR56,. + 0
 14537              	drywet:
 14538 0000 0000003F 		.word	1056964608
 14539              		.section	.data.width,"aw"
 14540              		.align	2
 14541              		.set	.LANCHOR64,. + 0
 14544              	width:
 14545 0000 0000803F 		.word	1065353216
 14546              		.section	.rodata.CSWTCH.371,"a"
 14547              		.align	3
 14548              		.set	.LANCHOR25,. + 0
 14551              	CSWTCH.371:
 14552 0000 00000000 		.word	0
 14553 0004 0000F83F 		.word	1073217536
 14554 0008 00000000 		.word	0
 14555 000c 00000040 		.word	1073741824
 14556 0010 00000000 		.word	0
 14557 0014 00000840 		.word	1074266112
 14558              		.section	.rodata._ZL18defaultAltControls,"a"
 14559              		.align	2
 14560              		.set	.LANCHOR115,. + 0
 14563              	_ZL18defaultAltControls:
 14564 0000 00650148 		.word	1208050944
 14565 0004 0000803F 		.word	1065353216
 14566 0008 00000000 		.word	0
 14567 000c 9A99A140 		.word	1084332442
 14568 0010 00004843 		.word	1128792064
 14569 0014 00803B46 		.word	1178304512
 14570 0018 00000000 		.word	0
 14571 001c 00000000 		.word	0
 14572 0020 0024F448 		.word	1223959552
 14573 0024 00000000 		.word	0
 14574 0028 00000000 		.word	0
 14575              		.section	.sdram_bss,"aw"
 14576              		.align	2
 14579              	delMemsR_REV:
 14580 0000 00000000 		.space	2400040
 14580      00000000 
 14580      00000000 
 14580      00000000 
 14580      00000000 
 14583              	delMemsL_REV:
 14584 249f28 00000000 		.space	2400040
 14584      00000000 
 14584      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 416


 14584      00000000 
 14584      00000000 
 14587              	delMemsR:
 14588 493e50 00000000 		.space	6912136
 14588      00000000 
 14588      00000000 
 14588      00000000 
 14588      00000000 
 14591              	delMemsL:
 14592 b2b6d8 00000000 		.space	6912136
 14592      00000000 
 14592      00000000 
 14592      00000000 
 14592      00000000 
 14593              		.text
 14594              	.Letext0:
 14595              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14596              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 14597              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14598              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 14599              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14600              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14601              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14602              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14603              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14604              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14605              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14606              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14607              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14608              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14609              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14610              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14611              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14612              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14613              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14614              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14615              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14616              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14617              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14618              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14619              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14620              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14621              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14622              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14623              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14624              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14625              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14626              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14627              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14628              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14629              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14630              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14631              		.file 64 "../libdaisy/src/daisy_core.h"
 14632              		.file 65 "../libdaisy/src/per/tim.h"
 14633              		.file 66 "../libdaisy/src/per/sai.h"
 14634              		.file 67 "../libdaisy/src/util/wav_format.h"
 14635              		.file 68 "../libdaisy/src/per/qspi.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 417


 14636              		.file 69 "../libdaisy/src/per/gpio.h"
 14637              		.file 70 "../libdaisy/src/dev/sdram.h"
 14638              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14639              		.file 72 "<built-in>"
 14640              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14641              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14642              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 14643              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 14644              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 14645              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 14646              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 14647              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 14648              		.file 81 "../libdaisy/src/sys/fatfs.h"
 14649              		.file 82 "../DaisySP/Source/Control/adenv.h"
 14650              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14651              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14652              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14653              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14654              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14655              		.file 88 "QSPI_Settings.h"
 14656              		.file 89 "scale.h"
 14657              		.file 90 "constants.h"
 14658              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 418


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:43     .text._ZN5daisy6GateInD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:68     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:117    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:142    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:167    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:192    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14591  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14587  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14583  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14579  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1636   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 419


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1666   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1674   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1705   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:1713   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2202   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2229   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2237   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2268   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2276   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2731   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2760   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2768   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2799   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:2807   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3261   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3290   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3298   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3323   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3329   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3337   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3846   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3883   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3891   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3916   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3922   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:3930   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:4403   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:4429   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:4437   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:4798   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:4818   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:4826   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5163   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5186   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5194   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5224   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5232   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5240   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5397   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5409   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5417   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5540   .text._Z11UpdateClockv:0000000000000054 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5555   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5563   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5615   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5622   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5630   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5663   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5670   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5678   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5800   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5811   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:5819   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:6521   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 420


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:6562   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:6641   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:6655   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:6663   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:7535   .text.startup.main:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:7569   .text.startup.main:00000000000003bc $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8081   .text.startup.main:0000000000000610 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:9031   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8105   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8113   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8175   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8186   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8194   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8297   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8309   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8317   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:8998   .text._Z14Update_Buttonsv:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:9024   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:9100   .text._ZL13AudioCallbackPfS_j:000000000000003a $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:9115   .text._ZL13AudioCallbackPfS_j:0000000000000058 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:9161   .text._ZL13AudioCallbackPfS_j:0000000000000088 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:9173   .text._ZL13AudioCallbackPfS_j:00000000000000a0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:10239  .text._ZL13AudioCallbackPfS_j:0000000000000444 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:10281  .text._ZL13AudioCallbackPfS_j:00000000000004e4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:11102  .text._ZL13AudioCallbackPfS_j:0000000000000820 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:11118  .text._ZL13AudioCallbackPfS_j:0000000000000850 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12012  .text._ZL13AudioCallbackPfS_j:0000000000000ba4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12050  .text._ZL13AudioCallbackPfS_j:0000000000000c14 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12227  .text._ZL13AudioCallbackPfS_j:0000000000000cb8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12237  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12245  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12279  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12287  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12334  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12339  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12347  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12431  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12436  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12444  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12534  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12539  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12547  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12577  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12582  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:12589  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13504  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000268 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13580  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13635  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13642  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13655  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13667  .bss.ClockPin:0000000000000000 ClockPin
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13754  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13747  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13740  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13673  .bss.DEBUG:0000000000000000 DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13648  .bss.CLOCK_DEBUG:0000000000000000 CLOCK_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13713  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 421


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13685  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13679  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14497  .bss.saveState:0000000000000000 saveState
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14504  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13719  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13660  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14491  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14510  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14516  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14485  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13706  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14478  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14530  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14544  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14443  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14537  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14394  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14388  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14471  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14464  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14457  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14450  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14422  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14415  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14523  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13761  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13733  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13726  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13692  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13699  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14436  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14429  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14408  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14401  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13631  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13638  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13645  .bss.CLOCK_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13651  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13661  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13663  .bss.ClockPin:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13674  .bss.DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13676  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13682  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13688  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13695  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13702  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13709  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13720  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13722  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13729  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13736  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13743  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13750  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13757  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13764  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13768  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13771  .bss._ZL10FwdRevREnv:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 422


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13775  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13778  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13782  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13785  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13789  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13792  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13796  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13799  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13803  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13806  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13810  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13813  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13817  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13820  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13824  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13827  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13831  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13834  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13838  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13841  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13845  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13848  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13852  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13855  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13859  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13862  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13866  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13869  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13873  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13876  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13880  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13883  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13887  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13890  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13894  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13897  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13901  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13904  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13908  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13911  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13915  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13918  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13922  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13925  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13929  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13932  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13936  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13939  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13943  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13946  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13950  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13953  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13957  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13960  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13964  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13967  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13971  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 423


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13974  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13978  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13981  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13985  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13988  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13992  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13995  .bss._ZZ11UpdateClockvE12ClockCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:13999  .bss._ZZ11UpdateClockvE12ClockCounter:0000000000000000 _ZZ11UpdateClockvE12ClockCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14002  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14006  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14009  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14013  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14019  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14020  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14025  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14026  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14031  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14032  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14034  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14038  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14044  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14045  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14047  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14051  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14054  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14058  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14064  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14065  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14067  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14071  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14077  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14078  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14080  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14084  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14087  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14091  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14094  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14098  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14101  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14105  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14108  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14112  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14115  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14119  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14125  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14126  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14131  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14132  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14137  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14138  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14140  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14144  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14147  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14151  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14154  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14158  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14164  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 424


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14165  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14170  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14171  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14176  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14177  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14179  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14183  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14186  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14190  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14193  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14197  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14203  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14204  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14209  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14210  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14212  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14216  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14222  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14223  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14225  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14229  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14232  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14236  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14239  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14243  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14249  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14250  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14255  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14256  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14258  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14262  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14268  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14269  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14271  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14275  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14278  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14282  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14285  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14289  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14295  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14296  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14301  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14302  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14307  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14308  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14310  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14314  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14317  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14321  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14327  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14328  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14330  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14334  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14337  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14341  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14347  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14348  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 425


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14353  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14354  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14356  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14360  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14363  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14367  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14370  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14374  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14377  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14381  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14384  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14391  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14397  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14404  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14411  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14418  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14425  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14432  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14439  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14446  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14453  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14460  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14467  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14474  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14481  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14492  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14498  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14500  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14511  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14517  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14519  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14526  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14533  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14540  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14547  .rodata.CSWTCH.371:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14551  .rodata.CSWTCH.371:0000000000000000 CSWTCH.371
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14559  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14563  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s:14576  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy6GateInD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 426


_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6GateIn4TrigEv
_ZN8Taptempo5clockEm
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12setTapLengthEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN8Taptempo4initEmmf
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN5daisy6Switch8DebounceEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN8Taptempo3tapEv
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccVVsoDe.s 			page 427


_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
