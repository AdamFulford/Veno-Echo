ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB779:
  61              	.LBI779:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE779:
  66              	.LBB780:
  67              	.LBI780:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE780:
  72              	.LBB781:
  73              	.LBI781:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE781:
  78              	.LBB782:
  79              	.LBI782:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE782:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         bool tapflag_;
  37:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  38:taptempo.h    **** 
  39:taptempo.h    ****     public:
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 14


  41:taptempo.h    ****     Taptempo()  //default constructor
  42:taptempo.h    ****     {
  43:taptempo.h    ****         tapflag_ = false;
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
  45:taptempo.h    ****         maxtap_ = 2000;
  46:taptempo.h    ****         mintap_ = 80;
  47:taptempo.h    ****         lastTapLength_ = 0;
  48:taptempo.h    ****         tempo_ = 500.0f;
  49:taptempo.h    ****         lastTime_ = 0;
  50:taptempo.h    ****         currentTime_ = 0;
  51:taptempo.h    ****         tapRatio_ = 1.0f;
  52:taptempo.h    **** 
  53:taptempo.h    ****     }
  54:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 54 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 54 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3953:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 15


  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** 
  29:LEDs.h        **** using namespace daisysp;
  30:LEDs.h        **** using namespace daisy;
  31:LEDs.h        **** 
  32:LEDs.h        **** class TempoLED
  33:LEDs.h        **** {
  34:LEDs.h        **** 
  35:LEDs.h        **** Led led;
  36:LEDs.h        **** Oscillator blink;
  37:LEDs.h        **** 
  38:LEDs.h        **** public:
  39:LEDs.h        **** 
  40:LEDs.h        **** TempoLED(){}
  41:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 41 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB783:
 285              	.LBI783:
 286              		.loc 8 16 5 view .LVU27
 287              		.loc 8 16 5 is_stmt 0 view .LVU28
 288              	.LBE783:
 289              	.LBB784:
 290              	.LBI784:
 291              		.file 15 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 16


  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 292              		.loc 15 25 5 is_stmt 1 view .LVU29
 293              		.loc 15 25 5 is_stmt 0 view .LVU30
 294              	.LBE784:
 295              		.loc 14 41 13 view .LVU31
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE3953:
 300              		.weak	_ZN8TempoLEDD1Ev
 301              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 302 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 303              		.align	1
 304              		.p2align 2,,3
 305              		.weak	_ZN9ButtonLEDD2Ev
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	_ZN9ButtonLEDD2Ev:
 312              	.LVL10:
 313              	.LFB3959:
  42:LEDs.h        **** 
  43:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  44:LEDs.h        **** 
  45:LEDs.h        **** void setTempo(float tempo);
  46:LEDs.h        **** 
  47:LEDs.h        **** void resetPhase();
  48:LEDs.h        **** 
  49:LEDs.h        **** void update();
  50:LEDs.h        **** 
  51:LEDs.h        **** void LED_set(float brightness);
  52:LEDs.h        **** 
  53:LEDs.h        **** bool isEOC();
  54:LEDs.h        **** 
  55:LEDs.h        **** };
  56:LEDs.h        **** 
  57:LEDs.h        **** class ButtonLED    //button with status LED
  58:LEDs.h        **** {
  59:LEDs.h        ****     public:
  60:LEDs.h        ****     ButtonLED() {}
  61:LEDs.h        ****     ~ButtonLED() {}
 314              		.loc 14 61 5 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LBB785:
 320              	.LBI785:
 321              		.loc 15 25 5 view .LVU33
 322              		.loc 15 25 5 is_stmt 0 view .LVU34
 323              	.LBE785:
 324              	.LBB786:
 325              	.LBI786:
 326              		.loc 1 41 5 is_stmt 1 view .LVU35
 327              		.loc 1 41 5 is_stmt 0 view .LVU36
 328              	.LBE786:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 17


 329              		.loc 14 61 19 view .LVU37
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE3959:
 334              		.weak	_ZN9ButtonLEDD1Ev
 335              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 336 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN10DelayMultiD2Ev
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	_ZN10DelayMultiD2Ev:
 346              	.LVL11:
 347              	.LFB3965:
 348              		.file 16 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 18


  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 349              		.loc 16 50 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LBB787:
 355              	.LBI787:
  41:LEDs.h        **** 
 356              		.loc 14 41 1 view .LVU39
 357              	.LBB788:
 358              	.LBI788:
 359              		.loc 8 16 5 view .LVU40
 360              		.loc 8 16 5 is_stmt 0 view .LVU41
 361              	.LBE788:
 362              	.LBB789:
 363              	.LBI789:
 364              		.loc 15 25 5 is_stmt 1 view .LVU42
 365              		.loc 15 25 5 is_stmt 0 view .LVU43
 366              	.LBE789:
 367              	.LBE787:
 368              		.loc 16 50 16 view .LVU44
 369 0000 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE3965:
 373              		.weak	_ZN10DelayMultiD1Ev
 374              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 375 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 376              		.align	1
 377              		.p2align 2,,3
 378              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 385              	.LVL12:
 386              	.LFB4892:
 387              		.file 17 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 19


   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 388              		.loc 17 52 5 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              		.loc 17 52 27 is_stmt 0 view .LVU46
 394 0000 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE4892:
 398              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 399              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 400 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 401              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 20


 402              		.p2align 2,,3
 403              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv5-d16
 409              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 410              	.LVL13:
 411              	.LFB4895:
 412              		.file 18 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 413              		.loc 18 39 5 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              		.loc 18 39 26 is_stmt 0 view .LVU48
 419 0000 7047     		bx	lr
 420              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 21


 421              	.LFE4895:
 423              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 424              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 425 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 426              		.align	1
 427              		.p2align 2,,3
 428              		.global	_Z10InitDelaysf
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv5-d16
 434              	_Z10InitDelaysf:
 435              	.LVL14:
 436              	.LFB4289:
 437              		.file 19 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 22


  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 23


 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV;
 107:Veno-Echo.cpp **** float delayTimeR_CV;
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** bool delayL_flag{true};
 143:Veno-Echo.cpp **** bool delayR_flag{true};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 24


 157:Veno-Echo.cpp **** 
 158:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 163:Veno-Echo.cpp **** 
 164:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 169:Veno-Echo.cpp **** 
 170:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** //Gate inputs
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Switch TapButton;
 182:Veno-Echo.cpp **** Switch Sync;
 183:Veno-Echo.cpp **** Switch ClockIn;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Tap tempo
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f
 203:Veno-Echo.cpp **** };
 204:Veno-Echo.cpp **** 
 205:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 206:Veno-Echo.cpp **** void Update_DelayTimeL();
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeR();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_feedbackL_CV();
 212:Veno-Echo.cpp **** void Update_feedbackL();
 213:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 25


 214:Veno-Echo.cpp **** void Update_feedbackR_CV();
 215:Veno-Echo.cpp **** void Update_feedbackR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_drywet_CV();
 218:Veno-Echo.cpp **** void Update_drywet();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_width_CV();
 221:Veno-Echo.cpp **** void Update_width();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_crossfeedback();
 224:Veno-Echo.cpp **** void Update_filterXfade();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_Buttons();
 227:Veno-Echo.cpp **** void Update_BaseTempoLED();
 228:Veno-Echo.cpp **** void Update_Mod();
 229:Veno-Echo.cpp **** void GetModCV();
 230:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 231:Veno-Echo.cpp **** void UpdateClock();
 232:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 233:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 234:Veno-Echo.cpp **** void TurnOnAllLEDs();
 235:Veno-Echo.cpp **** void ResetAllLEDs();
 236:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 237:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 238:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 239:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 240:Veno-Echo.cpp **** 
 241:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 242:Veno-Echo.cpp **** {
 243:Veno-Echo.cpp **** 
 244:Veno-Echo.cpp **** /*
 245:Veno-Echo.cpp **** static uint32_t funcLength{};
 246:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 247:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 248:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 249:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 250:Veno-Echo.cpp **** 
 251:Veno-Echo.cpp **** */
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** static int Counter{};
 254:Veno-Echo.cpp **** 
 255:Veno-Echo.cpp **** /*
 256:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 257:Veno-Echo.cpp **** 
 258:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 259:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 260:Veno-Echo.cpp ****     {
 261:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 262:Veno-Echo.cpp ****     }
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 265:Veno-Echo.cpp ****     {
 266:Veno-Echo.cpp ****         minFuncLength = funcLength;
 267:Veno-Echo.cpp ****     }
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp **** */
 270:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 26


 271:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 272:Veno-Echo.cpp **** 
 273:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 274:Veno-Echo.cpp **** {
 275:Veno-Echo.cpp ****     /*
 276:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 277:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 278:Veno-Echo.cpp ****         //init timeofCall as current time
 279:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****         //wait for random Dither time
 282:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 283:Veno-Echo.cpp ****         {}
 284:Veno-Echo.cpp ****     */
 285:Veno-Echo.cpp **** 
 286:Veno-Echo.cpp ****         switch (Counter)
 287:Veno-Echo.cpp ****         {
 288:Veno-Echo.cpp ****             case 0:
 289:Veno-Echo.cpp ****                 Update_Buttons();
 290:Veno-Echo.cpp ****                 GetModCV();
 291:Veno-Echo.cpp ****             break;
 292:Veno-Echo.cpp **** 
 293:Veno-Echo.cpp ****             case 1:
 294:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 295:Veno-Echo.cpp ****             break;
 296:Veno-Echo.cpp **** 
 297:Veno-Echo.cpp ****             case 2:
 298:Veno-Echo.cpp ****                 Update_DelayTimeL();
 299:Veno-Echo.cpp ****             break;
 300:Veno-Echo.cpp **** 
 301:Veno-Echo.cpp ****             case 3:
 302:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 303:Veno-Echo.cpp ****             break;
 304:Veno-Echo.cpp **** 
 305:Veno-Echo.cpp ****             case 4:
 306:Veno-Echo.cpp ****                 Update_DelayTimeR();
 307:Veno-Echo.cpp ****             break;
 308:Veno-Echo.cpp **** 
 309:Veno-Echo.cpp ****             case 5:
 310:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 6:
 314:Veno-Echo.cpp ****                 Update_feedbackL();
 315:Veno-Echo.cpp ****             break;
 316:Veno-Echo.cpp **** 
 317:Veno-Echo.cpp ****             case 7:
 318:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 319:Veno-Echo.cpp ****             break;
 320:Veno-Echo.cpp **** 
 321:Veno-Echo.cpp ****             case 8:
 322:Veno-Echo.cpp ****                 Update_feedbackR();
 323:Veno-Echo.cpp ****             break;
 324:Veno-Echo.cpp **** 
 325:Veno-Echo.cpp ****             case 9:
 326:Veno-Echo.cpp ****                 Update_drywet_CV();
 327:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 27


 328:Veno-Echo.cpp **** 
 329:Veno-Echo.cpp ****             case 10:
 330:Veno-Echo.cpp ****                 Update_drywet();
 331:Veno-Echo.cpp ****             break;
 332:Veno-Echo.cpp **** 
 333:Veno-Echo.cpp ****             case 11:
 334:Veno-Echo.cpp ****                 Update_width_CV();
 335:Veno-Echo.cpp ****             break;
 336:Veno-Echo.cpp **** 
 337:Veno-Echo.cpp ****             case 12:
 338:Veno-Echo.cpp ****                 Update_width();
 339:Veno-Echo.cpp ****             break;
 340:Veno-Echo.cpp **** 
 341:Veno-Echo.cpp ****             case 13:
 342:Veno-Echo.cpp ****                 Update_crossfeedback();
 343:Veno-Echo.cpp ****             break;
 344:Veno-Echo.cpp **** 
 345:Veno-Echo.cpp ****             case 14:
 346:Veno-Echo.cpp ****                 Update_filterXfade();
 347:Veno-Echo.cpp ****             break;
 348:Veno-Echo.cpp ****         }
 349:Veno-Echo.cpp **** }
 350:Veno-Echo.cpp **** 
 351:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 352:Veno-Echo.cpp ****     {   
 353:Veno-Echo.cpp ****         UpdateClock(); 
 354:Veno-Echo.cpp ****         Update_Mod();
 355:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 356:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 357:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 358:Veno-Echo.cpp ****         
 359:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 360:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 361:Veno-Echo.cpp **** 
 362:Veno-Echo.cpp ****         //set xfade positions      
 363:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 364:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 365:Veno-Echo.cpp ****         
 366:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 367:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 368:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 369:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 370:Veno-Echo.cpp **** 
 371:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 372:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 373:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 374:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 375:Veno-Echo.cpp **** 
 376:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 377:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 378:Veno-Echo.cpp **** 
 379:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 380:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 383:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 384:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 28


 385:Veno-Echo.cpp **** 
 386:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 387:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 388:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 389:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 390:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 391:Veno-Echo.cpp **** 
 392:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 393:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 394:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 395:Veno-Echo.cpp **** 
 396:Veno-Echo.cpp ****         //Get combined output from all delay heads
 397:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 398:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 399:Veno-Echo.cpp ****         //Update Base Tempo LED
 400:Veno-Echo.cpp ****         Update_BaseTempoLED();
 401:Veno-Echo.cpp **** 
 402:Veno-Echo.cpp ****         //hard limit
 403:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 404:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 405:Veno-Echo.cpp **** 
 406:Veno-Echo.cpp **** if(!PostFilters)
 407:Veno-Echo.cpp **** {
 408:Veno-Echo.cpp **** //****************************************************************************************
 409:Veno-Echo.cpp ****         //pre filters
 410:Veno-Echo.cpp ****         //process LPF
 411:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 412:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 413:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 416:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 417:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 418:Veno-Echo.cpp ****         
 419:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 420:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 421:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 422:Veno-Echo.cpp **** 
 423:Veno-Echo.cpp ****         //hard limit
 424:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 425:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 426:Veno-Echo.cpp **** 
 427:Veno-Echo.cpp ****         //process HPF
 428:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 429:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 430:Veno-Echo.cpp **** 
 431:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 432:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 433:Veno-Echo.cpp **** 
 434:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 435:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 438:Veno-Echo.cpp **** 
 439:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 440:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 441:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 29


 442:Veno-Echo.cpp **** //****************************************************************************************
 443:Veno-Echo.cpp **** }
 444:Veno-Echo.cpp **** 
 445:Veno-Echo.cpp **** else
 446:Veno-Echo.cpp **** {
 447:Veno-Echo.cpp ****     /* code */
 448:Veno-Echo.cpp **** }
 449:Veno-Echo.cpp **** 
 450:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 451:Veno-Echo.cpp ****         static float RNegFB{};
 452:Veno-Echo.cpp **** 
 453:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 454:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 455:Veno-Echo.cpp ****             LNegFB = 0.0f;
 456:Veno-Echo.cpp ****         
 457:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 458:Veno-Echo.cpp ****             RNegFB = 0.0f;
 459:Veno-Echo.cpp **** 
 460:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 461:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 462:Veno-Echo.cpp **** 
 463:Veno-Echo.cpp ****         //crossfeedback:
 464:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 465:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp **** 
 468:Veno-Echo.cpp ****         //get envelopes for feedback signals
 469:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 470:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 471:Veno-Echo.cpp **** 
 472:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 473:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 474:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 475:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 476:Veno-Echo.cpp ****             else LNegFB = 0.0;
 477:Veno-Echo.cpp ****             
 478:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 479:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 480:Veno-Echo.cpp ****             else RNegFB = 0.0;
 481:Veno-Echo.cpp **** 
 482:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 483:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 484:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 485:Veno-Echo.cpp ****  
 486:Veno-Echo.cpp ****         //hard limit
 487:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 488:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 489:Veno-Echo.cpp **** 
 490:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 491:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 492:Veno-Echo.cpp **** 
 493:Veno-Echo.cpp ****         // floats for wet dry mix
 494:Veno-Echo.cpp ****         float mixL;
 495:Veno-Echo.cpp ****         float mixR;
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 498:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 30


 499:Veno-Echo.cpp **** 
 500:Veno-Echo.cpp ****         //hard limit
 501:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 502:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 503:Veno-Echo.cpp **** 
 504:Veno-Echo.cpp **** if(PostFilters)
 505:Veno-Echo.cpp **** {
 506:Veno-Echo.cpp ****     //****************************************************************************************
 507:Veno-Echo.cpp ****         //post filters
 508:Veno-Echo.cpp ****         //process LPF
 509:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 510:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 511:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 512:Veno-Echo.cpp **** 
 513:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 514:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 515:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 516:Veno-Echo.cpp ****         
 517:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 518:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 519:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 520:Veno-Echo.cpp **** 
 521:Veno-Echo.cpp ****         //hard limit
 522:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 523:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 524:Veno-Echo.cpp **** 
 525:Veno-Echo.cpp ****         //process HPF
 526:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 527:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 528:Veno-Echo.cpp **** 
 529:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 530:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 531:Veno-Echo.cpp **** 
 532:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 533:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 534:Veno-Echo.cpp **** 
 535:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 536:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 538:Veno-Echo.cpp **** 
 539:Veno-Echo.cpp ****     //****************************************************************************************
 540:Veno-Echo.cpp **** }
 541:Veno-Echo.cpp **** else
 542:Veno-Echo.cpp **** {
 543:Veno-Echo.cpp ****     /* code */
 544:Veno-Echo.cpp **** }
 545:Veno-Echo.cpp ****         if(drywet < 0.5f)
 546:Veno-Echo.cpp ****         {
 547:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 548:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 549:Veno-Echo.cpp ****         }
 550:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 551:Veno-Echo.cpp ****         {
 552:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 553:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 554:Veno-Echo.cpp ****         }
 555:Veno-Echo.cpp ****         else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 31


 556:Veno-Echo.cpp ****         {
 557:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 558:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 559:Veno-Echo.cpp ****         }
 560:Veno-Echo.cpp **** 
 561:Veno-Echo.cpp ****         //send mixes to outputs
 562:Veno-Echo.cpp ****         if(mute)
 563:Veno-Echo.cpp ****         {
 564:Veno-Echo.cpp ****             out[i] = 0.0f;
 565:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 566:Veno-Echo.cpp ****         }
 567:Veno-Echo.cpp ****         else
 568:Veno-Echo.cpp ****         {
 569:Veno-Echo.cpp ****             out[i] = mixL;
 570:Veno-Echo.cpp ****             out[i+1] = mixR;
 571:Veno-Echo.cpp ****         }
 572:Veno-Echo.cpp **** 
 573:Veno-Echo.cpp ****         //write to DAC for debug
 574:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 575:Veno-Echo.cpp **** 
 576:Veno-Echo.cpp ****     }
 577:Veno-Echo.cpp **** 
 578:Veno-Echo.cpp **** }
 579:Veno-Echo.cpp **** 
 580:Veno-Echo.cpp **** void InitDelays(float samplerate)
 581:Veno-Echo.cpp **** {
 438              		.loc 19 581 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 16
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Veno-Echo.cpp **** 
 583:Veno-Echo.cpp ****     //Init fwd delays
 584:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 442              		.loc 19 584 5 view .LVU50
 443              	.LBB790:
 444              	.LBI790:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 445              		.loc 17 56 10 view .LVU51
 446              	.LBB791:
 447              	.LBB792:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 448              		.loc 17 58 29 view .LVU52
 449 0000 624B     		ldr	r3, .L36
 450 0002 6349     		ldr	r1, .L36+4
 451              	.LBE792:
 452              	.LBE791:
 453              	.LBE790:
 581:Veno-Echo.cpp **** 
 454              		.loc 19 581 1 is_stmt 0 view .LVU53
 455 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 456              		.cfi_def_cfa_offset 20
 457              		.cfi_offset 4, -20
 458              		.cfi_offset 5, -16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 32


 459              		.cfi_offset 6, -12
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0006 A3F18405 		sub	r5, r3, #132
 463 000a 85B0     		sub	sp, sp, #20
 464              		.cfi_def_cfa_offset 40
 465 000c 2846     		mov	r0, r5
 466              	.LVL15:
 467              	.L17:
 468              	.LBB797:
 469              	.LBB796:
 470              	.LBB793:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 471              		.loc 17 60 13 view .LVU54
 472 000e 0022     		movs	r2, #0
 473 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 474              		.loc 17 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 475              		.loc 17 58 29 view .LVU56
 476 0014 8B42     		cmp	r3, r1
 477 0016 FAD1     		bne	.L17
 478              	.LBE793:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 479              		.loc 17 63 9 is_stmt 0 view .LVU57
 480 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 481              		.loc 17 64 9 view .LVU58
 482 001a 5E4C     		ldr	r4, .L36+8
 483 001c 0226     		movs	r6, #2
 484              	.LBB794:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 485              		.loc 17 66 21 view .LVU59
 486 001e 1346     		mov	r3, r2
 487              	.LBE794:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 488              		.loc 17 63 9 view .LVU60
 489 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 490              		.loc 17 64 9 view .LVU61
 491 0022 2E51     		str	r6, [r5, r4]
 492              	.LVL16:
 493              	.LBB795:
 494              		.loc 17 66 31 is_stmt 1 view .LVU62
 495              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 496              		.loc 17 68 13 is_stmt 0 view .LVU63
 497 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 498              		.loc 17 66 9 view .LVU64
 499 0026 0133     		adds	r3, r3, #1
 500              	.LVL17:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 33


  69:delayline_multitap.h ****             frac_[i] = 0;
 501              		.loc 17 69 13 view .LVU65
 502 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 503              		.loc 17 68 13 view .LVU66
 504 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 505              		.loc 17 66 31 view .LVU67
 506 002e 0A68     		ldr	r2, [r1]
 507              		.loc 17 69 13 view .LVU68
 508 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 509              		.loc 17 66 9 is_stmt 1 view .LVU69
 510              	.LVL18:
  66:delayline_multitap.h ****         {
 511              		.loc 17 66 31 view .LVU70
 512 0032 9A42     		cmp	r2, r3
 513 0034 F6D8     		bhi	.L18
 514 0036 584B     		ldr	r3, .L36+12
 515              	.LVL19:
  66:delayline_multitap.h ****         {
 516              		.loc 17 66 31 is_stmt 0 view .LVU71
 517 0038 5849     		ldr	r1, .L36+16
 518 003a A3F18406 		sub	r6, r3, #132
 519 003e 3046     		mov	r0, r6
 520              	.LVL20:
 521              	.L19:
  66:delayline_multitap.h ****         {
 522              		.loc 17 66 31 view .LVU72
 523              	.LBE795:
 524              	.LBE796:
 525              	.LBE797:
 526              	.LBB798:
 527              	.LBB799:
 528              	.LBB800:
  60:delayline_multitap.h ****         }
 529              		.loc 17 60 13 view .LVU73
 530 0040 0022     		movs	r2, #0
 531 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 532              		.loc 17 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 533              		.loc 17 58 29 view .LVU75
 534 0046 8B42     		cmp	r3, r1
 535 0048 FAD1     		bne	.L19
 536              	.LBE800:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 537              		.loc 17 63 9 is_stmt 0 view .LVU76
 538 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 539              		.loc 17 64 9 view .LVU77
 540 004c 514C     		ldr	r4, .L36+8
 541 004e 0227     		movs	r7, #2
 542              	.LBB801:
  66:delayline_multitap.h ****         {
 543              		.loc 17 66 21 view .LVU78
 544 0050 1346     		mov	r3, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 34


 545              	.LBE801:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 546              		.loc 17 63 9 view .LVU79
 547 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 548              		.loc 17 64 9 view .LVU80
 549 0054 3751     		str	r7, [r6, r4]
 550              	.LVL21:
 551              	.LBB802:
  66:delayline_multitap.h ****         {
 552              		.loc 17 66 31 is_stmt 1 view .LVU81
 553              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 554              		.loc 17 68 13 is_stmt 0 view .LVU82
 555 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 556              		.loc 17 66 9 view .LVU83
 557 0058 0133     		adds	r3, r3, #1
 558              	.LVL22:
 559              		.loc 17 69 13 view .LVU84
 560 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 561              		.loc 17 68 13 view .LVU85
 562 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 563              		.loc 17 66 31 view .LVU86
 564 0060 0A68     		ldr	r2, [r1]
 565              		.loc 17 69 13 view .LVU87
 566 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 567              		.loc 17 66 9 is_stmt 1 view .LVU88
 568              	.LVL23:
  66:delayline_multitap.h ****         {
 569              		.loc 17 66 31 view .LVU89
 570 0064 9A42     		cmp	r2, r3
 571 0066 F6D8     		bhi	.L20
 572              	.LVL24:
  66:delayline_multitap.h ****         {
 573              		.loc 17 66 31 is_stmt 0 view .LVU90
 574              	.LBE802:
 575              	.LBE799:
 576              	.LBE798:
 585:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 586:Veno-Echo.cpp **** 
 587:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 588:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 577              		.loc 19 588 5 is_stmt 1 view .LVU91
 589:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 578              		.loc 19 589 16 is_stmt 0 view .LVU92
 579 0068 4D4C     		ldr	r4, .L36+20
 590:Veno-Echo.cpp **** 
 591:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 580              		.loc 19 591 16 view .LVU93
 581 006a 0820     		movs	r0, #8
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 582              		.loc 19 588 16 view .LVU94
 583 006c 4D4F     		ldr	r7, .L36+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 35


 584 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 585 0072 3D60     		str	r5, [r7]
 589:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 586              		.loc 19 589 5 is_stmt 1 view .LVU95
 587              	.LBB803:
 588              	.LBB804:
 589              	.LBB805:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 590              		.loc 18 51 9 is_stmt 0 view .LVU96
 591 0074 46F2A815 		movw	r5, #25000
 592              	.LBE805:
 593              	.LBE804:
 594              	.LBE803:
 589:Veno-Echo.cpp **** 
 595              		.loc 19 589 16 view .LVU97
 596 0078 2660     		str	r6, [r4]
 597              		.loc 19 591 5 is_stmt 1 view .LVU98
 598              		.loc 19 591 16 is_stmt 0 view .LVU99
 599 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 600              	.LVL25:
 601              		.loc 19 591 16 view .LVU100
 602 007e 0346     		mov	r3, r0	@ movhi
 603 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 604 0084 3846     		mov	r0, r7
 605 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 606 008a 0299     		ldr	r1, [sp, #8]
 607 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 608              	.LVL26:
 592:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 609              		.loc 19 592 5 is_stmt 1 view .LVU101
 610              		.loc 19 592 16 is_stmt 0 view .LVU102
 611 0090 0920     		movs	r0, #9
 612 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 613              	.LVL27:
 614 0096 0346     		mov	r3, r0	@ movhi
 615 0098 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 616 009c 2046     		mov	r0, r4
 617 009e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 618 00a2 0399     		ldr	r1, [sp, #12]
 619 00a4 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 620              	.LVL28:
 593:Veno-Echo.cpp **** 
 594:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 621              		.loc 19 594 5 is_stmt 1 view .LVU103
 622              		.loc 19 594 24 is_stmt 0 view .LVU104
 623 00a8 9FED3F0A 		vldr.32	s0, .L36+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 36


 624 00ac 3846     		mov	r0, r7
 625 00ae FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 626              	.LVL29:
 595:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 627              		.loc 19 595 5 is_stmt 1 view .LVU105
 628              		.loc 19 595 24 is_stmt 0 view .LVU106
 629 00b2 2046     		mov	r0, r4
 630              	.LBB817:
 631              	.LBB812:
 632              	.LBB807:
 633              		.loc 18 51 9 view .LVU107
 634 00b4 3D4C     		ldr	r4, .L36+32
 635              	.LBE807:
 636              	.LBE812:
 637              	.LBE817:
 638              		.loc 19 595 24 view .LVU108
 639 00b6 9FED3C0A 		vldr.32	s0, .L36+28
 640 00ba FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 641              	.LVL30:
 596:Veno-Echo.cpp **** 
 597:Veno-Echo.cpp ****     //Init rev delays
 598:Veno-Echo.cpp ****     delMemsL_REV.Init();
 642              		.loc 19 598 5 is_stmt 1 view .LVU109
 643              	.LBB818:
 644              	.LBI803:
  42:delayline_reverse.h ****     { 
 645              		.loc 18 42 10 view .LVU110
 646              	.LBB813:
 647              	.LBI804:
  48:delayline_reverse.h ****     {
 648              		.loc 18 48 10 view .LVU111
 649              	.LBB808:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 650              		.loc 18 52 9 is_stmt 0 view .LVU112
 651 00be 3C4A     		ldr	r2, .L36+36
 652 00c0 45F6C050 		movw	r0, #24000
 653 00c4 04F11803 		add	r3, r4, #24
 654 00c8 3A49     		ldr	r1, .L36+40
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 655              		.loc 18 51 9 view .LVU113
 656 00ca 2561     		str	r5, [r4, #16]
 657              		.loc 18 52 9 view .LVU114
 658 00cc A050     		str	r0, [r4, r2]
 659              	.LVL31:
 660              	.LBB806:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 661              		.loc 18 54 29 is_stmt 1 view .LVU115
 662              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 663              		.loc 18 56 13 is_stmt 0 view .LVU116
 664 00ce 0022     		movs	r2, #0
 665 00d0 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 666              		.loc 18 54 9 is_stmt 1 view .LVU117
  54:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 37


 667              		.loc 18 54 29 view .LVU118
 668 00d4 8B42     		cmp	r3, r1
 669 00d6 FAD1     		bne	.L21
 670              	.LBE806:
 671              	.LBE808:
 672              	.LBE813:
 673              	.LBE818:
 674              	.LBB819:
 675              	.LBB820:
 676              	.LBB821:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 677              		.loc 18 51 9 is_stmt 0 view .LVU119
 678 00d8 3748     		ldr	r0, .L36+44
 679 00da 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 680              		.loc 18 52 9 view .LVU120
 681 00de 344D     		ldr	r5, .L36+36
 682 00e0 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 683              		.loc 18 51 9 view .LVU121
 684 00e4 0161     		str	r1, [r0, #16]
 685              	.LBE821:
 686              	.LBE820:
 687              	.LBE819:
 688              	.LBB844:
 689              	.LBB814:
 690              	.LBB809:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 691              		.loc 18 58 9 view .LVU122
 692 00e6 0021     		movs	r1, #0
 693              	.LBE809:
 694              	.LBE814:
 695              	.LBE844:
 696              	.LBB845:
 697              	.LBB834:
 698              	.LBB824:
  52:delayline_reverse.h ****         
 699              		.loc 18 52 9 view .LVU123
 700 00e8 4651     		str	r6, [r0, r5]
 701              	.LBE824:
 702              	.LBE834:
 703              	.LBE845:
 704              	.LBB846:
 705              	.LBB815:
 706              	.LBB810:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 18 62 9 view .LVU124
 708 00ea 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 709              		.loc 18 64 9 view .LVU125
 710 00ec 334E     		ldr	r6, .L36+48
 711 00ee 00F11803 		add	r3, r0, #24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 38


  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 712              		.loc 18 62 9 view .LVU126
 713 00f2 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 714              		.loc 18 60 9 view .LVU127
 715 00f4 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 716              		.loc 18 63 9 view .LVU128
 717 00f6 324D     		ldr	r5, .L36+52
  61:delayline_reverse.h ****         playinghead_ = false;
 718              		.loc 18 61 9 view .LVU129
 719 00f8 6161     		str	r1, [r4, #20]
 720              		.loc 18 64 9 view .LVU130
 721 00fa A155     		strb	r1, [r4, r6]
 722              	.LVL32:
 723              		.loc 18 64 9 view .LVU131
 724              	.LBE810:
 725              	.LBE815:
 726              	.LBE846:
 599:Veno-Echo.cpp ****     delMemsR_REV.Init();
 727              		.loc 19 599 5 is_stmt 1 view .LVU132
 728              	.LBB847:
 729              	.LBI819:
  42:delayline_reverse.h ****     { 
 730              		.loc 18 42 10 view .LVU133
 731              	.LBB835:
 732              	.LBI820:
  48:delayline_reverse.h ****     {
 733              		.loc 18 48 10 view .LVU134
 734              	.LBB825:
 735              	.LBB822:
  54:delayline_reverse.h ****         {
 736              		.loc 18 54 29 view .LVU135
 737              	.LBE822:
 738              	.LBE825:
 739              	.LBE835:
 740              	.LBE847:
 741              	.LBB848:
 742              	.LBB816:
 743              	.LBB811:
  63:delayline_reverse.h ****         fading_ = false;
 744              		.loc 18 63 9 is_stmt 0 view .LVU136
 745 00fc 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 746              		.loc 18 59 9 view .LVU137
 747 00fe C4E90111 		strd	r1, r1, [r4, #4]
 748 0102 3049     		ldr	r1, .L36+56
 749              	.LVL33:
 750              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 751              		.loc 18 59 9 view .LVU138
 752              	.LBE811:
 753              	.LBE816:
 754              	.LBE848:
 755              	.LBB849:
 756              	.LBB836:
 757              	.LBB826:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 39


 758              	.LBB823:
  56:delayline_reverse.h ****         }
 759              		.loc 18 56 13 view .LVU139
 760 0104 0022     		movs	r2, #0
 761 0106 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 762              		.loc 18 54 9 is_stmt 1 view .LVU140
  54:delayline_reverse.h ****         {
 763              		.loc 18 54 29 view .LVU141
 764 010a 8B42     		cmp	r3, r1
 765 010c FAD1     		bne	.L22
 766              	.LBE823:
 767              	.LBE826:
 768              	.LBE836:
 769              	.LBE849:
 600:Veno-Echo.cpp **** 
 601:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 602:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 770              		.loc 19 602 21 is_stmt 0 view .LVU142
 771 010e 2E49     		ldr	r1, .L36+60
 772              	.LBB850:
 773              	.LBB837:
 774              	.LBB827:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 775              		.loc 18 58 9 view .LVU143
 776 0110 0023     		movs	r3, #0
 777              	.LBE827:
 778              	.LBE837:
 779              	.LBE850:
 780              	.LBB851:
 781              	.LBB852:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 782              		.loc 19 70 15 view .LVU144
 783 0112 DFED2E6A 		vldr.32	s13, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 784              		.loc 19 70 28 view .LVU145
 785 0116 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 786              		.loc 19 70 53 view .LVU146
 787 011a 9FED2D6A 		vldr.32	s12, .L36+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 788              		.loc 19 70 15 view .LVU147
 789 011e 36EEE77A 		vsub.f32	s14, s13, s15
 790              	.LBE852:
 791              	.LBE851:
 792              	.LBB866:
 793              	.LBB838:
 794              	.LBB828:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 795              		.loc 18 62 9 view .LVU148
 796 0122 2C4D     		ldr	r5, .L36+72
 797              	.LBE828:
 798              	.LBE838:
 799              	.LBE866:
 800              	.LBB867:
 801              	.LBB861:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 40


 802              		.loc 19 70 53 view .LVU149
 803 0124 67EE867A 		vmul.f32	s15, s15, s12
 804              	.LBE861:
 805              	.LBE867:
 806              	.LBB868:
 807              	.LBB839:
 808              	.LBB829:
 809              		.loc 18 64 9 view .LVU150
 810 0128 244E     		ldr	r6, .L36+48
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 811              		.loc 18 62 9 view .LVU151
 812 012a 4355     		strb	r3, [r0, r5]
 813              	.LBE829:
 814              	.LBE839:
 815              	.LBE868:
 816              	.LBB869:
 817              	.LBB862:
 818              	.LBB853:
 819              	.LBB854:
 820              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 41


  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 821              		.loc 20 76 31 view .LVU152
 822 012c B0EEC77A 		vabs.f32	s14, s14
 823              	.LBE854:
 824              	.LBE853:
 825              	.LBE862:
 826              	.LBE869:
 827              	.LBB870:
 828              	.LBB840:
 829              	.LBB830:
  63:delayline_reverse.h ****         fading_ = false;
 830              		.loc 18 63 9 view .LVU153
 831 0130 294D     		ldr	r5, .L36+76
  60:delayline_reverse.h ****         headDiff_ = 0;
 832              		.loc 18 60 9 view .LVU154
 833 0132 C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 834              		.loc 18 61 9 view .LVU155
 835 0134 4361     		str	r3, [r0, #20]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 42


 836              	.LBE830:
 837              	.LBE840:
 838              	.LBE870:
 839              	.LBB871:
 840              	.LBB863:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 841              		.loc 19 70 9 view .LVU156
 842 0136 B4EEE77A 		vcmpe.f32	s14, s15
 843              	.LBE863:
 844              	.LBE871:
 845              	.LBB872:
 846              	.LBB841:
 847              	.LBB831:
 848              		.loc 18 64 9 view .LVU157
 849 013a 8355     		strb	r3, [r0, r6]
 850              	.LVL34:
 851              		.loc 18 64 9 view .LVU158
 852              	.LBE831:
 853              	.LBE841:
 854              	.LBE872:
 855              		.loc 19 602 5 is_stmt 1 view .LVU159
 603:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 856              		.loc 19 603 5 view .LVU160
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 857              		.loc 19 602 21 is_stmt 0 view .LVU161
 858 013c 0C60     		str	r4, [r1]
 859              	.LBB873:
 860              	.LBB842:
 861              	.LBB832:
  63:delayline_reverse.h ****         fading_ = false;
 862              		.loc 18 63 9 view .LVU162
 863 013e 2A60     		str	r2, [r5]	@ float
 864              	.LBE832:
 865              	.LBE842:
 866              	.LBE873:
 867              	.LBB874:
 868              	.LBB864:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 869              		.loc 19 70 9 view .LVU163
 870 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 871              	.LBE864:
 872              	.LBE874:
 873              	.LBB875:
 874              	.LBB843:
 875              	.LBB833:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 876              		.loc 18 59 9 view .LVU164
 877 0144 C0E90133 		strd	r3, r3, [r0, #4]
 878              	.LBE833:
 879              	.LBE843:
 880              	.LBE875:
 881              		.loc 19 603 21 view .LVU165
 882 0148 244B     		ldr	r3, .L36+80
 883 014a 1860     		str	r0, [r3]
 604:Veno-Echo.cpp **** 
 605:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 606:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 43


 884              		.loc 19 606 5 is_stmt 1 view .LVU166
 885              	.LVL35:
 886              	.LBB876:
 887              	.LBI851:
  68:Veno-Echo.cpp ****     {
 888              		.loc 19 68 10 view .LVU167
 889              	.LBB865:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 890              		.loc 19 70 9 view .LVU168
 891              	.LBB856:
 892              	.LBI853:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 893              		.loc 20 75 3 view .LVU169
 894              	.LBB855:
 895              		.loc 20 76 5 view .LVU170
 896              		.loc 20 76 5 is_stmt 0 view .LVU171
 897              	.LBE855:
 898              	.LBE856:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 899              		.loc 19 70 9 view .LVU172
 900 014c 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 901              		.loc 19 73 13 is_stmt 1 view .LVU173
 902              	.LBB857:
 903              	.LBB858:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 904              		.loc 18 72 9 is_stmt 0 view .LVU174
 905 014e 244D     		ldr	r5, .L36+84
 906              	.LBE858:
 907              	.LBE857:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 908              		.loc 19 73 27 view .LVU175
 909 0150 C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 910              		.loc 19 74 13 is_stmt 1 view .LVU176
 911              	.LVL36:
 912              	.LBB860:
 913              	.LBI857:
  69:delayline_reverse.h ****     {
 914              		.loc 18 69 17 view .LVU177
 915              	.LBB859:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 916              		.loc 18 71 9 is_stmt 0 view .LVU178
 917 0154 2260     		str	r2, [r4]	@ float
 918              		.loc 18 72 9 view .LVU179
 919 0156 2561     		str	r5, [r4, #16]
 920              	.LVL37:
 921              	.L23:
 922              		.loc 18 72 9 view .LVU180
 923              	.LBE859:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 44


 924              	.LBE860:
 925              	.LBE865:
 926              	.LBE876:
 607:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 927              		.loc 19 607 5 is_stmt 1 view .LVU181
 928              	.LBB877:
 929              	.LBI877:
  68:Veno-Echo.cpp ****     {
 930              		.loc 19 68 10 view .LVU182
 931              	.LBB878:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 932              		.loc 19 70 9 view .LVU183
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 19 70 28 is_stmt 0 view .LVU184
 934 0158 D3ED017A 		vldr.32	s15, [r3, #4]
 935              	.LVL38:
 936              	.LBB879:
 937              	.LBI879:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 938              		.loc 20 75 3 is_stmt 1 view .LVU185
 939              	.LBB880:
 940              		.loc 20 76 5 view .LVU186
 941              		.loc 20 76 5 is_stmt 0 view .LVU187
 942              	.LBE880:
 943              	.LBE879:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 944              		.loc 19 70 15 view .LVU188
 945 015c DFED1B6A 		vldr.32	s13, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 946              		.loc 19 70 53 view .LVU189
 947 0160 9FED1B6A 		vldr.32	s12, .L36+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 948              		.loc 19 70 15 view .LVU190
 949 0164 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 950              		.loc 19 70 53 view .LVU191
 951 0168 67EE867A 		vmul.f32	s15, s15, s12
 952              	.LBB882:
 953              	.LBB881:
 954              		.loc 20 76 31 view .LVU192
 955 016c B0EEC77A 		vabs.f32	s14, s14
 956              	.LBE881:
 957              	.LBE882:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 958              		.loc 19 70 9 view .LVU193
 959 0170 B4EEE77A 		vcmpe.f32	s14, s15
 960 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 961 0178 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 962              		.loc 19 73 13 is_stmt 1 view .LVU194
 963              	.LBB883:
 964              	.LBB884:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 965              		.loc 18 71 9 is_stmt 0 view .LVU195
 966 017a 0021     		movs	r1, #0
 967              		.loc 18 72 9 view .LVU196
 968 017c 184A     		ldr	r2, .L36+84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 45


 969              	.LBE884:
 970              	.LBE883:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 971              		.loc 19 73 27 view .LVU197
 972 017e C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 973              		.loc 19 74 13 is_stmt 1 view .LVU198
 974              	.LVL39:
 975              	.LBB886:
 976              	.LBI883:
  69:delayline_reverse.h ****     {
 977              		.loc 18 69 17 view .LVU199
 978              	.LBB885:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 979              		.loc 18 71 9 is_stmt 0 view .LVU200
 980 0182 0160     		str	r1, [r0]	@ float
 981              		.loc 18 72 9 view .LVU201
 982 0184 0261     		str	r2, [r0, #16]
 983              	.LVL40:
 984              	.L16:
 985              		.loc 18 72 9 view .LVU202
 986              	.LBE885:
 987              	.LBE886:
 988              	.LBE878:
 989              	.LBE877:
 608:Veno-Echo.cpp **** 
 609:Veno-Echo.cpp **** }
 990              		.loc 19 609 1 view .LVU203
 991 0186 05B0     		add	sp, sp, #20
 992              		.cfi_def_cfa_offset 20
 993              		@ sp needed
 994 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 995              	.L37:
 996 018a 00BF     		.align	2
 997              	.L36:
 998 018c 84000000 		.word	delMemsL+132
 999 0190 84786900 		.word	delMemsL+6912132
 1000 0194 84786900 		.word	6912132
 1001 0198 84000000 		.word	delMemsR+132
 1002 019c 84786900 		.word	delMemsR+6912132
 1003 01a0 00000000 		.word	.LANCHOR1
 1004 01a4 00000000 		.word	.LANCHOR0
 1005 01a8 0000FA43 		.word	1140457472
 1006 01ac 00000000 		.word	delMemsL_REV
 1007 01b0 189F2400 		.word	2400024
 1008 01b4 189F2400 		.word	delMemsL_REV+2400024
 1009 01b8 00000000 		.word	delMemsR_REV
 1010 01bc 249F2400 		.word	2400036
 1011 01c0 209F2400 		.word	delMemsL_REV+2400032
 1012 01c4 189F2400 		.word	delMemsR_REV+2400024
 1013 01c8 00000000 		.word	.LANCHOR2
 1014 01cc 00409C47 		.word	1201422336
 1015 01d0 0AD7A33B 		.word	1000593162
 1016 01d4 1C9F2400 		.word	2400028
 1017 01d8 209F2400 		.word	delMemsR_REV+2400032
 1018 01dc 00000000 		.word	.LANCHOR3
 1019 01e0 80380100 		.word	80000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 46


 1020              		.cfi_endproc
 1021              	.LFE4289:
 1023              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1024              		.align	1
 1025              		.p2align 2,,3
 1026              		.global	_Z20Update_DelayTimeL_CVv
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu fpv5-d16
 1032              	_Z20Update_DelayTimeL_CVv:
 1033              	.LFB4291:
 610:Veno-Echo.cpp **** 
 611:Veno-Echo.cpp **** int main(void)
 612:Veno-Echo.cpp **** {
 613:Veno-Echo.cpp ****     // initialize hardware.
 614:Veno-Echo.cpp ****     hw.Configure();
 615:Veno-Echo.cpp ****     hw.Init();
 616:Veno-Echo.cpp ****     
 617:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 618:Veno-Echo.cpp **** 
 619:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 620:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 621:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 622:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 623:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 624:Veno-Echo.cpp **** 
 625:Veno-Echo.cpp ****     //Gates
 626:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 627:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 628:Veno-Echo.cpp **** 
 629:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 630:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 631:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 632:Veno-Echo.cpp ****     
 633:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 638:Veno-Echo.cpp **** 
 639:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 642:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 643:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 644:Veno-Echo.cpp **** 
 645:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 648:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 649:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 650:Veno-Echo.cpp **** 
 651:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 654:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 47


 655:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 656:Veno-Echo.cpp **** 
 657:Veno-Echo.cpp ****     // set params for CrossFade objects
 658:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 659:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 660:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 661:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 662:Veno-Echo.cpp **** 
 663:Veno-Echo.cpp ****     WidthXfade.Init();
 664:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 665:Veno-Echo.cpp **** 
 666:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 667:Veno-Echo.cpp **** 
 668:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 669:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 670:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 671:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 672:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 673:Veno-Echo.cpp **** 
 674:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 675:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 676:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 677:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 678:Veno-Echo.cpp **** 
 679:Veno-Echo.cpp ****     //setup L and R High Pass filters
 680:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 681:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 682:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 683:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 684:Veno-Echo.cpp **** 
 685:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 686:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 687:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 688:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 689:Veno-Echo.cpp **** 
 690:Veno-Echo.cpp ****     //post filters
 691:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 692:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 693:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 694:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 695:Veno-Echo.cpp **** 
 696:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 697:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 698:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 699:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 700:Veno-Echo.cpp **** 
 701:Veno-Echo.cpp ****     //setup L and R High Pass filters
 702:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 703:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 704:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 705:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 706:Veno-Echo.cpp **** 
 707:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 708:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 709:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 710:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 711:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 48


 712:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 713:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 714:Veno-Echo.cpp **** 
 715:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 716:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 717:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 718:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 719:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 720:Veno-Echo.cpp **** 
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp ****     //timers: used to limit time between updates to delay time parameters
 723:Veno-Echo.cpp ****     //dsy_tim_init(); //start timer
 724:Veno-Echo.cpp ****     //dsy_tim_start();
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 727:Veno-Echo.cpp **** 
 728:Veno-Echo.cpp ****     //setup tempo indicators
 729:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 730:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 731:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 732:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp ****     //load settings from flash
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 737:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 738:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 739:Veno-Echo.cpp **** 
 740:Veno-Echo.cpp ****     //initialize DAC
 741:Veno-Echo.cpp ****     //dsy_dac_init(&hw.dac_handle, DSY_DAC_CHN_BOTH);
 742:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN1, 0);
 743:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN2, 0);
 744:Veno-Echo.cpp **** 
 745:Veno-Echo.cpp ****     //ADC
 746:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 747:Veno-Echo.cpp **** 
 748:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 749:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 750:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 751:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 752:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 753:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 754:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 755:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 756:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 760:Veno-Echo.cpp ****     hw.adc.Start();
 761:Veno-Echo.cpp **** 
 762:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 763:Veno-Echo.cpp ****     // start audio callback
 764:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 765:Veno-Echo.cpp **** 
 766:Veno-Echo.cpp ****     
 767:Veno-Echo.cpp **** 
 768:Veno-Echo.cpp ****      for(;;)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 49


 769:Veno-Echo.cpp ****      {
 770:Veno-Echo.cpp **** 
 771:Veno-Echo.cpp **** /*
 772:Veno-Echo.cpp ****         if(save_flag)
 773:Veno-Echo.cpp ****         {
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 776:Veno-Echo.cpp ****             {
 777:Veno-Echo.cpp ****                 //reset flag
 778:Veno-Echo.cpp ****                 //System::Delay(1000);
 779:Veno-Echo.cpp ****                 save_flag = false;
 780:Veno-Echo.cpp ****             }
 781:Veno-Echo.cpp ****         }
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp **** */
 784:Veno-Echo.cpp ****      }
 785:Veno-Echo.cpp **** 
 786:Veno-Echo.cpp **** }
 787:Veno-Echo.cpp **** 
 788:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 789:Veno-Echo.cpp **** {
 1034              		.loc 19 789 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 790:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1038              		.loc 19 790 5 view .LVU205
 789:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1039              		.loc 19 789 1 is_stmt 0 view .LVU206
 1040 0000 08B5     		push	{r3, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 1044              		.loc 19 790 36 view .LVU207
 1045 0002 0021     		movs	r1, #0
 1046 0004 0348     		ldr	r0, .L40
 1047 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1048              	.LVL41:
 1049              		.loc 19 790 19 view .LVU208
 1050 000a 034B     		ldr	r3, .L40+4
 1051 000c 83ED000A 		vstr.32	s0, [r3]
 791:Veno-Echo.cpp **** }
 1052              		.loc 19 791 1 view .LVU209
 1053 0010 08BD     		pop	{r3, pc}
 1054              	.L41:
 1055 0012 00BF     		.align	2
 1056              	.L40:
 1057 0014 18000000 		.word	.LANCHOR4+24
 1058 0018 00000000 		.word	.LANCHOR5
 1059              		.cfi_endproc
 1060              	.LFE4291:
 1062              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1063              		.align	1
 1064              		.p2align 2,,3
 1065              		.global	_Z20Update_DelayTimeR_CVv
 1066              		.syntax unified
 1067              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 50


 1068              		.thumb_func
 1069              		.fpu fpv5-d16
 1071              	_Z20Update_DelayTimeR_CVv:
 1072              	.LFB4293:
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp **** void Update_DelayTimeL()
 794:Veno-Echo.cpp **** {
 795:Veno-Echo.cpp ****     static bool lastShift{};
 796:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 797:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 798:Veno-Echo.cpp ****     
 799:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 800:Veno-Echo.cpp **** 
 801:Veno-Echo.cpp ****     //update pot values
 802:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 803:Veno-Echo.cpp **** 
 804:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 805:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 806:Veno-Echo.cpp ****     static int counterL{};
 807:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 808:Veno-Echo.cpp **** 
 809:Veno-Echo.cpp ****     if (!shift) //default control
 810:Veno-Echo.cpp ****     {
 811:Veno-Echo.cpp ****         static float delayTimeL_new{};
 812:Veno-Echo.cpp ****         //udpate pickup
 813:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 814:Veno-Echo.cpp ****         {
 815:Veno-Echo.cpp ****             lastShift = shift;
 816:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 817:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 818:Veno-Echo.cpp ****         } 
 819:Veno-Echo.cpp ****         else    //not a recent shift change
 820:Veno-Echo.cpp ****         {
 821:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 822:Veno-Echo.cpp ****             {
 823:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 824:Veno-Echo.cpp ****                 {
 825:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 826:Veno-Echo.cpp ****                 }
 827:Veno-Echo.cpp ****             }
 828:Veno-Echo.cpp ****         }
 829:Veno-Echo.cpp **** 
 830:Veno-Echo.cpp ****         float delayTimeL{};
 831:Veno-Echo.cpp **** 
 832:Veno-Echo.cpp ****     if(delayTimeL_pickup)
 833:Veno-Echo.cpp ****     {
 834:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 835:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 836:Veno-Echo.cpp ****     }
 837:Veno-Echo.cpp **** 
 838:Veno-Echo.cpp ****     else
 839:Veno-Echo.cpp ****     {
 840:Veno-Echo.cpp ****         delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 841:Veno-Echo.cpp ****     }
 842:Veno-Echo.cpp **** 
 843:Veno-Echo.cpp ****     if (!syncMode)
 844:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 51


 845:Veno-Echo.cpp ****         if (counterL == 0)
 846:Veno-Echo.cpp ****         {
 847:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - delayTimeL,true);
 848:Veno-Echo.cpp ****         }
 849:Veno-Echo.cpp ****     }
 850:Veno-Echo.cpp ****     else    //syncmode
 851:Veno-Echo.cpp ****     {
 852:Veno-Echo.cpp **** 
 853:Veno-Echo.cpp ****         if (counterL == 0)
 854:Veno-Echo.cpp ****         {
 855:Veno-Echo.cpp ****             //float div_L_Input{DelayTimeL};
 856:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeL,&div_L
 857:Veno-Echo.cpp ****             {
 858:Veno-Echo.cpp ****                 delayL_flag = true;
 859:Veno-Echo.cpp ****             }
 860:Veno-Echo.cpp ****         }
 861:Veno-Echo.cpp ****     }
 862:Veno-Echo.cpp **** }   //not shift mode
 863:Veno-Echo.cpp **** 
 864:Veno-Echo.cpp **** else    //shift mode
 865:Veno-Echo.cpp **** {
 866:Veno-Echo.cpp ****     static float Rev_DelayTime_new{};
 867:Veno-Echo.cpp **** 
 868:Veno-Echo.cpp ****     if (shift != lastShift) //recent shift change
 869:Veno-Echo.cpp ****     {
 870:Veno-Echo.cpp ****         lastShift = shift;
 871:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 872:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 873:Veno-Echo.cpp ****     }
 874:Veno-Echo.cpp **** 
 875:Veno-Echo.cpp ****     else    //not a recent shift change
 876:Veno-Echo.cpp ****     {
 877:Veno-Echo.cpp ****         if(!Rev_DelayTime_pickup) //not picked up
 878:Veno-Echo.cpp ****         {
 879:Veno-Echo.cpp ****             if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 880:Veno-Echo.cpp ****             {
 881:Veno-Echo.cpp ****                 Rev_DelayTime_pickup = true;   //set picked up
 882:Veno-Echo.cpp ****             }
 883:Veno-Echo.cpp ****         }
 884:Veno-Echo.cpp ****     }
 885:Veno-Echo.cpp **** 
 886:Veno-Echo.cpp ****     if(Rev_DelayTime_pickup)
 887:Veno-Echo.cpp ****     {
 888:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 889:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 890:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 891:Veno-Echo.cpp ****         //save setting:
 892:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 893:Veno-Echo.cpp ****     }
 894:Veno-Echo.cpp **** }
 895:Veno-Echo.cpp ****     
 896:Veno-Echo.cpp **** }
 897:Veno-Echo.cpp **** 
 898:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 899:Veno-Echo.cpp **** {
 1073              		.loc 19 899 1 is_stmt 1 view -0
 1074              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 52


 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 900:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1077              		.loc 19 900 5 view .LVU211
 899:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1078              		.loc 19 899 1 is_stmt 0 view .LVU212
 1079 0000 08B5     		push	{r3, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 3, -8
 1082              		.cfi_offset 14, -4
 1083              		.loc 19 900 36 view .LVU213
 1084 0002 0121     		movs	r1, #1
 1085 0004 0348     		ldr	r0, .L44
 1086 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1087              	.LVL42:
 1088              		.loc 19 900 19 view .LVU214
 1089 000a 034B     		ldr	r3, .L44+4
 1090 000c 83ED000A 		vstr.32	s0, [r3]
 901:Veno-Echo.cpp **** }
 1091              		.loc 19 901 1 view .LVU215
 1092 0010 08BD     		pop	{r3, pc}
 1093              	.L45:
 1094 0012 00BF     		.align	2
 1095              	.L44:
 1096 0014 18000000 		.word	.LANCHOR4+24
 1097 0018 00000000 		.word	.LANCHOR6
 1098              		.cfi_endproc
 1099              	.LFE4293:
 1101              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 1102              		.align	1
 1103              		.p2align 2,,3
 1104              		.global	_Z19Update_feedbackL_CVv
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv5-d16
 1110              	_Z19Update_feedbackL_CVv:
 1111              	.LFB4295:
 902:Veno-Echo.cpp **** 
 903:Veno-Echo.cpp **** void Update_DelayTimeR()
 904:Veno-Echo.cpp **** {
 905:Veno-Echo.cpp ****     static bool lastShift{};
 906:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 907:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 908:Veno-Echo.cpp ****     
 909:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 910:Veno-Echo.cpp **** 
 911:Veno-Echo.cpp ****     //update pot values
 912:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 913:Veno-Echo.cpp **** 
 914:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 915:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 916:Veno-Echo.cpp ****     static int counterR{};
 917:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 918:Veno-Echo.cpp **** 
 919:Veno-Echo.cpp ****     if (!shift) //default control
 920:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 53


 921:Veno-Echo.cpp ****         static float delayTimeR_new{};
 922:Veno-Echo.cpp ****         //udpate pickup
 923:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 924:Veno-Echo.cpp ****         {
 925:Veno-Echo.cpp ****             lastShift = shift;
 926:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 927:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 928:Veno-Echo.cpp ****         } 
 929:Veno-Echo.cpp ****         else    //not a default shift change
 930:Veno-Echo.cpp ****         {
 931:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 932:Veno-Echo.cpp ****             {
 933:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 934:Veno-Echo.cpp ****                 {
 935:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 936:Veno-Echo.cpp ****                 }
 937:Veno-Echo.cpp ****             }
 938:Veno-Echo.cpp ****         }
 939:Veno-Echo.cpp **** 
 940:Veno-Echo.cpp ****         float delayTimeR{};
 941:Veno-Echo.cpp **** 
 942:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 943:Veno-Echo.cpp ****         {
 944:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 945:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 946:Veno-Echo.cpp ****         }
 947:Veno-Echo.cpp **** 
 948:Veno-Echo.cpp ****         else
 949:Veno-Echo.cpp ****         {
 950:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 951:Veno-Echo.cpp ****         }
 952:Veno-Echo.cpp **** 
 953:Veno-Echo.cpp ****         if (!syncMode)
 954:Veno-Echo.cpp ****         {
 955:Veno-Echo.cpp ****             if (counterR == 0)
 956:Veno-Echo.cpp ****             {
 957:Veno-Echo.cpp ****                 delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 958:Veno-Echo.cpp ****             }
 959:Veno-Echo.cpp **** 
 960:Veno-Echo.cpp ****         }
 961:Veno-Echo.cpp ****         else    //syncmode
 962:Veno-Echo.cpp ****         {
 963:Veno-Echo.cpp ****             if (counterR == 0)
 964:Veno-Echo.cpp ****             {
 965:Veno-Echo.cpp ****                 //float div_R_Input{1.0f - delayTimeR}; //invert pot range
 966:Veno-Echo.cpp ****                 if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&d
 967:Veno-Echo.cpp ****                 {
 968:Veno-Echo.cpp ****                     delayR_flag = true;
 969:Veno-Echo.cpp ****                 }
 970:Veno-Echo.cpp ****             }
 971:Veno-Echo.cpp ****         }
 972:Veno-Echo.cpp ****     }   //not shift mode
 973:Veno-Echo.cpp **** 
 974:Veno-Echo.cpp ****     else    //shift mode
 975:Veno-Echo.cpp ****     {
 976:Veno-Echo.cpp **** 
 977:Veno-Echo.cpp ****         static float tapRatio_new{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 54


 978:Veno-Echo.cpp **** 
 979:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 980:Veno-Echo.cpp ****         {
 981:Veno-Echo.cpp ****             lastShift = shift;
 982:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 983:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 984:Veno-Echo.cpp ****         }
 985:Veno-Echo.cpp **** 
 986:Veno-Echo.cpp ****         else    //not a recent shift change
 987:Veno-Echo.cpp ****         {
 988:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 989:Veno-Echo.cpp ****             {
 990:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 991:Veno-Echo.cpp ****                 {
 992:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 993:Veno-Echo.cpp ****                 }
 994:Veno-Echo.cpp ****             }
 995:Veno-Echo.cpp ****         }
 996:Veno-Echo.cpp **** 
 997:Veno-Echo.cpp ****         if(tapRatio_pickup)
 998:Veno-Echo.cpp ****         {
 999:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1000:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1001:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1002:Veno-Echo.cpp ****             //save setting:
1003:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1004:Veno-Echo.cpp ****         }
1005:Veno-Echo.cpp ****     }
1006:Veno-Echo.cpp ****     
1007:Veno-Echo.cpp **** }
1008:Veno-Echo.cpp **** void Update_feedbackL_CV()
1009:Veno-Echo.cpp **** {
 1112              		.loc 19 1009 1 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
1010:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1116              		.loc 19 1010 5 view .LVU217
1009:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1117              		.loc 19 1009 1 is_stmt 0 view .LVU218
 1118 0000 08B5     		push	{r3, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 3, -8
 1121              		.cfi_offset 14, -4
 1122              		.loc 19 1010 35 view .LVU219
 1123 0002 0221     		movs	r1, #2
 1124 0004 0348     		ldr	r0, .L48
 1125 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1126              	.LVL43:
 1127              		.loc 19 1010 18 view .LVU220
 1128 000a 034B     		ldr	r3, .L48+4
 1129 000c 83ED000A 		vstr.32	s0, [r3]
1011:Veno-Echo.cpp **** }
 1130              		.loc 19 1011 1 view .LVU221
 1131 0010 08BD     		pop	{r3, pc}
 1132              	.L49:
 1133 0012 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 55


 1134              	.L48:
 1135 0014 18000000 		.word	.LANCHOR4+24
 1136 0018 00000000 		.word	.LANCHOR7
 1137              		.cfi_endproc
 1138              	.LFE4295:
 1140              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 1141              		.align	1
 1142              		.p2align 2,,3
 1143              		.global	_Z16Update_feedbackLv
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv5-d16
 1149              	_Z16Update_feedbackLv:
 1150              	.LFB4296:
1012:Veno-Echo.cpp **** void Update_feedbackL()
1013:Veno-Echo.cpp **** {
 1151              		.loc 19 1013 1 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
1014:Veno-Echo.cpp ****     static bool lastShift{};
 1155              		.loc 19 1014 5 view .LVU223
1015:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 1156              		.loc 19 1015 5 view .LVU224
1016:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 1157              		.loc 19 1016 5 view .LVU225
1017:Veno-Echo.cpp **** 
1018:Veno-Echo.cpp ****     static float feedbackL_Last{};
 1158              		.loc 19 1018 5 view .LVU226
1019:Veno-Echo.cpp **** 
1020:Veno-Echo.cpp ****     //get pot values:
1021:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1022:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1159              		.loc 19 1022 5 view .LVU227
 1160              		.loc 19 1022 43 is_stmt 0 view .LVU228
 1161 0000 0122     		movs	r2, #1
 1162 0002 0721     		movs	r1, #7
 1163 0004 6248     		ldr	r0, .L78
1013:Veno-Echo.cpp ****     static bool lastShift{};
 1164              		.loc 19 1013 1 view .LVU229
 1165 0006 10B5     		push	{r4, lr}
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 4, -8
 1168              		.cfi_offset 14, -4
 1169 0008 2DED028B 		vpush.64	{d8}
 1170              		.cfi_def_cfa_offset 16
 1171              		.cfi_offset 80, -16
 1172              		.cfi_offset 81, -12
 1173              		.loc 19 1022 43 view .LVU230
 1174 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1175              	.LVL44:
 1176              	.LBB887:
1023:Veno-Echo.cpp **** 
1024:Veno-Echo.cpp ****     if (!shift) //default controls
 1177              		.loc 19 1024 9 view .LVU231
 1178 0010 604B     		ldr	r3, .L78+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 56


 1179              	.LVL45:
 1180              		.loc 19 1024 9 view .LVU232
 1181              	.LBE887:
 1182              		.loc 19 1024 5 is_stmt 1 view .LVU233
 1183              	.LBB923:
 1184              	.LBB888:
1025:Veno-Echo.cpp ****     {   
1026:Veno-Echo.cpp ****         static float feedbackL_new{};
1027:Veno-Echo.cpp ****         //update pickup
1028:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1185              		.loc 19 1028 19 is_stmt 0 view .LVU234
 1186 0012 614A     		ldr	r2, .L78+8
 1187              	.LBE888:
1024:Veno-Echo.cpp ****     {   
 1188              		.loc 19 1024 5 view .LVU235
 1189 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1190 0016 002B     		cmp	r3, #0
 1191 0018 3DD1     		bne	.L51
 1192              	.LBB911:
1026:Veno-Echo.cpp ****         //update pickup
 1193              		.loc 19 1026 9 is_stmt 1 view .LVU236
 1194              		.loc 19 1028 9 view .LVU237
 1195 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1196 001c 0029     		cmp	r1, #0
 1197 001e 47D0     		beq	.L52
1029:Veno-Echo.cpp ****         {
1030:Veno-Echo.cpp ****             lastShift = shift;
 1198              		.loc 19 1030 13 view .LVU238
1031:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1199              		.loc 19 1031 30 is_stmt 0 view .LVU239
 1200 0020 5E48     		ldr	r0, .L78+12
1032:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 1201              		.loc 19 1032 27 view .LVU240
 1202 0022 5F49     		ldr	r1, .L78+16
1030:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1203              		.loc 19 1030 23 view .LVU241
 1204 0024 1370     		strb	r3, [r2]
1031:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1205              		.loc 19 1031 13 is_stmt 1 view .LVU242
1031:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 1206              		.loc 19 1031 30 is_stmt 0 view .LVU243
 1207 0026 0370     		strb	r3, [r0]
 1208              		.loc 19 1032 13 is_stmt 1 view .LVU244
 1209              		.loc 19 1032 27 is_stmt 0 view .LVU245
 1210 0028 81ED000A 		vstr.32	s0, [r1]
 1211              	.L53:
1033:Veno-Echo.cpp ****         } 
1034:Veno-Echo.cpp ****         else    //not a default shift change
1035:Veno-Echo.cpp ****         {
1036:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1037:Veno-Echo.cpp ****             {
1038:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1039:Veno-Echo.cpp ****                 {
1040:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1041:Veno-Echo.cpp ****                 }
1042:Veno-Echo.cpp ****             }
1043:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 57


1044:Veno-Echo.cpp **** 
1045:Veno-Echo.cpp ****         float feedbackL_combo{};
 1212              		.loc 19 1045 9 is_stmt 1 view .LVU246
 1213              	.LVL46:
1046:Veno-Echo.cpp **** 
1047:Veno-Echo.cpp ****         if(feedbackL_pickup)
 1214              		.loc 19 1047 9 view .LVU247
1048:Veno-Echo.cpp ****         {
1049:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1050:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1051:Veno-Echo.cpp ****         }
1052:Veno-Echo.cpp **** 
1053:Veno-Echo.cpp ****         else
1054:Veno-Echo.cpp ****         {
1055:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
 1215              		.loc 19 1055 13 view .LVU248
 1216              	.LBB889:
 1217              	.LBI889:
1056:Veno-Echo.cpp ****         }
1057:Veno-Echo.cpp ****   
1058:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1059:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1060:Veno-Echo.cpp ****     }
1061:Veno-Echo.cpp ****     else    //alternate controls
1062:Veno-Echo.cpp ****     {
1063:Veno-Echo.cpp ****         static float HPCutoff_new{};
1064:Veno-Echo.cpp **** 
1065:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1066:Veno-Echo.cpp ****         {
1067:Veno-Echo.cpp ****             lastShift = shift;
1068:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1069:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1070:Veno-Echo.cpp ****         }
1071:Veno-Echo.cpp **** 
1072:Veno-Echo.cpp ****         else    //not a recent shift change
1073:Veno-Echo.cpp ****         {
1074:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1075:Veno-Echo.cpp ****             {
1076:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1077:Veno-Echo.cpp ****                 {
1078:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1079:Veno-Echo.cpp ****                 }
1080:Veno-Echo.cpp ****             }
1081:Veno-Echo.cpp ****         }
1082:Veno-Echo.cpp **** 
1083:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1084:Veno-Echo.cpp ****         {
1085:Veno-Echo.cpp ****             float HPCutoff{};
1086:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1087:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1088:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1089:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1090:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1091:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1092:Veno-Echo.cpp ****         }
1093:Veno-Echo.cpp ****     }
1094:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 58


1095:Veno-Echo.cpp **** 
1096:Veno-Echo.cpp **** void Update_feedbackR_CV()
1097:Veno-Echo.cpp **** {
1098:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1099:Veno-Echo.cpp **** }
1100:Veno-Echo.cpp **** 
1101:Veno-Echo.cpp **** void Update_feedbackR()
1102:Veno-Echo.cpp **** {
1103:Veno-Echo.cpp ****     static bool lastShift{};
1104:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1105:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1106:Veno-Echo.cpp **** 
1107:Veno-Echo.cpp ****     static float feedbackR_Last{};
1108:Veno-Echo.cpp **** 
1109:Veno-Echo.cpp ****     //get pot values:
1110:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1111:Veno-Echo.cpp **** 
1112:Veno-Echo.cpp ****     if (!shift) //default controls
1113:Veno-Echo.cpp ****     {   
1114:Veno-Echo.cpp ****         static float feedbackR_new{};
1115:Veno-Echo.cpp ****         //update pickup
1116:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1117:Veno-Echo.cpp ****         {
1118:Veno-Echo.cpp ****             lastShift = shift;
1119:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1120:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1121:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1122:Veno-Echo.cpp ****         } 
1123:Veno-Echo.cpp ****         else    //not a recent shift change
1124:Veno-Echo.cpp ****         {
1125:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1126:Veno-Echo.cpp ****             {
1127:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1128:Veno-Echo.cpp ****                 {
1129:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1130:Veno-Echo.cpp ****                 }
1131:Veno-Echo.cpp ****             }
1132:Veno-Echo.cpp ****         }
1133:Veno-Echo.cpp **** 
1134:Veno-Echo.cpp ****         float feedbackR_combo{};
1135:Veno-Echo.cpp ****         
1136:Veno-Echo.cpp ****         if(feedbackR_pickup)
1137:Veno-Echo.cpp ****         {
1138:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1139:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1140:Veno-Echo.cpp ****         }
1141:Veno-Echo.cpp **** 
1142:Veno-Echo.cpp ****         else
1143:Veno-Echo.cpp ****         {
1144:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1145:Veno-Echo.cpp ****         }
1146:Veno-Echo.cpp **** 
1147:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1148:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1149:Veno-Echo.cpp ****     }
1150:Veno-Echo.cpp ****     else    //alternate controls
1151:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 59


1152:Veno-Echo.cpp **** 
1153:Veno-Echo.cpp ****         static float LPCutoff_new{};
1154:Veno-Echo.cpp **** 
1155:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1156:Veno-Echo.cpp ****         {
1157:Veno-Echo.cpp ****             lastShift = shift;
1158:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1159:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1160:Veno-Echo.cpp ****         }
1161:Veno-Echo.cpp **** 
1162:Veno-Echo.cpp ****         else    //not a recent shift change
1163:Veno-Echo.cpp ****         {
1164:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1165:Veno-Echo.cpp ****             {
1166:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1167:Veno-Echo.cpp ****                 {
1168:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1169:Veno-Echo.cpp ****                 }
1170:Veno-Echo.cpp ****             }
1171:Veno-Echo.cpp ****         }
1172:Veno-Echo.cpp **** 
1173:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1174:Veno-Echo.cpp ****         {
1175:Veno-Echo.cpp ****             float LPCutoff{};
1176:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1177:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1178:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1179:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1180:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1181:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1182:Veno-Echo.cpp ****         }
1183:Veno-Echo.cpp ****     }
1184:Veno-Echo.cpp **** }
1185:Veno-Echo.cpp **** 
1186:Veno-Echo.cpp **** void Update_drywet_CV()
1187:Veno-Echo.cpp **** {
1188:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1189:Veno-Echo.cpp **** }
1190:Veno-Echo.cpp **** 
1191:Veno-Echo.cpp **** void Update_drywet()
1192:Veno-Echo.cpp **** {
1193:Veno-Echo.cpp ****     static bool lastShift{};
1194:Veno-Echo.cpp ****     static bool drywet_pickup{};
1195:Veno-Echo.cpp ****     static bool Res_pickup{};
1196:Veno-Echo.cpp **** 
1197:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1198:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1199:Veno-Echo.cpp **** 
1200:Veno-Echo.cpp ****     //get pot values:
1201:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1202:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1203:Veno-Echo.cpp **** 
1204:Veno-Echo.cpp ****     if (!shift) //default controls
1205:Veno-Echo.cpp ****     {   
1206:Veno-Echo.cpp **** 
1207:Veno-Echo.cpp ****         static float drywet_new{};
1208:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 60


1209:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1210:Veno-Echo.cpp ****         {
1211:Veno-Echo.cpp ****             lastShift = shift;
1212:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1213:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1214:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1215:Veno-Echo.cpp ****         } 
1216:Veno-Echo.cpp ****         
1217:Veno-Echo.cpp ****         else    //not a recent shift change
1218:Veno-Echo.cpp ****         {
1219:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1220:Veno-Echo.cpp ****             {
1221:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1222:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1223:Veno-Echo.cpp ****                 {
1224:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1225:Veno-Echo.cpp ****                 }
1226:Veno-Echo.cpp ****             }
1227:Veno-Echo.cpp **** 
1228:Veno-Echo.cpp ****         }
1229:Veno-Echo.cpp ****         
1230:Veno-Echo.cpp ****         float drywetcombo{};
1231:Veno-Echo.cpp **** 
1232:Veno-Echo.cpp ****         if (drywet_pickup)
1233:Veno-Echo.cpp ****         {
1234:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1235:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1236:Veno-Echo.cpp ****         }
1237:Veno-Echo.cpp **** 
1238:Veno-Echo.cpp ****         else
1239:Veno-Echo.cpp ****         {
1240:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1241:Veno-Echo.cpp ****         }
1242:Veno-Echo.cpp **** 
1243:Veno-Echo.cpp ****         float drywetTarget{};
1244:Veno-Echo.cpp **** 
1245:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1246:Veno-Echo.cpp ****         {
1247:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1248:Veno-Echo.cpp ****         }
1249:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1250:Veno-Echo.cpp ****         {
1251:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1252:Veno-Echo.cpp ****         }
1253:Veno-Echo.cpp ****         else
1254:Veno-Echo.cpp ****         {
1255:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
1256:Veno-Echo.cpp ****         }
1257:Veno-Echo.cpp **** 
1258:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1259:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1260:Veno-Echo.cpp ****     }
1261:Veno-Echo.cpp ****     else    //alternate controls
1262:Veno-Echo.cpp ****     {
1263:Veno-Echo.cpp ****         static float Res_new{};
1264:Veno-Echo.cpp **** 
1265:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 61


1266:Veno-Echo.cpp ****         {
1267:Veno-Echo.cpp ****             lastShift = shift;
1268:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1269:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1270:Veno-Echo.cpp ****         }
1271:Veno-Echo.cpp **** 
1272:Veno-Echo.cpp ****         else    //not a recent shift change
1273:Veno-Echo.cpp ****         {
1274:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1275:Veno-Echo.cpp ****             {
1276:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1277:Veno-Echo.cpp ****                 {
1278:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1279:Veno-Echo.cpp ****                 }
1280:Veno-Echo.cpp ****             }
1281:Veno-Echo.cpp ****         }
1282:Veno-Echo.cpp **** 
1283:Veno-Echo.cpp ****         if(Res_pickup)
1284:Veno-Echo.cpp ****         {
1285:Veno-Echo.cpp ****             float Res{};
1286:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1287:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1288:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1289:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1290:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1291:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1292:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1293:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1294:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1295:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1296:Veno-Echo.cpp ****         }
1297:Veno-Echo.cpp ****     }
1298:Veno-Echo.cpp **** }
1299:Veno-Echo.cpp **** 
1300:Veno-Echo.cpp **** void Update_width_CV()
1301:Veno-Echo.cpp **** {
1302:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1303:Veno-Echo.cpp **** }
1304:Veno-Echo.cpp **** 
1305:Veno-Echo.cpp **** void Update_width()
1306:Veno-Echo.cpp **** {
1307:Veno-Echo.cpp ****     static bool lastShift{};
1308:Veno-Echo.cpp ****     static bool width_pickup{};
1309:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1310:Veno-Echo.cpp **** 
1311:Veno-Echo.cpp ****     static float width_Last{};
1312:Veno-Echo.cpp **** 
1313:Veno-Echo.cpp ****     //get pot values:
1314:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1315:Veno-Echo.cpp **** 
1316:Veno-Echo.cpp ****     if (!shift) //default controls
1317:Veno-Echo.cpp ****     {   
1318:Veno-Echo.cpp ****         static float width_new{};
1319:Veno-Echo.cpp ****         //update pickup
1320:Veno-Echo.cpp ****         if (shift != lastShift)
1321:Veno-Echo.cpp ****         {
1322:Veno-Echo.cpp ****             lastShift = shift;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 62


1323:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1324:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1325:Veno-Echo.cpp ****         }
1326:Veno-Echo.cpp **** 
1327:Veno-Echo.cpp ****         else
1328:Veno-Echo.cpp ****         {
1329:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1330:Veno-Echo.cpp ****             {
1331:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1332:Veno-Echo.cpp ****                 {
1333:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1334:Veno-Echo.cpp ****                 }
1335:Veno-Echo.cpp ****             }
1336:Veno-Echo.cpp **** 
1337:Veno-Echo.cpp ****         }
1338:Veno-Echo.cpp **** 
1339:Veno-Echo.cpp ****         float widthTarget{};
1340:Veno-Echo.cpp **** 
1341:Veno-Echo.cpp ****         if(width_pickup)
1342:Veno-Echo.cpp ****         {
1343:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1344:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1345:Veno-Echo.cpp ****         }
1346:Veno-Echo.cpp **** 
1347:Veno-Echo.cpp ****         else
1348:Veno-Echo.cpp ****         {        
1349:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1350:Veno-Echo.cpp ****         }
1351:Veno-Echo.cpp ****             
1352:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1353:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1354:Veno-Echo.cpp ****     }
1355:Veno-Echo.cpp **** 
1356:Veno-Echo.cpp ****     else    //alternate controls
1357:Veno-Echo.cpp ****     {
1358:Veno-Echo.cpp ****         static float ModDepth_new{};
1359:Veno-Echo.cpp **** 
1360:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1361:Veno-Echo.cpp ****         {
1362:Veno-Echo.cpp ****             lastShift = shift;
1363:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1364:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1365:Veno-Echo.cpp ****         }
1366:Veno-Echo.cpp **** 
1367:Veno-Echo.cpp ****         else    //not a recent shift change
1368:Veno-Echo.cpp ****         {
1369:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1370:Veno-Echo.cpp ****             {
1371:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1372:Veno-Echo.cpp ****                 {
1373:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1374:Veno-Echo.cpp ****                 }
1375:Veno-Echo.cpp ****             }
1376:Veno-Echo.cpp ****         }
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****         if(ModDepth_pickup)
1379:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 63


1380:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1381:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1382:Veno-Echo.cpp ****         }
1383:Veno-Echo.cpp ****     }
1384:Veno-Echo.cpp **** }
1385:Veno-Echo.cpp **** 
1386:Veno-Echo.cpp **** void Update_crossfeedback()
1387:Veno-Echo.cpp **** {
1388:Veno-Echo.cpp ****     static bool lastShift{};
1389:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1390:Veno-Echo.cpp ****     static bool modRate_pickup{};
1391:Veno-Echo.cpp **** 
1392:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1393:Veno-Echo.cpp **** 
1394:Veno-Echo.cpp ****     //get pot values:
1395:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****     if (!shift) //default controls
1398:Veno-Echo.cpp ****     {   
1399:Veno-Echo.cpp ****         static float crossfeedback_new{};
1400:Veno-Echo.cpp ****         //update pickup
1401:Veno-Echo.cpp ****         if (shift != lastShift)
1402:Veno-Echo.cpp ****         {
1403:Veno-Echo.cpp ****             lastShift = shift;
1404:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1405:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1406:Veno-Echo.cpp ****         }
1407:Veno-Echo.cpp **** 
1408:Veno-Echo.cpp ****         else
1409:Veno-Echo.cpp ****         {
1410:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1411:Veno-Echo.cpp ****             {
1412:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1413:Veno-Echo.cpp ****                 {
1414:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1415:Veno-Echo.cpp ****                 }
1416:Veno-Echo.cpp ****             }
1417:Veno-Echo.cpp ****         }
1418:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1419:Veno-Echo.cpp **** 
1420:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1421:Veno-Echo.cpp ****         {
1422:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1423:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1424:Veno-Echo.cpp ****         }
1425:Veno-Echo.cpp **** 
1426:Veno-Echo.cpp ****         else
1427:Veno-Echo.cpp ****         {
1428:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1429:Veno-Echo.cpp ****         }
1430:Veno-Echo.cpp **** 
1431:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1432:Veno-Echo.cpp ****     }
1433:Veno-Echo.cpp ****     else    //alternate controls
1434:Veno-Echo.cpp ****     {
1435:Veno-Echo.cpp ****         static float modRate_new{};
1436:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 64


1437:Veno-Echo.cpp ****         if (shift != lastShift)
1438:Veno-Echo.cpp ****         {
1439:Veno-Echo.cpp ****             lastShift = shift;
1440:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1441:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1442:Veno-Echo.cpp ****         }
1443:Veno-Echo.cpp **** 
1444:Veno-Echo.cpp ****         else
1445:Veno-Echo.cpp ****         {
1446:Veno-Echo.cpp ****             if(!modRate_pickup)
1447:Veno-Echo.cpp ****             {
1448:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1449:Veno-Echo.cpp ****                 {
1450:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1451:Veno-Echo.cpp ****                 }
1452:Veno-Echo.cpp ****             }
1453:Veno-Echo.cpp ****         }
1454:Veno-Echo.cpp **** 
1455:Veno-Echo.cpp ****         if(modRate_pickup)
1456:Veno-Echo.cpp ****         {
1457:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1458:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1459:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1460:Veno-Echo.cpp ****         }
1461:Veno-Echo.cpp ****     }
1462:Veno-Echo.cpp **** }
1463:Veno-Echo.cpp **** 
1464:Veno-Echo.cpp **** void Update_filterXfade()
1465:Veno-Echo.cpp **** {
1466:Veno-Echo.cpp ****     static bool lastShift{};
1467:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1468:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1469:Veno-Echo.cpp **** 
1470:Veno-Echo.cpp ****     static float filterXfade_last{};
1471:Veno-Echo.cpp **** 
1472:Veno-Echo.cpp ****     //get pot values:
1473:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1474:Veno-Echo.cpp **** 
1475:Veno-Echo.cpp ****     if (!shift) //default controls
1476:Veno-Echo.cpp ****     {   
1477:Veno-Echo.cpp ****         static float filterXfade_new{};
1478:Veno-Echo.cpp ****         //update pickup
1479:Veno-Echo.cpp ****         if (shift != lastShift)
1480:Veno-Echo.cpp ****         {
1481:Veno-Echo.cpp ****             lastShift = shift;
1482:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1483:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1484:Veno-Echo.cpp ****         }
1485:Veno-Echo.cpp **** 
1486:Veno-Echo.cpp ****         else
1487:Veno-Echo.cpp ****         {
1488:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1489:Veno-Echo.cpp ****             {
1490:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1491:Veno-Echo.cpp ****                 {
1492:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1493:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 65


1494:Veno-Echo.cpp ****             }
1495:Veno-Echo.cpp ****         }
1496:Veno-Echo.cpp **** 
1497:Veno-Echo.cpp ****         float filterXfadeTarget{};
1498:Veno-Echo.cpp **** 
1499:Veno-Echo.cpp ****         if(filterXfade_pickup)
1500:Veno-Echo.cpp ****         {
1501:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1502:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1503:Veno-Echo.cpp ****         }
1504:Veno-Echo.cpp **** 
1505:Veno-Echo.cpp ****         else
1506:Veno-Echo.cpp ****         {
1507:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1508:Veno-Echo.cpp ****         }
1509:Veno-Echo.cpp **** 
1510:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1511:Veno-Echo.cpp ****     }
1512:Veno-Echo.cpp ****     else    //alternate controls
1513:Veno-Echo.cpp ****     {
1514:Veno-Echo.cpp **** 
1515:Veno-Echo.cpp ****         static float PostFilters_new{};
1516:Veno-Echo.cpp **** 
1517:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1518:Veno-Echo.cpp ****         {
1519:Veno-Echo.cpp ****             lastShift = shift;
1520:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1521:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1522:Veno-Echo.cpp ****         }
1523:Veno-Echo.cpp **** 
1524:Veno-Echo.cpp ****         else    //not a recent shift change
1525:Veno-Echo.cpp ****         {
1526:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1527:Veno-Echo.cpp ****             {
1528:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1529:Veno-Echo.cpp ****                 {
1530:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1531:Veno-Echo.cpp ****                 }
1532:Veno-Echo.cpp ****             }
1533:Veno-Echo.cpp ****         }
1534:Veno-Echo.cpp ****         
1535:Veno-Echo.cpp ****         if(PostFilters_pickup)
1536:Veno-Echo.cpp ****         {
1537:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1538:Veno-Echo.cpp ****             {
1539:Veno-Echo.cpp ****                 PostFilters = false;
1540:Veno-Echo.cpp ****             }
1541:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1542:Veno-Echo.cpp ****             {
1543:Veno-Echo.cpp ****                 PostFilters = true;
1544:Veno-Echo.cpp ****             }
1545:Veno-Echo.cpp ****             else
1546:Veno-Echo.cpp ****             {
1547:Veno-Echo.cpp ****               //do nothing
1548:Veno-Echo.cpp ****             }
1549:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1550:Veno-Echo.cpp ****         }  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 66


1551:Veno-Echo.cpp ****     }
1552:Veno-Echo.cpp **** }
1553:Veno-Echo.cpp **** 
1554:Veno-Echo.cpp **** void GetModCV()
1555:Veno-Echo.cpp **** {
1556:Veno-Echo.cpp ****     //get modulation CV input
1557:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1558:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1559:Veno-Echo.cpp **** }
1560:Veno-Echo.cpp **** 
1561:Veno-Echo.cpp **** void Update_Mod()
1562:Veno-Echo.cpp **** {    
1563:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1564:Veno-Echo.cpp ****     static float modulation_CV{};
1565:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1566:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1567:Veno-Echo.cpp ****     //calculate InternalMod
1568:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1569:Veno-Echo.cpp ****     //apply modulation to delay lines
1570:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1571:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1572:Veno-Echo.cpp **** }
1573:Veno-Echo.cpp **** 
1574:Veno-Echo.cpp **** void UpdateClock()
1575:Veno-Echo.cpp **** {
1576:Veno-Echo.cpp ****     static int divCounter{};
1577:Veno-Echo.cpp ****     ClockIn.Debounce();
1578:Veno-Echo.cpp **** 
1579:Veno-Echo.cpp ****     //if clock in pulse received
1580:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1581:Veno-Echo.cpp ****     {   
1582:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1583:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1584:Veno-Echo.cpp ****         if(divCounter == 0)
1585:Veno-Echo.cpp ****         {
1586:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
1587:Veno-Echo.cpp ****             {
1588:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1589:Veno-Echo.cpp ****                 if(syncMode)
1590:Veno-Echo.cpp ****                 {
1591:Veno-Echo.cpp ****                     if(div_L <= UNITY)
1592:Veno-Echo.cpp ****                     {
1593:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
1594:Veno-Echo.cpp ****                     }
1595:Veno-Echo.cpp **** 
1596:Veno-Echo.cpp ****                     if(div_R <= UNITY)
1597:Veno-Echo.cpp ****                     {
1598:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
1599:Veno-Echo.cpp ****                     }
1600:Veno-Echo.cpp ****                 }
1601:Veno-Echo.cpp ****             }
1602:Veno-Echo.cpp ****         }
1603:Veno-Echo.cpp ****     }
1604:Veno-Echo.cpp ****     
1605:Veno-Echo.cpp **** }
1606:Veno-Echo.cpp **** 
1607:Veno-Echo.cpp **** void Update_Buttons()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 67


1608:Veno-Echo.cpp **** {  
1609:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1610:Veno-Echo.cpp ****     static uint32_t resetTime{};
1611:Veno-Echo.cpp ****     static int buttonstate{};
1612:Veno-Echo.cpp **** 
1613:Veno-Echo.cpp ****     Rev_L_sw.update();
1614:Veno-Echo.cpp ****     Rev_R_sw.update();
1615:Veno-Echo.cpp ****     LPF_sw.update();
1616:Veno-Echo.cpp ****     HPF_sw.update();
1617:Veno-Echo.cpp ****     Tap_Button.update();
1618:Veno-Echo.cpp **** 
1619:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1620:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1621:Veno-Echo.cpp ****     //TapButton.Debounce();
1622:Veno-Echo.cpp ****     Sync.Debounce();
1623:Veno-Echo.cpp ****     ClockIn.Debounce();
1624:Veno-Echo.cpp ****     //gate inputs
1625:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1626:Veno-Echo.cpp ****     {
1627:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1628:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1629:Veno-Echo.cpp ****     }
1630:Veno-Echo.cpp **** 
1631:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1632:Veno-Echo.cpp ****     {
1633:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1634:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1635:Veno-Echo.cpp ****     }
1636:Veno-Echo.cpp **** 
1637:Veno-Echo.cpp ****     //buttons
1638:Veno-Echo.cpp **** 
1639:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1640:Veno-Echo.cpp ****     {
1641:Veno-Echo.cpp ****         buttonstate += 1;
1642:Veno-Echo.cpp ****         if (buttonstate == 3)
1643:Veno-Echo.cpp ****         {
1644:Veno-Echo.cpp ****             resetTime = System::GetNow();
1645:Veno-Echo.cpp ****         }
1646:Veno-Echo.cpp ****     }
1647:Veno-Echo.cpp **** 
1648:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1649:Veno-Echo.cpp ****     {
1650:Veno-Echo.cpp ****         buttonstate -= 1;
1651:Veno-Echo.cpp ****     }
1652:Veno-Echo.cpp **** 
1653:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1654:Veno-Echo.cpp ****     {
1655:Veno-Echo.cpp ****         buttonstate += 1;
1656:Veno-Echo.cpp ****         if (buttonstate == 3)
1657:Veno-Echo.cpp ****         {
1658:Veno-Echo.cpp ****             resetTime = System::GetNow();
1659:Veno-Echo.cpp ****         }
1660:Veno-Echo.cpp ****     }
1661:Veno-Echo.cpp **** 
1662:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1663:Veno-Echo.cpp ****     {
1664:Veno-Echo.cpp ****         buttonstate -= 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 68


1665:Veno-Echo.cpp ****     }
1666:Veno-Echo.cpp **** 
1667:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1668:Veno-Echo.cpp ****     {
1669:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1670:Veno-Echo.cpp ****         {
1671:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1672:Veno-Echo.cpp ****         }
1673:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1674:Veno-Echo.cpp ****         
1675:Veno-Echo.cpp ****         if(syncMode)
1676:Veno-Echo.cpp ****         {
1677:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1678:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1679:Veno-Echo.cpp ****         }
1680:Veno-Echo.cpp **** 
1681:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1682:Veno-Echo.cpp ****         buttonstate += 1;
1683:Veno-Echo.cpp ****         
1684:Veno-Echo.cpp ****         if (buttonstate == 3)
1685:Veno-Echo.cpp ****         {
1686:Veno-Echo.cpp ****             resetTime = System::GetNow();
1687:Veno-Echo.cpp ****         }
1688:Veno-Echo.cpp **** 
1689:Veno-Echo.cpp ****     }
1690:Veno-Echo.cpp **** 
1691:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1692:Veno-Echo.cpp ****     {
1693:Veno-Echo.cpp ****         shift = false;
1694:Veno-Echo.cpp ****         buttonstate -= 1;
1695:Veno-Echo.cpp ****         mute = false;
1696:Veno-Echo.cpp ****     }
1697:Veno-Echo.cpp **** 
1698:Veno-Echo.cpp ****     if (Tap_Button.getState())
1699:Veno-Echo.cpp ****     {
1700:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1701:Veno-Echo.cpp ****         {
1702:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1703:Veno-Echo.cpp ****         } 
1704:Veno-Echo.cpp ****     }
1705:Veno-Echo.cpp **** 
1706:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1707:Veno-Echo.cpp ****     {
1708:Veno-Echo.cpp ****         /*
1709:Veno-Echo.cpp ****             if(!save_flag)
1710:Veno-Echo.cpp ****             {
1711:Veno-Echo.cpp ****                 save_flag = true; 
1712:Veno-Echo.cpp ****             }
1713:Veno-Echo.cpp ****         */
1714:Veno-Echo.cpp **** 
1715:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1716:Veno-Echo.cpp ****             {
1717:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1718:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1719:Veno-Echo.cpp ****                 ResetAllLEDs();
1720:Veno-Echo.cpp ****                 //don't let reset or shift update
1721:Veno-Echo.cpp ****                 shift = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 69


1722:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1723:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1724:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1725:Veno-Echo.cpp ****             }
1726:Veno-Echo.cpp ****     } 
1727:Veno-Echo.cpp **** 
1728:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1729:Veno-Echo.cpp **** 
1730:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1733:Veno-Echo.cpp ****         //delayL.tempoled.resetPhase();
1734:Veno-Echo.cpp ****         //delayR.tempoled.resetPhase();
1735:Veno-Echo.cpp ****         delayL_flag = true;
1736:Veno-Echo.cpp ****         delayR_flag = true;
1737:Veno-Echo.cpp ****     }
1738:Veno-Echo.cpp **** 
1739:Veno-Echo.cpp **** }
1740:Veno-Echo.cpp **** 
1741:Veno-Echo.cpp **** void Update_BaseTempoLED()
1742:Veno-Echo.cpp **** {
1743:Veno-Echo.cpp ****     tempoLED_BASE.update();
1744:Veno-Echo.cpp **** 
1745:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
1746:Veno-Echo.cpp ****     {
1747:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
1748:Veno-Echo.cpp ****         {
1749:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1750:Veno-Echo.cpp ****             delayL_flag = false;
1751:Veno-Echo.cpp ****         }
1752:Veno-Echo.cpp **** 
1753:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
1754:Veno-Echo.cpp ****         {
1755:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1756:Veno-Echo.cpp ****             delayR_flag = false;
1757:Veno-Echo.cpp ****         }
1758:Veno-Echo.cpp **** 
1759:Veno-Echo.cpp ****     }
1760:Veno-Echo.cpp **** }
1761:Veno-Echo.cpp **** 
1762:Veno-Echo.cpp **** //input a float (range 0 to 1) and address of TempoDivs to update
1763:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
1764:Veno-Echo.cpp **** {
1765:Veno-Echo.cpp **** 
1766:Veno-Echo.cpp ****     float retVal{};
1767:Veno-Echo.cpp **** 
1768:Veno-Echo.cpp ****     if (input < 0.0909f)
1769:Veno-Echo.cpp ****     {
1770:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
1771:Veno-Echo.cpp ****         *div = DIV6;
1772:Veno-Echo.cpp ****     }
1773:Veno-Echo.cpp **** 
1774:Veno-Echo.cpp ****     else if (input < 0.1818f)
1775:Veno-Echo.cpp ****     {
1776:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
1777:Veno-Echo.cpp ****        *div = DIV5;
1778:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 70


1779:Veno-Echo.cpp **** 
1780:Veno-Echo.cpp ****     else if (input < 0.2727f)
1781:Veno-Echo.cpp ****     {
1782:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
1783:Veno-Echo.cpp ****         *div = DIV4;
1784:Veno-Echo.cpp ****     }
1785:Veno-Echo.cpp **** 
1786:Veno-Echo.cpp ****     else if (input < 0.3636f)
1787:Veno-Echo.cpp ****     {
1788:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
1789:Veno-Echo.cpp ****         *div = DIV3;
1790:Veno-Echo.cpp ****     }
1791:Veno-Echo.cpp **** 
1792:Veno-Echo.cpp ****     else if (input < 0.4545f)
1793:Veno-Echo.cpp ****     {
1794:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
1795:Veno-Echo.cpp ****         *div = DIV2;
1796:Veno-Echo.cpp ****     }
1797:Veno-Echo.cpp **** 
1798:Veno-Echo.cpp ****     else if (input <  0.5455f)
1799:Veno-Echo.cpp ****     {
1800:Veno-Echo.cpp ****         retVal = (1.0f);
1801:Veno-Echo.cpp ****         *div = UNITY;
1802:Veno-Echo.cpp ****     }
1803:Veno-Echo.cpp **** 
1804:Veno-Echo.cpp ****     else if (input < 0.6364f)
1805:Veno-Echo.cpp ****     {
1806:Veno-Echo.cpp ****         retVal = 2.0f;
1807:Veno-Echo.cpp ****         *div = MULT2;
1808:Veno-Echo.cpp ****     }
1809:Veno-Echo.cpp **** 
1810:Veno-Echo.cpp ****     else if (input < 0.7273f)
1811:Veno-Echo.cpp ****     {
1812:Veno-Echo.cpp ****         retVal = 3.0f;
1813:Veno-Echo.cpp ****         *div = MULT3;
1814:Veno-Echo.cpp ****     }
1815:Veno-Echo.cpp **** 
1816:Veno-Echo.cpp ****     else if (input < 0.8182f)
1817:Veno-Echo.cpp ****     {
1818:Veno-Echo.cpp ****         retVal = 4.0f;
1819:Veno-Echo.cpp ****         *div = MULT4;
1820:Veno-Echo.cpp ****     }
1821:Veno-Echo.cpp ****     
1822:Veno-Echo.cpp ****     else if (input < 0.9091f)
1823:Veno-Echo.cpp ****     {
1824:Veno-Echo.cpp ****         retVal = 5.0f;
1825:Veno-Echo.cpp ****         *div = MULT5;
1826:Veno-Echo.cpp ****     }
1827:Veno-Echo.cpp **** 
1828:Veno-Echo.cpp ****     else if (input <= 1.0f)
1829:Veno-Echo.cpp ****     {
1830:Veno-Echo.cpp ****        retVal = 6.0f; 
1831:Veno-Echo.cpp ****        *div = MULT6;
1832:Veno-Echo.cpp ****     }
1833:Veno-Echo.cpp ****     else
1834:Veno-Echo.cpp ****     {
1835:Veno-Echo.cpp ****         retVal = 1.0f; 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 71


1836:Veno-Echo.cpp ****        *div = UNITY;
1837:Veno-Echo.cpp ****     }
1838:Veno-Echo.cpp ****     
1839:Veno-Echo.cpp **** return retVal;
1840:Veno-Echo.cpp **** 
1841:Veno-Echo.cpp **** }
1842:Veno-Echo.cpp **** 
1843:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
1844:Veno-Echo.cpp **** {
1845:Veno-Echo.cpp ****     float retVal{};
1846:Veno-Echo.cpp ****     switch(ratio)
1847:Veno-Echo.cpp ****     {
1848:Veno-Echo.cpp ****         case QUARTER:
1849:Veno-Echo.cpp ****         retVal = 1.0f;
1850:Veno-Echo.cpp ****         break;
1851:Veno-Echo.cpp **** 
1852:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1853:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1854:Veno-Echo.cpp ****         break;
1855:Veno-Echo.cpp **** 
1856:Veno-Echo.cpp ****         case EIGHT:
1857:Veno-Echo.cpp ****         retVal = 2.0f;
1858:Veno-Echo.cpp ****         break;
1859:Veno-Echo.cpp **** 
1860:Veno-Echo.cpp ****         case TWELVE:
1861:Veno-Echo.cpp ****         retVal = 3.0f;
1862:Veno-Echo.cpp ****         break;
1863:Veno-Echo.cpp **** 
1864:Veno-Echo.cpp ****         default:
1865:Veno-Echo.cpp ****         retVal = 1.0f;
1866:Veno-Echo.cpp ****         break;
1867:Veno-Echo.cpp ****     }
1868:Veno-Echo.cpp **** 
1869:Veno-Echo.cpp **** return retVal;
1870:Veno-Echo.cpp **** }
1871:Veno-Echo.cpp **** 
1872:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1873:Veno-Echo.cpp **** {
1874:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1875:Veno-Echo.cpp ****     {
1876:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1877:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1878:Veno-Echo.cpp ****     }
1879:Veno-Echo.cpp ****     else
1880:Veno-Echo.cpp ****     {
1881:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1882:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1883:Veno-Echo.cpp ****     }
1884:Veno-Echo.cpp **** 
1885:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1886:Veno-Echo.cpp ****     {
1887:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1888:Veno-Echo.cpp ****     }
1889:Veno-Echo.cpp ****     else
1890:Veno-Echo.cpp ****     {
1891:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1892:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 72


1893:Veno-Echo.cpp **** 
1894:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1895:Veno-Echo.cpp ****     {
1896:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1897:Veno-Echo.cpp ****     }
1898:Veno-Echo.cpp ****     else
1899:Veno-Echo.cpp ****     {
1900:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1901:Veno-Echo.cpp ****     }
1902:Veno-Echo.cpp **** 
1903:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1904:Veno-Echo.cpp ****     {
1905:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1906:Veno-Echo.cpp ****     }
1907:Veno-Echo.cpp ****     else
1908:Veno-Echo.cpp ****     {
1909:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1910:Veno-Echo.cpp ****     }
1911:Veno-Echo.cpp **** 
1912:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1913:Veno-Echo.cpp ****     {
1914:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1915:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1916:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1917:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1918:Veno-Echo.cpp ****     }
1919:Veno-Echo.cpp ****     else
1920:Veno-Echo.cpp ****     {
1921:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1922:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1923:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1924:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1925:Veno-Echo.cpp ****     }
1926:Veno-Echo.cpp ****     
1927:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1928:Veno-Echo.cpp ****     {
1929:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1930:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1931:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1932:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1933:Veno-Echo.cpp ****     }
1934:Veno-Echo.cpp ****     else
1935:Veno-Echo.cpp ****     {
1936:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1937:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1938:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1939:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1940:Veno-Echo.cpp **** 
1941:Veno-Echo.cpp ****     }
1942:Veno-Echo.cpp **** 
1943:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1944:Veno-Echo.cpp ****     {
1945:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1946:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1947:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1948:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1949:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 73


1950:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1951:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1952:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1953:Veno-Echo.cpp ****     }
1954:Veno-Echo.cpp **** 
1955:Veno-Echo.cpp ****     else
1956:Veno-Echo.cpp ****     {
1957:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1958:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1959:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1960:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1961:Veno-Echo.cpp ****     }
1962:Veno-Echo.cpp **** 
1963:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1964:Veno-Echo.cpp ****     {
1965:Veno-Echo.cpp ****         PostFilters = false;
1966:Veno-Echo.cpp ****     }
1967:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1968:Veno-Echo.cpp ****     {
1969:Veno-Echo.cpp ****         PostFilters = true;
1970:Veno-Echo.cpp ****     }
1971:Veno-Echo.cpp ****     else
1972:Veno-Echo.cpp ****     {
1973:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1974:Veno-Echo.cpp ****     }
1975:Veno-Echo.cpp **** 
1976:Veno-Echo.cpp **** }
1977:Veno-Echo.cpp **** 
1978:Veno-Echo.cpp **** void TurnOnAllLEDs()
1979:Veno-Echo.cpp **** {
1980:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1981:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1982:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1983:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1984:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1985:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1986:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1987:Veno-Echo.cpp **** }
1988:Veno-Echo.cpp **** 
1989:Veno-Echo.cpp **** void ResetAllLEDs()
1990:Veno-Echo.cpp **** {
1991:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1992:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1993:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1994:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1995:Veno-Echo.cpp ****     {
1996:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1997:Veno-Echo.cpp ****     }
1998:Veno-Echo.cpp ****     else
1999:Veno-Echo.cpp ****     {
2000:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
2001:Veno-Echo.cpp ****     }
2002:Veno-Echo.cpp **** 
2003:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
2004:Veno-Echo.cpp ****     {
2005:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
2006:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 74


2007:Veno-Echo.cpp ****     else
2008:Veno-Echo.cpp ****     {
2009:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
2010:Veno-Echo.cpp ****     }
2011:Veno-Echo.cpp ****     
2012:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
2013:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
2014:Veno-Echo.cpp **** }
2015:Veno-Echo.cpp **** 
2016:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2017:Veno-Echo.cpp **** {
2018:Veno-Echo.cpp ****     float returnval{};
2019:Veno-Echo.cpp ****     if (input > limit)
2020:Veno-Echo.cpp ****         returnval = limit;
2021:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2022:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2023:Veno-Echo.cpp ****     else
2024:Veno-Echo.cpp ****         returnval = input;
2025:Veno-Echo.cpp **** 
2026:Veno-Echo.cpp ****     return returnval;   
2027:Veno-Echo.cpp **** }
2028:Veno-Echo.cpp **** 
2029:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1218              		.loc 19 2029 7 view .LVU249
 1219              	.LBB890:
2030:Veno-Echo.cpp **** {
2031:Veno-Echo.cpp ****     float output{};
 1220              		.loc 19 2031 5 view .LVU250
2032:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1221              		.loc 19 2032 5 view .LVU251
 1222              	.LBE890:
 1223              	.LBE889:
1055:Veno-Echo.cpp ****         }
 1224              		.loc 19 1055 41 is_stmt 0 view .LVU252
 1225 002c 5D4A     		ldr	r2, .L78+20
 1226              	.LBB894:
 1227              	.LBB891:
 1228              		.loc 19 2032 39 view .LVU253
 1229 002e F7EE006A 		vmov.f32	s13, #1.0e+0
 1230              		.loc 19 2032 49 view .LVU254
 1231 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 1232              	.LBE891:
 1233              	.LBE894:
1055:Veno-Echo.cpp ****         }
 1234              		.loc 19 1055 41 view .LVU255
 1235 0036 5C4B     		ldr	r3, .L78+24
 1236              	.LBB895:
 1237              	.LBB892:
 1238              		.loc 19 2032 39 view .LVU256
 1239 0038 92ED007A 		vldr.32	s14, [r2]
 1240              		.loc 19 2032 12 view .LVU257
 1241 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 1242 0040 D3ED007A 		vldr.32	s15, [r3]
 1243              		.loc 19 2032 39 view .LVU258
 1244 0044 36EEC77A 		vsub.f32	s14, s13, s14
 1245              		.loc 19 2032 49 view .LVU259
 1246 0048 37EE657A 		vsub.f32	s14, s14, s11
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 75


 1247              		.loc 19 2032 12 view .LVU260
 1248 004c E7EE067A 		vfma.f32	s15, s14, s12
 1249              	.LVL47:
2033:Veno-Echo.cpp **** 
2034:Veno-Echo.cpp ****     if(output < 0.0f)
 1250              		.loc 19 2034 5 is_stmt 1 view .LVU261
 1251 0050 F5EEC07A 		vcmpe.f32	s15, #0
 1252 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1253 0058 00F19380 		bmi	.L76
2035:Veno-Echo.cpp ****     {
2036:Veno-Echo.cpp ****         output = 0.0f;
2037:Veno-Echo.cpp ****     }
2038:Veno-Echo.cpp **** 
2039:Veno-Echo.cpp ****     if(output > 1.0f)
 1254              		.loc 19 2039 5 view .LVU262
2040:Veno-Echo.cpp ****     {
2041:Veno-Echo.cpp ****         output = 1.0f;
 1255              		.loc 19 2041 16 is_stmt 0 view .LVU263
 1256 005c F4EE667A 		vcmp.f32	s15, s13
 1257 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1258 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 1259              	.LVL48:
 1260              	.L58:
 1261              		.loc 19 2041 16 view .LVU264
 1262              	.LBE892:
 1263              	.LBE895:
1058:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1264              		.loc 19 1058 9 is_stmt 1 view .LVU265
1058:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1265              		.loc 19 1058 37 is_stmt 0 view .LVU266
 1266 0068 B0EE670A 		vmov.f32	s0, s15
 1267              	.LVL49:
1058:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1268              		.loc 19 1058 37 view .LVU267
 1269 006c 0020     		movs	r0, #0
 1270 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 1271 0072 DFED4E0A 		vldr.32	s1, .L78+28
 1272 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1273              	.LVL50:
1059:Veno-Echo.cpp ****     }
 1274              		.loc 19 1059 9 is_stmt 1 view .LVU268
 1275              	.LBB896:
 1276              	.LBI896:
 1277              		.file 21 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 76


  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 77


  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 78


 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1278              		.loc 21 135 13 view .LVU269
 1279              	.LBB897:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 1280              		.loc 21 137 5 view .LVU270
 1281              		.loc 21 137 9 is_stmt 0 view .LVU271
 1282 007a 4D4B     		ldr	r3, .L78+32
 1283 007c 9FED4D7A 		vldr.32	s14, .L78+36
 1284 0080 D3ED007A 		vldr.32	s15, [r3]
 1285              		.loc 21 137 24 view .LVU272
 1286 0084 30EE670A 		vsub.f32	s0, s0, s15
 1287              	.LVL51:
 1288              		.loc 21 137 24 view .LVU273
 1289              	.LBE897:
 1290              	.LBE896:
 1291              	.LBE911:
 1292              	.LBE923:
1094:Veno-Echo.cpp **** 
 1293              		.loc 19 1094 1 view .LVU274
 1294 0088 BDEC028B 		vldm	sp!, {d8}
 1295              		.cfi_remember_state
 1296              		.cfi_restore 80
 1297              		.cfi_restore 81
 1298              		.cfi_def_cfa_offset 8
 1299              	.LBB924:
 1300              	.LBB912:
 1301              	.LBB899:
 1302              	.LBB898:
 1303              		.loc 21 137 9 view .LVU275
 1304 008c E0EE077A 		vfma.f32	s15, s0, s14
 1305 0090 C3ED007A 		vstr.32	s15, [r3]
 1306              	.LBE898:
 1307              	.LBE899:
 1308              	.LBE912:
 1309              	.LBE924:
1094:Veno-Echo.cpp **** 
 1310              		.loc 19 1094 1 view .LVU276
 1311 0094 10BD     		pop	{r4, pc}
 1312              	.LVL52:
 1313              	.L51:
 1314              		.cfi_restore_state
 1315              	.LBB925:
 1316              	.LBB913:
1063:Veno-Echo.cpp **** 
 1317              		.loc 19 1063 9 is_stmt 1 view .LVU277
1065:Veno-Echo.cpp ****         {
 1318              		.loc 19 1065 9 view .LVU278
 1319 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1320 0098 002B     		cmp	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 79


 1321 009a 3ED1     		bne	.L61
1067:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 1322              		.loc 19 1067 13 view .LVU279
1067:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 1323              		.loc 19 1067 23 is_stmt 0 view .LVU280
 1324 009c 0124     		movs	r4, #1
1068:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 1325              		.loc 19 1068 29 view .LVU281
 1326 009e 4648     		ldr	r0, .L78+40
1069:Veno-Echo.cpp ****         }
 1327              		.loc 19 1069 26 view .LVU282
 1328 00a0 4649     		ldr	r1, .L78+44
1067:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 1329              		.loc 19 1067 23 view .LVU283
 1330 00a2 1470     		strb	r4, [r2]
1068:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 1331              		.loc 19 1068 13 is_stmt 1 view .LVU284
1068:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 1332              		.loc 19 1068 29 is_stmt 0 view .LVU285
 1333 00a4 0370     		strb	r3, [r0]
1069:Veno-Echo.cpp ****         }
 1334              		.loc 19 1069 13 is_stmt 1 view .LVU286
1069:Veno-Echo.cpp ****         }
 1335              		.loc 19 1069 26 is_stmt 0 view .LVU287
 1336 00a6 81ED000A 		vstr.32	s0, [r1]
 1337              	.L50:
1069:Veno-Echo.cpp ****         }
 1338              		.loc 19 1069 26 view .LVU288
 1339              	.LBE913:
 1340              	.LBE925:
1094:Veno-Echo.cpp **** 
 1341              		.loc 19 1094 1 view .LVU289
 1342 00aa BDEC028B 		vldm	sp!, {d8}
 1343              		.cfi_remember_state
 1344              		.cfi_restore 80
 1345              		.cfi_restore 81
 1346              		.cfi_def_cfa_offset 8
 1347 00ae 10BD     		pop	{r4, pc}
 1348              	.L52:
 1349              		.cfi_restore_state
 1350              	.LBB926:
 1351              	.LBB920:
1036:Veno-Echo.cpp ****             {
 1352              		.loc 19 1036 13 is_stmt 1 view .LVU290
1036:Veno-Echo.cpp ****             {
 1353              		.loc 19 1036 16 is_stmt 0 view .LVU291
 1354 00b0 3A4B     		ldr	r3, .L78+12
1036:Veno-Echo.cpp ****             {
 1355              		.loc 19 1036 13 view .LVU292
 1356 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1357 00b4 7AB9     		cbnz	r2, .L54
1038:Veno-Echo.cpp ****                 {
 1358              		.loc 19 1038 17 is_stmt 1 view .LVU293
 1359              	.LVL53:
 1360              	.LBB900:
 1361              	.LBI900:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 80


 1362              		.loc 20 75 3 view .LVU294
 1363              	.LBB901:
 1364              		.loc 20 76 5 view .LVU295
 1365              		.loc 20 76 5 is_stmt 0 view .LVU296
 1366              	.LBE901:
 1367              	.LBE900:
1038:Veno-Echo.cpp ****                 {
 1368              		.loc 19 1038 23 view .LVU297
 1369 00b6 3A4A     		ldr	r2, .L78+16
1038:Veno-Echo.cpp ****                 {
 1370              		.loc 19 1038 17 view .LVU298
 1371 00b8 9FED417A 		vldr.32	s14, .L78+48
1038:Veno-Echo.cpp ****                 {
 1372              		.loc 19 1038 23 view .LVU299
 1373 00bc D2ED007A 		vldr.32	s15, [r2]
 1374 00c0 70EE677A 		vsub.f32	s15, s0, s15
 1375              	.LBB903:
 1376              	.LBB902:
 1377              		.loc 20 76 31 view .LVU300
 1378 00c4 F0EEE77A 		vabs.f32	s15, s15
 1379              	.LBE902:
 1380              	.LBE903:
1038:Veno-Echo.cpp ****                 {
 1381              		.loc 19 1038 17 view .LVU301
 1382 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 1383 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1384 00d0 ACDD     		ble	.L53
1040:Veno-Echo.cpp ****                 }
 1385              		.loc 19 1040 21 is_stmt 1 view .LVU302
1040:Veno-Echo.cpp ****                 }
 1386              		.loc 19 1040 38 is_stmt 0 view .LVU303
 1387 00d2 0122     		movs	r2, #1
 1388 00d4 1A70     		strb	r2, [r3]
 1389              	.L54:
1045:Veno-Echo.cpp **** 
 1390              		.loc 19 1045 9 is_stmt 1 view .LVU304
 1391              	.LVL54:
1047:Veno-Echo.cpp ****         {
 1392              		.loc 19 1047 9 view .LVU305
1049:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1393              		.loc 19 1049 13 view .LVU306
 1394              	.LBB904:
 1395              	.LBI904:
2029:Veno-Echo.cpp **** {
 1396              		.loc 19 2029 7 view .LVU307
 1397              	.LBB905:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1398              		.loc 19 2031 5 view .LVU308
2032:Veno-Echo.cpp **** 
 1399              		.loc 19 2032 5 view .LVU309
 1400              	.LBE905:
 1401              	.LBE904:
1049:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 1402              		.loc 19 1049 41 is_stmt 0 view .LVU310
 1403 00d6 334B     		ldr	r3, .L78+20
 1404              	.LBB908:
 1405              	.LBB906:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 81


2032:Veno-Echo.cpp **** 
 1406              		.loc 19 2032 39 view .LVU311
 1407 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 1408              		.loc 19 2032 49 view .LVU312
 1409 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2032:Veno-Echo.cpp **** 
 1410              		.loc 19 2032 39 view .LVU313
 1411 00e0 D3ED007A 		vldr.32	s15, [r3]
2032:Veno-Echo.cpp **** 
 1412              		.loc 19 2032 12 view .LVU314
 1413 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2032:Veno-Echo.cpp **** 
 1414              		.loc 19 2032 39 view .LVU315
 1415 00e8 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 1416              		.loc 19 2032 49 view .LVU316
 1417 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 1418              		.loc 19 2032 12 view .LVU317
 1419 00f0 B0EE406A 		vmov.f32	s12, s0
 1420 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2034:Veno-Echo.cpp ****     {
 1421              		.loc 19 2034 5 view .LVU318
 1422 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2032:Veno-Echo.cpp **** 
 1423              		.loc 19 2032 12 view .LVU319
 1424 00fc F0EE467A 		vmov.f32	s15, s12
 1425              	.LVL55:
2034:Veno-Echo.cpp ****     {
 1426              		.loc 19 2034 5 is_stmt 1 view .LVU320
 1427 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1428 0104 40D4     		bmi	.L77
2039:Veno-Echo.cpp ****     {
 1429              		.loc 19 2039 5 view .LVU321
 1430              		.loc 19 2041 16 is_stmt 0 view .LVU322
 1431 0106 F4EE477A 		vcmp.f32	s15, s14
 1432 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1433 010e 77FE277A 		vselgt.f32	s15, s14, s15
 1434              	.L56:
 1435              	.LVL56:
2042:Veno-Echo.cpp ****     }
2043:Veno-Echo.cpp **** 
2044:Veno-Echo.cpp ****     return output;
 1436              		.loc 19 2044 5 is_stmt 1 view .LVU323
 1437              		.loc 19 2044 5 is_stmt 0 view .LVU324
 1438              	.LBE906:
 1439              	.LBE908:
1050:Veno-Echo.cpp ****         }
 1440              		.loc 19 1050 13 is_stmt 1 view .LVU325
1050:Veno-Echo.cpp ****         }
 1441              		.loc 19 1050 28 is_stmt 0 view .LVU326
 1442 0112 254B     		ldr	r3, .L78+24
 1443 0114 83ED000A 		vstr.32	s0, [r3]
 1444 0118 A6E7     		b	.L58
 1445              	.LVL57:
 1446              	.L61:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 82


1050:Veno-Echo.cpp ****         }
 1447              		.loc 19 1050 28 view .LVU327
 1448              	.LBE920:
 1449              	.LBB921:
1074:Veno-Echo.cpp ****             {
 1450              		.loc 19 1074 13 is_stmt 1 view .LVU328
1074:Veno-Echo.cpp ****             {
 1451              		.loc 19 1074 16 is_stmt 0 view .LVU329
 1452 011a 274B     		ldr	r3, .L78+40
1074:Veno-Echo.cpp ****             {
 1453              		.loc 19 1074 13 view .LVU330
 1454 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1455 011e 7AB9     		cbnz	r2, .L63
1076:Veno-Echo.cpp ****                 {
 1456              		.loc 19 1076 17 is_stmt 1 view .LVU331
 1457              	.LVL58:
 1458              	.LBB914:
 1459              	.LBI914:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1460              		.loc 20 75 3 view .LVU332
 1461              	.LBB915:
 1462              		.loc 20 76 5 view .LVU333
 1463              		.loc 20 76 5 is_stmt 0 view .LVU334
 1464              	.LBE915:
 1465              	.LBE914:
1076:Veno-Echo.cpp ****                 {
 1466              		.loc 19 1076 23 view .LVU335
 1467 0120 264A     		ldr	r2, .L78+44
1076:Veno-Echo.cpp ****                 {
 1468              		.loc 19 1076 17 view .LVU336
 1469 0122 9FED277A 		vldr.32	s14, .L78+48
1076:Veno-Echo.cpp ****                 {
 1470              		.loc 19 1076 23 view .LVU337
 1471 0126 D2ED007A 		vldr.32	s15, [r2]
 1472 012a 70EE677A 		vsub.f32	s15, s0, s15
 1473              	.LBB917:
 1474              	.LBB916:
 1475              		.loc 20 76 31 view .LVU338
 1476 012e F0EEE77A 		vabs.f32	s15, s15
 1477              	.LBE916:
 1478              	.LBE917:
1076:Veno-Echo.cpp ****                 {
 1479              		.loc 19 1076 17 view .LVU339
 1480 0132 F4EEC77A 		vcmpe.f32	s15, s14
 1481 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1482 013a B6DD     		ble	.L50
1078:Veno-Echo.cpp ****                 }
 1483              		.loc 19 1078 21 is_stmt 1 view .LVU340
1078:Veno-Echo.cpp ****                 }
 1484              		.loc 19 1078 37 is_stmt 0 view .LVU341
 1485 013c 0122     		movs	r2, #1
 1486 013e 1A70     		strb	r2, [r3]
 1487              	.L63:
1083:Veno-Echo.cpp ****         {
 1488              		.loc 19 1083 9 is_stmt 1 view .LVU342
 1489              	.LBB918:
 1490              	.LBB919:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 83


1085:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 1491              		.loc 19 1085 13 view .LVU343
 1492              	.LVL59:
1086:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1493              		.loc 19 1086 13 view .LVU344
1086:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1494              		.loc 19 1086 29 is_stmt 0 view .LVU345
 1495 0140 9FED201A 		vldr.32	s2, .L78+52
 1496 0144 0120     		movs	r0, #1
 1497 0146 DFED200A 		vldr.32	s1, .L78+56
 1498 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1499              	.LVL60:
1086:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1500              		.loc 19 1086 29 view .LVU346
 1501 014e B0EE408A 		vmov.f32	s16, s0
 1502              	.LVL61:
1087:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1503              		.loc 19 1087 13 is_stmt 1 view .LVU347
1087:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1504              		.loc 19 1087 26 is_stmt 0 view .LVU348
 1505 0152 1E48     		ldr	r0, .L78+60
 1506 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1507              	.LVL62:
1088:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1508              		.loc 19 1088 13 is_stmt 1 view .LVU349
1088:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1509              		.loc 19 1088 26 is_stmt 0 view .LVU350
 1510 0158 1D48     		ldr	r0, .L78+64
 1511 015a B0EE480A 		vmov.f32	s0, s16
 1512 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1513              	.LVL63:
1089:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1514              		.loc 19 1089 13 is_stmt 1 view .LVU351
1089:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1515              		.loc 19 1089 31 is_stmt 0 view .LVU352
 1516 0162 B0EE480A 		vmov.f32	s0, s16
 1517 0166 1B48     		ldr	r0, .L78+68
 1518 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1519              	.LVL64:
1090:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1520              		.loc 19 1090 13 is_stmt 1 view .LVU353
1090:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1521              		.loc 19 1090 31 is_stmt 0 view .LVU354
 1522 016c B0EE480A 		vmov.f32	s0, s16
 1523 0170 1948     		ldr	r0, .L78+72
 1524 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1525              	.LVL65:
1091:Veno-Echo.cpp ****         }
 1526              		.loc 19 1091 13 is_stmt 1 view .LVU355
1091:Veno-Echo.cpp ****         }
 1527              		.loc 19 1091 35 is_stmt 0 view .LVU356
 1528 0176 194B     		ldr	r3, .L78+76
 1529 0178 83ED048A 		vstr.32	s16, [r3, #16]
 1530              	.LBE919:
 1531              	.LBE918:
 1532              	.LBE921:
 1533              	.LBE926:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 84


1094:Veno-Echo.cpp **** 
 1534              		.loc 19 1094 1 view .LVU357
 1535 017c BDEC028B 		vldm	sp!, {d8}
 1536              		.cfi_remember_state
 1537              		.cfi_restore 80
 1538              		.cfi_restore 81
 1539              		.cfi_def_cfa_offset 8
 1540              	.LVL66:
1094:Veno-Echo.cpp **** 
 1541              		.loc 19 1094 1 view .LVU358
 1542 0180 10BD     		pop	{r4, pc}
 1543              	.LVL67:
 1544              	.L76:
 1545              		.cfi_restore_state
 1546              	.LBB927:
 1547              	.LBB922:
 1548              	.LBB909:
 1549              	.LBB893:
2036:Veno-Echo.cpp ****     }
 1550              		.loc 19 2036 16 view .LVU359
 1551 0182 DFED0A7A 		vldr.32	s15, .L78+28
 1552              	.LVL68:
2036:Veno-Echo.cpp ****     }
 1553              		.loc 19 2036 16 view .LVU360
 1554 0186 6FE7     		b	.L58
 1555              	.LVL69:
 1556              	.L77:
2036:Veno-Echo.cpp ****     }
 1557              		.loc 19 2036 16 view .LVU361
 1558              	.LBE893:
 1559              	.LBE909:
 1560              	.LBB910:
 1561              	.LBB907:
 1562 0188 DFED087A 		vldr.32	s15, .L78+28
 1563 018c C1E7     		b	.L56
 1564              	.L79:
 1565 018e 00BF     		.align	2
 1566              	.L78:
 1567 0190 18000000 		.word	.LANCHOR4+24
 1568 0194 00000000 		.word	.LANCHOR8
 1569 0198 00000000 		.word	.LANCHOR9
 1570 019c 00000000 		.word	.LANCHOR10
 1571 01a0 00000000 		.word	.LANCHOR11
 1572 01a4 00000000 		.word	.LANCHOR7
 1573 01a8 00000000 		.word	.LANCHOR12
 1574 01ac 00000000 		.word	0
 1575 01b0 00000000 		.word	.LANCHOR13
 1576 01b4 6F12033D 		.word	1023611503
 1577 01b8 00000000 		.word	.LANCHOR14
 1578 01bc 00000000 		.word	.LANCHOR15
 1579 01c0 0AD7A33B 		.word	1000593162
 1580 01c4 00004844 		.word	1145569280
 1581 01c8 0000C842 		.word	1120403456
 1582 01cc 00000000 		.word	.LANCHOR16
 1583 01d0 00000000 		.word	.LANCHOR17
 1584 01d4 00000000 		.word	.LANCHOR18
 1585 01d8 00000000 		.word	.LANCHOR19
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 85


 1586 01dc 00000000 		.word	.LANCHOR20
 1587              	.LBE907:
 1588              	.LBE910:
 1589              	.LBE922:
 1590              	.LBE927:
 1591              		.cfi_endproc
 1592              	.LFE4296:
 1594              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 1595              		.align	1
 1596              		.p2align 2,,3
 1597              		.global	_Z19Update_feedbackR_CVv
 1598              		.syntax unified
 1599              		.thumb
 1600              		.thumb_func
 1601              		.fpu fpv5-d16
 1603              	_Z19Update_feedbackR_CVv:
 1604              	.LFB4297:
1097:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1605              		.loc 19 1097 1 is_stmt 1 view -0
 1606              		.cfi_startproc
 1607              		@ args = 0, pretend = 0, frame = 0
 1608              		@ frame_needed = 0, uses_anonymous_args = 0
1098:Veno-Echo.cpp **** }
 1609              		.loc 19 1098 5 view .LVU363
1097:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1610              		.loc 19 1097 1 is_stmt 0 view .LVU364
 1611 0000 08B5     		push	{r3, lr}
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 3, -8
 1614              		.cfi_offset 14, -4
1098:Veno-Echo.cpp **** }
 1615              		.loc 19 1098 35 view .LVU365
 1616 0002 0321     		movs	r1, #3
 1617 0004 0348     		ldr	r0, .L82
 1618 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1619              	.LVL70:
1098:Veno-Echo.cpp **** }
 1620              		.loc 19 1098 18 view .LVU366
 1621 000a 034B     		ldr	r3, .L82+4
 1622 000c 83ED000A 		vstr.32	s0, [r3]
1099:Veno-Echo.cpp **** 
 1623              		.loc 19 1099 1 view .LVU367
 1624 0010 08BD     		pop	{r3, pc}
 1625              	.L83:
 1626 0012 00BF     		.align	2
 1627              	.L82:
 1628 0014 18000000 		.word	.LANCHOR4+24
 1629 0018 00000000 		.word	.LANCHOR21
 1630              		.cfi_endproc
 1631              	.LFE4297:
 1633              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 1634              		.align	1
 1635              		.p2align 2,,3
 1636              		.global	_Z16Update_feedbackRv
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 86


 1640              		.fpu fpv5-d16
 1642              	_Z16Update_feedbackRv:
 1643              	.LFB4298:
1102:Veno-Echo.cpp ****     static bool lastShift{};
 1644              		.loc 19 1102 1 is_stmt 1 view -0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
1103:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 1648              		.loc 19 1103 5 view .LVU369
1104:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 1649              		.loc 19 1104 5 view .LVU370
1105:Veno-Echo.cpp **** 
 1650              		.loc 19 1105 5 view .LVU371
1107:Veno-Echo.cpp **** 
 1651              		.loc 19 1107 5 view .LVU372
1110:Veno-Echo.cpp **** 
 1652              		.loc 19 1110 5 view .LVU373
1110:Veno-Echo.cpp **** 
 1653              		.loc 19 1110 43 is_stmt 0 view .LVU374
 1654 0000 0422     		movs	r2, #4
 1655 0002 0721     		movs	r1, #7
 1656 0004 6548     		ldr	r0, .L114
1102:Veno-Echo.cpp ****     static bool lastShift{};
 1657              		.loc 19 1102 1 view .LVU375
 1658 0006 10B5     		push	{r4, lr}
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 4, -8
 1661              		.cfi_offset 14, -4
 1662 0008 2DED028B 		vpush.64	{d8}
 1663              		.cfi_def_cfa_offset 16
 1664              		.cfi_offset 80, -16
 1665              		.cfi_offset 81, -12
1110:Veno-Echo.cpp **** 
 1666              		.loc 19 1110 43 view .LVU376
 1667 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1668              	.LVL71:
 1669              	.LBB928:
1112:Veno-Echo.cpp ****     {   
 1670              		.loc 19 1112 9 view .LVU377
 1671 0010 634B     		ldr	r3, .L114+4
 1672              	.LVL72:
1112:Veno-Echo.cpp ****     {   
 1673              		.loc 19 1112 9 view .LVU378
 1674              	.LBE928:
1112:Veno-Echo.cpp ****     {   
 1675              		.loc 19 1112 5 is_stmt 1 view .LVU379
 1676              	.LBB962:
 1677              	.LBB929:
1116:Veno-Echo.cpp ****         {
 1678              		.loc 19 1116 19 is_stmt 0 view .LVU380
 1679 0012 644A     		ldr	r2, .L114+8
 1680              	.LBE929:
1112:Veno-Echo.cpp ****     {   
 1681              		.loc 19 1112 5 view .LVU381
 1682 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 0016 002B     		cmp	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 87


 1684 0018 3FD1     		bne	.L85
 1685              	.LBB950:
1114:Veno-Echo.cpp ****         //update pickup
 1686              		.loc 19 1114 9 is_stmt 1 view .LVU382
1116:Veno-Echo.cpp ****         {
 1687              		.loc 19 1116 9 view .LVU383
 1688 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1689 001c 0029     		cmp	r1, #0
 1690 001e 49D0     		beq	.L86
1118:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 1691              		.loc 19 1118 13 view .LVU384
1119:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1692              		.loc 19 1119 30 is_stmt 0 view .LVU385
 1693 0020 614C     		ldr	r4, .L114+12
1120:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 1694              		.loc 19 1120 28 view .LVU386
 1695 0022 6248     		ldr	r0, .L114+16
1121:Veno-Echo.cpp ****         } 
 1696              		.loc 19 1121 27 view .LVU387
 1697 0024 6249     		ldr	r1, .L114+20
1118:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 1698              		.loc 19 1118 23 view .LVU388
 1699 0026 1370     		strb	r3, [r2]
1119:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1700              		.loc 19 1119 13 is_stmt 1 view .LVU389
1119:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 1701              		.loc 19 1119 30 is_stmt 0 view .LVU390
 1702 0028 2370     		strb	r3, [r4]
1120:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 1703              		.loc 19 1120 13 is_stmt 1 view .LVU391
1120:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 1704              		.loc 19 1120 28 is_stmt 0 view .LVU392
 1705 002a 80ED000A 		vstr.32	s0, [r0]
1121:Veno-Echo.cpp ****         } 
 1706              		.loc 19 1121 13 is_stmt 1 view .LVU393
1121:Veno-Echo.cpp ****         } 
 1707              		.loc 19 1121 27 is_stmt 0 view .LVU394
 1708 002e 81ED000A 		vstr.32	s0, [r1]
 1709              	.LVL73:
 1710              	.L87:
1134:Veno-Echo.cpp ****         
 1711              		.loc 19 1134 9 is_stmt 1 view .LVU395
1136:Veno-Echo.cpp ****         {
 1712              		.loc 19 1136 9 view .LVU396
1144:Veno-Echo.cpp ****         }
 1713              		.loc 19 1144 13 view .LVU397
 1714              	.LBB930:
 1715              	.LBI930:
2029:Veno-Echo.cpp **** {
 1716              		.loc 19 2029 7 view .LVU398
 1717              	.LBB931:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1718              		.loc 19 2031 5 view .LVU399
2032:Veno-Echo.cpp **** 
 1719              		.loc 19 2032 5 view .LVU400
 1720              	.LBE931:
 1721              	.LBE930:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 88


1144:Veno-Echo.cpp ****         }
 1722              		.loc 19 1144 41 is_stmt 0 view .LVU401
 1723 0032 604B     		ldr	r3, .L114+24
 1724              	.LBB934:
 1725              	.LBB932:
2032:Veno-Echo.cpp **** 
 1726              		.loc 19 2032 39 view .LVU402
 1727 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 1728              		.loc 19 2032 49 view .LVU403
 1729 0038 B6EE006A 		vmov.f32	s12, #5.0e-1
2032:Veno-Echo.cpp **** 
 1730              		.loc 19 2032 39 view .LVU404
 1731 003c D3ED007A 		vldr.32	s15, [r3]
2032:Veno-Echo.cpp **** 
 1732              		.loc 19 2032 12 view .LVU405
 1733 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
2032:Veno-Echo.cpp **** 
 1734              		.loc 19 2032 39 view .LVU406
 1735 0044 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 1736              		.loc 19 2032 49 view .LVU407
 1737 0048 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 1738              		.loc 19 2032 12 view .LVU408
 1739 004c A7EEA60A 		vfma.f32	s0, s15, s13
2034:Veno-Echo.cpp ****     {
 1740              		.loc 19 2034 5 view .LVU409
 1741 0050 B5EEC00A 		vcmpe.f32	s0, #0
2032:Veno-Echo.cpp **** 
 1742              		.loc 19 2032 12 view .LVU410
 1743 0054 F0EE407A 		vmov.f32	s15, s0
 1744              	.LVL74:
2034:Veno-Echo.cpp ****     {
 1745              		.loc 19 2034 5 is_stmt 1 view .LVU411
 1746 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1747 005c 00F19380 		bmi	.L112
2039:Veno-Echo.cpp ****     {
 1748              		.loc 19 2039 5 view .LVU412
2041:Veno-Echo.cpp ****     }
 1749              		.loc 19 2041 16 is_stmt 0 view .LVU413
 1750 0060 F4EE477A 		vcmp.f32	s15, s14
 1751 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1752 0068 77FE277A 		vselgt.f32	s15, s14, s15
 1753              	.LVL75:
 1754              	.L93:
2041:Veno-Echo.cpp ****     }
 1755              		.loc 19 2041 16 view .LVU414
 1756              	.LBE932:
 1757              	.LBE934:
1147:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1758              		.loc 19 1147 9 is_stmt 1 view .LVU415
1147:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1759              		.loc 19 1147 37 is_stmt 0 view .LVU416
 1760 006c B0EE670A 		vmov.f32	s0, s15
 1761 0070 0020     		movs	r0, #0
 1762 0072 B7EE041A 		vmov.f32	s2, #1.25e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 89


 1763 0076 DFED500A 		vldr.32	s1, .L114+28
 1764 007a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1765              	.LVL76:
1148:Veno-Echo.cpp ****     }
 1766              		.loc 19 1148 9 is_stmt 1 view .LVU417
 1767              	.LBB935:
 1768              	.LBI935:
 135:../DaisySP/Source/Utility/dsp.h **** {
 1769              		.loc 21 135 13 view .LVU418
 1770              	.LBB936:
 1771              		.loc 21 137 5 view .LVU419
 1772              		.loc 21 137 9 is_stmt 0 view .LVU420
 1773 007e 4F4B     		ldr	r3, .L114+32
 1774 0080 9FED4F7A 		vldr.32	s14, .L114+36
 1775 0084 D3ED007A 		vldr.32	s15, [r3]
 1776              		.loc 21 137 24 view .LVU421
 1777 0088 30EE670A 		vsub.f32	s0, s0, s15
 1778              	.LVL77:
 1779              		.loc 21 137 24 view .LVU422
 1780              	.LBE936:
 1781              	.LBE935:
 1782              	.LBE950:
 1783              	.LBE962:
1184:Veno-Echo.cpp **** 
 1784              		.loc 19 1184 1 view .LVU423
 1785 008c BDEC028B 		vldm	sp!, {d8}
 1786              		.cfi_remember_state
 1787              		.cfi_restore 80
 1788              		.cfi_restore 81
 1789              		.cfi_def_cfa_offset 8
 1790              	.LBB963:
 1791              	.LBB951:
 1792              	.LBB938:
 1793              	.LBB937:
 1794              		.loc 21 137 9 view .LVU424
 1795 0090 E0EE077A 		vfma.f32	s15, s0, s14
 1796 0094 C3ED007A 		vstr.32	s15, [r3]
 1797              	.LBE937:
 1798              	.LBE938:
 1799              	.LBE951:
 1800              	.LBE963:
1184:Veno-Echo.cpp **** 
 1801              		.loc 19 1184 1 view .LVU425
 1802 0098 10BD     		pop	{r4, pc}
 1803              	.LVL78:
 1804              	.L85:
 1805              		.cfi_restore_state
 1806              	.LBB964:
 1807              	.LBB952:
1153:Veno-Echo.cpp **** 
 1808              		.loc 19 1153 9 is_stmt 1 view .LVU426
1155:Veno-Echo.cpp ****         {
 1809              		.loc 19 1155 10 view .LVU427
 1810 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1811 009c 002B     		cmp	r3, #0
 1812 009e 3ED1     		bne	.L96
1157:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 90


 1813              		.loc 19 1157 13 view .LVU428
1157:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 1814              		.loc 19 1157 23 is_stmt 0 view .LVU429
 1815 00a0 0124     		movs	r4, #1
1158:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 1816              		.loc 19 1158 29 view .LVU430
 1817 00a2 4848     		ldr	r0, .L114+40
1159:Veno-Echo.cpp ****         }
 1818              		.loc 19 1159 26 view .LVU431
 1819 00a4 4849     		ldr	r1, .L114+44
1157:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 1820              		.loc 19 1157 23 view .LVU432
 1821 00a6 1470     		strb	r4, [r2]
1158:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 1822              		.loc 19 1158 13 is_stmt 1 view .LVU433
1158:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 1823              		.loc 19 1158 29 is_stmt 0 view .LVU434
 1824 00a8 0370     		strb	r3, [r0]
1159:Veno-Echo.cpp ****         }
 1825              		.loc 19 1159 13 is_stmt 1 view .LVU435
1159:Veno-Echo.cpp ****         }
 1826              		.loc 19 1159 26 is_stmt 0 view .LVU436
 1827 00aa 81ED000A 		vstr.32	s0, [r1]
 1828              	.L84:
1159:Veno-Echo.cpp ****         }
 1829              		.loc 19 1159 26 view .LVU437
 1830              	.LBE952:
 1831              	.LBE964:
1184:Veno-Echo.cpp **** 
 1832              		.loc 19 1184 1 view .LVU438
 1833 00ae BDEC028B 		vldm	sp!, {d8}
 1834              		.cfi_remember_state
 1835              		.cfi_restore 80
 1836              		.cfi_restore 81
 1837              		.cfi_def_cfa_offset 8
 1838 00b2 10BD     		pop	{r4, pc}
 1839              	.L86:
 1840              		.cfi_restore_state
 1841              	.LBB965:
 1842              	.LBB959:
1125:Veno-Echo.cpp ****             {
 1843              		.loc 19 1125 13 is_stmt 1 view .LVU439
1125:Veno-Echo.cpp ****             {
 1844              		.loc 19 1125 16 is_stmt 0 view .LVU440
 1845 00b4 3C4B     		ldr	r3, .L114+12
1125:Veno-Echo.cpp ****             {
 1846              		.loc 19 1125 13 view .LVU441
 1847 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1848 00b8 7AB9     		cbnz	r2, .L88
1127:Veno-Echo.cpp ****                 {
 1849              		.loc 19 1127 17 is_stmt 1 view .LVU442
 1850              	.LVL79:
 1851              	.LBB939:
 1852              	.LBI939:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1853              		.loc 20 75 3 view .LVU443
 1854              	.LBB940:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 91


 1855              		.loc 20 76 5 view .LVU444
 1856              		.loc 20 76 5 is_stmt 0 view .LVU445
 1857              	.LBE940:
 1858              	.LBE939:
1127:Veno-Echo.cpp ****                 {
 1859              		.loc 19 1127 23 view .LVU446
 1860 00ba 3D4A     		ldr	r2, .L114+20
1127:Veno-Echo.cpp ****                 {
 1861              		.loc 19 1127 17 view .LVU447
 1862 00bc 9FED437A 		vldr.32	s14, .L114+48
1127:Veno-Echo.cpp ****                 {
 1863              		.loc 19 1127 23 view .LVU448
 1864 00c0 D2ED007A 		vldr.32	s15, [r2]
 1865 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1866              	.LBB942:
 1867              	.LBB941:
 1868              		.loc 20 76 31 view .LVU449
 1869 00c8 F0EEE77A 		vabs.f32	s15, s15
 1870              	.LBE941:
 1871              	.LBE942:
1127:Veno-Echo.cpp ****                 {
 1872              		.loc 19 1127 17 view .LVU450
 1873 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1874 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1875 00d4 5DDD     		ble	.L108
1129:Veno-Echo.cpp ****                 }
 1876              		.loc 19 1129 21 is_stmt 1 view .LVU451
1129:Veno-Echo.cpp ****                 }
 1877              		.loc 19 1129 38 is_stmt 0 view .LVU452
 1878 00d6 0122     		movs	r2, #1
 1879 00d8 1A70     		strb	r2, [r3]
 1880              	.L88:
1134:Veno-Echo.cpp ****         
 1881              		.loc 19 1134 9 is_stmt 1 view .LVU453
 1882              	.LVL80:
1136:Veno-Echo.cpp ****         {
 1883              		.loc 19 1136 9 view .LVU454
1138:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 1884              		.loc 19 1138 13 view .LVU455
 1885              	.LBB943:
 1886              	.LBI943:
2029:Veno-Echo.cpp **** {
 1887              		.loc 19 2029 7 view .LVU456
 1888              	.LBB944:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1889              		.loc 19 2031 5 view .LVU457
2032:Veno-Echo.cpp **** 
 1890              		.loc 19 2032 5 view .LVU458
 1891              	.LBE944:
 1892              	.LBE943:
1138:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 1893              		.loc 19 1138 41 is_stmt 0 view .LVU459
 1894 00da 364B     		ldr	r3, .L114+24
 1895              	.LBB947:
 1896              	.LBB945:
2032:Veno-Echo.cpp **** 
 1897              		.loc 19 2032 39 view .LVU460
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 92


 1898 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 1899              		.loc 19 2032 49 view .LVU461
 1900 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2032:Veno-Echo.cpp **** 
 1901              		.loc 19 2032 39 view .LVU462
 1902 00e4 D3ED007A 		vldr.32	s15, [r3]
2032:Veno-Echo.cpp **** 
 1903              		.loc 19 2032 12 view .LVU463
 1904 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2032:Veno-Echo.cpp **** 
 1905              		.loc 19 2032 39 view .LVU464
 1906 00ec 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 1907              		.loc 19 2032 49 view .LVU465
 1908 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 1909              		.loc 19 2032 12 view .LVU466
 1910 00f4 B0EE406A 		vmov.f32	s12, s0
 1911 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2034:Veno-Echo.cpp ****     {
 1912              		.loc 19 2034 5 view .LVU467
 1913 00fc B5EEC06A 		vcmpe.f32	s12, #0
2032:Veno-Echo.cpp **** 
 1914              		.loc 19 2032 12 view .LVU468
 1915 0100 F0EE467A 		vmov.f32	s15, s12
 1916              	.LVL81:
2034:Veno-Echo.cpp ****     {
 1917              		.loc 19 2034 5 is_stmt 1 view .LVU469
 1918 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1919 0108 40D4     		bmi	.L113
2039:Veno-Echo.cpp ****     {
 1920              		.loc 19 2039 5 view .LVU470
2041:Veno-Echo.cpp ****     }
 1921              		.loc 19 2041 16 is_stmt 0 view .LVU471
 1922 010a F4EE477A 		vcmp.f32	s15, s14
 1923 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1924 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1925              	.L91:
 1926              	.LVL82:
 1927              		.loc 19 2044 5 is_stmt 1 view .LVU472
 1928              		.loc 19 2044 5 is_stmt 0 view .LVU473
 1929              	.LBE945:
 1930              	.LBE947:
1139:Veno-Echo.cpp ****         }
 1931              		.loc 19 1139 13 is_stmt 1 view .LVU474
1139:Veno-Echo.cpp ****         }
 1932              		.loc 19 1139 28 is_stmt 0 view .LVU475
 1933 0116 254B     		ldr	r3, .L114+16
 1934 0118 83ED000A 		vstr.32	s0, [r3]
 1935 011c A6E7     		b	.L93
 1936              	.LVL83:
 1937              	.L96:
1139:Veno-Echo.cpp ****         }
 1938              		.loc 19 1139 28 view .LVU476
 1939              	.LBE959:
 1940              	.LBB960:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 93


1164:Veno-Echo.cpp ****             {
 1941              		.loc 19 1164 13 is_stmt 1 view .LVU477
1164:Veno-Echo.cpp ****             {
 1942              		.loc 19 1164 16 is_stmt 0 view .LVU478
 1943 011e 294B     		ldr	r3, .L114+40
1164:Veno-Echo.cpp ****             {
 1944              		.loc 19 1164 13 view .LVU479
 1945 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1946 0122 7AB9     		cbnz	r2, .L98
1166:Veno-Echo.cpp ****                 {
 1947              		.loc 19 1166 17 is_stmt 1 view .LVU480
 1948              	.LVL84:
 1949              	.LBB953:
 1950              	.LBI953:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1951              		.loc 20 75 3 view .LVU481
 1952              	.LBB954:
 1953              		.loc 20 76 5 view .LVU482
 1954              		.loc 20 76 5 is_stmt 0 view .LVU483
 1955              	.LBE954:
 1956              	.LBE953:
1166:Veno-Echo.cpp ****                 {
 1957              		.loc 19 1166 23 view .LVU484
 1958 0124 284A     		ldr	r2, .L114+44
1166:Veno-Echo.cpp ****                 {
 1959              		.loc 19 1166 17 view .LVU485
 1960 0126 9FED297A 		vldr.32	s14, .L114+48
1166:Veno-Echo.cpp ****                 {
 1961              		.loc 19 1166 23 view .LVU486
 1962 012a D2ED007A 		vldr.32	s15, [r2]
 1963 012e 70EE677A 		vsub.f32	s15, s0, s15
 1964              	.LBB956:
 1965              	.LBB955:
 1966              		.loc 20 76 31 view .LVU487
 1967 0132 F0EEE77A 		vabs.f32	s15, s15
 1968              	.LBE955:
 1969              	.LBE956:
1166:Veno-Echo.cpp ****                 {
 1970              		.loc 19 1166 17 view .LVU488
 1971 0136 F4EEC77A 		vcmpe.f32	s15, s14
 1972 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1973 013e B6DD     		ble	.L84
1168:Veno-Echo.cpp ****                 }
 1974              		.loc 19 1168 21 is_stmt 1 view .LVU489
1168:Veno-Echo.cpp ****                 }
 1975              		.loc 19 1168 37 is_stmt 0 view .LVU490
 1976 0140 0122     		movs	r2, #1
 1977 0142 1A70     		strb	r2, [r3]
 1978              	.L98:
1173:Veno-Echo.cpp ****         {
 1979              		.loc 19 1173 9 is_stmt 1 view .LVU491
 1980              	.LBB957:
 1981              	.LBB958:
1175:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 1982              		.loc 19 1175 13 view .LVU492
 1983              	.LVL85:
1176:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 94


 1984              		.loc 19 1176 13 view .LVU493
1176:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1985              		.loc 19 1176 29 is_stmt 0 view .LVU494
 1986 0144 9FED221A 		vldr.32	s2, .L114+52
 1987 0148 0120     		movs	r0, #1
 1988 014a DFED220A 		vldr.32	s1, .L114+56
 1989 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 1990              	.LVL86:
1176:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1991              		.loc 19 1176 29 view .LVU495
 1992 0152 B0EE408A 		vmov.f32	s16, s0
 1993              	.LVL87:
1177:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1994              		.loc 19 1177 13 is_stmt 1 view .LVU496
1177:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1995              		.loc 19 1177 26 is_stmt 0 view .LVU497
 1996 0156 2048     		ldr	r0, .L114+60
 1997 0158 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1998              	.LVL88:
1178:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 1999              		.loc 19 1178 13 is_stmt 1 view .LVU498
1178:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 2000              		.loc 19 1178 26 is_stmt 0 view .LVU499
 2001 015c 1F48     		ldr	r0, .L114+64
 2002 015e B0EE480A 		vmov.f32	s0, s16
 2003 0162 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2004              	.LVL89:
1179:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2005              		.loc 19 1179 13 is_stmt 1 view .LVU500
1179:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 2006              		.loc 19 1179 31 is_stmt 0 view .LVU501
 2007 0166 B0EE480A 		vmov.f32	s0, s16
 2008 016a 1D48     		ldr	r0, .L114+68
 2009 016c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2010              	.LVL90:
1180:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2011              		.loc 19 1180 13 is_stmt 1 view .LVU502
1180:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 2012              		.loc 19 1180 31 is_stmt 0 view .LVU503
 2013 0170 B0EE480A 		vmov.f32	s0, s16
 2014 0174 1B48     		ldr	r0, .L114+72
 2015 0176 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2016              	.LVL91:
1181:Veno-Echo.cpp ****         }
 2017              		.loc 19 1181 13 is_stmt 1 view .LVU504
1181:Veno-Echo.cpp ****         }
 2018              		.loc 19 1181 35 is_stmt 0 view .LVU505
 2019 017a 1B4B     		ldr	r3, .L114+76
 2020 017c 83ED058A 		vstr.32	s16, [r3, #20]
 2021              	.LBE958:
 2022              	.LBE957:
 2023              	.LBE960:
 2024              	.LBE965:
1184:Veno-Echo.cpp **** 
 2025              		.loc 19 1184 1 view .LVU506
 2026 0180 BDEC028B 		vldm	sp!, {d8}
 2027              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 95


 2028              		.cfi_restore 80
 2029              		.cfi_restore 81
 2030              		.cfi_def_cfa_offset 8
 2031              	.LVL92:
1184:Veno-Echo.cpp **** 
 2032              		.loc 19 1184 1 view .LVU507
 2033 0184 10BD     		pop	{r4, pc}
 2034              	.LVL93:
 2035              	.L112:
 2036              		.cfi_restore_state
 2037              	.LBB966:
 2038              	.LBB961:
 2039              	.LBB948:
 2040              	.LBB933:
2036:Veno-Echo.cpp ****     }
 2041              		.loc 19 2036 16 view .LVU508
 2042 0186 DFED0C7A 		vldr.32	s15, .L114+28
 2043 018a 6FE7     		b	.L93
 2044              	.LVL94:
 2045              	.L113:
2036:Veno-Echo.cpp ****     }
 2046              		.loc 19 2036 16 view .LVU509
 2047              	.LBE933:
 2048              	.LBE948:
 2049              	.LBB949:
 2050              	.LBB946:
 2051 018c DFED0A7A 		vldr.32	s15, .L114+28
 2052 0190 C1E7     		b	.L91
 2053              	.LVL95:
 2054              	.L108:
2036:Veno-Echo.cpp ****     }
 2055              		.loc 19 2036 16 view .LVU510
 2056 0192 064B     		ldr	r3, .L114+16
 2057 0194 93ED000A 		vldr.32	s0, [r3]
 2058              	.LVL96:
2036:Veno-Echo.cpp ****     }
 2059              		.loc 19 2036 16 view .LVU511
 2060 0198 4BE7     		b	.L87
 2061              	.L115:
 2062 019a 00BF     		.align	2
 2063              	.L114:
 2064 019c 18000000 		.word	.LANCHOR4+24
 2065 01a0 00000000 		.word	.LANCHOR8
 2066 01a4 00000000 		.word	.LANCHOR22
 2067 01a8 00000000 		.word	.LANCHOR23
 2068 01ac 00000000 		.word	.LANCHOR24
 2069 01b0 00000000 		.word	.LANCHOR25
 2070 01b4 00000000 		.word	.LANCHOR21
 2071 01b8 00000000 		.word	0
 2072 01bc 00000000 		.word	.LANCHOR26
 2073 01c0 6F12033D 		.word	1023611503
 2074 01c4 00000000 		.word	.LANCHOR27
 2075 01c8 00000000 		.word	.LANCHOR28
 2076 01cc 0AD7A33B 		.word	1000593162
 2077 01d0 00803B46 		.word	1178304512
 2078 01d4 0080BB44 		.word	1153138688
 2079 01d8 00000000 		.word	.LANCHOR29
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 96


 2080 01dc 00000000 		.word	.LANCHOR30
 2081 01e0 00000000 		.word	.LANCHOR31
 2082 01e4 00000000 		.word	.LANCHOR32
 2083 01e8 00000000 		.word	.LANCHOR20
 2084              	.LBE946:
 2085              	.LBE949:
 2086              	.LBE961:
 2087              	.LBE966:
 2088              		.cfi_endproc
 2089              	.LFE4298:
 2091              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 2092              		.align	1
 2093              		.p2align 2,,3
 2094              		.global	_Z16Update_drywet_CVv
 2095              		.syntax unified
 2096              		.thumb
 2097              		.thumb_func
 2098              		.fpu fpv5-d16
 2100              	_Z16Update_drywet_CVv:
 2101              	.LFB4299:
1187:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2102              		.loc 19 1187 1 is_stmt 1 view -0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 0
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
1188:Veno-Echo.cpp **** }
 2106              		.loc 19 1188 5 view .LVU513
1187:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 2107              		.loc 19 1187 1 is_stmt 0 view .LVU514
 2108 0000 08B5     		push	{r3, lr}
 2109              		.cfi_def_cfa_offset 8
 2110              		.cfi_offset 3, -8
 2111              		.cfi_offset 14, -4
1188:Veno-Echo.cpp **** }
 2112              		.loc 19 1188 32 view .LVU515
 2113 0002 0421     		movs	r1, #4
 2114 0004 0348     		ldr	r0, .L118
 2115 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2116              	.LVL97:
1188:Veno-Echo.cpp **** }
 2117              		.loc 19 1188 15 view .LVU516
 2118 000a 034B     		ldr	r3, .L118+4
 2119 000c 83ED000A 		vstr.32	s0, [r3]
1189:Veno-Echo.cpp **** 
 2120              		.loc 19 1189 1 view .LVU517
 2121 0010 08BD     		pop	{r3, pc}
 2122              	.L119:
 2123 0012 00BF     		.align	2
 2124              	.L118:
 2125 0014 18000000 		.word	.LANCHOR4+24
 2126 0018 00000000 		.word	.LANCHOR33
 2127              		.cfi_endproc
 2128              	.LFE4299:
 2130              		.section	.text._Z13Update_drywetv,"ax",%progbits
 2131              		.align	1
 2132              		.p2align 2,,3
 2133              		.global	_Z13Update_drywetv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 97


 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu fpv5-d16
 2139              	_Z13Update_drywetv:
 2140              	.LFB4300:
1192:Veno-Echo.cpp ****     static bool lastShift{};
 2141              		.loc 19 1192 1 is_stmt 1 view -0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 0
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
1193:Veno-Echo.cpp ****     static bool drywet_pickup{};
 2145              		.loc 19 1193 5 view .LVU519
1194:Veno-Echo.cpp ****     static bool Res_pickup{};
 2146              		.loc 19 1194 5 view .LVU520
1195:Veno-Echo.cpp **** 
 2147              		.loc 19 1195 5 view .LVU521
1197:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 2148              		.loc 19 1197 5 view .LVU522
1202:Veno-Echo.cpp **** 
 2149              		.loc 19 1202 5 view .LVU523
1202:Veno-Echo.cpp **** 
 2150              		.loc 19 1202 40 is_stmt 0 view .LVU524
 2151 0000 0522     		movs	r2, #5
 2152 0002 0721     		movs	r1, #7
 2153 0004 8048     		ldr	r0, .L153+24
1192:Veno-Echo.cpp ****     static bool lastShift{};
 2154              		.loc 19 1192 1 view .LVU525
 2155 0006 10B5     		push	{r4, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 4, -8
 2158              		.cfi_offset 14, -4
 2159 0008 2DED028B 		vpush.64	{d8}
 2160              		.cfi_def_cfa_offset 16
 2161              		.cfi_offset 80, -16
 2162              		.cfi_offset 81, -12
1202:Veno-Echo.cpp **** 
 2163              		.loc 19 1202 40 view .LVU526
 2164 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2165              	.LVL98:
 2166              	.LBB967:
1204:Veno-Echo.cpp ****     {   
 2167              		.loc 19 1204 9 view .LVU527
 2168 0010 7E4B     		ldr	r3, .L153+28
 2169              	.LVL99:
1204:Veno-Echo.cpp ****     {   
 2170              		.loc 19 1204 9 view .LVU528
 2171              	.LBE967:
1204:Veno-Echo.cpp ****     {   
 2172              		.loc 19 1204 5 is_stmt 1 view .LVU529
 2173              	.LBB1001:
 2174              	.LBB968:
1209:Veno-Echo.cpp ****         {
 2175              		.loc 19 1209 19 is_stmt 0 view .LVU530
 2176 0012 7F4A     		ldr	r2, .L153+32
 2177              	.LBE968:
1204:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 98


 2178              		.loc 19 1204 5 view .LVU531
 2179 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2180 0016 B3BB     		cbnz	r3, .L121
 2181              	.LBB989:
1207:Veno-Echo.cpp **** 
 2182              		.loc 19 1207 9 is_stmt 1 view .LVU532
1209:Veno-Echo.cpp ****         {
 2183              		.loc 19 1209 9 view .LVU533
 2184 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2185 001a 0029     		cmp	r1, #0
 2186 001c 40D0     		beq	.L122
1211:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2187              		.loc 19 1211 13 view .LVU534
1213:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2188              		.loc 19 1213 27 is_stmt 0 view .LVU535
 2189 001e 7D48     		ldr	r0, .L153+36
1214:Veno-Echo.cpp ****         } 
 2190              		.loc 19 1214 24 view .LVU536
 2191 0020 7D49     		ldr	r1, .L153+40
1211:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 2192              		.loc 19 1211 23 view .LVU537
 2193 0022 1370     		strb	r3, [r2]
1213:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2194              		.loc 19 1213 13 is_stmt 1 view .LVU538
1213:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 2195              		.loc 19 1213 27 is_stmt 0 view .LVU539
 2196 0024 0370     		strb	r3, [r0]
1214:Veno-Echo.cpp ****         } 
 2197              		.loc 19 1214 13 is_stmt 1 view .LVU540
1214:Veno-Echo.cpp ****         } 
 2198              		.loc 19 1214 24 is_stmt 0 view .LVU541
 2199 0026 81ED000A 		vstr.32	s0, [r1]
 2200              	.L123:
1230:Veno-Echo.cpp **** 
 2201              		.loc 19 1230 9 is_stmt 1 view .LVU542
 2202              	.LVL100:
1232:Veno-Echo.cpp ****         {
 2203              		.loc 19 1232 9 view .LVU543
1240:Veno-Echo.cpp ****         }
 2204              		.loc 19 1240 13 view .LVU544
 2205              	.LBB969:
 2206              	.LBI969:
2029:Veno-Echo.cpp **** {
 2207              		.loc 19 2029 7 view .LVU545
 2208              	.LBB970:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2209              		.loc 19 2031 5 view .LVU546
2032:Veno-Echo.cpp **** 
 2210              		.loc 19 2032 5 view .LVU547
 2211              	.LBE970:
 2212              	.LBE969:
1240:Veno-Echo.cpp ****         }
 2213              		.loc 19 1240 37 is_stmt 0 view .LVU548
 2214 002a 7C4A     		ldr	r2, .L153+44
 2215              	.LBB973:
 2216              	.LBB971:
2032:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 99


 2217              		.loc 19 2032 39 view .LVU549
 2218 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2032:Veno-Echo.cpp **** 
 2219              		.loc 19 2032 49 view .LVU550
 2220 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 2221              	.LBE971:
 2222              	.LBE973:
1240:Veno-Echo.cpp ****         }
 2223              		.loc 19 1240 37 view .LVU551
 2224 0034 7A4B     		ldr	r3, .L153+48
 2225              	.LBB974:
 2226              	.LBB972:
2032:Veno-Echo.cpp **** 
 2227              		.loc 19 2032 39 view .LVU552
 2228 0036 92ED007A 		vldr.32	s14, [r2]
2032:Veno-Echo.cpp **** 
 2229              		.loc 19 2032 12 view .LVU553
 2230 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 2231 003e D3ED007A 		vldr.32	s15, [r3]
2032:Veno-Echo.cpp **** 
 2232              		.loc 19 2032 39 view .LVU554
 2233 0042 36EEC77A 		vsub.f32	s14, s13, s14
2032:Veno-Echo.cpp **** 
 2234              		.loc 19 2032 49 view .LVU555
 2235 0046 37EE657A 		vsub.f32	s14, s14, s11
2032:Veno-Echo.cpp **** 
 2236              		.loc 19 2032 12 view .LVU556
 2237 004a E7EE067A 		vfma.f32	s15, s14, s12
 2238              	.LVL101:
2034:Veno-Echo.cpp ****     {
 2239              		.loc 19 2034 5 is_stmt 1 view .LVU557
 2240 004e F5EEC07A 		vcmpe.f32	s15, #0
 2241 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2242 0056 00F1BA80 		bmi	.L140
2039:Veno-Echo.cpp ****     {
 2243              		.loc 19 2039 5 view .LVU558
 2244 005a F4EEE67A 		vcmpe.f32	s15, s13
 2245 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2246 0062 40F3BF80 		ble	.L146
 2247              	.LVL102:
 2248              	.L131:
2039:Veno-Echo.cpp ****     {
 2249              		.loc 19 2039 5 is_stmt 0 view .LVU559
 2250              	.LBE972:
 2251              	.LBE974:
1247:Veno-Echo.cpp ****         }
 2252              		.loc 19 1247 26 view .LVU560
 2253 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 2254              	.LVL103:
 2255              	.L130:
1259:Veno-Echo.cpp ****     }
 2256              		.loc 19 1259 9 is_stmt 1 view .LVU561
 2257              	.LBB975:
 2258              	.LBI975:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2259              		.loc 21 135 13 view .LVU562
 2260              	.LBB976:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 100


 2261              		.loc 21 137 5 view .LVU563
 2262              		.loc 21 137 9 is_stmt 0 view .LVU564
 2263 006a 6E4B     		ldr	r3, .L153+52
 2264 006c 9FED6E7A 		vldr.32	s14, .L153+56
 2265 0070 D3ED007A 		vldr.32	s15, [r3]
 2266              		.loc 21 137 24 view .LVU565
 2267 0074 30EE670A 		vsub.f32	s0, s0, s15
 2268              	.LVL104:
 2269              		.loc 21 137 24 view .LVU566
 2270              	.LBE976:
 2271              	.LBE975:
 2272              	.LBE989:
 2273              	.LBE1001:
1298:Veno-Echo.cpp **** 
 2274              		.loc 19 1298 1 view .LVU567
 2275 0078 BDEC028B 		vldm	sp!, {d8}
 2276              		.cfi_remember_state
 2277              		.cfi_restore 80
 2278              		.cfi_restore 81
 2279              		.cfi_def_cfa_offset 8
 2280              	.LBB1002:
 2281              	.LBB990:
 2282              	.LBB978:
 2283              	.LBB977:
 2284              		.loc 21 137 9 view .LVU568
 2285 007c E0EE077A 		vfma.f32	s15, s0, s14
 2286 0080 C3ED007A 		vstr.32	s15, [r3]
 2287              	.LBE977:
 2288              	.LBE978:
 2289              	.LBE990:
 2290              	.LBE1002:
1298:Veno-Echo.cpp **** 
 2291              		.loc 19 1298 1 view .LVU569
 2292 0084 10BD     		pop	{r4, pc}
 2293              	.LVL105:
 2294              	.L121:
 2295              		.cfi_restore_state
 2296              	.LBB1003:
 2297              	.LBB991:
1263:Veno-Echo.cpp **** 
 2298              		.loc 19 1263 9 is_stmt 1 view .LVU570
1265:Veno-Echo.cpp ****         {
 2299              		.loc 19 1265 9 view .LVU571
 2300 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2301 0088 002B     		cmp	r3, #0
 2302 008a 58D1     		bne	.L135
1267:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 2303              		.loc 19 1267 13 view .LVU572
1267:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 2304              		.loc 19 1267 23 is_stmt 0 view .LVU573
 2305 008c 0124     		movs	r4, #1
1268:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 2306              		.loc 19 1268 24 view .LVU574
 2307 008e 6748     		ldr	r0, .L153+60
1269:Veno-Echo.cpp ****         }
 2308              		.loc 19 1269 21 view .LVU575
 2309 0090 6749     		ldr	r1, .L153+64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 101


1267:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 2310              		.loc 19 1267 23 view .LVU576
 2311 0092 1470     		strb	r4, [r2]
1268:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 2312              		.loc 19 1268 13 is_stmt 1 view .LVU577
1268:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 2313              		.loc 19 1268 24 is_stmt 0 view .LVU578
 2314 0094 0370     		strb	r3, [r0]
1269:Veno-Echo.cpp ****         }
 2315              		.loc 19 1269 13 is_stmt 1 view .LVU579
1269:Veno-Echo.cpp ****         }
 2316              		.loc 19 1269 21 is_stmt 0 view .LVU580
 2317 0096 81ED000A 		vstr.32	s0, [r1]
 2318              	.L120:
1269:Veno-Echo.cpp ****         }
 2319              		.loc 19 1269 21 view .LVU581
 2320              	.LBE991:
 2321              	.LBE1003:
1298:Veno-Echo.cpp **** 
 2322              		.loc 19 1298 1 view .LVU582
 2323 009a BDEC028B 		vldm	sp!, {d8}
 2324              		.cfi_remember_state
 2325              		.cfi_restore 80
 2326              		.cfi_restore 81
 2327              		.cfi_def_cfa_offset 8
 2328 009e 10BD     		pop	{r4, pc}
 2329              	.L122:
 2330              		.cfi_restore_state
 2331              	.LBB1004:
 2332              	.LBB998:
1219:Veno-Echo.cpp ****             {
 2333              		.loc 19 1219 13 is_stmt 1 view .LVU583
1219:Veno-Echo.cpp ****             {
 2334              		.loc 19 1219 16 is_stmt 0 view .LVU584
 2335 00a0 5C4B     		ldr	r3, .L153+36
1219:Veno-Echo.cpp ****             {
 2336              		.loc 19 1219 13 view .LVU585
 2337 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2338 00a4 7AB9     		cbnz	r2, .L124
1222:Veno-Echo.cpp ****                 {
 2339              		.loc 19 1222 17 is_stmt 1 view .LVU586
 2340              	.LVL106:
 2341              	.LBB979:
 2342              	.LBI979:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2343              		.loc 20 75 3 view .LVU587
 2344              	.LBB980:
 2345              		.loc 20 76 5 view .LVU588
 2346              		.loc 20 76 5 is_stmt 0 view .LVU589
 2347              	.LBE980:
 2348              	.LBE979:
1222:Veno-Echo.cpp ****                 {
 2349              		.loc 19 1222 23 view .LVU590
 2350 00a6 5C4A     		ldr	r2, .L153+40
1222:Veno-Echo.cpp ****                 {
 2351              		.loc 19 1222 17 view .LVU591
 2352 00a8 9FED627A 		vldr.32	s14, .L153+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 102


1222:Veno-Echo.cpp ****                 {
 2353              		.loc 19 1222 23 view .LVU592
 2354 00ac D2ED007A 		vldr.32	s15, [r2]
 2355 00b0 70EE677A 		vsub.f32	s15, s0, s15
 2356              	.LBB982:
 2357              	.LBB981:
 2358              		.loc 20 76 31 view .LVU593
 2359 00b4 F0EEE77A 		vabs.f32	s15, s15
 2360              	.LBE981:
 2361              	.LBE982:
1222:Veno-Echo.cpp ****                 {
 2362              		.loc 19 1222 17 view .LVU594
 2363 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 2364 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2365 00c0 B3DD     		ble	.L123
1224:Veno-Echo.cpp ****                 }
 2366              		.loc 19 1224 21 is_stmt 1 view .LVU595
1224:Veno-Echo.cpp ****                 }
 2367              		.loc 19 1224 35 is_stmt 0 view .LVU596
 2368 00c2 0122     		movs	r2, #1
 2369 00c4 1A70     		strb	r2, [r3]
 2370              	.L124:
1230:Veno-Echo.cpp **** 
 2371              		.loc 19 1230 9 is_stmt 1 view .LVU597
 2372              	.LVL107:
1232:Veno-Echo.cpp ****         {
 2373              		.loc 19 1232 9 view .LVU598
1234:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2374              		.loc 19 1234 13 view .LVU599
 2375              	.LBB983:
 2376              	.LBI983:
2029:Veno-Echo.cpp **** {
 2377              		.loc 19 2029 7 view .LVU600
 2378              	.LBB984:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2379              		.loc 19 2031 5 view .LVU601
2032:Veno-Echo.cpp **** 
 2380              		.loc 19 2032 5 view .LVU602
 2381              	.LBE984:
 2382              	.LBE983:
1234:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 2383              		.loc 19 1234 37 is_stmt 0 view .LVU603
 2384 00c6 554B     		ldr	r3, .L153+44
 2385              	.LBB987:
 2386              	.LBB985:
2032:Veno-Echo.cpp **** 
 2387              		.loc 19 2032 39 view .LVU604
 2388 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 2389              		.loc 19 2032 49 view .LVU605
 2390 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2032:Veno-Echo.cpp **** 
 2391              		.loc 19 2032 39 view .LVU606
 2392 00d0 D3ED007A 		vldr.32	s15, [r3]
2032:Veno-Echo.cpp **** 
 2393              		.loc 19 2032 12 view .LVU607
 2394 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 103


2032:Veno-Echo.cpp **** 
 2395              		.loc 19 2032 39 view .LVU608
 2396 00d8 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 2397              		.loc 19 2032 49 view .LVU609
 2398 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 2399              		.loc 19 2032 12 view .LVU610
 2400 00e0 B0EE406A 		vmov.f32	s12, s0
 2401 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2034:Veno-Echo.cpp ****     {
 2402              		.loc 19 2034 5 view .LVU611
 2403 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2032:Veno-Echo.cpp **** 
 2404              		.loc 19 2032 12 view .LVU612
 2405 00ec F0EE467A 		vmov.f32	s15, s12
 2406              	.LVL108:
2034:Veno-Echo.cpp ****     {
 2407              		.loc 19 2034 5 is_stmt 1 view .LVU613
 2408 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2409 00f4 6ED4     		bmi	.L151
2039:Veno-Echo.cpp ****     {
 2410              		.loc 19 2039 5 view .LVU614
 2411 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 2412 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2413 00fe 6EDD     		ble	.L152
2041:Veno-Echo.cpp ****     }
 2414              		.loc 19 2041 16 is_stmt 0 view .LVU615
 2415 0100 F0EE477A 		vmov.f32	s15, s14
 2416 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 2417              	.LVL109:
 2418              	.L126:
 2419              		.loc 19 2044 5 is_stmt 1 view .LVU616
 2420              		.loc 19 2044 5 is_stmt 0 view .LVU617
 2421              	.LBE985:
 2422              	.LBE987:
1235:Veno-Echo.cpp ****         }
 2423              		.loc 19 1235 13 is_stmt 1 view .LVU618
1235:Veno-Echo.cpp ****         }
 2424              		.loc 19 1235 25 is_stmt 0 view .LVU619
 2425 0108 454B     		ldr	r3, .L153+48
 2426 010a 83ED000A 		vstr.32	s0, [r3]
 2427              	.LVL110:
 2428              	.L127:
1243:Veno-Echo.cpp **** 
 2429              		.loc 19 1243 9 is_stmt 1 view .LVU620
1245:Veno-Echo.cpp ****         {
 2430              		.loc 19 1245 9 view .LVU621
 2431 010e 9FED385B 		vldr.64	d5, .L153
 2432 0112 B4EEC56B 		vcmpe.f64	d6, d5
 2433 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2434 011a A4DA     		bge	.L131
1249:Veno-Echo.cpp ****         {
 2435              		.loc 19 1249 14 view .LVU622
 2436 011c 9FED365B 		vldr.64	d5, .L153+8
 2437 0120 B4EEC56B 		vcmpe.f64	d6, d5
 2438 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 104


 2439 0128 51D9     		bls	.L140
1255:Veno-Echo.cpp ****         }
 2440              		.loc 19 1255 13 view .LVU623
1255:Veno-Echo.cpp ****         }
 2441              		.loc 19 1255 33 is_stmt 0 view .LVU624
 2442 012a B0EE670A 		vmov.f32	s0, s15
 2443              	.LVL111:
1255:Veno-Echo.cpp ****         }
 2444              		.loc 19 1255 33 view .LVU625
 2445 012e 0120     		movs	r0, #1
 2446 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 2447 0134 DFED400A 		vldr.32	s1, .L153+72
 2448 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2449              	.LVL112:
1255:Veno-Echo.cpp ****         }
 2450              		.loc 19 1255 33 view .LVU626
 2451 013c 95E7     		b	.L130
 2452              	.LVL113:
 2453              	.L135:
1255:Veno-Echo.cpp ****         }
 2454              		.loc 19 1255 33 view .LVU627
 2455              	.LBE998:
 2456              	.LBB999:
1274:Veno-Echo.cpp ****             {
 2457              		.loc 19 1274 13 is_stmt 1 view .LVU628
1274:Veno-Echo.cpp ****             {
 2458              		.loc 19 1274 16 is_stmt 0 view .LVU629
 2459 013e 3B4B     		ldr	r3, .L153+60
1274:Veno-Echo.cpp ****             {
 2460              		.loc 19 1274 13 view .LVU630
 2461 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2462 0142 7AB9     		cbnz	r2, .L137
1276:Veno-Echo.cpp ****                 {
 2463              		.loc 19 1276 17 is_stmt 1 view .LVU631
 2464              	.LVL114:
 2465              	.LBB992:
 2466              	.LBI992:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2467              		.loc 20 75 3 view .LVU632
 2468              	.LBB993:
 2469              		.loc 20 76 5 view .LVU633
 2470              		.loc 20 76 5 is_stmt 0 view .LVU634
 2471              	.LBE993:
 2472              	.LBE992:
1276:Veno-Echo.cpp ****                 {
 2473              		.loc 19 1276 23 view .LVU635
 2474 0144 3A4A     		ldr	r2, .L153+64
1276:Veno-Echo.cpp ****                 {
 2475              		.loc 19 1276 17 view .LVU636
 2476 0146 9FED3B7A 		vldr.32	s14, .L153+68
1276:Veno-Echo.cpp ****                 {
 2477              		.loc 19 1276 23 view .LVU637
 2478 014a D2ED007A 		vldr.32	s15, [r2]
 2479 014e 70EE677A 		vsub.f32	s15, s0, s15
 2480              	.LBB995:
 2481              	.LBB994:
 2482              		.loc 20 76 31 view .LVU638
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 105


 2483 0152 F0EEE77A 		vabs.f32	s15, s15
 2484              	.LBE994:
 2485              	.LBE995:
1276:Veno-Echo.cpp ****                 {
 2486              		.loc 19 1276 17 view .LVU639
 2487 0156 F4EEC77A 		vcmpe.f32	s15, s14
 2488 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2489 015e 9CDD     		ble	.L120
1278:Veno-Echo.cpp ****                 }
 2490              		.loc 19 1278 21 is_stmt 1 view .LVU640
1278:Veno-Echo.cpp ****                 }
 2491              		.loc 19 1278 32 is_stmt 0 view .LVU641
 2492 0160 0122     		movs	r2, #1
 2493 0162 1A70     		strb	r2, [r3]
 2494              	.L137:
1283:Veno-Echo.cpp ****         {
 2495              		.loc 19 1283 9 is_stmt 1 view .LVU642
 2496              	.LBB996:
 2497              	.LBB997:
1285:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 2498              		.loc 19 1285 13 view .LVU643
 2499              	.LVL115:
1286:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2500              		.loc 19 1286 13 view .LVU644
1286:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2501              		.loc 19 1286 24 is_stmt 0 view .LVU645
 2502 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 2503 0168 DFED330A 		vldr.32	s1, .L153+72
 2504 016c 0020     		movs	r0, #0
 2505 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2506              	.LVL116:
1286:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 2507              		.loc 19 1286 24 view .LVU646
 2508 0172 B0EE408A 		vmov.f32	s16, s0
 2509              	.LVL117:
1287:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2510              		.loc 19 1287 13 is_stmt 1 view .LVU647
1287:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 2511              		.loc 19 1287 25 is_stmt 0 view .LVU648
 2512 0176 3148     		ldr	r0, .L153+76
 2513 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2514              	.LVL118:
1288:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2515              		.loc 19 1288 13 is_stmt 1 view .LVU649
1288:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 2516              		.loc 19 1288 25 is_stmt 0 view .LVU650
 2517 017c 3048     		ldr	r0, .L153+80
 2518 017e B0EE480A 		vmov.f32	s0, s16
 2519 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2520              	.LVL119:
1289:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2521              		.loc 19 1289 13 is_stmt 1 view .LVU651
1289:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 2522              		.loc 19 1289 25 is_stmt 0 view .LVU652
 2523 0186 B0EE480A 		vmov.f32	s0, s16
 2524 018a 2E48     		ldr	r0, .L153+84
 2525 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 106


 2526              	.LVL120:
1290:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2527              		.loc 19 1290 13 is_stmt 1 view .LVU653
1290:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 2528              		.loc 19 1290 25 is_stmt 0 view .LVU654
 2529 0190 B0EE480A 		vmov.f32	s0, s16
 2530 0194 2C48     		ldr	r0, .L153+88
 2531 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2532              	.LVL121:
1291:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2533              		.loc 19 1291 13 is_stmt 1 view .LVU655
1291:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 2534              		.loc 19 1291 30 is_stmt 0 view .LVU656
 2535 019a B0EE480A 		vmov.f32	s0, s16
 2536 019e 2B48     		ldr	r0, .L153+92
 2537 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2538              	.LVL122:
1292:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2539              		.loc 19 1292 13 is_stmt 1 view .LVU657
1292:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 2540              		.loc 19 1292 30 is_stmt 0 view .LVU658
 2541 01a4 B0EE480A 		vmov.f32	s0, s16
 2542 01a8 2948     		ldr	r0, .L153+96
 2543 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2544              	.LVL123:
1293:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2545              		.loc 19 1293 13 is_stmt 1 view .LVU659
1293:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 2546              		.loc 19 1293 30 is_stmt 0 view .LVU660
 2547 01ae B0EE480A 		vmov.f32	s0, s16
 2548 01b2 2848     		ldr	r0, .L153+100
 2549 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2550              	.LVL124:
1294:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2551              		.loc 19 1294 13 is_stmt 1 view .LVU661
1294:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 2552              		.loc 19 1294 30 is_stmt 0 view .LVU662
 2553 01b8 B0EE480A 		vmov.f32	s0, s16
 2554 01bc 2648     		ldr	r0, .L153+104
 2555 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2556              	.LVL125:
1295:Veno-Echo.cpp ****         }
 2557              		.loc 19 1295 13 is_stmt 1 view .LVU663
1295:Veno-Echo.cpp ****         }
 2558              		.loc 19 1295 35 is_stmt 0 view .LVU664
 2559 01c2 264B     		ldr	r3, .L153+108
 2560 01c4 83ED068A 		vstr.32	s16, [r3, #24]
 2561              	.LBE997:
 2562              	.LBE996:
 2563              	.LBE999:
 2564              	.LBE1004:
1298:Veno-Echo.cpp **** 
 2565              		.loc 19 1298 1 view .LVU665
 2566 01c8 BDEC028B 		vldm	sp!, {d8}
 2567              		.cfi_remember_state
 2568              		.cfi_restore 80
 2569              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 107


 2570              		.cfi_def_cfa_offset 8
 2571              	.LVL126:
1298:Veno-Echo.cpp **** 
 2572              		.loc 19 1298 1 view .LVU666
 2573 01cc 10BD     		pop	{r4, pc}
 2574              	.LVL127:
 2575              	.L140:
 2576              		.cfi_restore_state
 2577              	.LBB1005:
 2578              	.LBB1000:
1251:Veno-Echo.cpp ****         }
 2579              		.loc 19 1251 26 view .LVU667
 2580 01ce 9FED1A0A 		vldr.32	s0, .L153+72
 2581              	.LVL128:
1251:Veno-Echo.cpp ****         }
 2582              		.loc 19 1251 26 view .LVU668
 2583 01d2 4AE7     		b	.L130
 2584              	.LVL129:
 2585              	.L151:
 2586              	.LBB988:
 2587              	.LBB986:
1251:Veno-Echo.cpp ****         }
 2588              		.loc 19 1251 26 view .LVU669
 2589 01d4 9FED0A6B 		vldr.64	d6, .L153+16
 2590              	.LVL130:
2036:Veno-Echo.cpp ****     }
 2591              		.loc 19 2036 16 view .LVU670
 2592 01d8 DFED177A 		vldr.32	s15, .L153+72
 2593              	.LVL131:
2036:Veno-Echo.cpp ****     }
 2594              		.loc 19 2036 16 view .LVU671
 2595 01dc 94E7     		b	.L126
 2596              	.LVL132:
 2597              	.L152:
2036:Veno-Echo.cpp ****     }
 2598              		.loc 19 2036 16 view .LVU672
 2599 01de B7EEE76A 		vcvt.f64.f32	d6, s15
 2600              	.LVL133:
2036:Veno-Echo.cpp ****     }
 2601              		.loc 19 2036 16 view .LVU673
 2602 01e2 91E7     		b	.L126
 2603              	.LVL134:
 2604              	.L146:
2036:Veno-Echo.cpp ****     }
 2605              		.loc 19 2036 16 view .LVU674
 2606 01e4 B7EEE76A 		vcvt.f64.f32	d6, s15
 2607 01e8 91E7     		b	.L127
 2608              	.L154:
 2609 01ea 00BFAFF3 		.align	3
 2609      0080
 2610              	.L153:
 2611 01f0 5C8FC2F5 		.word	4123168604
 2612 01f4 285CEF3F 		.word	1072651304
 2613 01f8 7B14AE47 		.word	1202590843
 2614 01fc E17A943F 		.word	1066695393
 2615 0200 00000000 		.word	0
 2616 0204 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 108


 2617 0208 18000000 		.word	.LANCHOR4+24
 2618 020c 00000000 		.word	.LANCHOR8
 2619 0210 00000000 		.word	.LANCHOR34
 2620 0214 00000000 		.word	.LANCHOR35
 2621 0218 00000000 		.word	.LANCHOR36
 2622 021c 00000000 		.word	.LANCHOR33
 2623 0220 00000000 		.word	.LANCHOR37
 2624 0224 00000000 		.word	.LANCHOR38
 2625 0228 6F12833C 		.word	1015222895
 2626 022c 00000000 		.word	.LANCHOR39
 2627 0230 00000000 		.word	.LANCHOR40
 2628 0234 0AD7A33B 		.word	1000593162
 2629 0238 00000000 		.word	0
 2630 023c 00000000 		.word	.LANCHOR29
 2631 0240 00000000 		.word	.LANCHOR30
 2632 0244 00000000 		.word	.LANCHOR16
 2633 0248 00000000 		.word	.LANCHOR17
 2634 024c 00000000 		.word	.LANCHOR31
 2635 0250 00000000 		.word	.LANCHOR32
 2636 0254 00000000 		.word	.LANCHOR18
 2637 0258 00000000 		.word	.LANCHOR19
 2638 025c 00000000 		.word	.LANCHOR20
 2639              	.LBE986:
 2640              	.LBE988:
 2641              	.LBE1000:
 2642              	.LBE1005:
 2643              		.cfi_endproc
 2644              	.LFE4300:
 2646              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 2647              		.align	1
 2648              		.p2align 2,,3
 2649              		.global	_Z15Update_width_CVv
 2650              		.syntax unified
 2651              		.thumb
 2652              		.thumb_func
 2653              		.fpu fpv5-d16
 2655              	_Z15Update_width_CVv:
 2656              	.LFB4301:
1301:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2657              		.loc 19 1301 1 is_stmt 1 view -0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
1302:Veno-Echo.cpp **** }
 2661              		.loc 19 1302 5 view .LVU676
1301:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2662              		.loc 19 1301 1 is_stmt 0 view .LVU677
 2663 0000 08B5     		push	{r3, lr}
 2664              		.cfi_def_cfa_offset 8
 2665              		.cfi_offset 3, -8
 2666              		.cfi_offset 14, -4
1302:Veno-Echo.cpp **** }
 2667              		.loc 19 1302 30 view .LVU678
 2668 0002 0521     		movs	r1, #5
 2669 0004 0348     		ldr	r0, .L157
 2670 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2671              	.LVL135:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 109


1302:Veno-Echo.cpp **** }
 2672              		.loc 19 1302 13 view .LVU679
 2673 000a 034B     		ldr	r3, .L157+4
 2674 000c 83ED000A 		vstr.32	s0, [r3]
1303:Veno-Echo.cpp **** 
 2675              		.loc 19 1303 1 view .LVU680
 2676 0010 08BD     		pop	{r3, pc}
 2677              	.L158:
 2678 0012 00BF     		.align	2
 2679              	.L157:
 2680 0014 18000000 		.word	.LANCHOR4+24
 2681 0018 00000000 		.word	.LANCHOR41
 2682              		.cfi_endproc
 2683              	.LFE4301:
 2685              		.section	.text._Z12Update_widthv,"ax",%progbits
 2686              		.align	1
 2687              		.p2align 2,,3
 2688              		.global	_Z12Update_widthv
 2689              		.syntax unified
 2690              		.thumb
 2691              		.thumb_func
 2692              		.fpu fpv5-d16
 2694              	_Z12Update_widthv:
 2695              	.LFB4302:
1306:Veno-Echo.cpp ****     static bool lastShift{};
 2696              		.loc 19 1306 1 is_stmt 1 view -0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
1307:Veno-Echo.cpp ****     static bool width_pickup{};
 2700              		.loc 19 1307 5 view .LVU682
1308:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 2701              		.loc 19 1308 5 view .LVU683
1309:Veno-Echo.cpp **** 
 2702              		.loc 19 1309 5 view .LVU684
1311:Veno-Echo.cpp **** 
 2703              		.loc 19 1311 5 view .LVU685
1314:Veno-Echo.cpp **** 
 2704              		.loc 19 1314 5 view .LVU686
1314:Veno-Echo.cpp **** 
 2705              		.loc 19 1314 39 is_stmt 0 view .LVU687
 2706 0000 0722     		movs	r2, #7
 2707 0002 5F48     		ldr	r0, .L188
 2708 0004 1146     		mov	r1, r2
1306:Veno-Echo.cpp ****     static bool lastShift{};
 2709              		.loc 19 1306 1 view .LVU688
 2710 0006 10B5     		push	{r4, lr}
 2711              		.cfi_def_cfa_offset 8
 2712              		.cfi_offset 4, -8
 2713              		.cfi_offset 14, -4
 2714 0008 2DED028B 		vpush.64	{d8}
 2715              		.cfi_def_cfa_offset 16
 2716              		.cfi_offset 80, -16
 2717              		.cfi_offset 81, -12
1314:Veno-Echo.cpp **** 
 2718              		.loc 19 1314 39 view .LVU689
 2719 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 110


 2720              	.LVL136:
 2721              	.LBB1006:
1316:Veno-Echo.cpp ****     {   
 2722              		.loc 19 1316 9 view .LVU690
 2723 0010 5C4B     		ldr	r3, .L188+4
 2724              	.LBE1006:
1314:Veno-Echo.cpp **** 
 2725              		.loc 19 1314 39 view .LVU691
 2726 0012 B0EE408A 		vmov.f32	s16, s0
 2727              	.LVL137:
1316:Veno-Echo.cpp ****     {   
 2728              		.loc 19 1316 5 is_stmt 1 view .LVU692
 2729              	.LBB1046:
 2730              	.LBB1007:
1320:Veno-Echo.cpp ****         {
 2731              		.loc 19 1320 19 is_stmt 0 view .LVU693
 2732 0016 5C4A     		ldr	r2, .L188+8
 2733              	.LBE1007:
1316:Veno-Echo.cpp ****     {   
 2734              		.loc 19 1316 5 view .LVU694
 2735 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2736 001a 002B     		cmp	r3, #0
 2737 001c 3ED1     		bne	.L160
 2738              	.LBB1036:
1318:Veno-Echo.cpp ****         //update pickup
 2739              		.loc 19 1318 9 is_stmt 1 view .LVU695
1320:Veno-Echo.cpp ****         {
 2740              		.loc 19 1320 9 view .LVU696
 2741 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2742 0020 0029     		cmp	r1, #0
 2743 0022 48D0     		beq	.L161
1322:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 2744              		.loc 19 1322 13 view .LVU697
1323:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 2745              		.loc 19 1323 26 is_stmt 0 view .LVU698
 2746 0024 5948     		ldr	r0, .L188+12
1324:Veno-Echo.cpp ****         }
 2747              		.loc 19 1324 23 view .LVU699
 2748 0026 5A49     		ldr	r1, .L188+16
1322:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 2749              		.loc 19 1322 23 view .LVU700
 2750 0028 1370     		strb	r3, [r2]
1323:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 2751              		.loc 19 1323 13 is_stmt 1 view .LVU701
1323:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 2752              		.loc 19 1323 26 is_stmt 0 view .LVU702
 2753 002a 0370     		strb	r3, [r0]
1324:Veno-Echo.cpp ****         }
 2754              		.loc 19 1324 13 is_stmt 1 view .LVU703
1324:Veno-Echo.cpp ****         }
 2755              		.loc 19 1324 23 is_stmt 0 view .LVU704
 2756 002c 81ED000A 		vstr.32	s0, [r1]
 2757              	.L162:
1339:Veno-Echo.cpp **** 
 2758              		.loc 19 1339 9 is_stmt 1 view .LVU705
 2759              	.LVL138:
1341:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 111


 2760              		.loc 19 1341 9 view .LVU706
1349:Veno-Echo.cpp ****         }
 2761              		.loc 19 1349 13 view .LVU707
 2762              	.LBB1008:
 2763              	.LBI1008:
2029:Veno-Echo.cpp **** {
 2764              		.loc 19 2029 7 view .LVU708
 2765              	.LBB1009:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2766              		.loc 19 2031 5 view .LVU709
2032:Veno-Echo.cpp **** 
 2767              		.loc 19 2032 5 view .LVU710
 2768              	.LBE1009:
 2769              	.LBE1008:
1349:Veno-Echo.cpp ****         }
 2770              		.loc 19 1349 32 is_stmt 0 view .LVU711
 2771 0030 584A     		ldr	r2, .L188+20
 2772              	.LBB1013:
 2773              	.LBB1010:
2032:Veno-Echo.cpp **** 
 2774              		.loc 19 2032 39 view .LVU712
 2775 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 2776              		.loc 19 2032 49 view .LVU713
 2777 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 2778              	.LBE1010:
 2779              	.LBE1013:
1349:Veno-Echo.cpp ****         }
 2780              		.loc 19 1349 32 view .LVU714
 2781 003a 574B     		ldr	r3, .L188+24
 2782              	.LBB1014:
 2783              	.LBB1011:
2032:Veno-Echo.cpp **** 
 2784              		.loc 19 2032 39 view .LVU715
 2785 003c D2ED007A 		vldr.32	s15, [r2]
2032:Veno-Echo.cpp **** 
 2786              		.loc 19 2032 12 view .LVU716
 2787 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 2788 0044 93ED000A 		vldr.32	s0, [r3]
 2789              	.LVL139:
2032:Veno-Echo.cpp **** 
 2790              		.loc 19 2032 39 view .LVU717
 2791 0048 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 2792              		.loc 19 2032 49 view .LVU718
 2793 004c 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 2794              		.loc 19 2032 12 view .LVU719
 2795 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 2796              	.LVL140:
2034:Veno-Echo.cpp ****     {
 2797              		.loc 19 2034 5 is_stmt 1 view .LVU720
 2798 0054 B5EEC00A 		vcmpe.f32	s0, #0
 2799 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2800 005c 00F18A80 		bmi	.L186
2039:Veno-Echo.cpp ****     {
 2801              		.loc 19 2039 5 view .LVU721
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 112


2041:Veno-Echo.cpp ****     }
 2802              		.loc 19 2041 16 is_stmt 0 view .LVU722
 2803 0060 B4EE470A 		vcmp.f32	s0, s14
 2804 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2805 0068 37FE000A 		vselgt.f32	s0, s14, s0
 2806              	.LVL141:
 2807              	.L168:
 2808              		.loc 19 2044 5 is_stmt 1 view .LVU723
 2809              		.loc 19 2044 5 is_stmt 0 view .LVU724
 2810              	.LBE1011:
 2811              	.LBE1014:
1349:Veno-Echo.cpp ****         }
 2812              		.loc 19 1349 32 view .LVU725
 2813 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 2814 0070 0020     		movs	r0, #0
 2815 0072 9FED4A1A 		vldr.32	s2, .L188+28
 2816 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2817              	.LVL142:
 2818              	.L167:
1352:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 2819              		.loc 19 1352 13 is_stmt 1 view .LVU726
 2820              	.LBB1015:
 2821              	.LBI1015:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2822              		.loc 21 135 13 view .LVU727
 2823              	.LBB1016:
 2824              		.loc 21 137 5 view .LVU728
 2825              		.loc 21 137 9 is_stmt 0 view .LVU729
 2826 007a 494B     		ldr	r3, .L188+32
 2827 007c 9FED497A 		vldr.32	s14, .L188+36
 2828 0080 D3ED007A 		vldr.32	s15, [r3]
 2829              	.LBE1016:
 2830              	.LBE1015:
 2831              	.LBB1019:
 2832              	.LBB1020:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 113


  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 2833              		.loc 10 60 42 view .LVU730
 2834 0084 484A     		ldr	r2, .L188+40
 2835              	.LBE1020:
 2836              	.LBE1019:
 2837              	.LBB1022:
 2838              	.LBB1017:
 2839              		.loc 21 137 24 view .LVU731
 2840 0086 30EE670A 		vsub.f32	s0, s0, s15
 2841              	.LVL143:
 2842              		.loc 21 137 24 view .LVU732
 2843              	.LBE1017:
 2844              	.LBE1022:
 2845              	.LBE1036:
 2846              	.LBE1046:
1384:Veno-Echo.cpp **** 
 2847              		.loc 19 1384 1 view .LVU733
 2848 008a BDEC028B 		vldm	sp!, {d8}
 2849              		.cfi_remember_state
 2850              		.cfi_restore 80
 2851              		.cfi_restore 81
 2852              		.cfi_def_cfa_offset 8
 2853              	.LVL144:
 2854              	.LBB1047:
 2855              	.LBB1037:
 2856              	.LBB1023:
 2857              	.LBB1018:
 2858              		.loc 21 137 9 view .LVU734
 2859 008e E0EE077A 		vfma.f32	s15, s0, s14
 2860 0092 C3ED007A 		vstr.32	s15, [r3]
 2861              	.LVL145:
 2862              		.loc 21 137 9 view .LVU735
 2863              	.LBE1018:
 2864              	.LBE1023:
1353:Veno-Echo.cpp ****     }
 2865              		.loc 19 1353 13 is_stmt 1 view .LVU736
 2866              	.LBB1024:
 2867              	.LBI1019:
 2868              		.loc 10 60 17 view .LVU737
 2869              	.LBB1021:
 2870              		.loc 10 60 37 view .LVU738
 2871              		.loc 10 60 42 is_stmt 0 view .LVU739
 2872 0096 C2ED007A 		vstr.32	s15, [r2]
 2873              	.LBE1021:
 2874              	.LBE1024:
 2875              	.LBE1037:
 2876              	.LBE1047:
1384:Veno-Echo.cpp **** 
 2877              		.loc 19 1384 1 view .LVU740
 2878 009a 10BD     		pop	{r4, pc}
 2879              	.LVL146:
 2880              	.L160:
 2881              		.cfi_restore_state
 2882              	.LBB1048:
 2883              	.LBB1038:
1358:Veno-Echo.cpp **** 
 2884              		.loc 19 1358 9 is_stmt 1 view .LVU741
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 114


1360:Veno-Echo.cpp ****         {
 2885              		.loc 19 1360 9 view .LVU742
 2886 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2887 009e 002B     		cmp	r3, #0
 2888 00a0 43D1     		bne	.L171
1362:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 2889              		.loc 19 1362 13 view .LVU743
1362:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 2890              		.loc 19 1362 23 is_stmt 0 view .LVU744
 2891 00a2 0124     		movs	r4, #1
1363:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 2892              		.loc 19 1363 29 view .LVU745
 2893 00a4 4148     		ldr	r0, .L188+44
1364:Veno-Echo.cpp ****         }
 2894              		.loc 19 1364 26 view .LVU746
 2895 00a6 4249     		ldr	r1, .L188+48
1362:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 2896              		.loc 19 1362 23 view .LVU747
 2897 00a8 1470     		strb	r4, [r2]
1363:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 2898              		.loc 19 1363 13 is_stmt 1 view .LVU748
1363:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 2899              		.loc 19 1363 29 is_stmt 0 view .LVU749
 2900 00aa 0370     		strb	r3, [r0]
1364:Veno-Echo.cpp ****         }
 2901              		.loc 19 1364 13 is_stmt 1 view .LVU750
1364:Veno-Echo.cpp ****         }
 2902              		.loc 19 1364 26 is_stmt 0 view .LVU751
 2903 00ac 81ED000A 		vstr.32	s0, [r1]
 2904              	.L159:
1364:Veno-Echo.cpp ****         }
 2905              		.loc 19 1364 26 view .LVU752
 2906              	.LBE1038:
 2907              	.LBE1048:
1384:Veno-Echo.cpp **** 
 2908              		.loc 19 1384 1 view .LVU753
 2909 00b0 BDEC028B 		vldm	sp!, {d8}
 2910              		.cfi_remember_state
 2911              		.cfi_restore 80
 2912              		.cfi_restore 81
 2913              		.cfi_def_cfa_offset 8
 2914 00b4 10BD     		pop	{r4, pc}
 2915              	.L161:
 2916              		.cfi_restore_state
 2917              	.LBB1049:
 2918              	.LBB1043:
1329:Veno-Echo.cpp ****             {
 2919              		.loc 19 1329 13 is_stmt 1 view .LVU754
1329:Veno-Echo.cpp ****             {
 2920              		.loc 19 1329 16 is_stmt 0 view .LVU755
 2921 00b6 354B     		ldr	r3, .L188+12
1329:Veno-Echo.cpp ****             {
 2922              		.loc 19 1329 13 view .LVU756
 2923 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2924 00ba 7AB9     		cbnz	r2, .L163
1331:Veno-Echo.cpp ****                 {
 2925              		.loc 19 1331 17 is_stmt 1 view .LVU757
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 115


 2926              	.LVL147:
 2927              	.LBB1025:
 2928              	.LBI1025:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2929              		.loc 20 75 3 view .LVU758
 2930              	.LBB1026:
 2931              		.loc 20 76 5 view .LVU759
 2932              		.loc 20 76 5 is_stmt 0 view .LVU760
 2933              	.LBE1026:
 2934              	.LBE1025:
1331:Veno-Echo.cpp ****                 {
 2935              		.loc 19 1331 23 view .LVU761
 2936 00bc 344A     		ldr	r2, .L188+16
1331:Veno-Echo.cpp ****                 {
 2937              		.loc 19 1331 17 view .LVU762
 2938 00be 9FED3D7A 		vldr.32	s14, .L188+52
1331:Veno-Echo.cpp ****                 {
 2939              		.loc 19 1331 23 view .LVU763
 2940 00c2 D2ED007A 		vldr.32	s15, [r2]
 2941 00c6 70EE677A 		vsub.f32	s15, s0, s15
 2942              	.LBB1028:
 2943              	.LBB1027:
 2944              		.loc 20 76 31 view .LVU764
 2945 00ca F0EEE77A 		vabs.f32	s15, s15
 2946              	.LBE1027:
 2947              	.LBE1028:
1331:Veno-Echo.cpp ****                 {
 2948              		.loc 19 1331 17 view .LVU765
 2949 00ce F4EEC77A 		vcmpe.f32	s15, s14
 2950 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2951 00d6 ABDD     		ble	.L162
1333:Veno-Echo.cpp ****                 }
 2952              		.loc 19 1333 21 is_stmt 1 view .LVU766
1333:Veno-Echo.cpp ****                 }
 2953              		.loc 19 1333 34 is_stmt 0 view .LVU767
 2954 00d8 0122     		movs	r2, #1
 2955 00da 1A70     		strb	r2, [r3]
 2956              	.L163:
1339:Veno-Echo.cpp **** 
 2957              		.loc 19 1339 9 is_stmt 1 view .LVU768
 2958              	.LVL148:
1341:Veno-Echo.cpp ****         {
 2959              		.loc 19 1341 9 view .LVU769
1343:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 2960              		.loc 19 1343 13 view .LVU770
 2961              	.LBB1029:
 2962              	.LBI1029:
2029:Veno-Echo.cpp **** {
 2963              		.loc 19 2029 7 view .LVU771
 2964              	.LBB1030:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2965              		.loc 19 2031 5 view .LVU772
2032:Veno-Echo.cpp **** 
 2966              		.loc 19 2032 5 view .LVU773
 2967              	.LBE1030:
 2968              	.LBE1029:
1343:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 116


 2969              		.loc 19 1343 32 is_stmt 0 view .LVU774
 2970 00dc 2D4B     		ldr	r3, .L188+20
 2971              	.LBB1033:
 2972              	.LBB1031:
2032:Veno-Echo.cpp **** 
 2973              		.loc 19 2032 39 view .LVU775
 2974 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 2975              		.loc 19 2032 49 view .LVU776
 2976 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2032:Veno-Echo.cpp **** 
 2977              		.loc 19 2032 39 view .LVU777
 2978 00e6 D3ED007A 		vldr.32	s15, [r3]
2032:Veno-Echo.cpp **** 
 2979              		.loc 19 2032 12 view .LVU778
 2980 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 2981 00ee B0EE480A 		vmov.f32	s0, s16
 2982              	.LVL149:
2032:Veno-Echo.cpp **** 
 2983              		.loc 19 2032 39 view .LVU779
 2984 00f2 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 2985              		.loc 19 2032 49 view .LVU780
 2986 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 2987              		.loc 19 2032 12 view .LVU781
 2988 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 2989              	.LVL150:
2034:Veno-Echo.cpp ****     {
 2990              		.loc 19 2034 5 is_stmt 1 view .LVU782
 2991 00fe B5EEC00A 		vcmpe.f32	s0, #0
 2992 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2993 0106 38D4     		bmi	.L187
2039:Veno-Echo.cpp ****     {
 2994              		.loc 19 2039 5 view .LVU783
2041:Veno-Echo.cpp ****     }
 2995              		.loc 19 2041 16 is_stmt 0 view .LVU784
 2996 0108 B4EE470A 		vcmp.f32	s0, s14
 2997 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2998 0110 37FE000A 		vselgt.f32	s0, s14, s0
 2999              	.LVL151:
 3000              	.L165:
 3001              		.loc 19 2044 5 is_stmt 1 view .LVU785
 3002              		.loc 19 2044 5 is_stmt 0 view .LVU786
 3003              	.LBE1031:
 3004              	.LBE1033:
1343:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 3005              		.loc 19 1343 32 view .LVU787
 3006 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 3007 0118 0020     		movs	r0, #0
 3008 011a 9FED201A 		vldr.32	s2, .L188+28
 3009 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3010              	.LVL152:
1344:Veno-Echo.cpp ****         }
 3011              		.loc 19 1344 24 view .LVU788
 3012 0122 1D4B     		ldr	r3, .L188+24
 3013              	.LVL153:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 117


1344:Veno-Echo.cpp ****         }
 3014              		.loc 19 1344 13 is_stmt 1 view .LVU789
1344:Veno-Echo.cpp ****         }
 3015              		.loc 19 1344 24 is_stmt 0 view .LVU790
 3016 0124 83ED008A 		vstr.32	s16, [r3]
 3017 0128 A7E7     		b	.L167
 3018              	.LVL154:
 3019              	.L171:
1344:Veno-Echo.cpp ****         }
 3020              		.loc 19 1344 24 view .LVU791
 3021              	.LBE1043:
 3022              	.LBB1044:
1369:Veno-Echo.cpp ****             {
 3023              		.loc 19 1369 13 is_stmt 1 view .LVU792
1369:Veno-Echo.cpp ****             {
 3024              		.loc 19 1369 16 is_stmt 0 view .LVU793
 3025 012a 204B     		ldr	r3, .L188+44
1369:Veno-Echo.cpp ****             {
 3026              		.loc 19 1369 13 view .LVU794
 3027 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3028 012e 7AB9     		cbnz	r2, .L173
1371:Veno-Echo.cpp ****                 {
 3029              		.loc 19 1371 17 is_stmt 1 view .LVU795
 3030              	.LVL155:
 3031              	.LBB1039:
 3032              	.LBI1039:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3033              		.loc 20 75 3 view .LVU796
 3034              	.LBB1040:
 3035              		.loc 20 76 5 view .LVU797
 3036              		.loc 20 76 5 is_stmt 0 view .LVU798
 3037              	.LBE1040:
 3038              	.LBE1039:
1371:Veno-Echo.cpp ****                 {
 3039              		.loc 19 1371 23 view .LVU799
 3040 0130 1F4A     		ldr	r2, .L188+48
1371:Veno-Echo.cpp ****                 {
 3041              		.loc 19 1371 17 view .LVU800
 3042 0132 9FED207A 		vldr.32	s14, .L188+52
1371:Veno-Echo.cpp ****                 {
 3043              		.loc 19 1371 23 view .LVU801
 3044 0136 D2ED007A 		vldr.32	s15, [r2]
 3045 013a 70EE677A 		vsub.f32	s15, s0, s15
 3046              	.LBB1042:
 3047              	.LBB1041:
 3048              		.loc 20 76 31 view .LVU802
 3049 013e F0EEE77A 		vabs.f32	s15, s15
 3050              	.LBE1041:
 3051              	.LBE1042:
1371:Veno-Echo.cpp ****                 {
 3052              		.loc 19 1371 17 view .LVU803
 3053 0142 F4EEC77A 		vcmpe.f32	s15, s14
 3054 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3055 014a B1DD     		ble	.L159
1373:Veno-Echo.cpp ****                 }
 3056              		.loc 19 1373 21 is_stmt 1 view .LVU804
1373:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 118


 3057              		.loc 19 1373 37 is_stmt 0 view .LVU805
 3058 014c 0122     		movs	r2, #1
 3059 014e 1A70     		strb	r2, [r3]
 3060              	.L173:
1378:Veno-Echo.cpp ****         {
 3061              		.loc 19 1378 9 is_stmt 1 view .LVU806
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3062              		.loc 19 1380 13 view .LVU807
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3063              		.loc 19 1380 29 is_stmt 0 view .LVU808
 3064 0150 B0EE480A 		vmov.f32	s0, s16
 3065              	.LVL156:
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3066              		.loc 19 1380 29 view .LVU809
 3067 0154 0020     		movs	r0, #0
 3068 0156 9FED181A 		vldr.32	s2, .L188+56
 3069 015a DFED100A 		vldr.32	s1, .L188+28
 3070 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3071              	.LVL157:
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3072              		.loc 19 1380 22 view .LVU810
 3073 0162 164A     		ldr	r2, .L188+60
1381:Veno-Echo.cpp ****         }
 3074              		.loc 19 1381 34 view .LVU811
 3075 0164 164B     		ldr	r3, .L188+64
1380:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 3076              		.loc 19 1380 22 view .LVU812
 3077 0166 82ED000A 		vstr.32	s0, [r2]
1381:Veno-Echo.cpp ****         }
 3078              		.loc 19 1381 13 is_stmt 1 view .LVU813
1381:Veno-Echo.cpp ****         }
 3079              		.loc 19 1381 34 is_stmt 0 view .LVU814
 3080 016a 83ED020A 		vstr.32	s0, [r3, #8]
 3081              	.LBE1044:
 3082              	.LBE1049:
1384:Veno-Echo.cpp **** 
 3083              		.loc 19 1384 1 view .LVU815
 3084 016e BDEC028B 		vldm	sp!, {d8}
 3085              		.cfi_remember_state
 3086              		.cfi_restore 80
 3087              		.cfi_restore 81
 3088              		.cfi_def_cfa_offset 8
 3089              	.LVL158:
1384:Veno-Echo.cpp **** 
 3090              		.loc 19 1384 1 view .LVU816
 3091 0172 10BD     		pop	{r4, pc}
 3092              	.LVL159:
 3093              	.L186:
 3094              		.cfi_restore_state
 3095              	.LBB1050:
 3096              	.LBB1045:
 3097              	.LBB1034:
 3098              	.LBB1012:
2036:Veno-Echo.cpp ****     }
 3099              		.loc 19 2036 16 view .LVU817
 3100 0174 9FED090A 		vldr.32	s0, .L188+28
 3101              	.LVL160:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 119


2036:Veno-Echo.cpp ****     }
 3102              		.loc 19 2036 16 view .LVU818
 3103 0178 78E7     		b	.L168
 3104              	.LVL161:
 3105              	.L187:
2036:Veno-Echo.cpp ****     }
 3106              		.loc 19 2036 16 view .LVU819
 3107              	.LBE1012:
 3108              	.LBE1034:
 3109              	.LBB1035:
 3110              	.LBB1032:
 3111 017a 9FED080A 		vldr.32	s0, .L188+28
 3112              	.LVL162:
2036:Veno-Echo.cpp ****     }
 3113              		.loc 19 2036 16 view .LVU820
 3114 017e C9E7     		b	.L165
 3115              	.L189:
 3116              		.align	2
 3117              	.L188:
 3118 0180 18000000 		.word	.LANCHOR4+24
 3119 0184 00000000 		.word	.LANCHOR8
 3120 0188 00000000 		.word	.LANCHOR42
 3121 018c 00000000 		.word	.LANCHOR43
 3122 0190 00000000 		.word	.LANCHOR44
 3123 0194 00000000 		.word	.LANCHOR41
 3124 0198 00000000 		.word	.LANCHOR45
 3125 019c 00000000 		.word	0
 3126 01a0 00000000 		.word	.LANCHOR46
 3127 01a4 6F12033D 		.word	1023611503
 3128 01a8 00000000 		.word	.LANCHOR47
 3129 01ac 00000000 		.word	.LANCHOR48
 3130 01b0 00000000 		.word	.LANCHOR49
 3131 01b4 0AD7A33B 		.word	1000593162
 3132 01b8 0000FA43 		.word	1140457472
 3133 01bc 00000000 		.word	.LANCHOR50
 3134 01c0 00000000 		.word	.LANCHOR20
 3135              	.LBE1032:
 3136              	.LBE1035:
 3137              	.LBE1045:
 3138              	.LBE1050:
 3139              		.cfi_endproc
 3140              	.LFE4302:
 3142              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 3143              		.align	1
 3144              		.p2align 2,,3
 3145              		.global	_Z20Update_crossfeedbackv
 3146              		.syntax unified
 3147              		.thumb
 3148              		.thumb_func
 3149              		.fpu fpv5-d16
 3151              	_Z20Update_crossfeedbackv:
 3152              	.LFB4303:
1387:Veno-Echo.cpp ****     static bool lastShift{};
 3153              		.loc 19 1387 1 is_stmt 1 view -0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 120


1388:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 3157              		.loc 19 1388 5 view .LVU822
1389:Veno-Echo.cpp ****     static bool modRate_pickup{};
 3158              		.loc 19 1389 5 view .LVU823
1390:Veno-Echo.cpp **** 
 3159              		.loc 19 1390 5 view .LVU824
1392:Veno-Echo.cpp **** 
 3160              		.loc 19 1392 5 view .LVU825
1395:Veno-Echo.cpp **** 
 3161              		.loc 19 1395 5 view .LVU826
1395:Veno-Echo.cpp **** 
 3162              		.loc 19 1395 47 is_stmt 0 view .LVU827
 3163 0000 0022     		movs	r2, #0
 3164 0002 0721     		movs	r1, #7
 3165 0004 4148     		ldr	r0, .L205
1387:Veno-Echo.cpp ****     static bool lastShift{};
 3166              		.loc 19 1387 1 view .LVU828
 3167 0006 10B5     		push	{r4, lr}
 3168              		.cfi_def_cfa_offset 8
 3169              		.cfi_offset 4, -8
 3170              		.cfi_offset 14, -4
 3171 0008 2DED028B 		vpush.64	{d8}
 3172              		.cfi_def_cfa_offset 16
 3173              		.cfi_offset 80, -16
 3174              		.cfi_offset 81, -12
1395:Veno-Echo.cpp **** 
 3175              		.loc 19 1395 47 view .LVU829
 3176 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3177              	.LVL163:
 3178              	.LBB1051:
1397:Veno-Echo.cpp ****     {   
 3179              		.loc 19 1397 9 view .LVU830
 3180 0010 3F4B     		ldr	r3, .L205+4
 3181              	.LBE1051:
1395:Veno-Echo.cpp **** 
 3182              		.loc 19 1395 47 view .LVU831
 3183 0012 B0EE408A 		vmov.f32	s16, s0
 3184              	.LVL164:
1397:Veno-Echo.cpp ****     {   
 3185              		.loc 19 1397 5 is_stmt 1 view .LVU832
 3186              	.LBB1080:
 3187              	.LBB1052:
1401:Veno-Echo.cpp ****         {
 3188              		.loc 19 1401 19 is_stmt 0 view .LVU833
 3189 0016 3F4A     		ldr	r2, .L205+8
 3190              	.LBE1052:
1397:Veno-Echo.cpp ****     {   
 3191              		.loc 19 1397 5 view .LVU834
 3192 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3193 001a FBB9     		cbnz	r3, .L191
 3194              	.LBB1061:
1399:Veno-Echo.cpp ****         //update pickup
 3195              		.loc 19 1399 9 is_stmt 1 view .LVU835
1401:Veno-Echo.cpp ****         {
 3196              		.loc 19 1401 9 view .LVU836
 3197 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3198 001e 49B3     		cbz	r1, .L192
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 121


1403:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 3199              		.loc 19 1403 13 view .LVU837
1404:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 3200              		.loc 19 1404 34 is_stmt 0 view .LVU838
 3201 0020 3D48     		ldr	r0, .L205+12
1405:Veno-Echo.cpp ****         }
 3202              		.loc 19 1405 31 view .LVU839
 3203 0022 3E49     		ldr	r1, .L205+16
1403:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 3204              		.loc 19 1403 23 view .LVU840
 3205 0024 1370     		strb	r3, [r2]
1404:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 3206              		.loc 19 1404 13 is_stmt 1 view .LVU841
1404:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 3207              		.loc 19 1404 34 is_stmt 0 view .LVU842
 3208 0026 0370     		strb	r3, [r0]
1405:Veno-Echo.cpp ****         }
 3209              		.loc 19 1405 13 is_stmt 1 view .LVU843
1405:Veno-Echo.cpp ****         }
 3210              		.loc 19 1405 31 is_stmt 0 view .LVU844
 3211 0028 81ED000A 		vstr.32	s0, [r1]
 3212              	.L193:
1418:Veno-Echo.cpp **** 
 3213              		.loc 19 1418 9 is_stmt 1 view .LVU845
 3214              	.LVL165:
1420:Veno-Echo.cpp ****         {
 3215              		.loc 19 1420 9 view .LVU846
1428:Veno-Echo.cpp ****         }
 3216              		.loc 19 1428 13 view .LVU847
1428:Veno-Echo.cpp ****         }
 3217              		.loc 19 1428 40 is_stmt 0 view .LVU848
 3218 002c 3C4B     		ldr	r3, .L205+20
 3219 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 3220 0032 0020     		movs	r0, #0
 3221 0034 DFED3B0A 		vldr.32	s1, .L205+24
 3222 0038 93ED000A 		vldr.32	s0, [r3]
 3223              	.LVL166:
1428:Veno-Echo.cpp ****         }
 3224              		.loc 19 1428 40 view .LVU849
 3225 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 3226              	.LVL167:
 3227              	.L201:
1431:Veno-Echo.cpp ****     }
 3228              		.loc 19 1431 9 is_stmt 1 view .LVU850
 3229              	.LBB1053:
 3230              	.LBI1053:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3231              		.loc 21 135 13 view .LVU851
 3232              	.LBB1054:
 3233              		.loc 21 137 5 view .LVU852
 3234              		.loc 21 137 9 is_stmt 0 view .LVU853
 3235 0040 394B     		ldr	r3, .L205+28
 3236 0042 9FED3A7A 		vldr.32	s14, .L205+32
 3237 0046 D3ED007A 		vldr.32	s15, [r3]
 3238              		.loc 21 137 24 view .LVU854
 3239 004a 30EE670A 		vsub.f32	s0, s0, s15
 3240              	.LVL168:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 122


 3241              		.loc 21 137 24 view .LVU855
 3242              	.LBE1054:
 3243              	.LBE1053:
 3244              	.LBE1061:
 3245              	.LBE1080:
1462:Veno-Echo.cpp **** 
 3246              		.loc 19 1462 1 view .LVU856
 3247 004e BDEC028B 		vldm	sp!, {d8}
 3248              		.cfi_remember_state
 3249              		.cfi_restore 80
 3250              		.cfi_restore 81
 3251              		.cfi_def_cfa_offset 8
 3252              	.LVL169:
 3253              	.LBB1081:
 3254              	.LBB1062:
 3255              	.LBB1056:
 3256              	.LBB1055:
 3257              		.loc 21 137 9 view .LVU857
 3258 0052 E0EE077A 		vfma.f32	s15, s0, s14
 3259 0056 C3ED007A 		vstr.32	s15, [r3]
 3260              	.LBE1055:
 3261              	.LBE1056:
 3262              	.LBE1062:
 3263              	.LBE1081:
1462:Veno-Echo.cpp **** 
 3264              		.loc 19 1462 1 view .LVU858
 3265 005a 10BD     		pop	{r4, pc}
 3266              	.LVL170:
 3267              	.L191:
 3268              		.cfi_restore_state
 3269              	.LBB1082:
 3270              	.LBB1063:
1435:Veno-Echo.cpp **** 
 3271              		.loc 19 1435 9 is_stmt 1 view .LVU859
1437:Veno-Echo.cpp ****         {
 3272              		.loc 19 1437 9 view .LVU860
 3273 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3274 005e 4BBB     		cbnz	r3, .L197
1439:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 3275              		.loc 19 1439 13 view .LVU861
1439:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 3276              		.loc 19 1439 23 is_stmt 0 view .LVU862
 3277 0060 0124     		movs	r4, #1
1440:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 3278              		.loc 19 1440 28 view .LVU863
 3279 0062 3348     		ldr	r0, .L205+36
1441:Veno-Echo.cpp ****         }
 3280              		.loc 19 1441 25 view .LVU864
 3281 0064 3349     		ldr	r1, .L205+40
1439:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 3282              		.loc 19 1439 23 view .LVU865
 3283 0066 1470     		strb	r4, [r2]
1440:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 3284              		.loc 19 1440 13 is_stmt 1 view .LVU866
1440:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 3285              		.loc 19 1440 28 is_stmt 0 view .LVU867
 3286 0068 0370     		strb	r3, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 123


1441:Veno-Echo.cpp ****         }
 3287              		.loc 19 1441 13 is_stmt 1 view .LVU868
1441:Veno-Echo.cpp ****         }
 3288              		.loc 19 1441 25 is_stmt 0 view .LVU869
 3289 006a 81ED000A 		vstr.32	s0, [r1]
 3290              	.L190:
1441:Veno-Echo.cpp ****         }
 3291              		.loc 19 1441 25 view .LVU870
 3292              	.LBE1063:
 3293              	.LBE1082:
1462:Veno-Echo.cpp **** 
 3294              		.loc 19 1462 1 view .LVU871
 3295 006e BDEC028B 		vldm	sp!, {d8}
 3296              		.cfi_remember_state
 3297              		.cfi_restore 80
 3298              		.cfi_restore 81
 3299              		.cfi_def_cfa_offset 8
 3300 0072 10BD     		pop	{r4, pc}
 3301              	.L192:
 3302              		.cfi_restore_state
 3303              	.LBB1083:
 3304              	.LBB1078:
1410:Veno-Echo.cpp ****             {
 3305              		.loc 19 1410 13 is_stmt 1 view .LVU872
1410:Veno-Echo.cpp ****             {
 3306              		.loc 19 1410 16 is_stmt 0 view .LVU873
 3307 0074 284B     		ldr	r3, .L205+12
1410:Veno-Echo.cpp ****             {
 3308              		.loc 19 1410 13 view .LVU874
 3309 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3310 0078 7AB9     		cbnz	r2, .L194
1412:Veno-Echo.cpp ****                 {
 3311              		.loc 19 1412 17 is_stmt 1 view .LVU875
 3312              	.LVL171:
 3313              	.LBB1057:
 3314              	.LBI1057:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3315              		.loc 20 75 3 view .LVU876
 3316              	.LBB1058:
 3317              		.loc 20 76 5 view .LVU877
 3318              		.loc 20 76 5 is_stmt 0 view .LVU878
 3319              	.LBE1058:
 3320              	.LBE1057:
1412:Veno-Echo.cpp ****                 {
 3321              		.loc 19 1412 23 view .LVU879
 3322 007a 284A     		ldr	r2, .L205+16
1412:Veno-Echo.cpp ****                 {
 3323              		.loc 19 1412 17 view .LVU880
 3324 007c 9FED2E7A 		vldr.32	s14, .L205+44
1412:Veno-Echo.cpp ****                 {
 3325              		.loc 19 1412 23 view .LVU881
 3326 0080 D2ED007A 		vldr.32	s15, [r2]
 3327 0084 70EE677A 		vsub.f32	s15, s0, s15
 3328              	.LBB1060:
 3329              	.LBB1059:
 3330              		.loc 20 76 31 view .LVU882
 3331 0088 F0EEE77A 		vabs.f32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 124


 3332              	.LBE1059:
 3333              	.LBE1060:
1412:Veno-Echo.cpp ****                 {
 3334              		.loc 19 1412 17 view .LVU883
 3335 008c F4EEC77A 		vcmpe.f32	s15, s14
 3336 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3337 0094 CADD     		ble	.L193
1414:Veno-Echo.cpp ****                 }
 3338              		.loc 19 1414 21 is_stmt 1 view .LVU884
1414:Veno-Echo.cpp ****                 }
 3339              		.loc 19 1414 42 is_stmt 0 view .LVU885
 3340 0096 0122     		movs	r2, #1
 3341 0098 1A70     		strb	r2, [r3]
 3342              	.L194:
1418:Veno-Echo.cpp **** 
 3343              		.loc 19 1418 9 is_stmt 1 view .LVU886
 3344              	.LVL172:
1420:Veno-Echo.cpp ****         {
 3345              		.loc 19 1420 9 view .LVU887
1422:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 3346              		.loc 19 1422 13 view .LVU888
1422:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 3347              		.loc 19 1422 40 is_stmt 0 view .LVU889
 3348 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 3349 009e 0020     		movs	r0, #0
 3350 00a0 B0EE480A 		vmov.f32	s0, s16
 3351              	.LVL173:
1422:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 3352              		.loc 19 1422 40 view .LVU890
 3353 00a4 DFED1F0A 		vldr.32	s1, .L205+24
 3354 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3355              	.LVL174:
1423:Veno-Echo.cpp ****         }
 3356              		.loc 19 1423 32 view .LVU891
 3357 00ac 1C4B     		ldr	r3, .L205+20
 3358              	.LVL175:
1423:Veno-Echo.cpp ****         }
 3359              		.loc 19 1423 13 is_stmt 1 view .LVU892
1423:Veno-Echo.cpp ****         }
 3360              		.loc 19 1423 32 is_stmt 0 view .LVU893
 3361 00ae 83ED008A 		vstr.32	s16, [r3]
 3362 00b2 C5E7     		b	.L201
 3363              	.LVL176:
 3364              	.L197:
1423:Veno-Echo.cpp ****         }
 3365              		.loc 19 1423 32 view .LVU894
 3366              	.LBE1078:
 3367              	.LBB1079:
1446:Veno-Echo.cpp ****             {
 3368              		.loc 19 1446 13 is_stmt 1 view .LVU895
1446:Veno-Echo.cpp ****             {
 3369              		.loc 19 1446 16 is_stmt 0 view .LVU896
 3370 00b4 1E4B     		ldr	r3, .L205+36
1446:Veno-Echo.cpp ****             {
 3371              		.loc 19 1446 13 view .LVU897
 3372 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3373 00b8 7AB9     		cbnz	r2, .L199
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 125


1448:Veno-Echo.cpp ****                 {
 3374              		.loc 19 1448 17 is_stmt 1 view .LVU898
 3375              	.LVL177:
 3376              	.LBB1064:
 3377              	.LBI1064:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3378              		.loc 20 75 3 view .LVU899
 3379              	.LBB1065:
 3380              		.loc 20 76 5 view .LVU900
 3381              		.loc 20 76 5 is_stmt 0 view .LVU901
 3382              	.LBE1065:
 3383              	.LBE1064:
1448:Veno-Echo.cpp ****                 {
 3384              		.loc 19 1448 23 view .LVU902
 3385 00ba 1E4A     		ldr	r2, .L205+40
1448:Veno-Echo.cpp ****                 {
 3386              		.loc 19 1448 17 view .LVU903
 3387 00bc 9FED1E7A 		vldr.32	s14, .L205+44
1448:Veno-Echo.cpp ****                 {
 3388              		.loc 19 1448 23 view .LVU904
 3389 00c0 D2ED007A 		vldr.32	s15, [r2]
 3390 00c4 70EE677A 		vsub.f32	s15, s0, s15
 3391              	.LBB1067:
 3392              	.LBB1066:
 3393              		.loc 20 76 31 view .LVU905
 3394 00c8 F0EEE77A 		vabs.f32	s15, s15
 3395              	.LBE1066:
 3396              	.LBE1067:
1448:Veno-Echo.cpp ****                 {
 3397              		.loc 19 1448 17 view .LVU906
 3398 00cc F4EEC77A 		vcmpe.f32	s15, s14
 3399 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3400 00d4 CBDD     		ble	.L190
1450:Veno-Echo.cpp ****                 }
 3401              		.loc 19 1450 21 is_stmt 1 view .LVU907
1450:Veno-Echo.cpp ****                 }
 3402              		.loc 19 1450 36 is_stmt 0 view .LVU908
 3403 00d6 0122     		movs	r2, #1
 3404 00d8 1A70     		strb	r2, [r3]
 3405              	.L199:
1455:Veno-Echo.cpp ****         {
 3406              		.loc 19 1455 9 is_stmt 1 view .LVU909
 3407              	.LBB1068:
 3408              	.LBB1069:
1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3409              		.loc 19 1457 13 view .LVU910
 3410              	.LBB1070:
 3411              	.LBB1071:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 126


  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 3412              		.loc 8 60 20 is_stmt 0 view .LVU911
 3413 00da 184C     		ldr	r4, .L205+48
 3414              	.LBE1071:
 3415              	.LBE1070:
1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3416              		.loc 19 1457 32 view .LVU912
 3417 00dc B0EE480A 		vmov.f32	s0, s16
 3418              	.LVL178:
1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3419              		.loc 19 1457 32 view .LVU913
 3420 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 3421 00e4 0020     		movs	r0, #0
 3422 00e6 DFED160A 		vldr.32	s1, .L205+52
 3423 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 3424              	.LVL179:
 3425              	.LBB1075:
 3426              	.LBB1072:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3427              		.loc 8 61 34 view .LVU914
 3428 00ee 2046     		mov	r0, r4
 3429              	.LBE1072:
 3430              	.LBE1075:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 127


1457:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 3431              		.loc 19 1457 32 view .LVU915
 3432 00f0 B0EE408A 		vmov.f32	s16, s0
 3433              	.LVL180:
1458:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 3434              		.loc 19 1458 13 is_stmt 1 view .LVU916
 3435              	.LBB1076:
 3436              	.LBI1070:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 3437              		.loc 8 58 17 view .LVU917
 3438              	.LBB1073:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3439              		.loc 8 60 9 view .LVU918
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 3440              		.loc 8 60 20 is_stmt 0 view .LVU919
 3441 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 3442              		.loc 8 61 9 is_stmt 1 view .LVU920
 3443              		.loc 8 61 34 is_stmt 0 view .LVU921
 3444 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 3445              	.LVL181:
 3446              		.loc 8 61 34 view .LVU922
 3447              	.LBE1073:
 3448              	.LBE1076:
1459:Veno-Echo.cpp ****         }
 3449              		.loc 19 1459 33 view .LVU923
 3450 00fc 114B     		ldr	r3, .L205+56
 3451              	.LBB1077:
 3452              	.LBB1074:
 3453              		.loc 8 61 20 view .LVU924
 3454 00fe 84ED060A 		vstr.32	s0, [r4, #24]
 3455              	.LVL182:
 3456              		.loc 8 61 20 view .LVU925
 3457              	.LBE1074:
 3458              	.LBE1077:
1459:Veno-Echo.cpp ****         }
 3459              		.loc 19 1459 13 is_stmt 1 view .LVU926
1459:Veno-Echo.cpp ****         }
 3460              		.loc 19 1459 33 is_stmt 0 view .LVU927
 3461 0102 83ED038A 		vstr.32	s16, [r3, #12]
 3462              	.LBE1069:
 3463              	.LBE1068:
 3464              	.LBE1079:
 3465              	.LBE1083:
1462:Veno-Echo.cpp **** 
 3466              		.loc 19 1462 1 view .LVU928
 3467 0106 BDEC028B 		vldm	sp!, {d8}
 3468              		.cfi_restore 80
 3469              		.cfi_restore 81
 3470              		.cfi_def_cfa_offset 8
 3471              	.LVL183:
1462:Veno-Echo.cpp **** 
 3472              		.loc 19 1462 1 view .LVU929
 3473 010a 10BD     		pop	{r4, pc}
 3474              	.L206:
 3475              		.align	2
 3476              	.L205:
 3477 010c 18000000 		.word	.LANCHOR4+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 128


 3478 0110 00000000 		.word	.LANCHOR8
 3479 0114 00000000 		.word	.LANCHOR51
 3480 0118 00000000 		.word	.LANCHOR52
 3481 011c 00000000 		.word	.LANCHOR53
 3482 0120 00000000 		.word	.LANCHOR57
 3483 0124 00000000 		.word	0
 3484 0128 00000000 		.word	.LANCHOR54
 3485 012c 6F12033D 		.word	1023611503
 3486 0130 00000000 		.word	.LANCHOR55
 3487 0134 00000000 		.word	.LANCHOR56
 3488 0138 0AD7A33B 		.word	1000593162
 3489 013c 00000000 		.word	.LANCHOR58
 3490 0140 CDCCCC3D 		.word	1036831949
 3491 0144 00000000 		.word	.LANCHOR20
 3492              		.cfi_endproc
 3493              	.LFE4303:
 3495              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 3496              		.align	1
 3497              		.p2align 2,,3
 3498              		.global	_Z18Update_filterXfadev
 3499              		.syntax unified
 3500              		.thumb
 3501              		.thumb_func
 3502              		.fpu fpv5-d16
 3504              	_Z18Update_filterXfadev:
 3505              	.LFB4304:
1465:Veno-Echo.cpp ****     static bool lastShift{};
 3506              		.loc 19 1465 1 is_stmt 1 view -0
 3507              		.cfi_startproc
 3508              		@ args = 0, pretend = 0, frame = 0
 3509              		@ frame_needed = 0, uses_anonymous_args = 0
1466:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 3510              		.loc 19 1466 5 view .LVU931
1467:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 3511              		.loc 19 1467 5 view .LVU932
1468:Veno-Echo.cpp **** 
 3512              		.loc 19 1468 5 view .LVU933
1470:Veno-Echo.cpp **** 
 3513              		.loc 19 1470 5 view .LVU934
1473:Veno-Echo.cpp **** 
 3514              		.loc 19 1473 5 view .LVU935
1473:Veno-Echo.cpp **** 
 3515              		.loc 19 1473 45 is_stmt 0 view .LVU936
 3516 0000 0322     		movs	r2, #3
 3517 0002 0721     		movs	r1, #7
 3518 0004 4248     		ldr	r0, .L229
1465:Veno-Echo.cpp ****     static bool lastShift{};
 3519              		.loc 19 1465 1 view .LVU937
 3520 0006 10B5     		push	{r4, lr}
 3521              		.cfi_def_cfa_offset 8
 3522              		.cfi_offset 4, -8
 3523              		.cfi_offset 14, -4
 3524 0008 2DED028B 		vpush.64	{d8}
 3525              		.cfi_def_cfa_offset 16
 3526              		.cfi_offset 80, -16
 3527              		.cfi_offset 81, -12
1473:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 129


 3528              		.loc 19 1473 45 view .LVU938
 3529 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3530              	.LVL184:
 3531              	.LBB1084:
1475:Veno-Echo.cpp ****     {   
 3532              		.loc 19 1475 9 view .LVU939
 3533 0010 404B     		ldr	r3, .L229+4
 3534              	.LBE1084:
1473:Veno-Echo.cpp **** 
 3535              		.loc 19 1473 45 view .LVU940
 3536 0012 B0EE408A 		vmov.f32	s16, s0
 3537              	.LVL185:
1475:Veno-Echo.cpp ****     {   
 3538              		.loc 19 1475 5 is_stmt 1 view .LVU941
 3539              	.LBB1104:
 3540              	.LBB1085:
1479:Veno-Echo.cpp ****         {
 3541              		.loc 19 1479 19 is_stmt 0 view .LVU942
 3542 0016 404A     		ldr	r2, .L229+8
 3543              	.LBE1085:
1475:Veno-Echo.cpp ****     {   
 3544              		.loc 19 1475 5 view .LVU943
 3545 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3546 001a FBB9     		cbnz	r3, .L208
 3547              	.LBB1094:
1477:Veno-Echo.cpp ****         //update pickup
 3548              		.loc 19 1477 9 is_stmt 1 view .LVU944
1479:Veno-Echo.cpp ****         {
 3549              		.loc 19 1479 9 view .LVU945
 3550 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3551 001e 49B3     		cbz	r1, .L209
1481:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 3552              		.loc 19 1481 13 view .LVU946
1482:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 3553              		.loc 19 1482 32 is_stmt 0 view .LVU947
 3554 0020 3E48     		ldr	r0, .L229+12
1483:Veno-Echo.cpp ****         }
 3555              		.loc 19 1483 29 view .LVU948
 3556 0022 3F49     		ldr	r1, .L229+16
1481:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 3557              		.loc 19 1481 23 view .LVU949
 3558 0024 1370     		strb	r3, [r2]
1482:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 3559              		.loc 19 1482 13 is_stmt 1 view .LVU950
1482:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 3560              		.loc 19 1482 32 is_stmt 0 view .LVU951
 3561 0026 0370     		strb	r3, [r0]
1483:Veno-Echo.cpp ****         }
 3562              		.loc 19 1483 13 is_stmt 1 view .LVU952
1483:Veno-Echo.cpp ****         }
 3563              		.loc 19 1483 29 is_stmt 0 view .LVU953
 3564 0028 81ED000A 		vstr.32	s0, [r1]
 3565              	.L210:
1497:Veno-Echo.cpp **** 
 3566              		.loc 19 1497 9 is_stmt 1 view .LVU954
 3567              	.LVL186:
1499:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 130


 3568              		.loc 19 1499 9 view .LVU955
1507:Veno-Echo.cpp ****         }
 3569              		.loc 19 1507 13 view .LVU956
1507:Veno-Echo.cpp ****         }
 3570              		.loc 19 1507 38 is_stmt 0 view .LVU957
 3571 002c 3D4B     		ldr	r3, .L229+20
 3572 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 3573 0032 0120     		movs	r0, #1
 3574 0034 DFED3C0A 		vldr.32	s1, .L229+24
 3575 0038 93ED000A 		vldr.32	s0, [r3]
 3576              	.LVL187:
1507:Veno-Echo.cpp ****         }
 3577              		.loc 19 1507 38 view .LVU958
 3578 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 3579              	.LVL188:
 3580              	.L220:
1510:Veno-Echo.cpp ****     }
 3581              		.loc 19 1510 9 is_stmt 1 view .LVU959
 3582              	.LBB1086:
 3583              	.LBI1086:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3584              		.loc 21 135 13 view .LVU960
 3585              	.LBB1087:
 3586              		.loc 21 137 5 view .LVU961
 3587              		.loc 21 137 9 is_stmt 0 view .LVU962
 3588 0040 3A4B     		ldr	r3, .L229+28
 3589 0042 9FED3B7A 		vldr.32	s14, .L229+32
 3590 0046 D3ED007A 		vldr.32	s15, [r3]
 3591              		.loc 21 137 24 view .LVU963
 3592 004a 30EE670A 		vsub.f32	s0, s0, s15
 3593              	.LVL189:
 3594              		.loc 21 137 24 view .LVU964
 3595              	.LBE1087:
 3596              	.LBE1086:
 3597              	.LBE1094:
 3598              	.LBE1104:
1552:Veno-Echo.cpp **** 
 3599              		.loc 19 1552 1 view .LVU965
 3600 004e BDEC028B 		vldm	sp!, {d8}
 3601              		.cfi_remember_state
 3602              		.cfi_restore 80
 3603              		.cfi_restore 81
 3604              		.cfi_def_cfa_offset 8
 3605              	.LVL190:
 3606              	.LBB1105:
 3607              	.LBB1095:
 3608              	.LBB1089:
 3609              	.LBB1088:
 3610              		.loc 21 137 9 view .LVU966
 3611 0052 E0EE077A 		vfma.f32	s15, s0, s14
 3612 0056 C3ED007A 		vstr.32	s15, [r3]
 3613              	.LBE1088:
 3614              	.LBE1089:
 3615              	.LBE1095:
 3616              	.LBE1105:
1552:Veno-Echo.cpp **** 
 3617              		.loc 19 1552 1 view .LVU967
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 131


 3618 005a 10BD     		pop	{r4, pc}
 3619              	.LVL191:
 3620              	.L208:
 3621              		.cfi_restore_state
 3622              	.LBB1106:
 3623              	.LBB1096:
1515:Veno-Echo.cpp **** 
 3624              		.loc 19 1515 9 is_stmt 1 view .LVU968
1517:Veno-Echo.cpp ****         {
 3625              		.loc 19 1517 9 view .LVU969
 3626 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3627 005e 4BBB     		cbnz	r3, .L214
1519:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 3628              		.loc 19 1519 13 view .LVU970
1519:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 3629              		.loc 19 1519 23 is_stmt 0 view .LVU971
 3630 0060 0124     		movs	r4, #1
1520:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 3631              		.loc 19 1520 32 view .LVU972
 3632 0062 3448     		ldr	r0, .L229+36
1521:Veno-Echo.cpp ****         }
 3633              		.loc 19 1521 29 view .LVU973
 3634 0064 3449     		ldr	r1, .L229+40
1519:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 3635              		.loc 19 1519 23 view .LVU974
 3636 0066 1470     		strb	r4, [r2]
1520:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 3637              		.loc 19 1520 13 is_stmt 1 view .LVU975
1520:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 3638              		.loc 19 1520 32 is_stmt 0 view .LVU976
 3639 0068 0370     		strb	r3, [r0]
1521:Veno-Echo.cpp ****         }
 3640              		.loc 19 1521 13 is_stmt 1 view .LVU977
1521:Veno-Echo.cpp ****         }
 3641              		.loc 19 1521 29 is_stmt 0 view .LVU978
 3642 006a 81ED000A 		vstr.32	s0, [r1]
 3643              	.L207:
1521:Veno-Echo.cpp ****         }
 3644              		.loc 19 1521 29 view .LVU979
 3645              	.LBE1096:
 3646              	.LBE1106:
1552:Veno-Echo.cpp **** 
 3647              		.loc 19 1552 1 view .LVU980
 3648 006e BDEC028B 		vldm	sp!, {d8}
 3649              		.cfi_remember_state
 3650              		.cfi_restore 80
 3651              		.cfi_restore 81
 3652              		.cfi_def_cfa_offset 8
 3653 0072 10BD     		pop	{r4, pc}
 3654              	.L209:
 3655              		.cfi_restore_state
 3656              	.LBB1107:
 3657              	.LBB1101:
1488:Veno-Echo.cpp ****             {
 3658              		.loc 19 1488 13 is_stmt 1 view .LVU981
1488:Veno-Echo.cpp ****             {
 3659              		.loc 19 1488 16 is_stmt 0 view .LVU982
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 132


 3660 0074 294B     		ldr	r3, .L229+12
1488:Veno-Echo.cpp ****             {
 3661              		.loc 19 1488 13 view .LVU983
 3662 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3663 0078 7AB9     		cbnz	r2, .L211
1490:Veno-Echo.cpp ****                 {
 3664              		.loc 19 1490 17 is_stmt 1 view .LVU984
 3665              	.LVL192:
 3666              	.LBB1090:
 3667              	.LBI1090:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3668              		.loc 20 75 3 view .LVU985
 3669              	.LBB1091:
 3670              		.loc 20 76 5 view .LVU986
 3671              		.loc 20 76 5 is_stmt 0 view .LVU987
 3672              	.LBE1091:
 3673              	.LBE1090:
1490:Veno-Echo.cpp ****                 {
 3674              		.loc 19 1490 23 view .LVU988
 3675 007a 294A     		ldr	r2, .L229+16
1490:Veno-Echo.cpp ****                 {
 3676              		.loc 19 1490 17 view .LVU989
 3677 007c 9FED2F7A 		vldr.32	s14, .L229+44
1490:Veno-Echo.cpp ****                 {
 3678              		.loc 19 1490 23 view .LVU990
 3679 0080 D2ED007A 		vldr.32	s15, [r2]
 3680 0084 70EE677A 		vsub.f32	s15, s0, s15
 3681              	.LBB1093:
 3682              	.LBB1092:
 3683              		.loc 20 76 31 view .LVU991
 3684 0088 F0EEE77A 		vabs.f32	s15, s15
 3685              	.LBE1092:
 3686              	.LBE1093:
1490:Veno-Echo.cpp ****                 {
 3687              		.loc 19 1490 17 view .LVU992
 3688 008c F4EEC77A 		vcmpe.f32	s15, s14
 3689 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3690 0094 CADD     		ble	.L210
1492:Veno-Echo.cpp ****                 }
 3691              		.loc 19 1492 21 is_stmt 1 view .LVU993
1492:Veno-Echo.cpp ****                 }
 3692              		.loc 19 1492 40 is_stmt 0 view .LVU994
 3693 0096 0122     		movs	r2, #1
 3694 0098 1A70     		strb	r2, [r3]
 3695              	.L211:
1497:Veno-Echo.cpp **** 
 3696              		.loc 19 1497 9 is_stmt 1 view .LVU995
 3697              	.LVL193:
1499:Veno-Echo.cpp ****         {
 3698              		.loc 19 1499 9 view .LVU996
1501:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 3699              		.loc 19 1501 13 view .LVU997
1501:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 3700              		.loc 19 1501 38 is_stmt 0 view .LVU998
 3701 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 3702 009e 0120     		movs	r0, #1
 3703 00a0 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 133


 3704              	.LVL194:
1501:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 3705              		.loc 19 1501 38 view .LVU999
 3706 00a4 DFED200A 		vldr.32	s1, .L229+24
 3707 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3708              	.LVL195:
1502:Veno-Echo.cpp ****         }
 3709              		.loc 19 1502 30 view .LVU1000
 3710 00ac 1D4B     		ldr	r3, .L229+20
 3711              	.LVL196:
1502:Veno-Echo.cpp ****         }
 3712              		.loc 19 1502 13 is_stmt 1 view .LVU1001
1502:Veno-Echo.cpp ****         }
 3713              		.loc 19 1502 30 is_stmt 0 view .LVU1002
 3714 00ae 83ED008A 		vstr.32	s16, [r3]
 3715 00b2 C5E7     		b	.L220
 3716              	.LVL197:
 3717              	.L214:
1502:Veno-Echo.cpp ****         }
 3718              		.loc 19 1502 30 view .LVU1003
 3719              	.LBE1101:
 3720              	.LBB1102:
1526:Veno-Echo.cpp ****             {
 3721              		.loc 19 1526 13 is_stmt 1 view .LVU1004
1526:Veno-Echo.cpp ****             {
 3722              		.loc 19 1526 16 is_stmt 0 view .LVU1005
 3723 00b4 1F4B     		ldr	r3, .L229+36
1526:Veno-Echo.cpp ****             {
 3724              		.loc 19 1526 13 view .LVU1006
 3725 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3726 00b8 7AB9     		cbnz	r2, .L216
1528:Veno-Echo.cpp ****                 {
 3727              		.loc 19 1528 17 is_stmt 1 view .LVU1007
 3728              	.LVL198:
 3729              	.LBB1097:
 3730              	.LBI1097:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3731              		.loc 20 75 3 view .LVU1008
 3732              	.LBB1098:
 3733              		.loc 20 76 5 view .LVU1009
 3734              		.loc 20 76 5 is_stmt 0 view .LVU1010
 3735              	.LBE1098:
 3736              	.LBE1097:
1528:Veno-Echo.cpp ****                 {
 3737              		.loc 19 1528 23 view .LVU1011
 3738 00ba 1F4A     		ldr	r2, .L229+40
1528:Veno-Echo.cpp ****                 {
 3739              		.loc 19 1528 17 view .LVU1012
 3740 00bc 9FED1F7A 		vldr.32	s14, .L229+44
1528:Veno-Echo.cpp ****                 {
 3741              		.loc 19 1528 23 view .LVU1013
 3742 00c0 D2ED007A 		vldr.32	s15, [r2]
 3743 00c4 70EE677A 		vsub.f32	s15, s0, s15
 3744              	.LBB1100:
 3745              	.LBB1099:
 3746              		.loc 20 76 31 view .LVU1014
 3747 00c8 F0EEE77A 		vabs.f32	s15, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 134


 3748              	.LBE1099:
 3749              	.LBE1100:
1528:Veno-Echo.cpp ****                 {
 3750              		.loc 19 1528 17 view .LVU1015
 3751 00cc F4EEC77A 		vcmpe.f32	s15, s14
 3752 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3753 00d4 CBDD     		ble	.L207
1530:Veno-Echo.cpp ****                 }
 3754              		.loc 19 1530 21 is_stmt 1 view .LVU1016
1530:Veno-Echo.cpp ****                 }
 3755              		.loc 19 1530 40 is_stmt 0 view .LVU1017
 3756 00d6 0122     		movs	r2, #1
 3757 00d8 1A70     		strb	r2, [r3]
 3758              	.L216:
1535:Veno-Echo.cpp ****         {
 3759              		.loc 19 1535 9 is_stmt 1 view .LVU1018
1537:Veno-Echo.cpp ****             {
 3760              		.loc 19 1537 13 view .LVU1019
 3761 00da DFED197A 		vldr.32	s15, .L229+48
 3762 00de B4EEE78A 		vcmpe.f32	s16, s15
 3763 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3764 00e6 08D5     		bpl	.L228
1539:Veno-Echo.cpp ****             }
 3765              		.loc 19 1539 17 view .LVU1020
1539:Veno-Echo.cpp ****             }
 3766              		.loc 19 1539 29 is_stmt 0 view .LVU1021
 3767 00e8 164B     		ldr	r3, .L229+52
 3768 00ea 0022     		movs	r2, #0
 3769 00ec 1A70     		strb	r2, [r3]
 3770              	.L218:
1549:Veno-Echo.cpp ****         }  
 3771              		.loc 19 1549 13 is_stmt 1 view .LVU1022
1549:Veno-Echo.cpp ****         }  
 3772              		.loc 19 1549 39 is_stmt 0 view .LVU1023
 3773 00ee 164B     		ldr	r3, .L229+56
 3774 00f0 83ED078A 		vstr.32	s16, [r3, #28]
 3775              	.LBE1102:
 3776              	.LBE1107:
1552:Veno-Echo.cpp **** 
 3777              		.loc 19 1552 1 view .LVU1024
 3778 00f4 BDEC028B 		vldm	sp!, {d8}
 3779              		.cfi_remember_state
 3780              		.cfi_restore 80
 3781              		.cfi_restore 81
 3782              		.cfi_def_cfa_offset 8
 3783 00f8 10BD     		pop	{r4, pc}
 3784              	.L228:
 3785              		.cfi_restore_state
 3786              	.LBB1108:
 3787              	.LBB1103:
1541:Veno-Echo.cpp ****             {
 3788              		.loc 19 1541 18 is_stmt 1 view .LVU1025
 3789 00fa DFED147A 		vldr.32	s15, .L229+60
 3790 00fe B4EEE78A 		vcmpe.f32	s16, s15
 3791 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3792 0106 F2DD     		ble	.L218
1543:Veno-Echo.cpp ****             }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 135


 3793              		.loc 19 1543 17 view .LVU1026
1543:Veno-Echo.cpp ****             }
 3794              		.loc 19 1543 29 is_stmt 0 view .LVU1027
 3795 0108 0E4B     		ldr	r3, .L229+52
 3796 010a 0122     		movs	r2, #1
 3797 010c 1A70     		strb	r2, [r3]
 3798 010e EEE7     		b	.L218
 3799              	.L230:
 3800              		.align	2
 3801              	.L229:
 3802 0110 18000000 		.word	.LANCHOR4+24
 3803 0114 00000000 		.word	.LANCHOR8
 3804 0118 00000000 		.word	.LANCHOR59
 3805 011c 00000000 		.word	.LANCHOR60
 3806 0120 00000000 		.word	.LANCHOR61
 3807 0124 00000000 		.word	.LANCHOR66
 3808 0128 00000000 		.word	0
 3809 012c 00000000 		.word	.LANCHOR62
 3810 0130 6F12033D 		.word	1023611503
 3811 0134 00000000 		.word	.LANCHOR63
 3812 0138 00000000 		.word	.LANCHOR64
 3813 013c 0AD7A33B 		.word	1000593162
 3814 0140 6666E63E 		.word	1055286886
 3815 0144 00000000 		.word	.LANCHOR65
 3816 0148 00000000 		.word	.LANCHOR20
 3817 014c CDCC0C3F 		.word	1057803469
 3818              	.LBE1103:
 3819              	.LBE1108:
 3820              		.cfi_endproc
 3821              	.LFE4304:
 3823              		.section	.text._Z8GetModCVv,"ax",%progbits
 3824              		.align	1
 3825              		.p2align 2,,3
 3826              		.global	_Z8GetModCVv
 3827              		.syntax unified
 3828              		.thumb
 3829              		.thumb_func
 3830              		.fpu fpv5-d16
 3832              	_Z8GetModCVv:
 3833              	.LFB4305:
1555:Veno-Echo.cpp ****     //get modulation CV input
 3834              		.loc 19 1555 1 is_stmt 1 view -0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 0
 3837              		@ frame_needed = 0, uses_anonymous_args = 0
1557:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3838              		.loc 19 1557 5 view .LVU1029
1555:Veno-Echo.cpp ****     //get modulation CV input
 3839              		.loc 19 1555 1 is_stmt 0 view .LVU1030
 3840 0000 08B5     		push	{r3, lr}
 3841              		.cfi_def_cfa_offset 8
 3842              		.cfi_offset 3, -8
 3843              		.cfi_offset 14, -4
1557:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3844              		.loc 19 1557 30 view .LVU1031
 3845 0002 0621     		movs	r1, #6
 3846 0004 0648     		ldr	r0, .L233
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 136


 3847 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3848              	.LVL199:
 3849 000a 0020     		movs	r0, #0
 3850 000c 9FED051A 		vldr.32	s2, .L233+4
 3851 0010 DFED050A 		vldr.32	s1, .L233+8
 3852 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3853              	.LVL200:
1557:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 3854              		.loc 19 1557 23 view .LVU1032
 3855 0018 044B     		ldr	r3, .L233+12
 3856 001a 83ED000A 		vstr.32	s0, [r3]
1559:Veno-Echo.cpp **** 
 3857              		.loc 19 1559 1 view .LVU1033
 3858 001e 08BD     		pop	{r3, pc}
 3859              	.L234:
 3860              		.align	2
 3861              	.L233:
 3862 0020 18000000 		.word	.LANCHOR4+24
 3863 0024 00004843 		.word	1128792064
 3864 0028 000048C3 		.word	3276275712
 3865 002c 00000000 		.word	.LANCHOR67
 3866              		.cfi_endproc
 3867              	.LFE4305:
 3869              		.section	.text._Z10Update_Modv,"ax",%progbits
 3870              		.align	1
 3871              		.p2align 2,,3
 3872              		.global	_Z10Update_Modv
 3873              		.syntax unified
 3874              		.thumb
 3875              		.thumb_func
 3876              		.fpu fpv5-d16
 3878              	_Z10Update_Modv:
 3879              	.LFB4306:
1562:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3880              		.loc 19 1562 1 is_stmt 1 view -0
 3881              		.cfi_startproc
 3882              		@ args = 0, pretend = 0, frame = 8
 3883              		@ frame_needed = 0, uses_anonymous_args = 0
1563:Veno-Echo.cpp ****     static float modulation_CV{};
 3884              		.loc 19 1563 5 view .LVU1035
1564:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 3885              		.loc 19 1564 5 view .LVU1036
1565:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3886              		.loc 19 1565 5 view .LVU1037
 3887              	.LVL201:
 3888              	.LBB1109:
 3889              	.LBI1109:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3890              		.loc 21 135 13 view .LVU1038
 3891              	.LBB1110:
 3892              		.loc 21 137 5 view .LVU1039
 3893              	.LBE1110:
 3894              	.LBE1109:
1562:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3895              		.loc 19 1562 1 is_stmt 0 view .LVU1040
 3896 0000 30B5     		push	{r4, r5, lr}
 3897              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 137


 3898              		.cfi_offset 4, -12
 3899              		.cfi_offset 5, -8
 3900              		.cfi_offset 14, -4
1565:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 3901              		.loc 19 1565 13 view .LVU1041
 3902 0002 1E4A     		ldr	r2, .L237
 3903              	.LBB1116:
 3904              	.LBB1111:
 3905              		.loc 21 137 9 view .LVU1042
 3906 0004 1E4C     		ldr	r4, .L237+4
 3907              	.LBE1111:
 3908              	.LBE1116:
1566:Veno-Echo.cpp ****     //calculate InternalMod
 3909              		.loc 19 1566 13 view .LVU1043
 3910 0006 1F4B     		ldr	r3, .L237+8
 3911              	.LBB1117:
 3912              	.LBB1118:
 3913              		.loc 21 137 9 view .LVU1044
 3914 0008 1F4D     		ldr	r5, .L237+12
 3915              	.LBE1118:
 3916              	.LBE1117:
 3917              	.LBB1123:
 3918              	.LBB1112:
 3919 000a 94ED007A 		vldr.32	s14, [r4]
 3920              		.loc 21 137 24 view .LVU1045
 3921 000e 92ED006A 		vldr.32	s12, [r2]
 3922              	.LBE1112:
 3923              	.LBE1123:
 3924              	.LBB1124:
 3925              	.LBB1119:
 3926              		.loc 21 137 9 view .LVU1046
 3927 0012 D5ED007A 		vldr.32	s15, [r5]
 3928              		.loc 21 137 24 view .LVU1047
 3929 0016 D3ED006A 		vldr.32	s13, [r3]
 3930              	.LBE1119:
 3931              	.LBE1124:
 3932              	.LBB1125:
 3933              	.LBB1113:
 3934 001a 36EE476A 		vsub.f32	s12, s12, s14
 3935              		.loc 21 137 9 view .LVU1048
 3936 001e DFED1B5A 		vldr.32	s11, .L237+16
 3937              	.LBE1113:
 3938              	.LBE1125:
 3939              	.LBB1126:
 3940              	.LBB1120:
 3941              		.loc 21 137 24 view .LVU1049
 3942 0022 76EEE76A 		vsub.f32	s13, s13, s15
 3943              	.LBE1120:
 3944              	.LBE1126:
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3945              		.loc 19 1568 34 view .LVU1050
 3946 0026 1A48     		ldr	r0, .L237+20
 3947              	.LBB1127:
 3948              	.LBB1114:
 3949              		.loc 21 137 9 view .LVU1051
 3950 0028 A6EE257A 		vfma.f32	s14, s12, s11
 3951              	.LBE1114:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 138


 3952              	.LBE1127:
 3953              	.LBB1128:
 3954              	.LBB1121:
 3955 002c E6EEA57A 		vfma.f32	s15, s13, s11
 3956              	.LBE1121:
 3957              	.LBE1128:
1562:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 3958              		.loc 19 1562 1 view .LVU1052
 3959 0030 2DED028B 		vpush.64	{d8}
 3960              		.cfi_def_cfa_offset 20
 3961              		.cfi_offset 80, -20
 3962              		.cfi_offset 81, -16
 3963 0034 83B0     		sub	sp, sp, #12
 3964              		.cfi_def_cfa_offset 32
 3965              	.LBB1129:
 3966              	.LBB1115:
 3967              		.loc 21 137 9 view .LVU1053
 3968 0036 84ED007A 		vstr.32	s14, [r4]
 3969              	.LVL202:
 3970              		.loc 21 137 9 view .LVU1054
 3971              	.LBE1115:
 3972              	.LBE1129:
1566:Veno-Echo.cpp ****     //calculate InternalMod
 3973              		.loc 19 1566 5 is_stmt 1 view .LVU1055
 3974              	.LBB1130:
 3975              	.LBI1117:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3976              		.loc 21 135 13 view .LVU1056
 3977              	.LBB1122:
 3978              		.loc 21 137 5 view .LVU1057
 3979              		.loc 21 137 9 is_stmt 0 view .LVU1058
 3980 003a C5ED007A 		vstr.32	s15, [r5]
 3981              	.LVL203:
 3982              		.loc 21 137 9 view .LVU1059
 3983              	.LBE1122:
 3984              	.LBE1130:
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3985              		.loc 19 1568 5 is_stmt 1 view .LVU1060
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3986              		.loc 19 1568 34 is_stmt 0 view .LVU1061
 3987 003e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 3988              	.LVL204:
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3989              		.loc 19 1568 37 view .LVU1062
 3990 0042 D5ED008A 		vldr.32	s17, [r5]
1568:Veno-Echo.cpp ****     //apply modulation to delay lines
 3991              		.loc 19 1568 34 view .LVU1063
 3992 0046 B0EE408A 		vmov.f32	s16, s0
 3993              	.LVL205:
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3994              		.loc 19 1570 5 is_stmt 1 view .LVU1064
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3995              		.loc 19 1570 40 is_stmt 0 view .LVU1065
 3996 004a D4ED007A 		vldr.32	s15, [r4]
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 3997              		.loc 19 1570 25 view .LVU1066
 3998 004e 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 139


 3999 0050 1048     		ldr	r0, .L237+24
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4000              		.loc 19 1570 40 view .LVU1067
 4001 0052 E0EE287A 		vfma.f32	s15, s0, s17
 4002 0056 CDED017A 		vstr.32	s15, [sp, #4]
1570:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 4003              		.loc 19 1570 25 view .LVU1068
 4004 005a FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 4005              	.LVL206:
1571:Veno-Echo.cpp **** }
 4006              		.loc 19 1571 5 is_stmt 1 view .LVU1069
1571:Veno-Echo.cpp **** }
 4007              		.loc 19 1571 40 is_stmt 0 view .LVU1070
 4008 005e D4ED007A 		vldr.32	s15, [r4]
1571:Veno-Echo.cpp **** }
 4009              		.loc 19 1571 25 view .LVU1071
 4010 0062 01A9     		add	r1, sp, #4
 4011 0064 0C48     		ldr	r0, .L237+28
1571:Veno-Echo.cpp **** }
 4012              		.loc 19 1571 40 view .LVU1072
 4013 0066 E8EE287A 		vfma.f32	s15, s16, s17
 4014 006a CDED017A 		vstr.32	s15, [sp, #4]
1571:Veno-Echo.cpp **** }
 4015              		.loc 19 1571 25 view .LVU1073
 4016 006e FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 4017              	.LVL207:
1572:Veno-Echo.cpp **** 
 4018              		.loc 19 1572 1 view .LVU1074
 4019 0072 03B0     		add	sp, sp, #12
 4020              		.cfi_def_cfa_offset 20
 4021              		@ sp needed
 4022 0074 BDEC028B 		vldm	sp!, {d8}
 4023              		.cfi_restore 80
 4024              		.cfi_restore 81
 4025              		.cfi_def_cfa_offset 12
 4026              	.LVL208:
1572:Veno-Echo.cpp **** 
 4027              		.loc 19 1572 1 view .LVU1075
 4028 0078 30BD     		pop	{r4, r5, pc}
 4029              	.L238:
 4030 007a 00BF     		.align	2
 4031              	.L237:
 4032 007c 00000000 		.word	.LANCHOR67
 4033 0080 00000000 		.word	.LANCHOR68
 4034 0084 00000000 		.word	.LANCHOR50
 4035 0088 00000000 		.word	.LANCHOR69
 4036 008c 0AD7233C 		.word	1008981770
 4037 0090 00000000 		.word	.LANCHOR58
 4038 0094 00000000 		.word	.LANCHOR0
 4039 0098 00000000 		.word	.LANCHOR1
 4040              		.cfi_endproc
 4041              	.LFE4306:
 4043              		.section	.text._Z11UpdateClockv,"ax",%progbits
 4044              		.align	1
 4045              		.p2align 2,,3
 4046              		.global	_Z11UpdateClockv
 4047              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 140


 4048              		.thumb
 4049              		.thumb_func
 4050              		.fpu fpv5-d16
 4052              	_Z11UpdateClockv:
 4053              	.LFB4307:
1575:Veno-Echo.cpp ****     static int divCounter{};
 4054              		.loc 19 1575 1 is_stmt 1 view -0
 4055              		.cfi_startproc
 4056              		@ args = 0, pretend = 0, frame = 0
 4057              		@ frame_needed = 0, uses_anonymous_args = 0
1576:Veno-Echo.cpp ****     ClockIn.Debounce();
 4058              		.loc 19 1576 5 view .LVU1077
1577:Veno-Echo.cpp **** 
 4059              		.loc 19 1577 5 view .LVU1078
1575:Veno-Echo.cpp ****     static int divCounter{};
 4060              		.loc 19 1575 1 is_stmt 0 view .LVU1079
 4061 0000 10B5     		push	{r4, lr}
 4062              		.cfi_def_cfa_offset 8
 4063              		.cfi_offset 4, -8
 4064              		.cfi_offset 14, -4
1577:Veno-Echo.cpp **** 
 4065              		.loc 19 1577 21 view .LVU1080
 4066 0002 184C     		ldr	r4, .L253
 4067 0004 2046     		mov	r0, r4
 4068 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 4069              	.LVL209:
1580:Veno-Echo.cpp ****     {   
 4070              		.loc 19 1580 5 is_stmt 1 view .LVU1081
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 4071              		.loc 1 69 38 view .LVU1082
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 141


1580:Veno-Echo.cpp ****     {   
 4072              		.loc 19 1580 5 is_stmt 0 view .LVU1083
 4073 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 4074 000c 7F2B     		cmp	r3, #127
 4075 000e 00D0     		beq	.L251
 4076              	.L239:
1605:Veno-Echo.cpp **** 
 4077              		.loc 19 1605 1 view .LVU1084
 4078 0010 10BD     		pop	{r4, pc}
 4079              	.L251:
1582:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4080              		.loc 19 1582 9 is_stmt 1 view .LVU1085
1582:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4081              		.loc 19 1582 20 is_stmt 0 view .LVU1086
 4082 0012 0023     		movs	r3, #0
 4083 0014 144C     		ldr	r4, .L253+4
1583:Veno-Echo.cpp ****         if(divCounter == 0)
 4084              		.loc 19 1583 33 view .LVU1087
 4085 0016 1548     		ldr	r0, .L253+8
1582:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 4086              		.loc 19 1582 20 view .LVU1088
 4087 0018 2360     		str	r3, [r4]
1583:Veno-Echo.cpp ****         if(divCounter == 0)
 4088              		.loc 19 1583 9 is_stmt 1 view .LVU1089
1583:Veno-Echo.cpp ****         if(divCounter == 0)
 4089              		.loc 19 1583 33 is_stmt 0 view .LVU1090
 4090 001a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4091              	.LVL210:
1584:Veno-Echo.cpp ****         {
 4092              		.loc 19 1584 9 is_stmt 1 view .LVU1091
 4093 001e 2368     		ldr	r3, [r4]
 4094 0020 002B     		cmp	r3, #0
 4095 0022 F5D1     		bne	.L239
1586:Veno-Echo.cpp ****             {
 4096              		.loc 19 1586 13 view .LVU1092
1586:Veno-Echo.cpp ****             {
 4097              		.loc 19 1586 29 is_stmt 0 view .LVU1093
 4098 0024 1248     		ldr	r0, .L253+12
 4099 0026 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 4100              	.LVL211:
1586:Veno-Echo.cpp ****             {
 4101              		.loc 19 1586 13 view .LVU1094
 4102 002a 0028     		cmp	r0, #0
 4103 002c F0D0     		beq	.L239
1588:Veno-Echo.cpp ****                 if(syncMode)
 4104              		.loc 19 1588 17 is_stmt 1 view .LVU1095
1588:Veno-Echo.cpp ****                 if(syncMode)
 4105              		.loc 19 1588 39 is_stmt 0 view .LVU1096
 4106 002e 1048     		ldr	r0, .L253+12
 4107 0030 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 4108              	.LVL212:
 4109 0034 0D48     		ldr	r0, .L253+8
 4110 0036 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 4111              	.LVL213:
1589:Veno-Echo.cpp ****                 {
 4112              		.loc 19 1589 17 is_stmt 1 view .LVU1097
 4113 003a 0E4B     		ldr	r3, .L253+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 142


 4114 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4115 003e 002B     		cmp	r3, #0
 4116 0040 E6D0     		beq	.L239
 4117              	.LBB1135:
 4118              	.LBI1135:
1574:Veno-Echo.cpp **** {
 4119              		.loc 19 1574 6 view .LVU1098
 4120              	.LBB1136:
1591:Veno-Echo.cpp ****                     {
 4121              		.loc 19 1591 21 view .LVU1099
1591:Veno-Echo.cpp ****                     {
 4122              		.loc 19 1591 30 is_stmt 0 view .LVU1100
 4123 0042 0D4B     		ldr	r3, .L253+20
1591:Veno-Echo.cpp ****                     {
 4124              		.loc 19 1591 21 view .LVU1101
 4125 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 0046 052B     		cmp	r3, #5
 4127 0048 08D9     		bls	.L252
 4128              	.L243:
1596:Veno-Echo.cpp ****                     {
 4129              		.loc 19 1596 21 is_stmt 1 view .LVU1102
1596:Veno-Echo.cpp ****                     {
 4130              		.loc 19 1596 30 is_stmt 0 view .LVU1103
 4131 004a 0C4B     		ldr	r3, .L253+24
1596:Veno-Echo.cpp ****                     {
 4132              		.loc 19 1596 21 view .LVU1104
 4133 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4134 004e 052B     		cmp	r3, #5
 4135 0050 DED8     		bhi	.L239
1598:Veno-Echo.cpp ****                     }
 4136              		.loc 19 1598 25 is_stmt 1 view .LVU1105
1598:Veno-Echo.cpp ****                     }
 4137              		.loc 19 1598 51 is_stmt 0 view .LVU1106
 4138 0052 0B48     		ldr	r0, .L253+28
 4139              	.LBE1136:
 4140              	.LBE1135:
1605:Veno-Echo.cpp **** 
 4141              		.loc 19 1605 1 view .LVU1107
 4142 0054 BDE81040 		pop	{r4, lr}
 4143              		.cfi_remember_state
 4144              		.cfi_restore 14
 4145              		.cfi_restore 4
 4146              		.cfi_def_cfa_offset 0
 4147              	.LBB1138:
 4148              	.LBB1137:
1598:Veno-Echo.cpp ****                     }
 4149              		.loc 19 1598 51 view .LVU1108
 4150 0058 FFF7FEBF 		b	_ZN8TempoLED10resetPhaseEv
 4151              	.LVL214:
 4152              	.L252:
 4153              		.cfi_restore_state
1593:Veno-Echo.cpp ****                     }
 4154              		.loc 19 1593 25 is_stmt 1 view .LVU1109
1593:Veno-Echo.cpp ****                     }
 4155              		.loc 19 1593 51 is_stmt 0 view .LVU1110
 4156 005c 0948     		ldr	r0, .L253+32
 4157 005e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 143


 4158              	.LVL215:
 4159 0062 F2E7     		b	.L243
 4160              	.L254:
 4161              		.align	2
 4162              	.L253:
 4163 0064 00000000 		.word	.LANCHOR70
 4164 0068 00000000 		.word	.LANCHOR71
 4165 006c 00000000 		.word	.LANCHOR72
 4166 0070 00000000 		.word	.LANCHOR73
 4167 0074 00000000 		.word	.LANCHOR74
 4168 0078 00000000 		.word	.LANCHOR75
 4169 007c 00000000 		.word	.LANCHOR76
 4170 0080 04000000 		.word	.LANCHOR1+4
 4171 0084 04000000 		.word	.LANCHOR0+4
 4172              	.LBE1137:
 4173              	.LBE1138:
 4174              		.cfi_endproc
 4175              	.LFE4307:
 4177              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 4178              		.align	1
 4179              		.p2align 2,,3
 4180              		.global	_Z19Update_BaseTempoLEDv
 4181              		.syntax unified
 4182              		.thumb
 4183              		.thumb_func
 4184              		.fpu fpv5-d16
 4186              	_Z19Update_BaseTempoLEDv:
 4187              	.LFB4309:
1742:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4188              		.loc 19 1742 1 is_stmt 1 view -0
 4189              		.cfi_startproc
 4190              		@ args = 0, pretend = 0, frame = 0
 4191              		@ frame_needed = 0, uses_anonymous_args = 0
1743:Veno-Echo.cpp **** 
 4192              		.loc 19 1743 5 view .LVU1112
1743:Veno-Echo.cpp **** 
 4193              		.loc 19 1743 25 is_stmt 0 view .LVU1113
 4194 0000 0F48     		ldr	r0, .L269
1742:Veno-Echo.cpp ****     tempoLED_BASE.update();
 4195              		.loc 19 1742 1 view .LVU1114
 4196 0002 10B5     		push	{r4, lr}
 4197              		.cfi_def_cfa_offset 8
 4198              		.cfi_offset 4, -8
 4199              		.cfi_offset 14, -4
1743:Veno-Echo.cpp **** 
 4200              		.loc 19 1743 25 view .LVU1115
 4201 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 4202              	.LVL216:
1745:Veno-Echo.cpp ****     {
 4203              		.loc 19 1745 5 is_stmt 1 view .LVU1116
1745:Veno-Echo.cpp ****     {
 4204              		.loc 19 1745 27 is_stmt 0 view .LVU1117
 4205 0008 0D48     		ldr	r0, .L269
 4206 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 4207              	.LVL217:
1745:Veno-Echo.cpp ****     {
 4208              		.loc 19 1745 5 view .LVU1118
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 144


 4209 000e 28B1     		cbz	r0, .L255
1747:Veno-Echo.cpp ****         {
 4210              		.loc 19 1747 9 is_stmt 1 view .LVU1119
 4211 0010 0C4C     		ldr	r4, .L269+4
 4212 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4213 0014 4BB9     		cbnz	r3, .L267
1753:Veno-Echo.cpp ****         {
 4214              		.loc 19 1753 9 view .LVU1120
 4215 0016 0C4C     		ldr	r4, .L269+8
 4216 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4217 001a 03B9     		cbnz	r3, .L268
 4218              	.L255:
1760:Veno-Echo.cpp **** 
 4219              		.loc 19 1760 1 is_stmt 0 view .LVU1121
 4220 001c 10BD     		pop	{r4, pc}
 4221              	.L268:
 4222              	.LBB1141:
 4223              	.LBI1141:
1741:Veno-Echo.cpp **** {
 4224              		.loc 19 1741 6 is_stmt 1 view .LVU1122
 4225              	.LBB1142:
1755:Veno-Echo.cpp ****             delayR_flag = false;
 4226              		.loc 19 1755 13 view .LVU1123
1755:Veno-Echo.cpp ****             delayR_flag = false;
 4227              		.loc 19 1755 39 is_stmt 0 view .LVU1124
 4228 001e 0B48     		ldr	r0, .L269+12
 4229 0020 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4230              	.LVL218:
1756:Veno-Echo.cpp ****         }
 4231              		.loc 19 1756 13 is_stmt 1 view .LVU1125
1756:Veno-Echo.cpp ****         }
 4232              		.loc 19 1756 25 is_stmt 0 view .LVU1126
 4233 0024 0023     		movs	r3, #0
 4234 0026 2370     		strb	r3, [r4]
 4235              	.LBE1142:
 4236              	.LBE1141:
1760:Veno-Echo.cpp **** 
 4237              		.loc 19 1760 1 view .LVU1127
 4238 0028 10BD     		pop	{r4, pc}
 4239              	.L267:
1749:Veno-Echo.cpp ****             delayL_flag = false;
 4240              		.loc 19 1749 13 is_stmt 1 view .LVU1128
1749:Veno-Echo.cpp ****             delayL_flag = false;
 4241              		.loc 19 1749 39 is_stmt 0 view .LVU1129
 4242 002a 0948     		ldr	r0, .L269+16
 4243 002c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 4244              	.LVL219:
1750:Veno-Echo.cpp ****         }
 4245              		.loc 19 1750 13 is_stmt 1 view .LVU1130
1750:Veno-Echo.cpp ****         }
 4246              		.loc 19 1750 25 is_stmt 0 view .LVU1131
 4247 0030 0023     		movs	r3, #0
 4248 0032 2370     		strb	r3, [r4]
1753:Veno-Echo.cpp ****         {
 4249              		.loc 19 1753 9 is_stmt 1 view .LVU1132
 4250 0034 044C     		ldr	r4, .L269+8
 4251 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 145


 4252 0038 002B     		cmp	r3, #0
 4253 003a EFD0     		beq	.L255
 4254 003c EFE7     		b	.L268
 4255              	.L270:
 4256 003e 00BF     		.align	2
 4257              	.L269:
 4258 0040 00000000 		.word	.LANCHOR72
 4259 0044 00000000 		.word	.LANCHOR77
 4260 0048 00000000 		.word	.LANCHOR78
 4261 004c 04000000 		.word	.LANCHOR1+4
 4262 0050 04000000 		.word	.LANCHOR0+4
 4263              		.cfi_endproc
 4264              	.LFE4309:
 4266              		.section	.text._Z11SetTempoDivfP9TempoDivs,"ax",%progbits
 4267              		.align	1
 4268              		.p2align 2,,3
 4269              		.global	_Z11SetTempoDivfP9TempoDivs
 4270              		.syntax unified
 4271              		.thumb
 4272              		.thumb_func
 4273              		.fpu fpv5-d16
 4275              	_Z11SetTempoDivfP9TempoDivs:
 4276              	.LVL220:
 4277              	.LFB4310:
1764:Veno-Echo.cpp **** 
 4278              		.loc 19 1764 1 view -0
 4279              		.cfi_startproc
 4280              		@ args = 0, pretend = 0, frame = 0
 4281              		@ frame_needed = 0, uses_anonymous_args = 0
 4282              		@ link register save eliminated.
1766:Veno-Echo.cpp **** 
 4283              		.loc 19 1766 5 view .LVU1134
1768:Veno-Echo.cpp ****     {
 4284              		.loc 19 1768 5 view .LVU1135
 4285 0000 DFED417A 		vldr.32	s15, .L317
 4286 0004 B4EEE70A 		vcmpe.f32	s0, s15
 4287 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4288 000c 04D5     		bpl	.L305
1770:Veno-Echo.cpp ****         *div = DIV6;
 4289              		.loc 19 1770 9 view .LVU1136
 4290              	.LVL221:
1771:Veno-Echo.cpp ****     }
 4291              		.loc 19 1771 9 view .LVU1137
1771:Veno-Echo.cpp ****     }
 4292              		.loc 19 1771 14 is_stmt 0 view .LVU1138
 4293 000e 0023     		movs	r3, #0
1770:Veno-Echo.cpp ****         *div = DIV6;
 4294              		.loc 19 1770 16 view .LVU1139
 4295 0010 9FED3E0A 		vldr.32	s0, .L317+4
 4296              	.LVL222:
1771:Veno-Echo.cpp ****     }
 4297              		.loc 19 1771 14 view .LVU1140
 4298 0014 0370     		strb	r3, [r0]
 4299 0016 7047     		bx	lr
 4300              	.LVL223:
 4301              	.L305:
1774:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 146


 4302              		.loc 19 1774 10 is_stmt 1 view .LVU1141
 4303 0018 DFED3D7A 		vldr.32	s15, .L317+8
 4304 001c B4EEE70A 		vcmpe.f32	s0, s15
 4305 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4306 0024 04D5     		bpl	.L306
1776:Veno-Echo.cpp ****        *div = DIV5;
 4307              		.loc 19 1776 8 view .LVU1142
 4308              	.LVL224:
1777:Veno-Echo.cpp ****     }
 4309              		.loc 19 1777 8 view .LVU1143
1777:Veno-Echo.cpp ****     }
 4310              		.loc 19 1777 13 is_stmt 0 view .LVU1144
 4311 0026 0123     		movs	r3, #1
1776:Veno-Echo.cpp ****        *div = DIV5;
 4312              		.loc 19 1776 15 view .LVU1145
 4313 0028 9FED3A0A 		vldr.32	s0, .L317+12
 4314              	.LVL225:
1777:Veno-Echo.cpp ****     }
 4315              		.loc 19 1777 13 view .LVU1146
 4316 002c 0370     		strb	r3, [r0]
 4317 002e 7047     		bx	lr
 4318              	.LVL226:
 4319              	.L306:
1780:Veno-Echo.cpp ****     {
 4320              		.loc 19 1780 10 is_stmt 1 view .LVU1147
 4321 0030 DFED397A 		vldr.32	s15, .L317+16
 4322 0034 B4EEE70A 		vcmpe.f32	s0, s15
 4323 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4324 003c 0BD4     		bmi	.L315
1786:Veno-Echo.cpp ****     {
 4325              		.loc 19 1786 10 view .LVU1148
 4326 003e DFED377A 		vldr.32	s15, .L317+20
 4327 0042 B4EEE70A 		vcmpe.f32	s0, s15
 4328 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4329 004a 09D5     		bpl	.L308
1788:Veno-Echo.cpp ****         *div = DIV3;
 4330              		.loc 19 1788 9 view .LVU1149
 4331              	.LVL227:
1789:Veno-Echo.cpp ****     }
 4332              		.loc 19 1789 9 view .LVU1150
1789:Veno-Echo.cpp ****     }
 4333              		.loc 19 1789 14 is_stmt 0 view .LVU1151
 4334 004c 0323     		movs	r3, #3
1788:Veno-Echo.cpp ****         *div = DIV3;
 4335              		.loc 19 1788 16 view .LVU1152
 4336 004e 9FED340A 		vldr.32	s0, .L317+24
 4337              	.LVL228:
1789:Veno-Echo.cpp ****     }
 4338              		.loc 19 1789 14 view .LVU1153
 4339 0052 0370     		strb	r3, [r0]
 4340 0054 7047     		bx	lr
 4341              	.LVL229:
 4342              	.L315:
1782:Veno-Echo.cpp ****         *div = DIV4;
 4343              		.loc 19 1782 9 is_stmt 1 view .LVU1154
1783:Veno-Echo.cpp ****     }
 4344              		.loc 19 1783 9 view .LVU1155
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 147


1783:Veno-Echo.cpp ****     }
 4345              		.loc 19 1783 14 is_stmt 0 view .LVU1156
 4346 0056 0223     		movs	r3, #2
1782:Veno-Echo.cpp ****         *div = DIV4;
 4347              		.loc 19 1782 16 view .LVU1157
 4348 0058 B5EE000A 		vmov.f32	s0, #2.5e-1
 4349              	.LVL230:
1783:Veno-Echo.cpp ****     }
 4350              		.loc 19 1783 14 view .LVU1158
 4351 005c 0370     		strb	r3, [r0]
 4352 005e 7047     		bx	lr
 4353              	.LVL231:
 4354              	.L308:
1792:Veno-Echo.cpp ****     {
 4355              		.loc 19 1792 10 is_stmt 1 view .LVU1159
 4356 0060 DFED307A 		vldr.32	s15, .L317+28
 4357 0064 B4EEE70A 		vcmpe.f32	s0, s15
 4358 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4359 006c 0BD4     		bmi	.L316
1798:Veno-Echo.cpp ****     {
 4360              		.loc 19 1798 10 view .LVU1160
 4361 006e DFED2E7A 		vldr.32	s15, .L317+32
 4362 0072 B4EEE70A 		vcmpe.f32	s0, s15
 4363 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4364 007a 09D5     		bpl	.L310
 4365              	.L293:
1800:Veno-Echo.cpp ****         *div = UNITY;
 4366              		.loc 19 1800 9 view .LVU1161
 4367              	.LVL232:
1801:Veno-Echo.cpp ****     }
 4368              		.loc 19 1801 9 view .LVU1162
1801:Veno-Echo.cpp ****     }
 4369              		.loc 19 1801 14 is_stmt 0 view .LVU1163
 4370 007c 0523     		movs	r3, #5
1800:Veno-Echo.cpp ****         *div = UNITY;
 4371              		.loc 19 1800 16 view .LVU1164
 4372 007e B7EE000A 		vmov.f32	s0, #1.0e+0
 4373              	.LVL233:
1801:Veno-Echo.cpp ****     }
 4374              		.loc 19 1801 14 view .LVU1165
 4375 0082 0370     		strb	r3, [r0]
 4376 0084 7047     		bx	lr
 4377              	.LVL234:
 4378              	.L316:
1794:Veno-Echo.cpp ****         *div = DIV2;
 4379              		.loc 19 1794 9 is_stmt 1 view .LVU1166
1795:Veno-Echo.cpp ****     }
 4380              		.loc 19 1795 9 view .LVU1167
1795:Veno-Echo.cpp ****     }
 4381              		.loc 19 1795 14 is_stmt 0 view .LVU1168
 4382 0086 0423     		movs	r3, #4
1794:Veno-Echo.cpp ****         *div = DIV2;
 4383              		.loc 19 1794 16 view .LVU1169
 4384 0088 B6EE000A 		vmov.f32	s0, #5.0e-1
 4385              	.LVL235:
1795:Veno-Echo.cpp ****     }
 4386              		.loc 19 1795 14 view .LVU1170
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 148


 4387 008c 0370     		strb	r3, [r0]
 4388 008e 7047     		bx	lr
 4389              	.LVL236:
 4390              	.L310:
1804:Veno-Echo.cpp ****     {
 4391              		.loc 19 1804 10 is_stmt 1 view .LVU1171
 4392 0090 DFED267A 		vldr.32	s15, .L317+36
 4393 0094 B4EEE70A 		vcmpe.f32	s0, s15
 4394 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4395 009c 04D5     		bpl	.L311
1806:Veno-Echo.cpp ****         *div = MULT2;
 4396              		.loc 19 1806 9 view .LVU1172
 4397              	.LVL237:
1807:Veno-Echo.cpp ****     }
 4398              		.loc 19 1807 9 view .LVU1173
1807:Veno-Echo.cpp ****     }
 4399              		.loc 19 1807 14 is_stmt 0 view .LVU1174
 4400 009e 0623     		movs	r3, #6
1806:Veno-Echo.cpp ****         *div = MULT2;
 4401              		.loc 19 1806 16 view .LVU1175
 4402 00a0 B0EE000A 		vmov.f32	s0, #2.0e+0
 4403              	.LVL238:
1807:Veno-Echo.cpp ****     }
 4404              		.loc 19 1807 14 view .LVU1176
 4405 00a4 0370     		strb	r3, [r0]
 4406 00a6 7047     		bx	lr
 4407              	.LVL239:
 4408              	.L311:
1810:Veno-Echo.cpp ****     {
 4409              		.loc 19 1810 10 is_stmt 1 view .LVU1177
 4410 00a8 DFED217A 		vldr.32	s15, .L317+40
 4411 00ac B4EEE70A 		vcmpe.f32	s0, s15
 4412 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4413 00b4 04D5     		bpl	.L312
1812:Veno-Echo.cpp ****         *div = MULT3;
 4414              		.loc 19 1812 9 view .LVU1178
 4415              	.LVL240:
1813:Veno-Echo.cpp ****     }
 4416              		.loc 19 1813 9 view .LVU1179
1813:Veno-Echo.cpp ****     }
 4417              		.loc 19 1813 14 is_stmt 0 view .LVU1180
 4418 00b6 0723     		movs	r3, #7
1812:Veno-Echo.cpp ****         *div = MULT3;
 4419              		.loc 19 1812 16 view .LVU1181
 4420 00b8 B0EE080A 		vmov.f32	s0, #3.0e+0
 4421              	.LVL241:
1813:Veno-Echo.cpp ****     }
 4422              		.loc 19 1813 14 view .LVU1182
 4423 00bc 0370     		strb	r3, [r0]
 4424 00be 7047     		bx	lr
 4425              	.LVL242:
 4426              	.L312:
1816:Veno-Echo.cpp ****     {
 4427              		.loc 19 1816 10 is_stmt 1 view .LVU1183
 4428 00c0 DFED1C7A 		vldr.32	s15, .L317+44
 4429 00c4 B4EEE70A 		vcmpe.f32	s0, s15
 4430 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 149


 4431 00cc 04D5     		bpl	.L313
1818:Veno-Echo.cpp ****         *div = MULT4;
 4432              		.loc 19 1818 9 view .LVU1184
 4433              	.LVL243:
1819:Veno-Echo.cpp ****     }
 4434              		.loc 19 1819 9 view .LVU1185
1819:Veno-Echo.cpp ****     }
 4435              		.loc 19 1819 14 is_stmt 0 view .LVU1186
 4436 00ce 0823     		movs	r3, #8
1818:Veno-Echo.cpp ****         *div = MULT4;
 4437              		.loc 19 1818 16 view .LVU1187
 4438 00d0 B1EE000A 		vmov.f32	s0, #4.0e+0
 4439              	.LVL244:
1819:Veno-Echo.cpp ****     }
 4440              		.loc 19 1819 14 view .LVU1188
 4441 00d4 0370     		strb	r3, [r0]
 4442 00d6 7047     		bx	lr
 4443              	.LVL245:
 4444              	.L313:
 4445              	.LBB1145:
 4446              	.LBI1145:
1763:Veno-Echo.cpp **** {
 4447              		.loc 19 1763 7 is_stmt 1 view .LVU1189
 4448              	.LBB1146:
1822:Veno-Echo.cpp ****     {
 4449              		.loc 19 1822 10 view .LVU1190
 4450 00d8 DFED177A 		vldr.32	s15, .L317+48
 4451 00dc B4EEE70A 		vcmpe.f32	s0, s15
 4452 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4453 00e4 04D5     		bpl	.L314
1824:Veno-Echo.cpp ****         *div = MULT5;
 4454              		.loc 19 1824 9 view .LVU1191
 4455              	.LVL246:
1825:Veno-Echo.cpp ****     }
 4456              		.loc 19 1825 9 view .LVU1192
1825:Veno-Echo.cpp ****     }
 4457              		.loc 19 1825 14 is_stmt 0 view .LVU1193
 4458 00e6 0923     		movs	r3, #9
1824:Veno-Echo.cpp ****         *div = MULT5;
 4459              		.loc 19 1824 16 view .LVU1194
 4460 00e8 B1EE040A 		vmov.f32	s0, #5.0e+0
 4461              	.LVL247:
1825:Veno-Echo.cpp ****     }
 4462              		.loc 19 1825 14 view .LVU1195
 4463 00ec 0370     		strb	r3, [r0]
 4464 00ee 7047     		bx	lr
 4465              	.LVL248:
 4466              	.L314:
1828:Veno-Echo.cpp ****     {
 4467              		.loc 19 1828 10 is_stmt 1 view .LVU1196
 4468 00f0 F7EE007A 		vmov.f32	s15, #1.0e+0
 4469 00f4 B4EEE70A 		vcmpe.f32	s0, s15
 4470 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4471 00fc BED8     		bhi	.L293
1830:Veno-Echo.cpp ****        *div = MULT6;
 4472              		.loc 19 1830 8 view .LVU1197
 4473              	.LVL249:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 150


1831:Veno-Echo.cpp ****     }
 4474              		.loc 19 1831 8 view .LVU1198
1831:Veno-Echo.cpp ****     }
 4475              		.loc 19 1831 13 is_stmt 0 view .LVU1199
 4476 00fe 0A23     		movs	r3, #10
1830:Veno-Echo.cpp ****        *div = MULT6;
 4477              		.loc 19 1830 15 view .LVU1200
 4478 0100 B1EE080A 		vmov.f32	s0, #6.0e+0
 4479              	.LVL250:
1830:Veno-Echo.cpp ****        *div = MULT6;
 4480              		.loc 19 1830 15 view .LVU1201
 4481              	.LBE1146:
 4482              	.LBE1145:
1839:Veno-Echo.cpp **** 
 4483              		.loc 19 1839 1 is_stmt 1 view .LVU1202
 4484              	.LBB1148:
 4485              	.LBB1147:
1831:Veno-Echo.cpp ****     }
 4486              		.loc 19 1831 13 is_stmt 0 view .LVU1203
 4487 0104 0370     		strb	r3, [r0]
 4488              	.LBE1147:
 4489              	.LBE1148:
1841:Veno-Echo.cpp **** 
 4490              		.loc 19 1841 1 view .LVU1204
 4491 0106 7047     		bx	lr
 4492              	.L318:
 4493              		.align	2
 4494              	.L317:
 4495 0108 C729BA3D 		.word	1035610567
 4496 010c ABAA2A3E 		.word	1042983595
 4497 0110 C7293A3E 		.word	1043999175
 4498 0114 CDCC4C3E 		.word	1045220557
 4499 0118 569F8B3E 		.word	1049337686
 4500 011c C729BA3E 		.word	1052387783
 4501 0120 ABAAAA3E 		.word	1051372203
 4502 0124 39B4E83E 		.word	1055437881
 4503 0128 E3A50B3F 		.word	1057727971
 4504 012c 1CEB223F 		.word	1059253020
 4505 0130 55303A3F 		.word	1060778069
 4506 0134 8E75513F 		.word	1062303118
 4507 0138 C7BA683F 		.word	1063828167
 4508              		.cfi_endproc
 4509              	.LFE4310:
 4511              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 4512              		.align	1
 4513              		.p2align 2,,3
 4514              		.global	_Z17Update_DelayTimeRv
 4515              		.syntax unified
 4516              		.thumb
 4517              		.thumb_func
 4518              		.fpu fpv5-d16
 4520              	_Z17Update_DelayTimeRv:
 4521              	.LFB4294:
 904:Veno-Echo.cpp ****     static bool lastShift{};
 4522              		.loc 19 904 1 is_stmt 1 view -0
 4523              		.cfi_startproc
 4524              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 151


 4525              		@ frame_needed = 0, uses_anonymous_args = 0
 905:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 4526              		.loc 19 905 5 view .LVU1206
 906:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 4527              		.loc 19 906 5 view .LVU1207
 907:Veno-Echo.cpp ****     
 4528              		.loc 19 907 5 view .LVU1208
 909:Veno-Echo.cpp **** 
 4529              		.loc 19 909 5 view .LVU1209
 912:Veno-Echo.cpp **** 
 4530              		.loc 19 912 5 view .LVU1210
 904:Veno-Echo.cpp ****     static bool lastShift{};
 4531              		.loc 19 904 1 is_stmt 0 view .LVU1211
 4532 0000 10B5     		push	{r4, lr}
 4533              		.cfi_def_cfa_offset 8
 4534              		.cfi_offset 4, -8
 4535              		.cfi_offset 14, -4
 912:Veno-Echo.cpp **** 
 4536              		.loc 19 912 44 view .LVU1212
 4537 0002 0622     		movs	r2, #6
 4538 0004 0721     		movs	r1, #7
 4539 0006 7548     		ldr	r0, .L354
 904:Veno-Echo.cpp ****     static bool lastShift{};
 4540              		.loc 19 904 1 view .LVU1213
 4541 0008 2DED028B 		vpush.64	{d8}
 4542              		.cfi_def_cfa_offset 16
 4543              		.cfi_offset 80, -16
 4544              		.cfi_offset 81, -12
 912:Veno-Echo.cpp **** 
 4545              		.loc 19 912 44 view .LVU1214
 4546 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4547              	.LVL251:
 917:Veno-Echo.cpp **** 
 4548              		.loc 19 917 26 view .LVU1215
 4549 0010 7349     		ldr	r1, .L354+4
 917:Veno-Echo.cpp **** 
 4550              		.loc 19 917 31 view .LVU1216
 4551 0012 744B     		ldr	r3, .L354+8
 4552              	.LVL252:
 916:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 4553              		.loc 19 916 5 is_stmt 1 view .LVU1217
 917:Veno-Echo.cpp **** 
 4554              		.loc 19 917 5 view .LVU1218
 917:Veno-Echo.cpp **** 
 4555              		.loc 19 917 26 is_stmt 0 view .LVU1219
 4556 0014 0A68     		ldr	r2, [r1]
 4557              	.LBB1149:
 919:Veno-Echo.cpp ****     {
 4558              		.loc 19 919 9 view .LVU1220
 4559 0016 7448     		ldr	r0, .L354+12
 4560              	.LBE1149:
 917:Veno-Echo.cpp **** 
 4561              		.loc 19 917 26 view .LVU1221
 4562 0018 0132     		adds	r2, r2, #1
 4563              	.LBB1191:
 919:Veno-Echo.cpp ****     {
 4564              		.loc 19 919 5 view .LVU1222
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 152


 4565 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4566              	.LBE1191:
 917:Veno-Echo.cpp **** 
 4567              		.loc 19 917 31 view .LVU1223
 4568 001c 83FB0243 		smull	r4, r3, r3, r2
 4569 0020 D417     		asrs	r4, r2, #31
 4570 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 4571 0026 03EB4303 		add	r3, r3, r3, lsl #1
 4572 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 4573              	.LBB1192:
 4574              	.LBB1150:
 923:Veno-Echo.cpp ****         {
 4575              		.loc 19 923 19 view .LVU1224
 4576 002e 6F4A     		ldr	r2, .L354+16
 4577              	.LBE1150:
 4578              	.LBE1192:
 917:Veno-Echo.cpp **** 
 4579              		.loc 19 917 14 view .LVU1225
 4580 0030 0B60     		str	r3, [r1]
 919:Veno-Echo.cpp ****     {
 4581              		.loc 19 919 5 is_stmt 1 view .LVU1226
 4582              	.LBB1193:
 4583 0032 0028     		cmp	r0, #0
 4584 0034 40F08880 		bne	.L320
 4585              	.LBB1171:
 921:Veno-Echo.cpp ****         //udpate pickup
 4586              		.loc 19 921 9 view .LVU1227
 923:Veno-Echo.cpp ****         {
 4587              		.loc 19 923 9 view .LVU1228
 4588 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4589 003a 0029     		cmp	r1, #0
 4590 003c 41D0     		beq	.L321
 925:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 4591              		.loc 19 925 13 view .LVU1229
 926:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 4592              		.loc 19 926 31 is_stmt 0 view .LVU1230
 4593 003e 6C4C     		ldr	r4, .L354+20
 927:Veno-Echo.cpp ****         } 
 4594              		.loc 19 927 28 view .LVU1231
 4595 0040 6C49     		ldr	r1, .L354+24
 925:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 4596              		.loc 19 925 23 view .LVU1232
 4597 0042 1070     		strb	r0, [r2]
 926:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 4598              		.loc 19 926 13 is_stmt 1 view .LVU1233
 926:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 4599              		.loc 19 926 31 is_stmt 0 view .LVU1234
 4600 0044 2070     		strb	r0, [r4]
 927:Veno-Echo.cpp ****         } 
 4601              		.loc 19 927 13 is_stmt 1 view .LVU1235
 927:Veno-Echo.cpp ****         } 
 4602              		.loc 19 927 28 is_stmt 0 view .LVU1236
 4603 0046 81ED000A 		vstr.32	s0, [r1]
 4604              	.L322:
 940:Veno-Echo.cpp **** 
 4605              		.loc 19 940 9 is_stmt 1 view .LVU1237
 4606              	.LVL253:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 153


 942:Veno-Echo.cpp ****         {
 4607              		.loc 19 942 9 view .LVU1238
 950:Veno-Echo.cpp ****         }
 4608              		.loc 19 950 13 view .LVU1239
 4609              	.LBB1151:
 4610              	.LBI1151:
2029:Veno-Echo.cpp **** {
 4611              		.loc 19 2029 7 view .LVU1240
 4612              	.LBB1152:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4613              		.loc 19 2031 5 view .LVU1241
2032:Veno-Echo.cpp **** 
 4614              		.loc 19 2032 5 view .LVU1242
 4615              	.LBE1152:
 4616              	.LBE1151:
 950:Veno-Echo.cpp ****         }
 4617              		.loc 19 950 36 is_stmt 0 view .LVU1243
 4618 004a 6B49     		ldr	r1, .L354+28
 4619              	.LBB1157:
 4620              	.LBB1153:
2032:Veno-Echo.cpp **** 
 4621              		.loc 19 2032 39 view .LVU1244
 4622 004c B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 4623              		.loc 19 2032 49 view .LVU1245
 4624 0050 B6EE006A 		vmov.f32	s12, #5.0e-1
 4625              	.LBE1153:
 4626              	.LBE1157:
 950:Veno-Echo.cpp ****         }
 4627              		.loc 19 950 36 view .LVU1246
 4628 0054 694A     		ldr	r2, .L354+32
 4629              	.LBB1158:
 4630              	.LBB1154:
2032:Veno-Echo.cpp **** 
 4631              		.loc 19 2032 39 view .LVU1247
 4632 0056 D1ED007A 		vldr.32	s15, [r1]
2032:Veno-Echo.cpp **** 
 4633              		.loc 19 2032 12 view .LVU1248
 4634 005a F0EE006A 		vmov.f32	s13, #2.0e+0
 4635 005e 92ED008A 		vldr.32	s16, [r2]
2032:Veno-Echo.cpp **** 
 4636              		.loc 19 2032 39 view .LVU1249
 4637 0062 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 4638              		.loc 19 2032 49 view .LVU1250
 4639 0066 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 4640              		.loc 19 2032 12 view .LVU1251
 4641 006a A7EEA68A 		vfma.f32	s16, s15, s13
 4642              	.LVL254:
2034:Veno-Echo.cpp ****     {
 4643              		.loc 19 2034 5 is_stmt 1 view .LVU1252
 4644 006e B5EEC08A 		vcmpe.f32	s16, #0
 4645 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4646 0076 76D4     		bmi	.L351
2039:Veno-Echo.cpp ****     {
 4647              		.loc 19 2039 5 view .LVU1253
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 154


2041:Veno-Echo.cpp ****     }
 4648              		.loc 19 2041 16 is_stmt 0 view .LVU1254
 4649 0078 B4EE478A 		vcmp.f32	s16, s14
 4650              	.LBE1154:
 4651              	.LBE1158:
 953:Veno-Echo.cpp ****         {
 4652              		.loc 19 953 13 view .LVU1255
 4653 007c 604A     		ldr	r2, .L354+36
 953:Veno-Echo.cpp ****         {
 4654              		.loc 19 953 9 view .LVU1256
 4655 007e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4656              	.LBB1159:
 4657              	.LBB1155:
2041:Veno-Echo.cpp ****     }
 4658              		.loc 19 2041 16 view .LVU1257
 4659 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4660 0084 37FE088A 		vselgt.f32	s16, s14, s16
 4661              	.LVL255:
2041:Veno-Echo.cpp ****     }
 4662              		.loc 19 2041 16 view .LVU1258
 4663              	.LBE1155:
 4664              	.LBE1159:
 953:Veno-Echo.cpp ****         {
 4665              		.loc 19 953 9 is_stmt 1 view .LVU1259
 4666 0088 002A     		cmp	r2, #0
 4667 008a 50D0     		beq	.L352
 4668              	.L329:
 963:Veno-Echo.cpp ****             {
 4669              		.loc 19 963 13 view .LVU1260
 4670 008c 002B     		cmp	r3, #0
 4671 008e 64D1     		bne	.L319
 966:Veno-Echo.cpp ****                 {
 4672              		.loc 19 966 17 view .LVU1261
 966:Veno-Echo.cpp ****                 {
 4673              		.loc 19 966 62 is_stmt 0 view .LVU1262
 4674 0090 5C48     		ldr	r0, .L354+40
 4675 0092 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 4676              	.LVL256:
 966:Veno-Echo.cpp ****                 {
 4677              		.loc 19 966 86 view .LVU1263
 4678 0096 5C48     		ldr	r0, .L354+44
 966:Veno-Echo.cpp ****                 {
 4679              		.loc 19 966 62 view .LVU1264
 4680 0098 B0EE407A 		vmov.f32	s14, s0
 966:Veno-Echo.cpp ****                 {
 4681              		.loc 19 966 86 view .LVU1265
 4682 009c B0EE480A 		vmov.f32	s0, s16
 4683 00a0 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 4684              	.LVL257:
 966:Veno-Echo.cpp ****                 {
 4685              		.loc 19 966 65 view .LVU1266
 4686 00a4 DFED597A 		vldr.32	s15, .L354+48
 966:Veno-Echo.cpp ****                 {
 4687              		.loc 19 966 39 view .LVU1267
 4688 00a8 5948     		ldr	r0, .L354+52
 966:Veno-Echo.cpp ****                 {
 4689              		.loc 19 966 65 view .LVU1268
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 155


 4690 00aa 27EE277A 		vmul.f32	s14, s14, s15
 966:Veno-Echo.cpp ****                 {
 4691              		.loc 19 966 39 view .LVU1269
 4692 00ae 27EE000A 		vmul.f32	s0, s14, s0
 4693 00b2 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 4694              	.LVL258:
 966:Veno-Echo.cpp ****                 {
 4695              		.loc 19 966 17 view .LVU1270
 4696 00b6 0028     		cmp	r0, #0
 4697 00b8 4FD0     		beq	.L319
 968:Veno-Echo.cpp ****                 }
 4698              		.loc 19 968 21 is_stmt 1 view .LVU1271
 968:Veno-Echo.cpp ****                 }
 4699              		.loc 19 968 33 is_stmt 0 view .LVU1272
 4700 00ba 564B     		ldr	r3, .L354+56
 4701 00bc 0122     		movs	r2, #1
 4702 00be 1A70     		strb	r2, [r3]
 4703 00c0 4BE0     		b	.L319
 4704              	.LVL259:
 4705              	.L321:
 931:Veno-Echo.cpp ****             {
 4706              		.loc 19 931 13 is_stmt 1 view .LVU1273
 931:Veno-Echo.cpp ****             {
 4707              		.loc 19 931 16 is_stmt 0 view .LVU1274
 4708 00c2 4B4A     		ldr	r2, .L354+20
 931:Veno-Echo.cpp ****             {
 4709              		.loc 19 931 13 view .LVU1275
 4710 00c4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4711 00c6 79B9     		cbnz	r1, .L323
 933:Veno-Echo.cpp ****                 {
 4712              		.loc 19 933 17 is_stmt 1 view .LVU1276
 4713              	.LVL260:
 4714              	.LBB1160:
 4715              	.LBI1160:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4716              		.loc 20 75 3 view .LVU1277
 4717              	.LBB1161:
 4718              		.loc 20 76 5 view .LVU1278
 4719              		.loc 20 76 5 is_stmt 0 view .LVU1279
 4720              	.LBE1161:
 4721              	.LBE1160:
 933:Veno-Echo.cpp ****                 {
 4722              		.loc 19 933 23 view .LVU1280
 4723 00c8 4A49     		ldr	r1, .L354+24
 933:Veno-Echo.cpp ****                 {
 4724              		.loc 19 933 17 view .LVU1281
 4725 00ca 9FED537A 		vldr.32	s14, .L354+60
 933:Veno-Echo.cpp ****                 {
 4726              		.loc 19 933 23 view .LVU1282
 4727 00ce D1ED007A 		vldr.32	s15, [r1]
 4728 00d2 70EE677A 		vsub.f32	s15, s0, s15
 4729              	.LBB1163:
 4730              	.LBB1162:
 4731              		.loc 20 76 31 view .LVU1283
 4732 00d6 F0EEE77A 		vabs.f32	s15, s15
 4733              	.LBE1162:
 4734              	.LBE1163:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 156


 933:Veno-Echo.cpp ****                 {
 4735              		.loc 19 933 17 view .LVU1284
 4736 00da F4EEC77A 		vcmpe.f32	s15, s14
 4737 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4738 00e2 B2DD     		ble	.L322
 935:Veno-Echo.cpp ****                 }
 4739              		.loc 19 935 21 is_stmt 1 view .LVU1285
 935:Veno-Echo.cpp ****                 }
 4740              		.loc 19 935 39 is_stmt 0 view .LVU1286
 4741 00e4 0121     		movs	r1, #1
 4742 00e6 1170     		strb	r1, [r2]
 4743              	.L323:
 940:Veno-Echo.cpp **** 
 4744              		.loc 19 940 9 is_stmt 1 view .LVU1287
 4745              	.LVL261:
 942:Veno-Echo.cpp ****         {
 4746              		.loc 19 942 9 view .LVU1288
 944:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 4747              		.loc 19 944 13 view .LVU1289
 4748              	.LBB1164:
 4749              	.LBI1164:
2029:Veno-Echo.cpp **** {
 4750              		.loc 19 2029 7 view .LVU1290
 4751              	.LBB1165:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4752              		.loc 19 2031 5 view .LVU1291
2032:Veno-Echo.cpp **** 
 4753              		.loc 19 2032 5 view .LVU1292
 4754              	.LBE1165:
 4755              	.LBE1164:
 944:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 4756              		.loc 19 944 36 is_stmt 0 view .LVU1293
 4757 00e8 434A     		ldr	r2, .L354+28
 4758              	.LBB1168:
 4759              	.LBB1166:
2032:Veno-Echo.cpp **** 
 4760              		.loc 19 2032 39 view .LVU1294
 4761 00ea B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 4762              		.loc 19 2032 49 view .LVU1295
 4763 00ee B6EE006A 		vmov.f32	s12, #5.0e-1
2032:Veno-Echo.cpp **** 
 4764              		.loc 19 2032 39 view .LVU1296
 4765 00f2 D2ED007A 		vldr.32	s15, [r2]
2032:Veno-Echo.cpp **** 
 4766              		.loc 19 2032 12 view .LVU1297
 4767 00f6 F0EE006A 		vmov.f32	s13, #2.0e+0
 4768 00fa B0EE408A 		vmov.f32	s16, s0
2032:Veno-Echo.cpp **** 
 4769              		.loc 19 2032 39 view .LVU1298
 4770 00fe 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 4771              		.loc 19 2032 49 view .LVU1299
 4772 0102 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 4773              		.loc 19 2032 12 view .LVU1300
 4774 0106 A7EEA68A 		vfma.f32	s16, s15, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 157


 4775              	.LVL262:
2034:Veno-Echo.cpp ****     {
 4776              		.loc 19 2034 5 is_stmt 1 view .LVU1301
 4777 010a B5EEC08A 		vcmpe.f32	s16, #0
 4778 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4779 0112 25D4     		bmi	.L353
2039:Veno-Echo.cpp ****     {
 4780              		.loc 19 2039 5 view .LVU1302
2041:Veno-Echo.cpp ****     }
 4781              		.loc 19 2041 16 is_stmt 0 view .LVU1303
 4782 0114 B4EE478A 		vcmp.f32	s16, s14
 4783 0118 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4784 011c 37FE088A 		vselgt.f32	s16, s14, s16
 4785              	.LVL263:
 4786              	.L325:
 4787              		.loc 19 2044 5 is_stmt 1 view .LVU1304
 4788              		.loc 19 2044 5 is_stmt 0 view .LVU1305
 4789              	.LBE1166:
 4790              	.LBE1168:
 945:Veno-Echo.cpp ****         }
 4791              		.loc 19 945 13 is_stmt 1 view .LVU1306
 945:Veno-Echo.cpp ****         }
 4792              		.loc 19 945 29 is_stmt 0 view .LVU1307
 4793 0120 364A     		ldr	r2, .L354+32
 4794 0122 82ED000A 		vstr.32	s0, [r2]
 4795              	.LVL264:
 4796              	.L327:
 953:Veno-Echo.cpp ****         {
 4797              		.loc 19 953 9 is_stmt 1 view .LVU1308
 953:Veno-Echo.cpp ****         {
 4798              		.loc 19 953 13 is_stmt 0 view .LVU1309
 4799 0126 364A     		ldr	r2, .L354+36
 953:Veno-Echo.cpp ****         {
 4800              		.loc 19 953 9 view .LVU1310
 4801 0128 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4802 012a 002A     		cmp	r2, #0
 4803 012c AED1     		bne	.L329
 4804              	.L352:
 955:Veno-Echo.cpp ****             {
 4805              		.loc 19 955 13 is_stmt 1 view .LVU1311
 4806 012e A3B9     		cbnz	r3, .L319
 957:Veno-Echo.cpp ****             }
 4807              		.loc 19 957 17 view .LVU1312
 957:Veno-Echo.cpp ****             }
 4808              		.loc 19 957 40 is_stmt 0 view .LVU1313
 4809 0130 B7EE000A 		vmov.f32	s0, #1.0e+0
 4810              	.LVL265:
 957:Veno-Echo.cpp ****             }
 4811              		.loc 19 957 40 view .LVU1314
 4812 0134 0121     		movs	r1, #1
 4813 0136 3648     		ldr	r0, .L354+52
 4814 0138 30EE480A 		vsub.f32	s0, s0, s16
 4815              	.LBE1171:
 4816              	.LBE1193:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4817              		.loc 19 1007 1 view .LVU1315
 4818 013c BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 158


 4819              		.cfi_remember_state
 4820              		.cfi_restore 80
 4821              		.cfi_restore 81
 4822              		.cfi_def_cfa_offset 8
 4823              	.LVL266:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4824              		.loc 19 1007 1 view .LVU1316
 4825 0140 BDE81040 		pop	{r4, lr}
 4826              		.cfi_restore 14
 4827              		.cfi_restore 4
 4828              		.cfi_def_cfa_offset 0
 4829              	.LBB1194:
 4830              	.LBB1172:
 957:Veno-Echo.cpp ****             }
 4831              		.loc 19 957 40 view .LVU1317
 4832 0144 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 4833              	.LVL267:
 4834              	.L320:
 4835              		.cfi_restore_state
 957:Veno-Echo.cpp ****             }
 4836              		.loc 19 957 40 view .LVU1318
 4837              	.LBE1172:
 4838              	.LBB1173:
 977:Veno-Echo.cpp **** 
 4839              		.loc 19 977 9 is_stmt 1 view .LVU1319
 979:Veno-Echo.cpp ****         {
 4840              		.loc 19 979 9 view .LVU1320
 4841 0148 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4842 014a 7BB9     		cbnz	r3, .L332
 981:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 4843              		.loc 19 981 13 view .LVU1321
 981:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 4844              		.loc 19 981 23 is_stmt 0 view .LVU1322
 4845 014c 0124     		movs	r4, #1
 982:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 4846              		.loc 19 982 29 view .LVU1323
 4847 014e 3348     		ldr	r0, .L354+64
 983:Veno-Echo.cpp ****         }
 4848              		.loc 19 983 26 view .LVU1324
 4849 0150 3349     		ldr	r1, .L354+68
 981:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 4850              		.loc 19 981 23 view .LVU1325
 4851 0152 1470     		strb	r4, [r2]
 982:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 4852              		.loc 19 982 13 is_stmt 1 view .LVU1326
 982:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 4853              		.loc 19 982 29 is_stmt 0 view .LVU1327
 4854 0154 0370     		strb	r3, [r0]
 983:Veno-Echo.cpp ****         }
 4855              		.loc 19 983 13 is_stmt 1 view .LVU1328
 983:Veno-Echo.cpp ****         }
 4856              		.loc 19 983 26 is_stmt 0 view .LVU1329
 4857 0156 81ED000A 		vstr.32	s0, [r1]
 4858              	.LVL268:
 4859              	.L319:
 983:Veno-Echo.cpp ****         }
 4860              		.loc 19 983 26 view .LVU1330
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 159


 4861              	.LBE1173:
 4862              	.LBE1194:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 4863              		.loc 19 1007 1 view .LVU1331
 4864 015a BDEC028B 		vldm	sp!, {d8}
 4865              		.cfi_remember_state
 4866              		.cfi_restore 80
 4867              		.cfi_restore 81
 4868              		.cfi_def_cfa_offset 8
 4869 015e 10BD     		pop	{r4, pc}
 4870              	.LVL269:
 4871              	.L353:
 4872              		.cfi_restore_state
 4873              	.LBB1195:
 4874              	.LBB1188:
 4875              	.LBB1169:
 4876              	.LBB1167:
2036:Veno-Echo.cpp ****     }
 4877              		.loc 19 2036 16 view .LVU1332
 4878 0160 9FED308A 		vldr.32	s16, .L354+72
 4879              	.LVL270:
2036:Veno-Echo.cpp ****     }
 4880              		.loc 19 2036 16 view .LVU1333
 4881 0164 DCE7     		b	.L325
 4882              	.LVL271:
 4883              	.L351:
2036:Veno-Echo.cpp ****     }
 4884              		.loc 19 2036 16 view .LVU1334
 4885              	.LBE1167:
 4886              	.LBE1169:
 4887              	.LBB1170:
 4888              	.LBB1156:
 4889 0166 9FED2F8A 		vldr.32	s16, .L354+72
 4890              	.LVL272:
2036:Veno-Echo.cpp ****     }
 4891              		.loc 19 2036 16 view .LVU1335
 4892 016a DCE7     		b	.L327
 4893              	.LVL273:
 4894              	.L332:
2036:Veno-Echo.cpp ****     }
 4895              		.loc 19 2036 16 view .LVU1336
 4896              	.LBE1156:
 4897              	.LBE1170:
 4898              	.LBE1188:
 4899              	.LBB1189:
 988:Veno-Echo.cpp ****             {
 4900              		.loc 19 988 13 is_stmt 1 view .LVU1337
 988:Veno-Echo.cpp ****             {
 4901              		.loc 19 988 16 is_stmt 0 view .LVU1338
 4902 016c 2B4B     		ldr	r3, .L354+64
 988:Veno-Echo.cpp ****             {
 4903              		.loc 19 988 13 view .LVU1339
 4904 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4905 0170 7AB9     		cbnz	r2, .L333
 990:Veno-Echo.cpp ****                 {
 4906              		.loc 19 990 17 is_stmt 1 view .LVU1340
 4907              	.LVL274:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 160


 4908              	.LBB1174:
 4909              	.LBI1174:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4910              		.loc 20 75 3 view .LVU1341
 4911              	.LBB1175:
 4912              		.loc 20 76 5 view .LVU1342
 4913              		.loc 20 76 5 is_stmt 0 view .LVU1343
 4914              	.LBE1175:
 4915              	.LBE1174:
 990:Veno-Echo.cpp ****                 {
 4916              		.loc 19 990 23 view .LVU1344
 4917 0172 2B4A     		ldr	r2, .L354+68
 990:Veno-Echo.cpp ****                 {
 4918              		.loc 19 990 17 view .LVU1345
 4919 0174 9FED287A 		vldr.32	s14, .L354+60
 990:Veno-Echo.cpp ****                 {
 4920              		.loc 19 990 23 view .LVU1346
 4921 0178 D2ED007A 		vldr.32	s15, [r2]
 4922 017c 70EE677A 		vsub.f32	s15, s0, s15
 4923              	.LBB1177:
 4924              	.LBB1176:
 4925              		.loc 20 76 31 view .LVU1347
 4926 0180 F0EEE77A 		vabs.f32	s15, s15
 4927              	.LBE1176:
 4928              	.LBE1177:
 990:Veno-Echo.cpp ****                 {
 4929              		.loc 19 990 17 view .LVU1348
 4930 0184 F4EEC77A 		vcmpe.f32	s15, s14
 4931 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4932 018c E5DD     		ble	.L319
 992:Veno-Echo.cpp ****                 }
 4933              		.loc 19 992 21 is_stmt 1 view .LVU1349
 992:Veno-Echo.cpp ****                 }
 4934              		.loc 19 992 37 is_stmt 0 view .LVU1350
 4935 018e 0122     		movs	r2, #1
 4936 0190 1A70     		strb	r2, [r3]
 4937              	.L333:
 997:Veno-Echo.cpp ****         {
 4938              		.loc 19 997 9 is_stmt 1 view .LVU1351
 4939              	.LBB1178:
 4940              	.LBB1179:
 999:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 4941              		.loc 19 999 13 view .LVU1352
 4942              	.LVL275:
1000:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4943              		.loc 19 1000 13 view .LVU1353
1000:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4944              		.loc 19 1000 61 is_stmt 0 view .LVU1354
 4945 0192 F0EE080A 		vmov.f32	s1, #3.0e+0
 4946 0196 0020     		movs	r0, #0
 4947 0198 9FED221A 		vldr.32	s2, .L354+72
 4948 019c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4949              	.LVL276:
 4950              	.LBB1180:
 4951              	.LBI1180:
 4952              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 161


   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 162


  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 163


 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 164


 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 165


 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 166


 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 167


 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 168


 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 169


 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 170


 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 171


 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 172


 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 173


 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 174


 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 175


 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 176


 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 177


 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 178


 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 179


1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 180


1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 181


1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 182


1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 183


1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 184


1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 185


1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 186


1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 187


1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 188


1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 189


1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 190


1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 191


1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 4953              		.loc 22 1756 3 is_stmt 1 view .LVU1355
 4954              	.LBB1181:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 4955              		.loc 22 1757 5 view .LVU1356
 4956              		.loc 22 1757 28 is_stmt 0 view .LVU1357
 4957 01a0 B8FE400A 		vrinta.f32	s0, s0
 4958              	.LVL277:
 4959              		.loc 22 1757 28 view .LVU1358
 4960              	.LBE1181:
 4961              	.LBE1180:
1001:Veno-Echo.cpp ****             //save setting:
 4962              		.loc 19 1001 13 is_stmt 1 view .LVU1359
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 192


 4963              	.LBB1182:
 4964              	.LBI1182:
1843:Veno-Echo.cpp **** {
 4965              		.loc 19 1843 7 view .LVU1360
 4966              	.LBB1183:
1845:Veno-Echo.cpp ****     switch(ratio)
 4967              		.loc 19 1845 5 view .LVU1361
1846:Veno-Echo.cpp ****     {
 4968              		.loc 19 1846 5 view .LVU1362
 4969              	.LBE1183:
 4970              	.LBE1182:
1000:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 4971              		.loc 19 1000 130 is_stmt 0 view .LVU1363
 4972 01a4 FCEEC07A 		vcvt.u32.f32	s15, s0
 4973 01a8 17EE903A 		vmov	r3, s15	@ int
 4974 01ac 013B     		subs	r3, r3, #1
 4975 01ae DBB2     		uxtb	r3, r3
 4976 01b0 022B     		cmp	r3, #2
 4977 01b2 0CD9     		bls	.L337
 4978 01b4 B7EE008A 		vmov.f32	s16, #1.0e+0
 4979              	.L338:
 4980              	.LVL278:
 4981              	.LBB1185:
 4982              	.LBB1184:
1869:Veno-Echo.cpp **** }
 4983              		.loc 19 1869 1 is_stmt 1 view .LVU1364
1869:Veno-Echo.cpp **** }
 4984              		.loc 19 1869 1 is_stmt 0 view .LVU1365
 4985              	.LBE1184:
 4986              	.LBE1185:
1001:Veno-Echo.cpp ****             //save setting:
 4987              		.loc 19 1001 34 view .LVU1366
 4988 01b8 B0EE480A 		vmov.f32	s0, s16
 4989              	.LVL279:
1001:Veno-Echo.cpp ****             //save setting:
 4990              		.loc 19 1001 34 view .LVU1367
 4991 01bc 1148     		ldr	r0, .L354+40
 4992 01be FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 4993              	.LVL280:
1003:Veno-Echo.cpp ****         }
 4994              		.loc 19 1003 13 is_stmt 1 view .LVU1368
1003:Veno-Echo.cpp ****         }
 4995              		.loc 19 1003 13 is_stmt 0 view .LVU1369
 4996              	.LBE1179:
 4997              	.LBE1178:
 4998              	.LBE1189:
 4999              	.LBE1195:
1845:Veno-Echo.cpp ****     switch(ratio)
 5000              		.loc 19 1845 5 is_stmt 1 view .LVU1370
1846:Veno-Echo.cpp ****     {
 5001              		.loc 19 1846 5 view .LVU1371
1869:Veno-Echo.cpp **** }
 5002              		.loc 19 1869 1 view .LVU1372
 5003              	.LBB1196:
 5004              	.LBB1190:
 5005              	.LBB1187:
 5006              	.LBB1186:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 193


1003:Veno-Echo.cpp ****         }
 5007              		.loc 19 1003 34 is_stmt 0 view .LVU1373
 5008 01c2 194B     		ldr	r3, .L354+76
 5009 01c4 83ED018A 		vstr.32	s16, [r3, #4]
 5010              	.LBE1186:
 5011              	.LBE1187:
 5012              	.LBE1190:
 5013              	.LBE1196:
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 5014              		.loc 19 1007 1 view .LVU1374
 5015 01c8 BDEC028B 		vldm	sp!, {d8}
 5016              		.cfi_remember_state
 5017              		.cfi_restore 80
 5018              		.cfi_restore 81
 5019              		.cfi_def_cfa_offset 8
 5020 01cc 10BD     		pop	{r4, pc}
 5021              	.LVL281:
 5022              	.L337:
 5023              		.cfi_restore_state
1007:Veno-Echo.cpp **** void Update_feedbackL_CV()
 5024              		.loc 19 1007 1 view .LVU1375
 5025 01ce 174A     		ldr	r2, .L354+80
 5026 01d0 02EB8303 		add	r3, r2, r3, lsl #2
 5027 01d4 93ED008A 		vldr.32	s16, [r3]
 5028 01d8 EEE7     		b	.L338
 5029              	.L355:
 5030 01da 00BF     		.align	2
 5031              	.L354:
 5032 01dc 18000000 		.word	.LANCHOR4+24
 5033 01e0 00000000 		.word	.LANCHOR79
 5034 01e4 ABAAAA2A 		.word	715827883
 5035 01e8 00000000 		.word	.LANCHOR8
 5036 01ec 00000000 		.word	.LANCHOR80
 5037 01f0 00000000 		.word	.LANCHOR81
 5038 01f4 00000000 		.word	.LANCHOR82
 5039 01f8 00000000 		.word	.LANCHOR6
 5040 01fc 00000000 		.word	.LANCHOR83
 5041 0200 00000000 		.word	.LANCHOR74
 5042 0204 00000000 		.word	.LANCHOR73
 5043 0208 00000000 		.word	.LANCHOR76
 5044 020c 00004042 		.word	1111490560
 5045 0210 00000000 		.word	.LANCHOR1
 5046 0214 00000000 		.word	.LANCHOR78
 5047 0218 0AD7A33B 		.word	1000593162
 5048 021c 00000000 		.word	.LANCHOR84
 5049 0220 00000000 		.word	.LANCHOR85
 5050 0224 00000000 		.word	0
 5051 0228 00000000 		.word	.LANCHOR20
 5052 022c 00000000 		.word	.LANCHOR86
 5053              		.cfi_endproc
 5054              	.LFE4294:
 5056              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 5057              		.align	1
 5058              		.p2align 2,,3
 5059              		.global	_Z17Update_DelayTimeLv
 5060              		.syntax unified
 5061              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 194


 5062              		.thumb_func
 5063              		.fpu fpv5-d16
 5065              	_Z17Update_DelayTimeLv:
 5066              	.LFB4292:
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5067              		.loc 19 794 1 is_stmt 1 view -0
 5068              		.cfi_startproc
 5069              		@ args = 0, pretend = 0, frame = 0
 5070              		@ frame_needed = 0, uses_anonymous_args = 0
 795:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 5071              		.loc 19 795 5 view .LVU1377
 796:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 5072              		.loc 19 796 5 view .LVU1378
 797:Veno-Echo.cpp ****     
 5073              		.loc 19 797 5 view .LVU1379
 799:Veno-Echo.cpp **** 
 5074              		.loc 19 799 5 view .LVU1380
 802:Veno-Echo.cpp **** 
 5075              		.loc 19 802 5 view .LVU1381
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5076              		.loc 19 794 1 is_stmt 0 view .LVU1382
 5077 0000 10B5     		push	{r4, lr}
 5078              		.cfi_def_cfa_offset 8
 5079              		.cfi_offset 4, -8
 5080              		.cfi_offset 14, -4
 802:Veno-Echo.cpp **** 
 5081              		.loc 19 802 44 view .LVU1383
 5082 0002 0222     		movs	r2, #2
 5083 0004 0721     		movs	r1, #7
 5084 0006 8748     		ldr	r0, .L394
 794:Veno-Echo.cpp ****     static bool lastShift{};
 5085              		.loc 19 794 1 view .LVU1384
 5086 0008 2DED028B 		vpush.64	{d8}
 5087              		.cfi_def_cfa_offset 16
 5088              		.cfi_offset 80, -16
 5089              		.cfi_offset 81, -12
 802:Veno-Echo.cpp **** 
 5090              		.loc 19 802 44 view .LVU1385
 5091 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 5092              	.LVL282:
 807:Veno-Echo.cpp **** 
 5093              		.loc 19 807 26 view .LVU1386
 5094 0010 8549     		ldr	r1, .L394+4
 807:Veno-Echo.cpp **** 
 5095              		.loc 19 807 31 view .LVU1387
 5096 0012 864B     		ldr	r3, .L394+8
 5097              	.LVL283:
 806:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 5098              		.loc 19 806 5 is_stmt 1 view .LVU1388
 807:Veno-Echo.cpp **** 
 5099              		.loc 19 807 5 view .LVU1389
 807:Veno-Echo.cpp **** 
 5100              		.loc 19 807 26 is_stmt 0 view .LVU1390
 5101 0014 0A68     		ldr	r2, [r1]
 5102              	.LBB1197:
 809:Veno-Echo.cpp ****     {
 5103              		.loc 19 809 9 view .LVU1391
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 195


 5104 0016 8648     		ldr	r0, .L394+12
 5105              	.LBE1197:
 807:Veno-Echo.cpp **** 
 5106              		.loc 19 807 26 view .LVU1392
 5107 0018 0132     		adds	r2, r2, #1
 5108              	.LBB1265:
 809:Veno-Echo.cpp ****     {
 5109              		.loc 19 809 5 view .LVU1393
 5110 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 5111              	.LBE1265:
 807:Veno-Echo.cpp **** 
 5112              		.loc 19 807 31 view .LVU1394
 5113 001c 83FB0243 		smull	r4, r3, r3, r2
 5114 0020 D417     		asrs	r4, r2, #31
 5115 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 5116 0026 03EB4303 		add	r3, r3, r3, lsl #1
 5117 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 5118              	.LBB1266:
 5119              	.LBB1198:
 813:Veno-Echo.cpp ****         {
 5120              		.loc 19 813 19 view .LVU1395
 5121 002e 814A     		ldr	r2, .L394+16
 5122              	.LBE1198:
 5123              	.LBE1266:
 807:Veno-Echo.cpp **** 
 5124              		.loc 19 807 14 view .LVU1396
 5125 0030 0B60     		str	r3, [r1]
 809:Veno-Echo.cpp ****     {
 5126              		.loc 19 809 5 is_stmt 1 view .LVU1397
 5127              	.LBB1267:
 5128 0032 0028     		cmp	r0, #0
 5129 0034 40F08880 		bne	.L357
 5130              	.LBB1219:
 811:Veno-Echo.cpp ****         //udpate pickup
 5131              		.loc 19 811 9 view .LVU1398
 813:Veno-Echo.cpp ****         {
 5132              		.loc 19 813 9 view .LVU1399
 5133 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5134 003a 0029     		cmp	r1, #0
 5135 003c 41D0     		beq	.L358
 815:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 5136              		.loc 19 815 13 view .LVU1400
 816:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 5137              		.loc 19 816 31 is_stmt 0 view .LVU1401
 5138 003e 7E4C     		ldr	r4, .L394+20
 817:Veno-Echo.cpp ****         } 
 5139              		.loc 19 817 28 view .LVU1402
 5140 0040 7E49     		ldr	r1, .L394+24
 815:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 5141              		.loc 19 815 23 view .LVU1403
 5142 0042 1070     		strb	r0, [r2]
 816:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 5143              		.loc 19 816 13 is_stmt 1 view .LVU1404
 816:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 5144              		.loc 19 816 31 is_stmt 0 view .LVU1405
 5145 0044 2070     		strb	r0, [r4]
 817:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 196


 5146              		.loc 19 817 13 is_stmt 1 view .LVU1406
 817:Veno-Echo.cpp ****         } 
 5147              		.loc 19 817 28 is_stmt 0 view .LVU1407
 5148 0046 81ED000A 		vstr.32	s0, [r1]
 5149              	.L359:
 830:Veno-Echo.cpp **** 
 5150              		.loc 19 830 9 is_stmt 1 view .LVU1408
 5151              	.LVL284:
 832:Veno-Echo.cpp ****     {
 5152              		.loc 19 832 5 view .LVU1409
 840:Veno-Echo.cpp ****     }
 5153              		.loc 19 840 9 view .LVU1410
 5154              	.LBB1199:
 5155              	.LBI1199:
2029:Veno-Echo.cpp **** {
 5156              		.loc 19 2029 7 view .LVU1411
 5157              	.LBB1200:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5158              		.loc 19 2031 5 view .LVU1412
2032:Veno-Echo.cpp **** 
 5159              		.loc 19 2032 5 view .LVU1413
 5160              	.LBE1200:
 5161              	.LBE1199:
 840:Veno-Echo.cpp ****     }
 5162              		.loc 19 840 32 is_stmt 0 view .LVU1414
 5163 004a 7D49     		ldr	r1, .L394+28
 5164              	.LBB1205:
 5165              	.LBB1201:
2032:Veno-Echo.cpp **** 
 5166              		.loc 19 2032 39 view .LVU1415
 5167 004c B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 5168              		.loc 19 2032 49 view .LVU1416
 5169 0050 B6EE006A 		vmov.f32	s12, #5.0e-1
 5170              	.LBE1201:
 5171              	.LBE1205:
 840:Veno-Echo.cpp ****     }
 5172              		.loc 19 840 32 view .LVU1417
 5173 0054 7B4A     		ldr	r2, .L394+32
 5174              	.LBB1206:
 5175              	.LBB1202:
2032:Veno-Echo.cpp **** 
 5176              		.loc 19 2032 39 view .LVU1418
 5177 0056 D1ED007A 		vldr.32	s15, [r1]
2032:Veno-Echo.cpp **** 
 5178              		.loc 19 2032 12 view .LVU1419
 5179 005a F0EE006A 		vmov.f32	s13, #2.0e+0
 5180 005e 92ED008A 		vldr.32	s16, [r2]
2032:Veno-Echo.cpp **** 
 5181              		.loc 19 2032 39 view .LVU1420
 5182 0062 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 5183              		.loc 19 2032 49 view .LVU1421
 5184 0066 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 5185              		.loc 19 2032 12 view .LVU1422
 5186 006a A7EEA68A 		vfma.f32	s16, s15, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 197


 5187              	.LVL285:
2034:Veno-Echo.cpp ****     {
 5188              		.loc 19 2034 5 is_stmt 1 view .LVU1423
 5189 006e B5EEC08A 		vcmpe.f32	s16, #0
 5190 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5191 0076 76D4     		bmi	.L391
2039:Veno-Echo.cpp ****     {
 5192              		.loc 19 2039 5 view .LVU1424
2041:Veno-Echo.cpp ****     }
 5193              		.loc 19 2041 16 is_stmt 0 view .LVU1425
 5194 0078 B4EE478A 		vcmp.f32	s16, s14
 5195              	.LBE1202:
 5196              	.LBE1206:
 843:Veno-Echo.cpp ****     {
 5197              		.loc 19 843 9 view .LVU1426
 5198 007c 724A     		ldr	r2, .L394+36
 843:Veno-Echo.cpp ****     {
 5199              		.loc 19 843 5 view .LVU1427
 5200 007e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5201              	.LBB1207:
 5202              	.LBB1203:
2041:Veno-Echo.cpp ****     }
 5203              		.loc 19 2041 16 view .LVU1428
 5204 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5205 0084 37FE088A 		vselgt.f32	s16, s14, s16
 5206              	.LVL286:
2041:Veno-Echo.cpp ****     }
 5207              		.loc 19 2041 16 view .LVU1429
 5208              	.LBE1203:
 5209              	.LBE1207:
 843:Veno-Echo.cpp ****     {
 5210              		.loc 19 843 5 is_stmt 1 view .LVU1430
 5211 0088 002A     		cmp	r2, #0
 5212 008a 50D0     		beq	.L392
 5213              	.L366:
 853:Veno-Echo.cpp ****         {
 5214              		.loc 19 853 9 view .LVU1431
 5215 008c 002B     		cmp	r3, #0
 5216 008e 64D1     		bne	.L356
 856:Veno-Echo.cpp ****             {
 5217              		.loc 19 856 13 view .LVU1432
 856:Veno-Echo.cpp ****             {
 5218              		.loc 19 856 58 is_stmt 0 view .LVU1433
 5219 0090 6E48     		ldr	r0, .L394+40
 5220 0092 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5221              	.LVL287:
 856:Veno-Echo.cpp ****             {
 5222              		.loc 19 856 82 view .LVU1434
 5223 0096 6E48     		ldr	r0, .L394+44
 856:Veno-Echo.cpp ****             {
 5224              		.loc 19 856 58 view .LVU1435
 5225 0098 B0EE407A 		vmov.f32	s14, s0
 856:Veno-Echo.cpp ****             {
 5226              		.loc 19 856 82 view .LVU1436
 5227 009c B0EE480A 		vmov.f32	s0, s16
 5228 00a0 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 5229              	.LVL288:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 198


 856:Veno-Echo.cpp ****             {
 5230              		.loc 19 856 61 view .LVU1437
 5231 00a4 DFED6B7A 		vldr.32	s15, .L394+48
 856:Veno-Echo.cpp ****             {
 5232              		.loc 19 856 35 view .LVU1438
 5233 00a8 6B48     		ldr	r0, .L394+52
 856:Veno-Echo.cpp ****             {
 5234              		.loc 19 856 61 view .LVU1439
 5235 00aa 27EE277A 		vmul.f32	s14, s14, s15
 856:Veno-Echo.cpp ****             {
 5236              		.loc 19 856 35 view .LVU1440
 5237 00ae 27EE000A 		vmul.f32	s0, s14, s0
 5238 00b2 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 5239              	.LVL289:
 856:Veno-Echo.cpp ****             {
 5240              		.loc 19 856 13 view .LVU1441
 5241 00b6 0028     		cmp	r0, #0
 5242 00b8 4FD0     		beq	.L356
 858:Veno-Echo.cpp ****             }
 5243              		.loc 19 858 17 is_stmt 1 view .LVU1442
 858:Veno-Echo.cpp ****             }
 5244              		.loc 19 858 29 is_stmt 0 view .LVU1443
 5245 00ba 684B     		ldr	r3, .L394+56
 5246 00bc 0122     		movs	r2, #1
 5247 00be 1A70     		strb	r2, [r3]
 5248 00c0 4BE0     		b	.L356
 5249              	.LVL290:
 5250              	.L358:
 821:Veno-Echo.cpp ****             {
 5251              		.loc 19 821 13 is_stmt 1 view .LVU1444
 821:Veno-Echo.cpp ****             {
 5252              		.loc 19 821 16 is_stmt 0 view .LVU1445
 5253 00c2 5D4A     		ldr	r2, .L394+20
 821:Veno-Echo.cpp ****             {
 5254              		.loc 19 821 13 view .LVU1446
 5255 00c4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5256 00c6 79B9     		cbnz	r1, .L360
 823:Veno-Echo.cpp ****                 {
 5257              		.loc 19 823 17 is_stmt 1 view .LVU1447
 5258              	.LVL291:
 5259              	.LBB1208:
 5260              	.LBI1208:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5261              		.loc 20 75 3 view .LVU1448
 5262              	.LBB1209:
 5263              		.loc 20 76 5 view .LVU1449
 5264              		.loc 20 76 5 is_stmt 0 view .LVU1450
 5265              	.LBE1209:
 5266              	.LBE1208:
 823:Veno-Echo.cpp ****                 {
 5267              		.loc 19 823 23 view .LVU1451
 5268 00c8 5C49     		ldr	r1, .L394+24
 823:Veno-Echo.cpp ****                 {
 5269              		.loc 19 823 17 view .LVU1452
 5270 00ca 9FED657A 		vldr.32	s14, .L394+60
 823:Veno-Echo.cpp ****                 {
 5271              		.loc 19 823 23 view .LVU1453
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 199


 5272 00ce D1ED007A 		vldr.32	s15, [r1]
 5273 00d2 70EE677A 		vsub.f32	s15, s0, s15
 5274              	.LBB1211:
 5275              	.LBB1210:
 5276              		.loc 20 76 31 view .LVU1454
 5277 00d6 F0EEE77A 		vabs.f32	s15, s15
 5278              	.LBE1210:
 5279              	.LBE1211:
 823:Veno-Echo.cpp ****                 {
 5280              		.loc 19 823 17 view .LVU1455
 5281 00da F4EEC77A 		vcmpe.f32	s15, s14
 5282 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5283 00e2 B2DD     		ble	.L359
 825:Veno-Echo.cpp ****                 }
 5284              		.loc 19 825 21 is_stmt 1 view .LVU1456
 825:Veno-Echo.cpp ****                 }
 5285              		.loc 19 825 39 is_stmt 0 view .LVU1457
 5286 00e4 0121     		movs	r1, #1
 5287 00e6 1170     		strb	r1, [r2]
 5288              	.L360:
 830:Veno-Echo.cpp **** 
 5289              		.loc 19 830 9 is_stmt 1 view .LVU1458
 5290              	.LVL292:
 832:Veno-Echo.cpp ****     {
 5291              		.loc 19 832 5 view .LVU1459
 834:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 5292              		.loc 19 834 9 view .LVU1460
 5293              	.LBB1212:
 5294              	.LBI1212:
2029:Veno-Echo.cpp **** {
 5295              		.loc 19 2029 7 view .LVU1461
 5296              	.LBB1213:
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 5297              		.loc 19 2031 5 view .LVU1462
2032:Veno-Echo.cpp **** 
 5298              		.loc 19 2032 5 view .LVU1463
 5299              	.LBE1213:
 5300              	.LBE1212:
 834:Veno-Echo.cpp ****         delayTimeL_Last = delayTimeL_Pot; //update last value
 5301              		.loc 19 834 32 is_stmt 0 view .LVU1464
 5302 00e8 554A     		ldr	r2, .L394+28
 5303              	.LBB1216:
 5304              	.LBB1214:
2032:Veno-Echo.cpp **** 
 5305              		.loc 19 2032 39 view .LVU1465
 5306 00ea B7EE007A 		vmov.f32	s14, #1.0e+0
2032:Veno-Echo.cpp **** 
 5307              		.loc 19 2032 49 view .LVU1466
 5308 00ee B6EE006A 		vmov.f32	s12, #5.0e-1
2032:Veno-Echo.cpp **** 
 5309              		.loc 19 2032 39 view .LVU1467
 5310 00f2 D2ED007A 		vldr.32	s15, [r2]
2032:Veno-Echo.cpp **** 
 5311              		.loc 19 2032 12 view .LVU1468
 5312 00f6 F0EE006A 		vmov.f32	s13, #2.0e+0
 5313 00fa B0EE408A 		vmov.f32	s16, s0
2032:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 200


 5314              		.loc 19 2032 39 view .LVU1469
 5315 00fe 77EE677A 		vsub.f32	s15, s14, s15
2032:Veno-Echo.cpp **** 
 5316              		.loc 19 2032 49 view .LVU1470
 5317 0102 77EEC67A 		vsub.f32	s15, s15, s12
2032:Veno-Echo.cpp **** 
 5318              		.loc 19 2032 12 view .LVU1471
 5319 0106 A7EEA68A 		vfma.f32	s16, s15, s13
 5320              	.LVL293:
2034:Veno-Echo.cpp ****     {
 5321              		.loc 19 2034 5 is_stmt 1 view .LVU1472
 5322 010a B5EEC08A 		vcmpe.f32	s16, #0
 5323 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5324 0112 25D4     		bmi	.L393
2039:Veno-Echo.cpp ****     {
 5325              		.loc 19 2039 5 view .LVU1473
2041:Veno-Echo.cpp ****     }
 5326              		.loc 19 2041 16 is_stmt 0 view .LVU1474
 5327 0114 B4EE478A 		vcmp.f32	s16, s14
 5328 0118 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5329 011c 37FE088A 		vselgt.f32	s16, s14, s16
 5330              	.LVL294:
 5331              	.L362:
 5332              		.loc 19 2044 5 is_stmt 1 view .LVU1475
 5333              		.loc 19 2044 5 is_stmt 0 view .LVU1476
 5334              	.LBE1214:
 5335              	.LBE1216:
 835:Veno-Echo.cpp ****     }
 5336              		.loc 19 835 9 is_stmt 1 view .LVU1477
 835:Veno-Echo.cpp ****     }
 5337              		.loc 19 835 25 is_stmt 0 view .LVU1478
 5338 0120 484A     		ldr	r2, .L394+32
 5339 0122 82ED000A 		vstr.32	s0, [r2]
 5340              	.LVL295:
 5341              	.L364:
 843:Veno-Echo.cpp ****     {
 5342              		.loc 19 843 5 is_stmt 1 view .LVU1479
 843:Veno-Echo.cpp ****     {
 5343              		.loc 19 843 9 is_stmt 0 view .LVU1480
 5344 0126 484A     		ldr	r2, .L394+36
 843:Veno-Echo.cpp ****     {
 5345              		.loc 19 843 5 view .LVU1481
 5346 0128 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5347 012a 002A     		cmp	r2, #0
 5348 012c AED1     		bne	.L366
 5349              	.L392:
 845:Veno-Echo.cpp ****         {
 5350              		.loc 19 845 9 is_stmt 1 view .LVU1482
 5351 012e A3B9     		cbnz	r3, .L356
 847:Veno-Echo.cpp ****         }
 5352              		.loc 19 847 13 view .LVU1483
 847:Veno-Echo.cpp ****         }
 5353              		.loc 19 847 36 is_stmt 0 view .LVU1484
 5354 0130 B7EE000A 		vmov.f32	s0, #1.0e+0
 5355              	.LVL296:
 847:Veno-Echo.cpp ****         }
 5356              		.loc 19 847 36 view .LVU1485
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 201


 5357 0134 0121     		movs	r1, #1
 5358 0136 4848     		ldr	r0, .L394+52
 5359 0138 30EE480A 		vsub.f32	s0, s0, s16
 5360              	.LBE1219:
 5361              	.LBE1267:
 896:Veno-Echo.cpp **** 
 5362              		.loc 19 896 1 view .LVU1486
 5363 013c BDEC028B 		vldm	sp!, {d8}
 5364              		.cfi_remember_state
 5365              		.cfi_restore 80
 5366              		.cfi_restore 81
 5367              		.cfi_def_cfa_offset 8
 5368              	.LVL297:
 896:Veno-Echo.cpp **** 
 5369              		.loc 19 896 1 view .LVU1487
 5370 0140 BDE81040 		pop	{r4, lr}
 5371              		.cfi_restore 14
 5372              		.cfi_restore 4
 5373              		.cfi_def_cfa_offset 0
 5374              	.LBB1268:
 5375              	.LBB1220:
 847:Veno-Echo.cpp ****         }
 5376              		.loc 19 847 36 view .LVU1488
 5377 0144 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 5378              	.LVL298:
 5379              	.L357:
 5380              		.cfi_restore_state
 847:Veno-Echo.cpp ****         }
 5381              		.loc 19 847 36 view .LVU1489
 5382              	.LBE1220:
 5383              	.LBB1221:
 866:Veno-Echo.cpp **** 
 5384              		.loc 19 866 5 is_stmt 1 view .LVU1490
 868:Veno-Echo.cpp ****     {
 5385              		.loc 19 868 5 view .LVU1491
 5386 0148 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 5387 014a 7BB9     		cbnz	r3, .L369
 870:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 5388              		.loc 19 870 9 view .LVU1492
 870:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 5389              		.loc 19 870 19 is_stmt 0 view .LVU1493
 5390 014c 0124     		movs	r4, #1
 871:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 5391              		.loc 19 871 30 view .LVU1494
 5392 014e 4548     		ldr	r0, .L394+64
 872:Veno-Echo.cpp ****     }
 5393              		.loc 19 872 27 view .LVU1495
 5394 0150 4549     		ldr	r1, .L394+68
 870:Veno-Echo.cpp ****         Rev_DelayTime_pickup = false;   //set not picked up
 5395              		.loc 19 870 19 view .LVU1496
 5396 0152 1470     		strb	r4, [r2]
 871:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 5397              		.loc 19 871 9 is_stmt 1 view .LVU1497
 871:Veno-Echo.cpp ****         Rev_DelayTime_new = delayTimeL_Pot; //update new value
 5398              		.loc 19 871 30 is_stmt 0 view .LVU1498
 5399 0154 0370     		strb	r3, [r0]
 872:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 202


 5400              		.loc 19 872 9 is_stmt 1 view .LVU1499
 872:Veno-Echo.cpp ****     }
 5401              		.loc 19 872 27 is_stmt 0 view .LVU1500
 5402 0156 81ED000A 		vstr.32	s0, [r1]
 5403              	.LVL299:
 5404              	.L356:
 872:Veno-Echo.cpp ****     }
 5405              		.loc 19 872 27 view .LVU1501
 5406              	.LBE1221:
 5407              	.LBE1268:
 896:Veno-Echo.cpp **** 
 5408              		.loc 19 896 1 view .LVU1502
 5409 015a BDEC028B 		vldm	sp!, {d8}
 5410              		.cfi_remember_state
 5411              		.cfi_restore 80
 5412              		.cfi_restore 81
 5413              		.cfi_def_cfa_offset 8
 5414 015e 10BD     		pop	{r4, pc}
 5415              	.LVL300:
 5416              	.L393:
 5417              		.cfi_restore_state
 5418              	.LBB1269:
 5419              	.LBB1262:
 5420              	.LBB1217:
 5421              	.LBB1215:
2036:Veno-Echo.cpp ****     }
 5422              		.loc 19 2036 16 view .LVU1503
 5423 0160 9FED428A 		vldr.32	s16, .L394+72
 5424              	.LVL301:
2036:Veno-Echo.cpp ****     }
 5425              		.loc 19 2036 16 view .LVU1504
 5426 0164 DCE7     		b	.L362
 5427              	.LVL302:
 5428              	.L391:
2036:Veno-Echo.cpp ****     }
 5429              		.loc 19 2036 16 view .LVU1505
 5430              	.LBE1215:
 5431              	.LBE1217:
 5432              	.LBB1218:
 5433              	.LBB1204:
 5434 0166 9FED418A 		vldr.32	s16, .L394+72
 5435              	.LVL303:
2036:Veno-Echo.cpp ****     }
 5436              		.loc 19 2036 16 view .LVU1506
 5437 016a DCE7     		b	.L364
 5438              	.LVL304:
 5439              	.L369:
2036:Veno-Echo.cpp ****     }
 5440              		.loc 19 2036 16 view .LVU1507
 5441              	.LBE1204:
 5442              	.LBE1218:
 5443              	.LBE1262:
 5444              	.LBB1263:
 877:Veno-Echo.cpp ****         {
 5445              		.loc 19 877 9 is_stmt 1 view .LVU1508
 877:Veno-Echo.cpp ****         {
 5446              		.loc 19 877 12 is_stmt 0 view .LVU1509
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 203


 5447 016c 3D4B     		ldr	r3, .L394+64
 877:Veno-Echo.cpp ****         {
 5448              		.loc 19 877 9 view .LVU1510
 5449 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5450 0170 7AB9     		cbnz	r2, .L370
 879:Veno-Echo.cpp ****             {
 5451              		.loc 19 879 13 is_stmt 1 view .LVU1511
 5452              	.LVL305:
 5453              	.LBB1222:
 5454              	.LBI1222:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5455              		.loc 20 75 3 view .LVU1512
 5456              	.LBB1223:
 5457              		.loc 20 76 5 view .LVU1513
 5458              		.loc 20 76 5 is_stmt 0 view .LVU1514
 5459              	.LBE1223:
 5460              	.LBE1222:
 879:Veno-Echo.cpp ****             {
 5461              		.loc 19 879 19 view .LVU1515
 5462 0172 3D4A     		ldr	r2, .L394+68
 879:Veno-Echo.cpp ****             {
 5463              		.loc 19 879 13 view .LVU1516
 5464 0174 9FED3A7A 		vldr.32	s14, .L394+60
 879:Veno-Echo.cpp ****             {
 5465              		.loc 19 879 19 view .LVU1517
 5466 0178 D2ED007A 		vldr.32	s15, [r2]
 5467 017c 70EE677A 		vsub.f32	s15, s0, s15
 5468              	.LBB1225:
 5469              	.LBB1224:
 5470              		.loc 20 76 31 view .LVU1518
 5471 0180 F0EEE77A 		vabs.f32	s15, s15
 5472              	.LBE1224:
 5473              	.LBE1225:
 879:Veno-Echo.cpp ****             {
 5474              		.loc 19 879 13 view .LVU1519
 5475 0184 F4EEC77A 		vcmpe.f32	s15, s14
 5476 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5477 018c E5DD     		ble	.L356
 881:Veno-Echo.cpp ****             }
 5478              		.loc 19 881 17 is_stmt 1 view .LVU1520
 881:Veno-Echo.cpp ****             }
 5479              		.loc 19 881 38 is_stmt 0 view .LVU1521
 5480 018e 0122     		movs	r2, #1
 5481 0190 1A70     		strb	r2, [r3]
 5482              	.L370:
 886:Veno-Echo.cpp ****     {
 5483              		.loc 19 886 5 is_stmt 1 view .LVU1522
 5484              	.LBB1226:
 5485              	.LBB1227:
 888:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5486              		.loc 19 888 9 view .LVU1523
 888:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 5487              		.loc 19 888 34 is_stmt 0 view .LVU1524
 5488 0192 0120     		movs	r0, #1
 5489 0194 9FED361A 		vldr.32	s2, .L394+76
 5490 0198 DFED360A 		vldr.32	s1, .L394+80
 5491 019c FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 204


 5492              	.LVL306:
 5493              	.LBB1228:
 5494              	.LBB1229:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5495              		.loc 19 70 28 view .LVU1525
 5496 01a0 354B     		ldr	r3, .L394+84
 5497              	.LVL307:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5498              		.loc 19 70 28 view .LVU1526
 5499              	.LBE1229:
 5500              	.LBE1228:
 889:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5501              		.loc 19 889 9 is_stmt 1 view .LVU1527
 5502              	.LBB1243:
 5503              	.LBI1228:
  68:Veno-Echo.cpp ****     {
 5504              		.loc 19 68 10 view .LVU1528
 5505              	.LBB1241:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5506              		.loc 19 70 9 view .LVU1529
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5507              		.loc 19 70 53 is_stmt 0 view .LVU1530
 5508 01a2 DFED2F6A 		vldr.32	s13, .L394+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5509              		.loc 19 70 28 view .LVU1531
 5510 01a6 D3ED017A 		vldr.32	s15, [r3, #4]
 5511              	.LVL308:
 5512              	.LBB1230:
 5513              	.LBI1230:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5514              		.loc 20 75 3 is_stmt 1 view .LVU1532
 5515              	.LBB1231:
 5516              		.loc 20 76 5 view .LVU1533
 5517              		.loc 20 76 5 is_stmt 0 view .LVU1534
 5518              	.LBE1231:
 5519              	.LBE1230:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5520              		.loc 19 70 15 view .LVU1535
 5521 01aa 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5522              		.loc 19 70 53 view .LVU1536
 5523 01ae 67EEA67A 		vmul.f32	s15, s15, s13
 5524              	.LBB1233:
 5525              	.LBB1232:
 5526              		.loc 20 76 31 view .LVU1537
 5527 01b2 B0EEC77A 		vabs.f32	s14, s14
 5528              	.LBE1232:
 5529              	.LBE1233:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5530              		.loc 19 70 9 view .LVU1538
 5531 01b6 B4EEE77A 		vcmpe.f32	s14, s15
 5532 01ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5533 01be 0DDD     		ble	.L377
  74:Veno-Echo.cpp ****             //del -> Reset();
 5534              		.loc 19 74 29 view .LVU1539
 5535 01c0 FCEEC07A 		vcvt.u32.f32	s15, s0
 5536              	.LBB1234:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 205


 5537              	.LBB1235:
 5538              		.loc 18 72 9 view .LVU1540
 5539 01c4 2D4C     		ldr	r4, .L394+88
 5540              	.LBE1235:
 5541              	.LBE1234:
 5542              	.LBE1241:
 5543              	.LBE1243:
 889:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 5544              		.loc 19 889 33 view .LVU1541
 5545 01c6 1968     		ldr	r1, [r3]
 5546              	.LBB1244:
 5547              	.LBB1242:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5548              		.loc 19 73 13 is_stmt 1 view .LVU1542
 5549              	.LBB1238:
 5550              	.LBB1236:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5551              		.loc 18 71 9 is_stmt 0 view .LVU1543
 5552 01c8 0020     		movs	r0, #0
 5553              	.LBE1236:
 5554              	.LBE1238:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5555              		.loc 19 73 27 view .LVU1544
 5556 01ca 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5557              		.loc 19 74 13 is_stmt 1 view .LVU1545
 5558              	.LVL309:
 5559              	.LBB1239:
 5560              	.LBI1234:
  69:delayline_reverse.h ****     {
 5561              		.loc 18 69 17 view .LVU1546
  69:delayline_reverse.h ****     {
 5562              		.loc 18 69 17 is_stmt 0 view .LVU1547
 5563              	.LBE1239:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5564              		.loc 19 74 29 view .LVU1548
 5565 01ce 17EE902A 		vmov	r2, s15	@ int
 5566              	.LBB1240:
 5567              	.LBB1237:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5568              		.loc 18 71 9 view .LVU1549
 5569 01d2 0860     		str	r0, [r1]	@ float
 5570              		.loc 18 72 9 view .LVU1550
 5571 01d4 A242     		cmp	r2, r4
 5572 01d6 28BF     		it	cs
 5573 01d8 2246     		movcs	r2, r4
 5574 01da 0A61     		str	r2, [r1, #16]
 5575              	.LVL310:
 5576              	.L377:
 5577              		.loc 18 72 9 view .LVU1551
 5578              	.LBE1237:
 5579              	.LBE1240:
 5580              	.LBE1242:
 5581              	.LBE1244:
 890:Veno-Echo.cpp ****         //save setting:
 5582              		.loc 19 890 9 is_stmt 1 view .LVU1552
 5583              	.LBB1245:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 206


 5584              	.LBI1245:
  68:Veno-Echo.cpp ****     {
 5585              		.loc 19 68 10 view .LVU1553
 5586              	.LBB1246:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5587              		.loc 19 70 9 view .LVU1554
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5588              		.loc 19 70 28 is_stmt 0 view .LVU1555
 5589 01dc 284B     		ldr	r3, .L394+92
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5590              		.loc 19 70 53 view .LVU1556
 5591 01de DFED206A 		vldr.32	s13, .L394+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5592              		.loc 19 70 28 view .LVU1557
 5593 01e2 D3ED017A 		vldr.32	s15, [r3, #4]
 5594              	.LVL311:
 5595              	.LBB1247:
 5596              	.LBI1247:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5597              		.loc 20 75 3 is_stmt 1 view .LVU1558
 5598              	.LBB1248:
 5599              		.loc 20 76 5 view .LVU1559
 5600              		.loc 20 76 5 is_stmt 0 view .LVU1560
 5601              	.LBE1248:
 5602              	.LBE1247:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5603              		.loc 19 70 15 view .LVU1561
 5604 01e6 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5605              		.loc 19 70 53 view .LVU1562
 5606 01ea 67EEA67A 		vmul.f32	s15, s15, s13
 5607              	.LBB1250:
 5608              	.LBB1249:
 5609              		.loc 20 76 31 view .LVU1563
 5610 01ee B0EEC77A 		vabs.f32	s14, s14
 5611              	.LBE1249:
 5612              	.LBE1250:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5613              		.loc 19 70 9 view .LVU1564
 5614 01f2 B4EEE77A 		vcmpe.f32	s14, s15
 5615 01f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5616 01fa 0DDD     		ble	.L372
  74:Veno-Echo.cpp ****             //del -> Reset();
 5617              		.loc 19 74 29 view .LVU1565
 5618 01fc FCEEC07A 		vcvt.u32.f32	s15, s0
 5619              	.LBB1251:
 5620              	.LBB1252:
 5621              		.loc 18 72 9 view .LVU1566
 5622 0200 1E4C     		ldr	r4, .L394+88
 5623              	.LBE1252:
 5624              	.LBE1251:
 5625              	.LBE1246:
 5626              	.LBE1245:
 890:Veno-Echo.cpp ****         //save setting:
 5627              		.loc 19 890 33 view .LVU1567
 5628 0202 1968     		ldr	r1, [r3]
 5629              	.LBB1259:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 207


 5630              	.LBB1258:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5631              		.loc 19 73 13 is_stmt 1 view .LVU1568
 5632              	.LBB1255:
 5633              	.LBB1253:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5634              		.loc 18 71 9 is_stmt 0 view .LVU1569
 5635 0204 0020     		movs	r0, #0
 5636              	.LBE1253:
 5637              	.LBE1255:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5638              		.loc 19 73 27 view .LVU1570
 5639 0206 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5640              		.loc 19 74 13 is_stmt 1 view .LVU1571
 5641              	.LVL312:
 5642              	.LBB1256:
 5643              	.LBI1251:
  69:delayline_reverse.h ****     {
 5644              		.loc 18 69 17 view .LVU1572
  69:delayline_reverse.h ****     {
 5645              		.loc 18 69 17 is_stmt 0 view .LVU1573
 5646              	.LBE1256:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5647              		.loc 19 74 29 view .LVU1574
 5648 020a 17EE902A 		vmov	r2, s15	@ int
 5649              	.LBB1257:
 5650              	.LBB1254:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5651              		.loc 18 71 9 view .LVU1575
 5652 020e 0860     		str	r0, [r1]	@ float
 5653              		.loc 18 72 9 view .LVU1576
 5654 0210 A242     		cmp	r2, r4
 5655 0212 28BF     		it	cs
 5656 0214 2246     		movcs	r2, r4
 5657 0216 0A61     		str	r2, [r1, #16]
 5658              	.LVL313:
 5659              	.L372:
 5660              		.loc 18 72 9 view .LVU1577
 5661              	.LBE1254:
 5662              	.LBE1257:
 5663              	.LBE1258:
 5664              	.LBE1259:
 892:Veno-Echo.cpp ****     }
 5665              		.loc 19 892 9 is_stmt 1 view .LVU1578
 892:Veno-Echo.cpp ****     }
 5666              		.loc 19 892 31 is_stmt 0 view .LVU1579
 5667 0218 1A4B     		ldr	r3, .L394+96
 5668              	.LBE1227:
 5669              	.LBE1226:
 5670              	.LBE1263:
 5671              	.LBE1269:
 896:Veno-Echo.cpp **** 
 5672              		.loc 19 896 1 view .LVU1580
 5673 021a BDEC028B 		vldm	sp!, {d8}
 5674              		.cfi_restore 80
 5675              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 208


 5676              		.cfi_def_cfa_offset 8
 5677              	.LBB1270:
 5678              	.LBB1264:
 5679              	.LBB1261:
 5680              	.LBB1260:
 892:Veno-Echo.cpp ****     }
 5681              		.loc 19 892 31 view .LVU1581
 5682 021e 83ED000A 		vstr.32	s0, [r3]
 5683              	.LBE1260:
 5684              	.LBE1261:
 5685              	.LBE1264:
 5686              	.LBE1270:
 896:Veno-Echo.cpp **** 
 5687              		.loc 19 896 1 view .LVU1582
 5688 0222 10BD     		pop	{r4, pc}
 5689              	.L395:
 5690              		.align	2
 5691              	.L394:
 5692 0224 18000000 		.word	.LANCHOR4+24
 5693 0228 00000000 		.word	.LANCHOR87
 5694 022c ABAAAA2A 		.word	715827883
 5695 0230 00000000 		.word	.LANCHOR8
 5696 0234 00000000 		.word	.LANCHOR88
 5697 0238 00000000 		.word	.LANCHOR89
 5698 023c 00000000 		.word	.LANCHOR90
 5699 0240 00000000 		.word	.LANCHOR5
 5700 0244 00000000 		.word	.LANCHOR91
 5701 0248 00000000 		.word	.LANCHOR74
 5702 024c 00000000 		.word	.LANCHOR73
 5703 0250 00000000 		.word	.LANCHOR75
 5704 0254 00004042 		.word	1111490560
 5705 0258 00000000 		.word	.LANCHOR0
 5706 025c 00000000 		.word	.LANCHOR77
 5707 0260 0AD7A33B 		.word	1000593162
 5708 0264 00000000 		.word	.LANCHOR92
 5709 0268 00000000 		.word	.LANCHOR93
 5710 026c 00000000 		.word	0
 5711 0270 0050C346 		.word	1187205120
 5712 0274 00606A48 		.word	1214930944
 5713 0278 00000000 		.word	.LANCHOR2
 5714 027c BF270900 		.word	599999
 5715 0280 00000000 		.word	.LANCHOR3
 5716 0284 00000000 		.word	.LANCHOR20
 5717              		.cfi_endproc
 5718              	.LFE4292:
 5720              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 5721              		.align	1
 5722              		.p2align 2,,3
 5723              		.global	_Z11GetTapRatio9TapRatios
 5724              		.syntax unified
 5725              		.thumb
 5726              		.thumb_func
 5727              		.fpu fpv5-d16
 5729              	_Z11GetTapRatio9TapRatios:
 5730              	.LVL314:
 5731              	.LFB4311:
1844:Veno-Echo.cpp ****     float retVal{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 209


 5732              		.loc 19 1844 1 is_stmt 1 view -0
 5733              		.cfi_startproc
 5734              		@ args = 0, pretend = 0, frame = 0
 5735              		@ frame_needed = 0, uses_anonymous_args = 0
 5736              		@ link register save eliminated.
1845:Veno-Echo.cpp ****     switch(ratio)
 5737              		.loc 19 1845 5 view .LVU1584
1846:Veno-Echo.cpp ****     {
 5738              		.loc 19 1846 5 view .LVU1585
 5739 0000 0138     		subs	r0, r0, #1
 5740              	.LVL315:
1846:Veno-Echo.cpp ****     {
 5741              		.loc 19 1846 5 is_stmt 0 view .LVU1586
 5742 0002 C0B2     		uxtb	r0, r0
 5743 0004 0228     		cmp	r0, #2
 5744 0006 05D8     		bhi	.L398
 5745 0008 044B     		ldr	r3, .L399
 5746 000a 03EB8000 		add	r0, r3, r0, lsl #2
 5747 000e 90ED000A 		vldr.32	s0, [r0]
 5748 0012 7047     		bx	lr
 5749              	.L398:
1844:Veno-Echo.cpp ****     float retVal{};
 5750              		.loc 19 1844 1 view .LVU1587
 5751 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 5752              	.LVL316:
1869:Veno-Echo.cpp **** }
 5753              		.loc 19 1869 1 is_stmt 1 view .LVU1588
1870:Veno-Echo.cpp **** 
 5754              		.loc 19 1870 1 is_stmt 0 view .LVU1589
 5755 0018 7047     		bx	lr
 5756              	.L400:
 5757 001a 00BF     		.align	2
 5758              	.L399:
 5759 001c 00000000 		.word	.LANCHOR86
 5760              		.cfi_endproc
 5761              	.LFE4311:
 5763              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5764              		.align	1
 5765              		.p2align 2,,3
 5766              		.global	_Z13ApplySettingsRK8Settings
 5767              		.syntax unified
 5768              		.thumb
 5769              		.thumb_func
 5770              		.fpu fpv5-d16
 5772              	_Z13ApplySettingsRK8Settings:
 5773              	.LVL317:
 5774              	.LFB4312:
1873:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5775              		.loc 19 1873 1 is_stmt 1 view -0
 5776              		.cfi_startproc
 5777              		@ args = 0, pretend = 0, frame = 0
 5778              		@ frame_needed = 0, uses_anonymous_args = 0
1874:Veno-Echo.cpp ****     {
 5779              		.loc 19 1874 5 view .LVU1591
 5780 0000 9FEDCF7A 		vldr.32	s14, .L469
1874:Veno-Echo.cpp ****     {
 5781              		.loc 19 1874 17 is_stmt 0 view .LVU1592
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 210


 5782 0004 D0ED007A 		vldr.32	s15, [r0]
1874:Veno-Echo.cpp ****     {
 5783              		.loc 19 1874 5 view .LVU1593
 5784 0008 F4EEC77A 		vcmpe.f32	s15, s14
1873:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5785              		.loc 19 1873 1 view .LVU1594
 5786 000c 38B5     		push	{r3, r4, r5, lr}
 5787              		.cfi_def_cfa_offset 16
 5788              		.cfi_offset 3, -16
 5789              		.cfi_offset 4, -12
 5790              		.cfi_offset 5, -8
 5791              		.cfi_offset 14, -4
1874:Veno-Echo.cpp ****     {
 5792              		.loc 19 1874 5 view .LVU1595
 5793 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1873:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5794              		.loc 19 1873 1 view .LVU1596
 5795 0012 0446     		mov	r4, r0
 5796              	.LBB1271:
 5797              	.LBB1272:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5798              		.loc 19 70 28 view .LVU1597
 5799 0014 CB4B     		ldr	r3, .L469+4
 5800              	.LBE1272:
 5801              	.LBE1271:
1874:Veno-Echo.cpp ****     {
 5802              		.loc 19 1874 5 view .LVU1598
 5803 0016 C0F2FD80 		blt	.L402
1874:Veno-Echo.cpp ****     {
 5804              		.loc 19 1874 43 discriminator 1 view .LVU1599
 5805 001a 9FEDCB7A 		vldr.32	s14, .L469+8
 5806 001e F4EEC77A 		vcmpe.f32	s15, s14
 5807 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5808 0026 00F2F580 		bhi	.L402
1876:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5809              		.loc 19 1876 9 is_stmt 1 view .LVU1600
 5810              	.LVL318:
 5811              	.LBB1286:
 5812              	.LBI1271:
  68:Veno-Echo.cpp ****     {
 5813              		.loc 19 68 10 view .LVU1601
 5814              	.LBB1284:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5815              		.loc 19 70 9 view .LVU1602
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5816              		.loc 19 70 28 is_stmt 0 view .LVU1603
 5817 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5818              	.LVL319:
 5819              	.LBB1273:
 5820              	.LBI1273:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5821              		.loc 20 75 3 is_stmt 1 view .LVU1604
 5822              	.LBB1274:
 5823              		.loc 20 76 5 view .LVU1605
 5824              		.loc 20 76 5 is_stmt 0 view .LVU1606
 5825              	.LBE1274:
 5826              	.LBE1273:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 211


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5827              		.loc 19 70 53 view .LVU1607
 5828 002e 9FEDC76A 		vldr.32	s12, .L469+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5829              		.loc 19 70 15 view .LVU1608
 5830 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5831              		.loc 19 70 53 view .LVU1609
 5832 0036 27EE067A 		vmul.f32	s14, s14, s12
 5833              	.LBB1276:
 5834              	.LBB1275:
 5835              		.loc 20 76 31 view .LVU1610
 5836 003a F0EEE66A 		vabs.f32	s13, s13
 5837              	.LBE1275:
 5838              	.LBE1276:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5839              		.loc 19 70 9 view .LVU1611
 5840 003e F4EEC76A 		vcmpe.f32	s13, s14
 5841 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5842 0046 0FDD     		ble	.L405
  74:Veno-Echo.cpp ****             //del -> Reset();
 5843              		.loc 19 74 29 view .LVU1612
 5844 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5845              	.LBB1277:
 5846              	.LBB1278:
 5847              		.loc 18 72 9 view .LVU1613
 5848 004c C04D     		ldr	r5, .L469+16
 5849              	.LBE1278:
 5850              	.LBE1277:
 5851              	.LBE1284:
 5852              	.LBE1286:
1876:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5853              		.loc 19 1876 33 view .LVU1614
 5854 004e 1968     		ldr	r1, [r3]
 5855              	.LBB1287:
 5856              	.LBB1285:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5857              		.loc 19 73 13 is_stmt 1 view .LVU1615
 5858              	.LBB1281:
 5859              	.LBB1279:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5860              		.loc 18 71 9 is_stmt 0 view .LVU1616
 5861 0050 0020     		movs	r0, #0
 5862              	.LVL320:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5863              		.loc 18 71 9 view .LVU1617
 5864              	.LBE1279:
 5865              	.LBE1281:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5866              		.loc 19 73 27 view .LVU1618
 5867 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5868              		.loc 19 74 13 is_stmt 1 view .LVU1619
 5869              	.LVL321:
 5870              	.LBB1282:
 5871              	.LBI1277:
  69:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 212


 5872              		.loc 18 69 17 view .LVU1620
  69:delayline_reverse.h ****     {
 5873              		.loc 18 69 17 is_stmt 0 view .LVU1621
 5874              	.LBE1282:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5875              		.loc 19 74 29 view .LVU1622
 5876 0056 17EE102A 		vmov	r2, s14	@ int
 5877              	.LBB1283:
 5878              	.LBB1280:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5879              		.loc 18 71 9 view .LVU1623
 5880 005a 0860     		str	r0, [r1]	@ float
 5881 005c D4ED007A 		vldr.32	s15, [r4]
 5882              	.LVL322:
 5883              		.loc 18 72 9 view .LVU1624
 5884 0060 AA42     		cmp	r2, r5
 5885 0062 28BF     		it	cs
 5886 0064 2A46     		movcs	r2, r5
 5887 0066 0A61     		str	r2, [r1, #16]
 5888              	.LVL323:
 5889              	.L405:
 5890              		.loc 18 72 9 view .LVU1625
 5891              	.LBE1280:
 5892              	.LBE1283:
 5893              	.LBE1285:
 5894              	.LBE1287:
1877:Veno-Echo.cpp ****     }
 5895              		.loc 19 1877 9 is_stmt 1 view .LVU1626
 5896              	.LBB1288:
 5897              	.LBI1288:
  68:Veno-Echo.cpp ****     {
 5898              		.loc 19 68 10 view .LVU1627
 5899              	.LBB1289:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5900              		.loc 19 70 9 view .LVU1628
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5901              		.loc 19 70 28 is_stmt 0 view .LVU1629
 5902 0068 BA4B     		ldr	r3, .L469+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5903              		.loc 19 70 53 view .LVU1630
 5904 006a 9FEDB86A 		vldr.32	s12, .L469+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5905              		.loc 19 70 28 view .LVU1631
 5906 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5907              	.LVL324:
 5908              	.LBB1290:
 5909              	.LBI1290:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5910              		.loc 20 75 3 is_stmt 1 view .LVU1632
 5911              	.LBB1291:
 5912              		.loc 20 76 5 view .LVU1633
 5913              		.loc 20 76 5 is_stmt 0 view .LVU1634
 5914              	.LBE1291:
 5915              	.LBE1290:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5916              		.loc 19 70 15 view .LVU1635
 5917 0072 77EEC76A 		vsub.f32	s13, s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 213


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5918              		.loc 19 70 53 view .LVU1636
 5919 0076 27EE067A 		vmul.f32	s14, s14, s12
 5920              	.LBB1293:
 5921              	.LBB1292:
 5922              		.loc 20 76 31 view .LVU1637
 5923 007a F0EEE66A 		vabs.f32	s13, s13
 5924              	.LBE1292:
 5925              	.LBE1293:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5926              		.loc 19 70 9 view .LVU1638
 5927 007e F4EEC76A 		vcmpe.f32	s13, s14
 5928 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5929 0086 00F34B81 		bgt	.L465
 5930              	.LVL325:
 5931              	.L408:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5932              		.loc 19 70 9 view .LVU1639
 5933              	.LBE1289:
 5934              	.LBE1288:
1885:Veno-Echo.cpp ****     {
 5935              		.loc 19 1885 5 is_stmt 1 view .LVU1640
 5936 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1885:Veno-Echo.cpp ****     {
 5937              		.loc 19 1885 17 is_stmt 0 view .LVU1641
 5938 008e 94ED010A 		vldr.32	s0, [r4, #4]
1885:Veno-Echo.cpp ****     {
 5939              		.loc 19 1885 5 view .LVU1642
 5940 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5941 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5942 009a 06DB     		blt	.L413
1885:Veno-Echo.cpp ****     {
 5943              		.loc 19 1885 35 discriminator 1 view .LVU1643
 5944 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5945 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5946 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5947 00a8 01D9     		bls	.L463
 5948              	.L413:
1891:Veno-Echo.cpp ****     }
 5949              		.loc 19 1891 9 is_stmt 1 view .LVU1644
1891:Veno-Echo.cpp ****     }
 5950              		.loc 19 1891 30 is_stmt 0 view .LVU1645
 5951 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5952              	.L463:
 5953 00ae AA48     		ldr	r0, .L469+24
 5954 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5955              	.LVL326:
1894:Veno-Echo.cpp ****     {
 5956              		.loc 19 1894 5 is_stmt 1 view .LVU1646
1894:Veno-Echo.cpp ****     {
 5957              		.loc 19 1894 17 is_stmt 0 view .LVU1647
 5958 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1894:Veno-Echo.cpp ****     {
 5959              		.loc 19 1894 5 view .LVU1648
 5960 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5961 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5962 00c0 C0F22B81 		blt	.L460
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 214


1894:Veno-Echo.cpp ****     {
 5963              		.loc 19 1894 42 discriminator 1 view .LVU1649
 5964 00c4 DFEDA56A 		vldr.32	s13, .L469+28
1900:Veno-Echo.cpp ****     }
 5965              		.loc 19 1900 18 discriminator 1 view .LVU1650
 5966 00c8 9FEDA57A 		vldr.32	s14, .L469+32
 5967 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5968 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5969 00d4 88BF     		it	hi
 5970 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5971              	.L417:
1903:Veno-Echo.cpp ****     {
 5972              		.loc 19 1903 17 view .LVU1651
 5973 00da 94ED030A 		vldr.32	s0, [r4, #12]
1903:Veno-Echo.cpp ****     {
 5974              		.loc 19 1903 5 view .LVU1652
 5975 00de 9FEDA17A 		vldr.32	s14, .L469+36
 5976 00e2 A14B     		ldr	r3, .L469+40
 5977 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5978              	.LBB1304:
 5979              	.LBB1305:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5980              		.loc 8 60 20 view .LVU1653
 5981 00e8 A04D     		ldr	r5, .L469+44
 5982 00ea C3ED007A 		vstr.32	s15, [r3]
 5983              	.LBE1305:
 5984              	.LBE1304:
1903:Veno-Echo.cpp ****     {
 5985              		.loc 19 1903 5 is_stmt 1 view .LVU1654
 5986 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5987 00f2 06DB     		blt	.L420
1903:Veno-Echo.cpp ****     {
 5988              		.loc 19 1903 40 is_stmt 0 discriminator 1 view .LVU1655
 5989 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 5990 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 5991 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5992 0100 01D9     		bls	.L464
 5993              	.L420:
1909:Veno-Echo.cpp ****     }
 5994              		.loc 19 1909 9 is_stmt 1 view .LVU1656
 5995              	.LVL327:
 5996              	.LBB1306:
 5997              	.LBI1306:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5998              		.loc 8 58 17 view .LVU1657
 5999              	.LBB1307:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6000              		.loc 8 60 9 view .LVU1658
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6001              		.loc 8 60 20 is_stmt 0 view .LVU1659
 6002 0102 9FED9B0A 		vldr.32	s0, .L469+48
 6003              	.LVL328:
 6004              	.L464:
 6005              		.loc 8 61 34 view .LVU1660
 6006 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6007              		.loc 8 60 20 view .LVU1661
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 215


 6008 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6009              		.loc 8 61 9 is_stmt 1 view .LVU1662
 6010              		.loc 8 61 34 is_stmt 0 view .LVU1663
 6011 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6012              	.LVL329:
 6013              	.LBE1307:
 6014              	.LBE1306:
1912:Veno-Echo.cpp ****     {
 6015              		.loc 19 1912 5 view .LVU1664
 6016 0110 DFED987A 		vldr.32	s15, .L469+52
 6017              	.LBB1309:
 6018              	.LBB1308:
 6019              		.loc 8 61 20 view .LVU1665
 6020 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6021              	.LBE1308:
 6022              	.LBE1309:
1912:Veno-Echo.cpp ****     {
 6023              		.loc 19 1912 5 is_stmt 1 view .LVU1666
1912:Veno-Echo.cpp ****     {
 6024              		.loc 19 1912 17 is_stmt 0 view .LVU1667
 6025 0118 94ED050A 		vldr.32	s0, [r4, #20]
1912:Veno-Echo.cpp ****     {
 6026              		.loc 19 1912 5 view .LVU1668
 6027 011c B4EEE70A 		vcmpe.f32	s0, s15
 6028 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6029 0124 07DB     		blt	.L424
1912:Veno-Echo.cpp ****     {
 6030              		.loc 19 1912 40 discriminator 1 view .LVU1669
 6031 0126 DFED947A 		vldr.32	s15, .L469+56
 6032 012a B4EEE70A 		vcmpe.f32	s0, s15
 6033 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6034 0132 40F2DF80 		bls	.L466
 6035              	.L424:
1921:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6036              		.loc 19 1921 9 is_stmt 1 view .LVU1670
1921:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6037              		.loc 19 1921 22 is_stmt 0 view .LVU1671
 6038 0136 9FED900A 		vldr.32	s0, .L469+56
 6039 013a 9048     		ldr	r0, .L469+60
 6040 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6041              	.LVL330:
1922:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6042              		.loc 19 1922 9 is_stmt 1 view .LVU1672
1922:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6043              		.loc 19 1922 22 is_stmt 0 view .LVU1673
 6044 0140 9FED8D0A 		vldr.32	s0, .L469+56
 6045 0144 8E48     		ldr	r0, .L469+64
 6046 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6047              	.LVL331:
1923:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6048              		.loc 19 1923 9 is_stmt 1 view .LVU1674
1923:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6049              		.loc 19 1923 27 is_stmt 0 view .LVU1675
 6050 014a 9FED8B0A 		vldr.32	s0, .L469+56
 6051 014e 8D48     		ldr	r0, .L469+68
 6052 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6053              	.LVL332:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 216


1924:Veno-Echo.cpp ****     }
 6054              		.loc 19 1924 9 is_stmt 1 view .LVU1676
1924:Veno-Echo.cpp ****     }
 6055              		.loc 19 1924 27 is_stmt 0 view .LVU1677
 6056 0154 9FED880A 		vldr.32	s0, .L469+56
 6057 0158 8B48     		ldr	r0, .L469+72
 6058 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6059              	.LVL333:
 6060              	.L427:
1927:Veno-Echo.cpp ****     {
 6061              		.loc 19 1927 5 is_stmt 1 view .LVU1678
1927:Veno-Echo.cpp ****     {
 6062              		.loc 19 1927 17 is_stmt 0 view .LVU1679
 6063 015e 94ED040A 		vldr.32	s0, [r4, #16]
1927:Veno-Echo.cpp ****     {
 6064              		.loc 19 1927 5 view .LVU1680
 6065 0162 DFED8A7A 		vldr.32	s15, .L469+76
 6066 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6067 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6068 016e 07DB     		blt	.L428
1927:Veno-Echo.cpp ****     {
 6069              		.loc 19 1927 40 discriminator 1 view .LVU1681
 6070 0170 DFED877A 		vldr.32	s15, .L469+80
 6071 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6072 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6073 017c 40F2A780 		bls	.L467
 6074              	.L428:
1936:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6075              		.loc 19 1936 9 is_stmt 1 view .LVU1682
1936:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6076              		.loc 19 1936 22 is_stmt 0 view .LVU1683
 6077 0180 9FED840A 		vldr.32	s0, .L469+84
 6078 0184 8448     		ldr	r0, .L469+88
 6079 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6080              	.LVL334:
1937:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6081              		.loc 19 1937 9 is_stmt 1 view .LVU1684
1937:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6082              		.loc 19 1937 22 is_stmt 0 view .LVU1685
 6083 018a 9FED820A 		vldr.32	s0, .L469+84
 6084 018e 8348     		ldr	r0, .L469+92
 6085 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6086              	.LVL335:
1938:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6087              		.loc 19 1938 9 is_stmt 1 view .LVU1686
1938:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6088              		.loc 19 1938 27 is_stmt 0 view .LVU1687
 6089 0194 9FED7F0A 		vldr.32	s0, .L469+84
 6090 0198 8148     		ldr	r0, .L469+96
 6091 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6092              	.LVL336:
1939:Veno-Echo.cpp **** 
 6093              		.loc 19 1939 9 is_stmt 1 view .LVU1688
1939:Veno-Echo.cpp **** 
 6094              		.loc 19 1939 27 is_stmt 0 view .LVU1689
 6095 019e 9FED7D0A 		vldr.32	s0, .L469+84
 6096 01a2 8048     		ldr	r0, .L469+100
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 217


 6097 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6098              	.LVL337:
 6099              	.L431:
1943:Veno-Echo.cpp ****     {
 6100              		.loc 19 1943 5 is_stmt 1 view .LVU1690
1943:Veno-Echo.cpp ****     {
 6101              		.loc 19 1943 17 is_stmt 0 view .LVU1691
 6102 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1943:Veno-Echo.cpp ****     {
 6103              		.loc 19 1943 5 view .LVU1692
 6104 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6105 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6106 01b4 06DB     		blt	.L432
1943:Veno-Echo.cpp ****     {
 6107              		.loc 19 1943 38 discriminator 1 view .LVU1693
 6108 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6109 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6110 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6111 01c2 5DD9     		bls	.L468
 6112              	.L432:
1957:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6113              		.loc 19 1957 9 is_stmt 1 view .LVU1694
1957:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6114              		.loc 19 1957 26 is_stmt 0 view .LVU1695
 6115 01c4 9FED660A 		vldr.32	s0, .L469+32
 6116 01c8 6E48     		ldr	r0, .L469+68
 6117 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6118              	.LVL338:
1958:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6119              		.loc 19 1958 9 is_stmt 1 view .LVU1696
1958:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6120              		.loc 19 1958 26 is_stmt 0 view .LVU1697
 6121 01ce 9FED640A 		vldr.32	s0, .L469+32
 6122 01d2 7348     		ldr	r0, .L469+96
 6123 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6124              	.LVL339:
1959:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6125              		.loc 19 1959 9 is_stmt 1 view .LVU1698
1959:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6126              		.loc 19 1959 26 is_stmt 0 view .LVU1699
 6127 01d8 9FED610A 		vldr.32	s0, .L469+32
 6128 01dc 6A48     		ldr	r0, .L469+72
 6129 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6130              	.LVL340:
1960:Veno-Echo.cpp ****     }
 6131              		.loc 19 1960 9 is_stmt 1 view .LVU1700
1960:Veno-Echo.cpp ****     }
 6132              		.loc 19 1960 26 is_stmt 0 view .LVU1701
 6133 01e2 9FED5F0A 		vldr.32	s0, .L469+32
 6134 01e6 6F48     		ldr	r0, .L469+100
 6135 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6136              	.LVL341:
 6137              	.L435:
1963:Veno-Echo.cpp ****     {
 6138              		.loc 19 1963 5 is_stmt 1 view .LVU1702
1963:Veno-Echo.cpp ****     {
 6139              		.loc 19 1963 16 is_stmt 0 view .LVU1703
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 218


 6140 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1963:Veno-Echo.cpp ****     {
 6141              		.loc 19 1963 5 view .LVU1704
 6142 01f0 9FED6D7A 		vldr.32	s14, .L469+104
1969:Veno-Echo.cpp ****     }
 6143              		.loc 19 1969 21 view .LVU1705
 6144 01f4 6D4B     		ldr	r3, .L469+108
1963:Veno-Echo.cpp ****     {
 6145              		.loc 19 1963 5 view .LVU1706
 6146 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 6147 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6148 01fe 3CD4     		bmi	.L439
1967:Veno-Echo.cpp ****     {
 6149              		.loc 19 1967 14 is_stmt 1 view .LVU1707
 6150 0200 9FED6B7A 		vldr.32	s14, .L469+112
 6151 0204 F4EEC77A 		vcmpe.f32	s15, s14
 6152 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6153 020c 35DD     		ble	.L439
1969:Veno-Echo.cpp ****     }
 6154              		.loc 19 1969 9 view .LVU1708
1969:Veno-Echo.cpp ****     }
 6155              		.loc 19 1969 21 is_stmt 0 view .LVU1709
 6156 020e 0122     		movs	r2, #1
 6157 0210 1A70     		strb	r2, [r3]
1976:Veno-Echo.cpp **** 
 6158              		.loc 19 1976 1 view .LVU1710
 6159 0212 38BD     		pop	{r3, r4, r5, pc}
 6160              	.LVL342:
 6161              	.L402:
1881:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6162              		.loc 19 1881 9 is_stmt 1 view .LVU1711
 6163              	.LBB1310:
 6164              	.LBI1310:
  68:Veno-Echo.cpp ****     {
 6165              		.loc 19 68 10 view .LVU1712
 6166              	.LBB1311:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6167              		.loc 19 70 9 view .LVU1713
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6168              		.loc 19 70 28 is_stmt 0 view .LVU1714
 6169 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 6170              	.LVL343:
 6171              	.LBB1312:
 6172              	.LBI1312:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6173              		.loc 20 75 3 is_stmt 1 view .LVU1715
 6174              	.LBB1313:
 6175              		.loc 20 76 5 view .LVU1716
 6176              		.loc 20 76 5 is_stmt 0 view .LVU1717
 6177              	.LBE1313:
 6178              	.LBE1312:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6179              		.loc 19 70 15 view .LVU1718
 6180 0218 DFED666A 		vldr.32	s13, .L469+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6181              		.loc 19 70 53 view .LVU1719
 6182 021c 9FED4B6A 		vldr.32	s12, .L469+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 219


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6183              		.loc 19 70 15 view .LVU1720
 6184 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6185              		.loc 19 70 53 view .LVU1721
 6186 0224 67EE867A 		vmul.f32	s15, s15, s12
 6187              	.LBB1315:
 6188              	.LBB1314:
 6189              		.loc 20 76 31 view .LVU1722
 6190 0228 B0EEC77A 		vabs.f32	s14, s14
 6191              	.LBE1314:
 6192              	.LBE1315:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6193              		.loc 19 70 9 view .LVU1723
 6194 022c B4EEE77A 		vcmpe.f32	s14, s15
 6195 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6196 0234 06DD     		ble	.L409
 6197              	.LBE1311:
 6198              	.LBE1310:
1881:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6199              		.loc 19 1881 33 view .LVU1724
 6200 0236 1A68     		ldr	r2, [r3]
 6201              	.LBB1321:
 6202              	.LBB1320:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6203              		.loc 19 73 13 is_stmt 1 view .LVU1725
 6204              	.LBB1316:
 6205              	.LBB1317:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6206              		.loc 18 71 9 is_stmt 0 view .LVU1726
 6207 0238 0021     		movs	r1, #0
 6208              		.loc 18 72 9 view .LVU1727
 6209 023a 5F48     		ldr	r0, .L469+120
 6210              	.LVL344:
 6211              		.loc 18 72 9 view .LVU1728
 6212              	.LBE1317:
 6213              	.LBE1316:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6214              		.loc 19 73 27 view .LVU1729
 6215 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6216              		.loc 19 74 13 is_stmt 1 view .LVU1730
 6217              	.LVL345:
 6218              	.LBB1319:
 6219              	.LBI1316:
  69:delayline_reverse.h ****     {
 6220              		.loc 18 69 17 view .LVU1731
 6221              	.LBB1318:
 6222              		.loc 18 72 9 is_stmt 0 view .LVU1732
 6223 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6224              		.loc 18 71 9 view .LVU1733
 6225 0242 1160     		str	r1, [r2]	@ float
 6226              	.LVL346:
 6227              	.L409:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6228              		.loc 18 71 9 view .LVU1734
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 220


 6229              	.LBE1318:
 6230              	.LBE1319:
 6231              	.LBE1320:
 6232              	.LBE1321:
1882:Veno-Echo.cpp ****     }
 6233              		.loc 19 1882 9 is_stmt 1 view .LVU1735
 6234              	.LBB1322:
 6235              	.LBI1322:
  68:Veno-Echo.cpp ****     {
 6236              		.loc 19 68 10 view .LVU1736
 6237              	.LBB1323:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6238              		.loc 19 70 9 view .LVU1737
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6239              		.loc 19 70 28 is_stmt 0 view .LVU1738
 6240 0244 434B     		ldr	r3, .L469+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6241              		.loc 19 70 15 view .LVU1739
 6242 0246 DFED5B6A 		vldr.32	s13, .L469+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6243              		.loc 19 70 28 view .LVU1740
 6244 024a D3ED017A 		vldr.32	s15, [r3, #4]
 6245              	.LVL347:
 6246              	.LBB1324:
 6247              	.LBI1324:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6248              		.loc 20 75 3 is_stmt 1 view .LVU1741
 6249              	.LBB1325:
 6250              		.loc 20 76 5 view .LVU1742
 6251              		.loc 20 76 5 is_stmt 0 view .LVU1743
 6252              	.LBE1325:
 6253              	.LBE1324:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6254              		.loc 19 70 53 view .LVU1744
 6255 024e 9FED3F6A 		vldr.32	s12, .L469+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6256              		.loc 19 70 15 view .LVU1745
 6257 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6258              		.loc 19 70 53 view .LVU1746
 6259 0256 67EE867A 		vmul.f32	s15, s15, s12
 6260              	.LBB1327:
 6261              	.LBB1326:
 6262              		.loc 20 76 31 view .LVU1747
 6263 025a B0EEC77A 		vabs.f32	s14, s14
 6264              	.LBE1326:
 6265              	.LBE1327:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6266              		.loc 19 70 9 view .LVU1748
 6267 025e B4EEE77A 		vcmpe.f32	s14, s15
 6268 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6269 0266 7FF710AF 		ble	.L408
 6270              	.LBE1323:
 6271              	.LBE1322:
1882:Veno-Echo.cpp ****     }
 6272              		.loc 19 1882 33 view .LVU1749
 6273 026a 1A68     		ldr	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 221


 6274              	.LBB1333:
 6275              	.LBB1332:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6276              		.loc 19 73 13 is_stmt 1 view .LVU1750
 6277              	.LBB1328:
 6278              	.LBB1329:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6279              		.loc 18 71 9 is_stmt 0 view .LVU1751
 6280 026c 0021     		movs	r1, #0
 6281              		.loc 18 72 9 view .LVU1752
 6282 026e 5248     		ldr	r0, .L469+120
 6283              	.LBE1329:
 6284              	.LBE1328:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6285              		.loc 19 73 27 view .LVU1753
 6286 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6287              		.loc 19 74 13 is_stmt 1 view .LVU1754
 6288              	.LVL348:
 6289              	.LBB1331:
 6290              	.LBI1328:
  69:delayline_reverse.h ****     {
 6291              		.loc 18 69 17 view .LVU1755
 6292              	.LBB1330:
 6293              		.loc 18 72 9 is_stmt 0 view .LVU1756
 6294 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6295              		.loc 18 71 9 view .LVU1757
 6296 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6297              		.loc 18 73 5 view .LVU1758
 6298 0278 07E7     		b	.L408
 6299              	.LVL349:
 6300              	.L439:
 6301              		.loc 18 73 5 view .LVU1759
 6302              	.LBE1330:
 6303              	.LBE1331:
 6304              	.LBE1332:
 6305              	.LBE1333:
1965:Veno-Echo.cpp ****     }
 6306              		.loc 19 1965 9 is_stmt 1 view .LVU1760
1965:Veno-Echo.cpp ****     }
 6307              		.loc 19 1965 21 is_stmt 0 view .LVU1761
 6308 027a 0022     		movs	r2, #0
 6309 027c 1A70     		strb	r2, [r3]
1976:Veno-Echo.cpp **** 
 6310              		.loc 19 1976 1 view .LVU1762
 6311 027e 38BD     		pop	{r3, r4, r5, pc}
 6312              	.LVL350:
 6313              	.L468:
1945:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6314              		.loc 19 1945 9 is_stmt 1 view .LVU1763
1945:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6315              		.loc 19 1945 21 is_stmt 0 view .LVU1764
 6316 0280 3E48     		ldr	r0, .L469+60
 6317 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6318              	.LVL351:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 222


1946:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6319              		.loc 19 1946 9 is_stmt 1 view .LVU1765
1946:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6320              		.loc 19 1946 21 is_stmt 0 view .LVU1766
 6321 0286 94ED060A 		vldr.32	s0, [r4, #24]
 6322 028a 4348     		ldr	r0, .L469+88
 6323 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6324              	.LVL352:
1947:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6325              		.loc 19 1947 9 is_stmt 1 view .LVU1767
1947:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6326              		.loc 19 1947 21 is_stmt 0 view .LVU1768
 6327 0290 94ED060A 		vldr.32	s0, [r4, #24]
 6328 0294 3A48     		ldr	r0, .L469+64
 6329 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6330              	.LVL353:
1948:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6331              		.loc 19 1948 9 is_stmt 1 view .LVU1769
1948:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6332              		.loc 19 1948 21 is_stmt 0 view .LVU1770
 6333 029a 94ED060A 		vldr.32	s0, [r4, #24]
 6334 029e 3F48     		ldr	r0, .L469+92
 6335 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6336              	.LVL354:
1949:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6337              		.loc 19 1949 9 is_stmt 1 view .LVU1771
1949:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6338              		.loc 19 1949 26 is_stmt 0 view .LVU1772
 6339 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 6340 02a8 3648     		ldr	r0, .L469+68
 6341 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6342              	.LVL355:
1950:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6343              		.loc 19 1950 9 is_stmt 1 view .LVU1773
1950:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6344              		.loc 19 1950 26 is_stmt 0 view .LVU1774
 6345 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 6346 02b2 3B48     		ldr	r0, .L469+96
 6347 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6348              	.LVL356:
1951:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6349              		.loc 19 1951 9 is_stmt 1 view .LVU1775
1951:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6350              		.loc 19 1951 26 is_stmt 0 view .LVU1776
 6351 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 6352 02bc 3248     		ldr	r0, .L469+72
 6353 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6354              	.LVL357:
1952:Veno-Echo.cpp ****     }
 6355              		.loc 19 1952 9 is_stmt 1 view .LVU1777
1952:Veno-Echo.cpp ****     }
 6356              		.loc 19 1952 26 is_stmt 0 view .LVU1778
 6357 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 6358 02c6 3748     		ldr	r0, .L469+100
 6359 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6360              	.LVL358:
 6361 02cc 8EE7     		b	.L435
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 223


 6362              	.L467:
1929:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6363              		.loc 19 1929 9 is_stmt 1 view .LVU1779
1929:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6364              		.loc 19 1929 22 is_stmt 0 view .LVU1780
 6365 02ce 3248     		ldr	r0, .L469+88
 6366 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6367              	.LVL359:
1930:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6368              		.loc 19 1930 9 is_stmt 1 view .LVU1781
1930:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6369              		.loc 19 1930 22 is_stmt 0 view .LVU1782
 6370 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 6371 02d8 3048     		ldr	r0, .L469+92
 6372 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6373              	.LVL360:
1931:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6374              		.loc 19 1931 9 is_stmt 1 view .LVU1783
1931:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6375              		.loc 19 1931 27 is_stmt 0 view .LVU1784
 6376 02de 94ED040A 		vldr.32	s0, [r4, #16]
 6377 02e2 2F48     		ldr	r0, .L469+96
 6378 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6379              	.LVL361:
1932:Veno-Echo.cpp ****     }
 6380              		.loc 19 1932 9 is_stmt 1 view .LVU1785
1932:Veno-Echo.cpp ****     }
 6381              		.loc 19 1932 27 is_stmt 0 view .LVU1786
 6382 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 6383 02ec 2D48     		ldr	r0, .L469+100
 6384 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6385              	.LVL362:
 6386 02f2 59E7     		b	.L431
 6387              	.L466:
1914:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6388              		.loc 19 1914 9 is_stmt 1 view .LVU1787
1914:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6389              		.loc 19 1914 22 is_stmt 0 view .LVU1788
 6390 02f4 2148     		ldr	r0, .L469+60
 6391 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6392              	.LVL363:
1915:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6393              		.loc 19 1915 9 is_stmt 1 view .LVU1789
1915:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6394              		.loc 19 1915 22 is_stmt 0 view .LVU1790
 6395 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 6396 02fe 2048     		ldr	r0, .L469+64
 6397 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6398              	.LVL364:
1916:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6399              		.loc 19 1916 9 is_stmt 1 view .LVU1791
1916:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6400              		.loc 19 1916 27 is_stmt 0 view .LVU1792
 6401 0304 94ED050A 		vldr.32	s0, [r4, #20]
 6402 0308 1E48     		ldr	r0, .L469+68
 6403 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6404              	.LVL365:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 224


1917:Veno-Echo.cpp ****     }
 6405              		.loc 19 1917 9 is_stmt 1 view .LVU1793
1917:Veno-Echo.cpp ****     }
 6406              		.loc 19 1917 27 is_stmt 0 view .LVU1794
 6407 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6408 0312 1D48     		ldr	r0, .L469+72
 6409 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6410              	.LVL366:
 6411 0318 21E7     		b	.L427
 6412              	.L460:
1900:Veno-Echo.cpp ****     }
 6413              		.loc 19 1900 18 view .LVU1795
 6414 031a DFED117A 		vldr.32	s15, .L469+32
 6415 031e DCE6     		b	.L417
 6416              	.LVL367:
 6417              	.L465:
 6418              	.LBB1334:
 6419              	.LBB1302:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6420              		.loc 19 74 29 view .LVU1796
 6421 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6422              	.LBB1294:
 6423              	.LBB1295:
  72:delayline_reverse.h ****     }
 6424              		.loc 18 72 9 view .LVU1797
 6425 0324 0A4D     		ldr	r5, .L469+16
 6426              	.LBE1295:
 6427              	.LBE1294:
 6428              	.LBE1302:
 6429              	.LBE1334:
1877:Veno-Echo.cpp ****     }
 6430              		.loc 19 1877 33 view .LVU1798
 6431 0326 1968     		ldr	r1, [r3]
 6432              	.LBB1335:
 6433              	.LBB1303:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6434              		.loc 19 73 13 is_stmt 1 view .LVU1799
 6435              	.LBB1299:
 6436              	.LBB1296:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6437              		.loc 18 71 9 is_stmt 0 view .LVU1800
 6438 0328 0020     		movs	r0, #0
 6439              	.LBE1296:
 6440              	.LBE1299:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6441              		.loc 19 73 27 view .LVU1801
 6442 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6443              		.loc 19 74 29 view .LVU1802
 6444 032e 17EE102A 		vmov	r2, s14	@ int
 6445              	.LBB1300:
 6446              	.LBB1297:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6447              		.loc 18 71 9 view .LVU1803
 6448 0332 0860     		str	r0, [r1]	@ float
 6449              	.LVL368:
  72:delayline_reverse.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 225


 6450              		.loc 18 72 9 view .LVU1804
 6451 0334 AA42     		cmp	r2, r5
 6452 0336 28BF     		it	cs
 6453 0338 2A46     		movcs	r2, r5
 6454              	.LBE1297:
 6455              	.LBE1300:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6456              		.loc 19 74 13 is_stmt 1 view .LVU1805
 6457              	.LVL369:
 6458              	.LBB1301:
 6459              	.LBI1294:
  69:delayline_reverse.h ****     {
 6460              		.loc 18 69 17 view .LVU1806
 6461              	.LBB1298:
  72:delayline_reverse.h ****     }
 6462              		.loc 18 72 9 is_stmt 0 view .LVU1807
 6463 033a 0A61     		str	r2, [r1, #16]
 6464              		.loc 18 73 5 view .LVU1808
 6465 033c A5E6     		b	.L408
 6466              	.L470:
 6467 033e 00BF     		.align	2
 6468              	.L469:
 6469 0340 0050C346 		.word	1187205120
 6470 0344 00000000 		.word	.LANCHOR2
 6471 0348 00606A48 		.word	1214930944
 6472 034c 0AD7A33B 		.word	1000593162
 6473 0350 BF270900 		.word	599999
 6474 0354 00000000 		.word	.LANCHOR3
 6475 0358 00000000 		.word	.LANCHOR73
 6476 035c 0000FA43 		.word	1140457472
 6477 0360 00000000 		.word	0
 6478 0364 CDCCCC3D 		.word	1036831949
 6479 0368 00000000 		.word	.LANCHOR50
 6480 036c 00000000 		.word	.LANCHOR58
 6481 0370 9A99A140 		.word	1084332442
 6482 0374 0080BB44 		.word	1153138688
 6483 0378 00803B46 		.word	1178304512
 6484 037c 00000000 		.word	.LANCHOR29
 6485 0380 00000000 		.word	.LANCHOR30
 6486 0384 00000000 		.word	.LANCHOR31
 6487 0388 00000000 		.word	.LANCHOR32
 6488 038c 0000C842 		.word	1120403456
 6489 0390 00004844 		.word	1145569280
 6490 0394 00004843 		.word	1128792064
 6491 0398 00000000 		.word	.LANCHOR16
 6492 039c 00000000 		.word	.LANCHOR17
 6493 03a0 00000000 		.word	.LANCHOR18
 6494 03a4 00000000 		.word	.LANCHOR19
 6495 03a8 6666E63E 		.word	1055286886
 6496 03ac 00000000 		.word	.LANCHOR65
 6497 03b0 CDCC0C3F 		.word	1057803469
 6498 03b4 00650148 		.word	1208050944
 6499 03b8 94050200 		.word	132500
 6500              	.LBE1298:
 6501              	.LBE1301:
 6502              	.LBE1303:
 6503              	.LBE1335:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 226


 6504              		.cfi_endproc
 6505              	.LFE4312:
 6507              		.section	.text.startup.main,"ax",%progbits
 6508              		.align	1
 6509              		.p2align 2,,3
 6510              		.global	main
 6511              		.syntax unified
 6512              		.thumb
 6513              		.thumb_func
 6514              		.fpu fpv5-d16
 6516              	main:
 6517              	.LFB4290:
 612:Veno-Echo.cpp ****     // initialize hardware.
 6518              		.loc 19 612 1 is_stmt 1 view -0
 6519              		.cfi_startproc
 6520              		@ Volatile: function does not return.
 6521              		@ args = 0, pretend = 0, frame = 240
 6522              		@ frame_needed = 0, uses_anonymous_args = 0
 614:Veno-Echo.cpp ****     hw.Init();
 6523              		.loc 19 614 5 view .LVU1810
 612:Veno-Echo.cpp ****     // initialize hardware.
 6524              		.loc 19 612 1 is_stmt 0 view .LVU1811
 6525 0000 80B5     		push	{r7, lr}
 6526              		.cfi_def_cfa_offset 8
 6527              		.cfi_offset 7, -8
 6528              		.cfi_offset 14, -4
 614:Veno-Echo.cpp ****     hw.Init();
 6529              		.loc 19 614 17 view .LVU1812
 6530 0002 D148     		ldr	r0, .L474
 612:Veno-Echo.cpp ****     // initialize hardware.
 6531              		.loc 19 612 1 view .LVU1813
 6532 0004 BEB0     		sub	sp, sp, #248
 6533              		.cfi_def_cfa_offset 256
 614:Veno-Echo.cpp ****     hw.Init();
 6534              		.loc 19 614 17 view .LVU1814
 6535 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6536              	.LVL370:
 615:Veno-Echo.cpp ****     
 6537              		.loc 19 615 5 is_stmt 1 view .LVU1815
 615:Veno-Echo.cpp ****     
 6538              		.loc 19 615 12 is_stmt 0 view .LVU1816
 6539 000a 0021     		movs	r1, #0
 6540 000c CE48     		ldr	r0, .L474
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6541              		.loc 19 619 16 view .LVU1817
 6542 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 615:Veno-Echo.cpp ****     
 6543              		.loc 19 615 12 view .LVU1818
 6544 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6545              	.LVL371:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6546              		.loc 19 619 5 is_stmt 1 view .LVU1819
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6547              		.loc 19 619 16 is_stmt 0 view .LVU1820
 6548 0016 1D20     		movs	r0, #29
 6549 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6550              	.LVL372:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 227


 6551 001c 0346     		mov	r3, r0	@ movhi
 6552 001e 0620     		movs	r0, #6
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6553              		.loc 19 626 22 view .LVU1821
 6554 0020 0224     		movs	r4, #2
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6555              		.loc 19 619 16 view .LVU1822
 6556 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6557 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6558              	.LVL373:
 6559 002a 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6560              		.loc 19 619 80 view .LVU1823
 6561 002c C648     		ldr	r0, .L474
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6562              		.loc 19 626 22 view .LVU1824
 6563 002e 9FEDC79A 		vldr.32	s18, .L474+4
 6564              	.LBB1336:
 6565              	.LBB1337:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6566              		.loc 7 58 57 view .LVU1825
 6567 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6568              	.LBE1337:
 6569              	.LBE1336:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6570              		.loc 19 619 16 view .LVU1826
 6571 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6572              		.loc 19 619 80 view .LVU1827
 6573 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6574              	.LVL374:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6575              		.loc 19 619 16 view .LVU1828
 6576 003e 0123     		movs	r3, #1
 6577 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6578 0044 039A     		ldr	r2, [sp, #12]
 6579              	.LBB1340:
 6580              	.LBB1341:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 228


 6581              		.loc 7 54 63 view .LVU1829
 6582 0046 4FF07C55 		mov	r5, #1056964608
 6583              	.LBE1341:
 6584              	.LBE1340:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6585              		.loc 19 619 16 view .LVU1830
 6586 004a 0299     		ldr	r1, [sp, #8]
 6587              	.LBB1344:
 6588              	.LBB1345:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6589              		.loc 10 64 50 view .LVU1831
 6590 004c 1F46     		mov	r7, r3
 6591              	.LBE1345:
 6592              	.LBE1344:
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6593              		.loc 19 619 16 view .LVU1832
 6594 004e C048     		ldr	r0, .L474+8
 6595 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6596              	.LVL375:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6597              		.loc 19 620 5 is_stmt 1 view .LVU1833
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6598              		.loc 19 620 16 is_stmt 0 view .LVU1834
 6599 0054 1E20     		movs	r0, #30
 6600 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6601              	.LVL376:
 6602 005a 0346     		mov	r3, r0	@ movhi
 6603 005c 0720     		movs	r0, #7
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6604              		.loc 19 633 20 view .LVU1835
 6605 005e DFF85483 		ldr	r8, .L474+108
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6606              		.loc 19 620 16 view .LVU1836
 6607 0062 ADF81030 		strh	r3, [sp, #16]	@ movhi
 6608 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6609              	.LVL377:
 6610 006a 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6611              		.loc 19 620 80 view .LVU1837
 6612 006c B648     		ldr	r0, .L474
 6613              	.LBB1348:
 6614              	.LBB1349:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6615              		.loc 7 54 63 view .LVU1838
 6616 006e B94E     		ldr	r6, .L474+12
 6617              	.LBE1349:
 6618              	.LBE1348:
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6619              		.loc 19 620 16 view .LVU1839
 6620 0070 ADF81430 		strh	r3, [sp, #20]	@ movhi
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6621              		.loc 19 620 80 view .LVU1840
 6622 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6623              	.LVL378:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 229


 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6624              		.loc 19 620 16 view .LVU1841
 6625 0078 059A     		ldr	r2, [sp, #20]
 6626 007a 80EE080A 		vdiv.f32	s0, s0, s16
 6627 007e 0499     		ldr	r1, [sp, #16]
 6628 0080 3B46     		mov	r3, r7
 6629 0082 B548     		ldr	r0, .L474+16
 6630 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6631              	.LVL379:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6632              		.loc 19 621 5 is_stmt 1 view .LVU1842
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6633              		.loc 19 621 18 is_stmt 0 view .LVU1843
 6634 0088 0A20     		movs	r0, #10
 6635 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6636              	.LVL380:
 6637 008e 0346     		mov	r3, r0	@ movhi
 6638 0090 2046     		mov	r0, r4
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6639              		.loc 19 639 20 view .LVU1844
 6640 0092 DFF82493 		ldr	r9, .L474+112
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6641              		.loc 19 621 18 view .LVU1845
 6642 0096 ADF81830 		strh	r3, [sp, #24]	@ movhi
 6643 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6644              	.LVL381:
 6645 009e 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6646              		.loc 19 621 85 view .LVU1846
 6647 00a0 A948     		ldr	r0, .L474
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6648              		.loc 19 621 18 view .LVU1847
 6649 00a2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6650              		.loc 19 621 85 view .LVU1848
 6651 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6652              	.LVL382:
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6653              		.loc 19 621 18 view .LVU1849
 6654 00aa 079A     		ldr	r2, [sp, #28]
 6655 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 6656 00b0 0699     		ldr	r1, [sp, #24]
 6657 00b2 0023     		movs	r3, #0
 6658 00b4 A948     		ldr	r0, .L474+20
 6659 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6660              	.LVL383:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6661              		.loc 19 622 5 is_stmt 1 view .LVU1850
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6662              		.loc 19 622 18 is_stmt 0 view .LVU1851
 6663 00ba 0B20     		movs	r0, #11
 6664 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6665              	.LVL384:
 6666 00c0 0346     		mov	r3, r0	@ movhi
 6667 00c2 0320     		movs	r0, #3
 6668 00c4 ADF82030 		strh	r3, [sp, #32]	@ movhi
 6669 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 230


 6670              	.LVL385:
 6671 00cc 0346     		mov	r3, r0	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6672              		.loc 19 622 85 view .LVU1852
 6673 00ce 9E48     		ldr	r0, .L474
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6674              		.loc 19 622 18 view .LVU1853
 6675 00d0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6676              		.loc 19 622 85 view .LVU1854
 6677 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6678              	.LVL386:
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6679              		.loc 19 622 18 view .LVU1855
 6680 00d8 099A     		ldr	r2, [sp, #36]
 6681 00da 80EE080A 		vdiv.f32	s0, s0, s16
 6682 00de 0899     		ldr	r1, [sp, #32]
 6683 00e0 0023     		movs	r3, #0
 6684 00e2 9F48     		ldr	r0, .L474+24
 6685 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6686              	.LVL387:
 623:Veno-Echo.cpp **** 
 6687              		.loc 19 623 5 is_stmt 1 view .LVU1856
 623:Veno-Echo.cpp **** 
 6688              		.loc 19 623 20 is_stmt 0 view .LVU1857
 6689 00e8 1820     		movs	r0, #24
 6690 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6691              	.LVL388:
 6692 00ee 0346     		mov	r3, r0	@ movhi
 6693 00f0 0420     		movs	r0, #4
 6694 00f2 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6695 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6696              	.LVL389:
 6697 00fa 0346     		mov	r3, r0	@ movhi
 623:Veno-Echo.cpp **** 
 6698              		.loc 19 623 93 view .LVU1858
 6699 00fc 9248     		ldr	r0, .L474
 623:Veno-Echo.cpp **** 
 6700              		.loc 19 623 20 view .LVU1859
 6701 00fe ADF82C30 		strh	r3, [sp, #44]	@ movhi
 623:Veno-Echo.cpp **** 
 6702              		.loc 19 623 93 view .LVU1860
 6703 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6704              	.LVL390:
 623:Veno-Echo.cpp **** 
 6705              		.loc 19 623 20 view .LVU1861
 6706 0106 2346     		mov	r3, r4
 6707 0108 80EE080A 		vdiv.f32	s0, s0, s16
 6708 010c 0B9A     		ldr	r2, [sp, #44]
 6709 010e 0A99     		ldr	r1, [sp, #40]
 6710 0110 9448     		ldr	r0, .L474+28
 6711 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6712              	.LVL391:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6713              		.loc 19 626 5 is_stmt 1 view .LVU1862
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6714              		.loc 19 626 22 is_stmt 0 view .LVU1863
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 231


 6715 0116 0020     		movs	r0, #0
 6716 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6717              	.LVL392:
 6718 011c 0346     		mov	r3, r0	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6719              		.loc 19 626 55 view .LVU1864
 6720 011e 8A48     		ldr	r0, .L474
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6721              		.loc 19 626 22 view .LVU1865
 6722 0120 ADF83030 		strh	r3, [sp, #48]	@ movhi
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6723              		.loc 19 626 55 view .LVU1866
 6724 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6725              	.LVL393:
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6726              		.loc 19 626 22 view .LVU1867
 6727 0128 3A46     		mov	r2, r7
 6728 012a 0C99     		ldr	r1, [sp, #48]
 6729 012c 80EE090A 		vdiv.f32	s0, s0, s18
 6730 0130 3B46     		mov	r3, r7
 6731 0132 8D48     		ldr	r0, .L474+32
 6732 0134 0094     		str	r4, [sp]
 6733 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6734              	.LVL394:
 627:Veno-Echo.cpp **** 
 6735              		.loc 19 627 5 is_stmt 1 view .LVU1868
 627:Veno-Echo.cpp **** 
 6736              		.loc 19 627 22 is_stmt 0 view .LVU1869
 6737 013a 3846     		mov	r0, r7
 6738 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6739              	.LVL395:
 6740 0140 0346     		mov	r3, r0	@ movhi
 627:Veno-Echo.cpp **** 
 6741              		.loc 19 627 55 view .LVU1870
 6742 0142 8148     		ldr	r0, .L474
 627:Veno-Echo.cpp **** 
 6743              		.loc 19 627 22 view .LVU1871
 6744 0144 ADF83430 		strh	r3, [sp, #52]	@ movhi
 627:Veno-Echo.cpp **** 
 6745              		.loc 19 627 55 view .LVU1872
 6746 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6747              	.LVL396:
 627:Veno-Echo.cpp **** 
 6748              		.loc 19 627 22 view .LVU1873
 6749 014c 3A46     		mov	r2, r7
 6750 014e 0D99     		ldr	r1, [sp, #52]
 6751 0150 80EE090A 		vdiv.f32	s0, s0, s18
 6752 0154 3B46     		mov	r3, r7
 6753 0156 8548     		ldr	r0, .L474+36
 6754 0158 0094     		str	r4, [sp]
 6755 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6756              	.LVL397:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6757              		.loc 19 630 5 is_stmt 1 view .LVU1874
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6758              		.loc 19 630 14 is_stmt 0 view .LVU1875
 6759 015e 1720     		movs	r0, #23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 232


 6760 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6761              	.LVL398:
 6762 0164 0346     		mov	r3, r0	@ movhi
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6763              		.loc 19 630 48 view .LVU1876
 6764 0166 7848     		ldr	r0, .L474
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6765              		.loc 19 630 14 view .LVU1877
 6766 0168 ADF83830 		strh	r3, [sp, #56]	@ movhi
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6767              		.loc 19 630 48 view .LVU1878
 6768 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6769              	.LVL399:
 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6770              		.loc 19 630 14 view .LVU1879
 6771 0170 0E99     		ldr	r1, [sp, #56]
 6772 0172 80EE090A 		vdiv.f32	s0, s0, s18
 6773 0176 7E48     		ldr	r0, .L474+40
 6774 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6775              	.LVL400:
 631:Veno-Echo.cpp ****     
 6776              		.loc 19 631 5 is_stmt 1 view .LVU1880
 631:Veno-Echo.cpp ****     
 6777              		.loc 19 631 17 is_stmt 0 view .LVU1881
 6778 017c 0520     		movs	r0, #5
 6779 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6780              	.LVL401:
 6781 0182 0346     		mov	r3, r0	@ movhi
 6782 0184 7048     		ldr	r0, .L474
 6783 0186 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6784 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6785              	.LVL402:
 6786 018e 0F99     		ldr	r1, [sp, #60]
 6787 0190 7848     		ldr	r0, .L474+44
 6788 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6789              	.LVL403:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6790              		.loc 19 633 5 is_stmt 1 view .LVU1882
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6791              		.loc 19 633 20 is_stmt 0 view .LVU1883
 6792 0196 6C48     		ldr	r0, .L474
 6793 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6794              	.LVL404:
 6795 019c 4046     		mov	r0, r8
 6796 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6797              	.LVL405:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6798              		.loc 19 634 5 is_stmt 1 view .LVU1884
 6799              	.LBB1352:
 6800              	.LBI1340:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6801              		.loc 7 54 17 view .LVU1885
 6802              	.LBB1342:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6803              		.loc 7 54 48 view .LVU1886
 6804              	.LBE1342:
 6805              	.LBE1352:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 233


 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6806              		.loc 19 639 20 is_stmt 0 view .LVU1887
 6807 01a2 6948     		ldr	r0, .L474
 6808              	.LBB1353:
 6809              	.LBB1338:
 6810              		.loc 7 58 57 view .LVU1888
 6811 01a4 C8ED008A 		vstr.32	s17, [r8]
 6812              	.LBE1338:
 6813              	.LBE1353:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6814              		.loc 19 645 17 view .LVU1889
 6815 01a8 734C     		ldr	r4, .L474+48
 6816              	.LBB1354:
 6817              	.LBB1343:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6818              		.loc 7 54 63 view .LVU1890
 6819 01aa C8F80850 		str	r5, [r8, #8]	@ float
 6820              	.LVL406:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6821              		.loc 7 54 63 view .LVU1891
 6822              	.LBE1343:
 6823              	.LBE1354:
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6824              		.loc 19 635 5 is_stmt 1 view .LVU1892
 6825              	.LBB1355:
 6826              	.LBI1348:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6827              		.loc 7 54 17 view .LVU1893
 6828              	.LBB1350:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6829              		.loc 7 54 48 view .LVU1894
 6830              	.LBE1350:
 6831              	.LBE1355:
 6832              	.LBB1356:
 6833              	.LBB1357:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6834              		.loc 7 54 63 is_stmt 0 view .LVU1895
 6835 01ae C8F81450 		str	r5, [r8, #20]	@ float
 6836              	.LBE1357:
 6837              	.LBE1356:
 6838              	.LBB1359:
 6839              	.LBB1351:
 6840 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 6841              	.LVL407:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6842              		.loc 7 54 63 view .LVU1896
 6843              	.LBE1351:
 6844              	.LBE1359:
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6845              		.loc 19 636 5 is_stmt 1 view .LVU1897
 6846              	.LBB1360:
 6847              	.LBI1356:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6848              		.loc 7 54 17 view .LVU1898
 6849              	.LBB1358:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6850              		.loc 7 54 48 view .LVU1899
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 234


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6851              		.loc 7 54 48 is_stmt 0 view .LVU1900
 6852              	.LBE1358:
 6853              	.LBE1360:
 637:Veno-Echo.cpp **** 
 6854              		.loc 19 637 5 is_stmt 1 view .LVU1901
 6855              	.LBB1361:
 6856              	.LBI1336:
 6857              		.loc 7 58 17 view .LVU1902
 6858              	.LBB1339:
 6859              		.loc 7 58 52 view .LVU1903
 6860              		.loc 7 58 52 is_stmt 0 view .LVU1904
 6861              	.LBE1339:
 6862              	.LBE1361:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6863              		.loc 19 639 5 is_stmt 1 view .LVU1905
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6864              		.loc 19 639 20 is_stmt 0 view .LVU1906
 6865 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6866              	.LVL408:
 6867 01ba 4846     		mov	r0, r9
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6868              		.loc 19 651 17 view .LVU1907
 6869 01bc DFF8FC81 		ldr	r8, .L474+116
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6870              		.loc 19 639 20 view .LVU1908
 6871 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6872              	.LVL409:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6873              		.loc 19 640 5 is_stmt 1 view .LVU1909
 6874              	.LBB1362:
 6875              	.LBI1362:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6876              		.loc 7 54 17 view .LVU1910
 6877              	.LBB1363:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6878              		.loc 7 54 48 view .LVU1911
 6879              	.LBE1363:
 6880              	.LBE1362:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6881              		.loc 19 645 17 is_stmt 0 view .LVU1912
 6882 01c4 6048     		ldr	r0, .L474
 6883              	.LBB1365:
 6884              	.LBB1364:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6885              		.loc 7 54 63 view .LVU1913
 6886 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 6887              	.LVL410:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6888              		.loc 7 54 63 view .LVU1914
 6889              	.LBE1364:
 6890              	.LBE1365:
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6891              		.loc 19 641 5 is_stmt 1 view .LVU1915
 6892              	.LBB1366:
 6893              	.LBI1366:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 235


 6894              		.loc 7 54 17 view .LVU1916
 6895              	.LBB1367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6896              		.loc 7 54 48 view .LVU1917
 6897              	.LBE1367:
 6898              	.LBE1366:
 6899              	.LBB1369:
 6900              	.LBB1370:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6901              		.loc 7 54 63 is_stmt 0 view .LVU1918
 6902 01ca C9F81450 		str	r5, [r9, #20]	@ float
 6903              	.LBE1370:
 6904              	.LBE1369:
 6905              	.LBB1372:
 6906              	.LBB1368:
 6907 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 6908              	.LVL411:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6909              		.loc 7 54 63 view .LVU1919
 6910              	.LBE1368:
 6911              	.LBE1372:
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6912              		.loc 19 642 5 is_stmt 1 view .LVU1920
 6913              	.LBB1373:
 6914              	.LBI1369:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6915              		.loc 7 54 17 view .LVU1921
 6916              	.LBB1371:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6917              		.loc 7 54 48 view .LVU1922
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6918              		.loc 7 54 48 is_stmt 0 view .LVU1923
 6919              	.LBE1371:
 6920              	.LBE1373:
 643:Veno-Echo.cpp **** 
 6921              		.loc 19 643 5 is_stmt 1 view .LVU1924
 6922              	.LBB1374:
 6923              	.LBI1374:
 6924              		.loc 7 58 17 view .LVU1925
 6925              	.LBB1375:
 6926              		.loc 7 58 52 view .LVU1926
 6927              		.loc 7 58 57 is_stmt 0 view .LVU1927
 6928 01d2 C9ED008A 		vstr.32	s17, [r9]
 6929              	.LVL412:
 6930              		.loc 7 58 57 view .LVU1928
 6931              	.LBE1375:
 6932              	.LBE1374:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6933              		.loc 19 645 5 is_stmt 1 view .LVU1929
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6934              		.loc 19 645 17 is_stmt 0 view .LVU1930
 6935 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6936              	.LVL413:
 6937 01da 2046     		mov	r0, r4
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6938              		.loc 19 670 17 view .LVU1931
 6939 01dc 9FED678A 		vldr.32	s16, .L474+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 236


 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6940              		.loc 19 645 17 view .LVU1932
 6941 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6942              	.LVL414:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6943              		.loc 19 646 5 is_stmt 1 view .LVU1933
 6944              	.LBB1376:
 6945              	.LBI1376:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6946              		.loc 7 54 17 view .LVU1934
 6947              	.LBB1377:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6948              		.loc 7 54 48 view .LVU1935
 6949              	.LBE1377:
 6950              	.LBE1376:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6951              		.loc 19 651 17 is_stmt 0 view .LVU1936
 6952 01e4 5848     		ldr	r0, .L474
 6953              	.LBB1379:
 6954              	.LBB1380:
 6955              		.loc 7 58 57 view .LVU1937
 6956 01e6 C4ED008A 		vstr.32	s17, [r4]
 6957              	.LBE1380:
 6958              	.LBE1379:
 6959              	.LBB1382:
 6960              	.LBB1378:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6961              		.loc 7 54 63 view .LVU1938
 6962 01ea A660     		str	r6, [r4, #8]	@ float
 6963              	.LVL415:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6964              		.loc 7 54 63 view .LVU1939
 6965              	.LBE1378:
 6966              	.LBE1382:
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6967              		.loc 19 647 5 is_stmt 1 view .LVU1940
 6968              	.LBB1383:
 6969              	.LBI1383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6970              		.loc 7 54 17 view .LVU1941
 6971              	.LBB1384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6972              		.loc 7 54 48 view .LVU1942
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6973              		.loc 7 54 63 is_stmt 0 view .LVU1943
 6974 01ec E660     		str	r6, [r4, #12]	@ float
 6975              	.LVL416:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6976              		.loc 7 54 63 view .LVU1944
 6977              	.LBE1384:
 6978              	.LBE1383:
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 6979              		.loc 19 648 5 is_stmt 1 view .LVU1945
 6980              	.LBB1385:
 6981              	.LBI1385:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6982              		.loc 7 54 17 view .LVU1946
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 237


 6983              	.LBB1386:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6984              		.loc 7 54 48 view .LVU1947
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6985              		.loc 7 54 63 is_stmt 0 view .LVU1948
 6986 01ee 6661     		str	r6, [r4, #20]	@ float
 6987              	.LVL417:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6988              		.loc 7 54 63 view .LVU1949
 6989              	.LBE1386:
 6990              	.LBE1385:
 649:Veno-Echo.cpp **** 
 6991              		.loc 19 649 5 is_stmt 1 view .LVU1950
 6992              	.LBB1387:
 6993              	.LBI1379:
 6994              		.loc 7 58 17 view .LVU1951
 6995              	.LBB1381:
 6996              		.loc 7 58 52 view .LVU1952
 6997              		.loc 7 58 52 is_stmt 0 view .LVU1953
 6998              	.LBE1381:
 6999              	.LBE1387:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7000              		.loc 19 651 5 is_stmt 1 view .LVU1954
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7001              		.loc 19 651 17 is_stmt 0 view .LVU1955
 7002 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7003              	.LVL418:
 7004 01f4 4046     		mov	r0, r8
 7005              	.LBB1388:
 7006              	.LBB1389:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7007              		.loc 8 44 20 view .LVU1956
 7008 01f6 624C     		ldr	r4, .L474+56
 7009              	.LBE1389:
 7010              	.LBE1388:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7011              		.loc 19 651 17 view .LVU1957
 7012 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7013              	.LVL419:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7014              		.loc 19 652 5 is_stmt 1 view .LVU1958
 7015              	.LBB1394:
 7016              	.LBI1394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7017              		.loc 7 54 17 view .LVU1959
 7018              	.LBB1395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7019              		.loc 7 54 48 view .LVU1960
 7020              	.LBE1395:
 7021              	.LBE1394:
 7022              	.LBB1397:
 7023              	.LBB1398:
 7024              	.LBB1399:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7025              		.loc 10 45 16 is_stmt 0 view .LVU1961
 7026 01fc 6149     		ldr	r1, .L474+60
 7027              	.LBE1399:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 238


 7028              	.LBE1398:
 7029              	.LBE1397:
 7030              	.LBB1404:
 7031              	.LBB1405:
 7032              	.LBB1406:
 7033 01fe 624A     		ldr	r2, .L474+64
 7034              	.LBE1406:
 7035              	.LBE1405:
 7036              	.LBE1404:
 7037              	.LBB1411:
 7038              	.LBB1412:
 7039              	.LBB1413:
 7040 0200 624B     		ldr	r3, .L474+68
 7041              	.LBE1413:
 7042              	.LBE1412:
 7043              	.LBE1411:
 7044              	.LBB1418:
 7045              	.LBB1402:
 7046              	.LBB1400:
 7047 0202 0D60     		str	r5, [r1]	@ float
 7048              	.LBE1400:
 7049              	.LBE1402:
 7050              	.LBE1418:
 7051              	.LBB1419:
 7052              	.LBB1409:
 7053              	.LBB1407:
 7054 0204 1560     		str	r5, [r2]	@ float
 7055              	.LBE1407:
 7056              	.LBE1409:
 7057              	.LBE1419:
 7058              	.LBB1420:
 7059              	.LBB1416:
 7060              	.LBB1414:
 7061 0206 1D60     		str	r5, [r3]	@ float
 7062              	.LBE1414:
 7063              	.LBE1416:
 7064              	.LBE1420:
 7065              	.LBB1421:
 7066              	.LBB1346:
 7067              		.loc 10 64 50 view .LVU1962
 7068 0208 0F71     		strb	r7, [r1, #4]
 7069              	.LBE1346:
 7070              	.LBE1421:
 7071              	.LBB1422:
 7072              	.LBB1423:
 7073 020a 1771     		strb	r7, [r2, #4]
 7074              	.LBE1423:
 7075              	.LBE1422:
 7076              	.LBB1425:
 7077              	.LBB1426:
 7078 020c 1F71     		strb	r7, [r3, #4]
 7079              	.LBE1426:
 7080              	.LBE1425:
 666:Veno-Echo.cpp **** 
 7081              		.loc 19 666 15 view .LVU1963
 7082 020e 4E48     		ldr	r0, .L474
 7083              	.LBB1428:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 239


 7084              	.LBB1429:
 7085              		.loc 7 58 57 view .LVU1964
 7086 0210 C8ED008A 		vstr.32	s17, [r8]
 7087              	.LBE1429:
 7088              	.LBE1428:
 7089              	.LBB1431:
 7090              	.LBB1396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7091              		.loc 7 54 63 view .LVU1965
 7092 0214 C8F80860 		str	r6, [r8, #8]	@ float
 7093              	.LVL420:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7094              		.loc 7 54 63 view .LVU1966
 7095              	.LBE1396:
 7096              	.LBE1431:
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7097              		.loc 19 653 5 is_stmt 1 view .LVU1967
 7098              	.LBB1432:
 7099              	.LBI1432:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7100              		.loc 7 54 17 view .LVU1968
 7101              	.LBB1433:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7102              		.loc 7 54 48 view .LVU1969
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7103              		.loc 7 54 63 is_stmt 0 view .LVU1970
 7104 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 7105              	.LVL421:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7106              		.loc 7 54 63 view .LVU1971
 7107              	.LBE1433:
 7108              	.LBE1432:
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7109              		.loc 19 654 5 is_stmt 1 view .LVU1972
 7110              	.LBB1434:
 7111              	.LBI1434:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7112              		.loc 7 54 17 view .LVU1973
 7113              	.LBB1435:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7114              		.loc 7 54 48 view .LVU1974
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7115              		.loc 7 54 63 is_stmt 0 view .LVU1975
 7116 021c C8F81460 		str	r6, [r8, #20]	@ float
 7117              	.LVL422:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7118              		.loc 7 54 63 view .LVU1976
 7119              	.LBE1435:
 7120              	.LBE1434:
 655:Veno-Echo.cpp **** 
 7121              		.loc 19 655 5 is_stmt 1 view .LVU1977
 7122              	.LBB1436:
 7123              	.LBI1428:
 7124              		.loc 7 58 17 view .LVU1978
 7125              	.LBB1430:
 7126              		.loc 7 58 52 view .LVU1979
 7127              		.loc 7 58 52 is_stmt 0 view .LVU1980
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 240


 7128              	.LBE1430:
 7129              	.LBE1436:
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7130              		.loc 19 658 5 is_stmt 1 view .LVU1981
 7131              	.LBB1437:
 7132              	.LBI1397:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7133              		.loc 10 51 17 view .LVU1982
 7134              	.LBE1437:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7135              		.loc 10 51 26 view .LVU1983
 7136              	.LBB1438:
 7137              	.LBB1403:
 7138              	.LBI1398:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7139              		.loc 10 43 17 view .LVU1984
 7140              	.LBB1401:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7141              		.loc 10 45 9 view .LVU1985
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7142              		.loc 10 46 9 view .LVU1986
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7143              		.loc 10 46 9 is_stmt 0 view .LVU1987
 7144              	.LBE1401:
 7145              	.LBE1403:
 7146              	.LBE1438:
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7147              		.loc 19 659 5 is_stmt 1 view .LVU1988
 7148              	.LBB1439:
 7149              	.LBI1344:
 7150              		.loc 10 64 17 view .LVU1989
 7151              	.LBB1347:
 7152              		.loc 10 64 43 view .LVU1990
 7153              		.loc 10 64 43 is_stmt 0 view .LVU1991
 7154              	.LBE1347:
 7155              	.LBE1439:
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7156              		.loc 19 660 5 is_stmt 1 view .LVU1992
 7157              	.LBB1440:
 7158              	.LBI1404:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7159              		.loc 10 51 17 view .LVU1993
 7160              	.LBE1440:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7161              		.loc 10 51 26 view .LVU1994
 7162              	.LBB1441:
 7163              	.LBB1410:
 7164              	.LBI1405:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7165              		.loc 10 43 17 view .LVU1995
 7166              	.LBB1408:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7167              		.loc 10 45 9 view .LVU1996
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7168              		.loc 10 46 9 view .LVU1997
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7169              		.loc 10 46 9 is_stmt 0 view .LVU1998
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 241


 7170              	.LBE1408:
 7171              	.LBE1410:
 7172              	.LBE1441:
 661:Veno-Echo.cpp **** 
 7173              		.loc 19 661 5 is_stmt 1 view .LVU1999
 7174              	.LBB1442:
 7175              	.LBI1422:
 7176              		.loc 10 64 17 view .LVU2000
 7177              	.LBB1424:
 7178              		.loc 10 64 43 view .LVU2001
 7179              		.loc 10 64 43 is_stmt 0 view .LVU2002
 7180              	.LBE1424:
 7181              	.LBE1442:
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7182              		.loc 19 663 5 is_stmt 1 view .LVU2003
 7183              	.LBB1443:
 7184              	.LBI1411:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7185              		.loc 10 51 17 view .LVU2004
 7186              	.LBE1443:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7187              		.loc 10 51 26 view .LVU2005
 7188              	.LBB1444:
 7189              	.LBB1417:
 7190              	.LBI1412:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7191              		.loc 10 43 17 view .LVU2006
 7192              	.LBB1415:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7193              		.loc 10 45 9 view .LVU2007
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7194              		.loc 10 46 9 view .LVU2008
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7195              		.loc 10 46 9 is_stmt 0 view .LVU2009
 7196              	.LBE1415:
 7197              	.LBE1417:
 7198              	.LBE1444:
 664:Veno-Echo.cpp **** 
 7199              		.loc 19 664 5 is_stmt 1 view .LVU2010
 7200              	.LBB1445:
 7201              	.LBI1425:
 7202              		.loc 10 64 17 view .LVU2011
 7203              	.LBB1427:
 7204              		.loc 10 64 43 view .LVU2012
 7205              		.loc 10 64 43 is_stmt 0 view .LVU2013
 7206              	.LBE1427:
 7207              	.LBE1445:
 666:Veno-Echo.cpp **** 
 7208              		.loc 19 666 5 is_stmt 1 view .LVU2014
 666:Veno-Echo.cpp **** 
 7209              		.loc 19 666 15 is_stmt 0 view .LVU2015
 7210 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7211              	.LVL423:
 7212 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 7213              	.LVL424:
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7214              		.loc 19 669 5 is_stmt 1 view .LVU2016
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 242


 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7215              		.loc 19 669 15 is_stmt 0 view .LVU2017
 7216 0228 4748     		ldr	r0, .L474
 7217 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7218              	.LVL425:
 7219 022e 5848     		ldr	r0, .L474+72
 7220 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7221              	.LVL426:
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7222              		.loc 19 670 5 is_stmt 1 view .LVU2018
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7223              		.loc 19 670 17 is_stmt 0 view .LVU2019
 7224 0234 B0EE480A 		vmov.f32	s0, s16
 7225 0238 5548     		ldr	r0, .L474+72
 7226 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7227              	.LVL427:
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7228              		.loc 19 671 5 is_stmt 1 view .LVU2020
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7229              		.loc 19 671 18 is_stmt 0 view .LVU2021
 7230 023e 9FED550A 		vldr.32	s0, .L474+76
 7231 0242 5348     		ldr	r0, .L474+72
 7232 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7233              	.LVL428:
 672:Veno-Echo.cpp **** 
 7234              		.loc 19 672 5 is_stmt 1 view .LVU2022
 672:Veno-Echo.cpp **** 
 7235              		.loc 19 672 19 is_stmt 0 view .LVU2023
 7236 0248 9FED5D0A 		vldr.32	s0, .L474+120
 7237 024c 5048     		ldr	r0, .L474+72
 7238 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7239              	.LVL429:
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7240              		.loc 19 674 5 is_stmt 1 view .LVU2024
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7241              		.loc 19 674 15 is_stmt 0 view .LVU2025
 7242 0252 3D48     		ldr	r0, .L474
 7243 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7244              	.LVL430:
 7245 0258 4F48     		ldr	r0, .L474+80
 7246 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7247              	.LVL431:
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7248              		.loc 19 675 5 is_stmt 1 view .LVU2026
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7249              		.loc 19 675 17 is_stmt 0 view .LVU2027
 7250 025e B0EE480A 		vmov.f32	s0, s16
 7251 0262 4D48     		ldr	r0, .L474+80
 7252 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7253              	.LVL432:
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7254              		.loc 19 676 5 is_stmt 1 view .LVU2028
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7255              		.loc 19 676 18 is_stmt 0 view .LVU2029
 7256 0268 9FED4A0A 		vldr.32	s0, .L474+76
 7257 026c 4A48     		ldr	r0, .L474+80
 7258 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 243


 7259              	.LVL433:
 677:Veno-Echo.cpp **** 
 7260              		.loc 19 677 5 is_stmt 1 view .LVU2030
 677:Veno-Echo.cpp **** 
 7261              		.loc 19 677 19 is_stmt 0 view .LVU2031
 7262 0272 9FED530A 		vldr.32	s0, .L474+120
 7263 0276 4848     		ldr	r0, .L474+80
 7264 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7265              	.LVL434:
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7266              		.loc 19 680 5 is_stmt 1 view .LVU2032
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7267              		.loc 19 680 15 is_stmt 0 view .LVU2033
 7268 027c 3248     		ldr	r0, .L474
 7269 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7270              	.LVL435:
 7271 0282 4648     		ldr	r0, .L474+84
 7272 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7273              	.LVL436:
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7274              		.loc 19 681 5 is_stmt 1 view .LVU2034
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7275              		.loc 19 681 17 is_stmt 0 view .LVU2035
 7276 0288 B0EE480A 		vmov.f32	s0, s16
 7277 028c 4348     		ldr	r0, .L474+84
 7278 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7279              	.LVL437:
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7280              		.loc 19 682 5 is_stmt 1 view .LVU2036
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7281              		.loc 19 682 18 is_stmt 0 view .LVU2037
 7282 0292 9FED430A 		vldr.32	s0, .L474+88
 7283 0296 4148     		ldr	r0, .L474+84
 7284 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7285              	.LVL438:
 683:Veno-Echo.cpp **** 
 7286              		.loc 19 683 5 is_stmt 1 view .LVU2038
 683:Veno-Echo.cpp **** 
 7287              		.loc 19 683 19 is_stmt 0 view .LVU2039
 7288 029c 9FED480A 		vldr.32	s0, .L474+120
 7289 02a0 3E48     		ldr	r0, .L474+84
 7290 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7291              	.LVL439:
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7292              		.loc 19 685 5 is_stmt 1 view .LVU2040
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7293              		.loc 19 685 15 is_stmt 0 view .LVU2041
 7294 02a6 2848     		ldr	r0, .L474
 7295 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7296              	.LVL440:
 7297 02ac 3D48     		ldr	r0, .L474+92
 7298 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7299              	.LVL441:
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7300              		.loc 19 686 5 is_stmt 1 view .LVU2042
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7301              		.loc 19 686 17 is_stmt 0 view .LVU2043
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 244


 7302 02b2 B0EE480A 		vmov.f32	s0, s16
 7303 02b6 3B48     		ldr	r0, .L474+92
 7304 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7305              	.LVL442:
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7306              		.loc 19 687 5 is_stmt 1 view .LVU2044
 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7307              		.loc 19 687 18 is_stmt 0 view .LVU2045
 7308 02bc 9FED380A 		vldr.32	s0, .L474+88
 7309 02c0 3848     		ldr	r0, .L474+92
 7310 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7311              	.LVL443:
 688:Veno-Echo.cpp **** 
 7312              		.loc 19 688 5 is_stmt 1 view .LVU2046
 688:Veno-Echo.cpp **** 
 7313              		.loc 19 688 19 is_stmt 0 view .LVU2047
 7314 02c6 9FED3E0A 		vldr.32	s0, .L474+120
 7315 02ca 3648     		ldr	r0, .L474+92
 7316 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7317              	.LVL444:
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7318              		.loc 19 691 5 is_stmt 1 view .LVU2048
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7319              		.loc 19 691 20 is_stmt 0 view .LVU2049
 7320 02d0 1D48     		ldr	r0, .L474
 7321 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7322              	.LVL445:
 7323 02d6 3448     		ldr	r0, .L474+96
 7324 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7325              	.LVL446:
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7326              		.loc 19 692 5 is_stmt 1 view .LVU2050
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7327              		.loc 19 692 22 is_stmt 0 view .LVU2051
 7328 02dc B0EE480A 		vmov.f32	s0, s16
 7329 02e0 3148     		ldr	r0, .L474+96
 7330 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7331              	.LVL447:
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7332              		.loc 19 693 5 is_stmt 1 view .LVU2052
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7333              		.loc 19 693 23 is_stmt 0 view .LVU2053
 7334 02e6 9FED2B0A 		vldr.32	s0, .L474+76
 7335 02ea 2F48     		ldr	r0, .L474+96
 7336 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7337              	.LVL448:
 694:Veno-Echo.cpp **** 
 7338              		.loc 19 694 5 is_stmt 1 view .LVU2054
 694:Veno-Echo.cpp **** 
 7339              		.loc 19 694 24 is_stmt 0 view .LVU2055
 7340 02f0 9FED330A 		vldr.32	s0, .L474+120
 7341 02f4 2C48     		ldr	r0, .L474+96
 7342 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7343              	.LVL449:
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7344              		.loc 19 696 5 is_stmt 1 view .LVU2056
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 245


 7345              		.loc 19 696 20 is_stmt 0 view .LVU2057
 7346 02fa 1348     		ldr	r0, .L474
 7347 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7348              	.LVL450:
 7349 0300 2A48     		ldr	r0, .L474+100
 7350 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7351              	.LVL451:
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7352              		.loc 19 697 5 is_stmt 1 view .LVU2058
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7353              		.loc 19 697 22 is_stmt 0 view .LVU2059
 7354 0306 B0EE480A 		vmov.f32	s0, s16
 7355 030a 2848     		ldr	r0, .L474+100
 7356 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7357              	.LVL452:
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7358              		.loc 19 698 5 is_stmt 1 view .LVU2060
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7359              		.loc 19 698 23 is_stmt 0 view .LVU2061
 7360 0310 9FED200A 		vldr.32	s0, .L474+76
 7361 0314 2548     		ldr	r0, .L474+100
 7362 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7363              	.LVL453:
 699:Veno-Echo.cpp **** 
 7364              		.loc 19 699 5 is_stmt 1 view .LVU2062
 699:Veno-Echo.cpp **** 
 7365              		.loc 19 699 24 is_stmt 0 view .LVU2063
 7366 031a 9FED290A 		vldr.32	s0, .L474+120
 7367 031e 2348     		ldr	r0, .L474+100
 7368 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7369              	.LVL454:
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7370              		.loc 19 702 5 is_stmt 1 view .LVU2064
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7371              		.loc 19 702 20 is_stmt 0 view .LVU2065
 7372 0324 0848     		ldr	r0, .L474
 7373 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7374              	.LVL455:
 7375 032a 2148     		ldr	r0, .L474+104
 7376 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7377              	.LVL456:
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7378              		.loc 19 703 5 is_stmt 1 view .LVU2066
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7379              		.loc 19 703 22 is_stmt 0 view .LVU2067
 7380 0330 B0EE480A 		vmov.f32	s0, s16
 7381 0334 1E48     		ldr	r0, .L474+104
 7382 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7383              	.LVL457:
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7384              		.loc 19 704 5 is_stmt 1 view .LVU2068
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7385              		.loc 19 704 23 is_stmt 0 view .LVU2069
 7386 033a 9FED190A 		vldr.32	s0, .L474+88
 7387 033e 1C48     		ldr	r0, .L474+104
 7388 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7389              	.LVL458:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 246


 7390 0344 3EE0     		b	.L475
 7391              	.L476:
 7392 0346 00BF     		.align	2
 7393              	.L474:
 7394 0348 00000000 		.word	.LANCHOR4
 7395 034c 00004042 		.word	1111490560
 7396 0350 00000000 		.word	.LANCHOR94
 7397 0354 0AD7233C 		.word	1008981770
 7398 0358 00000000 		.word	.LANCHOR95
 7399 035c 00000000 		.word	.LANCHOR96
 7400 0360 00000000 		.word	.LANCHOR97
 7401 0364 00000000 		.word	.LANCHOR98
 7402 0368 00000000 		.word	.LANCHOR99
 7403 036c 00000000 		.word	.LANCHOR100
 7404 0370 00000000 		.word	.LANCHOR101
 7405 0374 00000000 		.word	.LANCHOR70
 7406 0378 00000000 		.word	.LANCHOR104
 7407 037c 00000000 		.word	0
 7408 0380 00000000 		.word	.LANCHOR58
 7409 0384 00000000 		.word	.LANCHOR106
 7410 0388 00000000 		.word	.LANCHOR107
 7411 038c 00000000 		.word	.LANCHOR47
 7412 0390 00000000 		.word	.LANCHOR29
 7413 0394 00803B46 		.word	1178304512
 7414 0398 00000000 		.word	.LANCHOR30
 7415 039c 00000000 		.word	.LANCHOR16
 7416 03a0 00004843 		.word	1128792064
 7417 03a4 00000000 		.word	.LANCHOR17
 7418 03a8 00000000 		.word	.LANCHOR31
 7419 03ac 00000000 		.word	.LANCHOR32
 7420 03b0 00000000 		.word	.LANCHOR18
 7421 03b4 00000000 		.word	.LANCHOR102
 7422 03b8 00000000 		.word	.LANCHOR103
 7423 03bc 00000000 		.word	.LANCHOR105
 7424 03c0 3333333F 		.word	1060320051
 7425              	.L475:
 705:Veno-Echo.cpp **** 
 7426              		.loc 19 705 5 is_stmt 1 view .LVU2070
 705:Veno-Echo.cpp **** 
 7427              		.loc 19 705 24 is_stmt 0 view .LVU2071
 7428 03c4 1FED020A 		vldr.32	s0, .L474+120
 7429 03c8 7B48     		ldr	r0, .L477
 7430 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7431              	.LVL459:
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7432              		.loc 19 707 5 is_stmt 1 view .LVU2072
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7433              		.loc 19 707 20 is_stmt 0 view .LVU2073
 7434 03ce 7B48     		ldr	r0, .L477+4
 7435 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7436              	.LVL460:
 7437 03d4 7A48     		ldr	r0, .L477+8
 7438 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7439              	.LVL461:
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7440              		.loc 19 708 5 is_stmt 1 view .LVU2074
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 247


 7441              		.loc 19 708 22 is_stmt 0 view .LVU2075
 7442 03da B0EE480A 		vmov.f32	s0, s16
 7443 03de 7848     		ldr	r0, .L477+8
 7444 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7445              	.LVL462:
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7446              		.loc 19 709 5 is_stmt 1 view .LVU2076
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7447              		.loc 19 709 23 is_stmt 0 view .LVU2077
 7448 03e4 9FED770A 		vldr.32	s0, .L477+12
 7449 03e8 7548     		ldr	r0, .L477+8
 7450 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7451              	.LVL463:
 710:Veno-Echo.cpp **** 
 7452              		.loc 19 710 5 is_stmt 1 view .LVU2078
 710:Veno-Echo.cpp **** 
 7453              		.loc 19 710 24 is_stmt 0 view .LVU2079
 7454 03ee 9FED760A 		vldr.32	s0, .L477+16
 7455 03f2 7348     		ldr	r0, .L477+8
 7456 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7457              	.LVL464:
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7458              		.loc 19 712 5 is_stmt 1 view .LVU2080
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7459              		.loc 19 712 21 is_stmt 0 view .LVU2081
 7460 03f8 7048     		ldr	r0, .L477+4
 7461 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7462              	.LVL465:
 7463 03fe 7348     		ldr	r0, .L477+20
 7464 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7465              	.LVL466:
 713:Veno-Echo.cpp **** 
 7466              		.loc 19 713 5 is_stmt 1 view .LVU2082
 713:Veno-Echo.cpp **** 
 7467              		.loc 19 713 21 is_stmt 0 view .LVU2083
 7468 0404 6D48     		ldr	r0, .L477+4
 7469 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7470              	.LVL467:
 7471 040a 7148     		ldr	r0, .L477+24
 7472 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7473              	.LVL468:
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7474              		.loc 19 716 5 is_stmt 1 view .LVU2084
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7475              		.loc 19 716 13 is_stmt 0 view .LVU2085
 7476 0410 6A48     		ldr	r0, .L477+4
 7477 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7478              	.LVL469:
 7479 0416 F0EE407A 		vmov.f32	s15, s0
 7480              	.LVL470:
 7481              	.LBB1446:
 7482              	.LBI1388:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7483              		.loc 8 42 10 is_stmt 1 view .LVU2086
 7484              	.LBB1390:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7485              		.loc 8 44 9 view .LVU2087
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 248


  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7486              		.loc 8 46 20 is_stmt 0 view .LVU2088
 7487 041a 9FED6E7A 		vldr.32	s14, .L477+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7488              		.loc 8 49 34 view .LVU2089
 7489 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7490              		.loc 8 47 20 view .LVU2090
 7491 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7492              		.loc 8 45 27 view .LVU2091
 7493 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7494              		.loc 8 46 20 view .LVU2092
 7495 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7496              		.loc 8 44 20 view .LVU2093
 7497 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7498              		.loc 8 45 9 is_stmt 1 view .LVU2094
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7499              		.loc 8 48 20 is_stmt 0 view .LVU2095
 7500 042e 84ED058A 		vstr.32	s16, [r4, #20]
 7501              	.LBE1390:
 7502              	.LBE1446:
 738:Veno-Echo.cpp **** 
 7503              		.loc 19 738 17 view .LVU2096
 7504 0432 694D     		ldr	r5, .L477+32
 7505              	.LBB1447:
 7506              	.LBB1391:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7507              		.loc 8 49 34 view .LVU2097
 7508 0434 B0EE470A 		vmov.f32	s0, s14
 7509              	.LVL471:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7510              		.loc 8 45 20 view .LVU2098
 7511 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7512              		.loc 8 46 9 is_stmt 1 view .LVU2099
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7513              		.loc 8 47 9 view .LVU2100
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7514              		.loc 8 48 9 view .LVU2101
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7515              		.loc 8 49 9 view .LVU2102
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7516              		.loc 8 49 34 is_stmt 0 view .LVU2103
 7517 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7518              	.LVL472:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7519              		.loc 8 52 20 view .LVU2104
 7520 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7521              		.loc 8 49 34 view .LVU2105
 7522 0444 F0EE407A 		vmov.f32	s15, s0
 7523              	.LBE1391:
 7524              	.LBE1447:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 249


 7525              	.LBB1448:
 7526              	.LBB1449:
 7527              		.loc 8 61 34 view .LVU2106
 7528 0448 2046     		mov	r0, r4
 7529              	.LBE1449:
 7530              	.LBE1448:
 7531              	.LBB1453:
 7532              	.LBB1454:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7533              		.loc 8 72 19 view .LVU2107
 7534 044a 2770     		strb	r7, [r4]
 7535              	.LBE1454:
 7536              	.LBE1453:
 7537              	.LBB1456:
 7538              	.LBB1392:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7539              		.loc 8 52 20 view .LVU2108
 7540 044c A384     		strh	r3, [r4, #36]	@ movhi
 7541              	.LBE1392:
 7542              	.LBE1456:
 7543              	.LBB1457:
 7544              	.LBB1450:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7545              		.loc 8 61 34 view .LVU2109
 7546 044e B0EE680A 		vmov.f32	s0, s17
 7547              	.LBE1450:
 7548              	.LBE1457:
 7549              	.LBB1458:
 7550              	.LBB1393:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7551              		.loc 8 49 20 view .LVU2110
 7552 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7553              		.loc 8 50 9 is_stmt 1 view .LVU2111
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7554              		.loc 8 51 9 view .LVU2112
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7555              		.loc 8 52 9 view .LVU2113
 7556              	.LVL473:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7557              		.loc 8 52 9 is_stmt 0 view .LVU2114
 7558              	.LBE1393:
 7559              	.LBE1458:
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7560              		.loc 19 717 5 is_stmt 1 view .LVU2115
 7561              	.LBB1459:
 7562              	.LBI1453:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 250


  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7563              		.loc 8 70 17 view .LVU2116
 7564              	.LBB1455:
 7565              		.loc 8 72 9 view .LVU2117
 7566              		.loc 8 72 9 is_stmt 0 view .LVU2118
 7567              	.LBE1455:
 7568              	.LBE1459:
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7569              		.loc 19 718 5 is_stmt 1 view .LVU2119
 7570              	.LBB1460:
 7571              	.LBI1448:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7572              		.loc 8 58 17 view .LVU2120
 7573              	.LBB1451:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7574              		.loc 8 60 9 view .LVU2121
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7575              		.loc 8 61 9 view .LVU2122
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7576              		.loc 8 60 20 is_stmt 0 view .LVU2123
 7577 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7578              		.loc 8 61 34 view .LVU2124
 7579 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7580              	.LVL474:
 7581 045e F0EE407A 		vmov.f32	s15, s0
 7582              	.LBE1451:
 7583              	.LBE1460:
 726:Veno-Echo.cpp **** 
 7584              		.loc 19 726 19 view .LVU2125
 7585 0462 41F27072 		movw	r2, #6000
 7586 0466 5021     		movs	r1, #80
 7587 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 7588 046c 5B48     		ldr	r0, .L477+36
 7589              	.LBB1461:
 7590              	.LBB1462:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7591              		.loc 8 67 46 view .LVU2126
 7592 046e C4ED018A 		vstr.32	s17, [r4, #4]
 7593              	.LBE1462:
 7594              	.LBE1461:
 7595              	.LBB1464:
 7596              	.LBB1452:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7597              		.loc 8 61 20 view .LVU2127
 7598 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 7599              	.LVL475:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7600              		.loc 8 61 20 view .LVU2128
 7601              	.LBE1452:
 7602              	.LBE1464:
 719:Veno-Echo.cpp **** 
 7603              		.loc 19 719 5 is_stmt 1 view .LVU2129
 7604              	.LBB1465:
 7605              	.LBI1461:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7606              		.loc 8 67 17 view .LVU2130
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 251


 7607              	.LBB1463:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7608              		.loc 8 67 41 view .LVU2131
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7609              		.loc 8 67 41 is_stmt 0 view .LVU2132
 7610              	.LBE1463:
 7611              	.LBE1465:
 726:Veno-Echo.cpp **** 
 7612              		.loc 19 726 5 is_stmt 1 view .LVU2133
 726:Veno-Echo.cpp **** 
 7613              		.loc 19 726 19 is_stmt 0 view .LVU2134
 7614 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7615              	.LVL476:
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7616              		.loc 19 730 5 is_stmt 1 view .LVU2135
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7617              		.loc 19 730 23 is_stmt 0 view .LVU2136
 7618 047a 1820     		movs	r0, #24
 738:Veno-Echo.cpp **** 
 7619              		.loc 19 738 17 view .LVU2137
 7620 047c 584C     		ldr	r4, .L477+40
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7621              		.loc 19 730 23 view .LVU2138
 7622 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7623              	.LVL477:
 7624 0482 0346     		mov	r3, r0	@ movhi
 7625 0484 4D48     		ldr	r0, .L477+4
 7626 0486 ADF84030 		strh	r3, [sp, #64]	@ movhi
 7627 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7628              	.LVL478:
 7629 048e 1099     		ldr	r1, [sp, #64]
 7630 0490 5448     		ldr	r0, .L477+44
 7631 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7632              	.LVL479:
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7633              		.loc 19 731 5 is_stmt 1 view .LVU2139
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7634              		.loc 19 731 27 is_stmt 0 view .LVU2140
 7635 0496 5148     		ldr	r0, .L477+36
 7636 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7637              	.LVL480:
 7638 049c 5148     		ldr	r0, .L477+44
 7639 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7640              	.LVL481:
 732:Veno-Echo.cpp **** 
 7641              		.loc 19 732 5 is_stmt 1 view .LVU2141
 732:Veno-Echo.cpp **** 
 7642              		.loc 19 732 29 is_stmt 0 view .LVU2142
 7643 04a2 5048     		ldr	r0, .L477+44
 7644 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7645              	.LVL482:
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7646              		.loc 19 737 5 is_stmt 1 view .LVU2143
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7647              		.loc 19 737 18 is_stmt 0 view .LVU2144
 7648 04a8 4B48     		ldr	r0, .L477+32
 7649 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 252


 7650              	.LVL483:
 738:Veno-Echo.cpp **** 
 7651              		.loc 19 738 5 is_stmt 1 view .LVU2145
 738:Veno-Echo.cpp **** 
 7652              		.loc 19 738 17 is_stmt 0 view .LVU2146
 7653 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7654 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7655 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7656 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 746:Veno-Echo.cpp **** 
 7657              		.loc 19 746 5 is_stmt 1 view .LVU2147
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7658              		.loc 19 748 5 view .LVU2148
 748:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7659              		.loc 19 748 28 is_stmt 0 view .LVU2149
 7660 04ba 0F20     		movs	r0, #15
 7661 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7662              	.LVL484:
 7663 04c0 0346     		mov	r3, r0	@ movhi
 7664 04c2 1CA8     		add	r0, sp, #112
 7665 04c4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7666 04c8 1199     		ldr	r1, [sp, #68]
 7667 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7668              	.LVL485:
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7669              		.loc 19 749 5 is_stmt 1 view .LVU2150
 749:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7670              		.loc 19 749 28 is_stmt 0 view .LVU2151
 7671 04ce 1020     		movs	r0, #16
 7672 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7673              	.LVL486:
 7674 04d4 0346     		mov	r3, r0	@ movhi
 7675 04d6 0DF18100 		add	r0, sp, #129
 7676 04da ADF84830 		strh	r3, [sp, #72]	@ movhi
 7677 04de 1299     		ldr	r1, [sp, #72]
 7678 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7679              	.LVL487:
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7680              		.loc 19 750 5 is_stmt 1 view .LVU2152
 750:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7681              		.loc 19 750 28 is_stmt 0 view .LVU2153
 7682 04e4 1120     		movs	r0, #17
 7683 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7684              	.LVL488:
 7685 04ea 0346     		mov	r3, r0	@ movhi
 7686 04ec 0DF19200 		add	r0, sp, #146
 7687 04f0 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7688 04f4 1399     		ldr	r1, [sp, #76]
 7689 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7690              	.LVL489:
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7691              		.loc 19 751 5 is_stmt 1 view .LVU2154
 751:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7692              		.loc 19 751 28 is_stmt 0 view .LVU2155
 7693 04fa 1220     		movs	r0, #18
 7694 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7695              	.LVL490:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 253


 7696 0500 0346     		mov	r3, r0	@ movhi
 7697 0502 0DF1A300 		add	r0, sp, #163
 7698 0506 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7699 050a 1499     		ldr	r1, [sp, #80]
 7700 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7701              	.LVL491:
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7702              		.loc 19 752 5 is_stmt 1 view .LVU2156
 752:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7703              		.loc 19 752 28 is_stmt 0 view .LVU2157
 7704 0510 1320     		movs	r0, #19
 7705 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7706              	.LVL492:
 7707 0516 0346     		mov	r3, r0	@ movhi
 7708 0518 2DA8     		add	r0, sp, #180
 7709 051a ADF85430 		strh	r3, [sp, #84]	@ movhi
 7710 051e 1599     		ldr	r1, [sp, #84]
 7711 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7712              	.LVL493:
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7713              		.loc 19 753 5 is_stmt 1 view .LVU2158
 753:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7714              		.loc 19 753 28 is_stmt 0 view .LVU2159
 7715 0524 1420     		movs	r0, #20
 7716 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7717              	.LVL494:
 7718 052a 0346     		mov	r3, r0	@ movhi
 7719 052c 0DF1C500 		add	r0, sp, #197
 7720 0530 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7721 0534 1699     		ldr	r1, [sp, #88]
 7722 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7723              	.LVL495:
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7724              		.loc 19 755 5 is_stmt 1 view .LVU2160
 755:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7725              		.loc 19 755 28 is_stmt 0 view .LVU2161
 7726 053a 1620     		movs	r0, #22
 7727 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7728              	.LVL496:
 7729 0540 0346     		mov	r3, r0	@ movhi
 7730 0542 0DF1D600 		add	r0, sp, #214
 7731 0546 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7732 054a 1799     		ldr	r1, [sp, #92]
 7733 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7734              	.LVL497:
 756:Veno-Echo.cpp **** 
 7735              		.loc 19 756 5 is_stmt 1 view .LVU2162
 756:Veno-Echo.cpp **** 
 7736              		.loc 19 756 25 is_stmt 0 view .LVU2163
 7737 0550 1920     		movs	r0, #25
 7738 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7739              	.LVL498:
 7740 0556 0346     		mov	r3, r0	@ movhi
 7741 0558 0E20     		movs	r0, #14
 7742 055a ADF86030 		strh	r3, [sp, #96]	@ movhi
 7743 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7744              	.LVL499:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 254


 7745 0562 0346     		mov	r3, r0	@ movhi
 7746 0564 0D20     		movs	r0, #13
 7747 0566 ADF86430 		strh	r3, [sp, #100]	@ movhi
 7748 056a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7749              	.LVL500:
 7750 056e 0346     		mov	r3, r0	@ movhi
 7751 0570 0C20     		movs	r0, #12
 7752 0572 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7753 0576 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7754              	.LVL501:
 7755 057a BDF86810 		ldrh	r1, [sp, #104]
 7756 057e 0822     		movs	r2, #8
 7757 0580 199B     		ldr	r3, [sp, #100]
 7758 0582 ADF80400 		strh	r0, [sp, #4]	@ movhi
 7759 0586 0DF1E700 		add	r0, sp, #231
 7760 058a ADF80010 		strh	r1, [sp]	@ movhi
 7761 058e 1899     		ldr	r1, [sp, #96]
 7762 0590 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7763              	.LVL502:
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7764              		.loc 19 759 5 is_stmt 1 view .LVU2164
 759:Veno-Echo.cpp ****     hw.adc.Start();
 7765              		.loc 19 759 16 is_stmt 0 view .LVU2165
 7766 0594 1CA9     		add	r1, sp, #112
 7767 0596 0623     		movs	r3, #6
 7768 0598 0822     		movs	r2, #8
 7769 059a 1348     		ldr	r0, .L477+48
 7770 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7771              	.LVL503:
 760:Veno-Echo.cpp **** 
 7772              		.loc 19 760 5 is_stmt 1 view .LVU2166
 760:Veno-Echo.cpp **** 
 7773              		.loc 19 760 17 is_stmt 0 view .LVU2167
 7774 05a0 1148     		ldr	r0, .L477+48
 7775 05a2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7776              	.LVL504:
 762:Veno-Echo.cpp ****     // start audio callback
 7777              		.loc 19 762 5 is_stmt 1 view .LVU2168
 762:Veno-Echo.cpp ****     // start audio callback
 7778              		.loc 19 762 25 is_stmt 0 view .LVU2169
 7779 05a6 3946     		mov	r1, r7
 7780 05a8 0448     		ldr	r0, .L477+4
 7781 05aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7782              	.LVL505:
 764:Veno-Echo.cpp **** 
 7783              		.loc 19 764 5 is_stmt 1 view .LVU2170
 764:Veno-Echo.cpp **** 
 7784              		.loc 19 764 18 is_stmt 0 view .LVU2171
 7785 05ae 0F49     		ldr	r1, .L477+52
 7786 05b0 0248     		ldr	r0, .L477+4
 7787 05b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7788              	.LVL506:
 7789              	.L472:
 768:Veno-Echo.cpp ****      {
 7790              		.loc 19 768 6 is_stmt 1 discriminator 1 view .LVU2172
 768:Veno-Echo.cpp ****      {
 7791              		.loc 19 768 6 discriminator 1 view .LVU2173
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 255


 768:Veno-Echo.cpp ****      {
 7792              		.loc 19 768 6 discriminator 1 view .LVU2174
 768:Veno-Echo.cpp ****      {
 7793              		.loc 19 768 6 discriminator 1 view .LVU2175
 7794 05b6 FEE7     		b	.L472
 7795              	.L478:
 7796              		.align	2
 7797              	.L477:
 7798 05b8 00000000 		.word	.LANCHOR18
 7799 05bc 00000000 		.word	.LANCHOR4
 7800 05c0 00000000 		.word	.LANCHOR19
 7801 05c4 00004843 		.word	1128792064
 7802 05c8 3333333F 		.word	1060320051
 7803 05cc 00000000 		.word	.LANCHOR108
 7804 05d0 00000000 		.word	.LANCHOR109
 7805 05d4 0000C842 		.word	1120403456
 7806 05d8 00000000 		.word	.LANCHOR110
 7807 05dc 00000000 		.word	.LANCHOR73
 7808 05e0 00000000 		.word	.LANCHOR20
 7809 05e4 00000000 		.word	.LANCHOR72
 7810 05e8 18000000 		.word	.LANCHOR4+24
 7811 05ec 00000000 		.word	_ZL13AudioCallbackPfS_j
 7812              		.cfi_endproc
 7813              	.LFE4290:
 7815              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7816              		.align	1
 7817              		.p2align 2,,3
 7818              		.global	_Z13TurnOnAllLEDsv
 7819              		.syntax unified
 7820              		.thumb
 7821              		.thumb_func
 7822              		.fpu fpv5-d16
 7824              	_Z13TurnOnAllLEDsv:
 7825              	.LFB4313:
1979:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7826              		.loc 19 1979 1 view -0
 7827              		.cfi_startproc
 7828              		@ args = 0, pretend = 0, frame = 0
 7829              		@ frame_needed = 0, uses_anonymous_args = 0
1980:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7830              		.loc 19 1980 5 view .LVU2177
1979:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7831              		.loc 19 1979 1 is_stmt 0 view .LVU2178
 7832 0000 08B5     		push	{r3, lr}
 7833              		.cfi_def_cfa_offset 8
 7834              		.cfi_offset 3, -8
 7835              		.cfi_offset 14, -4
1980:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7836              		.loc 19 1980 26 view .LVU2179
 7837 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7838 0006 1148     		ldr	r0, .L481
 7839 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7840              	.LVL507:
1981:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7841              		.loc 19 1981 5 is_stmt 1 view .LVU2180
1981:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7842              		.loc 19 1981 28 is_stmt 0 view .LVU2181
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 256


 7843 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7844 0010 0F48     		ldr	r0, .L481+4
 7845 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7846              	.LVL508:
1982:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7847              		.loc 19 1982 5 is_stmt 1 view .LVU2182
1982:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7848              		.loc 19 1982 28 is_stmt 0 view .LVU2183
 7849 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7850 001a 0E48     		ldr	r0, .L481+8
 7851 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7852              	.LVL509:
1983:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7853              		.loc 19 1983 5 is_stmt 1 view .LVU2184
1983:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7854              		.loc 19 1983 21 is_stmt 0 view .LVU2185
 7855 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7856 0024 0C48     		ldr	r0, .L481+12
 7857 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7858              	.LVL510:
1984:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7859              		.loc 19 1984 5 is_stmt 1 view .LVU2186
1984:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7860              		.loc 19 1984 21 is_stmt 0 view .LVU2187
 7861 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7862 002e 0B48     		ldr	r0, .L481+16
 7863 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7864              	.LVL511:
1985:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7865              		.loc 19 1985 5 is_stmt 1 view .LVU2188
1985:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7866              		.loc 19 1985 19 is_stmt 0 view .LVU2189
 7867 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 7868 0038 0948     		ldr	r0, .L481+20
 7869 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7870              	.LVL512:
1986:Veno-Echo.cpp **** }
 7871              		.loc 19 1986 5 is_stmt 1 view .LVU2190
1986:Veno-Echo.cpp **** }
 7872              		.loc 19 1986 19 is_stmt 0 view .LVU2191
 7873 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7874 0042 0848     		ldr	r0, .L481+24
1987:Veno-Echo.cpp **** 
 7875              		.loc 19 1987 1 view .LVU2192
 7876 0044 BDE80840 		pop	{r3, lr}
 7877              		.cfi_restore 14
 7878              		.cfi_restore 3
 7879              		.cfi_def_cfa_offset 0
1986:Veno-Echo.cpp **** }
 7880              		.loc 19 1986 19 view .LVU2193
 7881 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7882              	.LVL513:
 7883              	.L482:
 7884              		.align	2
 7885              	.L481:
 7886 004c 00000000 		.word	.LANCHOR72
 7887 0050 04000000 		.word	.LANCHOR0+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 257


 7888 0054 04000000 		.word	.LANCHOR1+4
 7889 0058 00000000 		.word	.LANCHOR96
 7890 005c 00000000 		.word	.LANCHOR97
 7891 0060 00000000 		.word	.LANCHOR94
 7892 0064 00000000 		.word	.LANCHOR95
 7893              		.cfi_endproc
 7894              	.LFE4313:
 7896              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7897              		.align	1
 7898              		.p2align 2,,3
 7899              		.global	_Z12ResetAllLEDsv
 7900              		.syntax unified
 7901              		.thumb
 7902              		.thumb_func
 7903              		.fpu fpv5-d16
 7905              	_Z12ResetAllLEDsv:
 7906              	.LFB4314:
1990:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7907              		.loc 19 1990 1 is_stmt 1 view -0
 7908              		.cfi_startproc
 7909              		@ args = 0, pretend = 0, frame = 0
 7910              		@ frame_needed = 0, uses_anonymous_args = 0
1991:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7911              		.loc 19 1991 5 view .LVU2195
1990:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7912              		.loc 19 1990 1 is_stmt 0 view .LVU2196
 7913 0000 08B5     		push	{r3, lr}
 7914              		.cfi_def_cfa_offset 8
 7915              		.cfi_offset 3, -8
 7916              		.cfi_offset 14, -4
1991:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7917              		.loc 19 1991 26 view .LVU2197
 7918 0002 9FED1E0A 		vldr.32	s0, .L490
 7919 0006 1E48     		ldr	r0, .L490+4
 7920 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7921              	.LVL514:
1992:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7922              		.loc 19 1992 5 is_stmt 1 view .LVU2198
1992:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7923              		.loc 19 1992 28 is_stmt 0 view .LVU2199
 7924 000c 9FED1B0A 		vldr.32	s0, .L490
 7925 0010 1C48     		ldr	r0, .L490+8
 7926 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7927              	.LVL515:
1993:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7928              		.loc 19 1993 5 is_stmt 1 view .LVU2200
1993:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7929              		.loc 19 1993 28 is_stmt 0 view .LVU2201
 7930 0016 1C48     		ldr	r0, .L490+12
 7931 0018 9FED180A 		vldr.32	s0, .L490
 7932 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7933              	.LVL516:
1994:Veno-Echo.cpp ****     {
 7934              		.loc 19 1994 5 is_stmt 1 view .LVU2202
1994:Veno-Echo.cpp ****     {
 7935              		.loc 19 1994 26 is_stmt 0 view .LVU2203
 7936 0020 1A48     		ldr	r0, .L490+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 258


 7937 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7938              	.LVL517:
1994:Veno-Echo.cpp ****     {
 7939              		.loc 19 1994 5 view .LVU2204
 7940 0026 C8B9     		cbnz	r0, .L484
1996:Veno-Echo.cpp ****     }
 7941              		.loc 19 1996 9 is_stmt 1 view .LVU2205
1996:Veno-Echo.cpp ****     }
 7942              		.loc 19 1996 25 is_stmt 0 view .LVU2206
 7943 0028 1848     		ldr	r0, .L490+16
 7944 002a 9FED140A 		vldr.32	s0, .L490
 7945 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7946              	.LVL518:
2003:Veno-Echo.cpp ****     {
 7947              		.loc 19 2003 5 is_stmt 1 view .LVU2207
2003:Veno-Echo.cpp ****     {
 7948              		.loc 19 2003 26 is_stmt 0 view .LVU2208
 7949 0032 1748     		ldr	r0, .L490+20
 7950 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7951              	.LVL519:
2003:Veno-Echo.cpp ****     {
 7952              		.loc 19 2003 5 view .LVU2209
 7953 0038 D0B9     		cbnz	r0, .L486
 7954              	.L489:
2005:Veno-Echo.cpp ****     }
 7955              		.loc 19 2005 9 is_stmt 1 view .LVU2210
2005:Veno-Echo.cpp ****     }
 7956              		.loc 19 2005 25 is_stmt 0 view .LVU2211
 7957 003a 9FED100A 		vldr.32	s0, .L490
 7958 003e 1448     		ldr	r0, .L490+20
 7959 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7960              	.LVL520:
 7961              	.L487:
2012:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7962              		.loc 19 2012 5 is_stmt 1 view .LVU2212
2012:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7963              		.loc 19 2012 19 is_stmt 0 view .LVU2213
 7964 0044 9FED0D0A 		vldr.32	s0, .L490
 7965 0048 1248     		ldr	r0, .L490+24
 7966 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7967              	.LVL521:
2013:Veno-Echo.cpp **** }
 7968              		.loc 19 2013 5 is_stmt 1 view .LVU2214
2013:Veno-Echo.cpp **** }
 7969              		.loc 19 2013 19 is_stmt 0 view .LVU2215
 7970 004e 9FED0B0A 		vldr.32	s0, .L490
 7971 0052 1148     		ldr	r0, .L490+28
2014:Veno-Echo.cpp **** 
 7972              		.loc 19 2014 1 view .LVU2216
 7973 0054 BDE80840 		pop	{r3, lr}
 7974              		.cfi_remember_state
 7975              		.cfi_restore 14
 7976              		.cfi_restore 3
 7977              		.cfi_def_cfa_offset 0
2013:Veno-Echo.cpp **** }
 7978              		.loc 19 2013 19 view .LVU2217
 7979 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 259


 7980              	.LVL522:
 7981              	.L484:
 7982              		.cfi_restore_state
2000:Veno-Echo.cpp ****     }
 7983              		.loc 19 2000 8 is_stmt 1 view .LVU2218
2000:Veno-Echo.cpp ****     }
 7984              		.loc 19 2000 24 is_stmt 0 view .LVU2219
 7985 005c 0B48     		ldr	r0, .L490+16
 7986 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7987 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7988              	.LVL523:
2003:Veno-Echo.cpp ****     {
 7989              		.loc 19 2003 5 is_stmt 1 view .LVU2220
2003:Veno-Echo.cpp ****     {
 7990              		.loc 19 2003 26 is_stmt 0 view .LVU2221
 7991 0066 0A48     		ldr	r0, .L490+20
 7992 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7993              	.LVL524:
2003:Veno-Echo.cpp ****     {
 7994              		.loc 19 2003 5 view .LVU2222
 7995 006c 0028     		cmp	r0, #0
 7996 006e E4D0     		beq	.L489
 7997              	.L486:
2009:Veno-Echo.cpp ****     }
 7998              		.loc 19 2009 9 is_stmt 1 view .LVU2223
2009:Veno-Echo.cpp ****     }
 7999              		.loc 19 2009 25 is_stmt 0 view .LVU2224
 8000 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8001 0074 0648     		ldr	r0, .L490+20
 8002 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8003              	.LVL525:
 8004 007a E3E7     		b	.L487
 8005              	.L491:
 8006              		.align	2
 8007              	.L490:
 8008 007c 00000000 		.word	0
 8009 0080 00000000 		.word	.LANCHOR72
 8010 0084 04000000 		.word	.LANCHOR0+4
 8011 0088 04000000 		.word	.LANCHOR1+4
 8012 008c 00000000 		.word	.LANCHOR96
 8013 0090 00000000 		.word	.LANCHOR97
 8014 0094 00000000 		.word	.LANCHOR94
 8015 0098 00000000 		.word	.LANCHOR95
 8016              		.cfi_endproc
 8017              	.LFE4314:
 8019              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8020              		.align	1
 8021              		.p2align 2,,3
 8022              		.global	_Z14Update_Buttonsv
 8023              		.syntax unified
 8024              		.thumb
 8025              		.thumb_func
 8026              		.fpu fpv5-d16
 8028              	_Z14Update_Buttonsv:
 8029              	.LFB4308:
1608:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8030              		.loc 19 1608 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 260


 8031              		.cfi_startproc
 8032              		@ args = 0, pretend = 0, frame = 0
 8033              		@ frame_needed = 0, uses_anonymous_args = 0
1609:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8034              		.loc 19 1609 5 view .LVU2226
1610:Veno-Echo.cpp ****     static int buttonstate{};
 8035              		.loc 19 1610 5 view .LVU2227
1611:Veno-Echo.cpp **** 
 8036              		.loc 19 1611 5 view .LVU2228
1613:Veno-Echo.cpp ****     Rev_R_sw.update();
 8037              		.loc 19 1613 5 view .LVU2229
1608:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8038              		.loc 19 1608 1 is_stmt 0 view .LVU2230
 8039 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8040              		.cfi_def_cfa_offset 24
 8041              		.cfi_offset 3, -24
 8042              		.cfi_offset 4, -20
 8043              		.cfi_offset 5, -16
 8044              		.cfi_offset 6, -12
 8045              		.cfi_offset 7, -8
 8046              		.cfi_offset 14, -4
1613:Veno-Echo.cpp ****     Rev_R_sw.update();
 8047              		.loc 19 1613 20 view .LVU2231
 8048 0002 6D48     		ldr	r0, .L541
 8049 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8050              	.LVL526:
1614:Veno-Echo.cpp ****     LPF_sw.update();
 8051              		.loc 19 1614 5 is_stmt 1 view .LVU2232
1614:Veno-Echo.cpp ****     LPF_sw.update();
 8052              		.loc 19 1614 20 is_stmt 0 view .LVU2233
 8053 0008 6C48     		ldr	r0, .L541+4
 8054 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8055              	.LVL527:
1615:Veno-Echo.cpp ****     HPF_sw.update();
 8056              		.loc 19 1615 5 is_stmt 1 view .LVU2234
1615:Veno-Echo.cpp ****     HPF_sw.update();
 8057              		.loc 19 1615 18 is_stmt 0 view .LVU2235
 8058 000e 6C48     		ldr	r0, .L541+8
 8059 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8060              	.LVL528:
1616:Veno-Echo.cpp ****     Tap_Button.update();
 8061              		.loc 19 1616 5 is_stmt 1 view .LVU2236
1619:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8062              		.loc 19 1619 26 is_stmt 0 view .LVU2237
 8063 0014 6B4C     		ldr	r4, .L541+12
1616:Veno-Echo.cpp ****     Tap_Button.update();
 8064              		.loc 19 1616 18 view .LVU2238
 8065 0016 6C48     		ldr	r0, .L541+16
 8066 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8067              	.LVL529:
1617:Veno-Echo.cpp **** 
 8068              		.loc 19 1617 5 is_stmt 1 view .LVU2239
1617:Veno-Echo.cpp **** 
 8069              		.loc 19 1617 22 is_stmt 0 view .LVU2240
 8070 001c 6B48     		ldr	r0, .L541+20
 8071 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8072              	.LVL530:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 261


1619:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8073              		.loc 19 1619 5 is_stmt 1 view .LVU2241
1619:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8074              		.loc 19 1619 26 is_stmt 0 view .LVU2242
 8075 0022 2046     		mov	r0, r4
 8076 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8077              	.LVL531:
1620:Veno-Echo.cpp ****     //TapButton.Debounce();
 8078              		.loc 19 1620 5 is_stmt 1 view .LVU2243
1620:Veno-Echo.cpp ****     //TapButton.Debounce();
 8079              		.loc 19 1620 26 is_stmt 0 view .LVU2244
 8080 0028 6948     		ldr	r0, .L541+24
 8081 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8082              	.LVL532:
1622:Veno-Echo.cpp ****     ClockIn.Debounce();
 8083              		.loc 19 1622 5 is_stmt 1 view .LVU2245
1622:Veno-Echo.cpp ****     ClockIn.Debounce();
 8084              		.loc 19 1622 18 is_stmt 0 view .LVU2246
 8085 002e 6948     		ldr	r0, .L541+28
 8086 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8087              	.LVL533:
1623:Veno-Echo.cpp ****     //gate inputs
 8088              		.loc 19 1623 5 is_stmt 1 view .LVU2247
1623:Veno-Echo.cpp ****     //gate inputs
 8089              		.loc 19 1623 21 is_stmt 0 view .LVU2248
 8090 0034 6848     		ldr	r0, .L541+32
 8091 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8092              	.LVL534:
1625:Veno-Echo.cpp ****     {
 8093              		.loc 19 1625 5 is_stmt 1 view .LVU2249
 8094              		.loc 1 69 38 view .LVU2250
1625:Veno-Echo.cpp ****     {
 8095              		.loc 19 1625 5 is_stmt 0 view .LVU2251
 8096 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8097 003c 7F2B     		cmp	r3, #127
 8098 003e 00F09F80 		beq	.L532
 8099              	.L493:
1631:Veno-Echo.cpp ****     {
 8100              		.loc 19 1631 5 is_stmt 1 view .LVU2252
 8101              	.LVL535:
 8102              		.loc 1 69 38 view .LVU2253
1631:Veno-Echo.cpp ****     {
 8103              		.loc 19 1631 32 is_stmt 0 view .LVU2254
 8104 0042 634B     		ldr	r3, .L541+24
1631:Veno-Echo.cpp ****     {
 8105              		.loc 19 1631 5 view .LVU2255
 8106 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8107 0046 7F2B     		cmp	r3, #127
 8108 0048 00F09680 		beq	.L533
 8109              	.L494:
1639:Veno-Echo.cpp ****     {
 8110              		.loc 19 1639 5 is_stmt 1 view .LVU2256
1639:Veno-Echo.cpp ****     {
 8111              		.loc 19 1639 28 is_stmt 0 view .LVU2257
 8112 004c 5A48     		ldr	r0, .L541
1641:Veno-Echo.cpp ****         if (buttonstate == 3)
 8113              		.loc 19 1641 21 view .LVU2258
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 262


 8114 004e 634C     		ldr	r4, .L541+36
1639:Veno-Echo.cpp ****     {
 8115              		.loc 19 1639 28 view .LVU2259
 8116 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8117              	.LVL536:
1639:Veno-Echo.cpp ****     {
 8118              		.loc 19 1639 5 view .LVU2260
 8119 0054 28B1     		cbz	r0, .L496
1641:Veno-Echo.cpp ****         if (buttonstate == 3)
 8120              		.loc 19 1641 9 is_stmt 1 view .LVU2261
1641:Veno-Echo.cpp ****         if (buttonstate == 3)
 8121              		.loc 19 1641 21 is_stmt 0 view .LVU2262
 8122 0056 2368     		ldr	r3, [r4]
 8123 0058 0133     		adds	r3, r3, #1
1642:Veno-Echo.cpp ****         {
 8124              		.loc 19 1642 9 view .LVU2263
 8125 005a 032B     		cmp	r3, #3
1641:Veno-Echo.cpp ****         if (buttonstate == 3)
 8126              		.loc 19 1641 21 view .LVU2264
 8127 005c 2360     		str	r3, [r4]
1642:Veno-Echo.cpp ****         {
 8128              		.loc 19 1642 9 is_stmt 1 view .LVU2265
 8129 005e 00F09380 		beq	.L534
 8130              	.L496:
1648:Veno-Echo.cpp ****     {
 8131              		.loc 19 1648 5 view .LVU2266
1648:Veno-Echo.cpp ****     {
 8132              		.loc 19 1648 29 is_stmt 0 view .LVU2267
 8133 0062 5548     		ldr	r0, .L541
 8134 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8135              	.LVL537:
1648:Veno-Echo.cpp ****     {
 8136              		.loc 19 1648 5 view .LVU2268
 8137 0068 10B1     		cbz	r0, .L498
1650:Veno-Echo.cpp ****     }
 8138              		.loc 19 1650 9 is_stmt 1 view .LVU2269
1650:Veno-Echo.cpp ****     }
 8139              		.loc 19 1650 21 is_stmt 0 view .LVU2270
 8140 006a 2368     		ldr	r3, [r4]
 8141 006c 013B     		subs	r3, r3, #1
 8142 006e 2360     		str	r3, [r4]
 8143              	.L498:
1653:Veno-Echo.cpp ****     {
 8144              		.loc 19 1653 5 is_stmt 1 view .LVU2271
1653:Veno-Echo.cpp ****     {
 8145              		.loc 19 1653 28 is_stmt 0 view .LVU2272
 8146 0070 5248     		ldr	r0, .L541+4
 8147 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8148              	.LVL538:
1653:Veno-Echo.cpp ****     {
 8149              		.loc 19 1653 5 view .LVU2273
 8150 0076 28B1     		cbz	r0, .L500
1655:Veno-Echo.cpp ****         if (buttonstate == 3)
 8151              		.loc 19 1655 9 is_stmt 1 view .LVU2274
1655:Veno-Echo.cpp ****         if (buttonstate == 3)
 8152              		.loc 19 1655 21 is_stmt 0 view .LVU2275
 8153 0078 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 263


 8154 007a 0133     		adds	r3, r3, #1
1656:Veno-Echo.cpp ****         {
 8155              		.loc 19 1656 9 view .LVU2276
 8156 007c 032B     		cmp	r3, #3
1655:Veno-Echo.cpp ****         if (buttonstate == 3)
 8157              		.loc 19 1655 21 view .LVU2277
 8158 007e 2360     		str	r3, [r4]
1656:Veno-Echo.cpp ****         {
 8159              		.loc 19 1656 9 is_stmt 1 view .LVU2278
 8160 0080 00F08780 		beq	.L535
 8161              	.L500:
1662:Veno-Echo.cpp ****     {
 8162              		.loc 19 1662 5 view .LVU2279
1662:Veno-Echo.cpp ****     {
 8163              		.loc 19 1662 29 is_stmt 0 view .LVU2280
 8164 0084 4D48     		ldr	r0, .L541+4
 8165 0086 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8166              	.LVL539:
1662:Veno-Echo.cpp ****     {
 8167              		.loc 19 1662 5 view .LVU2281
 8168 008a 10B1     		cbz	r0, .L502
1664:Veno-Echo.cpp ****     }
 8169              		.loc 19 1664 9 is_stmt 1 view .LVU2282
1664:Veno-Echo.cpp ****     }
 8170              		.loc 19 1664 21 is_stmt 0 view .LVU2283
 8171 008c 2368     		ldr	r3, [r4]
 8172 008e 013B     		subs	r3, r3, #1
 8173 0090 2360     		str	r3, [r4]
 8174              	.L502:
1667:Veno-Echo.cpp ****     {
 8175              		.loc 19 1667 5 is_stmt 1 view .LVU2284
1667:Veno-Echo.cpp ****     {
 8176              		.loc 19 1667 30 is_stmt 0 view .LVU2285
 8177 0092 4E48     		ldr	r0, .L541+20
 8178 0094 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8179              	.LVL540:
1667:Veno-Echo.cpp ****     {
 8180              		.loc 19 1667 5 view .LVU2286
 8181 0098 0028     		cmp	r0, #0
 8182 009a 55D1     		bne	.L503
 8183 009c 504D     		ldr	r5, .L541+40
 8184              	.L504:
1691:Veno-Echo.cpp ****     {
 8185              		.loc 19 1691 5 is_stmt 1 view .LVU2287
1691:Veno-Echo.cpp ****     {
 8186              		.loc 19 1691 31 is_stmt 0 view .LVU2288
 8187 009e 4B48     		ldr	r0, .L541+20
 8188 00a0 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8189              	.LVL541:
1691:Veno-Echo.cpp ****     {
 8190              		.loc 19 1691 5 view .LVU2289
 8191 00a4 38B1     		cbz	r0, .L508
1693:Veno-Echo.cpp ****         buttonstate -= 1;
 8192              		.loc 19 1693 9 is_stmt 1 view .LVU2290
1694:Veno-Echo.cpp ****         mute = false;
 8193              		.loc 19 1694 21 is_stmt 0 view .LVU2291
 8194 00a6 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 264


1693:Veno-Echo.cpp ****         buttonstate -= 1;
 8195              		.loc 19 1693 15 view .LVU2292
 8196 00a8 0022     		movs	r2, #0
 8197 00aa 4E48     		ldr	r0, .L541+44
1694:Veno-Echo.cpp ****         mute = false;
 8198              		.loc 19 1694 21 view .LVU2293
 8199 00ac 013B     		subs	r3, r3, #1
1695:Veno-Echo.cpp ****     }
 8200              		.loc 19 1695 14 view .LVU2294
 8201 00ae 4E49     		ldr	r1, .L541+48
1693:Veno-Echo.cpp ****         buttonstate -= 1;
 8202              		.loc 19 1693 15 view .LVU2295
 8203 00b0 0270     		strb	r2, [r0]
1694:Veno-Echo.cpp ****         mute = false;
 8204              		.loc 19 1694 9 is_stmt 1 view .LVU2296
1694:Veno-Echo.cpp ****         mute = false;
 8205              		.loc 19 1694 21 is_stmt 0 view .LVU2297
 8206 00b2 2360     		str	r3, [r4]
1695:Veno-Echo.cpp ****     }
 8207              		.loc 19 1695 9 is_stmt 1 view .LVU2298
1695:Veno-Echo.cpp ****     }
 8208              		.loc 19 1695 14 is_stmt 0 view .LVU2299
 8209 00b4 0A70     		strb	r2, [r1]
 8210              	.L508:
1698:Veno-Echo.cpp ****     {
 8211              		.loc 19 1698 5 is_stmt 1 view .LVU2300
1698:Veno-Echo.cpp ****     {
 8212              		.loc 19 1698 28 is_stmt 0 view .LVU2301
 8213 00b6 4548     		ldr	r0, .L541+20
 8214 00b8 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8215              	.LVL542:
1698:Veno-Echo.cpp ****     {
 8216              		.loc 19 1698 5 view .LVU2302
 8217 00bc A0B9     		cbnz	r0, .L536
 8218              	.L510:
1706:Veno-Echo.cpp ****     {
 8219              		.loc 19 1706 5 is_stmt 1 view .LVU2303
 8220 00be 2368     		ldr	r3, [r4]
 8221 00c0 032B     		cmp	r3, #3
 8222 00c2 1ED0     		beq	.L537
 8223              	.L513:
1728:Veno-Echo.cpp **** 
 8224              		.loc 19 1728 5 view .LVU2304
1728:Veno-Echo.cpp **** 
 8225              		.loc 19 1728 31 is_stmt 0 view .LVU2305
 8226 00c4 434B     		ldr	r3, .L541+28
 8227 00c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8228              	.LBB1466:
 8229              	.LBI1466:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8230              		.loc 1 75 17 is_stmt 1 view .LVU2306
 8231              	.LVL543:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 265


 8232              	.LBB1467:
 8233              		.loc 1 75 35 view .LVU2307
 8234              		.loc 1 75 52 is_stmt 0 view .LVU2308
 8235 00c8 A3F1FF02 		sub	r2, r3, #255
 8236              	.LBE1467:
 8237              	.LBE1466:
1730:Veno-Echo.cpp ****     {
 8238              		.loc 19 1730 5 view .LVU2309
 8239 00cc 7F2B     		cmp	r3, #127
 8240              	.LBB1469:
 8241              	.LBB1468:
 8242              		.loc 1 75 52 view .LVU2310
 8243 00ce B2FA82F2 		clz	r2, r2
 8244 00d2 4FEA5212 		lsr	r2, r2, #5
 8245 00d6 2A70     		strb	r2, [r5]
 8246              	.LBE1468:
 8247              	.LBE1469:
1730:Veno-Echo.cpp ****     {
 8248              		.loc 19 1730 5 is_stmt 1 view .LVU2311
 8249              	.LVL544:
  69:../libdaisy/src/hid/switch.h **** 
 8250              		.loc 1 69 38 view .LVU2312
1730:Veno-Echo.cpp ****     {
 8251              		.loc 19 1730 5 is_stmt 0 view .LVU2313
 8252 00d8 00D0     		beq	.L538
1739:Veno-Echo.cpp **** 
 8253              		.loc 19 1739 1 view .LVU2314
 8254 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8255              	.L538:
1735:Veno-Echo.cpp ****         delayR_flag = true;
 8256              		.loc 19 1735 9 is_stmt 1 view .LVU2315
1735:Veno-Echo.cpp ****         delayR_flag = true;
 8257              		.loc 19 1735 21 is_stmt 0 view .LVU2316
 8258 00dc 0123     		movs	r3, #1
 8259 00de 4349     		ldr	r1, .L541+52
1736:Veno-Echo.cpp ****     }
 8260              		.loc 19 1736 21 view .LVU2317
 8261 00e0 434A     		ldr	r2, .L541+56
1735:Veno-Echo.cpp ****         delayR_flag = true;
 8262              		.loc 19 1735 21 view .LVU2318
 8263 00e2 0B70     		strb	r3, [r1]
1736:Veno-Echo.cpp ****     }
 8264              		.loc 19 1736 9 is_stmt 1 view .LVU2319
1736:Veno-Echo.cpp ****     }
 8265              		.loc 19 1736 21 is_stmt 0 view .LVU2320
 8266 00e4 1370     		strb	r3, [r2]
1739:Veno-Echo.cpp **** 
 8267              		.loc 19 1739 1 view .LVU2321
 8268 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8269              	.LVL545:
 8270              	.L536:
1700:Veno-Echo.cpp ****         {
 8271              		.loc 19 1700 9 is_stmt 1 view .LVU2322
1700:Veno-Echo.cpp ****         {
 8272              		.loc 19 1700 29 is_stmt 0 view .LVU2323
 8273 00e8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8274              	.LVL546:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 266


1700:Veno-Echo.cpp ****         {
 8275              		.loc 19 1700 32 view .LVU2324
 8276 00ec 414B     		ldr	r3, .L541+60
 8277 00ee 1B68     		ldr	r3, [r3]
 8278 00f0 C01A     		subs	r0, r0, r3
1700:Veno-Echo.cpp ****         {
 8279              		.loc 19 1700 9 view .LVU2325
 8280 00f2 3228     		cmp	r0, #50
 8281 00f4 E3D9     		bls	.L510
1702:Veno-Echo.cpp ****         } 
 8282              		.loc 19 1702 13 is_stmt 1 view .LVU2326
1702:Veno-Echo.cpp ****         } 
 8283              		.loc 19 1702 19 is_stmt 0 view .LVU2327
 8284 00f6 3B4B     		ldr	r3, .L541+44
 8285 00f8 0122     		movs	r2, #1
 8286 00fa 1A70     		strb	r2, [r3]
1706:Veno-Echo.cpp ****     {
 8287              		.loc 19 1706 5 is_stmt 1 view .LVU2328
 8288 00fc 2368     		ldr	r3, [r4]
 8289 00fe 032B     		cmp	r3, #3
 8290 0100 E0D1     		bne	.L513
 8291              	.L537:
1715:Veno-Echo.cpp ****             {
 8292              		.loc 19 1715 13 view .LVU2329
1715:Veno-Echo.cpp ****             {
 8293              		.loc 19 1715 36 is_stmt 0 view .LVU2330
 8294 0102 3D4F     		ldr	r7, .L541+64
1715:Veno-Echo.cpp ****             {
 8295              		.loc 19 1715 33 view .LVU2331
 8296 0104 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8297              	.LVL547:
1715:Veno-Echo.cpp ****             {
 8298              		.loc 19 1715 13 view .LVU2332
 8299 0108 40F6B833 		movw	r3, #3000
1715:Veno-Echo.cpp ****             {
 8300              		.loc 19 1715 36 view .LVU2333
 8301 010c 3A68     		ldr	r2, [r7]
 8302 010e 801A     		subs	r0, r0, r2
1715:Veno-Echo.cpp ****             {
 8303              		.loc 19 1715 13 view .LVU2334
 8304 0110 9842     		cmp	r0, r3
 8305 0112 D7D9     		bls	.L513
1717:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8306              		.loc 19 1717 17 is_stmt 1 view .LVU2335
1717:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8307              		.loc 19 1717 32 is_stmt 0 view .LVU2336
 8308 0114 2848     		ldr	r0, .L541
 8309 0116 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8310              	.LVL548:
1718:Veno-Echo.cpp ****                 ResetAllLEDs();
 8311              		.loc 19 1718 17 is_stmt 1 view .LVU2337
1718:Veno-Echo.cpp ****                 ResetAllLEDs();
 8312              		.loc 19 1718 32 is_stmt 0 view .LVU2338
 8313 011a 2848     		ldr	r0, .L541+4
 8314 011c FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8315              	.LVL549:
1719:Veno-Echo.cpp ****                 //don't let reset or shift update
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 267


 8316              		.loc 19 1719 17 is_stmt 1 view .LVU2339
1723:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8317              		.loc 19 1723 29 is_stmt 0 view .LVU2340
 8318 0120 364E     		ldr	r6, .L541+68
1719:Veno-Echo.cpp ****                 //don't let reset or shift update
 8319              		.loc 19 1719 29 view .LVU2341
 8320 0122 FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8321              	.LVL550:
1721:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8322              		.loc 19 1721 17 is_stmt 1 view .LVU2342
1721:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8323              		.loc 19 1721 23 is_stmt 0 view .LVU2343
 8324 0126 2F4B     		ldr	r3, .L541+44
 8325 0128 0022     		movs	r2, #0
1722:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8326              		.loc 19 1722 30 view .LVU2344
 8327 012a 3448     		ldr	r0, .L541+68
1723:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8328              		.loc 19 1723 29 view .LVU2345
 8329 012c 344C     		ldr	r4, .L541+72
1721:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8330              		.loc 19 1721 23 view .LVU2346
 8331 012e 1A70     		strb	r2, [r3]
1722:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8332              		.loc 19 1722 17 is_stmt 1 view .LVU2347
1722:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8333              		.loc 19 1722 30 is_stmt 0 view .LVU2348
 8334 0130 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8335              	.LVL551:
1723:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8336              		.loc 19 1723 17 is_stmt 1 view .LVU2349
1723:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8337              		.loc 19 1723 29 is_stmt 0 view .LVU2350
 8338 0134 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8339 0136 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8340 0138 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 8341 013c 84E80F00 		stm	r4, {r0, r1, r2, r3}
1724:Veno-Echo.cpp ****             }
 8342              		.loc 19 1724 17 is_stmt 1 view .LVU2351
1724:Veno-Echo.cpp ****             }
 8343              		.loc 19 1724 43 is_stmt 0 view .LVU2352
 8344 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8345              	.LVL552:
1724:Veno-Echo.cpp ****             }
 8346              		.loc 19 1724 27 view .LVU2353
 8347 0144 3860     		str	r0, [r7]
 8348 0146 BDE7     		b	.L513
 8349              	.L503:
1669:Veno-Echo.cpp ****         {
 8350              		.loc 19 1669 9 is_stmt 1 view .LVU2354
1669:Veno-Echo.cpp ****         {
 8351              		.loc 19 1669 25 is_stmt 0 view .LVU2355
 8352 0148 2E48     		ldr	r0, .L541+76
 8353 014a FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8354              	.LVL553:
1669:Veno-Echo.cpp ****         {
 8355              		.loc 19 1669 9 view .LVU2356
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 268


 8356 014e 60BB     		cbnz	r0, .L539
 8357              	.L505:
1673:Veno-Echo.cpp ****         
 8358              		.loc 19 1673 9 is_stmt 1 view .LVU2357
1675:Veno-Echo.cpp ****         {
 8359              		.loc 19 1675 9 is_stmt 0 view .LVU2358
 8360 0150 234D     		ldr	r5, .L541+40
1673:Veno-Echo.cpp ****         
 8361              		.loc 19 1673 33 view .LVU2359
 8362 0152 2D48     		ldr	r0, .L541+80
 8363 0154 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8364              	.LVL554:
1675:Veno-Echo.cpp ****         {
 8365              		.loc 19 1675 9 is_stmt 1 view .LVU2360
 8366 0158 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8367 015a FBB9     		cbnz	r3, .L540
 8368              	.L506:
1681:Veno-Echo.cpp ****         buttonstate += 1;
 8369              		.loc 19 1681 9 view .LVU2361
1681:Veno-Echo.cpp ****         buttonstate += 1;
 8370              		.loc 19 1681 35 is_stmt 0 view .LVU2362
 8371 015c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8372              	.LVL555:
1682:Veno-Echo.cpp ****         
 8373              		.loc 19 1682 21 view .LVU2363
 8374 0160 2368     		ldr	r3, [r4]
1681:Veno-Echo.cpp ****         buttonstate += 1;
 8375              		.loc 19 1681 19 view .LVU2364
 8376 0162 244A     		ldr	r2, .L541+60
1682:Veno-Echo.cpp ****         
 8377              		.loc 19 1682 21 view .LVU2365
 8378 0164 0133     		adds	r3, r3, #1
1681:Veno-Echo.cpp ****         buttonstate += 1;
 8379              		.loc 19 1681 19 view .LVU2366
 8380 0166 1060     		str	r0, [r2]
1682:Veno-Echo.cpp ****         
 8381              		.loc 19 1682 9 is_stmt 1 view .LVU2367
1684:Veno-Echo.cpp ****         {
 8382              		.loc 19 1684 9 is_stmt 0 view .LVU2368
 8383 0168 032B     		cmp	r3, #3
1682:Veno-Echo.cpp ****         
 8384              		.loc 19 1682 21 view .LVU2369
 8385 016a 2360     		str	r3, [r4]
1684:Veno-Echo.cpp ****         {
 8386              		.loc 19 1684 9 is_stmt 1 view .LVU2370
 8387 016c 97D1     		bne	.L504
1686:Veno-Echo.cpp ****         }
 8388              		.loc 19 1686 13 view .LVU2371
1686:Veno-Echo.cpp ****         }
 8389              		.loc 19 1686 39 is_stmt 0 view .LVU2372
 8390 016e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8391              	.LVL556:
1686:Veno-Echo.cpp ****         }
 8392              		.loc 19 1686 23 view .LVU2373
 8393 0172 214B     		ldr	r3, .L541+64
 8394 0174 1860     		str	r0, [r3]
 8395 0176 92E7     		b	.L504
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 269


 8396              	.L533:
1633:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8397              		.loc 19 1633 9 is_stmt 1 view .LVU2374
1633:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8398              		.loc 19 1633 24 is_stmt 0 view .LVU2375
 8399 0178 1048     		ldr	r0, .L541+4
 8400 017a FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8401              	.LVL557:
 8402 017e 65E7     		b	.L494
 8403              	.LVL558:
 8404              	.L532:
1627:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8405              		.loc 19 1627 9 is_stmt 1 view .LVU2376
1627:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8406              		.loc 19 1627 24 is_stmt 0 view .LVU2377
 8407 0180 0D48     		ldr	r0, .L541
 8408 0182 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8409              	.LVL559:
 8410 0186 5CE7     		b	.L493
 8411              	.LVL560:
 8412              	.L534:
1644:Veno-Echo.cpp ****         }
 8413              		.loc 19 1644 13 is_stmt 1 view .LVU2378
1644:Veno-Echo.cpp ****         }
 8414              		.loc 19 1644 39 is_stmt 0 view .LVU2379
 8415 0188 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8416              	.LVL561:
1644:Veno-Echo.cpp ****         }
 8417              		.loc 19 1644 23 view .LVU2380
 8418 018c 1A4B     		ldr	r3, .L541+64
 8419 018e 1860     		str	r0, [r3]
 8420 0190 67E7     		b	.L496
 8421              	.L535:
1658:Veno-Echo.cpp ****         }
 8422              		.loc 19 1658 13 is_stmt 1 view .LVU2381
1658:Veno-Echo.cpp ****         }
 8423              		.loc 19 1658 39 is_stmt 0 view .LVU2382
 8424 0192 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8425              	.LVL562:
1658:Veno-Echo.cpp ****         }
 8426              		.loc 19 1658 23 view .LVU2383
 8427 0196 184B     		ldr	r3, .L541+64
 8428 0198 1860     		str	r0, [r3]
 8429 019a 73E7     		b	.L500
 8430              	.L540:
1677:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8431              		.loc 19 1677 13 is_stmt 1 view .LVU2384
1677:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 8432              		.loc 19 1677 39 is_stmt 0 view .LVU2385
 8433 019c 1B48     		ldr	r0, .L541+84
 8434 019e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8435              	.LVL563:
1678:Veno-Echo.cpp ****         }
 8436              		.loc 19 1678 13 is_stmt 1 view .LVU2386
1678:Veno-Echo.cpp ****         }
 8437              		.loc 19 1678 39 is_stmt 0 view .LVU2387
 8438 01a2 1B48     		ldr	r0, .L541+88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 270


 8439 01a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8440              	.LVL564:
 8441 01a8 D8E7     		b	.L506
 8442              	.L539:
1671:Veno-Echo.cpp ****         }
 8443              		.loc 19 1671 13 is_stmt 1 view .LVU2388
1671:Veno-Echo.cpp ****         }
 8444              		.loc 19 1671 35 is_stmt 0 view .LVU2389
 8445 01aa 1648     		ldr	r0, .L541+76
 8446 01ac FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8447              	.LVL565:
 8448 01b0 1548     		ldr	r0, .L541+80
 8449 01b2 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8450              	.LVL566:
 8451 01b6 CBE7     		b	.L505
 8452              	.L542:
 8453              		.align	2
 8454              	.L541:
 8455 01b8 00000000 		.word	.LANCHOR96
 8456 01bc 00000000 		.word	.LANCHOR97
 8457 01c0 00000000 		.word	.LANCHOR94
 8458 01c4 00000000 		.word	.LANCHOR99
 8459 01c8 00000000 		.word	.LANCHOR95
 8460 01cc 00000000 		.word	.LANCHOR98
 8461 01d0 00000000 		.word	.LANCHOR100
 8462 01d4 00000000 		.word	.LANCHOR101
 8463 01d8 00000000 		.word	.LANCHOR70
 8464 01dc 00000000 		.word	.LANCHOR111
 8465 01e0 00000000 		.word	.LANCHOR74
 8466 01e4 00000000 		.word	.LANCHOR8
 8467 01e8 00000000 		.word	.LANCHOR114
 8468 01ec 00000000 		.word	.LANCHOR77
 8469 01f0 00000000 		.word	.LANCHOR78
 8470 01f4 00000000 		.word	.LANCHOR113
 8471 01f8 00000000 		.word	.LANCHOR112
 8472 01fc 00000000 		.word	.LANCHOR110
 8473 0200 00000000 		.word	.LANCHOR20
 8474 0204 00000000 		.word	.LANCHOR73
 8475 0208 00000000 		.word	.LANCHOR72
 8476 020c 04000000 		.word	.LANCHOR0+4
 8477 0210 04000000 		.word	.LANCHOR1+4
 8478              		.cfi_endproc
 8479              	.LFE4308:
 8481              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8482              		.align	1
 8483              		.p2align 2,,3
 8484              		.syntax unified
 8485              		.thumb
 8486              		.thumb_func
 8487              		.fpu fpv5-d16
 8489              	_ZL13AudioCallbackPfS_j:
 8490              	.LVL567:
 8491              	.LFB4288:
 242:Veno-Echo.cpp **** 
 8492              		.loc 19 242 1 is_stmt 1 view -0
 8493              		.cfi_startproc
 8494              		@ args = 0, pretend = 0, frame = 72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 271


 8495              		@ frame_needed = 0, uses_anonymous_args = 0
 253:Veno-Echo.cpp **** 
 8496              		.loc 19 253 1 view .LVU2391
 271:Veno-Echo.cpp **** 
 8497              		.loc 19 271 1 view .LVU2392
 271:Veno-Echo.cpp **** 
 8498              		.loc 19 271 9 is_stmt 0 view .LVU2393
 8499 0000 DFF894C0 		ldr	ip, .L660+8
 271:Veno-Echo.cpp **** 
 8500              		.loc 19 271 20 view .LVU2394
 8501 0004 DCF80030 		ldr	r3, [ip]
 242:Veno-Echo.cpp **** 
 8502              		.loc 19 242 1 view .LVU2395
 8503 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8504              		.cfi_def_cfa_offset 36
 8505              		.cfi_offset 4, -36
 8506              		.cfi_offset 5, -32
 8507              		.cfi_offset 6, -28
 8508              		.cfi_offset 7, -24
 8509              		.cfi_offset 8, -20
 8510              		.cfi_offset 9, -16
 8511              		.cfi_offset 10, -12
 8512              		.cfi_offset 11, -8
 8513              		.cfi_offset 14, -4
 271:Veno-Echo.cpp **** 
 8514              		.loc 19 271 20 view .LVU2396
 8515 000c 0133     		adds	r3, r3, #1
 271:Veno-Echo.cpp **** 
 8516              		.loc 19 271 25 view .LVU2397
 8517 000e 204C     		ldr	r4, .L660
 242:Veno-Echo.cpp **** 
 8518              		.loc 19 242 1 view .LVU2398
 8519 0010 0646     		mov	r6, r0
 8520 0012 1546     		mov	r5, r2
 271:Veno-Echo.cpp **** 
 8521              		.loc 19 271 25 view .LVU2399
 8522 0014 84FB0302 		smull	r0, r2, r4, r3
 8523              	.LVL568:
 271:Veno-Echo.cpp **** 
 8524              		.loc 19 271 25 view .LVU2400
 8525 0018 DC17     		asrs	r4, r3, #31
 242:Veno-Echo.cpp **** 
 8526              		.loc 19 242 1 view .LVU2401
 8527 001a 0F46     		mov	r7, r1
 8528              	.LBB1559:
 8529              	.LBB1560:
 8530              	.LBB1561:
 8531              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 272


  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 273


  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 274


 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 275


 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 276


 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 277


 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 278


 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 279


 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 8532              		.loc 23 419 24 view .LVU2402
 8533 001c 1D49     		ldr	r1, .L660+4
 8534              	.LVL569:
 8535              		.loc 23 419 24 view .LVU2403
 8536              	.LBE1561:
 8537              	.LBE1560:
 8538              	.LBE1559:
 271:Veno-Echo.cpp **** 
 8539              		.loc 19 271 25 view .LVU2404
 8540 001e 1A44     		add	r2, r2, r3
 8541 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8542 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8543 0028 1B1B     		subs	r3, r3, r4
 242:Veno-Echo.cpp **** 
 8544              		.loc 19 242 1 view .LVU2405
 8545 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8546              		.cfi_def_cfa_offset 92
 8547              		.cfi_offset 80, -92
 8548              		.cfi_offset 81, -88
 8549              		.cfi_offset 82, -84
 8550              		.cfi_offset 83, -80
 8551              		.cfi_offset 84, -76
 8552              		.cfi_offset 85, -72
 8553              		.cfi_offset 86, -68
 8554              		.cfi_offset 87, -64
 8555              		.cfi_offset 88, -60
 8556              		.cfi_offset 89, -56
 8557              		.cfi_offset 90, -52
 8558              		.cfi_offset 91, -48
 8559              		.cfi_offset 92, -44
 8560              		.cfi_offset 93, -40
 271:Veno-Echo.cpp **** 
 8561              		.loc 19 271 9 view .LVU2406
 8562 002e CCF80030 		str	r3, [ip]
 273:Veno-Echo.cpp **** {
 8563              		.loc 19 273 1 is_stmt 1 view .LVU2407
 8564              	.LVL570:
 8565              	.LBB1566:
 8566              	.LBI1559:
 8567              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 280


   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 281


  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8568              		.loc 24 87 5 view .LVU2408
 8569              	.LBE1566:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8570              		.loc 24 88 7 view .LVU2409
 8571              	.LBB1567:
 8572              	.LBB1564:
 8573              	.LBI1560:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8574              		.loc 23 413 7 view .LVU2410
 8575              	.LBB1562:
 8576              		.loc 23 419 24 is_stmt 0 view .LVU2411
 8577 0032 BFF35B8F 		dmb	ish
 8578 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8579              	.LBE1562:
 8580              	.LBE1564:
 8581              	.LBE1567:
 242:Veno-Echo.cpp **** 
 8582              		.loc 19 242 1 view .LVU2412
 8583 0038 93B0     		sub	sp, sp, #76
 8584              		.cfi_def_cfa_offset 168
 8585              	.LBB1568:
 8586              	.LBB1565:
 8587              	.LBB1563:
 8588              		.loc 23 419 24 view .LVU2413
 8589 003a BFF35B8F 		dmb	ish
 8590              	.LBE1563:
 8591              	.LBE1565:
 8592              	.LBE1568:
 273:Veno-Echo.cpp **** {
 8593              		.loc 19 273 1 view .LVU2414
 8594 003e B3B9     		cbnz	r3, .L544
 286:Veno-Echo.cpp ****         {
 8595              		.loc 19 286 9 is_stmt 1 view .LVU2415
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 282


 8596 0040 DCF80030 		ldr	r3, [ip]
 8597 0044 0E2B     		cmp	r3, #14
 8598 0046 12D8     		bhi	.L544
 8599 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8600              	.L546:
 8601 004c 2606     		.2byte	(.L560-.L546)/2
 8602 004e 1D06     		.2byte	(.L559-.L546)/2
 8603 0050 1906     		.2byte	(.L558-.L546)/2
 8604 0052 1006     		.2byte	(.L557-.L546)/2
 8605 0054 0C06     		.2byte	(.L556-.L546)/2
 8606 0056 0306     		.2byte	(.L555-.L546)/2
 8607 0058 FF05     		.2byte	(.L554-.L546)/2
 8608 005a F605     		.2byte	(.L553-.L546)/2
 8609 005c F205     		.2byte	(.L552-.L546)/2
 8610 005e E905     		.2byte	(.L551-.L546)/2
 8611 0060 E505     		.2byte	(.L550-.L546)/2
 8612 0062 DC05     		.2byte	(.L549-.L546)/2
 8613 0064 D805     		.2byte	(.L548-.L546)/2
 8614 0066 0F00     		.2byte	(.L547-.L546)/2
 8615 0068 D405     		.2byte	(.L545-.L546)/2
 8616              		.p2align 1
 8617              	.L547:
 341:Veno-Echo.cpp ****                 Update_crossfeedback();
 8618              		.loc 19 341 13 view .LVU2416
 342:Veno-Echo.cpp ****             break;
 8619              		.loc 19 342 17 view .LVU2417
 342:Veno-Echo.cpp ****             break;
 8620              		.loc 19 342 37 is_stmt 0 view .LVU2418
 8621 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8622              	.LVL571:
 343:Veno-Echo.cpp **** 
 8623              		.loc 19 343 13 is_stmt 1 view .LVU2419
 8624              	.L544:
 8625              	.LBB1569:
 351:Veno-Echo.cpp ****     {   
 8626              		.loc 19 351 25 discriminator 1 view .LVU2420
 8627 006e 002D     		cmp	r5, #0
 8628 0070 00F0A885 		beq	.L543
 351:Veno-Echo.cpp ****     {   
 8629              		.loc 19 351 25 is_stmt 0 view .LVU2421
 8630 0074 0023     		movs	r3, #0
 8631 0076 013D     		subs	r5, r5, #1
 8632              	.LVL572:
 351:Veno-Echo.cpp ****     {   
 8633              		.loc 19 351 25 view .LVU2422
 8634 0078 DFF82080 		ldr	r8, .L660+12
 8635 007c B346     		mov	fp, r6
 8636 007e 0293     		str	r3, [sp, #8]
 8637 0080 25F00103 		bic	r3, r5, #1
 8638 0084 DFF81890 		ldr	r9, .L660+16
 8639 0088 0097     		str	r7, [sp]
 8640 008a 0593     		str	r3, [sp, #20]
 8641 008c 8FE0     		b	.L616
 8642              	.L661:
 8643 008e 00BF     		.align	2
 8644              	.L660:
 8645 0090 89888888 		.word	-2004318071
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 283


 8646 0094 00000000 		.word	.LANCHOR116
 8647 0098 00000000 		.word	.LANCHOR115
 8648 009c 00000000 		.word	.LANCHOR131
 8649 00a0 00000000 		.word	.LANCHOR132
 8650              	.LVL573:
 8651              	.L659:
 8652              	.LBB1570:
 8653              	.LBB1571:
 8654              	.LBB1572:
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8655              		.loc 19 2021 10 is_stmt 1 view .LVU2423
 8656 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
2022:Veno-Echo.cpp ****     else
 8657              		.loc 19 2022 19 is_stmt 0 view .LVU2424
 8658 00a8 B4EE678A 		vcmp.f32	s16, s15
 8659 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8660 00b0 48BF     		it	mi
 8661 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8662              	.LVL574:
 8663              	.L598:
2026:Veno-Echo.cpp **** }
 8664              		.loc 19 2026 5 is_stmt 1 view .LVU2425
2026:Veno-Echo.cpp **** }
 8665              		.loc 19 2026 5 is_stmt 0 view .LVU2426
 8666              	.LBE1572:
 8667              	.LBE1571:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8668              		.loc 19 490 9 is_stmt 1 view .LVU2427
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8669              		.loc 19 490 42 is_stmt 0 view .LVU2428
 8670 00b6 D848     		ldr	r0, .L662
 8671 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8672              	.LVL575:
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8673              		.loc 19 490 21 view .LVU2429
 8674 00bc 11A9     		add	r1, sp, #68
 8675 00be D748     		ldr	r0, .L662+4
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8676              		.loc 19 490 42 view .LVU2430
 8677 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8678              		.loc 19 490 21 view .LVU2431
 8679 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8680              	.LVL576:
 491:Veno-Echo.cpp **** 
 8681              		.loc 19 491 9 is_stmt 1 view .LVU2432
 491:Veno-Echo.cpp **** 
 8682              		.loc 19 491 42 is_stmt 0 view .LVU2433
 8683 00c8 D548     		ldr	r0, .L662+8
 8684 00ca B0EE480A 		vmov.f32	s0, s16
 8685 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8686              	.LVL577:
 491:Veno-Echo.cpp **** 
 8687              		.loc 19 491 21 view .LVU2434
 8688 00d2 11A9     		add	r1, sp, #68
 8689 00d4 D348     		ldr	r0, .L662+12
 491:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 284


 8690              		.loc 19 491 42 view .LVU2435
 8691 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 491:Veno-Echo.cpp **** 
 8692              		.loc 19 491 21 view .LVU2436
 8693 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8694              	.LVL578:
 494:Veno-Echo.cpp ****         float mixR;
 8695              		.loc 19 494 9 is_stmt 1 view .LVU2437
 495:Veno-Echo.cpp **** 
 8696              		.loc 19 495 9 view .LVU2438
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8697              		.loc 19 497 9 view .LVU2439
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8698              		.loc 19 497 53 is_stmt 0 view .LVU2440
 8699 00de 09AA     		add	r2, sp, #36
 8700 00e0 08A9     		add	r1, sp, #32
 8701 00e2 D148     		ldr	r0, .L662+16
 8702 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8703              	.LVL579:
 498:Veno-Echo.cpp **** 
 8704              		.loc 19 498 53 view .LVU2441
 8705 00e8 08AA     		add	r2, sp, #32
 8706 00ea 09A9     		add	r1, sp, #36
 8707 00ec CE48     		ldr	r0, .L662+16
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8708              		.loc 19 497 81 view .LVU2442
 8709 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 498:Veno-Echo.cpp **** 
 8710              		.loc 19 498 9 is_stmt 1 view .LVU2443
 498:Veno-Echo.cpp **** 
 8711              		.loc 19 498 53 is_stmt 0 view .LVU2444
 8712 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8713              	.LVL580:
 8714              	.LBB1574:
 8715              	.LBB1575:
2019:Veno-Echo.cpp ****         returnval = limit;
 8716              		.loc 19 2019 5 view .LVU2445
 8717 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8718              	.LBE1575:
 8719              	.LBE1574:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8720              		.loc 19 501 38 view .LVU2446
 8721 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8722              		.loc 19 501 9 is_stmt 1 view .LVU2447
 8723              	.LVL581:
 8724              	.LBB1578:
 8725              	.LBI1574:
2016:Veno-Echo.cpp **** {
 8726              		.loc 19 2016 7 view .LVU2448
 8727              	.LBB1576:
2018:Veno-Echo.cpp ****     if (input > limit)
 8728              		.loc 19 2018 5 view .LVU2449
2019:Veno-Echo.cpp ****         returnval = limit;
 8729              		.loc 19 2019 5 view .LVU2450
 8730 00fe F4EEC77A 		vcmpe.f32	s15, s14
 8731 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 285


 8732 0106 00F30285 		bgt	.L628
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8733              		.loc 19 2021 10 view .LVU2451
 8734 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
2022:Veno-Echo.cpp ****     else
 8735              		.loc 19 2022 19 is_stmt 0 view .LVU2452
 8736 010e F4EE477A 		vcmp.f32	s15, s14
 8737 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8738 0116 48BF     		it	mi
 8739 0118 F0EE477A 		vmovmi.f32	s15, s14
 8740              	.LVL582:
 8741              	.L600:
2026:Veno-Echo.cpp **** }
 8742              		.loc 19 2026 5 is_stmt 1 view .LVU2453
2026:Veno-Echo.cpp **** }
 8743              		.loc 19 2026 5 is_stmt 0 view .LVU2454
 8744              	.LBE1576:
 8745              	.LBE1578:
 8746              	.LBB1579:
 8747              	.LBB1580:
2019:Veno-Echo.cpp ****         returnval = limit;
 8748              		.loc 19 2019 5 view .LVU2455
 8749 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8750              	.LBE1580:
 8751              	.LBE1579:
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8752              		.loc 19 501 27 view .LVU2456
 8753 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 502:Veno-Echo.cpp **** 
 8754              		.loc 19 502 9 is_stmt 1 view .LVU2457
 8755              	.LVL583:
 8756              	.LBB1584:
 8757              	.LBI1579:
2016:Veno-Echo.cpp **** {
 8758              		.loc 19 2016 7 view .LVU2458
 8759              	.LBB1581:
2018:Veno-Echo.cpp ****     if (input > limit)
 8760              		.loc 19 2018 5 view .LVU2459
2019:Veno-Echo.cpp ****         returnval = limit;
 8761              		.loc 19 2019 5 view .LVU2460
 8762 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8763 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8764 012c 00F35784 		bgt	.L629
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8765              		.loc 19 2021 10 view .LVU2461
 8766 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8767              	.LBE1581:
 8768              	.LBE1584:
 8769              	.LBB1585:
 504:Veno-Echo.cpp **** {
 8770              		.loc 19 504 1 is_stmt 0 view .LVU2462
 8771 0134 BD4B     		ldr	r3, .L662+20
 8772 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8773              	.LBE1585:
 8774              	.LBB1607:
 8775              	.LBB1582:
2022:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 286


 8776              		.loc 19 2022 19 view .LVU2463
 8777 0138 B4EE470A 		vcmp.f32	s0, s14
 8778 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8779 0140 48BF     		it	mi
 8780 0142 B0EE470A 		vmovmi.f32	s0, s14
 8781              	.LVL584:
2026:Veno-Echo.cpp **** }
 8782              		.loc 19 2026 5 is_stmt 1 view .LVU2464
2026:Veno-Echo.cpp **** }
 8783              		.loc 19 2026 5 is_stmt 0 view .LVU2465
 8784              	.LBE1582:
 8785              	.LBE1607:
 502:Veno-Echo.cpp **** 
 8786              		.loc 19 502 27 view .LVU2466
 8787 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 504:Veno-Echo.cpp **** {
 8788              		.loc 19 504 1 is_stmt 1 view .LVU2467
 8789              	.LBB1608:
 8790 014a 002B     		cmp	r3, #0
 8791 014c 40F05084 		bne	.L656
 8792              	.LVL585:
 8793              	.L604:
 504:Veno-Echo.cpp **** {
 8794              		.loc 19 504 1 is_stmt 0 view .LVU2468
 8795              	.LBE1608:
 545:Veno-Echo.cpp ****         {
 8796              		.loc 19 545 9 is_stmt 1 view .LVU2469
 545:Veno-Echo.cpp ****         {
 8797              		.loc 19 545 19 is_stmt 0 view .LVU2470
 8798 0150 B74B     		ldr	r3, .L662+24
 545:Veno-Echo.cpp ****         {
 8799              		.loc 19 545 9 view .LVU2471
 8800 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 545:Veno-Echo.cpp ****         {
 8801              		.loc 19 545 19 view .LVU2472
 8802 0156 93ED007A 		vldr.32	s14, [r3]
 545:Veno-Echo.cpp ****         {
 8803              		.loc 19 545 9 view .LVU2473
 8804 015a B4EEE67A 		vcmpe.f32	s14, s13
 8805 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8806 0162 40F12A84 		bpl	.L650
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8807              		.loc 19 547 13 is_stmt 1 view .LVU2474
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8808              		.loc 19 547 34 is_stmt 0 view .LVU2475
 8809 0166 37EE077A 		vadd.f32	s14, s14, s14
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8810              		.loc 19 547 18 view .LVU2476
 8811 016a 9BED006A 		vldr.32	s12, [fp]
 548:Veno-Echo.cpp ****         }
 8812              		.loc 19 548 18 view .LVU2477
 8813 016e DBED016A 		vldr.32	s13, [fp, #4]
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8814              		.loc 19 547 18 view .LVU2478
 8815 0172 A7EE276A 		vfma.f32	s12, s14, s15
 548:Veno-Echo.cpp ****         }
 8816              		.loc 19 548 18 view .LVU2479
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 287


 8817 0176 E7EE006A 		vfma.f32	s13, s14, s0
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8818              		.loc 19 547 18 view .LVU2480
 8819 017a F0EE467A 		vmov.f32	s15, s12
 8820              	.LVL586:
 548:Veno-Echo.cpp ****         }
 8821              		.loc 19 548 13 is_stmt 1 view .LVU2481
 548:Veno-Echo.cpp ****         }
 8822              		.loc 19 548 18 is_stmt 0 view .LVU2482
 8823 017e B0EE660A 		vmov.f32	s0, s13
 8824              	.LVL587:
 8825              	.L610:
 562:Veno-Echo.cpp ****         {
 8826              		.loc 19 562 9 is_stmt 1 view .LVU2483
 8827 0182 AC4B     		ldr	r3, .L662+28
 8828 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8829 0186 002B     		cmp	r3, #0
 8830 0188 00F01084 		beq	.L613
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8831              		.loc 19 564 13 view .LVU2484
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8832              		.loc 19 564 20 is_stmt 0 view .LVU2485
 8833 018c 0023     		movs	r3, #0
 8834 018e 009A     		ldr	r2, [sp]
 8835 0190 1360     		str	r3, [r2]	@ float
 565:Veno-Echo.cpp ****         }
 8836              		.loc 19 565 13 is_stmt 1 view .LVU2486
 565:Veno-Echo.cpp ****         }
 8837              		.loc 19 565 22 is_stmt 0 view .LVU2487
 8838 0192 5360     		str	r3, [r2, #4]	@ float
 8839              	.L614:
 8840              	.LBE1570:
 351:Veno-Echo.cpp ****     {   
 8841              		.loc 19 351 5 is_stmt 1 discriminator 2 view .LVU2488
 8842 0194 009B     		ldr	r3, [sp]
 8843 0196 0BF1080B 		add	fp, fp, #8
 351:Veno-Echo.cpp ****     {   
 8844              		.loc 19 351 35 is_stmt 0 discriminator 2 view .LVU2489
 8845 019a 029A     		ldr	r2, [sp, #8]
 351:Veno-Echo.cpp ****     {   
 8846              		.loc 19 351 25 discriminator 2 view .LVU2490
 8847 019c 0599     		ldr	r1, [sp, #20]
 8848 019e 0833     		adds	r3, r3, #8
 8849 01a0 8A42     		cmp	r2, r1
 8850 01a2 0093     		str	r3, [sp]
 351:Veno-Echo.cpp ****     {   
 8851              		.loc 19 351 35 discriminator 2 view .LVU2491
 8852 01a4 02F10203 		add	r3, r2, #2
 8853              	.LVL588:
 351:Veno-Echo.cpp ****     {   
 8854              		.loc 19 351 25 is_stmt 1 discriminator 2 view .LVU2492
 8855 01a8 00F00C85 		beq	.L543
 8856 01ac 0293     		str	r3, [sp, #8]
 8857              	.LVL589:
 8858              	.L616:
 8859              	.LBB1944:
 353:Veno-Echo.cpp ****         Update_Mod();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 288


 8860              		.loc 19 353 9 view .LVU2493
 353:Veno-Echo.cpp ****         Update_Mod();
 8861              		.loc 19 353 20 is_stmt 0 view .LVU2494
 8862 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 8863              	.LVL590:
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 8864              		.loc 19 354 9 is_stmt 1 view .LVU2495
 8865              	.LBB1609:
 8866              	.LBB1610:
 8867              	.LBB1611:
 8868              	.LBB1612:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 289


 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8869              		.loc 18 174 71 is_stmt 0 view .LVU2496
 8870 01b2 DFF808A3 		ldr	r10, .L662+164
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 290


 8871              	.LBE1612:
 8872              	.LBE1611:
 8873              	.LBE1610:
 8874              	.LBE1609:
 354:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 8875              		.loc 19 354 19 view .LVU2497
 8876 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 8877              	.LVL591:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8878              		.loc 19 356 9 is_stmt 1 view .LVU2498
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8879              		.loc 19 356 51 is_stmt 0 view .LVU2499
 8880 01ba 9F48     		ldr	r0, .L662+32
 8881 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8882              	.LVL592:
 8883 01c0 0146     		mov	r1, r0
 8884 01c2 9E48     		ldr	r0, .L662+36
 8885              	.LBB1664:
 8886              	.LBB1647:
 8887              	.LBB1630:
 8888              	.LBB1613:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8889              		.loc 18 175 77 view .LVU2500
 8890 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8891              	.LBE1613:
 8892              	.LBE1630:
 8893              	.LBE1647:
 8894              	.LBE1664:
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8895              		.loc 19 356 51 view .LVU2501
 8896 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8897              	.LVL593:
 357:Veno-Echo.cpp ****         
 8898              		.loc 19 357 51 view .LVU2502
 8899 01cc 9C48     		ldr	r0, .L662+40
 356:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8900              		.loc 19 356 51 view .LVU2503
 8901 01ce F0EE40BA 		vmov.f32	s23, s0
 8902              	.LVL594:
 357:Veno-Echo.cpp ****         
 8903              		.loc 19 357 9 is_stmt 1 view .LVU2504
 357:Veno-Echo.cpp ****         
 8904              		.loc 19 357 51 is_stmt 0 view .LVU2505
 8905 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8906              	.LVL595:
 357:Veno-Echo.cpp ****         
 8907              		.loc 19 357 51 view .LVU2506
 8908 01d6 0146     		mov	r1, r0
 8909 01d8 9A48     		ldr	r0, .L662+44
 8910 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8911              	.LVL596:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8912              		.loc 19 359 44 view .LVU2507
 8913 01de 9A48     		ldr	r0, .L662+48
 357:Veno-Echo.cpp ****         
 8914              		.loc 19 357 51 view .LVU2508
 8915 01e0 B0EE409A 		vmov.f32	s18, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 291


 8916              	.LVL597:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8917              		.loc 19 359 9 is_stmt 1 view .LVU2509
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8918              		.loc 19 359 44 is_stmt 0 view .LVU2510
 8919 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8920              	.LVL598:
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8921              		.loc 19 359 44 view .LVU2511
 8922 01e8 0146     		mov	r1, r0
 8923 01ea 9848     		ldr	r0, .L662+52
 8924 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8925              	.LVL599:
 360:Veno-Echo.cpp **** 
 8926              		.loc 19 360 44 view .LVU2512
 8927 01f0 9748     		ldr	r0, .L662+56
 359:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8928              		.loc 19 359 44 view .LVU2513
 8929 01f2 B0EE408A 		vmov.f32	s16, s0
 8930              	.LVL600:
 360:Veno-Echo.cpp **** 
 8931              		.loc 19 360 9 is_stmt 1 view .LVU2514
 360:Veno-Echo.cpp **** 
 8932              		.loc 19 360 44 is_stmt 0 view .LVU2515
 8933 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8934              	.LVL601:
 360:Veno-Echo.cpp **** 
 8935              		.loc 19 360 44 view .LVU2516
 8936 01fa 0146     		mov	r1, r0
 8937 01fc 9548     		ldr	r0, .L662+60
 8938 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8939              	.LVL602:
 8940              	.LBB1665:
 8941              	.LBB1666:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8942              		.loc 10 60 42 view .LVU2517
 8943 0202 9548     		ldr	r0, .L662+64
 8944              	.LBE1666:
 8945              	.LBE1665:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8946              		.loc 19 383 49 view .LVU2518
 8947 0204 954B     		ldr	r3, .L662+68
 360:Veno-Echo.cpp **** 
 8948              		.loc 19 360 44 view .LVU2519
 8949 0206 F0EE407A 		vmov.f32	s15, s0
 8950              	.LVL603:
 363:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8951              		.loc 19 363 9 is_stmt 1 view .LVU2520
 8952              	.LBB1668:
 8953              	.LBI1665:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8954              		.loc 10 60 17 view .LVU2521
 8955              	.LBB1667:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8956              		.loc 10 60 37 view .LVU2522
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8957              		.loc 10 60 42 is_stmt 0 view .LVU2523
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 292


 8958 020a C0ED00BA 		vstr.32	s23, [r0]
 8959              	.LVL604:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8960              		.loc 10 60 42 view .LVU2524
 8961              	.LBE1667:
 8962              	.LBE1668:
 364:Veno-Echo.cpp ****         
 8963              		.loc 19 364 9 is_stmt 1 view .LVU2525
 8964              	.LBB1669:
 8965              	.LBI1669:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8966              		.loc 10 60 17 view .LVU2526
 8967              	.LBB1670:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8968              		.loc 10 60 37 view .LVU2527
 8969              	.LBE1670:
 8970              	.LBE1669:
 8971              	.LBB1673:
 8972              	.LBB1648:
 8973              	.LBB1631:
 8974              	.LBB1614:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8975              		.loc 18 174 82 is_stmt 0 view .LVU2528
 8976 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 8977              	.LBE1614:
 8978              	.LBE1631:
 8979              	.LBE1648:
 8980              	.LBE1673:
 8981              	.LBB1674:
 8982              	.LBB1671:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8983              		.loc 10 60 42 view .LVU2529
 8984 0212 9348     		ldr	r0, .L662+72
 8985              	.LBE1671:
 8986              	.LBE1674:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8987              		.loc 19 383 49 view .LVU2530
 8988 0214 1D68     		ldr	r5, [r3]
 8989              	.LBB1675:
 8990              	.LBB1672:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8991              		.loc 10 60 42 view .LVU2531
 8992 0216 80ED009A 		vstr.32	s18, [r0]
 8993              	.LVL605:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8994              		.loc 10 60 42 view .LVU2532
 8995              	.LBE1672:
 8996              	.LBE1675:
 366:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 8997              		.loc 19 366 9 is_stmt 1 view .LVU2533
 8998              	.LBB1676:
 8999              	.LBI1676:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9000              		.loc 10 60 17 view .LVU2534
 9001              	.LBB1677:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9002              		.loc 10 60 37 view .LVU2535
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 293


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9003              		.loc 10 60 42 is_stmt 0 view .LVU2536
 9004 021a 9248     		ldr	r0, .L662+76
 9005              	.LBE1677:
 9006              	.LBE1676:
 9007              	.LBB1679:
 9008              	.LBB1649:
 9009              	.LBB1632:
 9010              	.LBB1615:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9011              		.loc 18 174 71 view .LVU2537
 9012 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9013              		.loc 18 174 46 view .LVU2538
 9014 0220 9FED91AA 		vldr.32	s20, .L662+80
 9015              	.LBE1615:
 9016              	.LBE1632:
 9017              	.LBE1649:
 9018              	.LBE1679:
 9019              	.LBB1680:
 9020              	.LBB1678:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9021              		.loc 10 60 42 view .LVU2539
 9022 0224 80ED008A 		vstr.32	s16, [r0]
 9023              	.LVL606:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9024              		.loc 10 60 42 view .LVU2540
 9025              	.LBE1678:
 9026              	.LBE1680:
 367:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9027              		.loc 19 367 9 is_stmt 1 view .LVU2541
 9028              	.LBB1681:
 9029              	.LBI1681:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9030              		.loc 10 60 17 view .LVU2542
 9031              	.LBB1682:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9032              		.loc 10 60 37 view .LVU2543
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9033              		.loc 10 60 42 is_stmt 0 view .LVU2544
 9034 0228 9048     		ldr	r0, .L662+84
 9035              	.LBE1682:
 9036              	.LBE1681:
 9037              	.LBB1684:
 9038              	.LBB1650:
 9039              	.LBB1633:
 9040              	.LBB1616:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9041              		.loc 18 174 71 view .LVU2545
 9042 022a 93ED00BA 		vldr.32	s22, [r3]
 9043              	.LBE1616:
 9044              	.LBE1633:
 9045              	.LBE1650:
 9046              	.LBE1684:
 9047              	.LBB1685:
 9048              	.LBB1683:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 294


 9049              		.loc 10 60 42 view .LVU2546
 9050 022e 80ED008A 		vstr.32	s16, [r0]
 9051              	.LVL607:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9052              		.loc 10 60 42 view .LVU2547
 9053              	.LBE1683:
 9054              	.LBE1685:
 368:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9055              		.loc 19 368 9 is_stmt 1 view .LVU2548
 9056              	.LBB1686:
 9057              	.LBI1686:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9058              		.loc 10 60 17 view .LVU2549
 9059              	.LBB1687:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9060              		.loc 10 60 37 view .LVU2550
 9061              	.LBE1687:
 9062              	.LBE1686:
 9063              	.LBB1690:
 9064              	.LBB1691:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9065              		.loc 10 60 42 is_stmt 0 view .LVU2551
 9066 0232 8F48     		ldr	r0, .L662+88
 9067              	.LBE1691:
 9068              	.LBE1690:
 9069              	.LBB1694:
 9070              	.LBB1651:
 9071              	.LBB1634:
 9072              	.LBB1617:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9073              		.loc 18 174 46 view .LVU2552
 9074 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 9075              	.LVL608:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9076              		.loc 18 174 71 view .LVU2553
 9077 0238 0493     		str	r3, [sp, #16]
 9078              		.loc 18 175 77 view .LVU2554
 9079 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 9080              	.LBE1617:
 9081              	.LBE1634:
 9082              	.LBE1651:
 9083              	.LBE1694:
 9084              	.LBB1695:
 9085              	.LBB1692:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9086              		.loc 10 60 42 view .LVU2555
 9087 023e 80ED008A 		vstr.32	s16, [r0]
 9088              	.LBE1692:
 9089              	.LBE1695:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9090              		.loc 19 376 27 view .LVU2556
 9091 0242 8C4B     		ldr	r3, .L662+92
 9092              	.LBB1696:
 9093              	.LBB1697:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9094              		.loc 10 60 42 view .LVU2557
 9095 0244 8C48     		ldr	r0, .L662+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 295


 9096              	.LBE1697:
 9097              	.LBE1696:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9098              		.loc 19 376 27 view .LVU2558
 9099 0246 1B68     		ldr	r3, [r3]	@ float
 9100              	.LBB1700:
 9101              	.LBB1698:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9102              		.loc 10 60 42 view .LVU2559
 9103 0248 80ED008A 		vstr.32	s16, [r0]
 9104              	.LBE1698:
 9105              	.LBE1700:
 9106              	.LBB1701:
 9107              	.LBB1688:
 9108 024c 8B48     		ldr	r0, .L662+100
 9109              	.LBE1688:
 9110              	.LBE1701:
 9111              	.LBB1702:
 9112              	.LBB1652:
 9113              	.LBB1635:
 9114              	.LBB1618:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9115              		.loc 18 174 103 view .LVU2560
 9116 024e DFED8C9A 		vldr.32	s19, .L662+104
 9117              	.LBE1618:
 9118              	.LBE1635:
 9119              	.LBE1652:
 9120              	.LBE1702:
 9121              	.LBB1703:
 9122              	.LBB1689:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9123              		.loc 10 60 42 view .LVU2561
 9124 0252 C0ED007A 		vstr.32	s15, [r0]
 9125              	.LVL609:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9126              		.loc 10 60 42 view .LVU2562
 9127              	.LBE1689:
 9128              	.LBE1703:
 369:Veno-Echo.cpp **** 
 9129              		.loc 19 369 9 is_stmt 1 view .LVU2563
 9130              	.LBB1704:
 9131              	.LBI1704:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9132              		.loc 10 60 17 view .LVU2564
 9133              	.LBB1705:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9134              		.loc 10 60 37 view .LVU2565
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9135              		.loc 10 60 42 is_stmt 0 view .LVU2566
 9136 0256 8B48     		ldr	r0, .L662+108
 9137              	.LBE1705:
 9138              	.LBE1704:
 9139              	.LBB1707:
 9140              	.LBB1653:
 9141              	.LBB1636:
 9142              	.LBB1619:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 296


 9143              		.loc 18 174 98 view .LVU2567
 9144 0258 9FED8B9A 		vldr.32	s18, .L662+112
 9145              	.LVL610:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9146              		.loc 18 174 98 view .LVU2568
 9147              	.LBE1619:
 9148              	.LBE1636:
 9149              	.LBE1653:
 9150              	.LBE1707:
 9151              	.LBB1708:
 9152              	.LBB1706:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9153              		.loc 10 60 42 view .LVU2569
 9154 025c C0ED007A 		vstr.32	s15, [r0]
 9155              	.LVL611:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9156              		.loc 10 60 42 view .LVU2570
 9157              	.LBE1706:
 9158              	.LBE1708:
 371:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 9159              		.loc 19 371 9 is_stmt 1 view .LVU2571
 9160              	.LBB1709:
 9161              	.LBI1690:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9162              		.loc 10 60 17 view .LVU2572
 9163              	.LBB1693:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9164              		.loc 10 60 37 view .LVU2573
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9165              		.loc 10 60 37 is_stmt 0 view .LVU2574
 9166              	.LBE1693:
 9167              	.LBE1709:
 372:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 9168              		.loc 19 372 9 is_stmt 1 view .LVU2575
 9169              	.LBB1710:
 9170              	.LBI1696:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9171              		.loc 10 60 17 view .LVU2576
 9172              	.LBB1699:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9173              		.loc 10 60 37 view .LVU2577
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9174              		.loc 10 60 37 is_stmt 0 view .LVU2578
 9175              	.LBE1699:
 9176              	.LBE1710:
 373:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 9177              		.loc 19 373 9 is_stmt 1 view .LVU2579
 9178              	.LBB1711:
 9179              	.LBI1711:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9180              		.loc 10 60 17 view .LVU2580
 9181              	.LBB1712:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9182              		.loc 10 60 37 view .LVU2581
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9183              		.loc 10 60 42 is_stmt 0 view .LVU2582
 9184 0260 8A48     		ldr	r0, .L662+116
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 297


 9185              	.LBE1712:
 9186              	.LBE1711:
 9187              	.LBB1714:
 9188              	.LBB1654:
 9189              	.LBB1637:
 9190              	.LBB1620:
 162:delayline_reverse.h **** 
 9191              		.loc 18 162 23 view .LVU2583
 9192 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 9193              	.LBE1620:
 9194              	.LBE1637:
 9195              	.LBE1654:
 9196              	.LBE1714:
 9197              	.LBB1715:
 9198              	.LBB1713:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9199              		.loc 10 60 42 view .LVU2584
 9200 0266 C0ED007A 		vstr.32	s15, [r0]
 9201              	.LVL612:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9202              		.loc 10 60 42 view .LVU2585
 9203              	.LBE1713:
 9204              	.LBE1715:
 374:Veno-Echo.cpp **** 
 9205              		.loc 19 374 9 is_stmt 1 view .LVU2586
 9206              	.LBB1716:
 9207              	.LBI1716:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9208              		.loc 10 60 17 view .LVU2587
 9209              	.LBB1717:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9210              		.loc 10 60 37 view .LVU2588
 9211              	.LBE1717:
 9212              	.LBE1716:
 9213              	.LBB1720:
 9214              	.LBB1655:
 9215              	.LBB1638:
 9216              	.LBB1621:
 162:delayline_reverse.h **** 
 9217              		.loc 18 162 11 is_stmt 0 view .LVU2589
 9218 026a 05EB8702 		add	r2, r5, r7, lsl #2
 9219              	.LBE1621:
 9220              	.LBE1638:
 9221              	.LBE1655:
 9222              	.LBE1720:
 9223              	.LBB1721:
 9224              	.LBB1718:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9225              		.loc 10 60 42 view .LVU2590
 9226 026e 8848     		ldr	r0, .L662+120
 9227              	.LBE1718:
 9228              	.LBE1721:
 9229              	.LBB1722:
 9230              	.LBB1656:
 9231              	.LBB1639:
 9232              	.LBB1622:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 298


 9233              		.loc 18 161 11 view .LVU2591
 9234 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 9235              		.loc 18 162 11 view .LVU2592
 9236 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 9237              	.LBE1622:
 9238              	.LBE1639:
 9239              	.LBE1656:
 9240              	.LBE1722:
 9241              	.LBB1723:
 9242              	.LBB1724:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9243              		.loc 10 60 42 view .LVU2593
 9244 0278 864A     		ldr	r2, .L662+124
 9245              	.LBE1724:
 9246              	.LBE1723:
 9247              	.LBB1726:
 9248              	.LBB1719:
 9249 027a C0ED007A 		vstr.32	s15, [r0]
 9250              	.LVL613:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9251              		.loc 10 60 42 view .LVU2594
 9252              	.LBE1719:
 9253              	.LBE1726:
 376:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9254              		.loc 19 376 9 is_stmt 1 view .LVU2595
 9255              	.LBB1727:
 9256              	.LBI1723:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9257              		.loc 10 60 17 view .LVU2596
 9258              	.LBB1725:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9259              		.loc 10 60 37 view .LVU2597
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9260              		.loc 10 60 42 is_stmt 0 view .LVU2598
 9261 027e 1360     		str	r3, [r2]	@ float
 9262              	.LVL614:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9263              		.loc 10 60 42 view .LVU2599
 9264              	.LBE1725:
 9265              	.LBE1727:
 377:Veno-Echo.cpp **** 
 9266              		.loc 19 377 9 is_stmt 1 view .LVU2600
 9267              	.LBB1728:
 9268              	.LBI1728:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9269              		.loc 10 60 17 view .LVU2601
 9270              	.LBB1729:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9271              		.loc 10 60 37 view .LVU2602
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9272              		.loc 10 60 42 is_stmt 0 view .LVU2603
 9273 0280 854A     		ldr	r2, .L662+128
 9274              	.LBE1729:
 9275              	.LBE1728:
 9276              	.LBB1731:
 9277              	.LBB1657:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 299


 9278              	.LBB1640:
 9279              	.LBB1623:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9280              		.loc 18 161 11 view .LVU2604
 9281 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 9282              	.LBE1623:
 9283              	.LBE1640:
 9284              	.LBE1657:
 9285              	.LBE1731:
 9286              	.LBB1732:
 9287              	.LBB1730:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9288              		.loc 10 60 42 view .LVU2605
 9289 0286 1360     		str	r3, [r2]	@ float
 9290              	.LVL615:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9291              		.loc 10 60 42 view .LVU2606
 9292              	.LBE1730:
 9293              	.LBE1732:
 379:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 9294              		.loc 19 379 9 is_stmt 1 view .LVU2607
 9295              	.LBB1733:
 9296              	.LBI1733:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9297              		.loc 10 60 17 view .LVU2608
 9298              	.LBB1734:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9299              		.loc 10 60 37 view .LVU2609
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9300              		.loc 10 60 42 is_stmt 0 view .LVU2610
 9301 0288 844A     		ldr	r2, .L662+132
 9302 028a 1360     		str	r3, [r2]	@ float
 9303              	.LVL616:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9304              		.loc 10 60 42 view .LVU2611
 9305              	.LBE1734:
 9306              	.LBE1733:
 380:Veno-Echo.cpp **** 
 9307              		.loc 19 380 9 is_stmt 1 view .LVU2612
 9308              	.LBB1735:
 9309              	.LBI1735:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9310              		.loc 10 60 17 view .LVU2613
 9311              	.LBB1736:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9312              		.loc 10 60 37 view .LVU2614
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9313              		.loc 10 60 42 is_stmt 0 view .LVU2615
 9314 028c 844A     		ldr	r2, .L662+136
 9315 028e 1360     		str	r3, [r2]	@ float
 9316              	.LVL617:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9317              		.loc 10 60 42 view .LVU2616
 9318              	.LBE1736:
 9319              	.LBE1735:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9320              		.loc 19 383 9 is_stmt 1 view .LVU2617
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 300


 9321              	.LBB1737:
 9322              	.LBI1609:
  79:Veno-Echo.cpp ****     {
 9323              		.loc 19 79 11 view .LVU2618
 9324              	.LBB1658:
  82:Veno-Echo.cpp ****         return read;
 9325              		.loc 19 82 9 view .LVU2619
 9326              	.LBB1641:
 9327              	.LBI1611:
 159:delayline_reverse.h ****     {
 9328              		.loc 18 159 20 view .LVU2620
 9329              	.LBB1624:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9330              		.loc 18 174 46 is_stmt 0 view .LVU2621
 9331 0290 FFF7FEFF 		bl	sinf
 9332              	.LVL618:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9333              		.loc 18 174 46 view .LVU2622
 9334 0294 F0EE40BA 		vmov.f32	s23, s0
 9335              	.LVL619:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9336              		.loc 18 174 103 view .LVU2623
 9337 0298 2BEE290A 		vmul.f32	s0, s22, s19
 9338 029c FFF7FEFF 		bl	sinf
 9339              	.LVL620:
 9340 02a0 B0EE408A 		vmov.f32	s16, s0
 9341              	.LVL621:
 9342              		.loc 18 175 46 view .LVU2624
 9343 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 9344 02a8 FFF7FEFF 		bl	sinf
 9345              	.LVL622:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9346              		.loc 18 174 98 view .LVU2625
 9347 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9348              		.loc 18 174 82 view .LVU2626
 9349 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 9350              	.LVL623:
 9351              		.loc 18 175 46 view .LVU2627
 9352 02b4 F0EE40BA 		vmov.f32	s23, s0
 9353              		.loc 18 175 112 view .LVU2628
 9354 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 9355 02bc FFF7FEFF 		bl	sinf
 9356              	.LVL624:
 9357              		.loc 18 175 107 view .LVU2629
 9358 02c0 60EE097A 		vmul.f32	s15, s0, s18
 9359              	.LBE1624:
 9360              	.LBE1641:
 9361              	.LBE1658:
 9362              	.LBE1737:
 384:Veno-Echo.cpp **** 
 9363              		.loc 19 384 49 view .LVU2630
 9364 02c4 774B     		ldr	r3, .L662+140
 9365              	.LBB1738:
 9366              	.LBB1659:
 9367              	.LBB1642:
 9368              	.LBB1625:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 301


 9369              		.loc 18 175 91 view .LVU2631
 9370 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 9371              	.LVL625:
 9372              		.loc 18 175 91 view .LVU2632
 9373              	.LBE1625:
 9374              	.LBE1642:
 9375              	.LBE1659:
 9376              	.LBE1738:
 384:Veno-Echo.cpp **** 
 9377              		.loc 19 384 49 view .LVU2633
 9378 02ca 1C68     		ldr	r4, [r3]
 9379              	.LBB1739:
 9380              	.LBB1660:
 9381              	.LBB1643:
 9382              	.LBB1626:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9383              		.loc 18 174 9 view .LVU2634
 9384 02cc 38EE088A 		vadd.f32	s16, s16, s16
 9385              	.LVL626:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9386              		.loc 18 174 9 view .LVU2635
 9387              	.LBE1626:
 9388              	.LBE1643:
 9389              	.LBE1660:
 9390              	.LBE1739:
 9391              	.LBB1740:
 9392              	.LBB1741:
 9393              	.LBB1742:
 9394              	.LBB1743:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9395              		.loc 18 174 71 view .LVU2636
 9396 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 9397              		.loc 18 162 11 view .LVU2637
 9398 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9399              		.loc 18 174 71 view .LVU2638
 9400 02d8 91ED00CA 		vldr.32	s24, [r1]
 9401              	.LBE1743:
 9402              	.LBE1742:
 9403              	.LBE1741:
 9404              	.LBE1740:
 9405              	.LBB1774:
 9406              	.LBB1661:
 9407              	.LBB1644:
 9408              	.LBB1627:
 9409              		.loc 18 175 9 view .LVU2639
 9410 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 9411              	.LVL627:
 9412              		.loc 18 175 9 view .LVU2640
 9413              	.LBE1627:
 9414              	.LBE1644:
 9415              	.LBE1661:
 9416              	.LBE1774:
 9417              	.LBB1775:
 9418              	.LBB1764:
 9419              	.LBB1754:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 302


 9420              	.LBB1744:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9421              		.loc 18 161 11 view .LVU2641
 9422 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9423              		.loc 18 162 11 view .LVU2642
 9424 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9425              		.loc 18 175 77 view .LVU2643
 9426 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9427              		.loc 18 174 46 view .LVU2644
 9428 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9429              		.loc 18 161 11 view .LVU2645
 9430 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9431              	.LBE1744:
 9432              	.LBE1754:
 9433              	.LBE1764:
 9434              	.LBE1775:
 9435              	.LBB1776:
 9436              	.LBB1662:
 9437              	.LBB1645:
 9438              	.LBB1628:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9439              		.loc 18 177 44 view .LVU2646
 9440 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9441              	.LVL628:
 9442              		.loc 18 177 44 view .LVU2647
 9443              	.LBE1628:
 9444              	.LBE1645:
 9445              	.LBE1662:
 9446              	.LBE1776:
 9447              	.LBB1777:
 9448              	.LBB1765:
 9449              	.LBB1755:
 9450              	.LBB1745:
 162:delayline_reverse.h **** 
 9451              		.loc 18 162 11 view .LVU2648
 9452 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9453              		.loc 18 174 71 view .LVU2649
 9454 02fc 0391     		str	r1, [sp, #12]
 9455              	.LBE1745:
 9456              	.LBE1755:
 9457              	.LBE1765:
 9458              	.LBE1777:
 9459              	.LBB1778:
 9460              	.LBB1663:
 9461              	.LBB1646:
 9462              	.LBB1629:
 9463              		.loc 18 177 54 view .LVU2650
 9464 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9465              	.LVL629:
 9466              		.loc 18 177 54 view .LVU2651
 9467              	.LBE1629:
 9468              	.LBE1646:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 303


  83:Veno-Echo.cpp ****     }
 9469              		.loc 19 83 9 is_stmt 1 view .LVU2652
  83:Veno-Echo.cpp ****     }
 9470              		.loc 19 83 9 is_stmt 0 view .LVU2653
 9471              	.LBE1663:
 9472              	.LBE1778:
 383:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9473              		.loc 19 383 50 view .LVU2654
 9474 0302 CDED067A 		vstr.32	s15, [sp, #24]
 384:Veno-Echo.cpp **** 
 9475              		.loc 19 384 9 is_stmt 1 view .LVU2655
 9476              	.LVL630:
 9477              	.LBB1779:
 9478              	.LBI1740:
  79:Veno-Echo.cpp ****     {
 9479              		.loc 19 79 11 view .LVU2656
 9480              	.LBB1766:
  82:Veno-Echo.cpp ****         return read;
 9481              		.loc 19 82 9 view .LVU2657
 9482              	.LBB1756:
 9483              	.LBI1742:
 159:delayline_reverse.h ****     {
 9484              		.loc 18 159 20 view .LVU2658
 9485              	.LBB1746:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9486              		.loc 18 174 46 is_stmt 0 view .LVU2659
 9487 0306 FFF7FEFF 		bl	sinf
 9488              	.LVL631:
 9489 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9490              		.loc 18 174 103 view .LVU2660
 9491 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9492 0312 FFF7FEFF 		bl	sinf
 9493              	.LVL632:
 9494 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9495              		.loc 18 175 46 view .LVU2661
 9496 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9497 031e FFF7FEFF 		bl	sinf
 9498              	.LVL633:
 9499 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9500              		.loc 18 175 112 view .LVU2662
 9501 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9502              		.loc 18 174 98 view .LVU2663
 9503 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9504              		.loc 18 175 46 view .LVU2664
 9505 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9506              		.loc 18 175 112 view .LVU2665
 9507 0332 FFF7FEFF 		bl	sinf
 9508              	.LVL634:
 9509              	.LBE1746:
 9510              	.LBE1756:
 9511              	.LBE1766:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 304


 9512              	.LBE1779:
 9513              	.LBB1780:
 9514              	.LBB1781:
 9515              	.LBB1782:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9516              		.loc 18 98 38 view .LVU2666
 9517 0336 5C48     		ldr	r0, .L662+144
 9518              	.LBE1782:
 9519              	.LBE1781:
 9520              	.LBE1780:
 9521              	.LBB1805:
 9522              	.LBB1767:
 9523              	.LBB1757:
 9524              	.LBB1747:
 175:delayline_reverse.h **** 
 9525              		.loc 18 175 107 view .LVU2667
 9526 0338 60EE097A 		vmul.f32	s15, s0, s18
 9527              	.LBE1747:
 9528              	.LBE1757:
 9529              	.LBE1767:
 9530              	.LBE1805:
 9531              	.LBB1806:
 9532              	.LBB1794:
 9533              	.LBB1783:
  92:delayline_reverse.h ****         
 9534              		.loc 18 92 57 view .LVU2668
 9535 033c 5B4B     		ldr	r3, .L662+148
 9536              	.LBE1783:
 9537              	.LBE1794:
 9538              	.LBE1806:
 9539              	.LBB1807:
 9540              	.LBB1768:
 9541              	.LBB1758:
 9542              	.LBB1748:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9543              		.loc 18 174 82 view .LVU2669
 9544 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9545              	.LVL635:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9546              		.loc 18 174 82 view .LVU2670
 9547              	.LBE1748:
 9548              	.LBE1758:
 9549              	.LBE1768:
 9550              	.LBE1807:
 9551              	.LBB1808:
 9552              	.LBB1795:
 9553              	.LBB1784:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9554              		.loc 18 98 38 view .LVU2671
 9555 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9556              		.loc 18 90 15 view .LVU2672
 9557 0344 D5F804E0 		ldr	lr, [r5, #4]
 9558              	.LBE1784:
 9559              	.LBE1795:
 9560              	.LBE1808:
 9561              	.LBB1809:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 305


 9562              	.LBB1769:
 9563              	.LBB1759:
 9564              	.LBB1749:
 175:delayline_reverse.h **** 
 9565              		.loc 18 175 91 view .LVU2673
 9566 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9567              	.LVL636:
 175:delayline_reverse.h **** 
 9568              		.loc 18 175 91 view .LVU2674
 9569              	.LBE1749:
 9570              	.LBE1759:
 9571              	.LBE1769:
 9572              	.LBE1809:
 9573              	.LBB1810:
 9574              	.LBB1796:
 9575              	.LBB1785:
  99:delayline_reverse.h ****  
 9576              		.loc 18 99 38 view .LVU2675
 9577 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9578              		.loc 18 98 50 view .LVU2676
 9579 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9580              		.loc 18 92 57 view .LVU2677
 9581 0352 DFF86CC1 		ldr	ip, .L662+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9582              		.loc 18 90 9 view .LVU2678
 9583 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9584              		.loc 18 98 50 view .LVU2679
 9585 035a 890C     		lsrs	r1, r1, #18
 9586              	.LBE1785:
 9587              	.LBE1796:
 9588              	.LBE1810:
 9589              	.LBB1811:
 9590              	.LBB1770:
 9591              	.LBB1760:
 9592              	.LBB1750:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9593              		.loc 18 174 9 view .LVU2680
 9594 035c 38EE088A 		vadd.f32	s16, s16, s16
 9595              	.LVL637:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9596              		.loc 18 174 9 view .LVU2681
 9597              	.LBE1750:
 9598              	.LBE1760:
 9599              	.LBE1770:
 9600              	.LBE1811:
 9601              	.LBB1812:
 9602              	.LBB1797:
 9603              	.LBB1786:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9604              		.loc 18 98 50 view .LVU2682
 9605 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9606              		.loc 18 92 45 view .LVU2683
 9607 0364 524E     		ldr	r6, .L662+152
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 306


 9608              	.LBE1786:
 9609              	.LBE1797:
 9610              	.LBE1812:
 9611              	.LBB1813:
 9612              	.LBB1771:
 9613              	.LBB1761:
 9614              	.LBB1751:
 175:delayline_reverse.h **** 
 9615              		.loc 18 175 9 view .LVU2684
 9616 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9617              	.LVL638:
 175:delayline_reverse.h **** 
 9618              		.loc 18 175 9 view .LVU2685
 9619              	.LBE1751:
 9620              	.LBE1761:
 9621              	.LBE1771:
 9622              	.LBE1813:
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9623              		.loc 19 387 26 view .LVU2686
 9624 036a DBED007A 		vldr.32	s15, [fp]
 9625              	.LBB1814:
 9626              	.LBB1798:
 9627              	.LBB1787:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9628              		.loc 18 98 50 view .LVU2687
 9629 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9630              		.loc 18 92 45 view .LVU2688
 9631 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9632              		.loc 18 99 50 view .LVU2689
 9633 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9634              		.loc 18 92 57 view .LVU2690
 9635 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9636              		.loc 18 98 9 view .LVU2691
 9637 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9638              		.loc 18 99 50 view .LVU2692
 9639 037c 4FEA9E4E 		lsr	lr, lr, #18
 9640              	.LBE1787:
 9641              	.LBE1798:
 9642              	.LBE1814:
 9643              	.LBB1815:
 9644              	.LBB1772:
 9645              	.LBB1762:
 9646              	.LBB1752:
 9647              		.loc 18 177 44 view .LVU2693
 9648 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9649              	.LVL639:
 9650              		.loc 18 177 44 view .LVU2694
 9651              	.LBE1752:
 9652              	.LBE1762:
 9653              	.LBE1772:
 9654              	.LBE1815:
 9655              	.LBB1816:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 307


 9656              	.LBB1799:
 9657              	.LBB1788:
  92:delayline_reverse.h ****         
 9658              		.loc 18 92 57 view .LVU2695
 9659 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9660              		.loc 18 99 50 view .LVU2696
 9661 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9662              	.LBE1788:
 9663              	.LBE1799:
 9664              	.LBE1816:
 9665              	.LBB1817:
 9666              	.LBB1773:
 9667              	.LBB1763:
 9668              	.LBB1753:
 9669              		.loc 18 177 54 view .LVU2697
 9670 038a ACEE880A 		vfma.f32	s0, s25, s16
 9671              	.LVL640:
 9672              		.loc 18 177 54 view .LVU2698
 9673              	.LBE1753:
 9674              	.LBE1763:
  83:Veno-Echo.cpp ****     }
 9675              		.loc 19 83 9 is_stmt 1 view .LVU2699
  83:Veno-Echo.cpp ****     }
 9676              		.loc 19 83 9 is_stmt 0 view .LVU2700
 9677              	.LBE1773:
 9678              	.LBE1817:
 9679              	.LBB1818:
 9680              	.LBB1800:
 9681              	.LBB1789:
  92:delayline_reverse.h ****         
 9682              		.loc 18 92 57 view .LVU2701
 9683 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9684              		.loc 18 95 43 view .LVU2702
 9685 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9686              		.loc 18 90 9 view .LVU2703
 9687 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9688              		.loc 18 95 43 view .LVU2704
 9689 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9690              		.loc 18 101 36 view .LVU2705
 9691 039c DFF824A1 		ldr	r10, .L662+172
  95:delayline_reverse.h **** 
 9692              		.loc 18 95 43 view .LVU2706
 9693 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9694              		.loc 18 101 36 view .LVU2707
 9695 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9696              		.loc 18 101 45 view .LVU2708
 9697 03a6 07F1FF3A 		add	r10, r7, #-1
 9698              	.LBE1789:
 9699              	.LBE1800:
 9700              	.LBE1818:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 308


 384:Veno-Echo.cpp **** 
 9701              		.loc 19 384 50 view .LVU2709
 9702 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 387:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9703              		.loc 19 387 9 is_stmt 1 view .LVU2710
 9704              	.LVL641:
 9705              	.LBB1819:
 9706              	.LBI1780:
  92:Veno-Echo.cpp ****     {
 9707              		.loc 19 92 10 view .LVU2711
  92:Veno-Echo.cpp ****     {
 9708              		.loc 19 92 10 is_stmt 0 view .LVU2712
 9709              	.LBE1819:
 9710              	.LBE1944:
 9711              	.LBE1569:
  94:Veno-Echo.cpp ****     }
 9712              		.loc 19 94 9 is_stmt 1 view .LVU2713
 9713              	.LBB1956:
 9714              	.LBB1945:
 9715              	.LBB1820:
 9716              	.LBB1801:
 9717              	.LBI1781:
  88:delayline_reverse.h ****     {
 9718              		.loc 18 88 17 view .LVU2714
 9719              	.LBB1790:
  99:delayline_reverse.h ****  
 9720              		.loc 18 99 9 is_stmt 0 view .LVU2715
 9721 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9722              		.loc 18 95 54 view .LVU2716
 9723 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9724              		.loc 18 101 45 view .LVU2717
 9725 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9726              		.loc 18 95 54 view .LVU2718
 9727 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9728              		.loc 18 92 9 view .LVU2719
 9729 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9730              		.loc 18 101 9 view .LVU2720
 9731 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9732              		.loc 18 95 9 view .LVU2721
 9733 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9734              		.loc 18 101 9 view .LVU2722
 9735 03c4 40F2CF82 		bls	.L562
 103:delayline_reverse.h ****             {
 9736              		.loc 18 103 17 view .LVU2723
 9737 03c8 3A49     		ldr	r1, .L662+156
 103:delayline_reverse.h ****             {
 9738              		.loc 18 103 13 view .LVU2724
 9739 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9740              		.loc 18 103 17 view .LVU2725
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 309


 9741 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9742              		.loc 18 103 13 view .LVU2726
 9743 03ce 0028     		cmp	r0, #0
 9744 03d0 40F0CF82 		bne	.L653
 107:delayline_reverse.h ****                 {
 9745              		.loc 18 107 21 view .LVU2727
 9746 03d4 3848     		ldr	r0, .L662+160
 105:delayline_reverse.h ****                 
 9747              		.loc 18 105 17 view .LVU2728
 9748 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9749              		.loc 18 110 45 view .LVU2729
 9750 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9751              		.loc 18 107 17 view .LVU2730
 9752 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9753              		.loc 18 107 21 view .LVU2731
 9754 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9755              		.loc 18 105 17 view .LVU2732
 9756 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9757              		.loc 18 107 17 view .LVU2733
 9758 03e0 002E     		cmp	r6, #0
 9759 03e2 40F0EB83 		bne	.L564
 110:delayline_reverse.h ****                 }
 9760              		.loc 18 110 21 view .LVU2734
 9761 03e6 EB60     		str	r3, [r5, #12]
 9762              	.L565:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9763              		.loc 18 130 45 view .LVU2735
 9764 03e8 07EE90EA 		vmov	s15, lr	@ int
 9765              	.LVL642:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9766              		.loc 18 130 45 view .LVU2736
 9767 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9768 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9769 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9770              		.loc 18 130 37 view .LVU2737
 9771 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9772              		.loc 18 131 17 view .LVU2738
 9773 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9774 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9775 0404 40F39183 		ble	.L654
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9776              		.loc 18 133 21 view .LVU2739
 9777 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9778              		.loc 18 134 21 view .LVU2740
 9779 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9780              		.loc 18 133 21 view .LVU2741
 9781 040c 83ED007A 		vstr.32	s14, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 310


 135:delayline_reverse.h ****                 }
 9782              		.loc 18 135 21 view .LVU2742
 9783 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9784              		.loc 18 134 21 view .LVU2743
 9785 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9786              		.loc 18 135 21 view .LVU2744
 9787 0414 0370     		strb	r3, [r0]
 9788 0416 57E0     		b	.L663
 9789              	.L664:
 9790              		.align	2
 9791              	.L662:
 9792 0418 00000000 		.word	.LANCHOR108
 9793 041c 00000000 		.word	.LANCHOR0
 9794 0420 00000000 		.word	.LANCHOR109
 9795 0424 00000000 		.word	.LANCHOR1
 9796 0428 00000000 		.word	.LANCHOR47
 9797 042c 00000000 		.word	.LANCHOR65
 9798 0430 00000000 		.word	.LANCHOR38
 9799 0434 00000000 		.word	.LANCHOR114
 9800 0438 00000000 		.word	.LANCHOR96
 9801 043c 00000000 		.word	.LANCHOR102
 9802 0440 00000000 		.word	.LANCHOR97
 9803 0444 00000000 		.word	.LANCHOR103
 9804 0448 00000000 		.word	.LANCHOR95
 9805 044c 00000000 		.word	.LANCHOR105
 9806 0450 00000000 		.word	.LANCHOR94
 9807 0454 00000000 		.word	.LANCHOR104
 9808 0458 00000000 		.word	.LANCHOR106
 9809 045c 00000000 		.word	.LANCHOR2
 9810 0460 00000000 		.word	.LANCHOR107
 9811 0464 00000000 		.word	.LANCHOR117
 9812 0468 DB0FC93F 		.word	1070141403
 9813 046c 00000000 		.word	.LANCHOR118
 9814 0470 00000000 		.word	.LANCHOR121
 9815 0474 00000000 		.word	.LANCHOR62
 9816 0478 00000000 		.word	.LANCHOR122
 9817 047c 00000000 		.word	.LANCHOR119
 9818 0480 E4CB9640 		.word	1083624420
 9819 0484 00000000 		.word	.LANCHOR120
 9820 0488 0000803D 		.word	1031798784
 9821 048c 00000000 		.word	.LANCHOR123
 9822 0490 00000000 		.word	.LANCHOR124
 9823 0494 00000000 		.word	.LANCHOR125
 9824 0498 00000000 		.word	.LANCHOR126
 9825 049c 00000000 		.word	.LANCHOR127
 9826 04a0 00000000 		.word	.LANCHOR128
 9827 04a4 00000000 		.word	.LANCHOR3
 9828 04a8 BF270900 		.word	599999
 9829 04ac 851DD96F 		.word	1876499845
 9830 04b0 C1270900 		.word	600001
 9831 04b4 249F2400 		.word	2400036
 9832 04b8 1C9F2400 		.word	2400028
 9833 04bc 209F2400 		.word	2400032
 9834 04c0 C0270900 		.word	600000
 9835 04c4 189F2400 		.word	2400024
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 311


 9836              	.L663:
 9837              	.LVL643:
 9838              	.L568:
 135:delayline_reverse.h ****                 }
 9839              		.loc 18 135 21 view .LVU2745
 9840              	.LBE1790:
 9841              	.LBE1801:
 9842              	.LBE1820:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9843              		.loc 19 388 9 is_stmt 1 view .LVU2746
 9844              	.LBB1821:
 9845              	.LBB1822:
 9846              	.LBB1823:
  95:delayline_reverse.h **** 
 9847              		.loc 18 95 45 is_stmt 0 view .LVU2747
 9848 04c8 2169     		ldr	r1, [r4, #16]
 9849 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9850              		.loc 18 95 43 view .LVU2748
 9851 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9852              		.loc 18 90 15 view .LVU2749
 9853 04d0 6568     		ldr	r5, [r4, #4]
 9854 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9855              		.loc 18 95 43 view .LVU2750
 9856 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9857              		.loc 18 92 45 view .LVU2751
 9858 04d8 B14F     		ldr	r7, .L665
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9859              		.loc 18 90 9 view .LVU2752
 9860 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9861              		.loc 18 98 38 view .LVU2753
 9862 04de B14B     		ldr	r3, .L665+4
  95:delayline_reverse.h **** 
 9863              		.loc 18 95 43 view .LVU2754
 9864 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9865              		.loc 18 92 45 view .LVU2755
 9866 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9867              		.loc 18 101 45 view .LVU2756
 9868 04e4 01F1FF3C 		add	ip, r1, #-1
 9869              	.LBE1823:
 9870              	.LBE1822:
 9871              	.LBE1821:
 388:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9872              		.loc 19 388 26 view .LVU2757
 9873 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 9874              	.LVL644:
 9875              	.LBB1832:
 9876              	.LBI1821:
  92:Veno-Echo.cpp ****     {
 9877              		.loc 19 92 10 is_stmt 1 view .LVU2758
  92:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 312


 9878              		.loc 19 92 10 is_stmt 0 view .LVU2759
 9879              	.LBE1832:
 9880              	.LBE1945:
 9881              	.LBE1956:
  94:Veno-Echo.cpp ****     }
 9882              		.loc 19 94 9 is_stmt 1 view .LVU2760
 9883              	.LBB1957:
 9884              	.LBB1946:
 9885              	.LBB1833:
 9886              	.LBB1828:
 9887              	.LBI1822:
  88:delayline_reverse.h ****     {
 9888              		.loc 18 88 17 view .LVU2761
 9889              	.LBB1824:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9890              		.loc 18 98 38 is_stmt 0 view .LVU2762
 9891 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 9892 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9893              		.loc 18 99 38 view .LVU2763
 9894 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9895              		.loc 18 92 57 view .LVU2764
 9896 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9897              		.loc 18 95 54 view .LVU2765
 9898 04fa B2FBF1F0 		udiv	r0, r2, r1
 9899 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 9900              		.loc 18 101 36 view .LVU2766
 9901 0502 A949     		ldr	r1, .L665+8
  92:delayline_reverse.h ****         
 9902              		.loc 18 92 57 view .LVU2767
 9903 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 9904              		.loc 18 101 36 view .LVU2768
 9905 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9906              		.loc 18 92 57 view .LVU2769
 9907 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9908              		.loc 18 90 9 view .LVU2770
 9909 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9910              		.loc 18 101 36 view .LVU2771
 9911 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9912              		.loc 18 92 57 view .LVU2772
 9913 0514 A3FB0762 		umull	r6, r2, r3, r7
 9914 0518 DFF8C8E2 		ldr	lr, .L665+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9915              		.loc 18 98 50 view .LVU2773
 9916 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9917              		.loc 18 99 50 view .LVU2774
 9918 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 313


 9919              		.loc 18 101 45 view .LVU2775
 9920 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9921              		.loc 18 92 57 view .LVU2776
 9922 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9923              		.loc 18 95 9 view .LVU2777
 9924 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9925              		.loc 18 98 50 view .LVU2778
 9926 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 9927              		.loc 18 101 45 view .LVU2779
 9928 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9929              		.loc 18 99 50 view .LVU2780
 9930 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9931              		.loc 18 92 57 view .LVU2781
 9932 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9933              		.loc 18 98 50 view .LVU2782
 9934 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9935              		.loc 18 101 9 view .LVU2783
 9936 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9937              		.loc 18 99 50 view .LVU2784
 9938 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9939              		.loc 18 98 9 view .LVU2785
 9940 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 9941              		.loc 18 99 9 view .LVU2786
 9942 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9943              		.loc 18 101 9 view .LVU2787
 9944 0546 40F2EB81 		bls	.L572
 103:delayline_reverse.h ****             {
 9945              		.loc 18 103 17 view .LVU2788
 9946 054a 9849     		ldr	r1, .L665+12
 103:delayline_reverse.h ****             {
 9947              		.loc 18 103 13 view .LVU2789
 9948 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9949              		.loc 18 103 17 view .LVU2790
 9950 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 9951              		.loc 18 103 13 view .LVU2791
 9952 0550 0028     		cmp	r0, #0
 9953 0552 40F0EB81 		bne	.L655
 107:delayline_reverse.h ****                 {
 9954              		.loc 18 107 21 view .LVU2792
 9955 0556 9648     		ldr	r0, .L665+16
 105:delayline_reverse.h ****                 
 9956              		.loc 18 105 17 view .LVU2793
 9957 0558 0127     		movs	r7, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 314


 110:delayline_reverse.h ****                 }
 9958              		.loc 18 110 45 view .LVU2794
 9959 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 9960              		.loc 18 107 17 view .LVU2795
 9961 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9962              		.loc 18 107 21 view .LVU2796
 9963 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 9964              		.loc 18 105 17 view .LVU2797
 9965 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 9966              		.loc 18 107 17 view .LVU2798
 9967 0562 002D     		cmp	r5, #0
 9968 0564 40F02C83 		bne	.L574
 110:delayline_reverse.h ****                 }
 9969              		.loc 18 110 21 view .LVU2799
 9970 0568 E260     		str	r2, [r4, #12]
 9971              	.L575:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9972              		.loc 18 130 45 view .LVU2800
 9973 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9974              	.LVL645:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9975              		.loc 18 130 45 view .LVU2801
 9976 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9977              		.loc 18 130 37 view .LVU2802
 9978 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9979              		.loc 18 130 45 view .LVU2803
 9980 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9981              		.loc 18 130 37 view .LVU2804
 9982 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9983              		.loc 18 130 45 view .LVU2805
 9984 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9985              		.loc 18 130 37 view .LVU2806
 9986 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 9987              		.loc 18 131 17 view .LVU2807
 9988 0584 F4EEC77A 		vcmpe.f32	s15, s14
 9989 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9990 058c 40F31F83 		ble	.L657
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9991              		.loc 18 133 21 view .LVU2808
 9992 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9993              		.loc 18 134 21 view .LVU2809
 9994 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9995              		.loc 18 133 21 view .LVU2810
 9996 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 315


 9997              		.loc 18 135 21 view .LVU2811
 9998 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9999              		.loc 18 134 21 view .LVU2812
 10000 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10001              		.loc 18 135 21 view .LVU2813
 10002 059c 0270     		strb	r2, [r0]
 10003              	.LVL646:
 10004              	.L578:
 135:delayline_reverse.h ****                 }
 10005              		.loc 18 135 21 view .LVU2814
 10006              	.LBE1824:
 10007              	.LBE1828:
 10008              	.LBE1833:
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10009              		.loc 19 393 9 is_stmt 1 view .LVU2815
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10010              		.loc 19 393 56 is_stmt 0 view .LVU2816
 10011 059e 06AA     		add	r2, sp, #24
 10012 05a0 5946     		mov	r1, fp
 10013 05a2 8448     		ldr	r0, .L665+20
 10014 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10015              	.LVL647:
 394:Veno-Echo.cpp **** 
 10016              		.loc 19 394 56 view .LVU2817
 10017 05a8 18EE101A 		vmov	r1, s16	@ int
 10018 05ac 07AA     		add	r2, sp, #28
 10019 05ae 8248     		ldr	r0, .L665+24
 393:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10020              		.loc 19 393 56 view .LVU2818
 10021 05b0 F0EE408A 		vmov.f32	s17, s0
 10022              	.LVL648:
 394:Veno-Echo.cpp **** 
 10023              		.loc 19 394 9 is_stmt 1 view .LVU2819
 394:Veno-Echo.cpp **** 
 10024              		.loc 19 394 56 is_stmt 0 view .LVU2820
 10025 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10026              	.LVL649:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10027              		.loc 19 397 46 view .LVU2821
 10028 05b8 8048     		ldr	r0, .L665+28
 394:Veno-Echo.cpp **** 
 10029              		.loc 19 394 56 view .LVU2822
 10030 05ba B0EE408A 		vmov.f32	s16, s0
 10031              	.LVL650:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10032              		.loc 19 397 9 is_stmt 1 view .LVU2823
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10033              		.loc 19 397 46 is_stmt 0 view .LVU2824
 10034 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10035              	.LVL651:
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10036              		.loc 19 397 46 view .LVU2825
 10037 05c2 0346     		mov	r3, r0
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10038              		.loc 19 398 46 view .LVU2826
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 316


 10039 05c4 7E48     		ldr	r0, .L665+32
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10040              		.loc 19 397 45 view .LVU2827
 10041 05c6 1B68     		ldr	r3, [r3]	@ float
 397:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10042              		.loc 19 397 47 view .LVU2828
 10043 05c8 0893     		str	r3, [sp, #32]	@ float
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10044              		.loc 19 398 9 is_stmt 1 view .LVU2829
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10045              		.loc 19 398 46 is_stmt 0 view .LVU2830
 10046 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10047              	.LVL652:
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10048              		.loc 19 398 45 view .LVU2831
 10049 05ce 0368     		ldr	r3, [r0]	@ float
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 10050              		.loc 19 398 47 view .LVU2832
 10051 05d0 0993     		str	r3, [sp, #36]	@ float
 400:Veno-Echo.cpp **** 
 10052              		.loc 19 400 9 is_stmt 1 view .LVU2833
 400:Veno-Echo.cpp **** 
 10053              		.loc 19 400 28 is_stmt 0 view .LVU2834
 10054 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10055              	.LVL653:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10056              		.loc 19 403 9 is_stmt 1 view .LVU2835
 10057              	.LBB1834:
 10058              	.LBB1835:
2019:Veno-Echo.cpp ****         returnval = limit;
 10059              		.loc 19 2019 5 is_stmt 0 view .LVU2836
 10060 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 10061              	.LBE1835:
 10062              	.LBE1834:
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10063              		.loc 19 403 34 view .LVU2837
 10064 05da DDED087A 		vldr.32	s15, [sp, #32]
 10065              	.LVL654:
 10066              	.LBB1838:
 10067              	.LBI1834:
2016:Veno-Echo.cpp **** {
 10068              		.loc 19 2016 7 is_stmt 1 view .LVU2838
 10069              	.LBB1836:
2018:Veno-Echo.cpp ****     if (input > limit)
 10070              		.loc 19 2018 5 view .LVU2839
2019:Veno-Echo.cpp ****         returnval = limit;
 10071              		.loc 19 2019 5 view .LVU2840
 10072 05de F4EEC77A 		vcmpe.f32	s15, s14
 10073 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10074 05e6 00F39881 		bgt	.L619
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10075              		.loc 19 2021 10 view .LVU2841
 10076 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
2022:Veno-Echo.cpp ****     else
 10077              		.loc 19 2022 19 is_stmt 0 view .LVU2842
 10078 05ee F4EE477A 		vcmp.f32	s15, s14
 10079 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 317


 10080 05f6 48BF     		it	mi
 10081 05f8 F0EE477A 		vmovmi.f32	s15, s14
 10082              	.LVL655:
 10083              	.L582:
2026:Veno-Echo.cpp **** }
 10084              		.loc 19 2026 5 is_stmt 1 view .LVU2843
2026:Veno-Echo.cpp **** }
 10085              		.loc 19 2026 5 is_stmt 0 view .LVU2844
 10086              	.LBE1836:
 10087              	.LBE1838:
 10088              	.LBB1839:
 10089              	.LBB1840:
2019:Veno-Echo.cpp ****         returnval = limit;
 10090              		.loc 19 2019 5 view .LVU2845
 10091 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 10092              	.LBE1840:
 10093              	.LBE1839:
 404:Veno-Echo.cpp **** 
 10094              		.loc 19 404 34 view .LVU2846
 10095 0600 9DED090A 		vldr.32	s0, [sp, #36]
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10096              		.loc 19 403 23 view .LVU2847
 10097 0604 CDED087A 		vstr.32	s15, [sp, #32]
 404:Veno-Echo.cpp **** 
 10098              		.loc 19 404 9 is_stmt 1 view .LVU2848
 10099              	.LVL656:
 10100              	.LBB1844:
 10101              	.LBI1839:
2016:Veno-Echo.cpp **** {
 10102              		.loc 19 2016 7 view .LVU2849
 10103              	.LBB1841:
2018:Veno-Echo.cpp ****     if (input > limit)
 10104              		.loc 19 2018 5 view .LVU2850
2019:Veno-Echo.cpp ****         returnval = limit;
 10105              		.loc 19 2019 5 view .LVU2851
 10106 0608 B4EEC70A 		vcmpe.f32	s0, s14
 10107 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10108 0610 00F3EA80 		bgt	.L620
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10109              		.loc 19 2021 10 view .LVU2852
 10110 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 10111              	.LBE1841:
 10112              	.LBE1844:
 10113              	.LBB1845:
 406:Veno-Echo.cpp **** {
 10114              		.loc 19 406 1 is_stmt 0 view .LVU2853
 10115 0618 6A4B     		ldr	r3, .L665+36
 10116 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10117              	.LBE1845:
 10118              	.LBB1867:
 10119              	.LBB1842:
2022:Veno-Echo.cpp ****     else
 10120              		.loc 19 2022 19 view .LVU2854
 10121 061c B4EE470A 		vcmp.f32	s0, s14
 10122 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10123 0624 48BF     		it	mi
 10124 0626 B0EE470A 		vmovmi.f32	s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 318


 10125              	.LVL657:
2026:Veno-Echo.cpp **** }
 10126              		.loc 19 2026 5 is_stmt 1 view .LVU2855
2026:Veno-Echo.cpp **** }
 10127              		.loc 19 2026 5 is_stmt 0 view .LVU2856
 10128              	.LBE1842:
 10129              	.LBE1867:
 404:Veno-Echo.cpp **** 
 10130              		.loc 19 404 23 view .LVU2857
 10131 062a 8DED090A 		vstr.32	s0, [sp, #36]
 406:Veno-Echo.cpp **** {
 10132              		.loc 19 406 1 is_stmt 1 view .LVU2858
 10133              	.LBB1868:
 10134 062e 002B     		cmp	r3, #0
 10135 0630 00F0E380 		beq	.L658
 10136              	.L586:
 10137              	.LBE1868:
 450:Veno-Echo.cpp ****         static float RNegFB{};
 10138              		.loc 19 450 9 view .LVU2859
 451:Veno-Echo.cpp **** 
 10139              		.loc 19 451 9 view .LVU2860
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10140              		.loc 19 454 9 view .LVU2861
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10141              		.loc 19 454 22 is_stmt 0 view .LVU2862
 10142 0634 644B     		ldr	r3, .L665+40
 10143              	.LBB1869:
 10144              	.LBB1870:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 10145              		.loc 12 57 16 view .LVU2863
 10146 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 10147              	.LBE1870:
 10148              	.LBE1869:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10149              		.loc 19 454 22 view .LVU2864
 10150 063a D3ED004A 		vldr.32	s9, [r3]
 10151 063e 634B     		ldr	r3, .L665+44
 10152              	.LBB1882:
 10153              	.LBB1871:
 10154              		.loc 12 57 37 view .LVU2865
 10155 0640 98ED006A 		vldr.32	s12, [r8]
 10156              	.LBE1871:
 10157              	.LBE1882:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10158              		.loc 19 454 22 view .LVU2866
 10159 0644 93ED007A 		vldr.32	s14, [r3]
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10160              		.loc 19 457 22 view .LVU2867
 10161 0648 614B     		ldr	r3, .L665+48
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10162              		.loc 19 454 9 view .LVU2868
 10163 064a F4EEC74A 		vcmpe.f32	s9, s14
 10164              	.LBB1883:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 319


 10165              	.LBB1884:
 10166              		.loc 12 57 16 view .LVU2869
 10167 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 10168              		.loc 12 65 20 view .LVU2870
 10169 0652 99ED054A 		vldr.32	s8, [r9, #20]
 10170              		.loc 12 65 53 view .LVU2871
 10171 0656 99ED032A 		vldr.32	s4, [r9, #12]
 10172              	.LBE1884:
 10173              	.LBE1883:
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 10174              		.loc 19 454 9 view .LVU2872
 10175 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10176              	.LBB1893:
 10177              	.LBB1872:
 10178              		.loc 12 65 20 view .LVU2873
 10179 065e 98ED053A 		vldr.32	s6, [r8, #20]
 10180              		.loc 12 65 53 view .LVU2874
 10181 0662 98ED031A 		vldr.32	s2, [r8, #12]
 10182              	.LBE1872:
 10183              	.LBE1893:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10184              		.loc 19 473 13 view .LVU2875
 10185 0666 DFED5B1A 		vldr.32	s3, .L665+52
 10186 066a 58BF     		it	pl
 10187 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10188              		.loc 19 457 9 is_stmt 1 view .LVU2876
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10189              		.loc 19 457 22 is_stmt 0 view .LVU2877
 10190 0670 93ED007A 		vldr.32	s14, [r3]
 10191 0674 584B     		ldr	r3, .L665+56
 10192 0676 D3ED006A 		vldr.32	s13, [r3]
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10193              		.loc 19 460 15 view .LVU2878
 10194 067a 67EEA44A 		vmul.f32	s9, s15, s9
 10195              	.LBB1894:
 10196              	.LBB1885:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10197              		.loc 12 57 37 view .LVU2879
 10198 067e D9ED007A 		vldr.32	s15, [r9]
 10199              	.LBE1885:
 10200              	.LBE1894:
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 10201              		.loc 19 457 9 view .LVU2880
 10202 0682 B4EEE67A 		vcmpe.f32	s14, s13
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10203              		.loc 19 464 36 view .LVU2881
 10204 0686 554B     		ldr	r3, .L665+60
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 320


 10205              		.loc 19 457 9 view .LVU2882
 10206 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10207 068c 58BF     		it	pl
 10208 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 10209              		.loc 19 460 9 is_stmt 1 view .LVU2883
 10210              	.LVL658:
 461:Veno-Echo.cpp **** 
 10211              		.loc 19 461 9 view .LVU2884
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10212              		.loc 19 464 36 is_stmt 0 view .LVU2885
 10213 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 461:Veno-Echo.cpp **** 
 10214              		.loc 19 461 15 view .LVU2886
 10215 0696 20EE070A 		vmul.f32	s0, s0, s14
 10216              	.LVL659:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10217              		.loc 19 464 9 is_stmt 1 view .LVU2887
 10218              	.LBB1895:
 10219              	.LBB1873:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10220              		.loc 12 57 33 is_stmt 0 view .LVU2888
 10221 069a 36EEE25A 		vsub.f32	s10, s13, s5
 10222              	.LBE1873:
 10223              	.LBE1895:
 10224              	.LBB1896:
 10225              	.LBB1886:
 10226 069e 76EEE35A 		vsub.f32	s11, s13, s7
 10227              	.LBE1886:
 10228              	.LBE1896:
 10229              	.LBB1897:
 10230              	.LBB1874:
 10231              		.loc 12 65 45 view .LVU2889
 10232 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10233              		.loc 12 57 37 view .LVU2890
 10234 06a6 25EE065A 		vmul.f32	s10, s10, s12
 10235              	.LBE1874:
 10236              	.LBE1897:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10237              		.loc 19 464 36 view .LVU2891
 10238 06aa 93ED006A 		vldr.32	s12, [r3]
 10239              	.LBB1898:
 10240              	.LBB1887:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10241              		.loc 12 57 37 view .LVU2892
 10242 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 10243              		.loc 12 65 45 view .LVU2893
 10244 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 10245              	.LBE1887:
 10246              	.LBE1898:
 10247              	.LBB1899:
 10248              	.LBB1875:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10249              		.loc 12 57 28 view .LVU2894
 10250 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 10251              	.LBE1875:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 321


 10252              	.LBE1899:
 10253              	.LBB1900:
 10254              	.LBB1888:
 10255 06ba E0EE235A 		vfma.f32	s11, s0, s7
 10256              		.loc 12 65 53 view .LVU2895
 10257 06be 67EE827A 		vmul.f32	s15, s15, s4
 10258              	.LBE1888:
 10259              	.LBE1900:
 10260              	.LBB1901:
 10261              	.LBB1876:
 10262 06c2 27EE017A 		vmul.f32	s14, s14, s2
 10263              	.LBE1876:
 10264              	.LBE1901:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10265              		.loc 19 464 36 view .LVU2896
 10266 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 10267              	.LBB1902:
 10268              	.LBB1877:
  58:envFollow.h   **** 
 10269              		.loc 12 58 30 view .LVU2897
 10270 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10271              		.loc 12 57 13 view .LVU2898
 10272 06ce 88ED005A 		vstr.32	s10, [r8]
 10273              	.LBE1877:
 10274              	.LBE1902:
 10275              	.LBB1903:
 10276              	.LBB1889:
  58:envFollow.h   **** 
 10277              		.loc 12 58 30 view .LVU2899
 10278 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10279              		.loc 12 57 13 view .LVU2900
 10280 06d6 C9ED005A 		vstr.32	s11, [r9]
 10281              	.LBE1889:
 10282              	.LBE1903:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10283              		.loc 19 464 89 view .LVU2901
 10284 06da 66EE005A 		vmul.f32	s11, s12, s0
 10285              	.LBB1904:
 10286              	.LBB1878:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10287              		.loc 12 61 27 view .LVU2902
 10288 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 10289              		.loc 12 58 21 view .LVU2903
 10290 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 10291              	.LBE1878:
 10292              	.LBE1904:
 10293              	.LBB1905:
 10294              	.LBB1890:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10295              		.loc 12 61 27 view .LVU2904
 10296 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 10297              		.loc 12 58 21 view .LVU2905
 10298 06ea C9ED022A 		vstr.32	s5, [r9, #8]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 322


 10299              	.LBE1890:
 10300              	.LBE1905:
 465:Veno-Echo.cpp **** 
 10301              		.loc 19 465 89 view .LVU2906
 10302 06ee 26EE246A 		vmul.f32	s12, s12, s9
 10303              	.LBB1906:
 10304              	.LBB1879:
 10305              		.loc 12 65 40 view .LVU2907
 10306 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10307              		.loc 12 61 20 view .LVU2908
 10308 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 10309              	.LBE1879:
 10310              	.LBE1906:
 10311              	.LBB1907:
 10312              	.LBB1891:
 10313              		.loc 12 65 40 view .LVU2909
 10314 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10315              		.loc 12 61 20 view .LVU2910
 10316 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 10317              	.LBE1891:
 10318              	.LBE1907:
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 10319              		.loc 19 464 15 view .LVU2911
 10320 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 10321              	.LVL660:
 465:Veno-Echo.cpp **** 
 10322              		.loc 19 465 9 is_stmt 1 view .LVU2912
 465:Veno-Echo.cpp **** 
 10323              		.loc 19 465 15 is_stmt 0 view .LVU2913
 10324 0706 A6EE806A 		vfma.f32	s12, s13, s0
 10325              	.LVL661:
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 10326              		.loc 19 469 9 is_stmt 1 view .LVU2914
 10327              	.LBB1908:
 10328              	.LBI1869:
  54:envFollow.h   ****     {
 10329              		.loc 12 54 11 view .LVU2915
 10330              	.LBB1880:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10331              		.loc 12 57 9 view .LVU2916
  58:envFollow.h   **** 
 10332              		.loc 12 58 9 view .LVU2917
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10333              		.loc 12 61 9 view .LVU2918
 10334              		.loc 12 65 9 view .LVU2919
 10335              	.LBE1880:
 10336              	.LBE1908:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10337              		.loc 19 473 13 is_stmt 0 view .LVU2920
 10338 070a B4EEE17A 		vcmpe.f32	s14, s3
 10339              	.LBB1909:
 10340              	.LBB1881:
 10341              		.loc 12 65 17 view .LVU2921
 10342 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 323


  67:envFollow.h   ****         return avg_env;
 10343              		.loc 12 67 9 is_stmt 1 view .LVU2922
 10344              	.LVL662:
 10345              		.loc 12 67 9 is_stmt 0 view .LVU2923
 10346              	.LBE1881:
 10347              	.LBE1909:
 470:Veno-Echo.cpp **** 
 10348              		.loc 19 470 9 is_stmt 1 view .LVU2924
 10349              	.LBB1910:
 10350              	.LBI1883:
  54:envFollow.h   ****     {
 10351              		.loc 12 54 11 view .LVU2925
 10352              	.LBB1892:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 10353              		.loc 12 57 9 view .LVU2926
  58:envFollow.h   **** 
 10354              		.loc 12 58 9 view .LVU2927
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 10355              		.loc 12 61 9 view .LVU2928
  65:envFollow.h   **** 
 10356              		.loc 12 65 9 view .LVU2929
  65:envFollow.h   **** 
 10357              		.loc 12 65 17 is_stmt 0 view .LVU2930
 10358 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 10359              		.loc 12 67 9 is_stmt 1 view .LVU2931
 10360              	.LVL663:
 10361              		.loc 12 67 9 is_stmt 0 view .LVU2932
 10362              	.LBE1892:
 10363              	.LBE1910:
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10364              		.loc 19 473 13 is_stmt 1 view .LVU2933
 10365 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10366 071a 3DDB     		blt	.L648
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10367              		.loc 19 474 17 view .LVU2934
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10368              		.loc 19 474 32 is_stmt 0 view .LVU2935
 10369 071c 37EE617A 		vsub.f32	s14, s14, s3
 10370              	.LVL664:
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10371              		.loc 19 474 47 view .LVU2936
 10372 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 10373 0724 27EE267A 		vmul.f32	s14, s14, s13
 10374              	.L592:
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10375              		.loc 19 478 13 view .LVU2937
 10376 0728 DFED2A6A 		vldr.32	s13, .L665+52
 10377 072c 274B     		ldr	r3, .L665+44
 10378 072e F4EEE67A 		vcmpe.f32	s15, s13
 10379 0732 83ED007A 		vstr.32	s14, [r3]
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10380              		.loc 19 478 13 is_stmt 1 view .LVU2938
 10381 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10382 073a 2ADB     		blt	.L649
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10383              		.loc 19 479 17 view .LVU2939
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 324


 10384              		.loc 19 479 32 is_stmt 0 view .LVU2940
 10385 073c 77EEE67A 		vsub.f32	s15, s15, s13
 10386              	.LVL665:
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10387              		.loc 19 479 47 view .LVU2941
 10388 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 10389 0744 67EE877A 		vmul.f32	s15, s15, s14
 10390              	.L594:
 10391 0748 234B     		ldr	r3, .L665+56
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10392              		.loc 19 483 15 view .LVU2942
 10393 074a 38EEA50A 		vadd.f32	s0, s17, s11
 10394              	.LVL666:
 484:Veno-Echo.cpp ****  
 10395              		.loc 19 484 15 view .LVU2943
 10396 074e 38EE068A 		vadd.f32	s16, s16, s12
 10397              	.LVL667:
 484:Veno-Echo.cpp ****  
 10398              		.loc 19 484 15 view .LVU2944
 10399 0752 C3ED007A 		vstr.32	s15, [r3]
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10400              		.loc 19 483 9 is_stmt 1 view .LVU2945
 10401              	.LVL668:
 484:Veno-Echo.cpp ****  
 10402              		.loc 19 484 9 view .LVU2946
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 10403              		.loc 19 487 9 view .LVU2947
 10404              	.LBB1911:
 10405              	.LBI1911:
2016:Veno-Echo.cpp **** {
 10406              		.loc 19 2016 7 view .LVU2948
 10407              	.LBB1912:
2018:Veno-Echo.cpp ****     if (input > limit)
 10408              		.loc 19 2018 5 view .LVU2949
2019:Veno-Echo.cpp ****         returnval = limit;
 10409              		.loc 19 2019 5 view .LVU2950
 10410 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 10411 075a B4EEE70A 		vcmpe.f32	s0, s15
 10412 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10413 0762 13DC     		bgt	.L626
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10414              		.loc 19 2021 10 view .LVU2951
 10415 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
2022:Veno-Echo.cpp ****     else
 10416              		.loc 19 2022 19 is_stmt 0 view .LVU2952
 10417 0768 B4EE670A 		vcmp.f32	s0, s15
 10418 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10419 0770 48BF     		it	mi
 10420 0772 B0EE670A 		vmovmi.f32	s0, s15
 10421              	.LVL669:
 10422              	.L596:
2026:Veno-Echo.cpp **** }
 10423              		.loc 19 2026 5 is_stmt 1 view .LVU2953
2026:Veno-Echo.cpp **** }
 10424              		.loc 19 2026 5 is_stmt 0 view .LVU2954
 10425              	.LBE1912:
 10426              	.LBE1911:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 325


 488:Veno-Echo.cpp **** 
 10427              		.loc 19 488 9 is_stmt 1 view .LVU2955
 10428              	.LBB1914:
 10429              	.LBI1571:
2016:Veno-Echo.cpp **** {
 10430              		.loc 19 2016 7 view .LVU2956
 10431              	.LBB1573:
2018:Veno-Echo.cpp ****     if (input > limit)
 10432              		.loc 19 2018 5 view .LVU2957
2019:Veno-Echo.cpp ****         returnval = limit;
 10433              		.loc 19 2019 5 view .LVU2958
 10434 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10435 077a B4EEE78A 		vcmpe.f32	s16, s15
 10436 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10437 0782 7FF78FAC 		ble	.L659
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10438              		.loc 19 2020 19 is_stmt 0 view .LVU2959
 10439 0786 B0EE678A 		vmov.f32	s16, s15
 10440              	.LVL670:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10441              		.loc 19 2020 19 view .LVU2960
 10442 078a 94E4     		b	.L598
 10443              	.LVL671:
 10444              	.L626:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10445              		.loc 19 2020 19 view .LVU2961
 10446              	.LBE1573:
 10447              	.LBE1914:
 10448              	.LBB1915:
 10449              	.LBB1913:
 10450 078c B0EE670A 		vmov.f32	s0, s15
 10451              	.LVL672:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10452              		.loc 19 2020 19 view .LVU2962
 10453 0790 F1E7     		b	.L596
 10454              	.LVL673:
 10455              	.L649:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10456              		.loc 19 2020 19 view .LVU2963
 10457              	.LBE1913:
 10458              	.LBE1915:
 480:Veno-Echo.cpp **** 
 10459              		.loc 19 480 25 view .LVU2964
 10460 0792 DFED137A 		vldr.32	s15, .L665+64
 10461              	.LVL674:
 480:Veno-Echo.cpp **** 
 10462              		.loc 19 480 25 view .LVU2965
 10463 0796 D7E7     		b	.L594
 10464              	.LVL675:
 10465              	.L648:
 476:Veno-Echo.cpp ****             
 10466              		.loc 19 476 25 view .LVU2966
 10467 0798 9FED117A 		vldr.32	s14, .L665+64
 10468              	.LVL676:
 476:Veno-Echo.cpp ****             
 10469              		.loc 19 476 25 view .LVU2967
 10470 079c C4E7     		b	.L592
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 326


 10471              	.L666:
 10472 079e 00BF     		.align	2
 10473              	.L665:
 10474 07a0 C1270900 		.word	600001
 10475 07a4 BF270900 		.word	599999
 10476 07a8 189F2400 		.word	2400024
 10477 07ac 249F2400 		.word	2400036
 10478 07b0 1C9F2400 		.word	2400028
 10479 07b4 00000000 		.word	.LANCHOR106
 10480 07b8 00000000 		.word	.LANCHOR107
 10481 07bc 00000000 		.word	.LANCHOR0
 10482 07c0 00000000 		.word	.LANCHOR1
 10483 07c4 00000000 		.word	.LANCHOR65
 10484 07c8 00000000 		.word	.LANCHOR13
 10485 07cc 00000000 		.word	.LANCHOR129
 10486 07d0 00000000 		.word	.LANCHOR26
 10487 07d4 CDCCCC3E 		.word	1053609165
 10488 07d8 00000000 		.word	.LANCHOR130
 10489 07dc 00000000 		.word	.LANCHOR54
 10490 07e0 00000000 		.word	0
 10491 07e4 C0270900 		.word	600000
 10492              	.LVL677:
 10493              	.L620:
 10494              	.LBB1916:
 406:Veno-Echo.cpp **** {
 10495              		.loc 19 406 1 view .LVU2968
 10496 07e8 D64B     		ldr	r3, .L667
 10497              	.LBE1916:
 10498              	.LBB1917:
 10499              	.LBB1843:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10500              		.loc 19 2020 19 view .LVU2969
 10501 07ea B0EE470A 		vmov.f32	s0, s14
 10502              	.LVL678:
2026:Veno-Echo.cpp **** }
 10503              		.loc 19 2026 5 is_stmt 1 view .LVU2970
2026:Veno-Echo.cpp **** }
 10504              		.loc 19 2026 5 is_stmt 0 view .LVU2971
 10505              	.LBE1843:
 10506              	.LBE1917:
 10507              	.LBB1918:
 406:Veno-Echo.cpp **** {
 10508              		.loc 19 406 1 view .LVU2972
 10509 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10510              	.LBE1918:
 404:Veno-Echo.cpp **** 
 10511              		.loc 19 404 23 view .LVU2973
 10512 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 406:Veno-Echo.cpp **** {
 10513              		.loc 19 406 1 is_stmt 1 view .LVU2974
 10514              	.LBB1919:
 10515 07f4 002B     		cmp	r3, #0
 10516 07f6 7FF41DAF 		bne	.L586
 10517              	.L658:
 10518              	.LBB1846:
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10519              		.loc 19 412 9 view .LVU2975
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 327


 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10520              		.loc 19 412 22 is_stmt 0 view .LVU2976
 10521 07fa 9FEDD39A 		vldr.32	s18, .L667+4
 10522 07fe D34D     		ldr	r5, .L667+8
 10523 0800 27EE890A 		vmul.f32	s0, s15, s18
 413:Veno-Echo.cpp **** 
 10524              		.loc 19 413 22 view .LVU2977
 10525 0804 D24C     		ldr	r4, .L667+12
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10526              		.loc 19 412 22 view .LVU2978
 10527 0806 2846     		mov	r0, r5
 10528 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10529              	.LVL679:
 413:Veno-Echo.cpp **** 
 10530              		.loc 19 413 9 is_stmt 1 view .LVU2979
 413:Veno-Echo.cpp **** 
 10531              		.loc 19 413 22 is_stmt 0 view .LVU2980
 10532 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10533 0810 2046     		mov	r0, r4
 10534 0812 20EE090A 		vmul.f32	s0, s0, s18
 10535 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10536              	.LVL680:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10537              		.loc 19 416 9 is_stmt 1 view .LVU2981
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10538              		.loc 19 416 9 is_stmt 0 view .LVU2982
 10539              	.LBE1846:
 10540              	.LBE1919:
 10541              	.LBE1946:
 10542              	.LBE1957:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 328


  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10543              		.loc 9 52 26 is_stmt 1 view .LVU2983
 10544              	.LBB1958:
 10545              	.LBB1947:
 10546              	.LBB1920:
 10547              	.LBB1861:
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10548              		.loc 19 416 40 is_stmt 0 view .LVU2984
 10549 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 10550 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10551              		.loc 19 420 49 view .LVU2985
 10552 0822 0CAA     		add	r2, sp, #48
 417:Veno-Echo.cpp ****         
 10553              		.loc 19 417 40 view .LVU2986
 10554 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10555              		.loc 19 420 49 view .LVU2987
 10556 0828 08A9     		add	r1, sp, #32
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10557              		.loc 19 416 40 view .LVU2988
 10558 082a 27EE267A 		vmul.f32	s14, s14, s13
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10559              		.loc 19 420 49 view .LVU2989
 10560 082e C948     		ldr	r0, .L667+16
 417:Veno-Echo.cpp ****         
 10561              		.loc 19 417 40 view .LVU2990
 10562 0830 67EEA67A 		vmul.f32	s15, s15, s13
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10563              		.loc 19 416 47 view .LVU2991
 10564 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 417:Veno-Echo.cpp ****         
 10565              		.loc 19 417 9 is_stmt 1 view .LVU2992
 10566              	.LVL681:
 417:Veno-Echo.cpp ****         
 10567              		.loc 19 417 9 is_stmt 0 view .LVU2993
 10568              	.LBE1861:
 10569              	.LBE1920:
 10570              	.LBE1947:
 10571              	.LBE1958:
 10572              		.loc 9 52 26 is_stmt 1 view .LVU2994
 10573              	.LBB1959:
 10574              	.LBB1948:
 10575              	.LBB1921:
 10576              	.LBB1862:
 417:Veno-Echo.cpp ****         
 10577              		.loc 19 417 47 is_stmt 0 view .LVU2995
 10578 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10579              		.loc 19 420 9 is_stmt 1 view .LVU2996
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10580              		.loc 19 420 49 is_stmt 0 view .LVU2997
 10581 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10582              	.LVL682:
 421:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 329


 10583              		.loc 19 421 49 view .LVU2998
 10584 0840 0DAA     		add	r2, sp, #52
 10585 0842 09A9     		add	r1, sp, #36
 10586 0844 C448     		ldr	r0, .L667+20
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10587              		.loc 19 420 78 view .LVU2999
 10588 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 421:Veno-Echo.cpp **** 
 10589              		.loc 19 421 9 is_stmt 1 view .LVU3000
 421:Veno-Echo.cpp **** 
 10590              		.loc 19 421 49 is_stmt 0 view .LVU3001
 10591 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10592              	.LVL683:
 10593              	.LBB1847:
 10594              	.LBB1848:
2019:Veno-Echo.cpp ****         returnval = limit;
 10595              		.loc 19 2019 5 view .LVU3002
 10596 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10597              	.LBE1848:
 10598              	.LBE1847:
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10599              		.loc 19 424 36 view .LVU3003
 10600 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 421:Veno-Echo.cpp **** 
 10601              		.loc 19 421 49 view .LVU3004
 10602 0856 F0EE407A 		vmov.f32	s15, s0
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10603              		.loc 19 424 9 is_stmt 1 view .LVU3005
 10604              	.LVL684:
 10605              	.LBB1852:
 10606              	.LBI1847:
2016:Veno-Echo.cpp **** {
 10607              		.loc 19 2016 7 view .LVU3006
 10608              	.LBB1849:
2018:Veno-Echo.cpp ****     if (input > limit)
 10609              		.loc 19 2018 5 view .LVU3007
2019:Veno-Echo.cpp ****         returnval = limit;
 10610              		.loc 19 2019 5 view .LVU3008
 10611 085a B4EEE67A 		vcmpe.f32	s14, s13
 10612 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10613 0862 00F3A681 		bgt	.L621
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10614              		.loc 19 2021 10 view .LVU3009
 10615 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10616 086a B4EEE67A 		vcmpe.f32	s14, s13
 10617 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10618 0872 00F1B581 		bmi	.L622
 10619 0876 27EE090A 		vmul.f32	s0, s14, s18
 10620              	.LVL685:
 10621              	.L587:
2026:Veno-Echo.cpp **** }
 10622              		.loc 19 2026 5 view .LVU3010
2026:Veno-Echo.cpp **** }
 10623              		.loc 19 2026 5 is_stmt 0 view .LVU3011
 10624              	.LBE1849:
 10625              	.LBE1852:
 10626              	.LBB1853:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 330


 10627              	.LBB1854:
2019:Veno-Echo.cpp ****         returnval = limit;
 10628              		.loc 19 2019 5 view .LVU3012
 10629 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10630              	.LBE1854:
 10631              	.LBE1853:
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10632              		.loc 19 424 25 view .LVU3013
 10633 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 425:Veno-Echo.cpp **** 
 10634              		.loc 19 425 9 is_stmt 1 view .LVU3014
 10635              	.LVL686:
 10636              	.LBB1857:
 10637              	.LBI1853:
2016:Veno-Echo.cpp **** {
 10638              		.loc 19 2016 7 view .LVU3015
 10639              	.LBB1855:
2018:Veno-Echo.cpp ****     if (input > limit)
 10640              		.loc 19 2018 5 view .LVU3016
2019:Veno-Echo.cpp ****         returnval = limit;
 10641              		.loc 19 2019 5 view .LVU3017
 10642 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10643 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10644 088a 00F38F81 		bgt	.L623
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10645              		.loc 19 2021 10 view .LVU3018
 10646 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
2022:Veno-Echo.cpp ****     else
 10647              		.loc 19 2022 19 is_stmt 0 view .LVU3019
 10648 0892 F4EE477A 		vcmp.f32	s15, s14
 10649 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10650 089a 48BF     		it	mi
 10651 089c F0EE477A 		vmovmi.f32	s15, s14
 10652              	.LVL687:
 10653              	.L588:
2026:Veno-Echo.cpp **** }
 10654              		.loc 19 2026 5 is_stmt 1 view .LVU3020
2026:Veno-Echo.cpp **** }
 10655              		.loc 19 2026 5 is_stmt 0 view .LVU3021
 10656              	.LBE1855:
 10657              	.LBE1857:
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10658              		.loc 19 428 22 view .LVU3022
 10659 08a0 AE4D     		ldr	r5, .L667+24
 429:Veno-Echo.cpp **** 
 10660              		.loc 19 429 22 view .LVU3023
 10661 08a2 AF4C     		ldr	r4, .L667+28
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10662              		.loc 19 428 22 view .LVU3024
 10663 08a4 2846     		mov	r0, r5
 425:Veno-Echo.cpp **** 
 10664              		.loc 19 425 25 view .LVU3025
 10665 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10666              		.loc 19 428 9 is_stmt 1 view .LVU3026
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10667              		.loc 19 428 22 is_stmt 0 view .LVU3027
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 331


 10668 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10669              	.LVL688:
 429:Veno-Echo.cpp **** 
 10670              		.loc 19 429 9 is_stmt 1 view .LVU3028
 429:Veno-Echo.cpp **** 
 10671              		.loc 19 429 22 is_stmt 0 view .LVU3029
 10672 08ae DFEDA67A 		vldr.32	s15, .L667+4
 10673 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10674 08b6 2046     		mov	r0, r4
 10675 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10676 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10677              	.LVL689:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10678              		.loc 19 431 9 is_stmt 1 view .LVU3030
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10679              		.loc 19 431 9 is_stmt 0 view .LVU3031
 10680              	.LBE1862:
 10681              	.LBE1921:
 10682              	.LBE1948:
 10683              	.LBE1959:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10684              		.loc 9 56 27 is_stmt 1 view .LVU3032
 10685              	.LBB1960:
 10686              	.LBB1949:
 10687              	.LBB1922:
 10688              	.LBB1863:
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10689              		.loc 19 431 41 is_stmt 0 view .LVU3033
 10690 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10691 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10692              		.loc 19 434 45 view .LVU3034
 10693 08c8 0EA9     		add	r1, sp, #56
 432:Veno-Echo.cpp **** 
 10694              		.loc 19 432 41 view .LVU3035
 10695 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10696              		.loc 19 434 45 view .LVU3036
 10697 08ce 10AA     		add	r2, sp, #64
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10698              		.loc 19 431 41 view .LVU3037
 10699 08d0 27EE267A 		vmul.f32	s14, s14, s13
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10700              		.loc 19 434 45 view .LVU3038
 10701 08d4 A348     		ldr	r0, .L667+32
 432:Veno-Echo.cpp **** 
 10702              		.loc 19 432 41 view .LVU3039
 10703 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10704              		.loc 19 431 48 view .LVU3040
 10705 08da 8DED107A 		vstr.32	s14, [sp, #64]
 432:Veno-Echo.cpp **** 
 10706              		.loc 19 432 9 is_stmt 1 view .LVU3041
 10707              	.LVL690:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 332


 432:Veno-Echo.cpp **** 
 10708              		.loc 19 432 9 is_stmt 0 view .LVU3042
 10709              	.LBE1863:
 10710              	.LBE1922:
 10711              	.LBE1949:
 10712              	.LBE1960:
 10713              		.loc 9 56 27 is_stmt 1 view .LVU3043
 10714              	.LBB1961:
 10715              	.LBB1950:
 10716              	.LBB1923:
 10717              	.LBB1864:
 432:Veno-Echo.cpp **** 
 10718              		.loc 19 432 48 is_stmt 0 view .LVU3044
 10719 08de CDED117A 		vstr.32	s15, [sp, #68]
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10720              		.loc 19 434 9 is_stmt 1 view .LVU3045
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10721              		.loc 19 434 45 is_stmt 0 view .LVU3046
 10722 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10723              	.LVL691:
 435:Veno-Echo.cpp **** 
 10724              		.loc 19 435 45 view .LVU3047
 10725 08e6 0FA9     		add	r1, sp, #60
 10726 08e8 11AA     		add	r2, sp, #68
 10727 08ea 9F48     		ldr	r0, .L667+36
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10728              		.loc 19 434 25 view .LVU3048
 10729 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 435:Veno-Echo.cpp **** 
 10730              		.loc 19 435 9 is_stmt 1 view .LVU3049
 435:Veno-Echo.cpp **** 
 10731              		.loc 19 435 45 is_stmt 0 view .LVU3050
 10732 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10733              	.LVL692:
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10734              		.loc 19 439 44 view .LVU3051
 10735 08f4 0EAA     		add	r2, sp, #56
 10736 08f6 08A9     		add	r1, sp, #32
 10737 08f8 9C48     		ldr	r0, .L667+40
 435:Veno-Echo.cpp **** 
 10738              		.loc 19 435 25 view .LVU3052
 10739 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10740              		.loc 19 439 9 is_stmt 1 view .LVU3053
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10741              		.loc 19 439 44 is_stmt 0 view .LVU3054
 10742 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10743              	.LVL693:
 440:Veno-Echo.cpp **** 
 10744              		.loc 19 440 44 view .LVU3055
 10745 0902 0FAA     		add	r2, sp, #60
 10746 0904 09A9     		add	r1, sp, #36
 10747 0906 9A48     		ldr	r0, .L667+44
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10748              		.loc 19 439 23 view .LVU3056
 10749 0908 8DED080A 		vstr.32	s0, [sp, #32]
 440:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 333


 10750              		.loc 19 440 9 is_stmt 1 view .LVU3057
 440:Veno-Echo.cpp **** 
 10751              		.loc 19 440 44 is_stmt 0 view .LVU3058
 10752 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10753              	.LVL694:
 10754 0910 DDED087A 		vldr.32	s15, [sp, #32]
 440:Veno-Echo.cpp **** 
 10755              		.loc 19 440 23 view .LVU3059
 10756 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10757              	.LBE1864:
 10758 0918 8CE6     		b	.L586
 10759              	.LVL695:
 10760              	.L619:
 440:Veno-Echo.cpp **** 
 10761              		.loc 19 440 23 view .LVU3060
 10762              	.LBE1923:
 10763              	.LBB1924:
 10764              	.LBB1837:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10765              		.loc 19 2020 19 view .LVU3061
 10766 091a F0EE477A 		vmov.f32	s15, s14
 10767              	.LVL696:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10768              		.loc 19 2020 19 view .LVU3062
 10769 091e 6DE6     		b	.L582
 10770              	.LVL697:
 10771              	.L572:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10772              		.loc 19 2020 19 view .LVU3063
 10773              	.LBE1837:
 10774              	.LBE1924:
 10775              	.LBB1925:
 10776              	.LBB1829:
 10777              	.LBB1825:
 126:delayline_reverse.h ****         {
 10778              		.loc 18 126 12 view .LVU3064
 10779 0920 944B     		ldr	r3, .L667+48
 126:delayline_reverse.h ****         {
 10780              		.loc 18 126 9 view .LVU3065
 10781 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10782              		.loc 18 126 12 view .LVU3066
 10783 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10784              		.loc 18 126 9 view .LVU3067
 10785 0926 002A     		cmp	r2, #0
 10786 0928 3FF439AE 		beq	.L578
 10787              	.L655:
 126:delayline_reverse.h ****         {
 10788              		.loc 18 126 9 view .LVU3068
 10789 092c 924A     		ldr	r2, .L667+52
 10790 092e A018     		adds	r0, r4, r2
 10791 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10792              		.loc 18 128 13 view .LVU3069
 10793 0932 002A     		cmp	r2, #0
 10794 0934 3FF419AE 		beq	.L575
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 334


 10795              	.L576:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10796              		.loc 18 141 45 view .LVU3070
 10797 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10798              	.LVL698:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10799              		.loc 18 141 45 view .LVU3071
 10800 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10801              		.loc 18 141 37 view .LVU3072
 10802 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10803              		.loc 18 142 17 view .LVU3073
 10804 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10805              		.loc 18 141 45 view .LVU3074
 10806 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10807              		.loc 18 141 37 view .LVU3075
 10808 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10809              		.loc 18 141 45 view .LVU3076
 10810 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10811              		.loc 18 141 37 view .LVU3077
 10812 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10813              		.loc 18 142 17 view .LVU3078
 10814 0954 F5EEC07A 		vcmpe.f32	s15, #0
 10815 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10816 095c 00F13A81 		bmi	.L581
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10817              		.loc 18 141 17 view .LVU3079
 10818 0960 C1ED007A 		vstr.32	s15, [r1]
 10819 0964 1BE6     		b	.L578
 10820              	.LVL699:
 10821              	.L562:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10822              		.loc 18 141 17 view .LVU3080
 10823              	.LBE1825:
 10824              	.LBE1829:
 10825              	.LBE1925:
 10826              	.LBB1926:
 10827              	.LBB1802:
 10828              	.LBB1791:
 126:delayline_reverse.h ****         {
 10829              		.loc 18 126 12 view .LVU3081
 10830 0966 834A     		ldr	r2, .L667+48
 126:delayline_reverse.h ****         {
 10831              		.loc 18 126 9 view .LVU3082
 10832 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10833              		.loc 18 126 12 view .LVU3083
 10834 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 10835              		.loc 18 126 9 view .LVU3084
 10836 096c 002B     		cmp	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 335


 10837 096e 3FF4ABAD 		beq	.L568
 10838              	.L653:
 126:delayline_reverse.h ****         {
 10839              		.loc 18 126 9 view .LVU3085
 10840 0972 814B     		ldr	r3, .L667+52
 10841 0974 E818     		adds	r0, r5, r3
 10842 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10843              		.loc 18 128 13 view .LVU3086
 10844 0978 002B     		cmp	r3, #0
 10845 097a 3FF435AD 		beq	.L565
 10846              	.L566:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10847              		.loc 18 141 45 view .LVU3087
 10848 097e 07EE90EA 		vmov	s15, lr	@ int
 10849              	.LVL700:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10850              		.loc 18 141 45 view .LVU3088
 10851 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10852              		.loc 18 142 17 view .LVU3089
 10853 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10854              		.loc 18 141 45 view .LVU3090
 10855 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 10856 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10857              		.loc 18 141 37 view .LVU3091
 10858 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 10859              		.loc 18 142 17 view .LVU3092
 10860 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 10861 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10862 099c 40F1C580 		bpl	.L654
 145:delayline_reverse.h ****                     playinghead_ = false;
 10863              		.loc 18 145 21 view .LVU3093
 10864 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10865              		.loc 18 144 21 view .LVU3094
 10866 09a2 049D     		ldr	r5, [sp, #16]
 10867              	.LVL701:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10868              		.loc 18 144 21 view .LVU3095
 10869 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10870              		.loc 18 145 21 view .LVU3096
 10871 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 10872              		.loc 18 146 21 view .LVU3097
 10873 09a8 0170     		strb	r1, [r0]
 10874 09aa 8DE5     		b	.L568
 10875              	.LVL702:
 10876              	.L613:
 146:delayline_reverse.h ****                 }
 10877              		.loc 18 146 21 view .LVU3098
 10878              	.LBE1791:
 10879              	.LBE1802:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 336


 10880              	.LBE1926:
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 10881              		.loc 19 569 13 is_stmt 1 view .LVU3099
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 10882              		.loc 19 569 20 is_stmt 0 view .LVU3100
 10883 09ac 009B     		ldr	r3, [sp]
 10884 09ae C3ED007A 		vstr.32	s15, [r3]
 570:Veno-Echo.cpp ****         }
 10885              		.loc 19 570 13 is_stmt 1 view .LVU3101
 570:Veno-Echo.cpp ****         }
 10886              		.loc 19 570 22 is_stmt 0 view .LVU3102
 10887 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 10888 09b6 FFF7EDBB 		b	.L614
 10889              	.LVL703:
 10890              	.L650:
 550:Veno-Echo.cpp ****         {
 10891              		.loc 19 550 14 is_stmt 1 view .LVU3103
 10892 09ba 40F3AC80 		ble	.L651
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10893              		.loc 19 552 13 view .LVU3104
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10894              		.loc 19 552 24 is_stmt 0 view .LVU3105
 10895 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10896              		.loc 19 552 18 view .LVU3106
 10897 09c2 DBED005A 		vldr.32	s11, [fp]
 553:Veno-Echo.cpp ****         }
 10898              		.loc 19 553 18 view .LVU3107
 10899 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10900              		.loc 19 552 24 view .LVU3108
 10901 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10902              		.loc 19 552 33 view .LVU3109
 10903 09ce 37EE077A 		vadd.f32	s14, s14, s14
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10904              		.loc 19 552 18 view .LVU3110
 10905 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 10906              	.LVL704:
 553:Veno-Echo.cpp ****         }
 10907              		.loc 19 553 13 is_stmt 1 view .LVU3111
 553:Veno-Echo.cpp ****         }
 10908              		.loc 19 553 18 is_stmt 0 view .LVU3112
 10909 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 10910              	.LVL705:
 553:Veno-Echo.cpp ****         }
 10911              		.loc 19 553 18 view .LVU3113
 10912 09da FFF7D2BB 		b	.L610
 10913              	.LVL706:
 10914              	.L629:
 10915              	.LBB1927:
 504:Veno-Echo.cpp **** {
 10916              		.loc 19 504 1 view .LVU3114
 10917 09de 594B     		ldr	r3, .L667
 10918              	.LBE1927:
 10919              	.LBB1928:
 10920              	.LBB1583:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 337


2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10921              		.loc 19 2020 19 view .LVU3115
 10922 09e0 B0EE470A 		vmov.f32	s0, s14
 10923              	.LVL707:
2026:Veno-Echo.cpp **** }
 10924              		.loc 19 2026 5 is_stmt 1 view .LVU3116
2026:Veno-Echo.cpp **** }
 10925              		.loc 19 2026 5 is_stmt 0 view .LVU3117
 10926              	.LBE1583:
 10927              	.LBE1928:
 10928              	.LBB1929:
 504:Veno-Echo.cpp **** {
 10929              		.loc 19 504 1 view .LVU3118
 10930 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10931              	.LBE1929:
 502:Veno-Echo.cpp **** 
 10932              		.loc 19 502 27 view .LVU3119
 10933 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 504:Veno-Echo.cpp **** {
 10934              		.loc 19 504 1 is_stmt 1 view .LVU3120
 10935              	.LBB1930:
 10936 09ea 002B     		cmp	r3, #0
 10937 09ec 3FF4B0AB 		beq	.L604
 10938              	.L656:
 10939              	.LBB1586:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10940              		.loc 19 510 9 view .LVU3121
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10941              		.loc 19 510 27 is_stmt 0 view .LVU3122
 10942 09f0 9FED558A 		vldr.32	s16, .L667+4
 10943              	.LVL708:
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10944              		.loc 19 510 27 view .LVU3123
 10945 09f4 614D     		ldr	r5, .L667+56
 10946 09f6 27EE880A 		vmul.f32	s0, s15, s16
 511:Veno-Echo.cpp **** 
 10947              		.loc 19 511 27 view .LVU3124
 10948 09fa 614C     		ldr	r4, .L667+60
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10949              		.loc 19 510 27 view .LVU3125
 10950 09fc 2846     		mov	r0, r5
 10951 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10952              	.LVL709:
 511:Veno-Echo.cpp **** 
 10953              		.loc 19 511 9 is_stmt 1 view .LVU3126
 511:Veno-Echo.cpp **** 
 10954              		.loc 19 511 27 is_stmt 0 view .LVU3127
 10955 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 10956 0a06 2046     		mov	r0, r4
 10957 0a08 20EE080A 		vmul.f32	s0, s0, s16
 10958 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10959              	.LVL710:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10960              		.loc 19 514 9 is_stmt 1 view .LVU3128
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10961              		.loc 19 514 9 is_stmt 0 view .LVU3129
 10962              	.LBE1586:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 338


 10963              	.LBE1930:
 10964              	.LBE1950:
 10965              	.LBE1961:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10966              		.loc 9 52 26 is_stmt 1 view .LVU3130
 10967              	.LBB1962:
 10968              	.LBB1951:
 10969              	.LBB1931:
 10970              	.LBB1601:
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10971              		.loc 19 514 50 is_stmt 0 view .LVU3131
 10972 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 10973 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10974              		.loc 19 518 59 view .LVU3132
 10975 0a18 0AA9     		add	r1, sp, #40
 515:Veno-Echo.cpp ****         
 10976              		.loc 19 515 50 view .LVU3133
 10977 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10978              		.loc 19 518 59 view .LVU3134
 10979 0a1e 0CAA     		add	r2, sp, #48
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10980              		.loc 19 514 50 view .LVU3135
 10981 0a20 27EE267A 		vmul.f32	s14, s14, s13
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10982              		.loc 19 518 59 view .LVU3136
 10983 0a24 5748     		ldr	r0, .L667+64
 515:Veno-Echo.cpp ****         
 10984              		.loc 19 515 50 view .LVU3137
 10985 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10986              		.loc 19 514 57 view .LVU3138
 10987 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 515:Veno-Echo.cpp ****         
 10988              		.loc 19 515 9 is_stmt 1 view .LVU3139
 10989              	.LVL711:
 515:Veno-Echo.cpp ****         
 10990              		.loc 19 515 9 is_stmt 0 view .LVU3140
 10991              	.LBE1601:
 10992              	.LBE1931:
 10993              	.LBE1951:
 10994              	.LBE1962:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10995              		.loc 9 52 26 is_stmt 1 view .LVU3141
 10996              	.LBB1963:
 10997              	.LBB1952:
 10998              	.LBB1932:
 10999              	.LBB1602:
 515:Veno-Echo.cpp ****         
 11000              		.loc 19 515 57 is_stmt 0 view .LVU3142
 11001 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11002              		.loc 19 518 9 is_stmt 1 view .LVU3143
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11003              		.loc 19 518 59 is_stmt 0 view .LVU3144
 11004 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 339


 11005              	.LVL712:
 519:Veno-Echo.cpp **** 
 11006              		.loc 19 519 59 view .LVU3145
 11007 0a36 0BA9     		add	r1, sp, #44
 11008 0a38 0DAA     		add	r2, sp, #52
 11009 0a3a 5348     		ldr	r0, .L667+68
 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11010              		.loc 19 518 97 view .LVU3146
 11011 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 519:Veno-Echo.cpp **** 
 11012              		.loc 19 519 9 is_stmt 1 view .LVU3147
 519:Veno-Echo.cpp **** 
 11013              		.loc 19 519 59 is_stmt 0 view .LVU3148
 11014 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11015              	.LVL713:
 11016              	.LBB1587:
 11017              	.LBB1588:
2019:Veno-Echo.cpp ****         returnval = limit;
 11018              		.loc 19 2019 5 view .LVU3149
 11019 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 11020              	.LBE1588:
 11021              	.LBE1587:
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11022              		.loc 19 522 41 view .LVU3150
 11023 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 519:Veno-Echo.cpp **** 
 11024              		.loc 19 519 59 view .LVU3151
 11025 0a4c F0EE407A 		vmov.f32	s15, s0
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11026              		.loc 19 522 9 is_stmt 1 view .LVU3152
 11027              	.LVL714:
 11028              	.LBB1592:
 11029              	.LBI1587:
2016:Veno-Echo.cpp **** {
 11030              		.loc 19 2016 7 view .LVU3153
 11031              	.LBB1589:
2018:Veno-Echo.cpp ****     if (input > limit)
 11032              		.loc 19 2018 5 view .LVU3154
2019:Veno-Echo.cpp ****         returnval = limit;
 11033              		.loc 19 2019 5 view .LVU3155
 11034 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 11035 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11036 0a58 6EDC     		bgt	.L630
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11037              		.loc 19 2021 10 view .LVU3156
 11038 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 11039 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 11040 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11041 0a66 00F1C080 		bmi	.L631
 11042 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 11043              	.LVL715:
 11044              	.L605:
2026:Veno-Echo.cpp **** }
 11045              		.loc 19 2026 5 view .LVU3157
2026:Veno-Echo.cpp **** }
 11046              		.loc 19 2026 5 is_stmt 0 view .LVU3158
 11047              	.LBE1589:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 340


 11048              	.LBE1592:
 11049              	.LBB1593:
 11050              	.LBB1594:
2019:Veno-Echo.cpp ****         returnval = limit;
 11051              		.loc 19 2019 5 view .LVU3159
 11052 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 11053              	.LBE1594:
 11054              	.LBE1593:
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11055              		.loc 19 522 30 view .LVU3160
 11056 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 523:Veno-Echo.cpp **** 
 11057              		.loc 19 523 9 is_stmt 1 view .LVU3161
 11058              	.LVL716:
 11059              	.LBB1597:
 11060              	.LBI1593:
2016:Veno-Echo.cpp **** {
 11061              		.loc 19 2016 7 view .LVU3162
 11062              	.LBB1595:
2018:Veno-Echo.cpp ****     if (input > limit)
 11063              		.loc 19 2018 5 view .LVU3163
2019:Veno-Echo.cpp ****         returnval = limit;
 11064              		.loc 19 2019 5 view .LVU3164
 11065 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 11066 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11067 0a7e 58DC     		bgt	.L632
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11068              		.loc 19 2021 10 view .LVU3165
 11069 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
2022:Veno-Echo.cpp ****     else
 11070              		.loc 19 2022 19 is_stmt 0 view .LVU3166
 11071 0a84 F4EE477A 		vcmp.f32	s15, s14
 11072 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11073 0a8c 48BF     		it	mi
 11074 0a8e F0EE477A 		vmovmi.f32	s15, s14
 11075              	.LVL717:
 11076              	.L606:
2026:Veno-Echo.cpp **** }
 11077              		.loc 19 2026 5 is_stmt 1 view .LVU3167
2026:Veno-Echo.cpp **** }
 11078              		.loc 19 2026 5 is_stmt 0 view .LVU3168
 11079              	.LBE1595:
 11080              	.LBE1597:
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11081              		.loc 19 526 27 view .LVU3169
 11082 0a92 3E4D     		ldr	r5, .L667+72
 527:Veno-Echo.cpp **** 
 11083              		.loc 19 527 27 view .LVU3170
 11084 0a94 3E4C     		ldr	r4, .L667+76
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11085              		.loc 19 526 27 view .LVU3171
 11086 0a96 2846     		mov	r0, r5
 523:Veno-Echo.cpp **** 
 11087              		.loc 19 523 30 view .LVU3172
 11088 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11089              		.loc 19 526 9 is_stmt 1 view .LVU3173
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 341


 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11090              		.loc 19 526 27 is_stmt 0 view .LVU3174
 11091 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11092              	.LVL718:
 527:Veno-Echo.cpp **** 
 11093              		.loc 19 527 9 is_stmt 1 view .LVU3175
 527:Veno-Echo.cpp **** 
 11094              		.loc 19 527 27 is_stmt 0 view .LVU3176
 11095 0aa0 DFED297A 		vldr.32	s15, .L667+4
 11096 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 11097 0aa8 2046     		mov	r0, r4
 11098 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 11099 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11100              	.LVL719:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11101              		.loc 19 529 9 is_stmt 1 view .LVU3177
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11102              		.loc 19 529 9 is_stmt 0 view .LVU3178
 11103              	.LBE1602:
 11104              	.LBE1932:
 11105              	.LBE1952:
 11106              	.LBE1963:
 11107              		.loc 9 56 27 is_stmt 1 view .LVU3179
 11108              	.LBB1964:
 11109              	.LBB1953:
 11110              	.LBB1933:
 11111              	.LBB1603:
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11112              		.loc 19 529 51 is_stmt 0 view .LVU3180
 11113 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 11114 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11115              		.loc 19 532 55 view .LVU3181
 11116 0aba 0EA9     		add	r1, sp, #56
 530:Veno-Echo.cpp **** 
 11117              		.loc 19 530 51 view .LVU3182
 11118 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11119              		.loc 19 532 55 view .LVU3183
 11120 0ac0 10AA     		add	r2, sp, #64
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11121              		.loc 19 529 51 view .LVU3184
 11122 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11123              		.loc 19 532 55 view .LVU3185
 11124 0ac6 3348     		ldr	r0, .L667+80
 530:Veno-Echo.cpp **** 
 11125              		.loc 19 530 51 view .LVU3186
 11126 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11127              		.loc 19 529 58 view .LVU3187
 11128 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 530:Veno-Echo.cpp **** 
 11129              		.loc 19 530 9 is_stmt 1 view .LVU3188
 11130              	.LVL720:
 530:Veno-Echo.cpp **** 
 11131              		.loc 19 530 9 is_stmt 0 view .LVU3189
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 342


 11132              	.LBE1603:
 11133              	.LBE1933:
 11134              	.LBE1953:
 11135              	.LBE1964:
 11136              		.loc 9 56 27 is_stmt 1 view .LVU3190
 11137              	.LBB1965:
 11138              	.LBB1954:
 11139              	.LBB1934:
 11140              	.LBB1604:
 530:Veno-Echo.cpp **** 
 11141              		.loc 19 530 58 is_stmt 0 view .LVU3191
 11142 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11143              		.loc 19 532 9 is_stmt 1 view .LVU3192
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11144              		.loc 19 532 55 is_stmt 0 view .LVU3193
 11145 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11146              	.LVL721:
 533:Veno-Echo.cpp **** 
 11147              		.loc 19 533 55 view .LVU3194
 11148 0ad8 0FA9     		add	r1, sp, #60
 11149 0ada 11AA     		add	r2, sp, #68
 11150 0adc 2E48     		ldr	r0, .L667+84
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11151              		.loc 19 532 30 view .LVU3195
 11152 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 533:Veno-Echo.cpp **** 
 11153              		.loc 19 533 9 is_stmt 1 view .LVU3196
 533:Veno-Echo.cpp **** 
 11154              		.loc 19 533 55 is_stmt 0 view .LVU3197
 11155 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11156              	.LVL722:
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11157              		.loc 19 536 53 view .LVU3198
 11158 0ae6 0EAA     		add	r2, sp, #56
 11159 0ae8 0AA9     		add	r1, sp, #40
 11160 0aea 2C48     		ldr	r0, .L667+88
 533:Veno-Echo.cpp **** 
 11161              		.loc 19 533 30 view .LVU3199
 11162 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11163              		.loc 19 536 9 is_stmt 1 view .LVU3200
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11164              		.loc 19 536 53 is_stmt 0 view .LVU3201
 11165 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11166              	.LVL723:
 537:Veno-Echo.cpp **** 
 11167              		.loc 19 537 53 view .LVU3202
 11168 0af4 0FAA     		add	r2, sp, #60
 11169 0af6 0BA9     		add	r1, sp, #44
 11170 0af8 2948     		ldr	r0, .L667+92
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11171              		.loc 19 536 27 view .LVU3203
 11172 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 537:Veno-Echo.cpp **** 
 11173              		.loc 19 537 9 is_stmt 1 view .LVU3204
 537:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 343


 11174              		.loc 19 537 53 is_stmt 0 view .LVU3205
 11175 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11176              	.LVL724:
 11177 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 537:Veno-Echo.cpp **** 
 11178              		.loc 19 537 27 view .LVU3206
 11179 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 11180              	.LBE1604:
 11181 0b0a FFF721BB 		b	.L604
 11182              	.LVL725:
 11183              	.L628:
 537:Veno-Echo.cpp **** 
 11184              		.loc 19 537 27 view .LVU3207
 11185              	.LBE1934:
 11186              	.LBB1935:
 11187              	.LBB1577:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11188              		.loc 19 2020 19 view .LVU3208
 11189 0b0e F0EE477A 		vmov.f32	s15, s14
 11190              	.LVL726:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11191              		.loc 19 2020 19 view .LVU3209
 11192 0b12 FFF703BB 		b	.L600
 11193              	.LVL727:
 11194              	.L651:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11195              		.loc 19 2020 19 view .LVU3210
 11196              	.LBE1577:
 11197              	.LBE1935:
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11198              		.loc 19 557 13 is_stmt 1 view .LVU3211
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11199              		.loc 19 557 18 is_stmt 0 view .LVU3212
 11200 0b16 DBED006A 		vldr.32	s13, [fp]
 558:Veno-Echo.cpp ****         }
 11201              		.loc 19 558 18 view .LVU3213
 11202 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11203              		.loc 19 557 18 view .LVU3214
 11204 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 11205              	.LVL728:
 558:Veno-Echo.cpp ****         }
 11206              		.loc 19 558 13 is_stmt 1 view .LVU3215
 558:Veno-Echo.cpp ****         }
 11207              		.loc 19 558 18 is_stmt 0 view .LVU3216
 11208 0b22 30EE070A 		vadd.f32	s0, s0, s14
 11209              	.LVL729:
 558:Veno-Echo.cpp ****         }
 11210              		.loc 19 558 18 view .LVU3217
 11211 0b26 FFF72CBB 		b	.L610
 11212              	.LVL730:
 11213              	.L654:
 11214              	.LBB1936:
 11215              	.LBB1803:
 11216              	.LBB1792:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11217              		.loc 18 141 17 view .LVU3218
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 344


 11218 0b2a 049B     		ldr	r3, [sp, #16]
 11219 0b2c 83ED00BA 		vstr.32	s22, [r3]
 11220 0b30 CAE4     		b	.L568
 11221              	.LVL731:
 11222              	.L632:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11223              		.loc 18 141 17 view .LVU3219
 11224              	.LBE1792:
 11225              	.LBE1803:
 11226              	.LBE1936:
 11227              	.LBB1937:
 11228              	.LBB1605:
 11229              	.LBB1598:
 11230              	.LBB1596:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11231              		.loc 19 2020 19 view .LVU3220
 11232 0b32 F0EE667A 		vmov.f32	s15, s13
 11233              	.LVL732:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11234              		.loc 19 2020 19 view .LVU3221
 11235 0b36 ACE7     		b	.L606
 11236              	.LVL733:
 11237              	.L630:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11238              		.loc 19 2020 19 view .LVU3222
 11239              	.LBE1596:
 11240              	.LBE1598:
 11241              	.LBB1599:
 11242              	.LBB1590:
 11243 0b38 B0EE667A 		vmov.f32	s14, s13
 11244              	.LVL734:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11245              		.loc 19 2020 19 view .LVU3223
 11246 0b3c 9FED190A 		vldr.32	s0, .L667+96
 11247 0b40 95E7     		b	.L605
 11248              	.L668:
 11249 0b42 00BF     		.align	2
 11250              	.L667:
 11251 0b44 00000000 		.word	.LANCHOR65
 11252 0b48 CDCCCC3D 		.word	1036831949
 11253 0b4c 00000000 		.word	.LANCHOR29
 11254 0b50 00000000 		.word	.LANCHOR30
 11255 0b54 00000000 		.word	.LANCHOR119
 11256 0b58 00000000 		.word	.LANCHOR120
 11257 0b5c 00000000 		.word	.LANCHOR16
 11258 0b60 00000000 		.word	.LANCHOR17
 11259 0b64 00000000 		.word	.LANCHOR117
 11260 0b68 00000000 		.word	.LANCHOR118
 11261 0b6c 00000000 		.word	.LANCHOR125
 11262 0b70 00000000 		.word	.LANCHOR126
 11263 0b74 249F2400 		.word	2400036
 11264 0b78 1C9F2400 		.word	2400028
 11265 0b7c 00000000 		.word	.LANCHOR31
 11266 0b80 00000000 		.word	.LANCHOR32
 11267 0b84 00000000 		.word	.LANCHOR123
 11268 0b88 00000000 		.word	.LANCHOR124
 11269 0b8c 00000000 		.word	.LANCHOR18
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 345


 11270 0b90 00000000 		.word	.LANCHOR19
 11271 0b94 00000000 		.word	.LANCHOR121
 11272 0b98 00000000 		.word	.LANCHOR122
 11273 0b9c 00000000 		.word	.LANCHOR127
 11274 0ba0 00000000 		.word	.LANCHOR128
 11275 0ba4 CDCC4C3E 		.word	1045220557
 11276 0ba8 CDCC4CBE 		.word	3192704205
 11277              	.LVL735:
 11278              	.L623:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11279              		.loc 19 2020 19 view .LVU3224
 11280              	.LBE1590:
 11281              	.LBE1599:
 11282              	.LBE1605:
 11283              	.LBE1937:
 11284              	.LBB1938:
 11285              	.LBB1865:
 11286              	.LBB1858:
 11287              	.LBB1856:
 11288 0bac F0EE667A 		vmov.f32	s15, s13
 11289              	.LVL736:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11290              		.loc 19 2020 19 view .LVU3225
 11291 0bb0 76E6     		b	.L588
 11292              	.LVL737:
 11293              	.L621:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11294              		.loc 19 2020 19 view .LVU3226
 11295              	.LBE1856:
 11296              	.LBE1858:
 11297              	.LBB1859:
 11298              	.LBB1850:
 11299 0bb2 B0EE667A 		vmov.f32	s14, s13
 11300              	.LVL738:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11301              		.loc 19 2020 19 view .LVU3227
 11302 0bb6 1FED050A 		vldr.32	s0, .L667+96
 11303 0bba 5EE6     		b	.L587
 11304              	.LVL739:
 11305              	.L564:
2020:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11306              		.loc 19 2020 19 view .LVU3228
 11307              	.LBE1850:
 11308              	.LBE1859:
 11309              	.LBE1865:
 11310              	.LBE1938:
 11311              	.LBB1939:
 11312              	.LBB1804:
 11313              	.LBB1793:
 116:delayline_reverse.h ****                 }
 11314              		.loc 18 116 21 view .LVU3229
 11315 0bbc AB60     		str	r3, [r5, #8]
 11316 0bbe DEE6     		b	.L566
 11317              	.LVL740:
 11318              	.L574:
 116:delayline_reverse.h ****                 }
 11319              		.loc 18 116 21 view .LVU3230
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 346


 11320              	.LBE1793:
 11321              	.LBE1804:
 11322              	.LBE1939:
 11323              	.LBB1940:
 11324              	.LBB1830:
 11325              	.LBB1826:
 11326 0bc0 A260     		str	r2, [r4, #8]
 11327 0bc2 B9E6     		b	.L576
 11328              	.LVL741:
 11329              	.L543:
 116:delayline_reverse.h ****                 }
 11330              		.loc 18 116 21 view .LVU3231
 11331              	.LBE1826:
 11332              	.LBE1830:
 11333              	.LBE1940:
 11334              	.LBE1954:
 11335              	.LBE1965:
 578:Veno-Echo.cpp **** 
 11336              		.loc 19 578 1 view .LVU3232
 11337 0bc4 13B0     		add	sp, sp, #76
 11338              		.cfi_remember_state
 11339              		.cfi_def_cfa_offset 92
 11340              		@ sp needed
 11341 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 11342              		.cfi_restore 92
 11343              		.cfi_restore 93
 11344              		.cfi_restore 90
 11345              		.cfi_restore 91
 11346              		.cfi_restore 88
 11347              		.cfi_restore 89
 11348              		.cfi_restore 86
 11349              		.cfi_restore 87
 11350              		.cfi_restore 84
 11351              		.cfi_restore 85
 11352              		.cfi_restore 82
 11353              		.cfi_restore 83
 11354              		.cfi_restore 80
 11355              		.cfi_restore 81
 11356              		.cfi_def_cfa_offset 36
 11357 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11358              	.LVL742:
 11359              	.L657:
 11360              		.cfi_restore_state
 11361              	.LBB1966:
 11362              	.LBB1955:
 11363              	.LBB1941:
 11364              	.LBB1831:
 11365              	.LBB1827:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11366              		.loc 18 130 17 view .LVU3233
 11367 0bce C2ED007A 		vstr.32	s15, [r2]
 11368 0bd2 E4E4     		b	.L578
 11369              	.L581:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11370              		.loc 18 145 21 view .LVU3234
 11371 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 347


 11372              		.loc 18 144 21 view .LVU3235
 11373 0bd6 039C     		ldr	r4, [sp, #12]
 11374              	.LVL743:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11375              		.loc 18 144 21 view .LVU3236
 11376 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11377              		.loc 18 145 21 view .LVU3237
 11378 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11379              		.loc 18 146 21 view .LVU3238
 11380 0bdc 0170     		strb	r1, [r0]
 11381 0bde DEE4     		b	.L578
 11382              	.LVL744:
 11383              	.L622:
 146:delayline_reverse.h ****                 }
 11384              		.loc 18 146 21 view .LVU3239
 11385              	.LBE1827:
 11386              	.LBE1831:
 11387              	.LBE1941:
 11388              	.LBB1942:
 11389              	.LBB1866:
 11390              	.LBB1860:
 11391              	.LBB1851:
2022:Veno-Echo.cpp ****     else
 11392              		.loc 19 2022 19 view .LVU3240
 11393 0be0 B0EE667A 		vmov.f32	s14, s13
 11394              	.LVL745:
2022:Veno-Echo.cpp ****     else
 11395              		.loc 19 2022 19 view .LVU3241
 11396 0be4 1FED100A 		vldr.32	s0, .L667+100
 11397 0be8 47E6     		b	.L587
 11398              	.LVL746:
 11399              	.L631:
2022:Veno-Echo.cpp ****     else
 11400              		.loc 19 2022 19 view .LVU3242
 11401              	.LBE1851:
 11402              	.LBE1860:
 11403              	.LBE1866:
 11404              	.LBE1942:
 11405              	.LBB1943:
 11406              	.LBB1606:
 11407              	.LBB1600:
 11408              	.LBB1591:
 11409 0bea B0EE667A 		vmov.f32	s14, s13
 11410              	.LVL747:
2022:Veno-Echo.cpp ****     else
 11411              		.loc 19 2022 19 view .LVU3243
 11412 0bee 1FED120A 		vldr.32	s0, .L667+100
 11413 0bf2 3CE7     		b	.L605
 11414              	.LVL748:
 11415              	.L545:
2022:Veno-Echo.cpp ****     else
 11416              		.loc 19 2022 19 view .LVU3244
 11417              	.LBE1591:
 11418              	.LBE1600:
 11419              	.LBE1606:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 348


 11420              	.LBE1943:
 11421              	.LBE1955:
 11422              	.LBE1966:
 345:Veno-Echo.cpp ****                 Update_filterXfade();
 11423              		.loc 19 345 13 is_stmt 1 view .LVU3245
 346:Veno-Echo.cpp ****             break;
 11424              		.loc 19 346 17 view .LVU3246
 346:Veno-Echo.cpp ****             break;
 11425              		.loc 19 346 35 is_stmt 0 view .LVU3247
 11426 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11427              	.LVL749:
 347:Veno-Echo.cpp ****         }
 11428              		.loc 19 347 13 is_stmt 1 view .LVU3248
 11429 0bf8 FFF739BA 		b	.L544
 11430              	.L548:
 337:Veno-Echo.cpp ****                 Update_width();
 11431              		.loc 19 337 13 view .LVU3249
 338:Veno-Echo.cpp ****             break;
 11432              		.loc 19 338 17 view .LVU3250
 338:Veno-Echo.cpp ****             break;
 11433              		.loc 19 338 29 is_stmt 0 view .LVU3251
 11434 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11435              	.LVL750:
 339:Veno-Echo.cpp **** 
 11436              		.loc 19 339 13 is_stmt 1 view .LVU3252
 11437 0c00 FFF735BA 		b	.L544
 11438              	.L549:
 333:Veno-Echo.cpp ****                 Update_width_CV();
 11439              		.loc 19 333 13 view .LVU3253
 334:Veno-Echo.cpp ****             break;
 11440              		.loc 19 334 17 view .LVU3254
 11441              	.LBB1967:
 11442              	.LBI1967:
1300:Veno-Echo.cpp **** {
 11443              		.loc 19 1300 6 view .LVU3255
 11444              	.LBB1968:
1302:Veno-Echo.cpp **** }
 11445              		.loc 19 1302 5 view .LVU3256
1302:Veno-Echo.cpp **** }
 11446              		.loc 19 1302 30 is_stmt 0 view .LVU3257
 11447 0c04 0521     		movs	r1, #5
 11448 0c06 2748     		ldr	r0, .L669
 11449 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11450              	.LVL751:
1302:Veno-Echo.cpp **** }
 11451              		.loc 19 1302 13 view .LVU3258
 11452 0c0c 264B     		ldr	r3, .L669+4
 11453 0c0e 83ED000A 		vstr.32	s0, [r3]
1303:Veno-Echo.cpp **** 
 11454              		.loc 19 1303 1 view .LVU3259
 11455 0c12 FFF72CBA 		b	.L544
 11456              	.L550:
 11457              	.LBE1968:
 11458              	.LBE1967:
 329:Veno-Echo.cpp ****                 Update_drywet();
 11459              		.loc 19 329 13 is_stmt 1 view .LVU3260
 330:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 349


 11460              		.loc 19 330 17 view .LVU3261
 330:Veno-Echo.cpp ****             break;
 11461              		.loc 19 330 30 is_stmt 0 view .LVU3262
 11462 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11463              	.LVL752:
 331:Veno-Echo.cpp **** 
 11464              		.loc 19 331 13 is_stmt 1 view .LVU3263
 11465 0c1a FFF728BA 		b	.L544
 11466              	.L551:
 325:Veno-Echo.cpp ****                 Update_drywet_CV();
 11467              		.loc 19 325 13 view .LVU3264
 326:Veno-Echo.cpp ****             break;
 11468              		.loc 19 326 17 view .LVU3265
 11469              	.LBB1969:
 11470              	.LBI1969:
1186:Veno-Echo.cpp **** {
 11471              		.loc 19 1186 6 view .LVU3266
 11472              	.LBB1970:
1188:Veno-Echo.cpp **** }
 11473              		.loc 19 1188 5 view .LVU3267
1188:Veno-Echo.cpp **** }
 11474              		.loc 19 1188 32 is_stmt 0 view .LVU3268
 11475 0c1e 0421     		movs	r1, #4
 11476 0c20 2048     		ldr	r0, .L669
 11477 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11478              	.LVL753:
1188:Veno-Echo.cpp **** }
 11479              		.loc 19 1188 15 view .LVU3269
 11480 0c26 214B     		ldr	r3, .L669+8
 11481 0c28 83ED000A 		vstr.32	s0, [r3]
1189:Veno-Echo.cpp **** 
 11482              		.loc 19 1189 1 view .LVU3270
 11483 0c2c FFF71FBA 		b	.L544
 11484              	.L552:
 11485              	.LBE1970:
 11486              	.LBE1969:
 321:Veno-Echo.cpp ****                 Update_feedbackR();
 11487              		.loc 19 321 13 is_stmt 1 view .LVU3271
 322:Veno-Echo.cpp ****             break;
 11488              		.loc 19 322 17 view .LVU3272
 322:Veno-Echo.cpp ****             break;
 11489              		.loc 19 322 33 is_stmt 0 view .LVU3273
 11490 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11491              	.LVL754:
 323:Veno-Echo.cpp **** 
 11492              		.loc 19 323 13 is_stmt 1 view .LVU3274
 11493 0c34 FFF71BBA 		b	.L544
 11494              	.L553:
 317:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11495              		.loc 19 317 13 view .LVU3275
 318:Veno-Echo.cpp ****             break;
 11496              		.loc 19 318 17 view .LVU3276
 11497              	.LBB1971:
 11498              	.LBI1971:
1096:Veno-Echo.cpp **** {
 11499              		.loc 19 1096 6 view .LVU3277
 11500              	.LBB1972:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 350


1098:Veno-Echo.cpp **** }
 11501              		.loc 19 1098 5 view .LVU3278
1098:Veno-Echo.cpp **** }
 11502              		.loc 19 1098 35 is_stmt 0 view .LVU3279
 11503 0c38 0321     		movs	r1, #3
 11504 0c3a 1A48     		ldr	r0, .L669
 11505 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11506              	.LVL755:
1098:Veno-Echo.cpp **** }
 11507              		.loc 19 1098 18 view .LVU3280
 11508 0c40 1B4B     		ldr	r3, .L669+12
 11509 0c42 83ED000A 		vstr.32	s0, [r3]
1099:Veno-Echo.cpp **** 
 11510              		.loc 19 1099 1 view .LVU3281
 11511 0c46 FFF712BA 		b	.L544
 11512              	.L554:
 11513              	.LBE1972:
 11514              	.LBE1971:
 313:Veno-Echo.cpp ****                 Update_feedbackL();
 11515              		.loc 19 313 13 is_stmt 1 view .LVU3282
 314:Veno-Echo.cpp ****             break;
 11516              		.loc 19 314 17 view .LVU3283
 314:Veno-Echo.cpp ****             break;
 11517              		.loc 19 314 33 is_stmt 0 view .LVU3284
 11518 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11519              	.LVL756:
 315:Veno-Echo.cpp **** 
 11520              		.loc 19 315 13 is_stmt 1 view .LVU3285
 11521 0c4e FFF70EBA 		b	.L544
 11522              	.L555:
 309:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11523              		.loc 19 309 13 view .LVU3286
 310:Veno-Echo.cpp ****             break;
 11524              		.loc 19 310 17 view .LVU3287
 11525              	.LBB1973:
 11526              	.LBI1973:
1008:Veno-Echo.cpp **** {
 11527              		.loc 19 1008 6 view .LVU3288
 11528              	.LBB1974:
1010:Veno-Echo.cpp **** }
 11529              		.loc 19 1010 5 view .LVU3289
1010:Veno-Echo.cpp **** }
 11530              		.loc 19 1010 35 is_stmt 0 view .LVU3290
 11531 0c52 0221     		movs	r1, #2
 11532 0c54 1348     		ldr	r0, .L669
 11533 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11534              	.LVL757:
1010:Veno-Echo.cpp **** }
 11535              		.loc 19 1010 18 view .LVU3291
 11536 0c5a 164B     		ldr	r3, .L669+16
 11537 0c5c 83ED000A 		vstr.32	s0, [r3]
1011:Veno-Echo.cpp **** void Update_feedbackL()
 11538              		.loc 19 1011 1 view .LVU3292
 11539 0c60 FFF705BA 		b	.L544
 11540              	.L556:
 11541              	.LBE1974:
 11542              	.LBE1973:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 351


 305:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11543              		.loc 19 305 13 is_stmt 1 view .LVU3293
 306:Veno-Echo.cpp ****             break;
 11544              		.loc 19 306 17 view .LVU3294
 306:Veno-Echo.cpp ****             break;
 11545              		.loc 19 306 34 is_stmt 0 view .LVU3295
 11546 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11547              	.LVL758:
 307:Veno-Echo.cpp **** 
 11548              		.loc 19 307 13 is_stmt 1 view .LVU3296
 11549 0c68 FFF701BA 		b	.L544
 11550              	.L557:
 301:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11551              		.loc 19 301 13 view .LVU3297
 302:Veno-Echo.cpp ****             break;
 11552              		.loc 19 302 17 view .LVU3298
 11553              	.LBB1975:
 11554              	.LBI1975:
 898:Veno-Echo.cpp **** {
 11555              		.loc 19 898 6 view .LVU3299
 11556              	.LBB1976:
 900:Veno-Echo.cpp **** }
 11557              		.loc 19 900 5 view .LVU3300
 900:Veno-Echo.cpp **** }
 11558              		.loc 19 900 36 is_stmt 0 view .LVU3301
 11559 0c6c 0121     		movs	r1, #1
 11560 0c6e 0D48     		ldr	r0, .L669
 11561 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11562              	.LVL759:
 900:Veno-Echo.cpp **** }
 11563              		.loc 19 900 19 view .LVU3302
 11564 0c74 104B     		ldr	r3, .L669+20
 11565 0c76 83ED000A 		vstr.32	s0, [r3]
 901:Veno-Echo.cpp **** 
 11566              		.loc 19 901 1 view .LVU3303
 11567 0c7a FFF7F8B9 		b	.L544
 11568              	.L558:
 11569              	.LBE1976:
 11570              	.LBE1975:
 297:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11571              		.loc 19 297 13 is_stmt 1 view .LVU3304
 298:Veno-Echo.cpp ****             break;
 11572              		.loc 19 298 17 view .LVU3305
 298:Veno-Echo.cpp ****             break;
 11573              		.loc 19 298 34 is_stmt 0 view .LVU3306
 11574 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11575              	.LVL760:
 299:Veno-Echo.cpp **** 
 11576              		.loc 19 299 13 is_stmt 1 view .LVU3307
 11577 0c82 FFF7F4B9 		b	.L544
 11578              	.L559:
 293:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11579              		.loc 19 293 13 view .LVU3308
 294:Veno-Echo.cpp ****             break;
 11580              		.loc 19 294 17 view .LVU3309
 11581              	.LBB1977:
 11582              	.LBI1977:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 352


 788:Veno-Echo.cpp **** {
 11583              		.loc 19 788 6 view .LVU3310
 11584              	.LBB1978:
 790:Veno-Echo.cpp **** }
 11585              		.loc 19 790 5 view .LVU3311
 790:Veno-Echo.cpp **** }
 11586              		.loc 19 790 36 is_stmt 0 view .LVU3312
 11587 0c86 0021     		movs	r1, #0
 11588 0c88 0648     		ldr	r0, .L669
 11589 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11590              	.LVL761:
 790:Veno-Echo.cpp **** }
 11591              		.loc 19 790 19 view .LVU3313
 11592 0c8e 0B4B     		ldr	r3, .L669+24
 11593 0c90 83ED000A 		vstr.32	s0, [r3]
 791:Veno-Echo.cpp **** 
 11594              		.loc 19 791 1 view .LVU3314
 11595 0c94 FFF7EBB9 		b	.L544
 11596              	.L560:
 11597              	.LBE1978:
 11598              	.LBE1977:
 288:Veno-Echo.cpp ****                 Update_Buttons();
 11599              		.loc 19 288 13 is_stmt 1 view .LVU3315
 289:Veno-Echo.cpp ****                 GetModCV();
 11600              		.loc 19 289 17 view .LVU3316
 289:Veno-Echo.cpp ****                 GetModCV();
 11601              		.loc 19 289 31 is_stmt 0 view .LVU3317
 11602 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11603              	.LVL762:
 290:Veno-Echo.cpp ****             break;
 11604              		.loc 19 290 17 is_stmt 1 view .LVU3318
 290:Veno-Echo.cpp ****             break;
 11605              		.loc 19 290 25 is_stmt 0 view .LVU3319
 11606 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 11607              	.LVL763:
 291:Veno-Echo.cpp **** 
 11608              		.loc 19 291 13 is_stmt 1 view .LVU3320
 11609 0ca0 FFF7E5B9 		b	.L544
 11610              	.L670:
 11611              		.align	2
 11612              	.L669:
 11613 0ca4 18000000 		.word	.LANCHOR4+24
 11614 0ca8 00000000 		.word	.LANCHOR41
 11615 0cac 00000000 		.word	.LANCHOR33
 11616 0cb0 00000000 		.word	.LANCHOR21
 11617 0cb4 00000000 		.word	.LANCHOR7
 11618 0cb8 00000000 		.word	.LANCHOR6
 11619 0cbc 00000000 		.word	.LANCHOR5
 11620              		.cfi_endproc
 11621              	.LFE4288:
 11623              		.section	.text._Z9HardLimitff,"ax",%progbits
 11624              		.align	1
 11625              		.p2align 2,,3
 11626              		.global	_Z9HardLimitff
 11627              		.syntax unified
 11628              		.thumb
 11629              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 353


 11630              		.fpu fpv5-d16
 11632              	_Z9HardLimitff:
 11633              	.LVL764:
 11634              	.LFB4315:
2017:Veno-Echo.cpp ****     float returnval{};
 11635              		.loc 19 2017 1 view -0
 11636              		.cfi_startproc
 11637              		@ args = 0, pretend = 0, frame = 0
 11638              		@ frame_needed = 0, uses_anonymous_args = 0
 11639              		@ link register save eliminated.
2018:Veno-Echo.cpp ****     if (input > limit)
 11640              		.loc 19 2018 5 view .LVU3322
2019:Veno-Echo.cpp ****         returnval = limit;
 11641              		.loc 19 2019 5 view .LVU3323
 11642 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11643 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11644 0008 07DC     		bgt	.L672
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11645              		.loc 19 2021 10 view .LVU3324
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11646              		.loc 19 2021 28 is_stmt 0 view .LVU3325
 11647 000a F1EE600A 		vneg.f32	s1, s1
 11648              	.LVL765:
2021:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11649              		.loc 19 2021 10 view .LVU3326
 11650 000e F4EEC00A 		vcmpe.f32	s1, s0
 11651 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2024:Veno-Echo.cpp **** 
 11652              		.loc 19 2024 19 view .LVU3327
 11653 0016 70FE800A 		vselgt.f32	s1, s1, s0
 11654              	.L672:
 11655              	.LVL766:
2026:Veno-Echo.cpp **** }
 11656              		.loc 19 2026 5 is_stmt 1 view .LVU3328
2027:Veno-Echo.cpp **** 
 11657              		.loc 19 2027 1 is_stmt 0 view .LVU3329
 11658 001a B0EE600A 		vmov.f32	s0, s1
 11659              	.LVL767:
2027:Veno-Echo.cpp **** 
 11660              		.loc 19 2027 1 view .LVU3330
 11661 001e 7047     		bx	lr
 11662              		.cfi_endproc
 11663              	.LFE4315:
 11665              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11666              		.align	1
 11667              		.p2align 2,,3
 11668              		.global	_Z10PotCVComboff
 11669              		.syntax unified
 11670              		.thumb
 11671              		.thumb_func
 11672              		.fpu fpv5-d16
 11674              	_Z10PotCVComboff:
 11675              	.LVL768:
 11676              	.LFB4316:
2030:Veno-Echo.cpp ****     float output{};
 11677              		.loc 19 2030 1 is_stmt 1 view -0
 11678              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 354


 11679              		@ args = 0, pretend = 0, frame = 0
 11680              		@ frame_needed = 0, uses_anonymous_args = 0
 11681              		@ link register save eliminated.
2031:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11682              		.loc 19 2031 5 view .LVU3332
2032:Veno-Echo.cpp **** 
 11683              		.loc 19 2032 5 view .LVU3333
2032:Veno-Echo.cpp **** 
 11684              		.loc 19 2032 39 is_stmt 0 view .LVU3334
 11685 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2032:Veno-Echo.cpp **** 
 11686              		.loc 19 2032 49 view .LVU3335
 11687 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2032:Veno-Echo.cpp **** 
 11688              		.loc 19 2032 12 view .LVU3336
 11689 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2032:Veno-Echo.cpp **** 
 11690              		.loc 19 2032 39 view .LVU3337
 11691 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11692              	.LVL769:
2032:Veno-Echo.cpp **** 
 11693              		.loc 19 2032 49 view .LVU3338
 11694 0010 70EEE60A 		vsub.f32	s1, s1, s13
2032:Veno-Echo.cpp **** 
 11695              		.loc 19 2032 12 view .LVU3339
 11696 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11697              	.LVL770:
2034:Veno-Echo.cpp ****     {
 11698              		.loc 19 2034 5 is_stmt 1 view .LVU3340
 11699 0018 B5EEC00A 		vcmpe.f32	s0, #0
 11700 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11701 0020 06D4     		bmi	.L678
2039:Veno-Echo.cpp ****     {
 11702              		.loc 19 2039 5 view .LVU3341
2041:Veno-Echo.cpp ****     }
 11703              		.loc 19 2041 16 is_stmt 0 view .LVU3342
 11704 0022 B4EE670A 		vcmp.f32	s0, s15
 11705 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11706 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11707              	.LVL771:
2041:Veno-Echo.cpp ****     }
 11708              		.loc 19 2041 16 view .LVU3343
 11709 002e 7047     		bx	lr
 11710              	.LVL772:
 11711              	.L678:
2036:Veno-Echo.cpp ****     }
 11712              		.loc 19 2036 16 view .LVU3344
 11713 0030 9FED010A 		vldr.32	s0, .L680
 11714              	.LVL773:
 11715              		.loc 19 2044 5 is_stmt 1 view .LVU3345
2045:Veno-Echo.cpp **** }
 11716              		.loc 19 2045 1 is_stmt 0 view .LVU3346
 11717 0034 7047     		bx	lr
 11718              	.L681:
 11719 0036 00BF     		.align	2
 11720              	.L680:
 11721 0038 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 355


 11722              		.cfi_endproc
 11723              	.LFE4316:
 11725              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 11726              		.align	1
 11727              		.p2align 2,,3
 11728              		.global	_Z16checkPickupStateffbb
 11729              		.syntax unified
 11730              		.thumb
 11731              		.thumb_func
 11732              		.fpu fpv5-d16
 11734              	_Z16checkPickupStateffbb:
 11735              	.LVL774:
 11736              	.LFB4317:
2046:Veno-Echo.cpp **** 
2047:Veno-Echo.cpp **** //checks pickup state of primary controls
2048:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2049:Veno-Echo.cpp **** {
 11737              		.loc 19 2049 1 is_stmt 1 view -0
 11738              		.cfi_startproc
 11739              		@ args = 0, pretend = 0, frame = 0
 11740              		@ frame_needed = 0, uses_anonymous_args = 0
 11741              		@ link register save eliminated.
2050:Veno-Echo.cpp ****     bool retval{};
 11742              		.loc 19 2050 5 view .LVU3348
2051:Veno-Echo.cpp ****     
2052:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
 11743              		.loc 19 2052 5 view .LVU3349
 11744 0000 69B1     		cbz	r1, .L683
2053:Veno-Echo.cpp ****     {
2054:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
 11745              		.loc 19 2054 9 view .LVU3350
 11746              	.LVL775:
 11747              	.LBB1979:
 11748              	.LBI1979:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11749              		.loc 20 75 3 view .LVU3351
 11750              	.LBB1980:
 11751              		.loc 20 76 5 view .LVU3352
 11752              		.loc 20 76 5 is_stmt 0 view .LVU3353
 11753              	.LBE1980:
 11754              	.LBE1979:
 11755              		.loc 19 2054 15 view .LVU3354
 11756 0002 70EE600A 		vsub.f32	s1, s0, s1
 11757              	.LVL776:
 11758              		.loc 19 2054 9 view .LVU3355
 11759 0006 DFED0D7A 		vldr.32	s15, .L686
 11760              	.LBB1982:
 11761              	.LBB1981:
 11762              		.loc 20 76 31 view .LVU3356
 11763 000a B0EEE00A 		vabs.f32	s0, s1
 11764              	.LVL777:
 11765              		.loc 20 76 31 view .LVU3357
 11766              	.LBE1981:
 11767              	.LBE1982:
 11768              		.loc 19 2054 9 view .LVU3358
 11769 000e B4EEE70A 		vcmpe.f32	s0, s15
 11770 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 356


 11771 0016 D4BF     		ite	le
 11772 0018 0120     		movle	r0, #1
 11773              	.LVL778:
 11774              		.loc 19 2054 9 view .LVU3359
 11775 001a 0020     		movgt	r0, #0
 11776 001c 7047     		bx	lr
 11777              	.LVL779:
 11778              	.L683:
2055:Veno-Echo.cpp ****         {
2056:Veno-Echo.cpp ****             retval = false;
2057:Veno-Echo.cpp ****         }
2058:Veno-Echo.cpp ****         else
2059:Veno-Echo.cpp ****         {
2060:Veno-Echo.cpp ****             retval = true;
2061:Veno-Echo.cpp ****         }
2062:Veno-Echo.cpp ****     }
2063:Veno-Echo.cpp **** 
2064:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2065:Veno-Echo.cpp ****     {
2066:Veno-Echo.cpp ****     if(!lastState) //if not picked up
 11779              		.loc 19 2066 5 is_stmt 1 view .LVU3360
 11780 001e 60B9     		cbnz	r0, .L684
2067:Veno-Echo.cpp ****     {
2068:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
 11781              		.loc 19 2068 9 view .LVU3361
 11782              	.LVL780:
 11783              	.LBB1983:
 11784              	.LBI1983:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11785              		.loc 20 75 3 view .LVU3362
 11786              	.LBB1984:
 11787              		.loc 20 76 5 view .LVU3363
 11788              		.loc 20 76 5 is_stmt 0 view .LVU3364
 11789              	.LBE1984:
 11790              	.LBE1983:
 11791              		.loc 19 2068 15 view .LVU3365
 11792 0020 30EE600A 		vsub.f32	s0, s0, s1
 11793              	.LVL781:
 11794              		.loc 19 2068 9 view .LVU3366
 11795 0024 DFED057A 		vldr.32	s15, .L686
 11796              	.LBB1986:
 11797              	.LBB1985:
 11798              		.loc 20 76 31 view .LVU3367
 11799 0028 B0EEC00A 		vabs.f32	s0, s0
 11800              	.LBE1985:
 11801              	.LBE1986:
 11802              		.loc 19 2068 9 view .LVU3368
 11803 002c B4EEE70A 		vcmpe.f32	s0, s15
 11804 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11805 0034 CCBF     		ite	gt
 11806 0036 0120     		movgt	r0, #1
 11807              	.LVL782:
 11808              		.loc 19 2068 9 view .LVU3369
 11809 0038 0020     		movle	r0, #0
 11810              	.L684:
 11811              	.LVL783:
2069:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 357


2070:Veno-Echo.cpp ****             retval = true;
2071:Veno-Echo.cpp ****         }
2072:Veno-Echo.cpp **** 
2073:Veno-Echo.cpp ****         else
2074:Veno-Echo.cpp ****         {
2075:Veno-Echo.cpp ****             retval = false;
2076:Veno-Echo.cpp ****         }
2077:Veno-Echo.cpp **** 
2078:Veno-Echo.cpp ****     }
2079:Veno-Echo.cpp ****     else    //previous state is picked up
2080:Veno-Echo.cpp ****     {
2081:Veno-Echo.cpp ****         retval = true;  //always return true
2082:Veno-Echo.cpp ****     }
2083:Veno-Echo.cpp **** 
2084:Veno-Echo.cpp ****     }
2085:Veno-Echo.cpp ****     return retval;
 11812              		.loc 19 2085 5 is_stmt 1 view .LVU3370
2086:Veno-Echo.cpp **** 
2087:Veno-Echo.cpp **** }
 11813              		.loc 19 2087 1 is_stmt 0 view .LVU3371
 11814 003a 7047     		bx	lr
 11815              	.L687:
 11816              		.align	2
 11817              	.L686:
 11818 003c 0AD7A33B 		.word	1000593162
 11819              		.cfi_endproc
 11820              	.LFE4317:
 11822              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11823              		.align	1
 11824              		.p2align 2,,3
 11825              		.global	_Z20checkPickupState_altff11pickupStateb
 11826              		.syntax unified
 11827              		.thumb
 11828              		.thumb_func
 11829              		.fpu fpv5-d16
 11831              	_Z20checkPickupState_altff11pickupStateb:
 11832              	.LVL784:
 11833              	.LFB4318:
2088:Veno-Echo.cpp **** 
2089:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2090:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2091:Veno-Echo.cpp **** {
 11834              		.loc 19 2091 1 is_stmt 1 view -0
 11835              		.cfi_startproc
 11836              		@ args = 0, pretend = 0, frame = 0
 11837              		@ frame_needed = 0, uses_anonymous_args = 0
 11838              		@ link register save eliminated.
2092:Veno-Echo.cpp ****     pickupState retval{};
 11839              		.loc 19 2092 5 view .LVU3373
2093:Veno-Echo.cpp **** 
2094:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
 11840              		.loc 19 2094 5 view .LVU3374
 11841 0000 A1B1     		cbz	r1, .L689
2095:Veno-Echo.cpp ****     {
2096:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
 11842              		.loc 19 2096 9 view .LVU3375
 11843              		.loc 19 2096 31 is_stmt 0 view .LVU3376
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 358


 11844 0002 DFED1A7A 		vldr.32	s15, .L706
 11845 0006 30EEE77A 		vsub.f32	s14, s1, s15
 11846              		.loc 19 2096 9 view .LVU3377
 11847 000a B4EEC07A 		vcmpe.f32	s14, s0
 11848 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11849 0012 01DD     		ble	.L704
 11850 0014 0020     		movs	r0, #0
 11851              	.LVL785:
 11852              		.loc 19 2096 9 view .LVU3378
 11853 0016 7047     		bx	lr
 11854              	.LVL786:
 11855              	.L704:
2097:Veno-Echo.cpp ****         {
2098:Veno-Echo.cpp ****             retval = BELOW;
2099:Veno-Echo.cpp ****         }
2100:Veno-Echo.cpp ****         
2101:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
 11856              		.loc 19 2101 14 is_stmt 1 view .LVU3379
 11857              		.loc 19 2101 36 is_stmt 0 view .LVU3380
 11858 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11859              	.LVL787:
 11860              		.loc 19 2101 14 view .LVU3381
 11861 001c F4EEC00A 		vcmpe.f32	s1, s0
 11862 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2102:Veno-Echo.cpp ****         {
2103:Veno-Echo.cpp ****             retval = ABOVE;
2104:Veno-Echo.cpp ****         }
2105:Veno-Echo.cpp **** 
2106:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2107:Veno-Echo.cpp ****         {
2108:Veno-Echo.cpp ****             retval = PICKEDUP;
 11863              		.loc 19 2108 20 view .LVU3382
 11864 0024 4CBF     		ite	mi
 11865 0026 0120     		movmi	r0, #1
 11866              	.LVL788:
 11867              		.loc 19 2108 20 view .LVU3383
 11868 0028 0220     		movpl	r0, #2
 11869 002a 7047     		bx	lr
 11870              	.LVL789:
 11871              	.L689:
2109:Veno-Echo.cpp ****         }
2110:Veno-Echo.cpp ****     }
2111:Veno-Echo.cpp **** 
2112:Veno-Echo.cpp ****     else    //not a recent shift change
2113:Veno-Echo.cpp ****     {
2114:Veno-Echo.cpp ****         switch(lastState)
 11872              		.loc 19 2114 9 is_stmt 1 view .LVU3384
 11873 002c 0128     		cmp	r0, #1
 11874 002e 04D0     		beq	.L692
 11875 0030 0228     		cmp	r0, #2
 11876 0032 01D0     		beq	.L690
 11877 0034 68B1     		cbz	r0, .L705
 11878 0036 0846     		mov	r0, r1
 11879              	.LVL790:
 11880              	.L690:
2115:Veno-Echo.cpp ****         {
2116:Veno-Echo.cpp ****             case BELOW:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 359


2117:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2118:Veno-Echo.cpp ****                 retval = PICKEDUP;
2119:Veno-Echo.cpp ****             else
2120:Veno-Echo.cpp ****                 retval = lastState;
2121:Veno-Echo.cpp ****             break;
2122:Veno-Echo.cpp **** 
2123:Veno-Echo.cpp ****             case ABOVE:
2124:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2125:Veno-Echo.cpp ****                 retval = PICKEDUP;
2126:Veno-Echo.cpp ****             else
2127:Veno-Echo.cpp ****                 retval = lastState;
2128:Veno-Echo.cpp ****             break;
2129:Veno-Echo.cpp ****             case PICKEDUP:
2130:Veno-Echo.cpp ****                 retval = lastState;
2131:Veno-Echo.cpp ****             break;
2132:Veno-Echo.cpp ****         }
2133:Veno-Echo.cpp ****     }
2134:Veno-Echo.cpp ****     
2135:Veno-Echo.cpp ****     return retval;
 11881              		.loc 19 2135 5 view .LVU3385
2136:Veno-Echo.cpp **** }
 11882              		.loc 19 2136 1 is_stmt 0 view .LVU3386
 11883 0038 7047     		bx	lr
 11884              	.LVL791:
 11885              	.L692:
2123:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11886              		.loc 19 2123 13 is_stmt 1 view .LVU3387
2124:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11887              		.loc 19 2124 13 view .LVU3388
2124:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11888              		.loc 19 2124 35 is_stmt 0 view .LVU3389
 11889 003a DFED0C7A 		vldr.32	s15, .L706
 11890 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11891              	.LVL792:
2124:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11892              		.loc 19 2124 13 view .LVU3390
 11893 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11894 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11895 004a CCBF     		ite	gt
 11896 004c 0220     		movgt	r0, #2
 11897              	.LVL793:
2124:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11898              		.loc 19 2124 13 view .LVU3391
 11899 004e 0120     		movle	r0, #1
 11900 0050 7047     		bx	lr
 11901              	.LVL794:
 11902              	.L705:
2116:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11903              		.loc 19 2116 13 is_stmt 1 view .LVU3392
2117:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11904              		.loc 19 2117 13 view .LVU3393
2117:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11905              		.loc 19 2117 35 is_stmt 0 view .LVU3394
 11906 0052 DFED067A 		vldr.32	s15, .L706
 11907 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11908              	.LVL795:
2117:Veno-Echo.cpp ****                 retval = PICKEDUP;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 360


 11909              		.loc 19 2117 13 view .LVU3395
 11910 005a F4EEC00A 		vcmpe.f32	s1, s0
 11911 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11912 0062 4CBF     		ite	mi
 11913 0064 0220     		movmi	r0, #2
 11914              	.LVL796:
2117:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11915              		.loc 19 2117 13 view .LVU3396
 11916 0066 0020     		movpl	r0, #0
 11917 0068 7047     		bx	lr
 11918              	.L707:
 11919 006a 00BF     		.align	2
 11920              	.L706:
 11921 006c 0AD7A33B 		.word	1000593162
 11922              		.cfi_endproc
 11923              	.LFE4318:
 11925              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11926              		.align	1
 11927              		.p2align 2,,3
 11928              		.syntax unified
 11929              		.thumb
 11930              		.thumb_func
 11931              		.fpu fpv5-d16
 11933              	_GLOBAL__sub_I_delMemsL:
 11934              	.LFB4897:
 11935              		.loc 19 2136 1 is_stmt 1 view -0
 11936              		.cfi_startproc
 11937              		@ args = 0, pretend = 0, frame = 0
 11938              		@ frame_needed = 0, uses_anonymous_args = 0
 11939              	.LBB2143:
 11940              	.LBI2143:
 11941              		.loc 19 2136 1 view .LVU3398
 11942              	.LVL797:
 11943              	.LBB2144:
 11944              	.LBB2145:
 11945              	.LBI2145:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11946              		.loc 2 21 5 view .LVU3399
 11947              	.LBB2146:
 11948              	.LBB2147:
 11949              	.LBI2147:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11950              		.loc 6 36 5 view .LVU3400
 11951              	.LBE2147:
 11952              	.LBE2146:
 11953              	.LBE2145:
 11954              	.LBE2144:
 11955              	.LBE2143:
 11956              		.loc 19 2136 1 is_stmt 0 view .LVU3401
 11957 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11958              		.cfi_def_cfa_offset 24
 11959              		.cfi_offset 4, -24
 11960              		.cfi_offset 5, -20
 11961              		.cfi_offset 6, -16
 11962              		.cfi_offset 7, -12
 11963              		.cfi_offset 8, -8
 11964              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 361


 11965              	.LBB2266:
 11966              	.LBB2262:
 11967              	.LBB2162:
 11968              	.LBB2160:
 11969              	.LBB2152:
 11970              	.LBB2148:
 11971              	.LBB2149:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11972              		.loc 6 36 35 view .LVU3402
 11973 0004 9448     		ldr	r0, .L710
 11974 0006 0026     		movs	r6, #0
 11975              	.LBE2149:
 11976              	.LBE2148:
 11977              	.LBE2152:
 11978              	.LBE2160:
 11979              	.LBE2162:
 11980              		.file 25 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11981              		.loc 25 33 18 view .LVU3403
 11982 0008 944C     		ldr	r4, .L710+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11983              		.loc 19 40 12 view .LVU3404
 11984 000a 954D     		ldr	r5, .L710+8
 11985              		.loc 25 33 18 view .LVU3405
 11986 000c 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 362


 11987 000e 9549     		ldr	r1, .L710+12
 11988              	.LBB2163:
 11989              	.LBB2161:
 11990              	.LBB2153:
 11991              	.LBB2151:
 11992              	.LBB2150:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11993              		.loc 6 36 35 view .LVU3406
 11994 0010 4661     		str	r6, [r0, #20]
 11995              	.LVL798:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11996              		.loc 6 36 35 view .LVU3407
 11997              	.LBE2150:
 11998              	.LBE2151:
 11999              	.LBE2153:
 12000              	.LBB2154:
 12001              	.LBI2154:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12002              		.loc 5 84 5 is_stmt 1 view .LVU3408
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12003              		.loc 5 84 5 is_stmt 0 view .LVU3409
 12004              	.LBE2154:
 12005              	.LBB2155:
 12006              	.LBI2155:
 12007              		.file 26 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 363


  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12008              		.loc 26 83 5 is_stmt 1 view .LVU3410
 12009              	.LBB2156:
 12010              	.LBB2157:
 12011              		.loc 26 83 33 is_stmt 0 view .LVU3411
 12012 0012 0662     		str	r6, [r0, #32]
 12013              	.LVL799:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 364


 12014              		.loc 26 83 33 view .LVU3412
 12015              	.LBE2157:
 12016              	.LBE2156:
 12017              	.LBE2155:
 12018              	.LBB2158:
 12019              	.LBI2158:
  40:../libdaisy/src/hid/usb.h **** 
 12020              		.loc 4 40 5 is_stmt 1 view .LVU3413
  40:../libdaisy/src/hid/usb.h **** 
 12021              		.loc 4 40 5 is_stmt 0 view .LVU3414
 12022              	.LBE2158:
 12023              	.LBB2159:
 12024              	.LBI2159:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12025              		.loc 3 56 5 is_stmt 1 view .LVU3415
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12026              		.loc 3 56 5 is_stmt 0 view .LVU3416
 12027              	.LBE2159:
 12028              	.LBE2161:
 12029              	.LBE2163:
 12030              		.loc 25 33 18 view .LVU3417
 12031 0014 FFF7FEFF 		bl	__aeabi_atexit
 12032              	.LVL800:
 12033              	.LBB2164:
 12034              	.LBI2164:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12035              		.loc 9 21 5 is_stmt 1 view .LVU3418
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12036              		.loc 9 21 5 is_stmt 0 view .LVU3419
 12037              	.LBE2164:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12038              		.loc 19 40 12 view .LVU3420
 12039 0018 2246     		mov	r2, r4
 12040 001a 2946     		mov	r1, r5
 12041 001c 9248     		ldr	r0, .L710+16
 12042 001e FFF7FEFF 		bl	__aeabi_atexit
 12043              	.LVL801:
 12044              	.LBB2165:
 12045              	.LBI2165:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12046              		.loc 9 21 5 is_stmt 1 view .LVU3421
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12047              		.loc 9 21 5 is_stmt 0 view .LVU3422
 12048              	.LBE2165:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12049              		.loc 19 41 12 view .LVU3423
 12050 0022 2246     		mov	r2, r4
 12051 0024 2946     		mov	r1, r5
 12052 0026 9148     		ldr	r0, .L710+20
 12053 0028 FFF7FEFF 		bl	__aeabi_atexit
 12054              	.LVL802:
 12055              	.LBB2166:
 12056              	.LBI2166:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12057              		.loc 9 21 5 is_stmt 1 view .LVU3424
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12058              		.loc 9 21 5 is_stmt 0 view .LVU3425
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 365


 12059              	.LBE2166:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12060              		.loc 19 42 12 view .LVU3426
 12061 002c 2246     		mov	r2, r4
 12062 002e 2946     		mov	r1, r5
 12063 0030 8F48     		ldr	r0, .L710+24
 12064 0032 FFF7FEFF 		bl	__aeabi_atexit
 12065              	.LVL803:
 12066              	.LBB2167:
 12067              	.LBI2167:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12068              		.loc 9 21 5 is_stmt 1 view .LVU3427
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12069              		.loc 9 21 5 is_stmt 0 view .LVU3428
 12070              	.LBE2167:
  43:Veno-Echo.cpp **** 
 12071              		.loc 19 43 12 view .LVU3429
 12072 0036 2246     		mov	r2, r4
 12073 0038 2946     		mov	r1, r5
 12074 003a 8E48     		ldr	r0, .L710+28
 12075 003c FFF7FEFF 		bl	__aeabi_atexit
 12076              	.LVL804:
 12077              	.LBB2168:
 12078              	.LBI2168:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12079              		.loc 9 21 5 is_stmt 1 view .LVU3430
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12080              		.loc 9 21 5 is_stmt 0 view .LVU3431
 12081              	.LBE2168:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12082              		.loc 19 45 12 view .LVU3432
 12083 0040 2246     		mov	r2, r4
 12084 0042 2946     		mov	r1, r5
 12085 0044 8C48     		ldr	r0, .L710+32
 12086 0046 FFF7FEFF 		bl	__aeabi_atexit
 12087              	.LVL805:
 12088              	.LBB2169:
 12089              	.LBI2169:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12090              		.loc 9 21 5 is_stmt 1 view .LVU3433
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12091              		.loc 9 21 5 is_stmt 0 view .LVU3434
 12092              	.LBE2169:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12093              		.loc 19 46 12 view .LVU3435
 12094 004a 2246     		mov	r2, r4
 12095 004c 2946     		mov	r1, r5
 12096 004e 8B48     		ldr	r0, .L710+36
 12097 0050 FFF7FEFF 		bl	__aeabi_atexit
 12098              	.LVL806:
 12099              	.LBB2170:
 12100              	.LBI2170:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12101              		.loc 9 21 5 is_stmt 1 view .LVU3436
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12102              		.loc 9 21 5 is_stmt 0 view .LVU3437
 12103              	.LBE2170:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 366


  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12104              		.loc 19 47 12 view .LVU3438
 12105 0054 2246     		mov	r2, r4
 12106 0056 2946     		mov	r1, r5
 12107 0058 8948     		ldr	r0, .L710+40
 12108 005a FFF7FEFF 		bl	__aeabi_atexit
 12109              	.LVL807:
 12110              	.LBB2171:
 12111              	.LBI2171:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12112              		.loc 9 21 5 is_stmt 1 view .LVU3439
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12113              		.loc 9 21 5 is_stmt 0 view .LVU3440
 12114              	.LBE2171:
  48:Veno-Echo.cpp **** 
 12115              		.loc 19 48 12 view .LVU3441
 12116 005e 2246     		mov	r2, r4
 12117 0060 2946     		mov	r1, r5
 12118 0062 8848     		ldr	r0, .L710+44
 12119 0064 FFF7FEFF 		bl	__aeabi_atexit
 12120              	.LVL808:
 12121              	.LBB2172:
 12122              	.LBI2172:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12123              		.loc 8 15 5 is_stmt 1 view .LVU3442
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12124              		.loc 8 15 5 is_stmt 0 view .LVU3443
 12125              	.LBE2172:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12126              		.loc 19 50 19 view .LVU3444
 12127 0068 2246     		mov	r2, r4
 12128 006a 8749     		ldr	r1, .L710+48
 12129              	.LBB2173:
 12130              	.LBB2174:
 12131              	.LBB2175:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12132              		.loc 12 45 13 view .LVU3445
 12133 006c 0025     		movs	r5, #0
 12134              	.LBE2175:
 12135              	.LBE2174:
 12136              	.LBE2173:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12137              		.loc 19 50 19 view .LVU3446
 12138 006e 8748     		ldr	r0, .L710+52
 12139 0070 FFF7FEFF 		bl	__aeabi_atexit
 12140              	.LVL809:
 12141              	.LBB2180:
 12142              	.LBI2173:
  43:envFollow.h   ****     {
 12143              		.loc 12 43 5 is_stmt 1 view .LVU3447
 12144              	.LBB2178:
 12145              	.LBB2176:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12146              		.loc 12 45 9 view .LVU3448
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12147              		.loc 12 48 11 is_stmt 0 view .LVU3449
 12148 0074 864F     		ldr	r7, .L710+56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 367


  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12149              		.loc 12 45 13 view .LVU3450
 12150 0076 8748     		ldr	r0, .L710+60
 12151              	.LBE2176:
 12152              	.LBE2178:
 12153              	.LBE2180:
  51:Veno-Echo.cpp **** 
 12154              		.loc 19 51 18 view .LVU3451
 12155 0078 2246     		mov	r2, r4
 12156 007a 8749     		ldr	r1, .L710+64
 12157              	.LBB2181:
 12158              	.LBB2179:
 12159              	.LBB2177:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12160              		.loc 12 45 13 view .LVU3452
 12161 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12162              		.loc 12 46 9 is_stmt 1 view .LVU3453
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12163              		.loc 12 46 20 is_stmt 0 view .LVU3454
 12164 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12165              		.loc 12 47 9 is_stmt 1 view .LVU3455
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12166              		.loc 12 47 17 is_stmt 0 view .LVU3456
 12167 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12168              		.loc 12 48 9 is_stmt 1 view .LVU3457
  50:envFollow.h   ****     }  
 12169              		.loc 12 50 21 is_stmt 0 view .LVU3458
 12170 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12171              		.loc 12 48 11 view .LVU3459
 12172 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12173              		.loc 12 49 9 is_stmt 1 view .LVU3460
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12174              		.loc 12 49 15 is_stmt 0 view .LVU3461
 12175 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12176              		.loc 12 50 9 is_stmt 1 view .LVU3462
 12177              	.LVL810:
  50:envFollow.h   ****     }  
 12178              		.loc 12 50 9 is_stmt 0 view .LVU3463
 12179              	.LBE2177:
 12180              	.LBE2179:
 12181              	.LBE2181:
  51:Veno-Echo.cpp **** 
 12182              		.loc 19 51 18 view .LVU3464
 12183 0088 FFF7FEFF 		bl	__aeabi_atexit
 12184              	.LVL811:
 12185              	.LBB2182:
 12186              	.LBI2182:
  43:envFollow.h   ****     {
 12187              		.loc 12 43 5 is_stmt 1 view .LVU3465
 12188              	.LBB2183:
 12189              	.LBB2184:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 368


  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12190              		.loc 12 45 9 view .LVU3466
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12191              		.loc 12 45 13 is_stmt 0 view .LVU3467
 12192 008c 8348     		ldr	r0, .L710+68
 12193              	.LBE2184:
 12194              	.LBE2183:
 12195              	.LBE2182:
  53:Veno-Echo.cpp **** 
 12196              		.loc 19 53 16 view .LVU3468
 12197 008e DFF8D082 		ldr	r8, .L710+264
  51:Veno-Echo.cpp **** 
 12198              		.loc 19 51 27 view .LVU3469
 12199 0092 2246     		mov	r2, r4
 12200 0094 8049     		ldr	r1, .L710+64
 12201              	.LBB2187:
 12202              	.LBB2186:
 12203              	.LBB2185:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12204              		.loc 12 45 13 view .LVU3470
 12205 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12206              		.loc 12 46 9 is_stmt 1 view .LVU3471
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12207              		.loc 12 46 20 is_stmt 0 view .LVU3472
 12208 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12209              		.loc 12 47 9 is_stmt 1 view .LVU3473
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12210              		.loc 12 47 17 is_stmt 0 view .LVU3474
 12211 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12212              		.loc 12 48 9 is_stmt 1 view .LVU3475
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12213              		.loc 12 48 11 is_stmt 0 view .LVU3476
 12214 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12215              		.loc 12 49 9 is_stmt 1 view .LVU3477
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12216              		.loc 12 49 15 is_stmt 0 view .LVU3478
 12217 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12218              		.loc 12 50 9 is_stmt 1 view .LVU3479
  50:envFollow.h   ****     }  
 12219              		.loc 12 50 21 is_stmt 0 view .LVU3480
 12220 00a0 8560     		str	r5, [r0, #8]	@ float
 12221              	.LVL812:
  50:envFollow.h   ****     }  
 12222              		.loc 12 50 21 view .LVU3481
 12223              	.LBE2185:
 12224              	.LBE2186:
 12225              	.LBE2187:
  51:Veno-Echo.cpp **** 
 12226              		.loc 19 51 27 view .LVU3482
 12227 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12228              	.LVL813:
 12229              	.LBB2188:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 369


 12230              	.LBI2188:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12231              		.loc 11 14 5 is_stmt 1 view .LVU3483
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12232              		.loc 11 14 5 is_stmt 0 view .LVU3484
 12233              	.LBE2188:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12234              		.loc 19 56 76 view .LVU3485
 12235 00a6 7E4F     		ldr	r7, .L710+72
  53:Veno-Echo.cpp **** 
 12236              		.loc 19 53 16 view .LVU3486
 12237 00a8 2246     		mov	r2, r4
 12238 00aa 4146     		mov	r1, r8
 12239 00ac 7D48     		ldr	r0, .L710+76
 12240 00ae FFF7FEFF 		bl	__aeabi_atexit
 12241              	.LVL814:
 12242              	.LBB2189:
 12243              	.LBI2189:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12244              		.loc 11 14 5 is_stmt 1 view .LVU3487
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12245              		.loc 11 14 5 is_stmt 0 view .LVU3488
 12246              	.LBE2189:
  53:Veno-Echo.cpp **** 
 12247              		.loc 19 53 29 view .LVU3489
 12248 00b2 2246     		mov	r2, r4
 12249 00b4 4146     		mov	r1, r8
 12250 00b6 7C48     		ldr	r0, .L710+80
 12251 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12252              	.LVL815:
 12253              	.LBB2190:
 12254              	.LBI2190:
  48:delayline_multitap.h ****     {
 12255              		.loc 17 48 5 is_stmt 1 view .LVU3490
  48:delayline_multitap.h ****     {
 12256              		.loc 17 48 5 is_stmt 0 view .LVU3491
 12257              	.LBE2190:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12258              		.loc 19 59 80 view .LVU3492
 12259 00bc 7B4D     		ldr	r5, .L710+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12260              		.loc 19 56 76 view .LVU3493
 12261 00be 2246     		mov	r2, r4
 12262 00c0 3946     		mov	r1, r7
 12263 00c2 7B48     		ldr	r0, .L710+88
 12264 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12265              	.LVL816:
 12266              	.LBB2191:
 12267              	.LBI2191:
  48:delayline_multitap.h ****     {
 12268              		.loc 17 48 5 is_stmt 1 view .LVU3494
  48:delayline_multitap.h ****     {
 12269              		.loc 17 48 5 is_stmt 0 view .LVU3495
 12270              	.LBE2191:
  57:Veno-Echo.cpp **** 
 12271              		.loc 19 57 76 view .LVU3496
 12272 00c8 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 370


 12273 00ca 3946     		mov	r1, r7
 12274 00cc 7948     		ldr	r0, .L710+92
 12275 00ce FFF7FEFF 		bl	__aeabi_atexit
 12276              	.LVL817:
 12277              	.LBB2192:
 12278              	.LBI2192:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12279              		.loc 18 38 5 is_stmt 1 view .LVU3497
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12280              		.loc 18 38 5 is_stmt 0 view .LVU3498
 12281              	.LBE2192:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12282              		.loc 19 98 12 view .LVU3499
 12283 00d2 794F     		ldr	r7, .L710+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12284              		.loc 19 59 80 view .LVU3500
 12285 00d4 2246     		mov	r2, r4
 12286 00d6 2946     		mov	r1, r5
 12287 00d8 7848     		ldr	r0, .L710+100
 12288 00da FFF7FEFF 		bl	__aeabi_atexit
 12289              	.LVL818:
 12290              	.LBB2193:
 12291              	.LBI2193:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12292              		.loc 18 38 5 is_stmt 1 view .LVU3501
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12293              		.loc 18 38 5 is_stmt 0 view .LVU3502
 12294              	.LBE2193:
  60:Veno-Echo.cpp **** 
 12295              		.loc 19 60 80 view .LVU3503
 12296 00de 2246     		mov	r2, r4
 12297 00e0 2946     		mov	r1, r5
 12298 00e2 7748     		ldr	r0, .L710+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12299              		.loc 19 102 11 view .LVU3504
 12300 00e4 774D     		ldr	r5, .L710+108
  60:Veno-Echo.cpp **** 
 12301              		.loc 19 60 80 view .LVU3505
 12302 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12303              	.LVL819:
 12304              	.LBB2194:
 12305              	.LBI2194:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12306              		.loc 16 49 1 is_stmt 1 view .LVU3506
 12307              	.LBB2195:
 12308              	.LBB2196:
 12309              	.LBI2196:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12310              		.loc 14 40 1 view .LVU3507
 12311              	.LBB2197:
 12312              	.LBB2198:
 12313              	.LBI2198:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12314              		.loc 15 24 5 view .LVU3508
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12315              		.loc 15 24 5 is_stmt 0 view .LVU3509
 12316              	.LBE2198:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 371


 12317              	.LBB2199:
 12318              	.LBI2199:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12319              		.loc 8 15 5 is_stmt 1 view .LVU3510
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12320              		.loc 8 15 5 is_stmt 0 view .LVU3511
 12321              	.LBE2199:
 12322              	.LBE2197:
 12323              	.LBE2196:
 12324              	.LBE2195:
 12325              	.LBE2194:
 12326              	.LBE2262:
 12327              	.LBE2266:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12328              		.loc 16 49 14 is_stmt 1 view .LVU3512
  49:DelayMulti.h  **** ~DelayMulti() {}
 12329              		.loc 16 49 14 view .LVU3513
 12330              	.LBB2267:
 12331              	.LBB2263:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12332              		.loc 19 98 12 is_stmt 0 view .LVU3514
 12333 00ea 2246     		mov	r2, r4
 12334 00ec 3946     		mov	r1, r7
 12335 00ee 7648     		ldr	r0, .L710+112
 12336 00f0 FFF7FEFF 		bl	__aeabi_atexit
 12337              	.LVL820:
 12338              	.LBB2200:
 12339              	.LBI2200:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12340              		.loc 16 49 1 is_stmt 1 view .LVU3515
 12341              	.LBB2201:
 12342              	.LBB2202:
 12343              	.LBI2202:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12344              		.loc 14 40 1 view .LVU3516
 12345              	.LBB2203:
 12346              	.LBB2204:
 12347              	.LBI2204:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12348              		.loc 15 24 5 view .LVU3517
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12349              		.loc 15 24 5 is_stmt 0 view .LVU3518
 12350              	.LBE2204:
 12351              	.LBB2205:
 12352              	.LBI2205:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12353              		.loc 8 15 5 is_stmt 1 view .LVU3519
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12354              		.loc 8 15 5 is_stmt 0 view .LVU3520
 12355              	.LBE2205:
 12356              	.LBE2203:
 12357              	.LBE2202:
 12358              	.LBE2201:
 12359              	.LBE2200:
 12360              	.LBE2263:
 12361              	.LBE2267:
  49:DelayMulti.h  **** ~DelayMulti() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 372


 12362              		.loc 16 49 14 is_stmt 1 view .LVU3521
  49:DelayMulti.h  **** ~DelayMulti() {}
 12363              		.loc 16 49 14 view .LVU3522
 12364              	.LBB2268:
 12365              	.LBB2264:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12366              		.loc 19 98 19 is_stmt 0 view .LVU3523
 12367 00f4 2246     		mov	r2, r4
 12368 00f6 3946     		mov	r1, r7
 12369 00f8 7448     		ldr	r0, .L710+116
 12370 00fa FFF7FEFF 		bl	__aeabi_atexit
 12371              	.LVL821:
 12372              	.LBB2206:
 12373              	.LBI2206:
  60:LEDs.h        ****     ~ButtonLED() {}
 12374              		.loc 14 60 5 is_stmt 1 view .LVU3524
 12375              	.LBB2207:
 12376              	.LBB2208:
 12377              	.LBI2208:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12378              		.loc 1 40 5 view .LVU3525
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12379              		.loc 1 40 5 is_stmt 0 view .LVU3526
 12380              	.LBE2208:
 12381              	.LBB2209:
 12382              	.LBI2209:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12383              		.loc 15 24 5 is_stmt 1 view .LVU3527
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12384              		.loc 15 24 5 is_stmt 0 view .LVU3528
 12385              	.LBE2209:
 12386              	.LBE2207:
 12387              	.LBE2206:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12388              		.loc 19 102 11 view .LVU3529
 12389 00fe 2246     		mov	r2, r4
 12390 0100 2946     		mov	r1, r5
 12391 0102 7348     		ldr	r0, .L710+120
 12392 0104 FFF7FEFF 		bl	__aeabi_atexit
 12393              	.LVL822:
 12394              	.LBB2210:
 12395              	.LBI2210:
  60:LEDs.h        ****     ~ButtonLED() {}
 12396              		.loc 14 60 5 is_stmt 1 view .LVU3530
 12397              	.LBB2211:
 12398              	.LBB2212:
 12399              	.LBI2212:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12400              		.loc 1 40 5 view .LVU3531
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12401              		.loc 1 40 5 is_stmt 0 view .LVU3532
 12402              	.LBE2212:
 12403              	.LBB2213:
 12404              	.LBI2213:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12405              		.loc 15 24 5 is_stmt 1 view .LVU3533
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 373


 12406              		.loc 15 24 5 is_stmt 0 view .LVU3534
 12407              	.LBE2213:
 12408              	.LBE2211:
 12409              	.LBE2210:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12410              		.loc 19 102 18 view .LVU3535
 12411 0108 2246     		mov	r2, r4
 12412 010a 2946     		mov	r1, r5
 12413 010c 7148     		ldr	r0, .L710+124
 12414 010e FFF7FEFF 		bl	__aeabi_atexit
 12415              	.LVL823:
 12416              	.LBB2214:
 12417              	.LBI2214:
  60:LEDs.h        ****     ~ButtonLED() {}
 12418              		.loc 14 60 5 is_stmt 1 view .LVU3536
 12419              	.LBB2215:
 12420              	.LBB2216:
 12421              	.LBI2216:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12422              		.loc 1 40 5 view .LVU3537
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12423              		.loc 1 40 5 is_stmt 0 view .LVU3538
 12424              	.LBE2216:
 12425              	.LBB2217:
 12426              	.LBI2217:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12427              		.loc 15 24 5 is_stmt 1 view .LVU3539
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12428              		.loc 15 24 5 is_stmt 0 view .LVU3540
 12429              	.LBE2217:
 12430              	.LBE2215:
 12431              	.LBE2214:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12432              		.loc 19 102 25 view .LVU3541
 12433 0112 2246     		mov	r2, r4
 12434 0114 2946     		mov	r1, r5
 12435 0116 7048     		ldr	r0, .L710+128
 12436 0118 FFF7FEFF 		bl	__aeabi_atexit
 12437              	.LVL824:
 12438              	.LBB2218:
 12439              	.LBI2218:
  60:LEDs.h        ****     ~ButtonLED() {}
 12440              		.loc 14 60 5 is_stmt 1 view .LVU3542
 12441              	.LBB2219:
 12442              	.LBB2220:
 12443              	.LBI2220:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12444              		.loc 1 40 5 view .LVU3543
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12445              		.loc 1 40 5 is_stmt 0 view .LVU3544
 12446              	.LBE2220:
 12447              	.LBB2221:
 12448              	.LBI2221:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12449              		.loc 15 24 5 is_stmt 1 view .LVU3545
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12450              		.loc 15 24 5 is_stmt 0 view .LVU3546
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 374


 12451              	.LBE2221:
 12452              	.LBE2219:
 12453              	.LBE2218:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12454              		.loc 19 102 34 view .LVU3547
 12455 011c 2246     		mov	r2, r4
 12456 011e 2946     		mov	r1, r5
 12457 0120 6E48     		ldr	r0, .L710+132
 12458 0122 FFF7FEFF 		bl	__aeabi_atexit
 12459              	.LVL825:
 12460              	.LBB2222:
 12461              	.LBI2222:
  60:LEDs.h        ****     ~ButtonLED() {}
 12462              		.loc 14 60 5 is_stmt 1 view .LVU3548
 12463              	.LBB2223:
 12464              	.LBB2224:
 12465              	.LBI2224:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12466              		.loc 1 40 5 view .LVU3549
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12467              		.loc 1 40 5 is_stmt 0 view .LVU3550
 12468              	.LBE2224:
 12469              	.LBB2225:
 12470              	.LBI2225:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12471              		.loc 15 24 5 is_stmt 1 view .LVU3551
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12472              		.loc 15 24 5 is_stmt 0 view .LVU3552
 12473              	.LBE2225:
 12474              	.LBE2223:
 12475              	.LBE2222:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12476              		.loc 19 147 13 view .LVU3553
 12477 0126 6E4F     		ldr	r7, .L710+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12478              		.loc 19 102 44 view .LVU3554
 12479 0128 2246     		mov	r2, r4
 12480 012a 2946     		mov	r1, r5
 12481 012c 6D48     		ldr	r0, .L710+140
 12482 012e FFF7FEFF 		bl	__aeabi_atexit
 12483              	.LVL826:
 12484              	.LBB2226:
 12485              	.LBI2226:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 12486              		.loc 14 40 1 is_stmt 1 view .LVU3555
 12487              	.LBB2227:
 12488              	.LBB2228:
 12489              	.LBI2228:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12490              		.loc 15 24 5 view .LVU3556
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12491              		.loc 15 24 5 is_stmt 0 view .LVU3557
 12492              	.LBE2228:
 12493              	.LBB2229:
 12494              	.LBI2229:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12495              		.loc 8 15 5 is_stmt 1 view .LVU3558
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 375


  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12496              		.loc 8 15 5 is_stmt 0 view .LVU3559
 12497              	.LBE2229:
 12498              	.LBE2227:
 12499              	.LBE2226:
 103:Veno-Echo.cpp **** 
 12500              		.loc 19 103 10 view .LVU3560
 12501 0132 2246     		mov	r2, r4
 12502 0134 6C49     		ldr	r1, .L710+144
 12503 0136 6D48     		ldr	r0, .L710+148
 12504 0138 FFF7FEFF 		bl	__aeabi_atexit
 12505              	.LVL827:
 12506              	.LBB2230:
 12507              	.LBI2230:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12508              		.loc 7 38 5 is_stmt 1 view .LVU3561
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12509              		.loc 7 38 5 is_stmt 0 view .LVU3562
 12510              	.LBE2230:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12511              		.loc 19 147 13 view .LVU3563
 12512 013c 2246     		mov	r2, r4
 12513 013e 3946     		mov	r1, r7
 12514 0140 6B48     		ldr	r0, .L710+152
 12515 0142 FFF7FEFF 		bl	__aeabi_atexit
 12516              	.LVL828:
 12517              	.LBB2231:
 12518              	.LBI2231:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12519              		.loc 7 38 5 is_stmt 1 view .LVU3564
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12520              		.loc 7 38 5 is_stmt 0 view .LVU3565
 12521              	.LBE2231:
 148:Veno-Echo.cpp **** 
 12522              		.loc 19 148 13 view .LVU3566
 12523 0146 2246     		mov	r2, r4
 12524 0148 3946     		mov	r1, r7
 12525 014a 6A48     		ldr	r0, .L710+156
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12526              		.loc 19 153 18 view .LVU3567
 12527 014c 6A4D     		ldr	r5, .L710+160
 148:Veno-Echo.cpp **** 
 12528              		.loc 19 148 13 view .LVU3568
 12529 014e FFF7FEFF 		bl	__aeabi_atexit
 12530              	.LVL829:
 12531              	.LBB2232:
 12532              	.LBI2232:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12533              		.loc 7 38 5 is_stmt 1 view .LVU3569
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12534              		.loc 7 38 5 is_stmt 0 view .LVU3570
 12535              	.LBE2232:
 150:Veno-Echo.cpp **** static Adsr HPF_Env;
 12536              		.loc 19 150 13 view .LVU3571
 12537 0152 2246     		mov	r2, r4
 12538 0154 3946     		mov	r1, r7
 12539 0156 6948     		ldr	r0, .L710+164
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 376


 12540 0158 FFF7FEFF 		bl	__aeabi_atexit
 12541              	.LVL830:
 12542              	.LBB2233:
 12543              	.LBI2233:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12544              		.loc 7 38 5 is_stmt 1 view .LVU3572
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12545              		.loc 7 38 5 is_stmt 0 view .LVU3573
 12546              	.LBE2233:
 151:Veno-Echo.cpp **** 
 12547              		.loc 19 151 13 view .LVU3574
 12548 015c 2246     		mov	r2, r4
 12549 015e 3946     		mov	r1, r7
 12550 0160 6748     		ldr	r0, .L710+168
 12551 0162 FFF7FEFF 		bl	__aeabi_atexit
 12552              	.LVL831:
 12553              	.LBB2234:
 12554              	.LBI2234:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12555              		.loc 10 36 5 is_stmt 1 view .LVU3575
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12556              		.loc 10 36 5 is_stmt 0 view .LVU3576
 12557              	.LBE2234:
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12558              		.loc 19 153 18 view .LVU3577
 12559 0166 2246     		mov	r2, r4
 12560 0168 2946     		mov	r1, r5
 12561 016a 6648     		ldr	r0, .L710+172
 12562 016c FFF7FEFF 		bl	__aeabi_atexit
 12563              	.LVL832:
 12564              	.LBB2235:
 12565              	.LBI2235:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12566              		.loc 10 36 5 is_stmt 1 view .LVU3578
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12567              		.loc 10 36 5 is_stmt 0 view .LVU3579
 12568              	.LBE2235:
 154:Veno-Echo.cpp **** 
 12569              		.loc 19 154 18 view .LVU3580
 12570 0170 2246     		mov	r2, r4
 12571 0172 2946     		mov	r1, r5
 12572 0174 6448     		ldr	r0, .L710+176
 12573 0176 FFF7FEFF 		bl	__aeabi_atexit
 12574              	.LVL833:
 12575              	.LBB2236:
 12576              	.LBI2236:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12577              		.loc 10 36 5 is_stmt 1 view .LVU3581
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12578              		.loc 10 36 5 is_stmt 0 view .LVU3582
 12579              	.LBE2236:
 156:Veno-Echo.cpp **** 
 12580              		.loc 19 156 18 view .LVU3583
 12581 017a 2246     		mov	r2, r4
 12582 017c 2946     		mov	r1, r5
 12583 017e 6348     		ldr	r0, .L710+180
 12584 0180 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 377


 12585              	.LVL834:
 12586              	.LBB2237:
 12587              	.LBI2237:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12588              		.loc 10 36 5 is_stmt 1 view .LVU3584
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12589              		.loc 10 36 5 is_stmt 0 view .LVU3585
 12590              	.LBE2237:
 159:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12591              		.loc 19 159 18 view .LVU3586
 12592 0184 2246     		mov	r2, r4
 12593 0186 2946     		mov	r1, r5
 12594 0188 6148     		ldr	r0, .L710+184
 12595 018a FFF7FEFF 		bl	__aeabi_atexit
 12596              	.LVL835:
 12597              	.LBB2238:
 12598              	.LBI2238:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12599              		.loc 10 36 5 is_stmt 1 view .LVU3587
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12600              		.loc 10 36 5 is_stmt 0 view .LVU3588
 12601              	.LBE2238:
 160:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12602              		.loc 19 160 18 view .LVU3589
 12603 018e 2246     		mov	r2, r4
 12604 0190 2946     		mov	r1, r5
 12605 0192 6048     		ldr	r0, .L710+188
 12606 0194 FFF7FEFF 		bl	__aeabi_atexit
 12607              	.LVL836:
 12608              	.LBB2239:
 12609              	.LBI2239:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12610              		.loc 10 36 5 is_stmt 1 view .LVU3590
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12611              		.loc 10 36 5 is_stmt 0 view .LVU3591
 12612              	.LBE2239:
 161:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12613              		.loc 19 161 18 view .LVU3592
 12614 0198 2246     		mov	r2, r4
 12615 019a 2946     		mov	r1, r5
 12616 019c 5E48     		ldr	r0, .L710+192
 12617 019e FFF7FEFF 		bl	__aeabi_atexit
 12618              	.LVL837:
 12619              	.LBB2240:
 12620              	.LBI2240:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12621              		.loc 10 36 5 is_stmt 1 view .LVU3593
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12622              		.loc 10 36 5 is_stmt 0 view .LVU3594
 12623              	.LBE2240:
 162:Veno-Echo.cpp **** 
 12624              		.loc 19 162 18 view .LVU3595
 12625 01a2 2246     		mov	r2, r4
 12626 01a4 2946     		mov	r1, r5
 12627 01a6 5D48     		ldr	r0, .L710+196
 12628 01a8 FFF7FEFF 		bl	__aeabi_atexit
 12629              	.LVL838:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 378


 12630              	.LBB2241:
 12631              	.LBI2241:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12632              		.loc 10 36 5 is_stmt 1 view .LVU3596
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12633              		.loc 10 36 5 is_stmt 0 view .LVU3597
 12634              	.LBE2241:
 165:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12635              		.loc 19 165 18 view .LVU3598
 12636 01ac 2246     		mov	r2, r4
 12637 01ae 2946     		mov	r1, r5
 12638 01b0 5B48     		ldr	r0, .L710+200
 12639 01b2 FFF7FEFF 		bl	__aeabi_atexit
 12640              	.LVL839:
 12641              	.LBB2242:
 12642              	.LBI2242:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12643              		.loc 10 36 5 is_stmt 1 view .LVU3599
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12644              		.loc 10 36 5 is_stmt 0 view .LVU3600
 12645              	.LBE2242:
 166:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12646              		.loc 19 166 18 view .LVU3601
 12647 01b6 2246     		mov	r2, r4
 12648 01b8 2946     		mov	r1, r5
 12649 01ba 5A48     		ldr	r0, .L710+204
 12650 01bc FFF7FEFF 		bl	__aeabi_atexit
 12651              	.LVL840:
 12652              	.LBB2243:
 12653              	.LBI2243:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12654              		.loc 10 36 5 is_stmt 1 view .LVU3602
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12655              		.loc 10 36 5 is_stmt 0 view .LVU3603
 12656              	.LBE2243:
 167:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12657              		.loc 19 167 18 view .LVU3604
 12658 01c0 2246     		mov	r2, r4
 12659 01c2 2946     		mov	r1, r5
 12660 01c4 5848     		ldr	r0, .L710+208
 12661 01c6 FFF7FEFF 		bl	__aeabi_atexit
 12662              	.LVL841:
 12663              	.LBB2244:
 12664              	.LBI2244:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12665              		.loc 10 36 5 is_stmt 1 view .LVU3605
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12666              		.loc 10 36 5 is_stmt 0 view .LVU3606
 12667              	.LBE2244:
 168:Veno-Echo.cpp **** 
 12668              		.loc 19 168 18 view .LVU3607
 12669 01ca 2246     		mov	r2, r4
 12670 01cc 2946     		mov	r1, r5
 12671 01ce 5748     		ldr	r0, .L710+212
 12672 01d0 FFF7FEFF 		bl	__aeabi_atexit
 12673              	.LVL842:
 12674              	.LBB2245:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 379


 12675              	.LBI2245:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12676              		.loc 10 36 5 is_stmt 1 view .LVU3608
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12677              		.loc 10 36 5 is_stmt 0 view .LVU3609
 12678              	.LBE2245:
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12679              		.loc 19 171 18 view .LVU3610
 12680 01d4 2246     		mov	r2, r4
 12681 01d6 2946     		mov	r1, r5
 12682 01d8 5548     		ldr	r0, .L710+216
 12683 01da FFF7FEFF 		bl	__aeabi_atexit
 12684              	.LVL843:
 12685              	.LBB2246:
 12686              	.LBI2246:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12687              		.loc 10 36 5 is_stmt 1 view .LVU3611
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12688              		.loc 10 36 5 is_stmt 0 view .LVU3612
 12689              	.LBE2246:
 172:Veno-Echo.cpp **** 
 12690              		.loc 19 172 18 view .LVU3613
 12691 01de 2246     		mov	r2, r4
 12692 01e0 2946     		mov	r1, r5
 12693 01e2 5448     		ldr	r0, .L710+220
 12694 01e4 FFF7FEFF 		bl	__aeabi_atexit
 12695              	.LVL844:
 12696              	.LBB2247:
 12697              	.LBI2247:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12698              		.loc 10 36 5 is_stmt 1 view .LVU3614
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12699              		.loc 10 36 5 is_stmt 0 view .LVU3615
 12700              	.LBE2247:
 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12701              		.loc 19 178 8 view .LVU3616
 12702 01e8 534F     		ldr	r7, .L710+224
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12703              		.loc 19 174 18 view .LVU3617
 12704 01ea 2246     		mov	r2, r4
 12705 01ec 2946     		mov	r1, r5
 12706 01ee 5348     		ldr	r0, .L710+228
 12707 01f0 FFF7FEFF 		bl	__aeabi_atexit
 12708              	.LVL845:
 12709              	.LBB2248:
 12710              	.LBI2248:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12711              		.loc 10 36 5 is_stmt 1 view .LVU3618
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12712              		.loc 10 36 5 is_stmt 0 view .LVU3619
 12713              	.LBE2248:
 175:Veno-Echo.cpp **** 
 12714              		.loc 19 175 18 view .LVU3620
 12715 01f4 2246     		mov	r2, r4
 12716 01f6 2946     		mov	r1, r5
 12717 01f8 5148     		ldr	r0, .L710+232
 12718 01fa FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 380


 12719              	.LVL846:
 12720              	.LBB2249:
 12721              	.LBI2249:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12722              		.loc 1 40 5 is_stmt 1 view .LVU3621
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12723              		.loc 1 40 5 is_stmt 0 view .LVU3622
 12724              	.LBE2249:
 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12725              		.loc 19 178 8 view .LVU3623
 12726 01fe 2246     		mov	r2, r4
 12727 0200 3946     		mov	r1, r7
 12728 0202 5048     		ldr	r0, .L710+236
 12729 0204 FFF7FEFF 		bl	__aeabi_atexit
 12730              	.LVL847:
 12731              	.LBB2250:
 12732              	.LBI2250:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12733              		.loc 1 40 5 is_stmt 1 view .LVU3624
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12734              		.loc 1 40 5 is_stmt 0 view .LVU3625
 12735              	.LBE2250:
 179:Veno-Echo.cpp **** 
 12736              		.loc 19 179 8 view .LVU3626
 12737 0208 2246     		mov	r2, r4
 12738 020a 3946     		mov	r1, r7
 12739 020c 4E48     		ldr	r0, .L710+240
 12740 020e FFF7FEFF 		bl	__aeabi_atexit
 12741              	.LVL848:
 12742              	.LBB2251:
 12743              	.LBI2251:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12744              		.loc 1 40 5 is_stmt 1 view .LVU3627
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12745              		.loc 1 40 5 is_stmt 0 view .LVU3628
 12746              	.LBE2251:
 182:Veno-Echo.cpp **** Switch ClockIn;
 12747              		.loc 19 182 8 view .LVU3629
 12748 0212 2246     		mov	r2, r4
 12749 0214 3946     		mov	r1, r7
 12750 0216 4D48     		ldr	r0, .L710+244
 12751 0218 FFF7FEFF 		bl	__aeabi_atexit
 12752              	.LVL849:
 12753              	.LBB2252:
 12754              	.LBI2252:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12755              		.loc 1 40 5 is_stmt 1 view .LVU3630
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12756              		.loc 1 40 5 is_stmt 0 view .LVU3631
 12757              	.LBE2252:
 183:Veno-Echo.cpp **** 
 12758              		.loc 19 183 8 view .LVU3632
 12759 021c 2246     		mov	r2, r4
 12760 021e 3946     		mov	r1, r7
 12761 0220 4B48     		ldr	r0, .L710+248
 12762 0222 FFF7FEFF 		bl	__aeabi_atexit
 12763              	.LVL850:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 381


 12764              	.LBB2253:
 12765              	.LBI2253:
  41:taptempo.h    ****     {
 12766              		.loc 13 41 5 is_stmt 1 view .LVU3633
 12767              	.LBB2254:
 12768              	.LBB2255:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12769              		.loc 13 43 9 view .LVU3634
  46:taptempo.h    ****         lastTapLength_ = 0;
 12770              		.loc 13 46 17 is_stmt 0 view .LVU3635
 12771 0226 5027     		movs	r7, #80
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12772              		.loc 13 43 18 view .LVU3636
 12773 0228 4A48     		ldr	r0, .L710+252
  45:taptempo.h    ****         mintap_ = 80;
 12774              		.loc 13 45 17 view .LVU3637
 12775 022a 4FF4FA6C 		mov	ip, #2000
  44:taptempo.h    ****         maxtap_ = 2000;
 12776              		.loc 13 44 24 view .LVU3638
 12777 022e DFF834E1 		ldr	lr, .L710+268
  51:taptempo.h    **** 
 12778              		.loc 13 51 19 view .LVU3639
 12779 0232 4FF07E53 		mov	r3, #1065353216
  48:taptempo.h    ****         lastTime_ = 0;
 12780              		.loc 13 48 16 view .LVU3640
 12781 0236 484D     		ldr	r5, .L710+256
 12782              	.LBE2255:
 12783              	.LBE2254:
 12784              	.LBE2253:
 186:Veno-Echo.cpp **** 
 12785              		.loc 19 186 10 view .LVU3641
 12786 0238 2246     		mov	r2, r4
 12787              	.LBB2260:
 12788              	.LBB2258:
 12789              	.LBB2256:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12790              		.loc 13 43 18 view .LVU3642
 12791 023a 0676     		strb	r6, [r0, #24]
  44:taptempo.h    ****         maxtap_ = 2000;
 12792              		.loc 13 44 9 is_stmt 1 view .LVU3643
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12793              		.loc 13 50 22 is_stmt 0 view .LVU3644
 12794 023c 8660     		str	r6, [r0, #8]
  44:taptempo.h    ****         maxtap_ = 2000;
 12795              		.loc 13 44 24 view .LVU3645
 12796 023e C0F81CE0 		str	lr, [r0, #28]	@ float
  45:taptempo.h    ****         mintap_ = 80;
 12797              		.loc 13 45 9 is_stmt 1 view .LVU3646
  48:taptempo.h    ****         lastTime_ = 0;
 12798              		.loc 13 48 16 is_stmt 0 view .LVU3647
 12799 0242 0562     		str	r5, [r0, #32]	@ float
 12800              	.LBE2256:
 12801              	.LBE2258:
 12802              	.LBE2260:
 186:Veno-Echo.cpp **** 
 12803              		.loc 19 186 10 view .LVU3648
 12804 0244 4549     		ldr	r1, .L710+260
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 382


 12805              	.LBB2261:
 12806              	.LBB2259:
 12807              	.LBB2257:
  51:taptempo.h    **** 
 12808              		.loc 13 51 19 view .LVU3649
 12809 0246 4362     		str	r3, [r0, #36]	@ float
  49:taptempo.h    ****         currentTime_ = 0;
 12810              		.loc 13 49 19 view .LVU3650
 12811 0248 C0E90366 		strd	r6, r6, [r0, #12]
  46:taptempo.h    ****         lastTapLength_ = 0;
 12812              		.loc 13 46 17 view .LVU3651
 12813 024c C0E9007C 		strd	r7, ip, [r0]
  47:taptempo.h    ****         tempo_ = 500.0f;
 12814              		.loc 13 47 9 is_stmt 1 view .LVU3652
  48:taptempo.h    ****         lastTime_ = 0;
 12815              		.loc 13 48 9 view .LVU3653
  49:taptempo.h    ****         currentTime_ = 0;
 12816              		.loc 13 49 9 view .LVU3654
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 12817              		.loc 13 50 9 view .LVU3655
  51:taptempo.h    **** 
 12818              		.loc 13 51 9 view .LVU3656
 12819              	.LVL851:
  51:taptempo.h    **** 
 12820              		.loc 13 51 9 is_stmt 0 view .LVU3657
 12821              	.LBE2257:
 12822              	.LBE2259:
 12823              	.LBE2261:
 12824              	.LBE2264:
 12825              	.LBE2268:
 12826              		.loc 19 2136 1 view .LVU3658
 12827 0250 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12828              		.cfi_restore 14
 12829              		.cfi_restore 8
 12830              		.cfi_restore 7
 12831              		.cfi_restore 6
 12832              		.cfi_restore 5
 12833              		.cfi_restore 4
 12834              		.cfi_def_cfa_offset 0
 12835              	.LBB2269:
 12836              	.LBB2265:
 186:Veno-Echo.cpp **** 
 12837              		.loc 19 186 10 view .LVU3659
 12838 0254 FFF7FEBF 		b	__aeabi_atexit
 12839              	.LVL852:
 12840              	.L711:
 12841              		.align	2
 12842              	.L710:
 12843 0258 00000000 		.word	.LANCHOR4
 12844 025c 00000000 		.word	__dso_handle
 12845 0260 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12846 0264 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12847 0268 00000000 		.word	.LANCHOR29
 12848 026c 00000000 		.word	.LANCHOR30
 12849 0270 00000000 		.word	.LANCHOR16
 12850 0274 00000000 		.word	.LANCHOR17
 12851 0278 00000000 		.word	.LANCHOR31
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 383


 12852 027c 00000000 		.word	.LANCHOR32
 12853 0280 00000000 		.word	.LANCHOR18
 12854 0284 00000000 		.word	.LANCHOR19
 12855 0288 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12856 028c 00000000 		.word	.LANCHOR58
 12857 0290 17B7D138 		.word	953267991
 12858 0294 00000000 		.word	.LANCHOR131
 12859 0298 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12860 029c 00000000 		.word	.LANCHOR132
 12861 02a0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12862 02a4 00000000 		.word	.LANCHOR108
 12863 02a8 00000000 		.word	.LANCHOR109
 12864 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12865 02b0 00000000 		.word	delMemsL
 12866 02b4 00000000 		.word	delMemsR
 12867 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
 12868 02bc 00000000 		.word	delMemsL_REV
 12869 02c0 00000000 		.word	delMemsR_REV
 12870 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 12871 02c8 00000000 		.word	.LANCHOR0
 12872 02cc 00000000 		.word	.LANCHOR1
 12873 02d0 00000000 		.word	.LANCHOR94
 12874 02d4 00000000 		.word	.LANCHOR95
 12875 02d8 00000000 		.word	.LANCHOR96
 12876 02dc 00000000 		.word	.LANCHOR97
 12877 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12878 02e4 00000000 		.word	.LANCHOR98
 12879 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 12880 02ec 00000000 		.word	.LANCHOR72
 12881 02f0 00000000 		.word	.LANCHOR102
 12882 02f4 00000000 		.word	.LANCHOR103
 12883 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12884 02fc 00000000 		.word	.LANCHOR104
 12885 0300 00000000 		.word	.LANCHOR105
 12886 0304 00000000 		.word	.LANCHOR106
 12887 0308 00000000 		.word	.LANCHOR107
 12888 030c 00000000 		.word	.LANCHOR47
 12889 0310 00000000 		.word	.LANCHOR119
 12890 0314 00000000 		.word	.LANCHOR120
 12891 0318 00000000 		.word	.LANCHOR117
 12892 031c 00000000 		.word	.LANCHOR118
 12893 0320 00000000 		.word	.LANCHOR123
 12894 0324 00000000 		.word	.LANCHOR124
 12895 0328 00000000 		.word	.LANCHOR121
 12896 032c 00000000 		.word	.LANCHOR122
 12897 0330 00000000 		.word	.LANCHOR125
 12898 0334 00000000 		.word	.LANCHOR126
 12899 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12900 033c 00000000 		.word	.LANCHOR127
 12901 0340 00000000 		.word	.LANCHOR128
 12902 0344 00000000 		.word	.LANCHOR99
 12903 0348 00000000 		.word	.LANCHOR100
 12904 034c 00000000 		.word	.LANCHOR101
 12905 0350 00000000 		.word	.LANCHOR70
 12906 0354 00000000 		.word	.LANCHOR73
 12907 0358 0000FA43 		.word	1140457472
 12908 035c 00000000 		.word	_ZN8TaptempoD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 384


 12909 0360 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12910 0364 0000A03F 		.word	1067450368
 12911              	.LBE2265:
 12912              	.LBE2269:
 12913              		.cfi_endproc
 12914              	.LFE4897:
 12916              		.section	.init_array,"aw",%init_array
 12917              		.align	2
 12918 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12919              		.global	AltControls
 12920              		.global	BaseTempo
 12921              		.global	ClockIn
 12922              		.global	Sync
 12923              		.global	ReverseGateR
 12924              		.global	ReverseGateL
 12925              		.global	save_flag
 12926              		.global	delayR_flag
 12927              		.global	delayL_flag
 12928              		.global	PostFilters
 12929              		.global	ClockInFlag
 12930              		.global	mute
 12931              		.global	shift
 12932              		.global	syncMode
 12933              		.global	modulation_CV_Raw
 12934              		.global	ModDepth
 12935              		.global	div_R
 12936              		.global	div_L
 12937              		.global	filterXfade
 12938              		.global	width_CV
 12939              		.global	width
 12940              		.global	drywet_CV
 12941              		.global	drywet
 12942              		.global	crossfeedback_CV
 12943              		.global	crossfeedback
 12944              		.global	feedbackR_CV
 12945              		.global	feedbackR
 12946              		.global	feedbackL_CV
 12947              		.global	feedbackL
 12948              		.global	delayTimeR_CV
 12949              		.global	delayTimeL_CV
 12950              		.global	tempoLED_BASE
 12951              		.global	Tap_Button
 12952              		.global	Rev_R_sw
 12953              		.global	Rev_L_sw
 12954              		.global	HPF_sw
 12955              		.global	LPF_sw
 12956              		.global	delaysR_REV
 12957              		.global	delaysL_REV
 12958              		.global	delayR
 12959              		.global	delayL
 12960              		.global	delMemsR_REV
 12961              		.global	delMemsL_REV
 12962              		.global	delMemsR
 12963              		.global	delMemsL
 12964              		.section	.bss.AltControls,"aw",%nobits
 12965              		.align	2
 12966              		.set	.LANCHOR20,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 385


 12969              	AltControls:
 12970 0000 00000000 		.space	32
 12970      00000000 
 12970      00000000 
 12970      00000000 
 12970      00000000 
 12971              		.section	.bss.BaseTempo,"aw",%nobits
 12972              		.align	2
 12973              		.set	.LANCHOR73,. + 0
 12976              	BaseTempo:
 12977 0000 00000000 		.space	40
 12977      00000000 
 12977      00000000 
 12977      00000000 
 12977      00000000 
 12978              		.section	.bss.ClockIn,"aw",%nobits
 12979              		.align	2
 12980              		.set	.LANCHOR70,. + 0
 12983              	ClockIn:
 12984 0000 00000000 		.space	16
 12984      00000000 
 12984      00000000 
 12984      00000000 
 12985              		.section	.bss.ClockInFlag,"aw",%nobits
 12988              	ClockInFlag:
 12989 0000 00       		.space	1
 12990              		.section	.bss.HPF_sw,"aw",%nobits
 12991              		.align	2
 12992              		.set	.LANCHOR95,. + 0
 12995              	HPF_sw:
 12996 0000 00000000 		.space	52
 12996      00000000 
 12996      00000000 
 12996      00000000 
 12996      00000000 
 12997              		.section	.bss.LPF_sw,"aw",%nobits
 12998              		.align	2
 12999              		.set	.LANCHOR94,. + 0
 13002              	LPF_sw:
 13003 0000 00000000 		.space	52
 13003      00000000 
 13003      00000000 
 13003      00000000 
 13003      00000000 
 13004              		.section	.bss.ModDepth,"aw",%nobits
 13005              		.align	2
 13006              		.set	.LANCHOR50,. + 0
 13009              	ModDepth:
 13010 0000 00000000 		.space	4
 13011              		.section	.bss.PostFilters,"aw",%nobits
 13012              		.set	.LANCHOR65,. + 0
 13015              	PostFilters:
 13016 0000 00       		.space	1
 13017              		.section	.bss.Rev_L_sw,"aw",%nobits
 13018              		.align	2
 13019              		.set	.LANCHOR96,. + 0
 13022              	Rev_L_sw:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 386


 13023 0000 00000000 		.space	52
 13023      00000000 
 13023      00000000 
 13023      00000000 
 13023      00000000 
 13024              		.section	.bss.Rev_R_sw,"aw",%nobits
 13025              		.align	2
 13026              		.set	.LANCHOR97,. + 0
 13029              	Rev_R_sw:
 13030 0000 00000000 		.space	52
 13030      00000000 
 13030      00000000 
 13030      00000000 
 13030      00000000 
 13031              		.section	.bss.ReverseGateL,"aw",%nobits
 13032              		.align	2
 13033              		.set	.LANCHOR99,. + 0
 13036              	ReverseGateL:
 13037 0000 00000000 		.space	16
 13037      00000000 
 13037      00000000 
 13037      00000000 
 13038              		.section	.bss.ReverseGateR,"aw",%nobits
 13039              		.align	2
 13040              		.set	.LANCHOR100,. + 0
 13043              	ReverseGateR:
 13044 0000 00000000 		.space	16
 13044      00000000 
 13044      00000000 
 13044      00000000 
 13045              		.section	.bss.Sync,"aw",%nobits
 13046              		.align	2
 13047              		.set	.LANCHOR101,. + 0
 13050              	Sync:
 13051 0000 00000000 		.space	16
 13051      00000000 
 13051      00000000 
 13051      00000000 
 13052              		.section	.bss.Tap_Button,"aw",%nobits
 13053              		.align	2
 13054              		.set	.LANCHOR98,. + 0
 13057              	Tap_Button:
 13058 0000 00000000 		.space	52
 13058      00000000 
 13058      00000000 
 13058      00000000 
 13058      00000000 
 13059              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13060              		.align	2
 13061              		.set	.LANCHOR102,. + 0
 13064              	_ZL10FwdRevLEnv:
 13065 0000 00000000 		.space	56
 13065      00000000 
 13065      00000000 
 13065      00000000 
 13065      00000000 
 13066              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 387


 13067              		.align	2
 13068              		.set	.LANCHOR103,. + 0
 13071              	_ZL10FwdRevREnv:
 13072 0000 00000000 		.space	56
 13072      00000000 
 13072      00000000 
 13072      00000000 
 13072      00000000 
 13073              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13074              		.align	2
 13075              		.set	.LANCHOR117,. + 0
 13078              	_ZL10HPF_LXfade:
 13079 0000 00000000 		.space	8
 13079      00000000 
 13080              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13081              		.align	2
 13082              		.set	.LANCHOR18,. + 0
 13085              	_ZL10HPF_L_post:
 13086 0000 00000000 		.space	76
 13086      00000000 
 13086      00000000 
 13086      00000000 
 13086      00000000 
 13087              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13088              		.align	2
 13089              		.set	.LANCHOR118,. + 0
 13092              	_ZL10HPF_RXfade:
 13093 0000 00000000 		.space	8
 13093      00000000 
 13094              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13095              		.align	2
 13096              		.set	.LANCHOR19,. + 0
 13099              	_ZL10HPF_R_post:
 13100 0000 00000000 		.space	76
 13100      00000000 
 13100      00000000 
 13100      00000000 
 13100      00000000 
 13101              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13102              		.align	2
 13103              		.set	.LANCHOR119,. + 0
 13106              	_ZL10LPF_LXfade:
 13107 0000 00000000 		.space	8
 13107      00000000 
 13108              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13109              		.align	2
 13110              		.set	.LANCHOR31,. + 0
 13113              	_ZL10LPF_L_post:
 13114 0000 00000000 		.space	76
 13114      00000000 
 13114      00000000 
 13114      00000000 
 13114      00000000 
 13115              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13116              		.align	2
 13117              		.set	.LANCHOR120,. + 0
 13120              	_ZL10LPF_RXfade:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 388


 13121 0000 00000000 		.space	8
 13121      00000000 
 13122              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13123              		.align	2
 13124              		.set	.LANCHOR32,. + 0
 13127              	_ZL10LPF_R_post:
 13128 0000 00000000 		.space	76
 13128      00000000 
 13128      00000000 
 13128      00000000 
 13128      00000000 
 13129              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13130              		.align	2
 13131              		.set	.LANCHOR47,. + 0
 13134              	_ZL10WidthXfade:
 13135 0000 00000000 		.space	8
 13135      00000000 
 13136              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13137              		.align	2
 13138              		.set	.LANCHOR108,. + 0
 13141              	_ZL11DcBlock_LFB:
 13142 0000 00000000 		.space	12
 13142      00000000 
 13142      00000000 
 13143              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13144              		.align	2
 13145              		.set	.LANCHOR109,. + 0
 13148              	_ZL11DcBlock_RFB:
 13149 0000 00000000 		.space	12
 13149      00000000 
 13149      00000000 
 13150              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13151              		.align	2
 13152              		.set	.LANCHOR125,. + 0
 13155              	_ZL11FilterMix_L:
 13156 0000 00000000 		.space	8
 13156      00000000 
 13157              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13158              		.align	2
 13159              		.set	.LANCHOR126,. + 0
 13162              	_ZL11FilterMix_R:
 13163 0000 00000000 		.space	8
 13163      00000000 
 13164              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13165              		.align	2
 13166              		.set	.LANCHOR106,. + 0
 13169              	_ZL12FwdRevLXfade:
 13170 0000 00000000 		.space	8
 13170      00000000 
 13171              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13172              		.align	2
 13173              		.set	.LANCHOR107,. + 0
 13176              	_ZL12FwdRevRXfade:
 13177 0000 00000000 		.space	8
 13177      00000000 
 13178              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13179              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 389


 13180              		.set	.LANCHOR121,. + 0
 13183              	_ZL15HPF_LXfade_post:
 13184 0000 00000000 		.space	8
 13184      00000000 
 13185              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13186              		.align	2
 13187              		.set	.LANCHOR122,. + 0
 13190              	_ZL15HPF_RXfade_post:
 13191 0000 00000000 		.space	8
 13191      00000000 
 13192              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13193              		.align	2
 13194              		.set	.LANCHOR123,. + 0
 13197              	_ZL15LPF_LXfade_post:
 13198 0000 00000000 		.space	8
 13198      00000000 
 13199              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13200              		.align	2
 13201              		.set	.LANCHOR124,. + 0
 13204              	_ZL15LPF_RXfade_post:
 13205 0000 00000000 		.space	8
 13205      00000000 
 13206              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13207              		.align	2
 13208              		.set	.LANCHOR127,. + 0
 13211              	_ZL16FilterMix_L_post:
 13212 0000 00000000 		.space	8
 13212      00000000 
 13213              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13214              		.align	2
 13215              		.set	.LANCHOR128,. + 0
 13218              	_ZL16FilterMix_R_post:
 13219 0000 00000000 		.space	8
 13219      00000000 
 13220              		.section	.bss._ZL2hw,"aw",%nobits
 13221              		.align	2
 13222              		.set	.LANCHOR4,. + 0
 13225              	_ZL2hw:
 13226 0000 00000000 		.space	60
 13226      00000000 
 13226      00000000 
 13226      00000000 
 13226      00000000 
 13227              		.section	.bss._ZL3lfo,"aw",%nobits
 13228              		.align	2
 13229              		.set	.LANCHOR58,. + 0
 13232              	_ZL3lfo:
 13233 0000 00000000 		.space	40
 13233      00000000 
 13233      00000000 
 13233      00000000 
 13233      00000000 
 13234              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13235              		.align	2
 13236              		.set	.LANCHOR16,. + 0
 13239              	_ZL5HPF_L:
 13240 0000 00000000 		.space	76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 390


 13240      00000000 
 13240      00000000 
 13240      00000000 
 13240      00000000 
 13241              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13242              		.align	2
 13243              		.set	.LANCHOR17,. + 0
 13246              	_ZL5HPF_R:
 13247 0000 00000000 		.space	76
 13247      00000000 
 13247      00000000 
 13247      00000000 
 13247      00000000 
 13248              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13249              		.align	2
 13250              		.set	.LANCHOR29,. + 0
 13253              	_ZL5LPF_L:
 13254 0000 00000000 		.space	76
 13254      00000000 
 13254      00000000 
 13254      00000000 
 13254      00000000 
 13255              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13256              		.align	2
 13257              		.set	.LANCHOR30,. + 0
 13260              	_ZL5LPF_R:
 13261 0000 00000000 		.space	76
 13261      00000000 
 13261      00000000 
 13261      00000000 
 13261      00000000 
 13262              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13263              		.align	2
 13264              		.set	.LANCHOR105,. + 0
 13267              	_ZL7HPF_Env:
 13268 0000 00000000 		.space	56
 13268      00000000 
 13268      00000000 
 13268      00000000 
 13268      00000000 
 13269              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13270              		.align	2
 13271              		.set	.LANCHOR104,. + 0
 13274              	_ZL7LPF_Env:
 13275 0000 00000000 		.space	56
 13275      00000000 
 13275      00000000 
 13275      00000000 
 13275      00000000 
 13276              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13277              		.align	2
 13278              		.set	.LANCHOR131,. + 0
 13281              	_ZL7LeftEnv:
 13282 0000 00000000 		.space	24
 13282      00000000 
 13282      00000000 
 13282      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 391


 13282      00000000 
 13283              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13284              		.align	2
 13285              		.set	.LANCHOR132,. + 0
 13288              	_ZL8RightEnv:
 13289 0000 00000000 		.space	24
 13289      00000000 
 13289      00000000 
 13289      00000000 
 13289      00000000 
 13290              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13291              		.align	2
 13292              		.set	.LANCHOR68,. + 0
 13295              	_ZZ10Update_ModvE13modulation_CV:
 13296 0000 00000000 		.space	4
 13297              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13298              		.align	2
 13299              		.set	.LANCHOR69,. + 0
 13302              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13303 0000 00000000 		.space	4
 13304              		.section	.bss._ZZ11UpdateClockvE10divCounter,"aw",%nobits
 13305              		.align	2
 13306              		.set	.LANCHOR71,. + 0
 13309              	_ZZ11UpdateClockvE10divCounter:
 13310 0000 00000000 		.space	4
 13311              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 13312              		.align	2
 13313              		.set	.LANCHOR45,. + 0
 13316              	_ZZ12Update_widthvE10width_Last:
 13317 0000 00000000 		.space	4
 13318              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 13319              		.align	2
 13320              		.set	.LANCHOR49,. + 0
 13323              	_ZZ12Update_widthvE12ModDepth_new:
 13324 0000 00000000 		.space	4
 13325              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 13326              		.set	.LANCHOR43,. + 0
 13329              	_ZZ12Update_widthvE12width_pickup:
 13330 0000 00       		.space	1
 13331              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 13332              		.set	.LANCHOR48,. + 0
 13335              	_ZZ12Update_widthvE15ModDepth_pickup:
 13336 0000 00       		.space	1
 13337              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 13338              		.set	.LANCHOR42,. + 0
 13341              	_ZZ12Update_widthvE9lastShift:
 13342 0000 00       		.space	1
 13343              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 13344              		.align	2
 13345              		.set	.LANCHOR44,. + 0
 13348              	_ZZ12Update_widthvE9width_new:
 13349 0000 00000000 		.space	4
 13350              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 13351              		.set	.LANCHOR39,. + 0
 13354              	_ZZ13Update_drywetvE10Res_pickup:
 13355 0000 00       		.space	1
 13356              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 392


 13357              		.align	2
 13358              		.set	.LANCHOR36,. + 0
 13361              	_ZZ13Update_drywetvE10drywet_new:
 13362 0000 00000000 		.space	4
 13363              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13364              		.align	2
 13365              		.set	.LANCHOR37,. + 0
 13368              	_ZZ13Update_drywetvE11drywet_Last:
 13369 0000 00000000 		.space	4
 13370              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 13371              		.set	.LANCHOR35,. + 0
 13374              	_ZZ13Update_drywetvE13drywet_pickup:
 13375 0000 00       		.space	1
 13376              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 13377              		.align	2
 13378              		.set	.LANCHOR40,. + 0
 13381              	_ZZ13Update_drywetvE7Res_new:
 13382 0000 00000000 		.space	4
 13383              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13384              		.set	.LANCHOR34,. + 0
 13387              	_ZZ13Update_drywetvE9lastShift:
 13388 0000 00       		.space	1
 13389              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13390              		.align	2
 13391              		.set	.LANCHOR111,. + 0
 13394              	_ZZ14Update_ButtonsvE11buttonstate:
 13395 0000 00000000 		.space	4
 13396              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13397              		.align	2
 13398              		.set	.LANCHOR112,. + 0
 13401              	_ZZ14Update_ButtonsvE9resetTime:
 13402 0000 00000000 		.space	4
 13403              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 13404              		.align	2
 13405              		.set	.LANCHOR113,. + 0
 13408              	_ZZ14Update_ButtonsvE9shiftTime:
 13409 0000 00000000 		.space	4
 13410              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 13411              		.align	2
 13412              		.set	.LANCHOR15,. + 0
 13415              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 13416 0000 00000000 		.space	4
 13417              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 13418              		.align	2
 13419              		.set	.LANCHOR11,. + 0
 13422              	_ZZ16Update_feedbackLvE13feedbackL_new:
 13423 0000 00000000 		.space	4
 13424              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13425              		.align	2
 13426              		.set	.LANCHOR12,. + 0
 13429              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13430 0000 00000000 		.space	4
 13431              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13432              		.set	.LANCHOR14,. + 0
 13435              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13436 0000 00       		.space	1
 13437              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 393


 13438              		.set	.LANCHOR10,. + 0
 13441              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13442 0000 00       		.space	1
 13443              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13444              		.set	.LANCHOR9,. + 0
 13447              	_ZZ16Update_feedbackLvE9lastShift:
 13448 0000 00       		.space	1
 13449              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 13450              		.align	2
 13451              		.set	.LANCHOR28,. + 0
 13454              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 13455 0000 00000000 		.space	4
 13456              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 13457              		.align	2
 13458              		.set	.LANCHOR25,. + 0
 13461              	_ZZ16Update_feedbackRvE13feedbackR_new:
 13462 0000 00000000 		.space	4
 13463              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13464              		.align	2
 13465              		.set	.LANCHOR24,. + 0
 13468              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13469 0000 00000000 		.space	4
 13470              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13471              		.set	.LANCHOR27,. + 0
 13474              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13475 0000 00       		.space	1
 13476              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13477              		.set	.LANCHOR23,. + 0
 13480              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13481 0000 00       		.space	1
 13482              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13483              		.set	.LANCHOR22,. + 0
 13486              	_ZZ16Update_feedbackRvE9lastShift:
 13487 0000 00       		.space	1
 13488              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 13489              		.align	2
 13490              		.set	.LANCHOR90,. + 0
 13493              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 13494 0000 00000000 		.space	4
 13495              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 13496              		.align	2
 13497              		.set	.LANCHOR91,. + 0
 13500              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 13501 0000 00000000 		.space	4
 13502              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 13503              		.align	2
 13504              		.set	.LANCHOR93,. + 0
 13507              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 13508 0000 00000000 		.space	4
 13509              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13510              		.set	.LANCHOR89,. + 0
 13513              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13514 0000 00       		.space	1
 13515              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13516              		.set	.LANCHOR92,. + 0
 13519              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13520 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 394


 13521              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13522              		.align	2
 13523              		.set	.LANCHOR87,. + 0
 13526              	_ZZ17Update_DelayTimeLvE8counterL:
 13527 0000 00000000 		.space	4
 13528              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13529              		.set	.LANCHOR88,. + 0
 13532              	_ZZ17Update_DelayTimeLvE9lastShift:
 13533 0000 00       		.space	1
 13534              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 13535              		.align	2
 13536              		.set	.LANCHOR85,. + 0
 13539              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 13540 0000 00000000 		.space	4
 13541              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 13542              		.align	2
 13543              		.set	.LANCHOR82,. + 0
 13546              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 13547 0000 00000000 		.space	4
 13548              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 13549              		.align	2
 13550              		.set	.LANCHOR83,. + 0
 13553              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 13554 0000 00000000 		.space	4
 13555              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13556              		.set	.LANCHOR84,. + 0
 13559              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13560 0000 00       		.space	1
 13561              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13562              		.set	.LANCHOR81,. + 0
 13565              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13566 0000 00       		.space	1
 13567              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13568              		.align	2
 13569              		.set	.LANCHOR79,. + 0
 13572              	_ZZ17Update_DelayTimeRvE8counterR:
 13573 0000 00000000 		.space	4
 13574              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13575              		.set	.LANCHOR80,. + 0
 13578              	_ZZ17Update_DelayTimeRvE9lastShift:
 13579 0000 00       		.space	1
 13580              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 13581              		.align	2
 13582              		.set	.LANCHOR64,. + 0
 13585              	_ZZ18Update_filterXfadevE15PostFilters_new:
 13586 0000 00000000 		.space	4
 13587              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 13588              		.align	2
 13589              		.set	.LANCHOR61,. + 0
 13592              	_ZZ18Update_filterXfadevE15filterXfade_new:
 13593 0000 00000000 		.space	4
 13594              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 13595              		.align	2
 13596              		.set	.LANCHOR66,. + 0
 13599              	_ZZ18Update_filterXfadevE16filterXfade_last:
 13600 0000 00000000 		.space	4
 13601              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 395


 13602              		.set	.LANCHOR63,. + 0
 13605              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 13606 0000 00       		.space	1
 13607              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 13608              		.set	.LANCHOR60,. + 0
 13611              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 13612 0000 00       		.space	1
 13613              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 13614              		.set	.LANCHOR59,. + 0
 13617              	_ZZ18Update_filterXfadevE9lastShift:
 13618 0000 00       		.space	1
 13619              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 13620              		.align	2
 13621              		.set	.LANCHOR56,. + 0
 13624              	_ZZ20Update_crossfeedbackvE11modRate_new:
 13625 0000 00000000 		.space	4
 13626              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 13627              		.set	.LANCHOR55,. + 0
 13630              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 13631 0000 00       		.space	1
 13632              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 13633              		.align	2
 13634              		.set	.LANCHOR53,. + 0
 13637              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 13638 0000 00000000 		.space	4
 13639              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 13640              		.align	2
 13641              		.set	.LANCHOR57,. + 0
 13644              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 13645 0000 00000000 		.space	4
 13646              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 13647              		.set	.LANCHOR52,. + 0
 13650              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 13651 0000 00       		.space	1
 13652              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 13653              		.set	.LANCHOR51,. + 0
 13656              	_ZZ20Update_crossfeedbackvE9lastShift:
 13657 0000 00       		.space	1
 13658              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13659              		.align	2
 13660              		.set	.LANCHOR129,. + 0
 13663              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13664 0000 00000000 		.space	4
 13665              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13666              		.align	2
 13667              		.set	.LANCHOR130,. + 0
 13670              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13671 0000 00000000 		.space	4
 13672              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13673              		.align	2
 13674              		.set	.LANCHOR115,. + 0
 13677              	_ZZL13AudioCallbackPfS_jE7Counter:
 13678 0000 00000000 		.space	4
 13679              		.section	.bss.crossfeedback,"aw",%nobits
 13680              		.align	2
 13681              		.set	.LANCHOR54,. + 0
 13684              	crossfeedback:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 396


 13685 0000 00000000 		.space	4
 13686              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13687              		.align	2
 13690              	crossfeedback_CV:
 13691 0000 00000000 		.space	4
 13692              		.section	.bss.delayL,"aw",%nobits
 13693              		.align	2
 13694              		.set	.LANCHOR0,. + 0
 13697              	delayL:
 13698 0000 00000000 		.space	284
 13698      00000000 
 13698      00000000 
 13698      00000000 
 13698      00000000 
 13699              		.section	.bss.delayR,"aw",%nobits
 13700              		.align	2
 13701              		.set	.LANCHOR1,. + 0
 13704              	delayR:
 13705 0000 00000000 		.space	284
 13705      00000000 
 13705      00000000 
 13705      00000000 
 13705      00000000 
 13706              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13707              		.align	2
 13708              		.set	.LANCHOR5,. + 0
 13711              	delayTimeL_CV:
 13712 0000 00000000 		.space	4
 13713              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13714              		.align	2
 13715              		.set	.LANCHOR6,. + 0
 13718              	delayTimeR_CV:
 13719 0000 00000000 		.space	4
 13720              		.section	.bss.delaysL_REV,"aw",%nobits
 13721              		.align	2
 13722              		.set	.LANCHOR2,. + 0
 13725              	delaysL_REV:
 13726 0000 00000000 		.space	8
 13726      00000000 
 13727              		.section	.bss.delaysR_REV,"aw",%nobits
 13728              		.align	2
 13729              		.set	.LANCHOR3,. + 0
 13732              	delaysR_REV:
 13733 0000 00000000 		.space	8
 13733      00000000 
 13734              		.section	.bss.div_L,"aw",%nobits
 13735              		.set	.LANCHOR75,. + 0
 13738              	div_L:
 13739 0000 00       		.space	1
 13740              		.section	.bss.div_R,"aw",%nobits
 13741              		.set	.LANCHOR76,. + 0
 13744              	div_R:
 13745 0000 00       		.space	1
 13746              		.section	.bss.drywet_CV,"aw",%nobits
 13747              		.align	2
 13748              		.set	.LANCHOR33,. + 0
 13751              	drywet_CV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 397


 13752 0000 00000000 		.space	4
 13753              		.section	.bss.feedbackL,"aw",%nobits
 13754              		.align	2
 13755              		.set	.LANCHOR13,. + 0
 13758              	feedbackL:
 13759 0000 00000000 		.space	4
 13760              		.section	.bss.feedbackL_CV,"aw",%nobits
 13761              		.align	2
 13762              		.set	.LANCHOR7,. + 0
 13765              	feedbackL_CV:
 13766 0000 00000000 		.space	4
 13767              		.section	.bss.feedbackR,"aw",%nobits
 13768              		.align	2
 13769              		.set	.LANCHOR26,. + 0
 13772              	feedbackR:
 13773 0000 00000000 		.space	4
 13774              		.section	.bss.feedbackR_CV,"aw",%nobits
 13775              		.align	2
 13776              		.set	.LANCHOR21,. + 0
 13779              	feedbackR_CV:
 13780 0000 00000000 		.space	4
 13781              		.section	.bss.filterXfade,"aw",%nobits
 13782              		.align	2
 13783              		.set	.LANCHOR62,. + 0
 13786              	filterXfade:
 13787 0000 00000000 		.space	4
 13788              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13789              		.align	2
 13790              		.set	.LANCHOR67,. + 0
 13793              	modulation_CV_Raw:
 13794 0000 00000000 		.space	4
 13795              		.section	.bss.mute,"aw",%nobits
 13796              		.set	.LANCHOR114,. + 0
 13799              	mute:
 13800 0000 00       		.space	1
 13801              		.section	.bss.save_flag,"aw",%nobits
 13802              		.align	2
 13803              		.set	.LANCHOR116,. + 0
 13806              	save_flag:
 13807 0000 00       		.space	1
 13808              		.section	.bss.shift,"aw",%nobits
 13809              		.set	.LANCHOR8,. + 0
 13812              	shift:
 13813 0000 00       		.space	1
 13814              		.section	.bss.syncMode,"aw",%nobits
 13815              		.set	.LANCHOR74,. + 0
 13818              	syncMode:
 13819 0000 00       		.space	1
 13820              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13821              		.align	2
 13822              		.set	.LANCHOR72,. + 0
 13825              	tempoLED_BASE:
 13826 0000 00000000 		.space	68
 13826      00000000 
 13826      00000000 
 13826      00000000 
 13826      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 398


 13827              		.section	.bss.width_CV,"aw",%nobits
 13828              		.align	2
 13829              		.set	.LANCHOR41,. + 0
 13832              	width_CV:
 13833 0000 00000000 		.space	4
 13834              		.section	.data.delayL_flag,"aw"
 13835              		.set	.LANCHOR77,. + 0
 13838              	delayL_flag:
 13839 0000 01       		.byte	1
 13840              		.section	.data.delayR_flag,"aw"
 13841              		.set	.LANCHOR78,. + 0
 13844              	delayR_flag:
 13845 0000 01       		.byte	1
 13846              		.section	.data.drywet,"aw"
 13847              		.align	2
 13848              		.set	.LANCHOR38,. + 0
 13851              	drywet:
 13852 0000 0000003F 		.word	1056964608
 13853              		.section	.data.width,"aw"
 13854              		.align	2
 13855              		.set	.LANCHOR46,. + 0
 13858              	width:
 13859 0000 0000803F 		.word	1065353216
 13860              		.section	.rodata.CSWTCH.335,"a"
 13861              		.align	2
 13862              		.set	.LANCHOR86,. + 0
 13865              	CSWTCH.335:
 13866 0000 0000C03F 		.word	1069547520
 13867 0004 00000040 		.word	1073741824
 13868 0008 00004040 		.word	1077936128
 13869              		.section	.rodata._ZL18defaultAltControls,"a"
 13870              		.align	2
 13871              		.set	.LANCHOR110,. + 0
 13874              	_ZL18defaultAltControls:
 13875 0000 00650148 		.word	1208050944
 13876 0004 0000803F 		.word	1065353216
 13877 0008 00000000 		.word	0
 13878 000c 9A99A140 		.word	1084332442
 13879 0010 00004843 		.word	1128792064
 13880 0014 00803B46 		.word	1178304512
 13881 0018 00000000 		.word	0
 13882 001c 00000000 		.word	0
 13883              		.section	.sdram_bss,"aw"
 13884              		.align	2
 13887              	delMemsR_REV:
 13888 0000 00000000 		.space	2400040
 13888      00000000 
 13888      00000000 
 13888      00000000 
 13888      00000000 
 13891              	delMemsL_REV:
 13892 249f28 00000000 		.space	2400040
 13892      00000000 
 13892      00000000 
 13892      00000000 
 13892      00000000 
 13895              	delMemsR:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 399


 13896 493e50 00000000 		.space	6912136
 13896      00000000 
 13896      00000000 
 13896      00000000 
 13896      00000000 
 13899              	delMemsL:
 13900 b2b6d8 00000000 		.space	6912136
 13900      00000000 
 13900      00000000 
 13900      00000000 
 13900      00000000 
 13901              		.text
 13902              	.Letext0:
 13903              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13904              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13905              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13906              		.file 30 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13907              		.file 31 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13908              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13909              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13910              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13911              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13912              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13913              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13914              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13915              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13916              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13917              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13918              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13919              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13920              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13921              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13922              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13923              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13924              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13925              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13926              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13927              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13928              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13929              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13930              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13931              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13932              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13933              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13934              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13935              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13936              		.file 60 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13937              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13938              		.file 62 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13939              		.file 63 "../libdaisy/src/daisy_core.h"
 13940              		.file 64 "../libdaisy/src/per/tim.h"
 13941              		.file 65 "../libdaisy/src/per/sai.h"
 13942              		.file 66 "../libdaisy/src/util/wav_format.h"
 13943              		.file 67 "../libdaisy/src/per/qspi.h"
 13944              		.file 68 "../libdaisy/src/per/gpio.h"
 13945              		.file 69 "../libdaisy/src/dev/sdram.h"
 13946              		.file 70 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 400


 13947              		.file 71 "<built-in>"
 13948              		.file 72 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13949              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13950              		.file 74 "../libdaisy/src/util/oled_fonts.h"
 13951              		.file 75 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13952              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13953              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13954              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13955              		.file 79 "../libdaisy/src/util/sd_diskio.h"
 13956              		.file 80 "../libdaisy/src/sys/fatfs.h"
 13957              		.file 81 "../DaisySP/Source/Control/adenv.h"
 13958              		.file 82 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13959              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13960              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13961              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13962              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13963              		.file 87 "QSPI_Settings.h"
 13964              		.file 88 "scale.h"
 13965              		.file 89 "constants.h"
 13966              		.file 90 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 401


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:303    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:337    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:376    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:401    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:426    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:434    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:998    .text._Z10InitDelaysf:000000000000018c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13899  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13895  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13891  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13887  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1024   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1032   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1057   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1063   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1071   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1096   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 402


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1102   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1110   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1135   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1141   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1149   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1567   .text._Z16Update_feedbackLv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1595   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1603   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1628   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1634   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:1642   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2064   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2092   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2100   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2125   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2131   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2139   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2611   .text._Z13Update_drywetv:00000000000001f0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2647   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2655   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2680   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2686   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:2694   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3118   .text._Z12Update_widthv:0000000000000180 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3143   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3151   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3477   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3496   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3504   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3802   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3824   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3832   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3862   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3870   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:3878   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4032   .text._Z10Update_Modv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4044   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4052   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4163   .text._Z11UpdateClockv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4178   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4186   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4258   .text._Z19Update_BaseTempoLEDv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4267   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4275   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 _Z11SetTempoDivfP9TempoDivs
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4495   .text._Z11SetTempoDivfP9TempoDivs:0000000000000108 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4512   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:4520   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5032   .text._Z17Update_DelayTimeRv:00000000000001dc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5057   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5065   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5692   .text._Z17Update_DelayTimeLv:0000000000000224 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5721   .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5729   .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5759   .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5764   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:5772   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:6469   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 403


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:6508   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:6516   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7394   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7428   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7798   .text.startup.main:00000000000005b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8489   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7816   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7824   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7886   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7897   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:7905   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8008   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8020   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8028   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8455   .text._Z14Update_Buttonsv:00000000000001b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8482   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8601   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8616   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8645   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:8656   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:9792   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:9848   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:10474  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:10496  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11251  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11288  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11613  .text._ZL13AudioCallbackPfS_j:0000000000000ca4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11624  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11632  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11666  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11674  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11721  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11726  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11734  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11818  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11823  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11831  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11921  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11926  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:11933  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12843  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000258 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12917  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12969  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12976  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12983  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13050  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13043  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13036  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13806  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13844  .data.delayR_flag:0000000000000000 delayR_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13838  .data.delayL_flag:0000000000000000 delayL_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13015  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12988  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13799  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13812  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13818  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13793  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 404


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13009  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13744  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13738  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13786  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13832  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13858  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13751  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13851  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13690  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13684  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13779  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13772  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13765  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13758  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13718  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13711  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13825  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13057  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13029  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13022  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12995  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13002  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13732  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13725  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13704  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13697  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12965  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12972  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12979  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12989  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12991  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:12998  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13005  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13016  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13018  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13025  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13032  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13039  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13046  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13053  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13060  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13064  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13067  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13071  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13074  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13078  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13081  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13085  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13088  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13092  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13095  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13099  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13102  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13106  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13109  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13113  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13116  .bss._ZL10LPF_RXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 405


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13120  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13123  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13127  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13130  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13134  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13137  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13141  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13144  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13148  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13151  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13155  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13158  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13162  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13165  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13169  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13172  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13176  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13179  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13183  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13186  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13190  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13193  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13197  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13200  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13204  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13207  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13211  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13214  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13218  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13221  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13225  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13228  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13232  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13235  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13239  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13242  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13246  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13249  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13253  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13256  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13260  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13263  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13267  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13270  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13274  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13277  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13281  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13284  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13288  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13291  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13295  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13298  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13302  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13305  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13309  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 _ZZ11UpdateClockvE10divCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13312  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13316  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 406


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13319  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13323  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13329  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13330  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13335  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13336  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13341  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13342  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13344  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13348  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13354  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13355  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13357  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13361  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13364  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13368  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13374  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13375  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13377  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13381  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13387  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13388  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13390  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13394  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13397  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13401  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13404  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13408  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13411  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13415  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13418  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13422  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13425  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13429  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13435  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13436  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13441  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13442  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13447  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13448  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13450  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13454  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13457  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13461  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13464  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13468  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13474  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13475  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13480  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13481  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13486  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13487  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13489  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13493  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13496  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13500  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13503  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 407


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13507  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13513  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13514  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13519  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13520  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13522  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13526  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13532  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13533  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13535  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13539  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13542  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13546  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13549  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13553  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13559  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13560  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13565  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13566  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13568  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13572  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13578  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13579  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13581  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13585  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13588  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13592  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13595  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13599  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13605  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13606  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13611  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13612  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13617  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13618  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13620  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13624  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13630  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13631  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13633  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13637  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13640  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13644  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13650  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13651  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13656  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13657  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13659  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13663  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13666  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13670  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13673  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13677  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13680  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13687  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13693  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13700  .bss.delayR:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 408


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13707  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13714  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13721  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13728  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13739  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13745  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13747  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13754  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13761  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13768  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13775  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13782  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13789  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13800  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13802  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13813  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13819  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13821  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13828  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13847  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13854  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13861  .rodata.CSWTCH.335:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13865  .rodata.CSWTCH.335:0000000000000000 CSWTCH.335
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13870  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13874  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s:13884  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZN10DelayMulti12SetDelayTimeEf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_Z5scalefff9CurveType
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN10DelayMulti13SetModulationERKf
_ZN5daisy6Switch8DebounceEv
_ZN8TempoLED10resetPhaseEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccnpFQzz.s 			page 409


_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti16SetDelayTime_potEfb
_ZN8Taptempo11setTapRatioEf
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
